#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 (237,292) (237,292) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 (237,292) (237,292) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 (237,292) (237,292) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 (237,292) (237,292) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 132 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 239 132 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 50 310 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 211 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 50 (5,322) 171 77 (23,364) 52 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 50 (100,106) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 50 (5,322) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 50 (5,322) 171 77 (23,364) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (153,158,234,280) (153,158,234,280) 18 184 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
84 1 234 2 320 1 373 3 153 2 181 1 280 1 188 1 216 1 141 1 116 2 202 1 158 3 
226 1 1 1 292 1 47 1 18 1 176 1 133 1 84 1 276 1 234 2 373 6 280 4 153 2 237 1 181 2 297 1 216 2 188 2 168 1 141 1 239 1 116 2 66 1 158 7 
226 1 1 1 292 1 47 1 18 1 176 1 133 1 84 1 276 1 234 2 373 6 280 4 153 2 237 1 181 2 297 1 216 2 188 2 168 1 141 1 239 1 116 2 66 1 158 7 
226 1 1 1 292 1 47 1 18 1 176 1 133 1 84 1 276 1 234 2 373 6 280 4 153 2 237 1 181 2 297 1 216 2 188 2 168 1 141 1 239 1 116 2 66 1 158 7 
226 1 1 1 292 1 47 1 18 1 176 1 133 1 84 1 276 1 234 2 373 6 280 4 153 2 237 1 181 2 297 1 216 2 188 2 168 1 141 1 239 1 116 2 66 1 158 7 
373 1 280 1 153 1 18 1 239 1 158 2 84 1 234 1 
175 1 195 1 176 1 84 1 276 1 234 1 320 1 373 2 153 1 152 1 181 1 168 1 116 1 202 1 158 2 66 1 
1 1 35 1 47 1 132 1 18 1 84 1 234 2 373 6 153 2 280 5 181 1 188 2 216 2 141 1 239 1 116 2 158 7 
1 1 35 1 47 1 132 1 18 1 84 1 234 2 373 6 153 2 280 5 181 1 188 2 216 2 141 1 239 1 116 2 158 7 
302 1 242 1 69 1 230 1 70 1 95 1 9 1 138 1 344 1 285 1 323 1 75 1 41 1 118 1 
21 1 
21 1 207 1 70 2 11 1 95 2 75 1 332 1 338 1 
217 2 194 1 207 2 304 1 307 1 70 5 350 1 95 5 257 1 338 1 21 1 71 2 72 1 140 1 359 1 11 1 32 1 75 2 224 2 
21 1 211 1 338 1 
21 1 189 2 369 1 
9 2 242 2 138 2 344 2 230 1 93 1 323 2 118 2 
183 1 107 1 349 1 269 1 230 1 93 1 256 1 48 1 135 1 258 2 356 2 9 2 26 1 138 2 238 1 97 1 29 1 30 2 117 1 118 3 172 2 147 1 240 1 241 1 242 2 79 2 243 1 101 1 85 1 58 1 60 1 123 1 155 1 344 3 322 1 323 2 346 1 
302 1 9 1 242 1 138 1 344 1 230 1 285 1 323 1 118 1 41 1 
242 1 44 1 91 1 36 1 70 1 95 1 338 1 21 1 281 1 375 1 344 1 223 1 285 1 118 1 
21 1 9 1 242 1 44 1 281 1 138 1 36 1 375 1 344 1 70 2 95 2 285 1 323 1 118 1 338 1 
207 1 308 1 70 1 95 1 75 1 
21 1 207 1 70 2 11 1 95 2 75 1 354 1 338 1 
207 1 70 1 95 1 
9 3 242 3 138 3 344 3 93 1 323 1 352 1 118 3 
302 1 9 1 242 1 138 1 344 1 285 1 118 1 
9 1 242 1 138 1 219 1 344 1 285 1 323 1 103 1 118 1 
44 1 107 1 349 1 269 1 230 1 93 1 256 1 70 1 48 1 95 1 352 1 258 1 356 1 26 1 9 3 281 1 138 3 238 1 285 1 30 1 117 1 190 1 118 4 172 1 147 1 240 1 241 1 242 3 219 1 79 2 36 1 101 1 85 1 295 1 58 1 60 1 123 1 341 1 155 1 375 1 344 4 322 1 323 2 346 1 
278 1 9 1 242 2 138 1 344 2 93 1 223 1 352 1 118 2 
242 3 44 1 219 1 36 1 70 1 95 1 352 2 295 1 21 1 9 3 341 1 281 1 138 3 375 1 344 3 285 1 266 1 323 1 118 3 
242 2 219 1 352 1 25 1 9 2 358 1 138 2 344 2 323 1 118 2 
269 1 93 1 256 1 48 1 85 1 58 1 356 1 26 1 155 1 344 1 30 1 322 1 117 1 118 1 172 1 
318 1 269 1 93 1 48 1 85 1 58 1 356 1 26 1 155 1 344 1 30 1 117 1 118 1 106 1 172 1 
107 1 185 1 349 1 258 4 25 2 135 2 111 2 358 2 238 1 114 1 169 1 147 1 119 1 241 1 79 2 101 1 150 1 60 2 61 1 40 1 200 1 250 1 
9 1 242 1 128 1 138 1 375 1 344 1 285 1 118 1 
242 2 219 1 93 2 103 1 9 1 138 1 344 2 323 1 118 2 
111 1 358 1 25 1 
269 1 93 1 256 1 48 1 85 1 58 1 356 1 26 1 155 1 344 1 30 1 322 1 117 1 118 1 172 1 225 1 
211 1 93 1 
242 1 269 1 256 1 48 1 352 1 85 1 295 1 58 1 356 1 358 1 26 1 9 1 155 1 138 1 344 2 322 1 30 1 117 1 118 2 172 1 
242 5 219 1 93 1 352 2 295 1 278 1 9 4 138 4 344 5 223 1 170 1 323 1 361 1 118 5 
302 1 9 2 128 1 242 2 138 2 344 2 285 1 118 2 
321 1 255 1 8 1 
321 1 255 1 8 1 
321 1 255 1 8 1 
229 1 255 1 8 1 
262 1 255 2 300 1 191 1 362 1 8 2 
255 1 8 1 
255 1 8 1 
262 1 300 1 
262 1 300 1 
262 1 300 1 
156 1 255 1 8 1 
156 1 255 1 8 1 
156 1 255 1 8 1 
15 2 120 1 316 1 255 2 70 2 212 2 95 2 213 1 86 1 8 2 21 1 279 2 136 1 124 2 105 2 204 1 191 1 144 1 13 3 
228 1 209 1 229 1 93 1 255 1 70 1 212 1 95 1 8 1 9 2 187 1 279 1 136 1 138 2 282 1 99 1 118 2 13 1 335 1 242 2 124 1 344 2 105 1 125 1 
152 1 133 1 82 2 276 2 89 1 
133 1 66 1 276 1 
152 1 66 1 276 1 
152 1 268 1 82 1 133 2 276 3 89 1 
152 1 82 1 133 1 54 1 276 2 89 1 
207 1 2 2 209 1 228 1 185 1 45 2 4 1 70 5 95 5 273 1 327 1 187 1 71 1 72 1 169 1 115 1 189 3 11 1 32 2 75 4 217 1 119 1 194 3 261 1 369 1 338 1 21 2 87 2 374 1 203 1 250 1 224 1 
207 6 2 6 228 4 185 3 45 6 70 9 95 9 273 1 186 1 308 5 71 2 140 1 72 1 28 1 169 3 115 2 189 9 11 1 32 6 75 7 217 2 119 3 194 8 148 5 264 1 369 3 245 1 338 1 21 5 247 1 154 1 374 2 203 3 250 3 224 2 
2 2 228 1 185 1 45 2 4 1 70 3 95 3 71 1 140 1 169 1 115 1 189 4 75 2 32 2 217 1 119 1 194 3 261 1 369 2 338 1 21 3 87 1 374 1 203 1 250 1 224 1 
2 4 228 2 185 2 45 4 4 1 70 4 95 4 71 1 140 1 169 2 28 1 115 1 189 7 75 3 32 4 217 1 119 2 194 5 261 1 264 1 369 3 338 1 21 4 87 2 154 1 374 1 203 2 250 2 224 1 
269 1 58 1 
53 1 310 1 269 1 85 1 50 1 58 1 
293 1 
211 1 50 1 
166 1 269 1 
269 1 85 1 58 1 
129 1 269 1 
290 1 16 1 306 2 108 1 81 1 231 1 355 1 135 4 258 7 60 3 59 2 309 1 139 1 169 1 250 1 74 1 299 1 205 3 
303 1 227 4 107 2 306 3 108 1 185 4 92 2 349 2 231 2 353 1 355 2 258 37 135 19 165 1 309 2 139 2 238 2 169 5 74 1 192 1 119 4 16 1 79 4 80 1 81 5 101 2 339 1 122 1 59 3 60 18 377 1 203 4 299 1 250 5 42 4 205 8 
107 1 306 2 108 2 349 1 231 1 355 1 258 14 135 8 309 2 139 2 238 1 360 1 169 3 16 1 218 1 79 2 81 1 319 1 101 1 59 3 60 6 299 1 250 3 205 4 
16 1 306 2 108 1 81 1 231 1 355 1 135 4 258 7 60 3 59 2 309 1 139 1 169 1 250 1 74 1 299 1 205 3 
16 1 306 2 108 1 81 1 231 1 355 1 135 4 258 7 60 3 59 2 309 1 139 1 169 1 250 1 74 1 299 1 205 3 
14 1 43 1 317 2 269 1 6 1 366 1 7 1 58 1 178 1 234 1 356 1 163 2 26 1 373 1 181 2 153 1 155 1 298 2 248 1 30 1 158 1 117 1 172 1 
268 1 133 1 274 1 276 2 163 1 356 1 234 1 26 1 215 1 167 1 329 1 330 1 30 1 31 1 172 1 317 1 84 1 371 1 373 1 153 1 181 1 152 1 155 1 298 1 66 1 158 1 
268 1 133 1 274 1 276 2 163 1 356 1 234 1 26 1 280 1 167 1 329 1 116 1 330 1 30 1 143 1 31 1 172 1 317 1 84 1 371 1 320 1 373 2 153 1 181 1 152 1 155 1 298 1 202 1 66 1 158 2 
268 1 6 1 133 1 274 1 276 2 163 1 356 1 234 1 26 1 215 1 280 2 167 1 329 1 116 1 330 1 30 1 31 1 172 1 317 1 320 1 373 3 153 1 181 1 152 1 155 1 298 1 202 1 66 1 158 3 249 1 
268 1 133 1 274 1 276 2 163 1 356 1 26 1 215 1 280 2 116 1 330 1 30 1 31 1 172 1 317 1 320 1 373 2 181 1 152 1 155 1 298 1 202 1 158 2 249 1 66 1 
177 1 
44 1 91 1 269 1 271 2 95 5 7 1 51 1 328 1 281 1 189 2 11 3 285 1 146 1 289 1 194 2 242 1 17 2 58 1 338 1 21 2 246 1 296 1 155 1 344 1 201 1 22 4 345 1 301 1 207 6 210 1 160 2 70 5 110 2 356 2 71 1 26 1 72 1 30 2 117 2 312 1 32 2 118 1 172 2 76 1 217 1 36 1 365 2 366 1 39 2 369 2 179 2 374 1 375 1 223 1 224 1 
207 2 44 1 91 1 210 1 70 3 95 3 51 1 328 1 281 1 285 1 11 1 312 1 118 1 332 1 242 1 36 1 246 1 179 1 375 1 344 1 223 1 22 2 
207 1 44 1 91 1 210 1 271 1 70 3 95 3 51 1 328 1 281 1 285 1 11 1 312 1 118 1 332 1 242 1 36 1 338 1 246 1 21 1 375 1 344 1 223 1 22 3 
207 2 44 1 91 1 210 1 271 1 70 3 95 3 51 1 328 1 281 1 11 1 285 1 312 1 118 1 332 1 242 1 36 1 39 1 338 1 246 1 179 1 21 1 375 1 344 1 223 1 22 3 
207 7 44 1 91 1 210 1 160 2 271 4 70 5 351 1 95 5 110 2 51 1 71 1 328 1 281 1 72 1 11 3 285 1 311 1 312 1 32 1 118 1 332 1 76 1 217 1 194 1 242 1 220 1 36 1 365 2 17 2 38 1 19 1 369 2 39 4 338 5 296 1 21 5 246 1 179 4 375 1 344 1 223 1 22 6 224 1 
207 4 44 1 91 1 210 1 160 2 271 2 70 4 95 4 110 2 51 1 328 1 71 1 281 1 72 1 11 2 189 2 285 1 312 1 32 1 118 1 76 1 217 1 289 1 194 1 242 1 36 1 365 2 17 2 39 2 369 2 338 1 21 2 179 2 246 1 296 1 375 1 344 1 223 1 22 4 224 1 
207 4 44 1 91 1 210 1 160 2 271 2 70 4 95 4 351 1 110 2 51 1 328 1 71 1 281 1 72 1 11 2 285 1 312 1 32 1 118 1 76 1 217 1 194 1 242 1 220 1 36 1 365 2 17 2 38 1 39 2 369 2 338 1 21 1 179 2 296 1 246 1 375 1 344 1 223 1 22 4 224 1 
207 4 44 1 91 1 210 1 160 2 271 2 70 4 95 4 351 1 110 2 51 1 328 1 71 1 281 1 72 1 11 2 285 1 312 1 32 1 118 1 76 1 217 1 194 1 242 1 220 1 36 1 365 2 17 2 38 1 39 2 369 2 338 1 21 1 179 2 296 1 246 1 375 1 344 1 223 1 22 4 224 1 
251 2 207 4 44 1 91 1 210 1 160 2 131 1 271 2 70 4 95 4 110 2 51 1 328 1 71 1 281 1 72 1 11 2 189 2 285 1 312 1 32 1 118 1 76 1 217 1 194 1 291 1 242 1 36 1 121 1 38 1 56 2 39 2 338 1 21 1 179 2 246 1 375 1 344 1 223 1 22 4 224 1 
207 5 44 1 91 1 210 1 160 2 271 3 70 4 95 4 351 1 110 2 51 1 71 1 328 1 281 1 72 1 11 2 285 1 312 1 311 1 32 1 118 1 76 1 217 1 194 1 242 1 220 1 36 1 365 2 17 2 38 1 369 2 39 3 338 1 21 1 296 1 246 1 179 3 375 1 344 1 223 1 22 5 224 1 
207 5 44 1 91 1 210 1 160 2 271 3 70 4 95 4 351 1 110 2 51 1 71 1 328 1 281 1 72 1 11 2 285 1 312 1 311 1 32 1 118 1 76 1 217 1 194 1 242 1 220 1 36 1 365 2 17 2 38 1 369 2 39 3 338 1 21 1 296 1 246 1 179 3 375 1 344 1 223 1 22 5 224 1 
251 2 207 4 44 1 91 1 210 1 160 2 271 2 70 4 95 4 110 2 51 1 328 1 71 1 281 1 72 1 11 2 189 2 285 1 312 1 32 1 118 1 76 1 217 1 289 1 194 1 242 1 291 1 36 1 56 2 39 2 338 1 21 1 179 2 246 1 375 1 344 1 223 1 22 4 224 1 
241 1 107 1 79 2 185 1 349 1 81 1 101 1 150 1 25 1 258 2 135 2 111 1 358 1 238 1 200 1 250 1 205 1 147 1 
241 1 119 1 107 1 79 2 349 1 101 1 25 1 258 2 111 1 358 1 60 2 238 1 200 1 114 1 169 1 147 1 
107 1 185 1 349 1 135 2 258 4 25 2 111 2 358 2 238 1 169 1 147 1 241 1 119 1 79 2 81 1 101 1 60 2 200 1 203 1 250 1 205 1 
241 1 107 1 79 2 185 1 349 1 81 1 101 1 150 1 25 1 258 2 135 2 111 1 358 1 238 1 98 1 250 1 205 1 147 1 
241 1 119 1 107 1 79 2 349 1 101 1 25 1 258 2 111 1 358 1 60 2 238 1 114 1 169 1 98 1 147 1 
119 1 241 1 107 1 79 2 185 1 349 1 101 1 25 2 258 4 135 2 111 2 358 2 60 2 238 1 169 1 98 1 203 1 250 1 147 1 
119 1 241 1 107 1 79 2 185 1 349 1 81 1 101 1 25 2 135 2 258 4 111 2 358 2 60 2 238 1 169 1 203 1 250 1 205 1 147 1 
183 1 107 1 349 1 269 1 93 1 256 1 48 1 135 1 258 2 356 1 26 1 238 1 30 1 117 1 118 1 172 1 147 1 241 1 79 2 101 1 85 1 58 1 60 1 123 1 155 1 344 1 322 1 346 1 
183 1 107 1 349 1 269 1 93 1 48 1 135 1 258 2 356 1 26 1 238 1 30 1 117 1 118 1 287 1 172 1 147 1 241 1 318 1 79 2 101 1 85 1 58 1 60 1 123 1 155 1 344 1 106 1 
107 1 185 1 349 1 135 2 258 4 25 2 111 2 358 2 238 1 169 1 147 1 288 1 241 1 119 1 79 2 81 1 101 1 60 2 203 1 250 1 205 1 
107 1 185 1 349 1 269 1 256 1 48 1 25 2 258 4 135 2 356 1 111 2 358 2 26 1 238 1 169 1 30 1 143 1 118 1 172 1 147 1 119 1 241 1 79 2 81 1 101 1 85 1 58 1 60 2 155 1 344 1 64 1 322 1 203 1 250 1 346 1 205 1 
325 1 107 1 185 1 349 1 135 2 258 3 25 1 111 1 9 1 358 1 138 1 238 1 169 1 118 1 147 1 288 1 119 1 241 1 242 1 219 1 79 2 81 1 101 1 60 1 344 1 323 1 203 1 250 1 205 1 
183 1 253 1 107 2 24 1 326 1 349 2 269 3 94 1 352 1 7 1 356 8 135 1 258 2 9 1 26 2 215 1 138 1 238 2 98 1 143 1 30 7 117 2 118 1 172 8 147 2 241 2 242 1 79 4 243 2 101 2 366 1 58 2 60 1 123 1 155 2 63 1 343 1 200 1 344 1 
107 1 185 1 349 1 25 1 135 1 258 3 111 1 357 1 358 1 9 1 138 1 238 1 169 1 118 1 147 1 288 1 241 1 119 1 242 1 219 1 79 2 101 1 60 2 344 1 323 1 203 1 250 1 
107 1 306 1 211 1 108 1 349 1 93 2 25 1 135 3 258 6 111 1 358 1 309 1 139 1 238 1 169 1 147 1 241 1 16 1 79 2 101 1 59 2 60 3 200 1 299 1 250 1 205 2 
183 1 227 3 90 1 107 2 185 2 349 2 93 1 258 14 135 8 25 4 111 11 358 11 238 2 169 1 147 2 288 1 241 1 119 1 173 1 337 1 79 4 80 1 81 1 101 2 122 1 339 1 60 6 123 1 203 2 250 2 205 1 42 3 
183 1 107 1 349 1 269 1 93 1 256 1 48 1 352 1 356 1 25 1 258 2 135 1 26 1 9 1 138 1 238 1 30 1 117 1 118 2 172 1 33 1 147 1 288 1 241 1 242 1 55 1 79 2 101 1 85 1 295 1 57 1 58 1 60 1 123 1 155 1 344 2 322 1 225 1 
183 1 185 2 269 2 93 2 48 2 135 10 9 1 139 1 138 1 238 3 284 1 147 3 193 1 288 1 241 3 242 1 16 1 101 3 102 2 295 1 58 2 59 2 60 10 155 2 344 3 64 2 203 2 299 1 346 2 250 3 205 6 23 2 306 1 107 3 108 1 349 3 256 2 109 2 352 1 356 3 258 20 25 7 111 7 26 2 358 7 309 1 215 1 169 3 30 3 117 1 313 1 118 3 172 3 119 2 79 6 81 4 85 2 123 1 322 2 
227 4 3 1 185 7 92 1 272 1 233 1 135 27 277 1 139 1 238 3 283 1 142 1 16 1 149 1 101 3 244 1 339 2 60 23 340 3 59 1 203 7 250 8 299 1 205 9 159 1 252 1 107 3 305 1 306 1 108 1 349 3 258 50 112 1 309 1 169 7 315 1 119 6 79 6 81 8 80 2 319 1 122 2 42 4 
227 2 3 1 252 1 107 2 305 1 92 1 185 3 349 2 233 2 277 1 258 23 135 13 112 2 238 2 169 2 142 1 283 1 333 1 315 1 119 2 79 4 81 1 80 2 149 1 319 1 101 2 60 10 340 3 203 3 250 3 205 1 42 2 159 1 
227 5 3 1 185 7 92 1 272 1 233 2 135 29 277 1 139 1 238 3 283 1 142 1 333 1 16 1 149 1 294 1 101 3 339 2 60 27 340 4 59 1 203 7 250 8 299 1 205 9 159 1 252 1 107 3 305 1 306 1 108 1 349 3 258 56 112 1 309 1 169 8 315 1 119 7 79 6 81 8 80 3 319 1 122 2 42 5 
227 4 3 1 185 7 92 1 272 1 233 1 135 27 277 1 139 1 238 3 283 1 142 1 333 1 16 1 149 1 101 3 339 2 60 23 340 3 59 1 203 7 250 8 299 1 205 8 159 1 252 1 107 3 305 1 306 1 108 1 349 3 258 50 112 1 309 1 169 7 315 1 119 6 79 6 81 7 80 2 319 1 122 2 42 4 
227 4 3 1 252 1 306 1 305 1 107 2 108 1 92 1 185 7 349 2 233 1 277 1 258 52 135 27 112 1 309 1 139 1 238 2 169 8 142 1 283 1 333 1 315 1 119 7 16 1 79 4 80 2 81 8 149 1 319 1 101 2 122 2 339 2 59 1 340 4 60 25 203 7 299 1 250 8 159 1 42 4 205 9 
15 1 120 1 70 1 255 1 95 1 212 1 213 1 86 1 8 1 21 1 279 1 136 1 124 1 105 1 204 1 191 1 144 1 13 2 
15 1 120 1 70 1 255 1 95 1 212 1 213 1 86 1 8 1 21 1 279 1 136 1 124 1 105 1 204 1 191 1 144 1 13 2 
15 1 120 1 70 1 255 1 95 1 212 1 213 1 86 1 8 1 21 1 279 1 136 1 124 1 105 1 204 1 191 1 144 1 13 2 
156 1 37 1 362 1 
156 1 37 1 362 1 
321 1 221 1 
321 1 362 1 221 1 
99 1 335 1 
228 1 209 1 229 1 93 1 70 1 255 1 95 1 212 1 8 1 187 1 9 2 279 1 138 2 282 1 75 1 99 1 118 2 13 1 335 1 15 1 242 2 124 1 344 2 376 1 105 1 204 1 125 1 
279 1 120 1 124 1 105 1 255 1 212 1 67 1 191 1 144 1 8 1 
282 1 229 1 
336 1 236 1 279 1 124 1 105 1 255 1 212 1 370 1 8 1 
156 1 37 1 
321 1 362 1 221 1 
183 1 127 1 107 1 326 1 349 1 269 1 49 1 356 2 135 1 258 2 26 1 27 1 238 1 30 2 118 2 172 2 147 1 288 1 241 1 34 1 242 2 79 2 243 2 263 1 101 1 58 1 60 1 123 1 155 1 63 1 344 2 
43 1 317 1 269 1 83 1 366 1 368 1 7 1 58 1 356 1 26 1 155 1 30 1 117 1 172 1 
174 1 268 1 317 1 68 1 133 1 83 1 274 1 276 2 356 1 26 1 152 1 215 1 155 1 329 1 30 1 31 1 66 1 172 1 
174 1 268 1 317 1 68 1 133 1 83 1 274 1 276 2 356 2 26 1 152 1 215 1 155 1 329 1 30 2 143 1 31 1 66 1 172 2 
174 1 268 1 317 1 196 1 133 1 274 1 276 2 356 1 26 1 152 1 215 1 155 1 329 1 30 1 31 1 66 1 172 1 
73 1 
217 1 194 1 307 1 257 1 338 1 21 1 71 1 72 1 32 1 224 1 
119 2 194 5 2 5 185 2 45 5 109 1 369 5 21 5 169 2 189 10 203 2 250 2 32 5 334 1 
21 1 207 1 70 1 95 1 11 1 338 1 
206 1 207 4 269 1 70 3 232 1 95 3 7 1 356 4 26 1 71 2 140 1 72 1 30 4 11 2 117 2 32 2 172 4 146 1 217 2 194 2 366 1 58 1 155 1 374 2 222 1 265 2 201 1 345 2 224 2 
21 1 194 1 211 1 307 1 32 1 257 1 338 1 
207 1 70 1 95 1 71 1 72 1 189 1 11 1 32 1 217 1 194 1 17 1 365 1 369 1 338 1 296 1 21 2 224 1 
207 1 269 3 5 1 50 1 356 1 71 1 26 2 166 2 52 1 72 1 53 1 30 1 117 1 171 1 172 1 77 1 217 1 194 1 364 1 85 1 58 1 155 1 104 1 374 1 224 1 
227 1 2 5 3 1 305 1 185 2 45 5 277 1 71 1 72 1 169 2 283 1 189 6 32 4 217 1 194 6 119 2 80 1 369 3 21 3 203 2 250 2 42 1 159 1 224 1 
302 1 108 1 69 1 230 1 70 1 95 1 71 1 9 1 309 1 139 1 138 1 72 1 360 1 169 1 285 1 32 2 118 1 334 1 363 2 217 1 194 2 242 1 220 1 344 1 323 1 250 2 41 1 224 1 
107 1 349 1 230 1 269 1 93 1 256 1 48 1 258 1 356 1 9 2 26 1 138 2 238 1 30 1 117 1 118 3 172 1 147 1 240 1 241 1 242 2 79 2 101 1 85 1 58 1 60 1 123 1 155 1 344 3 322 1 323 2 346 1 
217 1 194 1 2 2 306 1 45 2 369 2 338 2 21 4 71 1 72 1 374 1 189 4 32 2 345 1 224 1 
279 1 78 1 105 1 
279 1 78 1 105 1 
279 1 78 1 105 1 
279 1 105 1 
255 1 8 1 
279 1 105 1 324 1 144 1 335 1 
279 1 105 1 145 1 
279 1 105 1 145 1 
279 1 105 1 145 1 
107 1 79 2 108 1 349 1 81 2 319 1 101 1 135 5 258 10 309 2 59 3 60 5 139 2 238 1 360 1 169 2 250 2 205 5 
107 1 79 2 185 1 349 1 81 1 319 1 101 1 135 2 258 2 238 1 250 1 205 1 
119 1 107 1 79 2 185 1 349 1 81 1 319 1 101 1 135 2 258 4 60 2 238 1 169 1 203 1 250 1 205 1 
107 3 92 1 79 6 349 3 81 1 319 1 272 1 101 3 258 3 135 1 60 2 309 1 59 1 139 1 238 3 377 1 205 2 
303 1 227 4 306 1 107 5 108 2 92 2 185 4 349 5 272 1 353 1 258 41 135 20 165 1 309 3 96 1 139 3 238 5 169 6 119 4 16 1 79 10 80 1 81 7 319 1 101 5 339 1 122 1 59 4 60 21 377 1 203 4 299 1 250 6 42 4 205 11 
227 1 306 1 305 1 107 1 108 1 349 1 258 8 135 4 309 1 139 1 238 1 169 1 16 1 79 2 80 1 319 1 101 1 60 4 59 2 250 1 299 1 42 1 205 2 
227 1 306 1 305 1 107 2 108 1 185 1 349 2 258 11 135 6 309 1 96 1 139 1 238 2 169 1 16 1 79 4 80 1 81 1 319 1 101 2 339 1 59 2 60 5 203 1 299 1 250 2 42 2 205 3 
227 1 3 1 305 1 107 2 185 2 349 2 258 12 135 6 277 1 96 1 238 2 169 2 283 1 119 2 79 4 80 1 81 1 319 1 101 2 60 6 203 2 250 2 42 1 159 1 205 1 
227 1 3 1 306 1 305 1 107 3 108 1 92 1 185 2 349 3 258 17 135 10 277 1 309 1 96 1 139 1 238 3 169 2 283 1 119 1 16 1 79 6 80 1 81 2 319 1 101 3 59 2 60 7 203 2 299 1 250 3 42 1 159 1 205 4 
227 1 306 1 305 1 107 1 108 1 349 1 258 8 135 4 309 1 139 1 238 1 169 1 16 1 79 2 80 1 319 1 101 1 60 4 59 2 250 1 299 1 42 1 205 2 
227 1 3 1 305 1 107 1 185 2 349 1 258 12 135 6 277 1 238 1 169 2 283 1 119 2 79 2 80 1 81 1 319 1 101 1 60 6 203 2 250 2 42 1 159 1 205 1 
227 1 3 1 305 1 107 3 92 1 185 2 349 3 258 11 135 7 277 1 96 1 238 3 169 1 283 1 119 1 79 6 80 1 81 1 319 1 101 3 60 4 203 2 250 2 205 1 42 1 159 1 
227 1 3 1 305 1 107 3 92 1 185 2 349 3 272 1 258 11 135 7 277 1 238 3 169 1 283 1 119 1 79 6 80 1 81 2 319 1 101 3 60 4 203 2 250 2 205 2 42 1 159 1 
16 2 108 1 81 3 258 7 135 3 60 4 309 3 59 3 139 3 169 1 299 1 250 1 205 6 
227 1 3 1 305 1 107 3 92 1 185 2 349 3 272 1 258 11 135 7 277 1 238 3 169 1 283 1 119 1 79 6 80 1 81 1 319 1 101 3 60 4 203 2 250 2 205 1 42 1 159 1 
16 1 306 1 107 2 108 1 79 4 92 1 349 2 81 1 101 2 258 8 135 4 60 4 59 2 309 1 139 1 238 2 169 1 250 1 299 1 205 3 
16 1 306 1 211 1 108 1 135 3 258 6 60 3 309 1 59 2 139 1 169 1 299 1 250 1 205 2 
119 1 107 1 79 2 185 1 349 1 101 1 135 2 258 4 60 2 96 1 238 1 169 1 203 1 250 1 
119 2 227 2 185 2 80 1 81 2 258 12 135 6 122 1 339 1 60 6 169 2 203 2 250 2 42 2 205 2 
227 2 306 1 107 2 108 2 185 2 92 2 349 2 135 14 258 30 309 4 139 4 238 2 360 1 169 4 119 2 173 1 16 1 79 4 81 5 101 2 339 1 122 1 59 5 60 16 377 1 203 2 299 1 250 4 205 10 42 2 
60 1 42 1 258 1 
227 1 258 1 135 1 
119 1 107 1 79 2 185 1 349 1 81 1 101 1 109 1 258 6 135 3 96 1 60 3 238 1 169 1 203 1 250 1 205 1 
227 1 3 1 305 1 107 1 185 2 349 1 258 12 135 6 277 1 238 1 169 2 283 1 119 2 79 2 80 1 81 1 319 1 101 1 60 6 203 2 250 2 42 1 159 1 205 1 
108 1 81 1 135 3 258 6 60 3 309 1 59 1 139 1 169 1 250 1 205 2 
16 1 107 1 92 1 79 2 349 1 81 1 101 1 135 1 258 3 59 1 309 1 60 2 139 1 238 1 377 1 299 1 205 2 
278 1 242 1 344 1 93 1 223 1 331 1 118 1 
208 1 242 1 347 1 93 1 151 1 235 1 278 1 10 1 344 1 223 1 331 1 118 1 
269 1 366 1 7 1 58 1 356 4 26 1 113 1 155 1 12 1 30 4 143 1 117 1 172 4 
193 1 46 1 269 1 270 1 85 1 58 1 356 2 20 1 26 2 155 1 265 1 182 1 30 2 172 2 
26 1 152 1 155 1 30 1 66 1 274 1 117 1 276 1 172 1 356 1 
326 1 269 1 49 1 58 1 356 2 26 1 215 1 155 1 143 1 30 2 172 2 
326 1 24 1 269 3 366 1 7 1 58 2 356 5 26 2 155 2 343 1 265 1 12 1 30 4 143 1 117 1 172 5 
326 1 24 1 269 3 366 1 7 1 58 2 356 5 26 2 137 1 155 2 265 1 12 1 30 4 143 1 117 1 172 5 
26 1 155 1 211 1 269 1 366 1 30 1 117 1 7 1 58 1 172 1 356 1 
242 1 269 1 93 1 48 1 352 1 85 1 58 1 356 1 26 1 9 1 138 1 155 1 344 2 30 1 322 1 117 1 118 2 172 1 
267 1 129 1 269 3 93 1 48 1 352 1 356 1 9 2 26 1 281 1 138 1 30 1 285 2 118 2 172 1 242 2 367 1 85 2 58 2 155 1 375 1 344 2 265 1 322 1 
267 1 129 1 269 3 93 1 48 1 352 1 356 1 9 2 26 1 281 1 138 1 30 1 285 2 118 2 172 1 242 2 367 1 85 2 58 2 155 1 375 1 344 2 265 1 106 1 
207 1 166 1 100 1 269 1 265 1 70 1 30 1 95 1 50 1 172 1 356 1 
207 1 166 1 269 1 5 1 265 1 70 1 30 1 95 1 50 1 172 1 356 1 
26 1 155 1 94 1 30 1 172 1 356 1 
253 1 243 1 24 1 326 1 46 1 269 3 94 1 85 1 58 2 356 7 20 1 164 1 26 3 215 1 155 2 343 1 53 1 143 1 30 6 117 2 172 7 
269 1 93 2 48 1 135 3 9 1 138 1 139 1 238 2 143 1 147 2 288 1 241 2 242 1 16 1 101 2 58 1 59 2 60 3 155 1 344 2 64 1 346 1 299 1 250 1 205 2 23 1 107 2 306 1 108 1 349 2 256 1 352 1 25 1 356 1 258 6 111 1 26 1 358 1 309 1 169 1 30 1 118 2 172 1 79 4 263 1 85 1 322 1 
206 1 217 1 207 1 364 1 269 1 5 1 70 1 95 1 50 1 356 1 71 1 166 1 72 1 30 1 117 1 75 1 171 1 172 1 77 1 224 1 
269 1 94 1 85 1 50 1 58 1 356 1 26 2 155 1 104 1 53 1 30 1 172 1 
242 1 269 1 93 1 48 1 352 1 85 1 58 1 356 1 26 1 9 1 138 1 155 1 344 2 30 1 117 1 118 2 106 1 172 1 
46 1 269 1 85 1 58 1 356 1 20 1 164 1 26 2 155 1 53 1 265 1 30 1 172 1 
127 1 34 1 242 1 372 1 214 1 27 1 344 1 314 1 118 1 
214 1 65 1 286 1 
214 1 348 1 93 1 314 1 372 1 
0 1 44 1 348 2 36 1 93 1 70 2 95 2 338 1 372 2 21 1 214 1 281 1 341 1 375 1 285 1 65 1 286 1 75 1 314 2 
320 1 373 1 153 1 116 1 202 1 158 1 84 1 234 1 
130 1 197 1 234 1 320 2 373 4 259 1 280 2 153 1 188 1 216 1 168 1 116 3 202 2 158 4 
320 1 35 1 373 2 280 1 153 1 157 1 116 1 202 1 158 2 84 1 275 1 234 1 
197 1 84 1 234 1 320 1 373 3 153 1 259 2 168 2 88 1 116 1 202 1 158 3 
62 1 161 1 116 2 260 2 
373 1 153 1 158 1 84 1 126 1 234 1 
320 1 1 1 373 2 280 1 153 1 116 1 202 1 158 2 84 1 234 1 
254 1 
320 1 373 1 153 1 116 1 202 1 158 1 84 1 234 1 
320 1 211 1 116 1 202 1 
320 1 373 1 153 1 116 1 202 1 158 1 234 1 
373 1 181 1 163 1 
84 1 197 1 234 1 180 1 320 1 373 3 153 1 259 1 168 2 116 1 202 1 158 3 
373 1 280 1 153 1 18 1 158 2 234 1 
373 1 153 1 216 1 116 1 133 1 134 1 66 1 158 1 84 1 276 1 234 1 
373 1 153 1 116 1 202 1 158 1 84 1 234 1 
320 1 373 1 153 1 202 2 158 1 84 1 234 1 
84 1 198 1 234 2 373 2 153 2 199 1 342 1 116 1 202 1 158 2 
320 1 1 1 373 3 280 2 153 1 216 1 188 1 47 1 116 2 202 1 158 3 84 1 234 1 
268 1 133 1 84 1 162 1 276 2 234 1 320 1 373 2 152 1 153 1 280 1 116 1 202 1 158 2 66 1 
184 1 373 1 280 1 153 1 18 1 158 2 84 1 234 1 
1 1 84 1 234 1 320 1 373 3 280 1 153 1 168 1 116 1 202 1 158 3 
216 1 188 1 130 1 116 1 
116 1 202 1 

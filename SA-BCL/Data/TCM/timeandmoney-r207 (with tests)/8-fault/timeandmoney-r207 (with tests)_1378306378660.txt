#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 85 195 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 85 195 245 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 85 195 245 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 85 195 245 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 2 263 5 356 1 266 2 4 1 318 1 362 1 270 1 9 9 189 1 271 2 190 9 273 1 35 2 171 1 39 1 303 1 251 2 347 1 149 2 212 4 253 6 213 1 174 3 114 1 176 1 118 2 182 1 
287 2 263 5 356 1 266 2 4 1 318 1 362 1 270 1 9 9 189 1 271 2 190 9 273 1 35 2 171 1 39 1 303 1 251 2 347 1 149 2 212 4 253 6 213 1 174 3 114 1 176 1 118 2 182 1 
287 2 263 6 356 1 266 2 4 1 318 1 362 1 270 1 9 10 189 1 271 2 190 10 273 1 35 2 171 1 39 1 303 1 251 2 347 1 149 2 212 5 253 7 213 1 174 4 114 1 176 1 118 2 182 1 
287 2 263 4 356 1 266 1 4 1 318 1 362 1 270 1 9 7 189 1 271 2 190 7 273 1 35 2 171 1 39 1 303 1 251 2 347 1 149 2 212 3 253 4 213 1 174 2 114 1 118 2 182 1 
287 1 263 3 171 1 266 2 4 1 251 1 149 1 253 3 212 2 174 1 114 1 318 1 176 1 9 4 190 4 118 1 273 1 35 1 
287 1 26 1 263 1 171 1 4 1 303 1 373 1 251 1 347 1 173 1 149 1 318 1 9 2 190 2 271 1 35 1 
287 2 263 2 171 1 4 1 212 1 253 1 213 1 174 1 318 1 9 3 190 3 271 1 35 2 
287 2 263 5 266 2 4 1 295 1 318 1 9 9 189 1 271 1 190 9 12 1 273 1 35 2 171 1 39 1 251 1 149 1 212 4 253 7 174 3 213 1 114 1 176 1 118 1 
287 2 263 5 266 2 4 1 295 1 318 1 9 9 189 1 271 1 190 9 12 1 273 1 35 2 171 1 39 1 251 1 149 1 212 4 253 7 174 3 213 1 114 1 176 1 118 1 
354 1 89 1 68 1 
354 1 301 2 111 1 
91 2 255 2 192 2 177 2 309 1 73 1 247 2 233 2 
91 2 0 1 238 1 185 1 333 2 95 1 156 1 359 1 78 1 160 2 130 1 57 1 79 1 80 1 202 2 365 1 82 1 247 3 36 1 370 1 192 3 16 1 278 1 302 1 326 1 40 1 148 1 233 2 150 1 255 2 151 2 215 1 350 2 177 2 309 1 73 1 74 1 
91 1 255 1 192 1 177 1 55 1 179 1 81 1 73 1 247 1 233 1 
192 1 354 1 324 1 28 1 18 1 235 1 89 1 177 1 179 1 204 1 153 1 90 1 228 1 247 1 
91 1 192 1 354 1 324 2 233 1 28 1 255 1 89 1 177 1 179 1 204 1 153 1 90 1 228 2 247 1 
43 1 351 1 324 1 228 1 142 1 
243 1 354 1 351 1 89 1 324 2 145 1 228 2 142 1 
324 1 228 1 142 1 
91 1 184 1 192 1 55 1 324 1 233 1 255 1 351 1 177 1 179 1 81 1 228 1 73 1 247 1 
354 1 
354 1 351 1 89 1 324 2 145 1 228 2 142 1 19 1 
143 1 63 1 93 1 354 1 313 1 324 5 145 1 17 2 330 1 339 2 306 1 225 1 256 2 351 2 89 1 33 1 117 1 228 5 142 2 
167 1 0 1 238 1 192 2 95 1 302 1 326 1 160 1 40 1 233 1 221 1 255 1 151 1 350 1 177 1 180 1 365 1 74 1 247 2 36 1 
309 1 68 1 
91 1 27 1 192 2 233 1 338 1 255 1 177 2 309 2 247 2 
167 1 223 1 116 1 
238 1 0 1 192 1 95 1 302 1 326 1 160 1 40 1 151 1 102 1 350 1 309 1 365 1 247 1 74 1 36 1 
91 1 192 5 233 4 7 1 338 1 221 2 255 4 235 1 177 5 178 1 180 1 309 1 244 1 247 5 
255 1 192 1 177 1 179 1 325 1 81 1 247 1 233 1 
91 1 221 1 255 3 192 3 177 3 309 1 247 3 233 3 
255 1 192 1 177 1 179 1 81 1 247 1 233 1 
91 1 338 1 255 1 27 1 192 1 177 1 179 1 247 1 233 1 
91 2 0 1 238 1 333 2 95 1 156 1 78 1 160 1 28 1 130 1 338 1 57 1 79 1 221 1 80 1 202 1 365 1 204 1 366 1 34 1 82 1 228 1 247 4 36 1 370 1 192 4 324 1 278 1 302 1 326 1 40 1 233 3 255 3 151 1 215 1 350 1 177 3 180 1 179 1 309 1 153 1 90 1 73 1 74 1 
255 1 221 1 235 1 192 2 177 2 178 1 309 1 247 2 233 1 
91 1 192 3 354 1 324 1 374 1 233 3 28 1 338 1 221 2 255 3 177 3 179 1 180 1 204 1 153 1 90 1 34 1 228 1 247 3 
91 1 338 1 255 1 167 1 192 1 177 1 247 1 233 1 
238 1 0 1 192 1 95 1 302 1 326 1 160 1 40 1 151 1 350 1 309 1 365 1 247 1 74 1 36 1 
238 1 0 1 192 1 95 1 302 1 326 1 160 1 151 1 350 1 309 1 365 1 50 1 247 1 236 1 36 1 
167 1 199 1 169 1 333 2 278 2 315 1 240 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 181 1 82 1 
325 1 
125 1 77 1 
125 1 77 1 
272 1 321 1 
272 1 321 1 
272 1 321 1 
31 1 125 1 77 1 
334 1 125 1 77 1 
58 1 272 1 125 2 77 2 328 1 321 1 
31 1 125 1 77 1 
31 1 125 1 77 1 
134 1 125 1 77 1 
134 1 125 1 77 1 
134 1 125 1 77 1 
155 1 248 1 192 2 289 1 334 1 188 1 125 1 324 1 97 1 77 1 346 1 233 2 329 1 268 1 255 2 101 1 282 1 177 2 135 1 309 1 258 1 342 1 228 1 247 2 
168 1 289 2 354 1 125 2 324 2 97 2 77 2 281 1 328 1 241 2 348 1 329 1 268 3 196 1 101 2 375 1 282 2 203 1 228 2 
118 1 251 1 149 1 
26 1 251 1 149 1 
26 1 276 1 364 1 118 2 345 1 251 3 
71 1 26 1 276 1 118 1 345 1 251 2 
26 1 276 2 118 1 345 1 251 2 
124 1 354 2 188 1 313 3 158 1 315 1 201 1 339 1 225 1 317 1 60 1 135 1 341 1 342 1 228 5 142 1 63 2 210 1 275 1 300 2 301 3 324 5 17 1 145 1 111 1 147 1 250 2 42 2 256 1 351 4 89 1 181 1 
91 1 184 1 354 1 55 1 81 1 138 1 228 2 142 1 247 1 192 1 193 1 324 2 233 1 255 1 43 1 351 2 89 1 177 1 179 1 51 1 73 1 
124 1 354 3 313 3 315 1 201 1 339 1 317 1 60 1 341 1 342 1 228 3 63 2 210 1 300 1 275 1 301 4 324 3 17 1 111 2 250 2 306 1 256 1 42 2 351 2 89 1 181 1 
124 2 354 4 313 5 315 2 201 2 339 1 317 1 60 1 341 1 342 2 228 4 166 1 63 4 210 1 300 2 275 2 301 7 324 4 17 1 111 3 250 4 306 1 331 1 42 4 256 1 351 3 89 1 181 2 352 1 
170 1 36 1 68 1 
206 1 36 1 
187 1 
0 1 365 1 36 1 
15 1 36 1 
365 1 36 1 
0 1 170 2 365 1 292 1 36 3 353 1 
237 1 144 1 275 1 277 2 157 1 278 2 359 4 126 3 214 1 23 1 202 6 181 1 216 2 61 1 260 1 25 1 75 1 
237 1 144 1 275 1 277 2 157 1 278 3 359 4 126 3 214 1 23 1 202 7 181 1 216 2 61 1 260 1 25 1 75 1 
209 1 237 1 144 1 275 1 277 2 157 1 278 2 359 4 126 3 214 1 23 1 202 6 181 1 216 2 61 1 260 1 25 1 75 1 
237 1 124 2 333 2 264 1 157 2 220 3 126 13 359 19 315 2 201 2 57 1 242 1 80 1 104 1 202 38 61 1 274 1 82 1 144 2 275 5 277 3 278 19 232 3 112 1 214 3 215 1 23 2 308 1 216 8 181 5 260 3 154 1 75 1 25 5 
333 4 157 1 98 1 126 5 359 5 57 2 80 2 242 1 202 10 61 1 82 2 144 1 275 1 84 1 277 2 278 5 214 1 215 2 23 1 181 1 216 4 260 1 25 1 75 1 
286 1 287 1 53 1 238 1 26 1 263 1 355 1 95 1 3 1 4 1 160 1 222 1 318 1 9 2 190 2 271 1 364 1 35 1 106 1 107 1 171 1 251 2 149 1 253 1 69 1 151 1 305 1 350 1 197 1 118 1 
286 1 287 1 53 1 238 1 26 1 263 1 95 1 4 1 160 1 222 1 59 1 9 3 190 3 271 1 364 1 139 1 35 1 106 1 107 1 230 1 171 1 251 2 149 1 253 2 69 1 151 1 305 1 350 1 197 1 118 1 
286 1 238 1 26 1 263 1 95 1 4 1 160 1 222 1 59 1 9 2 271 1 190 2 364 1 107 1 230 1 171 1 251 2 149 1 253 2 69 1 151 1 305 1 350 1 197 1 118 1 
238 1 287 1 249 1 107 2 95 1 358 1 326 1 160 1 222 2 161 1 151 1 226 1 350 1 9 1 271 2 190 1 197 2 365 1 310 1 312 1 139 1 36 1 35 1 
106 1 286 1 26 1 238 1 53 1 287 1 107 1 95 1 355 1 251 2 160 1 149 1 69 1 222 1 305 1 151 1 59 1 318 1 350 1 9 1 271 1 190 1 197 1 364 1 118 1 35 1 
217 1 
238 1 94 1 239 1 291 1 95 1 160 2 339 1 161 1 100 4 204 1 164 1 13 2 247 1 63 2 210 1 249 1 343 2 301 2 17 1 111 2 18 1 113 1 256 1 350 2 177 1 179 1 72 1 354 2 313 2 267 2 316 1 28 1 360 2 225 1 365 1 136 1 228 5 142 6 369 1 36 1 192 1 231 2 323 1 324 5 145 3 194 2 326 2 88 2 151 2 235 1 89 1 48 1 153 1 377 1 90 1 
192 1 323 1 324 3 145 1 267 1 316 1 28 1 19 1 18 1 100 2 235 1 177 1 179 1 153 1 204 1 136 1 164 1 90 1 377 1 228 3 142 2 247 1 
354 1 316 1 28 1 100 3 204 1 164 1 136 1 228 3 142 1 247 1 192 1 323 1 324 3 145 1 194 1 18 1 19 1 235 1 177 1 89 1 179 1 153 1 377 1 90 1 
354 1 267 1 316 1 28 1 100 3 204 1 164 1 136 1 228 3 247 1 142 2 192 1 343 1 323 1 324 3 145 1 194 1 19 1 18 1 235 1 177 1 89 1 179 1 153 1 377 1 90 1 
239 1 354 5 313 1 267 4 316 1 28 1 339 1 360 2 296 1 100 6 225 1 361 1 204 1 164 1 136 1 13 2 228 5 142 7 247 1 63 1 192 1 64 1 343 4 231 2 323 1 324 5 17 1 145 3 194 4 111 2 18 1 19 1 88 2 256 1 235 1 89 5 177 1 47 1 179 1 153 1 72 1 377 1 90 1 198 1 
239 1 339 1 100 4 204 1 164 1 13 2 247 1 63 1 343 2 301 2 17 1 111 2 18 1 256 1 113 1 177 1 179 1 72 1 354 2 313 1 267 2 316 1 28 1 360 2 225 1 136 1 228 4 142 4 192 1 323 1 231 2 324 4 145 2 194 2 88 2 235 1 89 1 153 1 90 1 377 1 
239 1 354 1 313 1 267 2 316 1 28 1 339 1 360 2 100 4 296 1 225 1 361 1 204 1 164 1 136 1 13 2 228 4 142 4 247 1 63 1 192 1 343 2 231 2 323 1 324 4 145 2 17 1 194 2 111 2 18 1 88 2 256 1 235 1 89 1 177 1 179 1 47 1 153 1 72 1 377 1 90 1 
239 1 354 1 313 1 267 2 316 1 28 1 339 1 360 2 100 4 296 1 225 1 361 1 204 1 164 1 136 1 13 2 228 4 142 4 247 1 63 1 192 1 343 2 231 2 323 1 324 4 145 2 17 1 194 2 111 2 18 1 88 2 256 1 235 1 89 1 177 1 179 1 47 1 153 1 72 1 377 1 90 1 
192 1 323 1 324 2 316 1 28 1 18 1 100 2 235 1 177 1 45 1 179 1 153 1 204 1 136 1 164 1 90 1 377 1 228 2 247 1 
239 1 354 1 313 1 267 3 316 1 28 1 339 1 360 2 296 1 100 5 225 1 361 1 204 1 164 1 136 1 13 2 228 4 247 1 142 5 63 1 192 1 343 3 231 2 323 1 324 4 145 2 17 1 194 3 111 2 18 1 88 2 256 1 235 1 89 1 177 1 179 1 47 1 153 1 72 1 377 1 90 1 198 1 
239 1 354 1 313 1 267 3 316 1 28 1 339 1 360 2 296 1 100 5 225 1 361 1 204 1 164 1 136 1 13 2 228 4 247 1 142 5 63 1 192 1 343 3 231 2 323 1 324 4 145 2 17 1 194 3 111 2 18 1 88 2 256 1 235 1 89 1 177 1 179 1 47 1 153 1 72 1 377 1 90 1 198 1 
239 1 339 1 100 4 204 1 164 1 13 2 247 1 63 1 343 2 110 2 301 2 17 1 18 1 254 1 256 1 113 1 177 1 179 1 354 1 357 2 313 1 267 2 316 1 28 1 360 2 225 1 136 1 228 4 142 4 192 1 323 1 324 4 145 2 194 2 235 1 89 1 153 1 90 1 377 1 
333 2 126 1 359 3 78 1 130 1 57 1 80 1 223 1 202 5 61 1 82 1 167 1 144 1 275 1 169 1 277 1 278 2 68 1 214 1 215 1 216 1 181 1 116 1 309 2 260 1 75 1 
124 2 333 4 96 1 156 1 337 1 126 1 220 2 359 6 201 2 78 2 130 1 57 2 80 2 223 7 202 9 162 1 82 2 167 7 37 1 322 1 275 2 278 3 232 2 280 1 215 2 179 1 309 1 116 6 284 1 25 1 
0 1 238 1 1 1 185 1 333 2 95 1 156 1 359 1 160 1 78 1 130 1 221 1 57 1 80 1 102 1 202 2 162 1 365 1 82 1 247 2 36 1 229 1 192 2 302 1 278 1 326 1 40 1 211 1 233 1 255 1 151 1 350 1 215 1 177 1 180 1 309 1 116 1 74 1 
238 1 0 1 333 4 95 1 156 1 293 1 201 1 160 1 57 2 103 1 202 5 162 1 247 2 167 2 302 1 255 1 350 1 215 2 177 1 180 1 216 1 116 1 74 1 124 1 359 3 126 1 78 2 130 2 221 1 79 1 80 2 223 2 365 1 191 1 82 2 36 1 192 2 275 1 278 2 326 1 327 1 40 1 233 1 151 1 332 1 
238 3 0 1 288 1 333 4 95 4 156 1 6 1 160 7 57 2 161 1 59 1 202 2 340 1 11 1 247 1 249 1 169 1 255 1 175 1 215 2 350 7 177 1 115 1 185 1 262 1 359 1 78 2 269 1 130 2 131 1 221 1 80 2 365 3 82 2 36 4 83 1 192 1 278 1 326 2 148 2 233 1 151 6 285 1 
91 1 124 1 333 2 126 1 359 1 315 1 201 1 78 1 338 1 130 1 57 1 223 1 80 1 202 3 162 1 82 1 247 1 167 1 192 1 275 1 108 1 278 2 233 1 255 1 215 1 177 1 216 1 181 1 116 1 
52 1 167 1 275 1 169 1 333 2 359 2 201 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 82 1 
167 1 199 1 169 1 333 2 278 2 315 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 181 1 82 1 
167 1 124 1 275 1 169 1 333 2 359 2 201 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 82 1 
52 1 167 1 275 1 333 2 359 2 201 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 340 1 82 1 
167 1 199 1 333 2 278 2 315 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 340 1 181 1 82 1 
167 1 124 1 275 1 333 2 359 2 201 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 340 1 82 1 
167 1 124 1 275 1 333 2 359 2 201 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 82 1 
0 1 238 1 185 1 333 2 95 1 156 1 359 1 160 1 78 1 130 1 79 1 57 1 80 1 202 2 365 1 82 1 247 1 36 1 192 1 302 1 278 1 326 1 40 1 151 1 350 1 215 1 309 1 74 1 
0 1 238 1 185 1 333 2 95 1 156 1 359 1 160 1 78 1 130 1 57 1 80 1 202 2 365 1 82 1 141 1 247 1 36 1 192 1 302 1 278 1 326 1 151 1 350 1 215 1 309 1 50 1 236 1 
167 1 124 1 275 1 333 2 359 2 201 1 78 1 130 1 57 1 223 1 80 1 215 1 202 2 162 1 82 1 
0 1 238 1 124 1 333 2 95 1 3 1 359 2 201 1 160 1 78 1 130 1 79 1 57 1 223 1 80 1 103 1 202 2 365 1 82 1 247 1 36 1 167 1 275 1 192 1 302 1 40 1 151 1 350 1 215 1 74 1 
91 1 124 1 333 2 335 1 126 1 359 2 201 1 78 1 338 1 130 1 57 1 80 1 223 1 202 2 162 1 82 1 247 1 167 1 192 1 275 1 233 1 255 1 215 1 177 1 116 1 25 1 
124 3 2 1 333 4 219 1 337 1 220 2 98 1 359 9 126 6 315 3 201 3 5 1 57 2 80 2 319 2 32 1 104 1 202 19 245 1 82 2 275 3 38 2 278 10 232 1 195 1 152 1 215 2 216 3 181 3 25 3 
124 2 333 6 219 1 126 2 98 1 359 10 220 2 159 1 315 1 56 1 201 2 5 2 57 3 242 2 80 3 319 2 202 18 104 2 245 1 137 1 367 1 82 3 275 2 109 1 85 1 278 8 232 2 195 2 215 3 216 1 181 1 25 1 
124 4 333 6 219 1 337 1 159 1 220 4 98 1 359 15 126 5 315 4 56 1 201 4 5 2 57 3 242 1 80 3 319 3 32 1 104 3 202 32 137 1 245 1 367 1 82 3 275 4 109 1 38 1 85 1 278 17 232 3 195 1 349 1 152 1 215 3 216 2 181 4 25 3 
124 4 333 8 219 1 337 1 159 1 220 4 98 1 359 16 126 6 315 3 56 1 201 4 5 2 57 4 242 2 80 4 319 3 32 1 104 3 202 31 137 1 245 1 367 1 82 4 275 4 109 1 38 1 85 1 278 15 232 3 195 1 349 1 152 1 215 4 216 3 181 3 25 3 
124 6 333 4 219 1 337 2 159 1 220 4 98 1 359 23 126 12 315 5 56 1 201 6 5 1 57 2 242 1 80 2 319 2 104 2 202 43 137 1 245 1 61 1 367 1 82 2 144 1 275 7 277 1 109 1 85 1 278 20 232 4 280 2 195 1 214 1 215 2 216 7 181 6 260 1 75 1 25 5 
101 1 289 1 282 1 125 1 203 1 97 1 77 1 299 1 281 1 328 1 
248 1 334 1 
101 1 289 1 282 1 336 1 125 1 97 1 77 1 259 1 67 1 
31 1 46 1 
234 1 58 1 134 1 
168 1 289 1 354 1 125 1 324 1 97 1 77 1 281 1 328 1 241 1 348 1 329 1 268 2 196 1 101 1 282 1 203 1 228 1 
168 1 289 1 354 1 125 1 324 1 97 1 77 1 281 1 328 1 241 1 348 1 329 1 268 2 196 1 101 1 282 1 203 1 228 1 
168 1 289 1 354 1 125 1 324 1 97 1 77 1 281 1 328 1 241 1 348 1 329 1 268 2 196 1 101 1 282 1 203 1 228 1 
58 1 31 1 46 1 
58 1 31 1 46 1 
234 1 134 1 
234 1 58 1 134 1 
155 1 258 1 
155 1 289 1 188 1 334 1 125 1 97 1 77 1 241 1 268 1 101 1 135 1 342 1 228 1 247 2 248 1 192 2 324 1 346 1 233 2 196 1 255 2 351 1 282 1 177 2 309 1 24 1 258 1 
238 1 185 1 333 2 95 1 156 1 265 1 359 1 160 2 78 1 130 1 57 1 131 1 80 1 30 1 202 2 162 1 365 1 82 1 247 2 140 1 36 1 192 2 344 1 278 1 148 2 151 2 175 1 350 2 215 1 177 2 121 1 
106 1 26 1 238 1 95 1 3 1 251 2 160 2 149 1 304 1 69 1 222 1 151 2 20 1 305 1 59 1 22 1 350 2 364 1 118 1 
106 1 26 1 238 1 95 1 251 2 160 1 149 1 69 1 222 1 151 1 305 1 59 1 22 1 350 1 364 1 118 1 205 1 
238 1 249 1 95 1 358 1 326 1 160 1 222 1 151 1 20 1 161 1 350 1 365 1 36 1 208 1 
106 1 26 1 238 1 95 1 251 2 160 1 149 1 304 1 69 1 222 1 151 1 20 1 305 1 59 1 22 1 350 1 364 1 118 1 
183 1 
330 1 63 1 354 1 89 1 313 1 117 1 68 1 
354 2 313 1 339 1 225 1 228 1 142 1 63 1 301 1 231 1 324 1 17 1 145 1 111 1 88 1 256 1 89 1 72 1 
0 1 238 1 124 1 354 3 95 2 313 4 293 1 314 1 292 1 315 1 201 1 128 1 160 1 339 2 225 2 163 1 365 1 227 1 206 2 228 2 142 2 36 4 63 3 210 1 275 1 301 6 170 1 324 2 145 1 17 2 111 3 250 3 326 1 252 1 70 1 151 1 42 3 21 1 256 2 350 1 181 1 90 1 
124 2 186 1 354 5 291 1 313 8 220 1 159 1 315 2 56 1 201 2 339 2 225 2 104 1 137 1 367 1 228 1 142 1 63 5 210 1 275 2 109 1 301 6 324 1 145 1 17 2 86 1 111 3 232 1 250 5 307 1 42 5 256 2 44 2 89 2 181 2 
91 1 184 1 55 1 313 2 339 1 296 1 225 1 81 1 274 1 228 1 247 1 144 1 63 2 192 1 275 2 324 1 17 1 233 1 214 1 255 1 307 1 256 1 44 2 177 1 179 1 181 1 260 1 73 1 
63 1 354 1 313 1 17 1 339 1 330 1 225 1 256 1 89 1 117 1 
63 2 124 1 275 1 354 2 301 4 313 2 315 1 201 1 111 2 250 2 42 2 181 1 
354 1 89 1 324 1 145 1 228 1 142 1 
238 1 95 1 291 2 313 2 76 1 160 4 129 1 339 2 161 1 225 1 365 1 105 1 228 3 369 1 142 4 36 1 63 2 210 2 249 1 324 3 17 2 145 2 326 2 172 2 306 1 151 4 256 2 350 4 48 1 
91 2 238 1 0 1 333 2 95 1 156 1 160 1 78 1 130 1 57 1 79 1 80 1 202 1 365 1 82 1 247 3 36 1 370 1 192 3 278 1 302 1 326 1 40 1 233 2 255 2 151 1 215 1 350 1 177 2 309 1 73 1 74 1 
63 1 210 1 354 2 301 2 291 1 313 1 17 1 111 1 250 1 339 1 225 1 256 1 89 1 
101 1 282 1 146 1 
101 1 282 1 283 1 258 1 281 1 
101 1 282 1 146 1 
101 1 282 1 146 1 
8 1 101 1 282 1 
8 1 101 1 282 1 
8 1 101 1 282 1 
101 1 282 1 
125 1 77 1 
144 1 275 1 277 1 333 4 278 3 359 4 126 2 57 2 214 1 80 2 242 1 215 2 202 7 181 1 216 1 61 1 260 1 82 2 25 1 75 1 
214 1 144 1 275 1 277 1 202 5 181 1 216 1 278 2 359 3 126 1 61 1 260 1 75 1 68 1 
124 1 275 1 333 2 278 2 315 1 126 2 359 2 201 1 57 1 80 1 215 1 202 4 216 1 181 1 165 1 82 1 25 1 
124 1 275 1 278 4 337 1 315 1 220 2 359 3 126 2 232 1 201 1 104 1 202 7 216 1 181 1 25 1 
124 2 333 4 337 1 126 8 359 11 220 2 315 2 201 2 57 2 242 2 80 2 297 1 202 22 61 1 82 2 144 1 37 1 275 3 277 1 278 11 232 2 280 1 214 2 215 2 181 3 216 4 260 2 75 1 25 4 
202 1 278 1 220 1 
202 1 359 1 232 1 
124 1 275 1 333 2 293 1 278 3 359 3 126 3 315 1 201 1 57 1 80 1 215 1 202 6 181 1 216 2 165 1 82 1 25 1 
124 2 333 2 220 1 159 1 98 1 359 6 315 2 126 2 56 1 201 2 57 1 80 1 202 12 104 1 137 1 82 1 367 1 275 2 109 1 278 6 232 1 215 1 181 2 216 1 25 1 
144 1 275 1 278 3 359 3 126 2 214 1 202 6 181 1 216 1 260 1 25 1 
333 2 278 2 359 1 126 2 214 1 57 1 297 1 242 1 80 1 215 1 202 3 216 1 61 1 260 1 82 1 25 1 75 1 
144 1 275 2 333 2 278 5 98 1 126 5 359 5 57 1 214 2 80 1 215 1 202 10 216 3 181 2 274 1 260 2 82 1 25 2 
275 1 333 2 98 1 359 2 126 1 201 1 57 1 80 1 215 1 202 2 82 1 25 1 
124 1 275 1 333 2 278 2 315 1 126 2 98 1 359 2 201 1 57 1 80 1 215 1 202 4 216 1 181 1 82 1 25 1 
333 6 278 2 98 1 126 2 359 1 57 3 214 1 242 1 297 1 152 1 80 3 215 3 202 3 216 1 260 1 82 3 25 1 
124 3 333 10 264 1 337 1 220 4 98 1 359 16 126 11 315 3 201 3 57 5 297 1 242 2 80 5 104 1 202 33 165 1 61 1 82 5 144 2 275 5 277 1 278 17 232 3 112 1 214 3 152 1 215 5 308 1 181 5 216 6 260 3 75 1 25 5 
333 2 220 1 159 1 98 1 359 4 126 1 57 1 80 1 202 7 104 1 61 1 82 1 144 1 275 1 277 1 278 3 232 1 214 1 215 1 181 1 216 1 260 1 75 1 
124 1 333 4 337 1 220 2 159 1 98 1 359 6 126 2 201 1 57 2 80 2 202 10 104 1 165 1 61 1 82 2 144 1 275 2 277 1 278 4 232 1 214 1 215 2 181 1 216 1 260 1 75 1 25 1 
124 2 333 6 220 1 159 1 98 1 359 9 315 2 126 3 56 1 201 2 57 3 80 3 242 1 202 18 104 1 137 1 165 1 61 1 82 3 367 1 144 1 275 3 277 1 109 1 278 9 232 1 214 1 215 3 181 3 216 2 260 1 75 1 25 1 
124 2 333 6 220 1 159 1 98 1 359 10 315 1 126 4 56 1 201 2 57 3 242 1 80 3 202 16 104 1 137 1 165 1 61 1 82 3 367 1 144 1 275 3 277 1 109 1 278 6 232 1 214 1 215 3 181 2 216 2 260 1 75 1 25 2 
333 2 220 1 159 1 98 1 359 4 126 1 57 1 80 1 202 7 104 1 61 1 82 1 144 1 275 1 277 1 278 3 232 1 214 1 215 1 181 1 216 1 260 1 75 1 
124 2 333 2 220 1 159 1 98 1 359 6 315 2 126 2 56 1 201 2 57 1 80 1 202 12 104 1 137 1 82 1 367 1 275 2 109 1 278 6 232 1 215 1 181 2 216 1 25 1 
124 2 333 8 220 1 159 1 98 1 359 10 315 1 126 4 56 1 201 2 57 4 80 4 242 2 202 17 104 1 137 1 165 1 61 1 367 1 82 4 144 1 275 3 277 1 109 1 278 7 232 1 214 1 215 4 181 2 216 2 260 1 75 1 25 2 
124 3 333 8 220 1 159 1 98 1 359 9 315 2 126 6 56 1 201 3 57 4 80 4 242 2 202 16 104 1 137 1 367 1 82 4 275 3 109 1 278 7 232 1 152 1 215 4 181 2 216 3 25 3 
144 1 275 1 278 4 126 6 359 3 214 3 202 7 181 1 216 3 61 1 260 3 75 2 25 3 
124 2 333 8 220 1 159 1 98 1 359 10 315 1 126 3 56 1 201 2 57 4 80 4 242 2 202 17 104 1 137 1 61 1 367 1 82 4 144 1 275 3 277 1 109 1 278 7 232 1 214 1 152 1 215 4 181 2 216 2 260 1 75 1 25 1 
192 1 235 1 177 1 178 1 363 1 309 1 247 1 
192 1 29 1 235 1 177 1 376 1 363 1 178 1 309 1 10 1 119 1 320 1 247 1 
161 1 151 1 238 1 249 1 350 1 95 1 365 1 326 1 160 1 36 1 68 1 
0 1 238 1 192 2 95 1 302 1 326 1 160 1 233 1 221 1 255 1 151 1 350 1 177 1 309 1 365 1 247 2 74 1 36 1 
238 1 0 2 95 1 160 1 28 1 221 1 365 2 247 2 36 3 192 2 15 1 302 1 66 1 172 1 233 1 255 2 151 1 350 1 177 2 179 1 309 1 153 1 74 1 
238 1 0 2 95 1 160 2 28 1 221 1 365 2 207 1 247 2 36 3 192 2 15 1 302 1 66 1 172 1 233 1 255 2 151 2 350 2 177 2 179 1 309 1 153 1 236 1 
238 1 0 1 261 1 354 1 95 1 160 3 365 1 207 1 206 1 228 2 142 1 36 4 15 1 170 1 324 2 66 1 326 1 172 1 151 3 350 3 89 1 90 1 120 1 
0 1 238 1 15 1 354 1 95 1 170 1 324 2 66 1 314 1 326 1 160 3 172 1 151 3 350 3 89 1 365 1 207 1 206 1 90 1 228 2 142 1 36 4 
151 1 238 1 83 1 350 1 95 1 160 1 
83 1 0 1 288 1 238 2 262 1 95 3 292 1 326 2 6 1 160 6 148 1 151 5 175 1 59 1 350 6 132 1 115 1 365 2 285 1 36 3 
238 1 0 1 333 4 95 1 3 1 160 1 57 2 103 1 202 5 162 1 61 1 247 2 167 1 302 1 255 1 214 1 350 1 215 2 177 1 216 1 181 1 116 1 309 2 260 1 74 1 75 1 265 1 126 1 359 3 78 2 130 2 79 1 221 1 80 2 223 1 365 1 82 2 36 1 144 1 192 2 275 1 277 1 278 2 40 1 327 1 233 1 151 1 
354 1 313 1 314 1 128 1 160 1 339 2 225 2 227 1 105 1 206 1 228 3 142 2 36 2 63 1 170 1 324 3 17 2 145 1 326 1 330 1 70 1 151 1 256 2 351 1 350 1 89 1 117 1 90 1 
83 1 0 1 238 1 95 2 3 1 170 1 292 1 160 2 252 1 151 2 350 2 365 1 36 2 
238 1 249 1 95 1 3 1 326 1 160 4 294 1 151 4 161 1 350 4 365 1 207 1 36 1 
0 1 288 1 238 1 262 1 95 2 160 2 172 1 269 1 151 2 350 2 365 1 11 1 311 1 36 1 
305 1 151 1 26 1 238 1 350 1 95 1 326 1 251 1 160 1 149 1 
238 1 95 1 3 1 160 2 151 2 59 1 175 1 350 2 365 1 121 1 36 1 
238 2 249 1 95 2 3 1 326 1 160 5 6 1 172 1 294 1 161 1 151 4 175 1 350 5 115 1 365 2 36 3 
238 2 249 1 95 2 3 1 326 1 160 5 279 1 6 1 172 1 294 1 161 1 151 4 175 1 350 5 365 2 36 3 
0 1 238 1 192 2 95 1 302 1 326 1 160 1 233 1 221 1 255 1 151 1 350 1 177 1 309 1 365 1 247 2 236 1 36 1 
0 1 288 1 238 1 262 1 95 2 292 1 160 1 172 1 151 1 350 1 132 1 365 1 36 1 
99 1 92 1 309 1 49 1 368 1 
92 2 354 1 324 2 28 1 41 1 99 2 224 1 257 1 351 1 89 1 179 1 309 1 153 1 204 1 49 1 90 1 34 1 228 2 368 2 
92 1 192 1 344 1 99 1 30 1 177 1 49 1 140 1 247 1 
224 1 49 1 41 1 
263 1 171 1 4 1 68 1 
287 1 263 1 9 1 190 1 171 1 4 1 35 1 
107 1 271 1 190 1 
287 1 263 1 290 1 171 1 371 1 4 1 372 1 347 2 318 1 9 3 190 3 35 1 
253 1 287 1 263 1 9 2 190 2 171 1 266 1 4 1 35 1 
287 1 263 1 251 1 149 1 212 1 318 1 9 1 190 1 118 1 273 1 35 1 
287 1 263 1 318 1 9 1 190 1 4 1 35 1 
287 1 318 1 9 1 190 1 171 1 4 2 35 1 
123 1 287 2 263 1 4 1 127 1 318 1 9 2 190 2 298 1 35 2 
287 1 263 2 171 1 39 1 4 1 253 2 212 1 174 1 318 1 9 3 189 1 190 3 35 1 
26 1 287 1 263 1 171 1 4 1 251 2 149 1 253 1 318 1 9 2 190 2 364 1 118 1 246 1 35 1 
287 2 263 2 171 1 266 1 4 1 253 2 212 1 174 1 318 1 9 4 176 1 190 4 35 2 
287 1 263 1 318 1 9 1 190 1 171 1 4 1 35 1 
122 1 287 1 290 1 263 3 171 2 371 1 4 2 347 1 253 2 212 1 174 1 9 4 190 4 35 1 
287 1 263 1 218 1 171 1 4 1 253 1 295 1 318 1 9 2 190 2 14 1 35 1 
287 1 54 1 263 1 290 2 171 1 371 1 4 1 347 2 318 1 9 3 190 3 35 1 
87 2 263 2 65 1 200 1 
287 1 318 1 133 1 9 1 190 1 35 1 
253 1 287 1 263 1 318 1 189 1 9 2 190 2 171 1 4 1 35 1 
62 1 
287 1 263 1 318 1 9 1 190 1 171 1 4 1 35 1 
253 1 287 1 263 1 318 1 189 1 9 3 190 3 171 1 4 1 347 1 35 1 
122 1 212 1 174 1 263 1 
263 1 4 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) (8,218) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) (8,218) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (18,66,96,212) (18,66,96,212) (18,66,96,212) 78 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
143 1 207 1 74 1 
174 2 233 1 74 1 
239 2 335 2 41 2 141 1 38 2 31 2 128 1 105 2 
286 1 203 1 81 1 17 1 109 1 213 2 330 1 177 1 310 1 128 1 239 2 270 1 23 1 335 2 90 1 38 3 274 1 26 2 138 1 69 1 340 1 94 2 41 3 28 1 141 1 304 1 305 1 75 1 194 1 256 1 342 2 53 1 14 1 280 2 31 2 105 2 33 1 
239 1 341 1 198 1 335 1 41 1 38 1 31 1 128 1 105 1 267 1 
41 1 265 1 74 1 267 1 215 1 48 1 207 1 134 1 297 1 31 1 38 1 65 1 298 1 248 1 
41 1 265 1 74 1 267 1 215 1 239 1 207 1 335 1 297 2 31 1 38 1 65 1 298 2 105 1 248 1 
158 1 91 1 297 1 298 1 123 1 
207 1 158 1 297 2 257 1 298 2 74 1 87 1 123 1 
158 1 297 1 298 1 
41 1 128 1 13 1 267 1 239 1 341 1 198 1 335 1 297 1 298 1 31 1 38 1 105 1 123 1 
74 1 
207 1 158 1 297 2 298 2 344 1 74 1 87 1 123 1 
74 1 193 1 114 2 221 1 87 1 29 1 207 1 158 2 279 1 217 1 296 1 225 1 297 5 298 5 226 1 299 2 163 2 15 1 123 2 
143 1 141 1 
41 2 141 2 85 1 239 1 335 1 37 1 31 2 38 2 105 1 
241 1 273 1 
286 1 340 1 109 1 94 1 41 1 177 1 141 1 46 1 270 1 342 1 23 1 53 1 90 1 280 1 38 1 274 1 
286 1 109 1 340 1 94 1 41 2 331 1 177 1 84 1 270 1 342 1 23 1 335 1 53 1 90 1 280 1 31 1 38 2 274 1 136 1 105 1 
239 1 335 3 41 3 141 1 38 3 31 3 136 1 105 3 
341 1 335 1 41 1 38 1 31 1 105 1 267 1 
239 1 335 1 41 1 37 1 38 1 31 1 105 1 267 1 85 1 
286 1 203 1 17 1 109 1 213 1 330 1 177 1 265 1 84 1 128 1 267 1 215 1 332 1 239 2 270 1 23 1 335 3 90 1 37 1 297 1 38 4 65 1 298 1 274 1 136 1 26 2 248 1 138 1 340 1 69 1 94 1 41 4 28 1 141 1 304 1 305 1 75 1 194 1 342 1 53 1 104 1 280 1 31 3 105 3 
58 1 335 1 41 2 134 1 141 1 38 2 31 2 105 1 136 1 
41 3 265 1 84 1 74 1 267 1 268 1 215 1 332 1 239 1 335 3 37 1 297 1 298 1 31 3 38 3 65 1 136 2 105 3 248 1 
41 2 331 1 239 1 241 1 335 2 37 1 31 2 38 2 136 1 105 2 
286 1 340 1 109 1 94 1 41 1 177 1 141 1 270 1 342 1 23 1 53 1 90 1 280 1 38 1 274 1 
286 1 109 1 94 1 41 1 177 1 141 1 223 1 270 1 342 1 23 1 343 1 53 1 280 1 38 1 274 1 
203 1 81 2 17 2 82 1 213 4 330 1 234 1 183 1 241 2 271 1 117 1 64 1 273 2 26 2 250 1 10 1 28 1 27 1 304 1 75 1 194 1 57 1 108 1 
49 1 335 1 41 1 65 1 38 1 31 1 105 1 267 1 
58 1 41 5 141 1 84 1 206 1 239 1 335 4 134 1 37 1 31 5 38 5 136 2 105 4 300 1 
49 1 341 1 335 2 41 2 38 2 31 2 105 2 267 1 
338 1 347 1 
338 1 347 1 
315 1 2 1 
315 1 2 1 
315 1 2 1 
152 1 338 1 347 1 
152 1 338 1 347 1 
338 1 290 1 347 1 
275 1 98 1 315 1 2 1 338 2 347 2 
152 1 338 1 347 1 
281 1 338 1 347 1 
281 1 338 1 347 1 
281 1 338 1 347 1 
80 2 275 1 95 2 309 2 254 1 165 1 192 1 74 1 220 2 157 1 313 1 224 1 36 3 185 2 297 2 298 2 245 1 338 2 347 2 
309 1 157 1 290 1 269 1 335 2 36 1 185 1 297 1 298 1 38 2 338 1 164 1 41 2 95 1 42 1 141 1 220 1 31 2 105 2 56 1 79 1 347 1 106 1 107 1 
302 1 258 1 306 1 
302 1 126 1 258 1 
259 1 103 1 126 1 244 1 258 3 306 2 
169 1 103 1 126 1 244 1 258 2 306 1 
103 2 126 1 244 1 258 2 306 1 
34 1 150 2 175 1 174 3 82 1 233 1 329 1 114 1 237 1 87 1 292 2 207 1 271 1 132 1 117 1 158 1 64 1 296 2 297 5 187 1 188 1 298 5 163 1 299 1 164 1 42 1 74 2 193 3 277 2 15 1 106 1 123 4 
230 1 150 6 174 9 82 3 233 3 329 1 153 5 114 2 87 1 6 1 207 1 271 3 132 2 242 1 117 3 158 6 217 1 64 3 91 5 296 6 297 9 187 2 188 3 298 9 299 2 163 2 40 1 42 4 74 5 77 1 193 8 277 6 102 1 15 1 123 7 
34 1 150 2 82 1 174 4 233 2 114 1 237 1 292 1 207 1 132 1 271 1 117 1 217 1 64 1 296 2 297 3 187 1 298 3 188 1 163 1 299 1 42 1 74 3 193 3 277 2 123 2 
34 1 230 1 150 4 174 7 82 2 233 3 114 1 237 1 292 2 207 1 132 1 271 2 117 2 217 1 64 2 296 4 297 4 187 1 298 4 188 2 163 1 299 1 40 1 42 2 74 4 77 1 193 5 277 4 123 3 
143 1 101 1 23 1 
23 1 30 1 
11 1 
23 1 177 1 
101 2 23 3 177 1 211 1 274 1 321 1 
23 1 177 1 274 1 
23 1 205 1 
316 1 60 2 17 3 232 1 81 4 39 1 213 7 112 1 71 1 27 3 120 1 183 2 278 1 271 1 170 1 117 1 246 1 
316 1 60 2 17 3 232 1 81 4 39 1 213 7 112 1 71 1 27 3 120 1 183 2 278 1 271 1 170 1 117 1 246 1 
316 1 328 1 60 2 17 3 232 1 81 4 39 1 213 7 112 1 71 1 27 3 120 1 183 2 278 1 271 1 170 1 117 1 246 1 
203 1 60 3 17 15 81 16 232 2 82 3 112 1 213 31 330 1 183 5 240 4 271 4 117 4 159 1 7 3 64 3 188 3 246 5 67 1 26 2 137 1 316 2 39 1 140 1 71 2 28 1 27 10 120 1 194 1 100 1 278 2 307 1 170 1 284 1 
203 2 60 2 81 5 232 1 17 4 213 9 112 1 330 2 183 3 271 1 117 1 159 1 246 1 26 4 316 1 71 1 28 2 27 4 120 1 194 2 278 1 170 1 148 1 201 1 
78 1 212 1 18 1 96 1 
212 1 218 1 18 1 96 1 
259 1 109 1 212 2 1 1 126 1 127 1 35 1 130 1 184 1 336 1 66 2 210 2 189 1 8 1 302 1 94 1 252 1 72 1 306 1 342 1 53 1 171 1 146 1 280 1 258 2 
212 1 218 1 18 1 96 1 
78 1 212 1 18 1 96 1 
154 1 
174 2 176 2 177 1 265 1 267 1 215 1 87 3 312 1 5 4 133 2 314 1 134 1 187 1 38 1 94 2 41 1 191 2 193 2 99 2 48 1 50 1 53 1 280 2 283 2 15 1 286 2 109 1 151 2 233 2 111 1 113 1 114 1 238 1 115 1 207 1 294 1 295 1 158 6 23 1 296 2 297 5 298 5 65 1 299 1 163 1 25 1 248 1 251 1 253 1 73 1 74 2 166 2 342 2 172 1 31 1 
41 1 191 1 265 1 113 1 267 1 215 1 87 1 312 1 115 1 5 2 48 1 158 2 314 1 172 1 134 1 297 3 65 1 298 3 31 1 38 1 344 1 248 1 
265 1 113 1 267 1 215 1 312 1 87 1 5 3 115 1 207 1 158 1 134 1 314 1 297 3 38 1 298 3 65 1 248 1 41 1 74 1 166 1 48 1 172 1 31 1 344 1 
265 1 113 1 267 1 215 1 87 1 312 1 5 3 115 1 207 1 133 1 158 2 134 1 314 1 297 3 38 1 298 3 65 1 248 1 41 1 191 1 74 1 166 1 48 1 172 1 31 1 344 1 
176 2 265 1 267 1 215 1 87 3 312 1 5 6 89 1 133 4 314 1 134 1 38 1 41 1 191 4 193 1 99 2 48 1 147 1 227 1 283 2 15 1 151 2 233 2 113 1 114 1 291 1 115 1 207 5 116 1 158 7 296 1 297 5 65 1 298 5 299 1 163 1 25 1 248 1 251 1 74 5 166 4 172 1 31 1 344 1 
174 2 176 2 265 1 267 1 215 1 312 1 87 2 5 4 133 2 134 1 314 1 38 1 41 1 191 2 193 1 99 2 48 1 283 2 15 1 151 2 233 2 113 1 114 1 115 1 207 1 295 1 158 4 296 1 297 4 65 1 298 4 299 1 163 1 25 1 248 1 251 1 74 2 166 2 172 1 31 1 
151 2 176 2 233 2 265 1 113 1 267 1 215 1 114 1 87 2 312 1 5 4 115 1 207 1 89 1 116 1 133 2 158 4 134 1 314 1 296 1 297 4 38 1 298 4 65 1 163 1 299 1 25 1 248 1 251 1 41 1 191 2 74 1 193 1 166 2 99 2 48 1 172 1 147 1 31 1 283 2 15 1 
151 2 176 2 233 2 265 1 113 1 267 1 215 1 114 1 87 2 312 1 5 4 115 1 207 1 89 1 116 1 133 2 158 4 134 1 314 1 296 1 297 4 38 1 298 4 65 1 163 1 299 1 25 1 248 1 251 1 41 1 191 2 74 1 193 1 166 2 99 2 48 1 172 1 147 1 31 1 283 2 15 1 
174 2 151 2 176 2 265 1 113 1 267 1 215 1 114 1 181 1 87 2 312 1 5 4 115 1 293 1 207 1 116 1 133 2 158 4 134 1 314 1 296 1 297 4 38 1 298 4 65 1 163 1 299 1 25 1 248 1 41 1 191 2 74 1 193 1 166 2 142 1 48 1 172 1 31 1 122 2 15 1 345 2 
151 2 176 2 233 2 265 1 113 1 267 1 114 1 215 1 87 2 312 1 5 5 115 1 207 1 89 1 116 1 133 3 158 5 134 1 314 1 296 1 297 4 38 1 298 4 65 1 163 1 299 1 25 1 248 1 251 1 41 1 191 3 74 1 193 1 166 3 99 2 48 1 172 1 147 1 31 1 283 2 227 1 15 1 
151 2 176 2 233 2 265 1 113 1 267 1 114 1 215 1 87 2 312 1 5 5 115 1 207 1 89 1 116 1 133 3 158 5 134 1 314 1 296 1 297 4 38 1 298 4 65 1 163 1 299 1 25 1 248 1 251 1 41 1 191 3 74 1 193 1 166 3 99 2 48 1 172 1 147 1 31 1 283 2 227 1 15 1 
174 2 176 2 265 1 267 1 215 1 312 1 87 2 5 4 133 2 134 1 314 1 38 1 41 1 191 2 193 1 142 1 48 1 15 1 151 2 113 1 114 1 115 1 207 1 295 1 158 4 296 1 297 4 65 1 298 4 299 1 163 1 25 1 248 1 74 1 166 2 172 1 31 1 122 2 345 2 
203 1 60 1 81 3 17 3 112 1 213 6 330 1 183 2 241 1 271 1 117 1 273 1 26 2 10 1 71 1 28 1 27 2 141 2 304 1 120 1 75 1 194 1 143 1 278 1 170 1 
203 1 62 1 330 1 28 1 304 1 247 1 75 1 26 2 194 1 
286 1 203 1 109 1 17 1 81 1 213 2 177 1 330 1 84 1 270 1 241 1 23 1 335 1 90 1 38 2 274 1 136 1 247 1 26 2 340 1 94 1 41 2 70 1 28 1 141 1 304 1 255 1 45 1 46 1 75 1 305 1 194 1 342 1 53 1 280 1 31 1 105 1 33 1 
81 10 82 2 213 20 177 2 84 1 4 1 183 4 270 2 271 3 90 2 92 2 273 7 38 3 188 2 136 1 274 2 94 1 41 3 141 2 194 3 323 2 278 1 197 1 53 2 280 1 326 2 105 1 286 1 288 2 60 1 203 3 17 10 109 2 112 1 330 3 241 7 335 1 23 2 117 3 64 2 246 2 247 1 26 6 69 2 340 2 71 1 28 3 27 6 304 3 120 1 305 1 75 3 170 1 342 1 31 1 33 1 
81 1 213 2 214 1 177 3 35 1 272 1 38 1 274 1 136 1 139 1 10 1 94 7 41 1 44 1 194 2 222 1 50 1 53 4 14 2 145 1 280 6 105 1 286 2 203 2 17 1 109 3 61 1 111 1 330 2 289 1 156 1 333 1 23 4 335 1 26 4 68 1 28 2 304 2 305 1 75 2 342 7 31 1 33 1 
203 1 81 1 17 2 82 1 213 3 330 1 183 1 239 1 241 1 271 1 335 1 117 1 37 1 64 1 273 1 38 1 188 1 247 1 26 2 41 1 27 1 28 1 304 1 75 1 194 1 51 1 31 1 105 1 
203 1 81 2 10 1 82 1 213 2 330 1 27 1 28 1 304 1 75 1 194 1 241 1 271 1 273 1 246 1 26 2 108 1 
203 1 17 2 10 1 213 2 330 1 27 1 28 1 304 1 75 1 194 1 183 1 241 1 117 1 64 1 273 1 26 2 57 1 
203 1 81 2 17 2 82 1 213 4 330 1 183 1 271 1 241 2 117 1 64 1 273 2 188 1 246 1 26 2 10 1 28 1 27 2 304 1 75 1 194 1 
203 1 81 2 82 1 213 2 330 1 27 1 28 1 304 1 75 1 194 1 222 1 241 1 271 1 273 1 246 1 26 2 108 1 
203 1 17 2 213 2 330 1 27 1 28 1 304 1 75 1 194 1 222 1 183 1 241 1 117 1 64 1 273 1 26 2 57 1 
203 1 81 2 17 2 82 1 213 4 330 1 183 1 271 1 241 2 117 1 64 1 273 2 188 1 26 2 28 1 27 1 304 1 75 1 194 1 222 1 
203 1 17 2 81 2 82 1 213 4 330 1 27 2 28 1 304 1 75 1 194 1 183 1 241 2 271 1 117 1 64 1 273 2 188 1 246 1 26 2 
286 1 203 1 81 1 109 1 17 1 213 2 177 1 330 1 270 1 23 1 90 1 38 1 274 1 26 2 340 1 69 1 94 1 41 1 28 1 141 1 304 1 75 1 305 1 194 1 342 1 53 1 280 1 33 1 
286 1 203 1 81 1 109 1 17 1 213 2 177 1 330 1 155 1 270 1 23 1 38 1 274 1 26 2 94 1 41 1 28 1 141 1 304 1 75 1 305 1 194 1 223 1 342 1 53 1 343 1 280 1 33 1 
203 1 81 2 17 2 82 1 213 4 330 1 183 1 271 1 241 2 117 1 64 1 273 2 188 1 246 1 247 1 26 2 28 1 27 2 304 1 75 1 194 1 
203 1 17 2 81 2 109 1 82 1 213 4 214 1 177 1 330 1 183 1 270 1 241 2 271 1 117 1 23 1 64 1 90 1 273 2 38 1 188 1 246 1 274 1 26 2 340 1 69 1 94 1 41 1 27 2 28 1 304 1 75 1 194 1 342 1 53 1 280 1 326 1 
203 1 17 1 81 2 82 1 213 3 330 1 239 1 271 1 241 1 117 1 335 1 64 1 37 1 273 1 38 1 188 1 246 1 247 1 26 2 119 1 41 1 27 1 28 1 304 1 75 1 194 1 31 1 105 1 
203 2 17 10 81 9 82 3 213 19 330 2 83 1 179 1 334 1 183 3 240 2 63 1 271 3 117 3 7 1 64 3 188 3 246 3 26 4 137 1 301 1 28 2 27 6 303 2 219 1 194 2 307 1 196 2 55 1 201 1 
203 3 59 1 17 12 81 14 173 1 82 3 213 26 330 3 179 2 334 1 183 2 21 1 240 2 271 3 117 2 159 2 7 2 64 2 209 1 188 3 246 2 93 1 26 6 137 2 317 1 301 2 27 4 28 3 303 1 219 1 194 3 196 4 55 1 201 1 
81 20 82 4 173 1 213 41 83 1 179 1 183 4 271 5 7 3 188 4 93 1 137 3 317 1 219 1 194 3 278 1 196 4 55 1 201 1 327 1 203 3 59 1 60 1 17 21 112 1 330 3 21 1 334 1 240 4 117 5 159 1 64 4 209 1 246 4 26 6 301 2 71 1 27 8 28 3 303 1 120 1 307 1 170 1 
60 1 59 1 203 4 17 18 81 20 173 1 82 4 112 1 213 38 330 4 83 1 179 1 334 1 21 1 183 4 240 4 271 5 117 4 159 2 7 3 64 3 209 1 188 4 246 3 93 1 26 8 137 3 317 1 301 2 71 1 28 4 27 7 303 1 120 1 219 1 194 4 278 1 307 1 196 4 170 1 55 1 201 1 327 1 
60 1 59 1 203 2 17 25 81 27 173 1 82 7 112 1 213 52 330 2 179 1 334 1 21 1 183 7 240 4 271 8 117 8 159 1 7 4 64 7 209 1 188 7 246 7 93 1 26 4 137 2 317 1 301 1 71 1 28 2 27 14 303 1 120 1 219 1 194 2 278 1 307 2 196 4 170 1 55 1 200 2 201 1 
275 1 0 1 185 1 309 1 95 1 254 1 192 1 338 1 220 1 347 1 
79 1 290 1 
262 1 160 1 185 1 309 1 95 1 129 1 338 1 220 1 347 1 
80 1 275 1 95 1 309 1 254 1 192 1 74 1 220 1 157 1 313 1 224 1 36 2 185 1 297 1 298 1 245 1 338 1 347 1 
80 1 275 1 95 1 309 1 254 1 192 1 74 1 220 1 157 1 313 1 224 1 36 2 185 1 297 1 298 1 245 1 338 1 347 1 
80 1 275 1 95 1 309 1 254 1 192 1 74 1 220 1 157 1 313 1 224 1 36 2 185 1 297 1 298 1 245 1 338 1 347 1 
152 1 98 1 43 1 
152 1 98 1 43 1 
281 1 76 1 
98 1 281 1 76 1 
56 1 107 1 
80 1 309 1 264 1 290 1 269 1 36 1 335 2 185 1 297 1 38 2 298 1 338 1 164 1 41 2 95 1 42 1 141 1 220 1 224 1 31 2 105 2 56 1 79 1 123 1 347 1 106 1 107 1 
152 1 43 1 
98 1 281 1 76 1 
203 1 109 1 81 1 17 1 213 2 177 1 330 1 236 1 23 1 272 1 38 2 247 1 26 2 249 1 94 2 41 2 319 1 28 1 304 1 75 1 305 1 47 1 194 1 342 2 53 1 145 1 14 2 280 2 31 2 202 1 33 1 
259 1 190 1 260 1 109 1 302 1 94 2 110 1 1 1 214 1 252 1 126 1 35 1 306 1 342 2 53 1 324 1 171 1 280 2 258 2 
259 1 260 1 109 1 302 1 94 1 1 1 252 1 126 1 35 1 306 1 342 1 324 1 53 1 171 1 280 1 199 1 258 2 
286 1 109 1 94 1 110 1 1 1 111 1 276 1 177 1 342 1 50 1 23 1 53 1 24 1 280 1 
259 1 190 1 260 1 109 1 302 1 94 1 110 1 1 1 252 1 126 1 35 1 306 1 342 1 53 1 324 1 171 1 280 1 258 2 
19 1 
143 1 207 1 279 1 296 1 225 1 74 1 193 1 
174 1 233 1 114 1 87 1 207 1 158 1 296 1 297 1 298 1 163 1 299 1 251 1 74 2 193 1 99 1 283 1 15 1 
261 2 174 12 82 2 214 1 177 1 125 1 265 2 3 1 311 1 87 3 88 2 271 2 216 2 187 2 92 2 188 2 274 1 94 3 321 1 322 1 193 9 277 6 101 2 144 2 52 2 279 1 53 2 225 1 280 3 15 4 286 1 150 6 109 1 233 6 114 4 207 2 294 1 23 6 158 5 117 2 64 2 296 8 297 5 298 5 337 2 299 4 163 4 74 8 167 2 342 3 30 3 32 1 
150 5 59 1 173 1 174 6 82 2 233 3 114 2 87 1 21 1 240 1 207 2 294 1 271 2 158 1 117 2 7 1 64 2 296 5 187 1 297 1 337 1 209 1 298 1 188 2 163 2 299 2 9 1 137 1 317 1 74 5 193 8 167 2 277 5 15 2 149 1 
128 1 267 1 114 1 239 1 271 2 117 1 335 1 296 2 297 1 337 1 38 1 298 1 163 1 299 1 41 1 71 1 13 1 193 2 167 2 278 1 341 1 170 1 198 1 308 1 147 1 31 1 105 1 15 1 
74 1 114 1 193 1 207 1 279 1 225 1 296 1 299 1 163 1 15 1 
150 5 82 2 174 10 233 5 74 5 193 5 167 2 277 5 271 2 117 2 64 2 296 5 92 1 337 1 188 2 
207 1 158 1 297 1 298 1 74 1 87 1 
286 2 109 2 61 1 111 1 177 2 114 2 333 1 87 1 238 1 294 1 23 2 158 2 217 1 296 1 187 1 297 2 298 2 274 1 163 2 299 2 68 1 94 3 12 1 253 1 44 1 322 1 193 1 342 3 50 1 53 3 280 3 32 1 15 1 
286 1 203 1 17 1 109 1 213 1 330 1 177 1 128 1 239 2 270 1 335 2 23 1 90 1 38 3 274 1 26 2 138 1 69 1 340 1 94 1 41 3 28 1 141 1 304 1 305 1 75 1 194 1 342 1 53 1 280 1 31 2 105 2 
60 1 150 2 174 4 233 2 74 4 114 1 193 1 277 2 207 2 294 1 296 2 187 1 299 1 163 1 15 1 
118 1 309 1 95 1 
118 1 309 1 95 1 
124 1 309 1 95 1 192 1 107 1 
118 1 309 1 95 1 
309 1 95 1 346 1 
309 1 95 1 346 1 
309 1 95 1 346 1 
309 1 95 1 
338 1 347 1 
60 1 203 2 17 4 81 4 213 8 112 1 330 2 71 1 27 3 28 2 120 1 194 2 183 2 278 1 271 1 170 1 117 1 159 1 246 1 26 4 
60 1 17 3 81 3 112 1 213 6 71 1 27 2 120 1 183 2 143 1 278 1 170 1 271 1 117 1 
203 1 17 2 81 2 82 1 213 4 263 1 330 1 27 2 28 1 194 1 183 1 271 1 117 1 64 1 188 1 246 1 26 2 
17 4 81 3 82 1 213 7 27 2 183 1 307 1 240 2 271 1 117 1 64 1 7 1 188 1 246 1 137 1 
60 1 203 2 81 11 17 12 82 2 112 1 213 23 330 2 183 5 240 2 271 3 22 1 117 3 159 2 7 2 64 2 188 2 246 4 26 4 339 1 71 2 27 9 28 2 120 1 194 2 278 2 307 1 170 1 200 1 
240 1 17 1 213 1 
81 1 213 1 7 1 
203 1 17 3 81 3 82 1 213 6 263 1 330 1 28 1 27 3 194 1 183 2 271 1 117 1 64 1 92 1 188 1 246 1 26 2 
203 1 59 1 17 6 81 6 82 2 173 1 213 12 330 1 21 1 183 1 240 1 271 2 117 2 7 1 64 2 188 2 209 1 246 1 26 2 137 1 317 1 28 1 27 2 194 1 201 1 
81 3 17 3 213 6 71 1 27 2 183 1 278 1 170 1 271 1 117 1 246 1 
339 1 203 1 81 1 17 2 213 3 112 1 71 1 330 1 27 2 28 1 120 1 194 1 183 1 278 1 159 1 246 1 26 2 
203 1 81 5 17 5 213 10 330 1 71 2 28 1 27 5 194 1 183 3 278 2 170 1 271 2 117 2 308 1 246 2 201 1 26 2 
203 1 81 2 82 1 213 2 330 1 28 1 27 1 194 1 271 1 246 1 201 1 26 2 
203 1 17 2 81 2 82 1 213 4 330 1 27 2 28 1 194 1 183 1 271 1 117 1 64 1 188 1 246 1 201 1 26 2 
339 1 203 3 17 2 81 1 213 3 330 3 71 1 83 1 28 3 27 2 194 3 183 1 278 1 159 1 246 1 201 1 26 6 
60 1 203 5 17 18 81 16 82 3 112 1 213 34 263 1 330 5 83 1 183 7 240 4 271 5 117 5 159 2 7 3 64 3 188 3 246 5 67 1 26 10 137 1 339 1 71 3 28 5 27 12 120 1 194 5 100 1 278 3 307 1 170 2 284 1 201 1 
60 1 203 1 17 4 81 4 213 8 112 1 330 1 21 1 183 2 240 1 271 1 117 1 7 1 26 2 137 1 71 1 28 1 27 2 120 1 194 1 278 1 170 1 201 1 
60 1 203 2 17 5 81 6 82 1 112 1 213 11 263 1 330 2 183 2 21 1 240 2 271 2 117 1 7 1 188 1 246 1 26 4 137 1 71 1 28 2 27 3 120 1 194 2 278 1 307 1 170 1 201 1 
60 1 203 3 59 1 17 10 81 9 173 1 82 2 112 1 213 19 263 1 330 3 21 1 183 3 240 1 271 3 117 3 159 1 7 1 64 2 188 2 209 1 246 1 26 6 137 1 317 1 71 1 28 3 27 4 120 1 194 3 278 1 170 1 201 1 
60 1 203 3 59 1 17 7 81 10 82 2 173 1 112 1 213 17 263 1 330 3 21 1 183 3 240 1 271 3 117 2 159 1 7 1 64 1 188 2 209 1 246 2 26 6 137 1 317 1 71 1 28 3 27 5 120 1 194 3 278 1 170 1 201 1 
60 1 203 1 17 4 81 4 213 8 112 1 330 1 21 1 183 2 240 1 271 1 117 1 7 1 26 2 137 1 71 1 28 1 27 2 120 1 194 1 278 1 170 1 201 1 
203 1 59 1 17 6 81 6 82 2 173 1 213 12 330 1 21 1 183 1 240 1 271 2 117 2 7 1 64 2 188 2 209 1 246 1 26 2 137 1 317 1 28 1 27 2 194 1 201 1 
60 1 203 4 59 1 17 8 81 10 173 1 82 2 112 1 213 18 263 1 330 4 21 1 183 3 240 1 271 3 117 2 159 2 7 1 64 1 209 1 188 2 246 2 26 8 137 1 317 1 71 1 28 4 27 5 120 1 194 4 278 1 170 1 201 1 
203 4 59 1 17 7 81 9 173 1 82 3 213 16 330 4 83 1 21 1 183 3 240 1 271 3 117 2 159 2 7 1 64 2 209 1 188 3 246 3 26 8 137 1 317 1 28 4 27 6 194 4 201 1 
17 4 81 3 213 7 112 1 71 3 27 6 120 2 183 3 278 3 170 1 271 1 117 1 246 3 
60 1 203 4 59 1 17 8 81 10 173 1 82 2 112 1 213 18 330 4 83 1 21 1 183 3 240 1 271 3 117 2 159 2 7 1 64 1 209 1 188 2 246 1 26 8 137 1 317 1 71 1 28 4 27 4 120 1 194 4 278 1 170 1 201 1 
58 1 41 1 134 1 141 1 38 1 31 1 20 1 
229 1 318 1 58 1 41 1 141 1 266 1 20 1 54 1 134 1 162 1 31 1 38 1 
286 1 143 1 109 1 50 1 342 1 23 1 94 1 53 1 111 1 177 1 280 1 
286 1 340 1 109 1 94 1 41 2 177 1 141 1 270 1 342 1 23 1 335 1 53 1 280 1 31 1 38 2 274 1 136 1 105 1 
340 1 109 1 94 1 41 2 177 2 141 1 205 1 267 1 215 1 322 1 195 1 270 1 342 1 23 3 335 2 53 1 280 1 65 1 31 2 38 2 274 2 136 1 105 1 
109 1 94 2 41 2 177 2 141 1 205 1 267 1 215 1 322 1 195 1 270 1 342 2 23 3 335 2 53 1 343 1 280 2 65 1 31 2 38 2 274 2 136 1 105 1 285 1 
286 1 109 1 94 3 177 1 265 1 178 1 205 1 74 1 322 1 195 1 207 1 101 1 131 1 342 3 23 4 158 1 53 1 280 3 297 2 30 1 298 2 274 1 285 1 
265 1 128 1 267 1 239 1 207 1 158 1 23 2 335 1 297 2 38 1 298 2 94 1 41 1 13 1 74 1 322 1 101 1 341 1 52 1 342 1 198 1 280 1 30 1 31 1 105 1 
109 1 342 1 208 1 94 1 53 1 280 1 
286 2 109 2 204 1 61 1 214 1 177 2 289 1 35 1 156 1 333 1 23 3 272 1 274 1 139 1 94 6 321 1 342 6 53 3 14 1 280 5 
60 1 203 2 17 3 81 3 109 1 213 6 112 1 214 1 177 1 330 2 236 1 183 2 270 1 241 1 271 1 117 1 23 1 335 1 90 1 273 1 38 2 274 1 136 1 247 1 26 4 69 1 340 1 94 1 41 2 71 1 27 2 28 2 141 2 304 2 120 1 75 2 194 2 323 1 278 1 170 1 342 1 53 1 280 1 326 1 31 1 105 1 
286 1 261 1 265 1 114 2 87 1 207 1 88 1 23 2 158 2 296 1 297 3 298 3 163 2 299 2 94 1 74 1 193 1 101 1 342 1 144 1 52 1 279 1 225 1 280 1 30 1 32 1 15 2 123 1 
101 1 109 1 342 2 208 1 23 2 94 2 53 2 214 1 177 1 280 2 274 1 321 1 311 1 
286 1 109 1 94 4 111 1 214 1 177 1 342 4 50 1 23 1 53 1 280 4 325 1 285 1 
109 1 94 2 61 1 177 1 235 1 44 1 322 1 333 1 342 2 23 1 53 2 280 2 274 1 68 1 
286 1 109 1 302 1 342 1 94 1 53 1 171 1 280 1 126 1 258 1 
109 1 94 2 214 1 177 1 35 1 47 1 342 2 23 1 53 1 272 1 280 2 
286 1 109 2 139 1 94 5 111 1 214 1 177 2 322 1 156 1 50 1 342 5 23 3 53 2 272 1 280 4 325 1 
286 1 287 1 109 2 139 1 94 5 111 1 214 1 177 2 322 1 50 1 342 5 23 3 53 2 272 1 280 4 325 1 
286 1 109 1 94 1 41 2 177 1 141 1 270 1 342 1 23 1 335 1 53 1 343 1 280 1 31 1 38 2 274 1 136 1 105 1 
109 1 204 1 94 1 61 1 177 1 321 1 322 1 333 1 342 1 23 1 53 2 280 1 274 1 
249 1 41 1 319 1 180 1 186 1 31 1 38 1 228 1 202 1 
231 1 243 1 180 1 
186 1 141 1 282 1 180 1 228 1 
231 1 265 1 141 1 74 1 267 1 180 1 215 1 332 1 86 1 207 1 243 1 186 2 297 2 65 1 298 2 282 2 248 1 123 1 228 2 
143 1 130 1 127 1 72 1 
212 1 18 1 96 1 
146 1 336 1 210 1 
78 1 212 1 18 1 96 1 
212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 161 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 126 1 258 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
212 2 18 1 96 1 66 1 210 1 182 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
168 2 130 2 97 1 135 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
320 1 
78 1 212 1 18 1 96 1 
78 1 212 1 18 1 96 1 
130 1 121 1 182 1 16 1 
130 1 127 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 219 (45,262,265) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 81 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) (2,159) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (2,159) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) (2,159) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (32,154,241,275) (32,154,241,275) (32,154,241,275) 276 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 177 35 134 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 177 35 134 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
205 1 304 1 221 1 
149 1 221 1 80 2 
132 2 65 2 141 1 136 2 142 2 70 2 30 2 99 1 
3 1 270 1 236 1 116 1 239 1 190 1 87 1 285 1 288 1 125 2 291 1 256 1 21 1 258 1 295 1 132 2 65 3 300 1 259 1 136 3 97 1 167 2 70 2 30 2 99 1 102 2 101 1 140 2 141 1 142 2 319 1 321 1 78 2 144 1 183 1 38 1 230 1 
132 1 94 1 65 1 196 1 141 1 136 1 142 1 70 1 30 1 174 1 
132 1 94 1 298 1 65 1 111 1 304 1 136 1 188 1 89 1 218 1 221 1 199 1 254 1 40 1 
132 1 94 1 298 2 65 1 304 1 136 1 188 2 70 1 30 1 89 1 142 1 221 1 199 1 254 1 40 1 
298 1 105 1 188 1 36 1 39 1 
206 1 298 2 304 1 221 1 188 2 36 1 309 1 39 1 
298 1 188 1 36 1 
132 1 94 1 298 1 65 1 136 1 188 1 70 1 174 1 30 1 58 1 196 1 141 1 142 1 39 1 
221 1 
206 1 298 2 304 1 113 1 221 1 188 2 36 1 39 1 
146 1 234 4 235 2 152 2 53 5 153 1 188 5 277 1 58 1 196 1 200 1 253 1 162 1 132 1 206 1 164 2 94 1 298 5 65 1 26 2 260 1 304 2 305 1 136 1 169 1 70 1 308 1 172 2 30 1 174 1 315 1 141 1 142 1 221 2 320 1 36 2 182 2 39 2 
132 1 270 1 65 2 259 1 136 2 167 1 239 1 69 1 30 1 140 1 142 1 288 1 125 1 252 1 291 1 321 1 225 1 38 1 258 1 230 1 
205 1 99 1 
132 2 65 2 112 1 136 2 29 1 70 1 30 1 99 2 142 1 
43 1 106 1 69 1 
65 1 270 1 259 1 136 1 167 1 239 1 99 1 140 1 124 1 125 1 288 1 321 1 291 1 38 1 258 1 230 1 
132 5 218 1 65 5 112 1 136 5 142 4 168 1 252 2 202 1 70 1 225 1 30 4 99 1 122 1 
132 2 94 1 65 2 196 1 136 2 142 2 30 2 79 1 
132 3 65 3 136 3 142 3 252 1 70 1 30 3 99 1 
132 1 94 1 65 1 196 1 136 1 142 1 30 1 
132 1 94 1 65 1 112 1 136 1 142 1 29 1 70 1 30 1 
270 1 112 1 236 1 237 1 6 1 116 1 188 1 239 1 87 1 89 1 288 1 199 1 125 1 252 1 291 1 256 1 254 1 21 1 258 1 132 3 94 1 298 1 300 1 65 4 259 1 136 4 97 1 167 1 70 2 30 3 99 1 102 2 101 1 140 1 141 1 142 3 319 1 321 1 78 1 225 1 183 1 38 1 230 1 40 1 
132 2 218 1 65 2 136 2 142 1 252 1 30 1 99 1 122 1 
132 3 298 1 94 1 65 3 112 1 185 1 136 3 237 1 188 1 70 1 30 3 89 1 142 3 221 1 199 1 252 2 254 1 225 1 40 1 
43 1 132 2 65 2 112 1 136 2 70 1 69 1 30 2 142 2 252 1 
65 1 270 1 259 1 136 1 167 1 239 1 99 1 140 1 125 1 288 1 321 1 291 1 258 1 38 1 230 1 
209 1 65 1 135 1 270 1 136 1 167 1 239 1 99 1 140 1 125 1 288 1 291 1 258 1 38 1 230 1 
43 1 208 1 164 1 49 1 114 1 116 1 261 1 69 1 87 1 280 1 101 1 102 2 106 1 17 1 319 1 78 2 256 1 21 2 183 1 
132 1 94 1 65 1 136 1 142 1 30 1 79 1 40 1 
45 1 138 1 
45 1 138 1 
219 1 265 1 
219 1 265 1 
45 1 219 1 265 1 138 1 
45 1 210 1 138 1 
45 1 219 1 265 1 138 1 
45 1 262 1 138 1 
45 1 210 1 138 1 
45 1 210 1 138 1 
45 1 220 1 138 1 
45 1 220 1 138 1 
45 1 220 1 138 1 
45 1 50 1 188 1 7 1 193 1 121 1 244 1 13 1 248 1 197 1 60 1 130 1 132 2 298 1 65 2 136 2 262 1 30 2 99 1 138 1 311 1 142 2 222 1 224 1 
23 1 45 2 298 2 4 1 233 1 303 1 28 1 50 2 188 2 7 1 121 2 138 2 13 2 266 1 221 1 107 1 222 3 130 2 228 2 
247 1 257 1 293 1 
98 1 257 1 293 1 
247 2 301 1 126 1 98 1 37 1 293 3 
247 1 301 1 126 1 98 1 324 1 293 2 
247 1 301 2 126 1 98 1 293 2 
82 1 234 3 235 1 149 2 151 1 152 1 153 1 244 1 20 2 164 1 94 1 26 1 172 1 174 1 30 1 36 1 182 1 39 4 53 2 188 5 277 1 279 2 58 1 196 1 286 1 290 1 206 1 132 1 208 1 298 5 299 1 65 1 304 1 213 2 136 1 70 1 310 1 314 1 141 1 142 1 221 1 80 4 
234 3 235 1 149 2 152 1 153 1 244 1 20 2 164 1 94 1 26 1 172 1 30 1 174 1 105 2 36 3 182 1 39 4 53 2 188 5 277 1 279 2 58 1 196 1 284 1 286 1 290 1 132 1 206 1 208 1 298 5 299 1 65 1 304 1 136 1 215 1 70 1 310 1 313 2 314 1 141 1 142 1 221 1 80 4 
82 1 234 1 235 1 151 1 152 1 53 2 188 3 279 1 244 1 58 1 196 1 286 1 290 1 253 1 20 1 132 1 94 1 298 3 299 1 65 1 26 1 304 1 136 1 213 1 70 1 172 1 30 1 174 1 314 1 141 1 142 1 221 1 39 2 80 1 
81 1 82 1 234 1 235 1 151 1 152 1 53 2 188 2 279 1 244 1 286 1 290 1 253 1 20 1 298 2 299 1 26 1 213 1 172 1 314 1 39 1 80 1 
205 1 139 1 38 1 
189 1 38 1 
51 1 
288 1 38 1 230 1 
55 1 38 1 
38 1 230 1 
157 1 46 1 139 2 288 1 38 3 230 1 
146 1 164 1 232 1 211 1 235 1 305 1 114 3 173 2 12 1 251 1 17 2 223 1 78 7 255 1 21 3 162 1 295 4 
146 1 164 1 232 1 211 1 235 1 305 1 114 3 173 2 12 1 251 1 17 2 223 1 78 7 255 1 21 3 162 1 295 4 
146 1 164 1 232 1 211 1 235 1 305 1 114 3 173 2 11 1 12 1 251 1 17 2 223 1 78 7 255 1 21 3 162 1 295 4 
231 1 273 1 114 2 116 1 12 1 246 1 281 1 17 1 251 1 255 1 21 3 295 3 162 1 305 1 173 1 100 1 101 1 102 2 74 1 76 1 319 1 223 2 78 6 183 1 
146 1 232 1 272 1 235 1 114 4 116 2 12 1 17 3 251 1 129 1 21 4 295 5 162 1 164 1 211 1 305 1 173 2 102 4 101 2 74 1 319 2 223 1 78 9 183 2 
275 1 32 1 276 1 154 1 155 1 
159 1 275 1 32 1 154 1 155 1 
2 1 32 1 241 1 155 1 
159 1 275 1 32 1 154 1 155 1 
275 1 32 1 276 1 154 1 155 1 
161 1 
83 4 149 2 234 2 238 1 152 1 239 2 245 1 89 1 158 1 250 2 254 1 258 1 94 1 26 1 96 1 167 2 171 2 172 1 175 1 179 2 34 2 181 1 36 6 268 1 108 1 38 1 40 1 269 1 270 1 111 1 187 2 53 2 188 5 277 1 117 2 278 1 119 1 125 2 287 1 199 1 292 2 206 3 132 1 298 5 65 1 66 1 304 1 136 1 217 1 218 1 314 1 140 2 221 2 80 2 230 1 
206 1 269 1 132 1 94 1 298 3 65 1 83 2 111 1 113 1 96 1 136 1 187 1 188 3 89 1 218 1 287 1 199 1 181 1 36 2 268 1 254 1 40 1 
269 1 111 1 83 3 113 1 188 3 89 1 199 1 287 1 254 1 292 1 132 1 206 1 298 3 94 1 65 1 304 1 136 1 96 1 218 1 221 1 181 1 36 1 268 1 40 1 
269 1 111 1 83 3 113 1 187 1 188 3 117 1 89 1 199 1 287 1 254 1 292 1 206 1 132 1 298 3 94 1 65 1 304 1 136 1 96 1 218 1 221 1 181 1 268 1 36 2 40 1 
147 1 83 6 234 1 149 2 152 1 238 1 89 1 156 1 91 1 158 1 250 2 254 1 94 1 26 1 96 1 171 2 172 1 179 2 181 1 34 2 36 7 268 1 40 1 269 1 111 1 113 1 187 4 53 1 188 5 277 1 117 4 195 1 199 1 287 1 127 1 292 4 206 3 132 1 298 5 65 1 304 5 136 1 218 1 221 5 
83 4 234 1 149 2 152 1 238 1 89 1 158 1 250 2 254 1 94 1 26 1 96 1 171 2 172 1 179 2 181 1 34 2 268 1 36 4 108 1 40 1 269 1 111 1 187 2 53 1 188 4 277 1 117 2 199 1 287 1 292 2 132 1 206 2 298 4 65 1 304 1 136 1 218 1 221 2 80 2 
269 1 147 1 111 1 83 4 149 2 234 1 187 2 238 1 53 1 152 1 188 4 277 1 117 2 89 1 158 1 91 1 195 1 250 2 199 1 287 1 254 1 292 2 206 2 132 1 298 4 94 1 65 1 26 1 304 1 136 1 96 1 171 2 172 1 218 1 179 2 221 1 34 2 181 1 36 4 268 1 40 1 
269 1 147 1 111 1 83 4 149 2 234 1 187 2 238 1 53 1 152 1 188 4 277 1 117 2 89 1 158 1 91 1 195 1 250 2 199 1 287 1 254 1 292 2 206 2 132 1 298 4 94 1 65 1 26 1 304 1 136 1 96 1 171 2 172 1 218 1 179 2 221 1 34 2 181 1 36 4 268 1 40 1 
269 1 147 1 111 1 83 4 234 1 187 2 238 1 53 1 152 1 188 4 277 1 117 2 192 1 123 1 89 1 250 2 199 1 287 1 254 1 292 2 294 2 131 2 206 2 132 1 298 4 94 1 65 1 26 1 304 1 136 1 96 1 172 1 218 1 179 2 221 1 181 1 36 4 268 1 80 2 145 1 40 1 
269 1 147 1 111 1 83 5 149 2 234 1 187 3 238 1 53 1 152 1 277 1 188 4 117 3 89 1 158 1 91 1 195 1 250 2 199 1 287 1 127 1 254 1 292 3 206 2 132 1 298 4 94 1 65 1 26 1 304 1 136 1 96 1 171 2 172 1 218 1 179 2 221 1 34 2 181 1 268 1 36 5 40 1 
269 1 147 1 111 1 83 5 149 2 234 1 187 3 238 1 53 1 152 1 277 1 188 4 117 3 89 1 158 1 91 1 195 1 250 2 199 1 287 1 127 1 254 1 292 3 206 2 132 1 298 4 94 1 65 1 26 1 304 1 136 1 96 1 171 2 172 1 218 1 179 2 221 1 34 2 181 1 268 1 36 5 40 1 
269 1 111 1 83 4 234 1 187 2 238 1 53 1 152 1 277 1 188 4 117 2 89 1 250 2 287 1 199 1 254 1 292 2 294 2 131 2 206 2 132 1 298 4 94 1 65 1 26 1 304 1 96 1 136 1 172 1 218 1 179 2 221 1 181 1 36 4 268 1 108 1 80 2 40 1 145 1 
43 1 146 1 232 1 49 1 235 1 114 2 116 1 87 1 17 2 256 1 21 3 162 1 295 3 205 1 164 1 211 1 305 1 69 1 173 1 99 2 102 2 101 1 106 1 319 1 78 6 183 1 
43 2 235 2 114 2 115 1 116 2 52 1 87 1 90 1 16 1 251 2 290 2 256 2 21 3 295 6 94 1 299 2 95 1 25 1 97 1 71 1 69 7 99 1 100 2 102 4 101 2 106 7 76 2 319 2 78 9 183 2 
43 1 270 1 116 1 239 1 190 1 87 1 242 1 90 1 124 1 288 1 125 1 252 1 291 1 256 1 258 1 21 1 295 1 132 1 65 2 259 1 136 2 167 1 97 1 30 1 99 1 176 1 101 1 102 2 140 1 316 1 142 1 319 1 321 1 78 2 225 1 38 1 183 1 230 1 
235 1 239 1 87 2 90 1 252 1 251 2 17 1 256 2 21 2 258 1 22 1 259 1 97 1 167 1 30 1 102 4 101 2 106 2 183 2 38 1 43 2 270 1 114 3 116 2 125 1 288 1 290 1 291 1 204 1 295 3 132 1 299 1 65 2 300 1 64 1 306 1 136 2 69 2 140 1 142 1 319 2 143 1 321 1 78 5 225 1 230 1 
270 2 3 1 49 1 274 1 116 2 239 2 190 1 87 2 56 1 245 1 125 4 252 1 256 2 258 2 21 1 295 1 132 1 134 1 65 1 136 1 167 5 97 1 30 1 216 1 175 1 177 1 102 4 101 2 140 5 142 1 33 1 319 2 35 1 322 1 78 2 38 3 183 2 230 2 
43 1 112 1 235 1 114 1 116 1 9 1 87 1 90 1 17 1 290 1 256 1 21 2 295 1 132 1 208 1 164 1 299 1 65 1 136 1 69 1 70 1 30 1 102 2 101 1 106 1 142 1 319 1 78 3 183 1 
43 1 49 1 235 1 114 1 116 1 69 1 87 1 101 1 102 2 57 1 106 1 251 1 319 1 290 1 78 2 256 1 183 1 295 2 
43 1 208 1 164 1 49 1 114 1 116 1 69 1 87 1 280 1 101 1 102 2 106 1 17 1 319 1 78 2 256 1 183 1 21 2 
43 2 235 1 49 1 114 2 116 1 87 1 251 1 17 1 290 1 256 1 21 2 295 2 208 1 164 1 299 1 69 2 102 2 101 1 106 2 319 1 78 4 183 1 
43 1 235 1 114 1 116 1 69 1 216 1 87 1 101 1 102 2 57 1 106 1 251 1 319 1 290 1 78 2 256 1 183 1 295 2 
43 1 208 1 164 1 114 1 116 1 69 1 216 1 87 1 280 1 101 1 102 2 106 1 17 1 319 1 78 2 256 1 183 1 21 2 
43 1 299 1 235 1 114 1 116 1 69 1 216 1 87 1 101 1 102 2 106 1 251 1 319 1 290 1 78 2 256 1 183 1 295 2 
43 1 299 1 235 1 114 1 116 1 69 1 87 1 101 1 102 2 106 1 251 1 319 1 290 1 256 1 78 2 183 1 295 2 
270 1 116 1 239 1 190 1 87 1 288 1 125 1 291 1 256 1 258 1 21 1 295 1 300 1 65 1 259 1 136 1 167 1 97 1 99 1 101 1 102 2 140 1 319 1 321 1 78 2 38 1 183 1 230 1 
270 1 116 1 239 1 190 1 87 1 288 1 125 1 291 1 256 1 258 1 21 1 295 1 209 1 135 1 63 1 65 1 136 1 167 1 97 1 99 1 101 1 102 2 140 1 319 1 78 2 38 1 183 1 230 1 
43 1 299 1 235 1 114 1 116 1 69 1 87 1 101 1 102 2 90 1 106 1 251 1 319 1 290 1 78 2 256 1 183 1 295 2 
43 1 270 1 235 1 114 1 116 1 87 1 56 1 288 1 125 1 251 1 290 1 291 1 256 1 204 1 258 1 295 2 299 1 300 1 65 1 259 1 136 1 167 1 69 1 101 1 102 2 140 1 106 1 319 1 321 1 78 2 38 1 183 1 230 1 
43 1 112 1 235 1 114 1 116 1 85 1 87 1 90 1 251 1 290 1 256 1 295 2 132 1 299 1 65 1 136 1 70 1 69 1 30 1 102 2 101 1 142 1 106 1 319 1 78 2 183 1 
146 1 232 1 272 1 235 4 5 1 114 6 116 4 191 1 246 2 88 1 251 3 17 3 201 1 290 3 19 1 21 16 61 1 162 1 295 17 62 1 164 4 208 3 299 3 211 1 302 1 305 1 214 3 68 1 173 1 100 2 263 1 102 8 101 4 103 1 74 2 76 2 319 4 78 33 183 4 227 1 229 1 
272 1 235 3 114 4 116 3 191 1 88 1 246 2 251 2 17 2 201 2 290 3 19 1 21 12 61 1 295 14 164 2 208 2 299 3 302 1 214 4 68 1 100 2 263 1 102 6 101 3 103 2 73 1 74 2 76 2 319 3 78 26 183 3 227 1 229 1 
146 1 232 1 272 1 235 4 5 1 114 7 116 4 191 1 246 3 88 1 194 1 251 4 17 3 201 1 290 3 19 1 21 18 61 1 162 1 295 19 164 4 208 3 299 3 211 1 302 1 305 1 214 4 68 1 173 1 100 3 263 1 102 8 101 4 103 2 73 1 74 2 76 3 319 4 78 37 183 4 227 1 229 1 
146 1 232 1 272 1 235 4 5 1 114 5 116 4 191 1 246 2 88 1 251 3 17 2 201 1 290 3 19 1 21 17 61 1 162 1 295 18 164 4 208 3 299 3 211 1 302 1 305 1 214 4 68 1 173 1 100 2 263 1 102 8 101 4 103 1 73 1 74 2 76 2 319 4 78 35 183 4 227 1 229 1 
272 1 235 3 114 6 116 3 191 1 246 2 88 1 251 3 17 3 201 1 290 3 19 1 21 14 61 1 295 14 164 3 208 3 299 3 302 1 214 4 68 1 100 2 263 1 102 6 101 3 103 1 73 1 74 2 76 2 319 3 78 28 183 3 227 1 229 1 
0 1 13 1 23 1 45 1 4 1 233 1 50 1 130 1 138 1 121 1 
262 1 311 1 
207 1 13 1 45 1 50 1 10 1 226 1 130 1 138 1 121 1 
178 1 210 1 
165 1 220 1 296 1 
23 1 298 1 45 1 4 1 233 1 303 1 28 1 50 1 7 1 188 1 121 1 138 1 13 1 266 1 221 1 222 2 130 1 228 1 
23 1 298 1 45 1 4 1 233 1 303 1 28 1 50 1 7 1 188 1 121 1 138 1 13 1 266 1 221 1 222 2 130 1 228 1 
23 1 298 1 45 1 4 1 233 1 303 1 28 1 50 1 7 1 188 1 121 1 138 1 13 1 266 1 221 1 222 2 130 1 228 1 
178 1 165 1 210 1 
178 1 165 1 210 1 
220 1 296 1 
165 1 220 1 296 1 
197 1 193 1 
45 1 184 1 50 1 188 1 193 1 121 1 244 1 13 1 248 1 197 1 60 1 130 1 132 2 298 1 65 2 136 2 262 1 30 2 99 1 138 1 311 1 266 1 142 2 222 1 224 1 228 1 39 1 
270 1 3 2 116 1 190 1 87 1 90 1 125 2 256 1 203 1 258 1 21 1 295 1 132 2 166 1 65 2 27 1 136 2 167 2 97 1 170 1 177 1 101 1 102 2 140 2 319 1 322 1 323 1 78 2 38 1 183 1 230 1 
270 1 133 1 24 1 271 1 167 2 98 1 8 1 31 1 56 1 247 1 140 2 75 1 180 1 125 2 18 1 37 1 257 1 258 1 293 2 
44 1 133 1 24 1 270 1 167 1 98 1 8 1 31 1 247 1 140 1 180 1 125 1 18 1 37 1 257 1 258 1 293 2 
270 1 150 1 167 1 239 1 175 1 245 1 282 1 140 1 75 1 125 1 18 1 258 1 38 1 230 1 
270 1 133 1 24 1 271 1 167 1 98 1 8 1 31 1 247 1 140 1 75 1 180 1 125 1 18 1 37 1 257 1 258 1 293 2 
54 1 
205 1 234 1 304 1 221 1 53 1 200 1 320 1 
149 1 234 1 53 1 152 1 277 1 188 1 158 1 206 1 298 1 26 1 304 1 171 1 172 1 221 2 34 1 36 1 80 1 
270 2 235 1 234 2 186 1 53 3 152 2 188 2 239 1 277 2 189 2 279 2 157 1 15 1 59 1 125 1 288 1 290 1 160 1 254 1 20 2 258 1 206 1 299 1 298 2 297 1 64 1 26 2 167 1 172 2 139 1 314 1 140 1 104 1 77 1 36 2 38 4 80 2 230 1 
234 6 235 2 152 1 53 4 277 1 279 5 246 1 290 2 20 5 19 1 61 1 208 2 164 2 299 2 26 1 302 1 172 1 100 1 76 1 227 1 229 1 80 3 
146 1 235 2 234 2 152 1 53 2 153 1 277 1 188 1 58 1 195 1 196 1 162 1 132 1 164 1 94 1 298 1 65 1 26 1 305 1 136 1 169 1 172 1 70 1 174 1 30 1 141 1 142 1 182 2 
26 1 304 1 234 1 152 1 53 1 277 1 172 1 221 1 200 1 320 1 
299 1 235 1 53 2 290 1 20 1 279 1 80 1 
206 1 298 1 304 1 221 1 188 1 36 1 
270 1 234 2 152 2 53 2 277 1 239 2 188 3 278 1 245 1 249 1 14 1 125 4 253 1 258 1 206 2 163 2 298 3 66 1 26 2 212 1 167 4 172 2 175 1 217 2 314 2 140 4 36 4 38 1 230 1 
270 1 236 1 116 1 239 1 87 1 125 1 288 1 291 1 256 1 21 1 258 1 132 2 65 3 300 1 259 1 136 3 97 1 167 1 70 2 30 2 99 1 102 2 101 1 140 1 141 1 142 2 319 1 321 1 78 1 183 1 38 1 230 1 
26 1 234 1 304 1 53 1 152 1 277 1 172 1 279 1 217 1 314 1 221 1 80 1 
110 1 50 1 130 1 
23 1 197 1 317 1 50 1 130 1 
110 1 50 1 130 1 
110 1 50 1 130 1 
50 1 318 1 130 1 
50 1 318 1 130 1 
50 1 318 1 130 1 
50 1 130 1 
45 1 138 1 
146 1 164 1 232 1 211 1 235 1 305 1 114 3 116 2 173 1 101 2 102 4 74 1 251 1 17 2 319 2 78 8 21 4 183 2 295 4 162 1 
205 1 146 1 164 1 232 1 211 1 235 1 305 1 114 2 173 1 17 2 78 6 21 3 162 1 295 3 
164 1 208 1 299 1 235 1 114 2 116 1 120 1 101 1 102 2 17 1 319 1 251 1 290 1 78 4 21 2 183 1 295 2 
100 1 246 1 76 1 78 2 21 1 295 1 
146 2 232 1 235 5 114 8 52 1 116 1 16 1 17 4 251 4 290 2 21 12 162 2 295 13 164 5 208 2 299 2 95 1 211 1 305 2 169 1 173 1 100 2 101 1 102 2 74 1 76 2 319 1 78 25 183 1 
76 1 78 1 21 1 
100 1 78 1 295 1 
208 1 164 1 299 1 64 1 235 1 114 3 116 1 120 1 102 2 101 1 319 1 251 1 17 2 290 1 78 6 183 1 21 3 295 3 
272 1 235 2 114 2 116 1 246 1 251 1 17 1 290 2 19 1 21 6 61 1 295 6 208 2 164 2 299 2 302 1 100 1 102 2 101 1 76 1 319 1 78 12 227 1 183 1 229 1 
146 1 164 1 235 1 305 1 114 2 17 1 251 1 78 6 21 3 295 3 162 1 
232 1 211 1 305 1 114 2 116 1 101 1 102 2 281 1 74 1 251 1 17 1 319 1 78 3 21 2 183 1 295 1 162 1 
146 1 164 2 272 1 235 2 305 2 114 5 116 1 169 1 102 2 101 1 319 1 17 3 251 2 78 10 183 1 21 5 162 2 295 5 
272 1 235 1 114 1 116 1 101 1 102 2 319 1 251 1 290 1 78 2 183 1 295 2 
164 1 208 1 299 1 272 1 235 1 114 2 116 1 101 1 102 2 17 1 319 1 251 1 290 1 78 4 21 2 183 1 295 2 
272 1 305 1 5 1 114 2 116 3 101 3 102 6 281 1 74 1 319 3 17 1 251 1 78 3 21 2 183 3 162 1 295 1 
146 1 231 1 232 1 272 1 235 2 5 1 114 6 116 4 120 1 246 1 281 1 251 3 17 3 21 8 295 7 162 2 164 2 211 1 305 2 169 1 100 1 102 8 101 4 74 1 76 1 319 4 78 15 183 4 
146 2 232 1 272 1 235 5 114 9 116 2 246 1 251 4 17 5 290 2 19 1 21 10 61 1 162 2 295 14 208 1 164 4 299 2 211 1 302 1 305 2 169 1 173 1 100 1 102 4 101 2 74 1 76 1 319 2 78 24 227 1 183 2 229 1 
146 1 232 1 272 1 235 3 114 4 116 3 120 1 246 1 251 1 17 3 290 2 19 1 21 7 61 1 162 1 295 10 208 1 164 2 299 2 211 1 302 1 305 1 173 1 100 1 102 6 101 3 74 1 76 1 319 3 78 17 227 1 183 3 229 1 
146 1 232 1 272 1 235 3 114 4 116 3 120 1 246 1 251 1 17 3 290 2 19 1 21 10 61 1 162 1 295 9 208 2 164 3 299 2 211 1 302 1 305 1 173 1 100 1 102 6 101 3 74 1 76 1 319 3 78 19 227 1 183 3 229 1 
146 1 232 1 272 1 235 3 114 5 116 3 120 1 246 1 251 2 17 3 290 2 19 1 21 7 61 1 162 1 295 10 208 1 164 2 299 2 211 1 302 1 305 1 173 1 100 1 102 6 101 3 74 1 76 1 319 3 78 17 227 1 183 3 229 1 
146 2 232 1 272 1 235 5 114 9 116 2 246 1 251 4 17 5 290 2 19 1 21 10 61 1 162 2 295 14 208 1 164 4 299 2 211 1 302 1 305 2 169 1 173 1 100 1 102 4 101 2 74 1 76 1 319 2 78 24 227 1 183 2 229 1 
272 1 235 2 114 2 116 1 246 1 251 1 17 1 290 2 19 1 21 6 61 1 295 6 208 2 164 2 299 2 302 1 100 1 102 2 101 1 76 1 319 1 78 12 227 1 183 1 229 1 
146 1 232 1 272 1 235 3 114 5 116 4 120 1 246 1 251 2 17 3 290 2 19 1 21 8 61 1 162 1 295 10 208 1 164 2 299 2 211 1 302 1 305 1 173 1 100 1 102 8 101 4 74 2 76 1 319 4 78 18 227 1 183 4 229 1 
272 1 235 3 5 1 114 6 116 4 246 1 251 3 17 3 290 3 19 1 21 7 61 1 295 9 208 2 164 2 299 3 302 1 100 1 102 8 101 4 74 2 76 1 319 4 78 16 227 1 183 4 229 1 
146 1 164 1 232 2 211 1 235 1 305 3 114 6 17 3 251 3 78 7 21 4 162 3 295 3 
146 1 232 1 272 1 235 3 5 1 114 4 116 4 246 1 251 1 17 3 290 2 19 1 21 8 61 1 162 1 295 10 208 1 164 2 299 2 211 1 302 1 305 1 173 1 100 1 102 8 101 4 74 2 76 1 319 4 78 18 227 1 183 4 229 1 
132 1 218 1 65 1 136 1 99 1 122 1 243 1 
132 1 65 1 136 1 137 1 240 1 307 1 99 1 243 1 122 1 312 1 72 1 218 1 
205 1 245 1 270 1 140 1 167 1 125 1 239 1 175 1 258 1 38 1 230 1 
132 1 270 1 65 2 259 1 136 2 167 1 239 1 30 1 99 1 140 1 142 1 288 1 125 1 252 1 291 1 38 1 258 1 230 1 
1 1 132 2 163 1 94 1 270 1 65 2 259 1 136 2 167 1 55 1 30 1 99 1 89 1 140 1 142 2 288 2 125 1 252 1 291 1 38 3 258 1 40 1 230 2 
1 1 47 1 270 1 55 1 89 1 125 2 288 2 252 1 291 1 258 1 132 2 163 1 94 1 135 1 65 2 136 2 167 2 30 1 99 1 140 2 142 2 38 3 230 2 40 1 
1 1 47 1 270 1 189 1 188 2 239 1 55 1 125 3 288 1 254 1 258 1 163 1 298 2 304 1 167 3 139 1 264 1 140 3 221 1 36 1 38 4 109 1 230 1 
1 1 163 1 298 2 47 1 270 1 304 1 167 3 239 1 188 2 189 1 55 1 139 1 140 3 15 1 221 1 288 1 125 3 36 1 254 1 38 4 258 1 230 1 
274 1 
42 1 134 1 270 3 274 1 167 4 239 2 56 1 177 1 157 1 140 4 198 1 33 1 125 3 288 1 267 1 35 1 38 3 258 2 230 2 
146 1 232 1 235 1 87 2 90 1 252 1 17 2 256 2 258 1 21 3 162 1 164 1 259 1 167 1 173 1 30 1 99 2 102 4 101 2 106 1 183 2 38 1 43 1 270 1 114 2 116 2 56 1 125 1 288 1 291 1 203 1 204 1 295 3 132 1 300 1 65 2 211 1 306 1 305 1 136 2 69 1 140 1 142 1 319 2 321 1 78 6 230 1 
234 1 53 1 152 2 239 1 277 2 188 3 189 1 15 1 59 1 125 1 200 1 160 1 254 1 206 1 298 3 26 2 304 1 212 1 167 1 172 2 139 1 140 1 104 1 221 1 320 1 36 2 39 1 38 2 
274 1 
47 1 270 1 167 4 239 1 175 1 56 1 245 1 140 4 125 4 128 1 38 1 258 1 230 1 
42 1 163 1 270 2 167 2 84 1 140 2 283 1 198 1 125 2 288 1 92 1 38 1 258 1 230 1 
270 1 140 1 180 1 167 1 125 1 98 1 239 1 257 1 258 1 293 1 
133 1 270 1 27 1 167 2 56 1 177 1 140 2 125 2 38 1 258 1 230 1 
163 1 270 2 167 5 239 1 175 1 56 1 177 1 245 1 140 5 125 4 33 1 128 1 35 1 38 3 258 2 230 2 
163 1 270 2 48 1 167 5 239 1 175 1 56 1 177 1 245 1 140 5 125 4 33 1 128 1 38 3 258 2 230 2 
132 1 270 1 65 2 135 1 136 2 167 1 239 1 30 1 99 1 140 1 142 1 288 1 125 1 252 1 291 1 38 1 258 1 230 1 
42 1 163 1 270 2 167 1 157 1 140 1 198 1 125 1 288 1 267 1 38 1 258 1 230 1 
41 1 289 1 93 1 118 1 99 1 
41 1 94 1 148 1 298 2 304 1 67 1 237 1 86 1 188 2 118 2 99 1 89 1 221 1 199 1 289 2 93 2 254 1 39 1 40 1 
41 1 132 1 166 1 65 1 136 1 170 1 289 1 93 1 323 1 
41 1 67 1 86 1 

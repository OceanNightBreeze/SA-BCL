#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (217,298) 365 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (121,344) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (62,198,228) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (217,298) 365 54 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 248 349 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (217,298) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (217,298) (217,298) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (121,344) (121,344) 163 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (217,298) 365 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (121,344) (121,344) 163 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (121,344) (121,344) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 327 2 57 1 30 2 58 1 81 1 287 1 261 2 361 1 9 3 141 1 222 5 334 1 340 1 118 2 362 6 38 1 227 1 17 1 318 2 191 1 320 1 46 9 74 4 48 9 196 2 233 2 235 1 
200 1 327 2 57 1 30 2 58 1 81 1 287 1 261 2 361 1 9 3 141 1 222 5 334 1 340 1 118 2 362 6 38 1 227 1 17 1 318 2 191 1 320 1 46 9 74 4 48 9 196 2 233 2 235 1 
200 1 327 2 57 1 30 2 58 1 81 1 287 1 261 2 361 1 9 4 141 1 222 6 334 1 340 1 118 2 362 7 38 1 227 1 17 1 318 2 191 1 320 1 46 10 74 5 48 10 196 2 233 2 235 1 
200 1 327 2 57 1 30 2 58 1 81 1 287 1 261 1 361 1 9 2 141 1 222 4 334 1 118 2 362 4 38 1 227 1 17 1 318 2 191 1 320 1 46 7 74 3 48 7 196 2 233 2 235 1 
200 1 327 1 57 1 30 1 58 1 261 2 9 1 46 4 74 2 48 4 334 1 222 3 196 1 340 1 233 1 118 1 362 3 235 1 
227 1 202 1 327 1 57 1 58 1 318 1 46 2 361 1 171 1 48 2 49 1 222 1 196 1 118 1 233 1 235 1 
57 1 58 1 287 1 318 1 46 3 9 1 74 1 48 3 222 2 196 2 118 2 362 1 235 1 
200 1 327 1 57 1 30 1 58 1 81 1 287 1 261 2 9 3 222 5 334 1 362 7 118 2 340 1 144 1 225 1 318 1 320 1 46 9 74 4 48 9 196 2 233 1 235 1 
200 1 327 1 57 1 30 1 58 1 81 1 287 1 261 2 9 3 222 5 334 1 362 7 118 2 340 1 144 1 225 1 318 1 320 1 46 9 74 4 48 9 196 2 233 1 235 1 
201 1 230 1 117 1 
187 1 356 2 117 1 
97 1 122 2 
365 1 214 1 156 2 97 1 98 2 158 1 298 1 122 1 300 1 76 2 372 1 
97 1 121 1 122 1 
295 1 344 1 275 1 56 1 228 1 285 1 97 1 121 1 82 1 122 1 230 1 251 1 62 1 254 1 325 1 165 1 117 1 198 1 
228 1 122 1 
295 1 231 1 343 1 198 1 53 1 
295 2 343 1 29 1 175 1 230 1 117 1 198 2 53 1 
295 1 198 1 53 1 
295 1 343 1 344 1 97 1 121 1 122 1 198 1 
117 1 
295 2 343 1 175 1 149 1 230 1 117 1 198 2 53 1 
295 5 132 1 1 1 343 2 314 1 286 1 357 1 110 1 175 1 369 1 239 2 288 1 230 1 278 2 72 2 153 1 117 1 198 5 53 2 
201 1 
56 1 82 1 296 1 367 1 122 1 251 1 312 1 370 1 325 1 
94 1 2 1 40 1 56 2 174 1 156 1 82 2 188 1 98 1 251 1 34 1 279 1 10 1 89 1 76 1 372 1 107 1 52 1 256 1 294 1 
56 2 82 2 367 1 122 1 251 2 312 1 89 1 325 1 107 2 294 2 
303 1 56 1 82 1 325 1 107 1 251 1 294 1 
370 1 296 1 122 1 
257 1 54 1 56 1 285 1 156 1 82 1 89 1 165 1 294 1 295 1 275 1 365 1 228 1 296 1 97 1 98 1 298 1 122 2 251 1 279 1 76 1 372 1 107 1 325 1 198 1 
274 1 56 2 89 1 367 1 82 2 254 1 107 1 251 2 294 1 
295 1 257 1 275 1 56 2 228 1 285 1 296 1 82 2 176 1 122 1 251 2 279 1 89 2 325 1 107 2 165 1 117 1 198 1 294 2 
296 1 122 1 
156 1 98 1 76 1 372 1 
156 1 98 1 76 1 372 1 
321 1 333 1 128 1 304 2 168 1 83 1 281 1 204 1 
56 1 82 1 325 1 107 1 69 1 165 1 251 1 294 1 
56 1 82 1 296 1 367 1 122 1 251 1 312 1 89 1 325 1 107 1 294 1 
303 1 56 2 82 2 69 1 325 1 107 2 251 2 294 2 
308 1 123 1 
308 1 123 1 
21 1 124 1 
21 1 124 1 
21 1 124 1 
147 1 308 1 123 1 
147 1 308 1 123 1 
237 1 308 1 123 1 
192 1 308 2 21 1 123 2 15 1 124 1 
147 1 308 1 123 1 
199 1 308 1 123 1 
199 1 308 1 123 1 
199 1 308 1 123 1 
295 2 55 2 271 2 258 1 173 1 249 2 5 2 308 2 123 2 32 1 170 1 100 1 322 1 160 1 195 3 23 2 15 1 117 1 198 2 
55 1 173 1 56 2 237 1 82 2 5 1 135 1 308 1 294 2 363 1 295 1 271 1 367 1 249 1 68 1 123 1 251 2 125 1 277 1 350 1 216 1 195 1 107 2 198 1 
327 1 30 1 233 1 
327 1 49 1 233 1 
146 1 30 2 49 1 63 1 233 3 169 1 
146 1 30 1 49 1 233 2 169 1 64 1 
146 2 30 1 49 1 233 2 169 1 
109 1 132 2 326 2 238 1 356 3 110 1 175 1 135 1 239 1 159 1 288 3 330 1 7 1 13 1 143 2 117 2 295 5 166 1 187 1 343 4 145 1 316 1 70 1 230 1 125 1 278 1 150 2 350 1 72 1 151 1 198 5 53 1 
109 3 132 6 326 6 356 9 175 1 110 1 135 4 239 2 159 3 288 8 330 2 7 2 13 1 143 6 117 5 295 9 187 3 343 7 247 1 366 1 145 3 316 3 369 1 348 1 22 1 70 3 230 1 278 2 231 5 72 2 215 1 155 1 26 5 198 9 53 6 
109 1 132 2 326 2 356 4 135 1 239 1 159 1 288 3 330 1 7 1 143 2 117 3 166 1 295 3 187 2 343 2 145 1 316 1 369 1 70 1 230 1 278 1 150 1 72 1 151 1 198 3 
109 2 132 4 326 4 356 7 135 2 239 1 159 2 288 5 330 1 7 1 143 4 117 4 295 4 166 1 187 3 343 3 366 1 145 2 316 2 369 1 22 1 70 2 230 1 278 1 150 2 72 1 151 1 215 1 198 4 
201 1 52 1 14 1 
52 1 59 1 
264 1 
94 1 52 1 
262 1 94 1 10 1 345 1 52 3 14 2 
94 1 10 1 52 1 
0 1 52 1 
109 1 120 1 28 1 273 1 316 1 203 1 96 3 297 1 134 1 252 1 205 2 329 3 60 1 88 1 209 4 91 7 16 2 
109 1 120 1 28 1 273 1 316 1 203 1 96 3 297 1 134 1 252 1 205 2 329 3 60 1 88 1 209 4 91 7 16 2 
109 1 120 1 28 1 273 1 316 1 203 1 96 3 297 1 134 1 252 1 205 2 329 3 60 1 88 1 209 4 91 7 78 1 16 2 
109 4 28 1 203 2 134 2 358 1 178 1 83 1 159 3 205 3 359 1 329 10 60 1 333 1 88 5 91 31 209 16 224 1 338 3 16 5 120 2 272 1 273 1 145 3 346 1 168 1 316 4 96 15 297 2 70 3 252 1 301 4 321 1 304 2 194 1 
109 1 203 1 134 1 178 1 83 2 205 2 137 1 329 4 60 1 333 2 88 1 91 9 209 5 16 3 120 1 273 1 316 1 168 2 297 1 96 4 252 1 321 2 102 1 304 4 
79 1 327 1 156 1 57 1 30 1 58 1 221 1 8 1 291 1 34 1 222 1 242 1 63 1 362 1 118 1 341 1 119 1 364 1 98 1 318 1 46 2 232 1 105 1 48 2 49 1 76 1 196 1 256 1 233 2 235 1 
327 1 156 1 57 1 30 1 58 1 177 1 221 1 8 1 291 1 34 1 222 1 242 1 63 1 118 1 362 2 341 1 119 1 364 1 98 1 229 1 318 1 46 3 232 1 48 3 49 1 76 1 24 1 196 1 256 1 233 2 
156 1 327 1 57 1 30 1 58 1 177 1 221 1 8 1 34 1 222 1 242 1 63 1 362 2 119 1 364 1 98 1 318 1 46 2 232 1 48 2 49 1 76 1 24 1 256 1 233 2 
354 1 156 1 4 1 221 2 8 2 34 1 140 1 242 2 118 1 94 1 98 1 368 1 229 1 318 2 46 1 104 1 48 1 76 1 372 1 196 1 283 1 52 1 256 1 
327 1 156 1 30 1 177 1 221 1 8 1 291 1 34 1 242 1 63 1 118 1 341 1 119 1 364 1 98 1 318 1 46 1 232 1 105 1 48 1 49 1 76 1 196 1 256 1 233 2 235 1 
36 1 
56 1 156 2 285 1 4 1 110 1 328 2 239 1 288 2 330 1 12 2 62 1 164 1 165 1 117 3 293 1 65 2 295 5 347 2 250 1 251 1 72 1 352 2 76 2 254 1 306 2 256 1 354 1 132 2 260 1 356 2 82 1 175 3 84 1 180 1 34 1 138 1 223 1 187 2 226 1 94 1 39 1 275 1 228 1 98 2 230 2 319 4 278 1 280 1 106 1 372 2 325 1 52 1 197 2 198 5 53 6 
56 1 285 1 82 1 175 1 138 1 62 1 12 1 164 1 165 1 117 2 293 1 295 3 275 1 228 1 149 1 251 1 230 2 319 2 280 1 106 1 254 1 325 1 198 3 53 2 
295 2 275 1 56 1 228 1 285 1 82 1 230 2 251 1 319 3 280 1 138 1 62 1 106 1 164 1 254 1 325 1 165 1 293 1 117 2 198 2 65 1 
56 1 285 1 82 1 175 1 138 1 62 1 12 1 164 1 165 1 117 2 293 1 65 1 295 3 275 1 228 1 347 1 149 1 251 1 230 2 319 3 280 1 106 1 254 1 325 1 198 3 53 2 
56 1 285 1 82 1 175 1 61 1 138 1 12 1 62 1 164 1 165 1 117 3 293 1 295 3 344 1 275 1 228 1 347 1 97 1 121 1 122 1 149 1 251 1 230 3 319 2 280 1 106 1 254 1 325 1 198 3 53 2 
132 1 56 1 285 1 260 1 356 2 82 1 175 2 110 1 328 2 239 1 288 1 84 1 180 1 138 1 12 2 62 1 164 1 165 1 293 1 117 4 65 2 295 4 187 2 275 1 228 1 347 2 251 1 230 3 319 4 278 1 280 1 72 1 352 2 106 1 254 1 325 1 306 2 197 2 198 4 53 4 
56 1 285 1 110 1 328 2 239 1 288 1 332 1 62 1 12 2 164 1 165 1 293 1 117 3 65 2 295 4 344 1 347 2 121 1 122 1 251 1 71 1 72 1 352 2 254 1 306 2 132 1 82 1 175 2 84 1 180 1 138 1 187 2 275 1 228 1 97 1 44 1 230 3 319 4 278 1 280 1 106 1 325 1 198 4 197 2 53 4 
56 1 285 1 110 1 328 2 239 1 288 1 332 1 62 1 12 2 164 1 165 1 293 1 117 3 65 2 295 4 344 1 347 2 121 1 122 1 251 1 71 1 72 1 352 2 254 1 306 2 132 1 82 1 175 2 84 1 180 1 138 1 187 2 275 1 228 1 97 1 44 1 230 3 319 4 278 1 280 1 106 1 325 1 198 4 197 2 53 4 
56 1 285 1 3 1 110 1 239 1 288 1 331 1 332 1 62 1 12 2 335 2 164 1 165 1 293 1 117 3 65 2 295 4 344 1 347 2 121 1 122 1 251 1 72 1 352 2 254 1 306 2 132 1 131 2 82 1 356 2 175 2 180 1 138 1 275 1 228 1 97 1 230 3 319 4 278 1 280 1 106 1 152 1 325 1 198 4 53 4 
56 1 285 1 110 1 328 2 239 1 288 1 332 1 12 3 62 1 164 1 165 1 293 1 117 3 65 3 295 4 344 1 347 3 121 1 122 1 251 1 71 1 72 1 352 2 254 1 306 2 218 1 132 1 82 1 175 2 84 1 180 1 138 1 187 2 275 1 228 1 97 1 44 1 230 3 319 5 278 1 280 1 106 1 325 1 198 4 197 2 53 5 
56 1 285 1 110 1 328 2 239 1 288 1 332 1 12 3 62 1 164 1 165 1 293 1 117 3 65 3 295 4 344 1 347 3 121 1 122 1 251 1 71 1 72 1 352 2 254 1 306 2 218 1 132 1 82 1 175 2 84 1 180 1 138 1 187 2 275 1 228 1 97 1 44 1 230 3 319 5 278 1 280 1 106 1 325 1 198 4 197 2 53 5 
131 2 132 1 56 1 285 1 260 1 356 2 82 1 175 2 110 1 239 1 288 1 180 1 138 1 12 2 62 1 335 2 164 1 165 1 293 1 117 3 65 2 295 4 275 1 228 1 347 2 251 1 230 3 319 4 278 1 280 1 72 1 352 2 152 1 106 1 254 1 325 1 306 2 198 4 53 4 
109 1 120 1 273 1 201 1 168 1 134 1 204 1 83 1 205 1 252 1 329 1 321 1 60 1 128 1 333 1 304 2 91 2 209 2 281 1 16 1 
248 1 168 1 96 1 83 1 349 1 301 1 321 1 128 1 333 1 304 2 209 1 91 2 281 1 338 1 234 1 
2 1 56 2 174 1 156 1 82 2 83 1 34 1 207 1 10 1 11 1 89 1 333 1 91 2 209 1 92 1 294 1 94 1 168 1 367 1 188 1 317 1 96 1 98 1 251 1 321 1 126 1 279 1 128 1 304 2 76 1 372 1 107 1 77 1 281 1 25 1 52 1 256 1 234 1 
109 3 2 2 56 3 156 3 159 2 205 1 329 8 60 1 208 2 10 2 333 3 11 7 209 10 336 7 246 2 16 4 294 1 120 1 168 3 298 2 70 2 252 1 251 1 126 1 128 3 304 6 76 3 217 2 25 1 256 2 174 2 82 3 134 1 177 1 31 1 83 3 34 2 89 1 88 4 91 20 94 2 273 1 145 2 40 7 316 3 276 1 367 2 96 10 188 2 98 3 321 3 279 1 193 2 372 1 107 1 154 1 281 3 52 2 234 1 
156 1 168 1 98 1 83 1 126 1 321 1 128 1 333 1 304 2 91 1 209 1 371 1 76 1 372 1 281 1 255 1 
109 1 83 1 159 1 333 1 209 1 91 2 145 1 168 1 316 1 296 1 96 1 122 1 70 1 321 1 128 1 304 2 305 1 281 1 234 1 
109 1 145 1 168 1 204 1 83 1 321 1 360 1 128 1 333 1 304 2 91 1 209 1 281 1 
168 1 316 1 96 1 204 1 83 1 159 1 321 1 128 1 333 1 103 1 304 2 91 1 281 1 
109 1 145 1 316 1 168 1 96 1 159 1 204 1 83 1 70 1 321 1 128 1 333 1 304 2 91 2 209 1 281 1 
109 1 145 1 168 1 83 1 321 1 360 1 128 1 333 1 304 2 91 1 209 1 371 1 281 1 
168 1 316 1 96 1 83 1 159 1 321 1 128 1 333 1 103 1 304 2 91 1 371 1 281 1 
109 1 145 1 316 1 168 1 96 1 159 1 83 1 70 1 321 1 128 1 333 1 304 2 91 2 209 1 371 1 281 1 
109 1 145 1 316 1 168 1 96 1 159 1 83 1 70 1 321 1 128 1 333 1 304 2 209 1 91 2 281 1 
156 1 98 1 76 1 298 1 372 1 
167 1 156 1 98 1 76 1 372 1 
109 1 145 1 316 1 168 1 96 1 159 1 83 1 70 1 321 1 128 1 333 1 304 2 91 2 209 1 281 1 234 1 
79 1 156 1 98 1 76 1 298 1 217 1 
109 1 145 1 316 1 168 1 96 1 296 1 122 1 159 1 83 1 70 1 321 1 128 1 333 1 304 2 267 1 91 2 209 1 281 1 234 1 
109 3 307 1 83 2 159 3 359 1 6 1 329 6 87 1 161 2 333 2 88 3 91 19 209 9 338 1 224 1 16 3 211 1 186 2 145 3 168 2 316 3 96 10 43 1 299 1 70 3 190 1 301 2 321 2 102 1 304 4 
109 3 307 1 111 1 178 2 83 3 159 2 359 2 329 4 6 2 87 2 161 1 88 2 333 3 91 26 209 14 142 1 183 1 338 2 16 2 211 1 186 4 145 3 316 2 168 3 96 12 43 1 148 1 70 3 301 2 302 1 321 3 102 1 323 1 304 6 
109 5 307 1 134 1 111 1 178 1 83 3 159 4 205 1 359 3 6 2 329 8 87 1 60 1 161 1 333 3 88 4 91 41 209 20 142 1 183 1 338 3 224 1 16 4 211 1 186 4 120 1 273 1 145 4 168 3 316 5 96 21 43 1 148 1 70 4 190 1 252 1 301 4 302 1 321 3 323 1 102 1 304 6 282 1 
109 5 307 1 134 1 111 1 178 2 83 4 159 3 205 1 359 3 6 2 329 7 87 1 60 1 161 1 333 4 88 3 91 38 209 20 142 1 183 1 338 3 224 1 16 4 211 1 186 4 120 1 273 1 145 4 168 4 316 4 96 18 43 1 148 1 70 4 190 1 252 1 301 4 302 1 321 4 323 1 102 1 304 8 282 1 
109 8 307 1 134 1 111 1 178 1 83 2 159 7 205 1 359 2 6 1 329 14 87 1 60 1 161 1 333 2 88 7 91 52 209 27 142 1 37 2 183 1 338 4 224 2 16 7 211 1 186 4 120 1 273 1 145 7 168 2 316 8 96 25 43 1 148 1 70 7 252 1 301 4 302 1 321 2 323 1 102 1 304 4 
100 1 55 1 271 1 181 1 249 1 5 1 308 1 123 1 15 1 170 1 
237 1 277 1 
309 1 66 1 55 1 271 1 249 1 5 1 308 1 116 1 123 1 
295 1 55 1 271 1 258 1 173 1 249 1 5 1 308 1 123 1 32 1 170 1 100 1 322 1 195 2 23 1 15 1 117 1 198 1 
295 1 55 1 271 1 258 1 173 1 249 1 5 1 308 1 123 1 32 1 170 1 100 1 322 1 195 2 23 1 15 1 117 1 198 1 
295 1 55 1 271 1 258 1 173 1 249 1 5 1 308 1 123 1 32 1 170 1 100 1 322 1 195 2 23 1 15 1 117 1 198 1 
101 1 192 1 147 1 
101 1 192 1 147 1 
199 1 373 1 
199 1 192 1 373 1 
216 1 68 1 
55 1 56 2 237 1 82 2 5 1 135 1 308 1 32 1 339 1 363 1 294 2 295 1 343 1 271 1 367 1 249 1 68 1 123 1 251 2 125 1 277 1 350 1 216 1 23 1 195 1 107 2 198 1 
101 1 147 1 
199 1 192 1 373 1 
27 1 56 2 156 2 82 2 83 1 34 1 265 1 333 1 209 1 91 2 292 1 269 1 94 1 168 1 96 1 98 2 20 1 251 2 300 2 321 1 126 1 128 1 304 2 75 1 76 2 281 1 25 1 52 1 255 1 256 1 234 1 
79 1 364 1 327 1 156 2 30 1 98 2 177 1 290 1 310 1 8 1 34 1 232 1 139 1 49 1 76 2 63 1 233 2 256 1 341 1 
364 1 327 1 156 1 30 1 98 1 177 1 290 1 8 1 232 1 34 1 49 1 90 1 76 1 63 1 233 2 341 1 256 1 
94 1 354 1 156 1 98 1 368 1 4 1 8 1 34 1 139 1 76 1 372 1 52 1 51 1 256 1 
364 1 327 1 156 1 30 1 98 1 177 1 290 1 310 1 8 1 34 1 232 1 139 1 49 1 76 1 63 1 233 2 341 1 256 1 
19 1 
132 1 1 1 201 1 357 1 288 1 230 1 117 1 
132 1 356 1 110 1 175 1 328 1 239 1 288 1 84 1 117 2 295 1 187 1 230 1 278 1 72 1 197 1 198 1 53 1 
109 1 132 3 326 3 157 1 156 1 356 6 175 1 110 2 239 2 159 1 240 1 288 4 59 2 330 1 86 1 262 1 34 2 10 1 162 1 143 3 115 1 337 1 117 3 246 1 14 1 295 2 187 3 94 1 145 1 275 1 41 1 316 1 98 1 70 1 278 2 253 1 72 2 76 1 372 1 52 4 198 2 256 1 53 2 
109 2 132 5 326 5 356 6 175 1 110 2 239 2 111 1 112 1 288 8 159 2 359 1 330 1 142 1 143 5 182 1 338 1 270 1 117 5 295 1 226 1 187 3 145 2 41 2 316 2 148 1 70 2 230 2 301 1 302 1 278 2 323 1 72 2 198 1 53 1 
109 1 295 1 132 1 120 1 344 1 316 1 41 2 97 1 121 1 110 1 44 1 134 1 122 1 239 1 288 2 252 1 278 1 72 1 163 1 198 1 
1 1 132 1 357 1 110 1 239 1 288 1 230 1 278 1 72 1 117 1 
109 2 187 5 132 5 145 2 326 5 41 2 316 2 356 10 70 2 159 2 288 5 143 5 182 1 246 1 117 5 
295 1 175 1 230 1 117 1 198 1 53 1 
130 1 132 2 354 1 355 2 156 4 259 1 110 1 175 2 4 1 239 2 288 2 330 2 263 1 34 3 10 1 266 1 241 1 93 1 295 3 226 2 94 2 39 1 98 4 369 1 250 1 278 2 72 2 127 1 76 4 372 2 52 2 256 2 198 3 53 4 
365 1 156 1 97 1 98 1 76 1 298 1 372 1 122 1 
187 2 226 1 132 2 326 2 356 4 110 1 239 1 288 1 205 1 230 2 330 1 278 1 72 1 143 2 117 4 
271 1 213 1 249 1 
271 1 213 1 249 1 
100 1 33 1 271 1 216 1 249 1 
271 1 213 1 249 1 
271 1 249 1 189 1 
271 1 249 1 189 1 
271 1 249 1 189 1 
271 1 249 1 
308 1 123 1 
109 1 120 1 273 1 316 1 168 2 96 4 134 1 178 1 83 2 205 1 252 1 329 3 321 2 60 1 88 1 333 2 304 4 91 8 209 4 16 2 
109 1 120 1 273 1 201 1 316 1 96 3 134 1 205 1 252 1 329 2 60 1 209 3 91 6 16 2 
109 1 145 1 316 1 168 1 96 2 42 1 159 1 83 1 70 1 329 2 321 1 333 1 88 1 304 2 209 2 91 4 16 1 
109 1 145 1 316 1 96 4 159 1 70 1 359 1 301 2 329 2 88 1 91 7 209 3 338 1 224 1 16 1 
109 3 134 2 178 2 159 2 83 2 205 1 179 1 329 9 60 1 88 4 333 2 209 11 91 23 37 1 224 1 338 2 16 5 120 2 273 1 145 2 248 1 316 3 168 2 96 12 70 2 252 1 301 2 321 2 304 4 
96 1 91 1 301 1 
91 1 209 1 338 1 
109 1 145 1 168 1 316 1 42 1 96 3 83 1 70 1 159 1 329 3 321 1 333 1 88 1 304 2 91 6 209 3 246 1 16 2 
109 2 111 1 83 1 159 2 359 1 329 2 88 1 333 1 91 12 209 6 142 1 338 1 16 1 145 2 168 1 316 2 96 6 148 1 70 2 301 1 302 1 321 1 323 1 102 1 304 2 
109 1 120 1 316 1 96 3 134 1 252 1 329 2 88 1 209 3 91 6 16 1 
120 1 273 1 168 1 96 2 134 1 178 1 83 1 179 1 329 2 321 1 60 1 88 1 333 1 304 2 209 1 91 3 16 1 
109 2 120 2 168 1 316 2 96 5 134 2 83 1 252 1 329 5 321 1 102 1 333 1 88 2 304 2 209 5 91 10 163 1 16 3 
109 1 145 1 168 1 83 1 329 1 321 1 102 1 333 1 88 1 304 2 209 2 91 2 
109 1 145 1 316 1 168 1 96 2 159 1 83 1 70 1 329 2 321 1 102 1 333 1 88 1 304 2 209 2 91 4 16 1 
120 1 168 3 96 2 134 1 178 1 83 3 190 1 179 1 329 2 321 3 102 1 333 3 88 1 304 6 91 3 209 1 16 1 
109 5 134 3 358 1 178 2 83 5 159 3 205 1 179 1 359 1 329 12 60 1 333 5 88 5 91 34 209 16 338 3 224 1 16 7 120 3 272 1 273 1 145 3 168 5 316 5 96 18 42 1 70 3 252 2 190 1 301 4 321 5 102 1 304 10 194 1 
109 1 134 1 83 1 205 1 359 1 329 2 60 1 333 1 91 8 209 4 338 1 16 2 120 1 273 1 316 1 168 1 96 4 252 1 301 1 321 1 323 1 102 1 304 2 
109 2 134 1 83 2 205 1 359 1 329 3 60 1 333 2 88 1 91 11 209 6 338 1 224 1 16 2 120 1 273 1 145 1 316 1 168 2 96 5 42 1 70 1 252 1 301 2 321 2 323 1 102 1 304 4 
109 3 134 1 111 1 178 1 83 3 159 2 205 1 359 1 329 4 60 1 88 1 333 3 91 19 209 9 142 1 338 1 16 3 120 1 273 1 145 2 168 3 316 3 42 1 96 10 148 1 70 2 252 1 301 1 302 1 321 3 323 1 102 1 304 6 
109 3 134 1 111 1 178 1 83 3 159 1 205 1 359 1 329 5 60 1 88 2 333 3 91 17 209 10 142 1 338 1 16 3 120 1 273 1 145 2 168 3 316 2 42 1 96 7 148 1 70 2 252 1 301 1 302 1 321 3 323 1 102 1 304 6 
109 1 134 1 83 1 205 1 359 1 329 2 60 1 333 1 91 8 209 4 338 1 16 2 120 1 273 1 316 1 168 1 96 4 252 1 301 1 321 1 323 1 102 1 304 2 
109 2 111 1 83 1 159 2 359 1 329 2 88 1 333 1 91 12 209 6 142 1 338 1 16 1 145 2 168 1 316 2 96 6 148 1 70 2 301 1 302 1 321 1 323 1 102 1 304 2 
109 3 134 1 111 1 178 2 83 4 159 1 205 1 359 1 329 5 60 1 88 2 333 4 91 18 209 10 142 1 338 1 16 3 120 1 273 1 145 2 168 4 316 2 96 8 42 1 148 1 70 2 252 1 301 1 302 1 321 4 323 1 102 1 304 8 
109 3 111 1 178 2 83 4 159 2 359 1 329 6 88 3 333 4 91 16 209 9 142 1 338 1 16 3 145 3 168 4 316 2 96 7 148 1 70 3 190 1 301 1 302 1 321 4 323 1 102 1 304 8 
109 1 120 3 273 2 316 1 96 4 134 3 252 1 329 6 60 1 88 3 91 7 209 3 16 3 
109 3 134 1 111 1 178 2 83 4 159 1 205 1 359 1 329 4 60 1 88 1 333 4 91 18 209 10 142 1 338 1 16 3 120 1 273 1 145 2 168 4 316 2 96 8 148 1 70 2 252 1 190 1 301 1 302 1 321 4 323 1 102 1 304 8 
274 1 56 1 367 1 82 1 254 1 108 1 251 1 
129 1 274 1 56 1 367 1 82 1 289 1 99 1 251 1 172 1 114 1 254 1 108 1 
34 1 94 1 354 1 201 1 156 1 4 1 98 1 76 1 372 1 52 1 256 1 
94 1 2 1 56 2 174 1 156 1 367 1 82 2 98 1 251 1 34 1 10 1 89 1 76 1 372 1 107 1 52 1 256 1 294 1 
2 1 236 1 0 1 355 1 56 2 156 1 174 1 285 1 82 2 34 1 10 2 89 1 165 1 294 2 94 2 367 1 98 1 251 2 76 1 107 1 325 1 52 3 256 1 
236 1 0 1 355 1 56 2 156 2 174 1 285 1 82 2 311 1 34 1 10 2 89 1 165 1 294 2 94 2 367 1 67 1 98 2 251 2 76 2 107 1 325 1 52 3 256 1 
295 1 344 1 355 1 156 1 97 1 121 1 98 1 122 1 230 1 59 1 76 1 324 1 52 1 117 1 198 1 
295 1 344 1 355 1 156 1 97 1 121 1 98 1 122 1 230 1 59 1 162 1 76 1 52 1 117 1 198 1 
34 1 156 1 315 1 98 1 76 1 256 1 
284 1 79 1 94 2 156 7 315 1 18 1 98 6 219 1 177 1 300 1 85 1 262 1 34 3 10 1 266 1 75 1 241 1 76 7 372 2 52 3 256 2 
109 1 2 1 56 2 156 1 205 1 329 2 60 1 208 1 10 1 11 1 333 2 209 3 336 1 294 1 16 2 120 1 168 2 298 1 20 1 251 1 252 1 128 2 304 4 76 1 217 1 256 1 79 1 174 1 82 2 134 1 83 2 34 1 89 1 91 6 94 1 273 1 40 1 316 1 188 1 96 3 367 2 98 1 321 2 107 1 281 2 52 1 234 1 
109 1 132 3 1 1 156 1 157 1 357 1 110 2 175 1 134 1 239 2 288 4 59 1 86 1 162 1 163 1 115 1 117 2 14 1 93 1 295 3 120 1 343 1 344 1 275 1 316 2 41 2 97 1 121 1 98 1 122 1 252 1 230 2 278 2 72 2 76 1 372 1 52 2 198 3 53 2 
79 1 94 1 156 2 315 1 98 2 240 1 262 1 34 2 10 1 76 2 52 2 14 1 256 1 
342 1 79 1 354 1 94 1 156 4 67 1 98 4 4 1 34 1 76 4 372 1 52 1 256 1 
94 1 355 1 156 2 259 1 276 1 98 2 263 1 34 2 10 1 266 1 241 1 76 2 52 1 256 1 
34 1 364 1 327 1 156 1 49 1 98 1 76 1 372 1 233 1 256 1 
79 1 94 1 156 2 98 2 177 1 34 1 75 1 76 2 269 1 52 1 256 1 
342 1 79 1 284 1 354 1 94 2 355 1 156 5 18 1 4 1 98 4 34 2 75 1 76 5 372 1 52 3 256 2 
342 1 79 1 353 1 284 1 354 1 94 2 355 1 156 5 4 1 98 4 34 2 75 1 76 5 372 1 52 3 256 2 
94 1 56 2 174 1 156 1 367 1 82 2 98 1 251 1 311 1 34 1 10 1 89 1 76 1 372 1 107 1 52 1 256 1 294 1 
94 1 355 1 156 1 98 1 219 1 262 1 34 2 10 1 266 1 241 1 76 1 52 1 256 1 
212 1 73 1 95 1 367 1 244 1 
257 1 285 1 210 1 244 1 313 1 165 1 117 1 295 2 343 1 212 1 95 1 275 1 344 1 228 1 97 1 121 1 122 1 230 1 45 1 73 1 325 1 198 2 
27 1 212 1 95 1 56 1 265 1 82 1 292 1 251 1 244 1 
212 1 313 1 45 1 
201 1 57 1 58 1 222 1 
46 1 57 1 58 1 48 1 222 1 196 1 118 1 
46 1 318 1 221 1 
227 2 57 1 58 1 46 3 351 1 113 1 48 3 222 1 196 1 118 1 245 1 235 1 
46 2 57 1 58 1 48 2 222 1 196 1 362 1 261 1 118 1 
200 1 327 1 30 1 46 1 74 1 48 1 222 1 196 1 118 1 233 1 235 1 
46 1 57 1 48 1 222 1 196 1 118 1 235 1 
46 1 57 2 58 1 48 1 196 1 118 1 235 1 
206 1 46 1 48 1 220 1 196 1 118 1 235 1 
57 1 58 1 81 1 320 1 46 3 9 1 74 1 48 3 222 2 196 1 118 1 362 2 235 1 
327 1 57 1 30 1 58 1 46 2 35 1 49 1 48 2 222 1 196 1 63 1 233 2 118 1 362 1 235 1 
57 1 58 1 261 1 46 4 9 1 74 1 48 4 222 2 196 2 118 2 340 1 362 2 235 1 
46 1 57 1 58 1 48 1 222 1 196 1 118 1 235 1 
227 1 57 2 58 2 46 4 9 1 113 1 74 1 48 4 222 3 50 1 196 1 245 1 362 2 118 1 
46 2 47 1 57 1 58 1 48 2 222 1 196 1 362 1 118 1 144 1 185 1 235 1 
227 2 133 1 57 1 58 1 46 3 113 2 48 3 222 1 196 1 245 1 118 1 235 1 
268 1 222 2 243 2 184 1 
46 1 48 1 136 1 196 1 118 1 235 1 
320 1 46 2 57 1 58 1 48 2 222 1 196 1 362 1 118 1 235 1 
80 1 
46 1 57 1 58 1 48 1 222 1 196 1 118 1 235 1 
227 1 57 1 58 1 320 1 46 3 48 3 222 1 196 1 362 1 118 1 235 1 
9 1 74 1 222 1 50 1 
57 1 222 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 164 42 (55,230) (55,230) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 164 42 (55,230) (55,230) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 164 42 30 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 164 42 30 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 314 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
305 1 226 1 307 1 244 2 4 1 290 3 291 1 346 2 9 1 295 3 185 2 62 1 264 1 
171 1 172 1 307 1 55 1 196 1 2 1 4 2 244 2 290 7 198 2 291 3 346 2 9 1 295 7 83 1 62 2 12 1 225 1 42 1 230 1 164 2 185 3 102 1 189 2 264 4 
171 1 172 1 307 1 55 1 196 1 2 1 4 2 244 2 290 7 198 2 291 3 346 2 9 1 295 7 83 1 62 2 12 1 225 1 42 1 230 1 164 2 185 3 102 1 189 2 264 4 
305 1 171 1 172 1 307 1 55 1 196 1 2 1 4 2 244 2 290 9 198 2 291 4 274 1 346 2 9 1 295 9 83 1 62 3 12 1 225 1 226 1 42 1 230 1 164 2 185 5 102 2 169 1 189 2 264 6 
305 1 171 1 172 1 307 1 55 1 196 1 2 1 4 2 244 2 290 7 198 2 291 3 346 2 9 1 295 7 83 1 62 2 12 1 225 1 226 1 42 1 230 1 164 2 185 4 102 1 189 2 264 4 
171 1 305 1 307 1 244 1 290 4 291 2 198 1 274 1 346 1 295 4 62 1 42 1 226 1 164 1 185 3 102 2 189 1 169 1 264 3 
225 1 41 1 205 1 305 1 226 1 307 1 2 1 244 1 4 1 290 2 198 1 164 1 346 1 185 1 295 2 224 1 
171 1 42 1 307 1 30 1 244 2 4 1 290 7 164 1 198 1 212 1 291 3 346 2 9 1 185 3 295 7 83 1 62 2 12 1 102 1 189 1 264 5 
171 1 42 1 307 1 30 1 244 2 4 1 290 7 164 1 198 1 212 1 291 3 346 2 9 1 185 3 295 7 83 1 62 2 12 1 102 1 189 1 264 5 
88 1 91 1 317 1 253 1 18 1 353 1 335 1 355 1 337 1 186 1 74 1 97 1 100 1 136 1 
147 1 
306 1 91 2 359 1 136 1 254 1 355 2 142 1 147 1 
240 1 91 5 125 1 306 2 126 1 163 1 67 1 355 5 142 1 5 1 109 1 247 2 46 2 84 1 359 1 136 2 217 2 147 1 40 1 
273 1 302 2 147 1 
88 2 317 2 253 2 353 2 100 1 11 1 335 2 337 2 
238 1 324 1 151 1 34 1 155 1 81 1 7 1 329 1 8 1 175 1 132 1 135 1 11 1 200 1 117 1 88 3 276 2 251 1 227 1 162 2 317 2 253 2 140 1 93 1 353 2 335 2 231 1 336 1 337 3 182 2 299 1 356 1 300 2 233 1 303 1 100 1 99 2 
88 1 317 1 186 1 253 1 74 1 97 1 353 1 100 1 335 1 337 1 
142 1 314 1 147 1 
88 1 218 1 317 1 91 1 286 1 344 1 355 1 142 1 337 1 35 1 184 1 248 1 74 1 147 1 
88 1 218 1 317 1 91 2 253 1 286 1 353 1 335 1 355 2 142 1 337 1 35 1 248 1 74 1 147 1 
232 1 306 1 91 1 136 1 355 1 
204 1 306 1 91 2 359 1 136 1 355 2 142 1 147 1 
306 1 91 1 355 1 
88 2 317 2 253 1 353 1 335 1 127 1 337 2 70 1 11 2 
14 1 131 1 75 1 
88 1 276 1 238 1 251 1 162 1 93 1 34 1 155 1 337 1 299 1 7 1 121 1 8 1 132 1 99 1 11 1 
14 1 88 2 276 1 251 1 238 1 162 1 317 1 139 1 93 1 285 1 353 1 335 1 34 1 155 1 337 2 299 1 7 1 8 1 132 1 99 1 
11 1 314 1 
88 3 317 3 253 1 285 1 353 3 11 1 335 3 337 3 
88 1 317 1 186 1 74 1 353 1 335 1 337 1 
88 1 317 1 253 1 74 1 353 1 335 1 127 1 337 1 70 1 
218 1 238 1 151 1 285 1 286 1 34 1 155 1 35 1 7 1 8 1 329 1 132 1 175 1 248 1 135 1 11 1 200 1 117 1 88 4 276 1 251 1 118 1 227 1 162 1 317 3 91 1 253 2 139 1 93 1 353 3 335 3 231 1 355 1 336 1 337 4 70 1 182 2 299 1 300 1 233 1 74 1 100 1 99 1 188 1 
88 2 184 1 317 2 39 1 285 1 353 1 11 1 335 1 337 2 
218 1 88 3 90 1 91 1 317 3 253 1 139 1 285 2 286 1 353 3 335 3 355 1 337 3 70 1 35 1 248 1 74 1 188 1 147 1 
88 2 14 1 317 2 253 1 285 1 353 2 335 2 337 2 70 1 75 1 
88 1 276 1 238 1 251 1 162 1 93 1 34 1 155 1 337 1 299 1 7 1 8 1 132 1 99 1 11 1 
88 1 276 1 238 1 251 1 162 1 138 1 93 1 155 1 337 1 299 1 345 1 7 1 8 1 99 1 11 1 
14 1 117 1 227 1 179 1 94 1 231 1 336 1 128 1 182 2 131 1 300 2 348 1 82 1 233 2 85 1 135 1 75 1 200 1 202 1 
88 1 6 1 317 1 74 1 286 1 353 1 335 1 337 1 
88 5 149 1 317 5 253 1 139 1 285 2 326 1 353 4 335 4 337 5 70 1 184 1 39 1 11 1 
6 1 88 2 317 2 186 1 74 1 353 2 335 2 337 2 
267 1 38 1 209 1 
165 1 267 2 209 2 190 1 146 1 71 1 
267 1 209 1 
267 1 209 1 
190 1 71 1 
190 1 71 1 
190 1 71 1 
357 1 267 1 209 1 
357 1 267 1 209 1 
357 1 267 1 209 1 
267 1 325 1 209 1 
267 1 325 1 209 1 
267 1 325 1 209 1 
267 1 31 1 343 1 57 1 110 1 245 1 199 1 59 1 38 1 11 1 88 2 15 1 91 1 317 2 66 1 209 1 353 2 335 2 355 1 337 2 256 1 213 1 48 1 216 1 
15 2 105 2 267 2 91 2 31 2 209 2 355 2 110 1 213 2 256 3 158 1 279 1 59 2 176 1 143 1 146 1 333 1 234 1 147 1 
283 1 242 2 189 1 224 1 198 2 
189 1 164 1 198 1 
224 1 164 1 198 1 
328 1 283 1 242 1 189 2 224 1 198 3 
283 1 137 1 242 1 189 1 224 1 198 2 
306 1 126 3 56 1 33 1 5 2 245 1 273 1 174 1 36 1 247 1 10 1 332 1 136 4 202 1 249 2 91 5 66 1 94 1 297 1 67 1 21 1 355 5 142 1 278 2 46 1 48 1 302 3 261 1 359 1 103 2 217 1 147 2 
192 1 52 1 240 1 306 6 287 1 126 8 33 2 5 6 157 1 273 3 36 3 247 2 10 2 332 1 312 1 136 7 202 3 249 6 316 1 91 9 66 4 94 3 297 3 67 1 355 9 142 1 232 5 95 5 46 2 302 9 261 3 359 1 103 6 217 2 147 5 
240 1 126 3 56 1 33 1 5 2 273 2 36 1 247 1 10 1 136 2 202 1 249 2 91 3 66 1 94 1 297 1 21 1 355 3 142 1 278 1 46 1 302 4 261 1 103 2 217 1 147 3 
52 1 240 1 126 5 56 1 33 1 5 4 157 1 273 3 36 2 247 1 10 1 136 3 202 2 249 4 316 1 91 4 66 2 94 2 297 2 355 4 21 1 142 1 278 2 46 1 302 7 261 2 103 4 217 1 147 4 
78 1 
280 1 155 1 
133 1 155 1 314 1 
7 1 155 1 
292 1 7 1 251 1 133 2 155 3 119 1 
7 1 251 1 155 1 
351 1 155 1 
324 4 179 3 195 1 19 1 94 1 354 1 130 1 45 2 300 7 233 3 82 2 281 1 47 1 301 1 260 1 261 1 201 1 161 1 
324 3 195 1 243 1 61 1 82 1 135 1 13 1 161 1 16 1 227 1 179 2 277 1 354 1 231 1 336 1 45 1 182 2 25 1 300 6 258 1 233 3 281 1 301 2 47 1 
324 5 195 1 130 1 82 3 135 2 161 1 227 2 179 4 19 1 94 1 231 2 336 2 182 4 45 2 300 9 258 1 233 4 281 1 301 1 47 1 260 1 261 1 101 1 144 1 
324 4 179 3 195 1 19 1 94 1 354 1 130 1 45 2 300 7 233 3 82 2 281 1 47 1 301 1 260 1 261 1 161 1 
324 4 179 3 195 1 19 1 94 1 354 1 130 1 45 2 300 7 233 3 82 2 281 1 47 1 301 1 260 1 261 1 161 1 
276 1 238 1 296 1 0 1 162 1 342 1 92 1 152 2 79 1 4 2 244 1 155 1 290 1 58 2 327 2 299 1 7 1 8 1 346 1 295 1 99 1 334 1 361 1 
238 1 307 1 1 1 152 1 244 1 4 1 290 1 58 1 327 1 198 2 309 1 328 1 8 1 346 1 295 1 275 1 224 1 276 1 207 1 162 1 69 1 164 1 24 1 187 1 99 1 189 1 
305 1 238 1 307 1 1 1 152 1 244 1 4 1 290 2 58 1 327 1 198 2 309 1 328 1 8 1 346 1 295 2 275 1 224 1 276 1 207 1 226 1 162 1 350 1 69 1 164 1 185 1 187 1 99 1 189 1 264 1 
305 1 238 1 1 1 152 1 79 1 244 1 4 1 290 3 58 1 327 1 198 2 328 1 309 1 8 1 346 1 222 1 295 3 275 1 224 1 276 1 207 1 226 1 162 1 164 1 24 1 185 1 187 1 99 1 189 1 264 2 
305 1 238 1 1 1 152 1 4 1 290 2 58 1 327 1 198 2 328 1 8 1 222 1 295 2 224 1 276 1 207 1 226 1 162 1 164 1 24 1 185 1 187 1 99 1 189 1 264 2 
22 1 
237 1 238 1 306 2 126 1 270 1 271 1 155 1 5 1 7 1 8 1 247 1 134 1 10 1 334 1 276 2 296 1 162 2 91 2 67 1 181 1 355 2 338 1 299 2 73 1 46 1 340 1 99 2 359 1 217 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 306 1 91 2 359 1 181 1 271 1 254 1 355 2 
239 1 237 1 91 1 126 1 67 1 355 1 271 1 181 1 5 1 338 1 73 1 247 1 46 1 217 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
338 1 237 1 73 1 91 1 181 1 271 1 355 1 
237 1 91 1 126 1 67 1 355 1 271 1 181 1 5 1 338 1 73 1 247 1 294 1 46 1 217 1 
238 4 324 1 151 1 285 1 155 4 107 1 7 3 8 3 112 1 200 2 160 1 334 1 117 2 252 1 251 1 296 1 162 7 335 1 336 2 68 1 337 1 299 2 24 1 300 2 303 2 220 1 177 1 85 1 135 2 86 1 178 1 276 6 88 1 227 2 350 1 317 1 140 1 353 1 231 2 182 4 233 1 99 7 191 1 
324 1 131 1 36 1 82 1 135 1 200 1 313 1 202 1 203 1 14 1 117 1 88 1 227 1 179 1 317 1 253 1 353 1 335 1 297 1 94 1 231 1 336 1 337 1 70 1 182 2 300 3 233 2 261 1 75 1 
324 3 195 1 130 1 131 1 82 2 85 1 135 1 11 2 200 1 314 1 14 1 117 1 227 1 179 2 19 1 94 1 231 1 336 1 182 2 45 1 300 6 281 1 233 3 260 1 261 1 75 1 
77 1 324 7 151 1 153 1 131 7 36 2 135 2 11 1 200 1 64 1 203 1 117 2 14 7 227 2 179 1 140 1 277 2 297 2 231 2 298 1 336 2 182 4 25 2 300 10 259 1 233 3 166 1 47 1 74 1 261 2 75 1 
238 1 324 1 151 1 285 1 34 1 155 1 7 1 8 1 132 1 135 1 11 1 200 1 203 1 276 1 117 1 88 2 251 1 17 1 162 1 227 1 317 1 139 1 93 1 229 1 140 1 353 1 335 1 231 1 337 2 336 1 299 1 182 2 121 1 300 2 233 1 99 1 75 1 124 1 
238 1 324 3 151 1 285 1 34 1 155 1 36 1 131 2 7 1 8 1 132 1 175 1 135 2 200 2 203 1 14 2 117 2 88 2 276 1 251 1 227 2 162 1 179 2 317 1 139 1 93 1 352 1 353 1 297 1 335 1 231 2 337 2 336 2 255 1 182 4 299 1 72 1 300 5 339 1 233 2 47 2 261 1 99 1 75 2 26 1 
14 1 117 1 324 2 227 1 179 1 231 1 20 1 336 1 182 2 131 1 36 1 300 2 47 1 85 1 135 1 261 1 75 1 200 1 
14 1 117 1 227 1 179 1 94 1 231 1 336 1 182 2 131 1 300 2 348 1 82 1 233 2 85 1 135 1 75 1 200 1 202 1 
14 2 117 1 324 2 227 1 179 2 94 1 297 1 231 1 336 1 182 2 131 2 36 1 300 4 82 1 233 2 47 1 85 1 135 1 261 1 75 2 200 1 202 1 
14 1 117 1 324 2 220 1 227 1 179 1 231 1 20 1 336 1 182 2 131 1 36 1 300 2 47 1 135 1 261 1 75 1 200 1 
14 1 117 1 220 1 227 1 179 1 94 1 231 1 336 1 182 2 131 1 300 2 348 1 82 1 233 2 135 1 75 1 200 1 202 1 
14 1 117 1 324 2 220 1 227 1 179 1 297 1 231 1 336 1 182 2 131 1 36 1 300 2 47 1 135 1 261 1 75 1 200 1 
14 1 117 1 324 2 227 1 179 1 297 1 231 1 336 1 182 2 131 1 36 1 300 2 47 1 135 1 261 1 75 1 200 1 
238 1 324 1 151 1 34 1 155 1 7 1 8 1 132 1 175 1 135 1 11 1 200 1 276 1 88 1 117 1 251 1 162 1 227 1 140 1 93 1 231 1 337 1 336 1 299 1 182 2 300 2 233 1 99 1 
238 1 324 1 151 1 155 1 7 1 345 1 8 1 60 1 135 1 11 1 200 1 276 1 88 1 117 1 251 1 162 1 227 1 138 1 140 1 93 1 231 1 337 1 336 1 299 1 182 2 300 2 233 1 99 1 
14 1 117 1 324 2 227 1 179 1 297 1 231 1 336 1 182 2 131 1 36 1 300 2 47 1 135 1 261 1 75 1 200 1 203 1 
238 1 324 2 34 1 155 1 131 1 36 1 7 1 8 1 132 1 175 1 135 1 200 1 14 1 276 1 88 1 117 1 251 1 162 1 350 1 227 1 179 1 93 1 297 1 231 1 337 1 336 1 182 2 300 2 339 1 47 1 261 1 99 1 75 1 
324 2 36 1 131 1 114 1 135 1 200 1 203 1 117 1 88 1 14 1 227 1 179 1 317 1 253 1 353 1 335 1 297 1 231 1 336 1 337 1 70 1 182 2 300 2 47 1 261 1 75 1 
170 1 236 1 324 17 150 1 106 1 195 1 3 1 130 1 246 1 36 3 61 2 82 3 135 4 87 1 202 3 315 1 65 1 227 4 179 6 19 1 94 4 277 2 297 3 231 4 336 4 45 1 182 8 25 2 120 1 257 3 258 2 300 33 281 1 233 16 47 3 260 1 261 4 51 1 101 1 104 1 29 1 
170 1 236 1 324 14 150 1 3 1 246 1 111 1 36 3 61 2 82 2 135 3 87 2 202 2 315 1 65 1 227 3 179 4 94 2 277 2 297 3 231 3 336 3 182 6 25 2 120 1 257 4 258 2 300 26 233 12 47 2 261 3 101 1 104 2 29 1 
170 1 236 1 324 19 150 1 195 1 3 1 130 1 246 1 111 1 36 3 61 3 82 4 135 4 87 1 202 3 315 1 65 1 227 4 179 8 19 1 94 4 277 3 297 3 231 4 336 4 45 1 182 8 25 3 120 1 257 4 258 2 300 37 281 1 233 18 47 4 260 1 261 4 49 1 51 1 101 1 104 2 29 1 
170 1 236 1 324 18 150 1 195 1 3 1 130 1 246 1 111 1 36 3 61 2 82 2 135 4 87 1 202 3 315 1 65 1 227 4 179 5 19 1 94 4 277 2 297 3 231 4 336 4 45 1 182 8 25 2 120 1 257 4 258 2 300 35 281 1 233 17 47 3 260 1 261 4 51 1 101 1 104 1 29 1 
170 1 236 1 324 14 150 1 3 1 246 1 111 1 36 3 61 2 82 3 135 3 87 1 202 3 315 1 65 1 227 3 179 6 94 3 277 2 297 3 231 3 336 3 182 6 25 2 120 1 257 4 258 2 300 28 233 14 47 3 261 3 101 1 104 1 29 1 
213 1 15 1 158 1 267 1 59 1 176 1 54 1 31 1 209 1 146 1 
38 1 343 1 
213 1 206 1 15 1 267 1 59 1 31 1 209 1 288 1 250 1 
357 1 210 1 
165 1 115 1 325 1 
15 1 105 1 267 1 91 1 31 1 209 1 355 1 110 1 213 1 256 2 158 1 279 1 59 1 176 1 146 1 333 1 234 1 147 1 
15 1 105 1 267 1 91 1 31 1 209 1 355 1 110 1 213 1 256 2 158 1 279 1 59 1 176 1 146 1 333 1 234 1 147 1 
15 1 105 1 267 1 91 1 31 1 209 1 355 1 110 1 213 1 256 2 158 1 279 1 59 1 176 1 146 1 333 1 234 1 147 1 
165 1 357 1 210 1 
165 1 357 1 210 1 
115 1 325 1 
165 1 115 1 325 1 
199 1 57 1 
105 1 267 1 31 1 343 1 57 1 245 1 199 1 59 1 293 1 38 1 11 1 136 1 88 2 15 1 91 1 317 2 66 1 209 1 353 2 335 2 355 1 337 2 213 1 256 1 48 1 216 1 234 1 
238 1 324 1 151 1 173 1 155 1 107 1 7 1 8 1 159 1 135 1 200 1 203 1 117 1 88 2 276 2 252 1 162 2 227 1 317 2 140 1 231 1 337 2 336 1 182 2 300 2 233 1 167 1 303 2 99 2 321 1 27 1 
276 1 238 1 296 1 162 1 92 1 155 1 58 1 299 1 7 1 8 1 99 1 50 1 123 1 334 1 
276 1 207 1 238 1 162 1 44 1 1 1 58 1 164 1 198 2 328 1 24 1 8 1 275 1 99 1 50 1 76 1 189 1 224 1 
276 2 207 1 238 1 162 2 350 1 44 1 1 1 58 1 164 1 198 2 328 1 24 1 8 1 275 1 99 2 50 1 76 1 189 1 224 1 
276 1 207 1 238 1 162 1 1 1 58 1 164 1 198 2 328 1 24 1 8 1 320 1 275 1 99 1 76 1 189 1 224 1 
23 1 
126 1 163 1 67 1 5 1 142 1 247 1 46 1 217 1 40 1 147 1 
53 1 269 2 126 5 352 1 297 2 94 2 5 5 273 5 36 2 302 10 261 2 103 5 249 5 202 2 147 5 
91 1 306 1 359 1 355 1 142 1 147 1 
238 1 240 1 306 4 126 2 270 2 155 1 5 2 7 1 8 1 247 2 134 1 10 2 334 1 276 4 296 1 162 4 91 3 180 1 67 1 318 1 355 3 299 2 96 2 340 1 46 2 99 4 359 2 217 2 28 1 
126 1 163 1 142 1 5 1 314 1 147 1 40 1 
238 1 151 1 34 1 155 1 7 1 329 1 8 1 175 1 132 1 135 1 11 1 200 1 276 1 88 3 117 1 251 1 162 1 227 1 317 2 253 2 93 1 353 2 335 2 231 1 336 1 337 3 182 2 299 1 300 1 233 1 99 1 100 1 
126 1 270 1 67 1 5 2 142 2 45 1 273 2 247 1 46 1 302 4 10 1 103 2 217 1 249 2 147 4 
239 1 91 1 306 1 268 1 126 1 67 1 355 1 142 1 5 1 273 1 247 1 46 1 302 1 359 1 217 1 235 1 147 2 
148 2 218 2 265 2 238 2 306 5 269 2 126 7 270 1 155 6 5 7 273 6 292 1 36 2 7 1 8 1 247 3 133 2 10 1 202 2 249 6 276 1 251 1 228 2 162 1 91 5 352 2 141 1 94 2 297 2 67 3 355 5 299 1 214 1 280 3 46 3 302 12 98 1 261 2 359 3 99 1 304 2 103 6 217 3 145 2 147 6 
170 1 236 1 53 1 306 1 241 1 269 2 126 8 270 1 108 1 5 5 273 3 36 2 247 2 61 1 10 1 249 5 202 2 65 1 91 1 277 1 297 2 94 2 67 2 355 1 142 2 120 1 25 1 46 2 302 6 359 1 261 2 103 5 217 2 29 1 147 5 
53 1 269 2 195 1 126 2 5 2 129 1 130 1 247 1 88 1 43 1 91 1 317 1 253 1 18 1 353 1 94 1 335 1 67 1 355 1 337 1 186 1 281 1 46 1 74 1 97 1 261 2 100 1 217 1 
213 1 199 1 158 1 31 1 272 1 
213 1 31 1 223 1 
213 1 31 1 223 1 
213 1 31 1 223 1 
213 1 31 1 211 1 
213 1 31 1 211 1 
213 1 31 1 211 1 
213 1 31 1 
267 1 209 1 
324 5 227 1 179 5 195 2 94 2 231 1 336 1 129 1 182 2 130 1 300 10 281 2 82 3 233 5 47 2 135 1 261 2 101 1 
324 2 227 1 179 1 231 1 336 1 182 2 36 1 300 2 47 1 135 1 261 1 101 1 
324 2 227 1 179 2 94 1 297 1 231 1 336 1 182 2 36 1 300 4 82 1 233 2 47 1 135 1 261 1 101 1 202 1 
16 1 324 1 227 3 179 2 195 1 231 3 336 3 182 6 258 1 300 3 233 2 281 1 82 1 47 1 135 3 51 1 101 1 
324 7 195 2 129 1 130 1 61 1 82 3 135 4 13 1 16 1 227 4 179 6 19 1 94 2 277 1 231 4 336 4 182 8 25 1 319 1 300 15 258 1 233 8 281 2 47 3 260 1 261 2 51 1 101 1 
170 1 236 1 324 14 195 2 129 1 130 2 36 2 61 1 82 5 135 2 202 1 65 1 227 2 179 9 19 1 277 1 297 2 94 4 231 2 336 2 45 1 182 4 25 1 120 1 258 1 300 24 281 2 233 10 47 4 260 1 261 5 101 1 29 1 
170 1 236 1 324 10 195 1 130 1 36 2 61 1 82 3 135 3 202 1 65 1 227 3 179 4 19 1 277 1 297 2 94 2 231 3 336 3 45 1 182 6 120 1 25 1 319 1 258 1 300 17 281 1 233 7 47 1 260 1 261 3 101 1 29 1 
170 1 236 1 324 9 195 1 130 1 36 2 61 1 82 3 135 3 202 2 65 1 227 3 179 4 19 1 277 1 297 2 94 3 231 3 336 3 45 1 182 6 25 1 120 1 319 1 300 19 258 1 281 1 233 10 47 1 260 1 261 3 101 1 29 1 
170 1 236 1 324 10 195 1 130 1 36 2 61 1 82 3 135 3 202 1 65 1 227 3 179 5 19 1 277 1 297 2 94 2 231 3 336 3 45 1 182 6 25 1 120 1 319 1 258 1 300 17 281 1 233 7 47 2 260 1 261 3 101 1 29 1 
170 1 236 1 324 14 195 2 129 1 130 2 36 2 61 1 82 5 135 2 202 1 65 1 227 2 179 9 19 1 277 1 297 2 94 4 231 2 336 2 45 1 182 4 25 1 120 1 258 1 300 24 281 2 233 10 47 4 260 1 261 5 101 1 29 1 
170 1 236 1 324 6 36 2 61 1 82 1 135 1 202 2 65 1 227 1 179 2 277 1 297 2 94 2 231 1 336 1 182 2 25 1 120 1 300 12 233 6 47 1 261 2 101 1 29 1 
170 1 236 1 324 10 195 1 130 1 36 2 61 1 82 3 135 4 202 1 65 1 227 4 179 5 19 1 277 1 297 2 94 2 231 4 336 4 45 1 182 8 120 1 25 1 319 1 300 18 258 2 281 1 233 8 47 2 260 1 261 3 101 1 29 1 
170 1 236 1 324 9 36 3 61 1 82 3 135 4 202 2 65 1 227 4 179 6 277 1 297 3 94 2 231 4 336 4 182 8 120 1 25 1 300 16 258 2 233 7 47 3 261 3 101 1 51 1 29 1 
324 3 179 6 195 3 19 2 94 1 130 1 300 7 233 4 281 3 82 3 47 3 260 1 261 1 
170 1 236 1 324 10 195 1 130 1 36 2 61 1 82 3 135 4 202 1 65 1 227 4 179 4 19 1 277 1 297 2 94 2 231 4 336 4 45 1 182 8 120 1 25 1 300 18 258 2 281 1 233 8 47 1 260 1 261 3 101 1 51 1 29 1 
324 4 227 2 179 3 195 1 19 1 94 1 231 2 336 2 45 1 130 1 182 4 300 8 258 1 233 4 82 2 281 1 47 1 260 1 261 1 135 2 
324 3 179 2 195 1 19 1 94 1 45 1 130 1 300 6 233 3 281 1 82 2 260 1 261 1 314 1 
324 2 227 1 179 2 94 1 297 1 231 1 336 1 182 2 36 1 319 1 300 4 82 1 233 2 47 1 135 1 261 1 202 1 
25 1 324 1 300 2 61 1 233 1 277 1 
324 13 153 1 195 2 129 1 130 2 36 2 82 5 135 1 202 2 227 1 179 7 19 1 94 5 297 2 277 2 231 1 336 1 45 1 182 2 25 2 300 26 258 1 281 2 166 1 233 13 259 1 47 2 260 1 261 5 
300 1 233 1 277 1 
25 1 324 1 300 1 
324 3 227 1 179 3 352 1 297 1 94 1 231 1 336 1 182 2 36 1 319 1 300 6 233 3 82 2 47 1 135 1 261 1 202 1 
170 1 236 1 324 6 36 2 61 1 82 1 135 1 202 2 65 1 227 1 179 2 277 1 297 2 94 2 231 1 336 1 182 2 25 1 120 1 300 12 233 6 47 1 261 2 101 1 29 1 
324 3 179 2 195 1 94 1 130 1 300 6 233 3 281 1 82 1 47 1 261 1 
16 1 324 1 227 1 179 2 195 1 19 1 231 1 336 1 182 2 300 3 258 1 82 1 281 1 233 2 47 1 260 1 135 1 
88 1 284 1 194 1 208 1 317 1 308 1 337 1 184 1 330 1 39 1 358 1 11 1 
88 1 184 1 317 1 39 1 358 1 11 1 337 1 
276 4 323 1 238 1 266 1 296 1 162 4 350 1 155 1 299 1 7 1 8 1 99 4 334 1 
349 1 276 2 251 1 238 2 162 2 155 1 68 1 7 1 8 1 96 1 86 1 99 2 178 1 191 1 
276 1 299 1 207 1 238 1 8 1 162 1 99 1 224 1 164 1 198 1 
276 2 238 1 350 1 162 2 107 1 155 1 24 1 7 1 8 1 99 2 27 1 
276 4 238 2 266 1 296 1 162 5 350 1 107 1 155 3 299 1 7 2 112 1 8 2 96 1 99 5 334 1 160 1 
276 4 238 2 266 1 193 1 296 1 162 5 350 1 107 1 155 3 299 1 7 2 8 2 96 1 99 5 334 1 160 1 
276 1 299 1 238 1 7 1 8 1 296 1 162 1 99 1 155 1 334 1 314 1 
88 2 276 1 251 1 238 1 162 1 317 1 93 1 285 1 353 1 335 1 155 1 337 2 299 1 7 1 8 1 132 1 99 1 11 1 
88 2 276 1 251 2 238 1 162 1 317 2 351 1 93 1 285 1 32 1 286 1 353 2 335 1 155 3 337 2 7 2 8 1 96 1 132 1 248 1 74 1 99 1 11 1 
323 1 238 1 285 1 286 1 32 1 155 3 7 2 8 1 248 1 11 1 276 2 88 2 251 2 162 2 317 2 138 1 93 1 351 1 353 2 335 1 337 2 96 1 74 1 99 2 
218 1 323 1 238 1 306 1 32 1 155 4 7 1 8 1 113 1 133 1 63 1 276 3 251 1 162 3 91 2 351 1 355 2 142 1 299 1 96 1 280 1 99 3 147 1 
218 1 276 3 323 1 251 1 238 1 162 3 228 1 91 2 306 1 351 1 32 1 355 2 155 4 142 1 299 1 7 1 8 1 96 1 280 1 133 1 99 3 147 1 
276 1 238 1 8 1 162 1 99 1 197 1 
276 5 251 1 238 3 350 1 162 6 107 1 155 3 68 1 299 2 292 1 24 1 7 2 112 1 8 2 310 1 177 1 303 1 86 1 99 6 160 1 
238 1 324 7 285 1 195 2 155 1 7 1 8 1 11 3 200 2 64 1 203 1 117 2 14 1 251 1 162 1 19 1 335 1 336 2 337 2 255 1 300 14 339 1 74 1 260 1 261 3 75 1 173 1 34 1 129 1 130 2 131 1 132 1 175 1 82 4 135 2 276 1 88 2 350 1 227 2 317 1 179 5 93 1 353 1 94 3 231 2 182 4 45 1 281 2 233 7 47 1 99 1 
218 1 265 1 306 2 126 1 155 2 5 1 247 2 133 1 136 1 40 1 276 1 162 1 228 1 91 3 163 1 67 2 318 1 355 3 142 1 299 1 280 1 46 2 99 1 359 1 304 1 217 2 145 1 147 1 
276 2 251 1 238 2 350 1 162 2 197 1 155 2 292 1 7 1 8 1 133 1 98 1 99 2 
88 2 276 1 251 1 238 1 162 1 317 1 138 1 93 1 285 1 353 1 335 1 155 1 337 2 299 1 7 1 8 1 99 1 11 1 
276 1 251 1 238 2 162 1 155 1 68 1 292 1 7 1 8 1 96 1 310 1 86 1 99 1 
88 1 219 1 317 1 311 1 37 1 167 1 159 1 321 1 337 1 
322 1 311 1 122 1 
219 1 37 1 311 1 11 1 360 1 
218 1 322 1 219 2 91 2 286 1 355 2 142 1 35 1 248 1 311 1 37 2 74 1 122 1 11 1 188 1 341 1 136 1 360 2 147 1 
305 1 226 1 346 1 185 1 295 1 307 1 244 1 290 1 
225 1 89 1 305 2 226 2 154 1 244 1 290 4 291 1 274 1 346 1 295 4 185 3 62 1 264 2 
305 1 226 1 307 1 244 1 290 2 212 1 221 1 346 1 185 1 295 2 168 1 264 1 
225 2 89 1 305 1 226 1 307 1 154 2 244 1 290 3 346 1 185 1 295 3 215 1 
282 1 185 2 263 1 156 2 
346 1 295 1 307 1 289 1 244 1 290 1 
305 1 226 1 346 1 185 1 295 2 83 1 307 1 244 1 290 2 264 1 
347 1 
305 1 226 1 346 1 185 1 295 1 307 1 244 1 290 1 
305 1 226 1 185 1 314 1 
305 1 226 1 346 1 185 1 295 1 244 1 290 1 
295 1 152 1 4 1 
225 2 89 1 305 1 226 1 307 1 80 1 154 1 244 1 290 3 346 1 185 1 295 3 
305 1 226 1 244 1 290 2 274 1 346 1 295 2 185 1 102 1 264 1 
171 1 346 1 185 1 295 1 307 1 244 1 189 1 290 1 164 1 198 1 291 1 
226 1 346 1 185 1 295 1 307 1 244 1 290 1 
305 1 226 2 346 1 295 1 307 1 244 1 290 1 
226 1 307 1 244 2 290 2 183 1 346 2 185 1 295 2 331 1 262 1 
305 1 226 1 346 1 185 2 295 3 83 1 307 1 62 1 12 1 244 1 290 3 291 1 264 2 
305 1 226 1 307 1 244 1 290 2 198 2 164 1 328 1 346 1 185 1 295 2 116 1 189 1 224 1 264 1 
305 1 226 1 307 1 244 1 290 3 291 1 274 1 346 1 295 3 185 2 62 1 102 1 169 1 264 2 
225 1 305 1 226 1 346 1 185 1 295 3 83 1 307 1 244 1 290 3 264 1 
274 1 185 1 62 1 291 1 
226 1 185 1 

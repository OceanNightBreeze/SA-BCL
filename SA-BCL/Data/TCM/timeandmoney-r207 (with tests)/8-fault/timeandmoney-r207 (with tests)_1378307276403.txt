#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (194,335) 74 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (294,339) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (12,40,256) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (294,339) (294,339) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 47 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (2,171) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (194,335) 74 191 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (2,171) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 47 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 137 168 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 180 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (194,335) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 173 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (194,335) (194,335) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 111 102 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 111 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 111 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 111 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 111 103 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (294,339) (294,339) 151 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (194,335) 74 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (294,339) (294,339) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 4 331 5 110 6 112 1 38 1 261 1 116 2 135 1 358 1 240 1 61 1 308 2 289 3 340 2 7 2 344 1 30 2 246 1 315 1 13 1 172 9 349 1 175 1 96 1 50 1 150 2 101 2 207 9 
73 4 331 5 110 6 112 1 38 1 261 1 116 2 135 1 358 1 240 1 61 1 308 2 289 3 340 2 7 2 344 1 30 2 246 1 315 1 13 1 172 9 349 1 175 1 96 1 50 1 150 2 101 2 207 9 
73 5 331 6 110 7 112 1 38 1 261 1 116 2 135 1 358 1 240 1 61 1 308 2 289 4 340 2 7 2 344 1 30 2 246 1 315 1 13 1 172 10 349 1 175 1 96 1 50 1 150 2 101 2 207 10 
73 3 331 4 110 4 112 1 38 1 261 1 116 2 135 1 358 1 240 1 61 1 308 2 289 2 340 2 7 2 30 2 246 1 315 1 13 1 172 7 349 1 175 1 96 1 50 1 150 1 101 2 207 7 
73 2 331 3 13 1 110 3 172 4 38 1 116 1 50 1 150 2 101 1 358 1 308 1 289 1 340 1 7 1 344 1 246 1 207 4 
331 1 13 1 349 1 172 2 211 1 50 1 101 1 176 1 358 1 240 1 308 1 15 1 340 1 7 1 30 1 207 2 
73 1 331 2 13 1 110 1 172 3 96 1 50 1 101 2 358 1 289 1 340 2 30 1 207 3 
73 4 331 5 110 7 332 1 38 1 261 1 116 1 135 1 358 1 308 1 289 3 340 2 7 1 30 1 85 1 344 1 246 1 13 1 172 9 96 1 50 1 150 2 101 2 207 9 
73 4 331 5 110 7 332 1 38 1 261 1 116 1 135 1 358 1 308 1 289 3 340 2 7 1 30 1 85 1 344 1 246 1 13 1 172 9 96 1 50 1 150 2 101 2 207 9 
47 1 130 1 300 1 
225 2 291 1 300 1 
235 2 88 1 
194 1 74 1 238 1 141 2 333 1 78 1 235 1 337 2 88 1 136 1 309 2 
339 1 235 1 88 1 
12 1 239 1 40 1 300 1 230 1 34 1 52 1 5 1 265 1 129 1 130 1 329 1 256 1 123 1 
235 1 256 1 
12 1 265 1 263 1 280 1 224 1 
12 2 128 1 307 1 265 2 130 1 263 1 300 1 224 1 
12 1 265 1 263 1 
12 1 339 1 265 1 235 1 88 1 294 1 224 1 
300 1 
12 2 147 1 307 1 265 2 130 1 263 1 300 1 224 1 
12 5 274 1 307 1 249 1 283 1 263 2 126 2 300 1 233 1 197 2 265 5 156 1 325 1 130 1 120 2 257 1 313 1 121 1 224 2 
47 1 
260 1 239 1 2 1 25 1 353 1 52 1 5 1 235 1 129 1 
203 1 109 1 238 1 226 1 210 1 239 2 49 1 276 1 166 1 337 1 309 1 52 2 5 1 354 1 141 1 119 1 86 1 267 1 295 1 143 1 
109 1 239 2 276 2 2 1 353 1 52 2 5 2 235 1 129 1 267 2 
52 1 171 1 5 1 239 1 276 1 267 1 
260 1 235 1 25 1 
191 1 74 1 12 1 109 1 238 1 210 1 260 1 239 1 276 1 337 1 230 1 309 1 34 1 194 1 52 1 5 1 141 1 265 1 235 2 129 1 329 1 88 1 267 1 256 1 187 1 
353 1 52 2 170 1 109 1 5 2 239 2 276 1 267 1 123 1 
12 1 109 2 260 1 210 1 239 2 276 2 251 1 300 1 230 1 34 1 52 2 5 2 265 1 235 1 129 1 329 1 267 2 256 1 187 1 
260 1 235 1 
238 1 141 1 337 1 309 1 
238 1 141 1 337 1 309 1 
3 2 127 1 154 1 367 1 216 1 254 1 115 1 310 1 
52 1 5 1 6 1 239 1 276 1 129 1 267 1 230 1 
109 1 260 1 239 1 276 1 2 1 353 1 52 1 5 1 235 1 129 1 267 1 
52 1 171 1 5 1 239 1 276 1 267 1 
23 1 299 1 
23 1 299 1 
223 1 250 1 
223 1 250 1 
223 1 250 1 
341 1 23 1 299 1 
341 1 23 1 299 1 
281 1 23 1 299 1 
222 1 223 1 167 1 250 1 23 2 299 2 
341 1 23 1 299 1 
242 1 23 1 299 1 
242 1 23 1 299 1 
242 1 23 1 299 1 
32 1 12 2 36 1 46 2 351 2 334 1 282 3 167 1 23 2 152 2 299 2 300 1 195 1 265 2 198 1 71 2 245 2 304 1 55 1 
281 1 239 2 282 1 23 1 80 1 5 2 342 1 265 1 245 1 267 2 12 1 350 1 46 1 276 2 51 1 205 1 299 1 152 1 353 1 52 2 234 1 71 1 107 1 55 1 
7 1 116 1 308 1 
7 1 176 1 308 1 
81 1 0 1 84 1 116 2 176 1 308 3 
81 1 42 1 84 1 116 1 176 1 308 2 
81 2 84 1 116 1 176 1 308 2 
21 1 307 1 283 2 263 1 80 1 287 1 360 2 27 1 343 1 197 1 217 2 265 5 291 1 120 1 313 1 224 4 91 1 225 3 12 5 350 1 296 1 69 1 51 1 126 1 177 2 300 2 53 1 16 1 326 1 328 1 130 1 257 3 
161 1 259 1 21 3 307 1 283 6 263 6 286 1 287 2 360 6 27 3 362 1 197 2 265 9 291 3 120 2 313 1 314 1 121 1 224 7 225 9 12 9 350 4 296 3 69 3 126 2 177 6 300 5 278 5 16 2 326 3 328 1 255 1 130 1 257 8 280 5 
21 1 283 2 287 1 360 2 27 1 343 1 197 1 217 1 265 3 291 2 120 1 121 1 224 2 12 3 225 4 350 1 296 1 69 1 126 1 300 3 177 2 53 1 16 1 326 1 130 1 257 3 
259 1 21 2 283 4 287 1 360 4 27 2 362 1 197 1 343 1 217 2 265 4 291 3 120 1 121 1 224 3 225 7 12 4 350 2 296 2 69 2 126 1 300 4 177 4 53 1 16 1 326 2 130 1 255 1 257 5 
203 1 47 1 357 1 
203 1 28 1 
179 1 
203 1 166 1 
203 3 62 1 354 1 357 2 95 1 166 1 
203 1 354 1 166 1 
203 1 364 1 
93 1 348 3 296 1 22 3 163 1 204 7 298 1 39 2 370 1 322 2 82 4 345 1 326 1 221 1 142 1 19 1 169 1 
93 1 348 3 296 1 22 3 163 1 204 7 298 1 39 2 370 1 322 2 82 4 345 1 326 1 221 1 142 1 19 1 169 1 
93 1 348 3 296 1 22 3 163 1 204 7 298 1 39 2 321 1 370 1 322 2 82 4 345 1 326 1 221 1 142 1 19 1 169 1 
72 1 21 3 22 15 163 5 39 3 310 1 138 1 359 1 3 2 361 4 27 3 82 16 345 1 199 1 221 2 31 3 142 1 10 1 169 2 93 1 348 10 296 4 227 1 367 1 204 31 69 3 298 2 370 1 322 5 154 1 17 1 254 1 326 4 19 2 
22 4 163 1 39 2 310 2 359 1 3 4 82 5 345 1 221 1 169 1 93 1 348 4 296 1 367 2 204 9 298 1 322 3 370 1 154 2 104 1 254 2 326 1 327 1 19 1 
331 1 110 1 76 1 0 1 116 1 337 1 358 1 309 1 308 2 340 1 7 1 141 1 266 1 30 1 86 1 119 1 64 1 144 1 11 1 13 1 172 2 277 1 50 1 101 1 319 1 176 1 155 1 182 1 54 1 207 2 
331 1 110 2 76 1 0 1 116 1 337 1 358 1 309 1 308 2 340 1 7 1 141 1 266 1 30 1 86 1 119 1 87 1 293 1 64 1 144 1 11 1 172 3 33 1 50 1 101 1 319 1 176 1 155 1 182 1 207 3 
331 1 110 2 0 1 116 1 337 1 358 1 309 1 308 2 141 1 7 1 30 1 266 1 86 1 119 1 87 1 64 1 144 1 11 1 172 2 33 1 50 1 319 1 176 1 155 1 207 2 
238 1 212 1 166 1 337 1 309 1 338 1 29 1 340 1 63 1 141 1 43 1 266 2 30 2 119 1 86 1 293 1 144 2 203 1 172 1 101 1 155 2 207 1 158 1 
76 1 0 1 116 1 337 1 309 1 308 2 340 1 7 1 141 1 266 1 30 1 86 1 119 1 87 1 64 1 144 1 11 1 13 1 172 1 277 1 101 1 319 1 176 1 155 1 182 1 207 1 
320 1 
190 1 238 2 209 1 307 1 212 1 166 2 283 1 1 1 337 2 263 2 287 1 309 2 141 2 197 1 43 1 265 2 119 3 86 2 120 1 268 1 313 1 203 2 12 2 297 1 126 1 252 1 354 1 323 1 257 1 
307 1 239 1 263 2 40 1 5 1 265 3 90 1 123 1 271 1 12 3 147 1 48 1 97 1 125 1 14 1 230 1 34 1 52 1 129 1 329 1 256 1 189 2 
307 1 239 1 263 1 40 1 24 1 5 1 265 3 90 1 123 1 271 1 12 3 147 1 48 1 125 1 14 1 230 1 300 1 34 1 52 1 129 1 329 1 130 1 256 1 189 3 
307 1 239 1 263 2 40 1 24 1 5 1 265 3 90 1 123 1 271 1 12 3 147 1 48 1 318 1 97 1 125 1 14 1 230 1 300 1 34 1 52 1 129 1 329 1 130 1 256 1 189 3 
239 1 283 1 336 1 40 1 5 1 197 1 291 2 90 1 12 5 92 1 147 1 48 1 149 2 97 4 100 1 14 1 300 5 52 1 253 1 303 1 256 1 257 1 20 1 307 3 263 7 24 4 265 5 120 1 313 1 123 1 271 1 275 2 318 4 125 1 68 2 126 1 230 1 34 1 129 1 236 2 329 1 130 5 237 1 189 6 
239 1 283 1 40 1 5 1 197 1 291 2 90 1 12 4 48 1 149 2 97 2 14 1 300 2 52 1 253 1 256 1 257 1 20 1 307 2 263 4 24 2 265 4 120 1 313 1 123 1 271 1 225 2 124 1 275 2 318 2 125 1 68 2 126 1 230 1 34 1 129 1 236 2 329 1 130 1 189 4 
20 1 307 2 239 1 283 1 263 4 40 1 24 2 5 1 197 1 265 4 291 2 120 1 313 1 90 1 123 1 271 1 12 4 92 1 275 2 48 1 149 2 97 2 318 2 68 2 125 1 100 1 126 1 300 1 14 1 230 1 34 1 253 1 52 1 303 1 236 2 129 1 130 1 329 1 256 1 257 1 189 4 
20 1 307 2 239 1 283 1 263 4 40 1 24 2 5 1 197 1 265 4 291 2 120 1 313 1 90 1 123 1 271 1 12 4 92 1 275 2 48 1 149 2 97 2 318 2 68 2 125 1 100 1 126 1 300 1 14 1 230 1 34 1 253 1 52 1 303 1 236 2 129 1 130 1 329 1 256 1 257 1 189 4 
192 1 307 2 239 1 164 1 283 1 263 4 285 2 40 1 24 2 4 2 196 1 5 1 197 1 265 4 120 1 313 1 90 1 123 1 271 1 225 2 12 4 275 2 48 1 97 2 318 2 125 1 126 1 300 1 14 1 230 1 34 1 253 1 52 1 303 1 236 2 129 1 130 1 329 1 256 1 257 1 189 4 
20 1 307 2 239 1 283 1 336 1 263 5 40 1 24 3 5 1 197 1 265 4 291 2 120 1 313 1 90 1 123 1 271 1 12 4 92 1 275 2 48 1 149 2 318 3 97 3 68 2 125 1 100 1 126 1 300 1 14 1 230 1 34 1 253 1 52 1 303 1 236 2 129 1 130 1 329 1 256 1 257 1 189 5 
20 1 307 2 239 1 283 1 336 1 263 5 40 1 24 3 5 1 197 1 265 4 291 2 120 1 313 1 90 1 123 1 271 1 12 4 92 1 275 2 48 1 149 2 318 3 97 3 68 2 125 1 100 1 126 1 300 1 14 1 230 1 34 1 253 1 52 1 303 1 236 2 129 1 130 1 329 1 256 1 257 1 189 5 
307 2 239 1 283 1 263 4 285 2 40 1 24 2 4 2 5 1 196 1 197 1 265 4 120 1 313 1 90 1 123 1 271 1 225 2 12 4 124 1 275 2 48 1 97 2 318 2 125 1 126 1 300 1 14 1 230 1 34 1 253 1 52 1 236 2 129 1 130 1 329 1 256 1 257 1 189 4 
93 1 348 1 47 1 367 1 115 1 204 2 39 1 310 1 127 1 3 2 370 1 322 1 154 1 82 2 216 1 254 1 345 1 326 1 221 1 19 1 
367 1 22 1 115 1 204 2 137 1 214 1 310 1 168 1 3 2 361 1 154 1 82 1 216 1 254 1 31 1 
109 1 238 1 210 1 239 2 22 1 115 1 166 1 337 1 309 1 214 1 310 1 3 2 5 1 82 1 141 1 216 1 119 1 86 1 244 1 267 1 295 1 143 1 202 1 203 1 316 1 347 1 226 1 367 1 148 1 276 1 204 2 353 1 52 2 154 1 354 1 254 1 206 1 305 1 
75 1 238 1 239 3 335 2 337 3 39 1 194 2 3 6 5 1 82 10 141 3 345 1 86 2 87 1 295 2 143 2 203 2 93 1 347 1 348 8 296 3 148 7 49 7 204 20 353 2 52 3 154 3 354 2 254 3 206 1 355 2 19 1 159 1 109 1 210 1 21 2 22 10 163 4 115 3 166 2 309 3 310 3 214 1 27 2 216 3 119 2 221 1 267 1 366 7 226 2 367 3 368 2 276 1 69 2 370 1 322 4 181 1 326 3 188 2 
238 1 367 1 115 1 204 1 337 1 310 1 309 1 3 2 180 1 154 1 82 1 216 1 141 1 254 1 206 1 330 1 
260 1 21 1 22 1 115 1 60 1 310 1 214 1 3 2 27 1 82 1 216 1 296 1 367 1 69 1 204 2 154 1 235 1 254 1 326 1 
367 1 115 1 204 1 310 1 127 1 3 2 27 1 140 1 154 1 82 1 216 1 254 1 326 1 
21 1 296 1 367 1 114 1 22 1 115 1 204 1 310 1 127 1 3 2 154 1 216 1 254 1 
296 1 21 1 367 1 22 1 115 1 204 2 69 1 310 1 127 1 3 2 27 1 154 1 82 1 216 1 254 1 326 1 
367 1 115 1 204 1 310 1 3 2 27 1 140 1 154 1 82 1 216 1 254 1 326 1 330 1 
21 1 296 1 367 1 114 1 22 1 115 1 204 1 310 1 3 2 154 1 216 1 254 1 330 1 
296 1 21 1 367 1 22 1 115 1 204 2 69 1 310 1 3 2 27 1 154 1 82 1 216 1 254 1 326 1 330 1 
296 1 21 1 367 1 22 1 115 1 69 1 204 2 310 1 3 2 27 1 154 1 82 1 216 1 254 1 326 1 
194 1 238 1 141 1 337 1 309 1 
238 1 173 1 141 1 337 1 309 1 
296 1 21 1 367 1 22 1 115 1 204 2 69 1 214 1 310 1 3 2 27 1 154 1 82 1 216 1 254 1 326 1 
194 1 141 1 335 1 54 1 337 1 309 1 
296 1 21 1 260 1 367 1 22 1 115 1 204 2 69 1 214 1 310 1 27 1 3 2 154 1 82 1 216 1 254 1 235 1 326 1 258 1 
111 1 21 1 58 1 22 5 163 1 213 1 138 1 310 2 361 2 3 4 27 1 215 1 139 1 82 4 199 1 31 1 248 1 348 2 174 1 296 1 367 2 204 9 69 1 102 1 322 1 154 2 104 1 254 2 326 1 
57 1 111 1 77 1 21 1 58 2 163 1 22 9 213 3 359 2 310 3 138 2 3 6 361 2 27 2 215 2 139 1 82 11 218 1 292 1 31 2 348 2 228 1 296 1 174 1 367 3 204 20 69 2 103 1 322 1 154 3 104 1 254 3 326 2 185 1 
111 1 21 1 58 1 22 5 163 1 213 1 138 1 310 2 361 2 3 4 27 1 215 1 139 1 82 4 199 1 31 1 248 1 348 2 174 1 296 1 367 2 204 9 69 1 103 1 322 1 154 2 104 1 254 2 326 1 
111 1 21 1 58 1 22 5 163 1 213 1 138 1 310 2 361 2 3 4 27 1 215 1 139 1 82 4 199 1 31 1 248 1 348 2 174 1 296 1 367 2 204 9 69 1 103 1 322 1 154 2 104 1 254 2 326 1 
57 1 111 1 77 1 21 6 58 1 22 22 163 6 39 1 213 3 359 1 138 2 310 2 361 4 3 4 27 6 215 1 139 1 82 24 218 1 345 1 292 1 199 2 221 1 31 4 93 1 348 12 228 1 174 1 296 7 367 2 229 2 204 46 69 6 103 1 370 1 322 6 154 2 104 1 254 2 326 7 185 1 19 1 
195 1 46 1 71 1 245 1 304 1 167 1 23 1 299 1 152 1 301 1 
281 1 234 1 
46 1 18 1 71 1 245 1 131 1 23 1 153 1 299 1 152 1 
32 1 12 1 46 1 351 1 334 1 282 2 167 1 23 1 152 1 299 1 300 1 195 1 265 1 198 1 71 1 245 1 304 1 55 1 
32 1 12 1 46 1 351 1 334 1 282 2 167 1 23 1 152 1 299 1 300 1 195 1 265 1 198 1 71 1 245 1 304 1 55 1 
32 1 12 1 46 1 351 1 334 1 282 2 167 1 23 1 152 1 299 1 300 1 195 1 265 1 198 1 71 1 245 1 304 1 55 1 
341 1 290 1 222 1 
341 1 290 1 222 1 
242 1 201 1 
242 1 222 1 201 1 
107 1 205 1 
281 1 239 2 282 1 23 1 80 1 5 2 342 1 265 1 198 1 245 1 267 2 224 1 12 1 350 1 351 1 46 1 276 2 51 1 205 1 299 1 152 1 353 1 52 2 371 1 234 1 71 1 107 1 
341 1 290 1 
242 1 222 1 201 1 
239 2 22 1 115 1 78 2 166 1 337 2 309 2 214 1 310 1 3 2 5 2 82 1 243 1 216 1 311 1 141 2 119 1 86 1 220 1 122 1 203 1 347 1 367 1 204 2 231 1 52 2 154 1 180 1 254 1 35 1 206 1 
0 1 116 1 337 2 176 1 118 1 319 1 264 1 308 2 309 2 7 1 141 2 182 1 266 1 119 1 86 1 87 1 54 1 133 1 64 1 
0 1 116 1 337 1 176 1 319 1 308 2 309 1 7 1 141 1 182 1 266 1 86 1 119 1 87 1 133 1 64 1 66 1 
203 1 67 1 238 1 212 1 166 1 337 1 264 1 309 1 338 1 141 1 43 1 266 1 119 1 86 1 
0 1 116 1 337 1 176 1 118 1 319 1 264 1 308 2 309 1 7 1 141 1 182 1 266 1 119 1 86 1 87 1 133 1 64 1 
273 1 
233 1 47 1 156 1 130 1 283 1 257 1 300 1 
20 1 307 1 283 1 263 1 197 1 265 1 291 1 120 1 313 1 225 1 12 1 149 1 68 1 126 1 300 2 130 1 257 1 
238 1 283 8 337 3 287 2 197 4 141 3 86 1 8 1 291 6 9 2 89 1 203 6 145 2 12 5 296 2 297 1 98 2 300 8 354 1 156 1 106 2 54 1 257 9 355 2 160 2 21 2 307 3 357 2 59 2 166 1 263 5 309 3 360 6 62 1 28 3 27 2 219 1 265 5 119 2 120 4 313 4 269 1 270 1 225 12 69 2 126 4 177 6 232 2 233 1 326 2 130 2 329 2 
57 1 77 1 21 2 307 1 284 1 283 5 263 1 287 1 360 5 138 1 361 1 27 2 197 2 218 1 265 1 291 3 292 1 120 2 31 1 313 2 12 1 225 6 296 2 297 1 69 2 126 2 177 5 300 5 232 2 106 1 326 2 130 2 132 1 185 1 257 8 
12 1 296 1 283 1 100 1 126 1 151 1 232 2 339 1 370 1 197 1 265 1 235 1 326 1 221 1 88 1 120 1 257 2 313 1 294 1 19 1 
283 1 126 1 300 1 233 1 197 1 156 1 130 1 120 1 313 1 257 1 
225 10 21 2 296 2 283 5 69 2 177 5 300 5 232 2 360 5 27 2 106 1 291 5 326 2 257 5 355 1 
12 1 307 1 265 1 130 1 263 1 300 1 
190 1 238 2 209 1 307 1 212 1 166 2 283 1 1 1 337 2 263 2 287 1 309 2 197 1 141 2 43 1 265 1 119 3 86 2 120 1 89 1 268 1 313 1 203 2 12 1 297 1 126 1 252 1 354 1 323 1 257 1 
194 1 74 1 238 1 141 1 235 1 337 1 88 1 309 1 
225 4 297 1 283 2 39 1 126 1 177 2 287 1 300 4 360 2 197 1 291 2 130 2 120 1 313 1 257 1 
178 1 71 1 245 1 
178 1 71 1 245 1 
83 1 71 1 245 1 304 1 205 1 
178 1 71 1 245 1 
71 1 262 1 245 1 
71 1 262 1 245 1 
71 1 262 1 245 1 
71 1 245 1 
23 1 299 1 
93 1 348 3 296 1 367 2 22 4 163 1 204 8 39 1 310 2 359 1 3 4 370 1 322 2 154 2 82 4 254 2 345 1 326 1 221 1 19 1 
370 1 322 2 93 1 348 2 296 1 82 3 47 1 22 3 345 1 326 1 221 1 204 6 39 1 19 1 
348 2 296 1 21 1 367 1 22 2 163 1 69 1 204 4 310 1 3 2 27 1 322 1 154 1 82 2 254 1 183 1 326 1 
348 2 296 1 21 1 22 4 163 1 204 7 69 1 138 1 361 2 27 1 322 1 82 3 199 1 326 1 31 1 
21 2 163 4 22 12 39 1 137 1 359 2 310 2 27 2 361 2 3 4 82 11 345 1 199 1 200 1 221 2 31 2 93 1 348 9 296 3 367 2 229 1 69 2 204 23 370 1 322 5 154 2 254 2 326 3 19 2 
361 1 22 1 204 1 
82 1 204 1 31 1 
348 3 21 1 296 1 367 1 22 3 163 1 204 6 69 1 310 1 3 2 27 1 322 2 154 1 82 3 254 1 183 1 326 1 355 1 
57 1 21 2 77 1 163 1 22 6 138 1 310 1 361 1 3 2 27 2 82 6 218 1 292 1 31 1 348 2 296 2 367 1 204 12 69 2 322 1 154 1 104 1 254 1 326 2 185 1 
348 2 296 1 22 3 163 1 204 6 370 1 322 1 82 3 326 1 221 1 19 1 
93 1 348 2 367 1 163 1 22 2 204 3 359 1 310 1 3 2 322 1 154 1 82 1 345 1 254 1 200 1 221 1 19 1 
348 5 296 2 367 1 163 2 22 5 204 10 151 1 310 1 3 2 322 3 370 1 154 1 82 5 104 1 254 1 326 2 221 2 19 2 
348 1 367 1 163 1 204 2 310 1 3 2 27 1 154 1 82 2 104 1 254 1 326 1 
348 2 296 1 21 1 367 1 22 2 163 1 69 1 204 4 310 1 3 2 27 1 322 1 154 1 82 2 104 1 254 1 326 1 
248 1 348 2 367 3 22 2 163 1 204 3 359 1 310 3 3 6 322 1 154 3 82 1 104 1 254 3 200 1 221 1 19 1 
72 1 21 3 22 18 163 5 39 1 359 2 138 1 310 5 361 4 3 10 27 3 82 16 345 1 200 1 199 1 221 3 31 3 248 1 93 1 348 12 227 1 296 5 367 5 204 34 69 3 370 2 322 7 154 5 17 1 104 1 254 5 183 1 326 5 19 3 
57 1 93 1 348 2 296 1 367 1 22 4 204 8 39 1 310 1 138 1 3 2 361 1 370 1 322 2 154 1 82 4 104 1 345 1 254 1 326 1 221 1 31 1 19 1 
57 1 22 5 163 1 39 1 138 1 310 2 361 2 3 4 27 1 82 6 345 1 199 1 221 1 31 1 93 1 348 3 296 1 367 2 204 11 69 1 370 1 322 2 154 2 104 1 254 2 183 1 326 2 19 1 
57 1 21 2 77 1 163 1 22 10 39 1 138 1 310 3 359 1 361 1 3 6 27 2 82 9 218 1 345 1 292 1 221 1 31 1 93 1 348 4 296 3 367 3 204 19 69 2 370 1 322 3 154 3 104 1 254 3 183 1 326 3 185 1 19 1 
57 1 21 1 77 1 163 2 22 7 39 1 359 1 138 1 310 3 361 1 3 6 27 2 82 10 218 1 345 1 292 1 221 1 31 1 93 1 348 5 296 2 367 3 204 17 69 2 370 1 322 3 154 3 104 1 254 3 183 1 326 3 185 1 19 1 
57 1 93 1 348 2 296 1 367 1 22 4 204 8 39 1 310 1 138 1 3 2 361 1 370 1 322 2 154 1 82 4 104 1 345 1 254 1 326 1 221 1 31 1 19 1 
57 1 21 2 77 1 163 1 22 6 138 1 310 1 361 1 3 2 27 2 82 6 218 1 292 1 31 1 348 2 296 2 367 1 204 12 69 2 322 1 154 1 104 1 254 1 326 2 185 1 
57 1 77 1 21 1 163 2 22 8 39 1 138 1 310 4 359 2 361 1 3 8 27 2 82 10 218 1 345 1 292 1 221 1 31 1 93 1 348 5 296 2 367 4 204 18 69 2 370 1 322 3 154 4 104 1 254 4 183 1 326 3 185 1 19 1 
57 1 77 1 21 2 163 3 22 7 138 1 310 4 359 2 361 1 3 8 27 3 82 9 218 1 292 1 31 1 248 1 348 6 296 2 367 4 204 16 69 3 322 3 154 4 104 1 254 4 326 3 185 1 
93 1 348 6 296 1 22 4 163 3 204 7 322 3 370 1 82 3 345 2 326 1 221 3 19 3 
57 1 77 1 21 1 163 1 22 8 39 1 138 1 310 4 359 2 361 1 3 8 27 2 82 10 218 1 345 1 292 1 221 1 31 1 248 1 93 1 348 4 296 2 367 4 204 18 69 2 370 1 322 3 154 4 104 1 254 4 326 3 185 1 19 1 
353 1 52 1 170 1 5 1 239 1 113 1 123 1 
170 1 113 1 239 1 117 1 353 1 302 1 52 1 5 1 312 1 184 1 157 1 123 1 
203 1 238 1 47 1 43 1 141 1 119 1 86 1 212 1 166 1 337 1 309 1 
203 1 109 1 238 1 239 2 276 1 166 1 337 1 309 1 353 1 52 2 5 1 354 1 141 1 119 1 86 1 267 1 295 1 143 1 
203 3 109 1 239 2 276 2 166 2 337 1 230 1 34 1 309 1 353 1 52 2 5 2 354 2 364 1 141 1 119 1 86 1 129 1 186 1 267 1 269 1 295 1 143 1 
109 1 239 2 166 2 337 2 309 2 363 1 5 2 141 2 364 1 86 1 119 1 267 1 269 1 295 1 203 3 276 2 230 1 34 1 353 1 52 2 354 2 324 1 129 1 186 1 
203 4 12 2 238 1 357 1 166 1 337 3 263 1 99 1 300 1 309 3 28 1 363 1 354 1 364 1 365 1 141 3 265 2 119 1 86 1 130 1 329 1 186 1 269 1 
203 2 12 2 357 1 337 1 98 1 263 1 300 1 309 1 28 1 339 1 141 1 265 2 235 1 130 1 329 1 88 1 269 1 294 1 
141 1 119 1 86 1 337 1 309 1 241 1 
203 3 272 1 238 2 162 1 209 1 78 1 166 2 337 7 241 1 252 1 309 7 41 1 62 1 354 1 243 1 141 6 86 2 119 3 87 1 54 1 65 1 
239 2 335 1 337 1 39 1 194 1 3 4 5 1 82 3 141 1 86 1 345 1 295 1 143 1 203 1 93 1 348 2 296 1 148 1 49 1 204 6 353 2 52 2 154 2 354 1 254 2 54 1 19 1 109 1 22 3 115 2 166 1 309 1 310 2 214 1 216 2 119 1 221 1 267 1 366 1 226 1 367 2 368 1 276 1 322 2 370 1 326 1 35 1 
160 1 238 1 307 1 357 1 59 1 283 1 337 1 263 2 309 1 28 1 141 1 197 2 265 3 120 2 89 1 313 2 224 1 203 2 12 3 145 1 98 1 126 2 300 1 233 1 156 1 130 1 329 1 257 1 
203 2 62 1 354 1 141 2 357 1 119 2 86 1 8 1 166 1 54 1 337 2 309 2 241 1 
306 1 203 1 238 1 212 1 166 1 337 4 309 4 363 1 141 4 43 1 119 1 86 1 54 1 
203 1 209 1 166 1 337 2 1 1 252 1 309 2 354 1 181 1 141 2 323 1 86 1 119 2 269 1 
238 1 7 1 141 1 119 1 86 1 337 1 176 1 319 1 308 1 309 1 
203 1 243 1 141 2 119 1 86 1 220 1 166 1 87 1 54 1 337 2 309 2 
306 1 203 3 272 1 238 1 212 1 166 2 337 5 309 5 41 1 43 1 141 4 243 1 86 2 119 2 54 1 269 1 
306 1 203 3 238 1 356 1 212 1 166 2 337 5 309 5 41 1 43 1 141 4 243 1 86 2 119 2 54 1 269 1 
203 1 109 1 238 1 239 2 276 1 166 1 337 1 309 1 353 1 52 2 5 1 354 1 141 1 324 1 119 1 86 1 267 1 295 1 
203 1 162 1 209 1 166 1 337 1 252 1 309 1 62 1 354 1 141 1 86 1 119 2 269 1 
353 1 26 1 94 1 317 1 56 1 
146 1 12 2 208 1 94 2 317 1 300 1 230 1 34 1 353 1 26 2 265 2 129 1 130 1 329 1 256 1 187 1 134 1 56 2 224 1 
26 1 52 1 5 1 94 1 311 1 239 1 317 1 122 1 231 1 
208 1 317 1 134 1 
331 1 47 1 50 1 358 1 
331 1 172 1 340 1 50 1 101 1 358 1 207 1 
144 1 30 1 207 1 
331 1 13 1 349 2 172 3 340 1 105 1 44 1 50 1 247 1 101 1 358 1 207 3 
331 1 110 1 172 2 340 1 50 1 150 1 101 1 358 1 207 2 
331 1 73 1 13 1 172 1 340 1 7 1 116 1 246 1 101 1 207 1 308 1 
331 1 13 1 172 1 340 1 50 1 101 1 207 1 
13 1 172 1 340 1 50 2 101 1 358 1 207 1 
331 1 13 1 172 2 340 2 193 1 50 1 45 1 101 2 70 1 207 2 
73 1 331 2 13 1 110 2 172 3 261 1 50 1 135 1 101 1 358 1 289 1 340 1 207 3 
331 1 13 1 110 1 172 2 0 1 116 1 50 1 176 1 101 1 358 1 308 2 340 1 7 1 372 1 207 2 
73 1 331 2 13 1 110 2 172 4 50 1 150 1 101 2 358 1 289 1 340 2 344 1 207 4 
331 1 13 1 172 1 340 1 50 1 101 1 358 1 207 1 
73 1 331 3 110 2 349 1 172 4 50 2 101 1 358 2 289 1 340 1 44 1 247 1 207 4 108 1 
331 1 13 1 110 1 172 2 50 1 101 1 352 1 358 1 340 1 85 1 279 1 207 2 
331 1 13 1 349 2 37 1 172 3 340 1 44 1 50 1 247 2 101 1 358 1 207 3 
331 2 165 2 369 1 346 1 
288 1 13 1 172 1 340 1 101 1 207 1 
331 1 110 1 13 1 172 2 340 1 261 1 50 1 101 1 358 1 207 2 
79 1 
331 1 13 1 172 1 340 1 50 1 101 1 358 1 207 1 
331 1 110 1 13 1 172 3 349 1 261 1 50 1 101 1 358 1 340 1 207 3 
331 1 73 1 289 1 108 1 
331 1 50 1 

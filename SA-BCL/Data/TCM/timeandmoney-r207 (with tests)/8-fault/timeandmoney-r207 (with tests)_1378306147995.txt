#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (206,268,348) (206,268,348) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 117 204 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 36 182 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 36 182 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 276 1 341 2 60 2 302 1 42 3 324 9 49 6 124 1 153 1 126 4 327 2 259 5 9 1 134 1 264 2 136 1 267 1 310 1 159 2 354 1 138 9 25 2 290 1 192 1 144 1 361 2 167 1 
1 1 276 1 341 2 60 2 302 1 42 3 324 9 49 6 124 1 153 1 126 4 327 2 259 5 9 1 134 1 264 2 136 1 267 1 159 2 310 1 354 1 138 9 290 1 25 2 192 1 144 1 361 2 167 1 
1 1 276 1 341 2 60 2 302 1 42 4 324 10 49 7 124 1 153 1 126 5 327 2 259 6 9 1 134 1 264 2 136 1 267 1 159 2 310 1 354 1 138 10 290 1 25 2 192 1 144 1 361 2 167 1 
1 1 276 1 341 2 60 2 302 1 42 2 324 7 49 4 153 1 126 3 327 2 259 4 9 1 134 1 264 2 136 1 267 1 159 2 310 1 354 1 138 7 290 1 25 1 192 1 144 1 361 2 167 1 
1 1 9 1 341 1 267 1 60 1 159 1 302 1 138 4 42 1 25 2 144 1 324 4 49 3 124 1 126 2 327 1 259 3 361 1 
148 1 1 1 264 1 341 1 267 1 60 1 310 1 302 1 354 1 138 2 324 2 177 1 327 1 103 1 259 1 361 1 
1 1 276 1 341 2 60 2 302 1 42 3 324 9 49 7 153 1 124 1 126 4 327 1 51 1 259 5 209 1 9 1 264 1 136 1 267 1 159 1 138 9 25 2 144 1 361 1 
1 1 276 1 341 2 60 2 302 1 42 3 324 9 49 7 153 1 124 1 126 4 327 1 51 1 259 5 209 1 9 1 264 1 136 1 267 1 159 1 138 9 25 2 144 1 361 1 
1 1 264 1 276 1 341 2 267 1 60 2 302 1 138 3 42 1 324 3 49 1 126 1 259 2 
339 1 133 1 291 1 
296 1 133 1 93 2 
110 2 262 2 255 2 270 2 234 1 61 2 155 1 335 2 
230 1 231 1 340 2 116 1 99 1 100 2 150 1 234 1 5 2 61 2 6 1 319 1 174 1 175 1 207 2 152 1 255 2 256 1 66 1 305 1 155 1 262 2 261 1 212 1 185 1 89 1 215 2 335 3 53 1 110 3 141 1 162 1 143 1 223 1 270 2 359 1 56 1 
110 1 262 1 131 1 255 1 270 1 61 1 155 1 335 1 
339 1 133 1 263 1 115 1 286 1 245 1 236 1 335 1 110 1 357 1 102 1 270 1 180 1 67 1 
339 1 262 1 133 1 263 1 115 1 236 1 61 1 335 1 110 1 357 2 255 1 102 1 270 1 180 1 67 2 
87 1 357 1 4 1 239 1 67 1 
339 1 87 1 321 1 133 1 357 2 20 1 239 1 67 2 
87 1 357 1 67 1 
262 1 131 1 202 1 61 1 335 1 110 1 357 1 255 1 239 1 270 1 155 1 67 1 
133 1 
339 1 87 1 321 1 133 1 357 2 239 1 67 2 217 1 
339 1 87 2 133 1 118 1 40 1 353 2 247 1 54 2 248 1 321 1 357 5 64 1 239 2 67 5 198 2 208 1 58 1 68 1 147 1 
291 1 234 1 
262 1 234 2 61 1 335 2 110 2 194 1 255 1 270 2 165 1 
351 1 312 1 41 1 
261 1 185 1 340 1 100 1 234 1 189 1 215 1 335 1 319 1 53 1 110 1 141 1 174 1 175 1 223 1 305 1 
261 1 17 1 262 1 185 1 340 1 100 1 215 1 53 1 335 2 319 1 174 1 141 1 110 2 175 1 223 1 193 1 255 1 312 1 270 1 305 1 
110 3 17 1 262 3 255 3 270 3 234 1 61 1 335 3 
110 1 262 1 272 1 102 1 255 1 270 1 335 1 
110 1 262 1 194 1 102 1 255 1 270 1 61 1 165 1 335 1 
230 1 17 1 231 1 115 1 340 1 99 1 100 1 234 1 5 2 236 1 61 2 319 1 174 1 18 1 175 1 207 1 152 1 255 3 102 1 256 1 180 1 305 1 155 1 67 1 261 1 262 3 212 1 263 1 185 1 72 1 215 1 53 1 335 4 141 1 110 4 162 1 143 1 223 1 357 1 194 1 193 1 270 3 359 1 56 1 
110 2 122 1 262 1 17 1 286 1 255 1 270 2 234 1 335 2 
17 2 262 3 133 1 115 1 233 1 263 1 236 1 61 1 335 3 110 3 18 1 357 1 194 1 193 1 102 1 255 3 270 3 180 1 67 1 
17 1 262 2 41 1 61 1 335 2 110 2 194 1 255 2 312 1 270 2 
261 1 185 1 340 1 100 1 234 1 215 1 335 1 319 1 53 1 110 1 141 1 174 1 175 1 223 1 305 1 
169 1 261 1 185 1 340 1 315 1 100 1 234 1 215 1 335 1 53 1 110 1 141 1 174 1 175 1 305 1 
230 1 231 1 116 2 99 2 300 1 2 1 3 1 5 2 41 2 152 1 207 4 178 1 179 1 128 1 107 1 351 2 284 1 158 1 162 1 143 1 312 2 55 1 56 1 57 1 
110 1 262 1 337 1 102 1 255 1 180 1 270 1 335 1 
17 2 262 4 286 1 234 1 61 1 335 5 110 5 238 1 122 1 322 1 194 1 193 1 255 4 270 5 
110 2 262 2 272 1 337 1 102 1 255 2 270 2 335 2 
334 1 268 1 
334 1 268 1 
123 1 348 1 
123 1 348 1 
123 1 348 1 
334 1 137 1 268 1 
123 1 348 1 334 2 268 2 
206 1 334 1 268 1 
334 1 137 1 268 1 
334 1 137 1 268 1 
288 1 334 1 268 1 
288 1 334 1 268 1 
288 1 334 1 268 1 
96 1 69 2 157 1 133 1 22 2 334 2 268 2 218 2 279 1 63 2 224 1 222 3 357 2 112 1 280 1 226 2 269 1 67 2 349 1 
234 1 59 1 206 1 63 1 176 1 48 1 255 2 67 1 350 1 262 2 69 1 22 1 333 1 109 1 334 1 218 1 268 1 335 2 110 2 222 1 224 1 357 1 270 2 338 1 
327 1 159 1 361 1 
327 1 103 1 361 1 
313 1 294 1 258 1 159 2 103 1 361 3 
97 1 294 1 258 1 159 1 103 1 361 2 
159 1 258 1 294 2 103 1 361 2 
296 1 339 1 2 1 40 1 321 1 48 1 64 3 179 1 239 4 326 2 128 1 67 5 350 1 208 2 282 1 87 1 308 1 133 2 285 1 353 1 160 2 54 1 219 1 336 2 357 5 93 3 34 1 338 1 57 1 198 1 271 1 166 1 
296 3 339 1 2 3 40 1 317 1 254 1 4 5 321 1 64 8 179 3 239 7 128 3 350 4 67 9 208 6 211 1 210 5 282 2 87 6 133 5 353 2 160 6 54 2 219 2 336 6 357 9 164 1 225 1 93 9 31 1 34 1 57 3 198 2 58 1 166 3 
296 2 339 1 2 1 64 3 179 1 239 2 326 1 128 1 67 3 350 1 208 2 282 1 308 1 133 3 285 1 353 1 160 2 54 1 219 1 357 3 336 2 93 4 198 1 57 1 58 1 166 1 
296 3 339 1 2 2 317 1 254 1 64 5 179 2 239 3 326 2 128 2 67 4 350 2 208 4 211 1 282 1 308 1 133 4 285 1 353 1 160 4 54 1 219 1 336 4 357 4 93 7 198 1 57 2 58 1 166 2 
175 1 291 1 235 1 
242 1 175 1 
77 1 
175 1 305 1 
174 1 250 1 26 1 175 3 235 2 305 1 
174 1 175 1 305 1 
175 1 111 1 
132 1 186 1 116 4 99 3 2 1 3 2 190 1 278 1 74 1 27 1 207 7 178 3 303 1 228 2 128 1 197 1 104 1 
132 1 186 1 116 4 99 3 2 1 3 2 190 1 278 1 74 1 27 1 207 7 178 3 303 1 228 2 128 1 197 1 104 1 
132 1 186 1 116 4 99 3 2 1 3 2 190 1 278 1 74 1 27 1 207 7 29 1 178 3 303 1 228 2 128 1 197 1 104 1 
230 1 200 4 298 3 116 16 99 15 2 4 3 5 5 2 81 1 278 1 152 1 207 31 178 10 125 1 303 5 179 3 181 1 328 1 52 1 128 4 104 2 330 1 132 2 186 1 190 2 74 1 162 1 27 2 143 1 228 3 146 1 197 1 57 3 166 3 
230 2 132 1 186 1 116 5 99 4 2 1 3 3 70 1 5 4 343 1 190 1 74 1 162 2 27 1 143 2 207 9 152 2 178 4 303 1 228 2 181 1 128 1 197 1 104 1 
313 1 1 1 199 1 340 1 172 1 100 1 341 1 60 1 302 1 120 1 318 1 324 2 49 1 304 1 327 1 154 1 103 1 259 1 331 1 264 1 287 1 266 1 267 1 159 1 215 1 216 1 138 2 53 1 141 1 361 2 
313 1 199 1 340 1 172 1 100 1 341 1 60 1 302 1 120 1 318 1 324 3 49 2 304 1 327 1 154 1 103 1 259 1 241 1 264 1 244 1 287 1 266 1 267 1 159 1 215 1 138 3 53 1 141 1 356 1 361 2 
313 1 199 1 340 1 172 1 264 1 100 1 287 1 266 1 267 1 159 1 215 1 302 1 138 2 53 1 141 1 356 1 324 2 49 2 304 1 327 1 103 1 154 1 259 1 361 2 241 1 
8 1 108 1 283 1 199 2 185 1 340 1 264 2 172 2 244 1 100 1 341 1 60 1 215 1 138 1 53 1 141 1 175 1 47 1 323 1 324 1 83 1 304 2 305 1 
313 1 1 1 199 1 340 1 172 1 100 1 341 1 60 1 120 1 318 1 324 1 304 1 327 1 154 1 103 1 241 1 264 1 287 1 266 1 159 1 215 1 216 1 138 1 53 1 141 1 361 2 
11 1 
340 2 316 1 117 1 100 2 40 1 203 1 204 1 175 1 321 1 323 1 64 1 127 1 305 1 67 2 208 1 282 1 87 2 108 1 185 2 353 1 215 2 53 1 141 1 54 1 221 1 357 2 16 1 198 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 87 1 321 1 357 2 316 1 117 1 67 2 204 1 217 1 
54 1 221 1 357 1 316 1 117 1 40 1 353 1 198 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
221 1 357 1 316 1 117 1 67 1 204 1 
54 1 221 1 357 1 316 1 117 1 40 1 353 1 198 1 67 1 204 1 
230 1 231 1 116 3 99 3 2 1 3 2 41 1 5 2 234 2 152 1 207 6 178 2 128 1 107 1 351 1 186 1 190 1 74 1 162 1 27 1 143 1 291 1 312 1 228 1 197 1 56 1 
230 2 200 3 231 2 298 3 116 8 99 6 2 1 80 1 3 1 81 1 234 1 5 4 41 4 6 1 152 2 207 14 178 2 303 1 179 1 328 1 128 2 351 11 135 1 162 2 143 2 30 1 227 1 312 11 94 1 359 1 56 1 57 2 166 2 
230 1 17 1 231 1 340 1 116 1 99 1 100 1 234 1 41 1 5 2 6 1 319 1 174 1 175 1 152 1 207 2 255 1 305 1 261 1 262 1 185 1 90 1 189 1 215 1 140 1 53 1 335 2 141 1 110 2 162 1 143 1 223 1 92 1 193 1 227 1 270 1 56 1 359 1 
230 3 231 3 274 2 116 10 2 3 3 4 234 2 5 6 41 7 6 1 319 2 174 2 175 2 178 8 179 2 128 3 241 1 185 1 186 1 10 2 190 1 335 3 53 2 141 2 143 3 193 1 197 1 56 3 57 2 17 1 340 3 99 10 100 3 152 3 207 20 255 1 303 4 256 2 305 2 262 1 261 2 351 7 214 2 265 1 215 3 110 3 74 1 162 3 27 1 223 2 311 2 227 1 312 7 228 1 270 1 35 1 360 1 359 1 166 2 
230 2 17 1 170 1 231 2 340 7 116 1 99 1 100 8 277 1 5 4 6 1 175 3 152 2 207 2 323 1 255 1 305 2 241 1 243 1 107 1 262 1 331 1 108 1 213 1 185 2 89 2 188 1 215 8 335 1 53 2 110 1 141 2 14 1 162 2 143 2 195 1 270 1 56 2 359 1 
230 1 231 1 116 1 99 2 2 1 3 1 41 1 5 2 61 1 152 1 207 3 178 1 255 1 179 1 128 1 262 1 351 1 335 1 24 1 110 1 162 1 143 1 194 1 227 1 312 1 270 1 56 1 57 1 166 1 
107 1 230 1 231 1 351 1 284 1 116 2 41 1 5 2 162 1 143 1 207 2 152 1 178 1 303 1 312 1 128 1 56 1 57 1 
107 1 230 1 231 1 351 1 99 2 2 1 3 1 41 1 5 2 162 1 143 1 207 2 152 1 178 1 312 1 179 1 55 1 56 1 
107 1 230 1 231 1 351 2 116 2 99 2 2 1 3 1 41 2 5 2 162 1 143 1 207 4 152 1 178 2 303 1 312 2 179 1 128 1 56 1 57 1 166 1 
230 1 170 1 231 1 351 1 284 1 116 2 41 1 5 2 162 1 143 1 207 2 152 1 178 1 303 1 312 1 128 1 56 1 57 1 
230 1 170 1 231 1 351 1 99 2 2 1 3 1 41 1 5 2 162 1 143 1 207 2 152 1 178 1 312 1 179 1 55 1 56 1 
230 1 170 1 231 1 116 2 99 2 2 1 3 1 5 2 41 2 152 1 207 4 178 2 303 1 179 1 128 1 351 2 162 1 143 1 312 2 57 1 56 1 166 1 
230 1 231 1 351 2 116 2 99 2 2 1 3 1 41 2 5 2 162 1 143 1 152 1 207 4 178 2 303 1 312 2 179 1 128 1 56 1 57 1 166 1 
230 1 231 1 340 1 116 1 99 1 100 1 234 1 5 2 6 1 319 1 174 1 175 1 207 2 152 1 256 1 305 1 261 1 185 1 215 1 53 1 335 1 141 1 110 1 162 1 143 1 223 1 56 1 359 1 
169 1 230 1 231 1 340 1 116 1 315 1 99 1 100 1 234 1 5 2 6 1 174 1 175 1 207 2 152 1 305 1 105 1 261 1 185 1 215 1 53 1 335 1 141 1 110 1 162 1 143 1 56 1 359 1 
230 1 231 1 351 2 116 2 99 2 2 1 3 1 41 2 5 2 162 1 143 1 207 4 152 1 178 2 227 1 303 1 312 2 179 1 128 1 56 1 57 1 166 1 
230 1 231 1 340 1 116 2 99 2 2 1 100 1 3 1 41 2 5 2 319 1 174 1 175 1 207 4 152 1 178 2 303 1 256 1 179 1 128 1 305 1 261 1 331 1 351 2 10 1 215 1 53 1 335 1 141 1 110 1 162 1 143 1 223 1 312 2 57 1 56 1 166 1 
230 1 231 1 116 2 99 1 2 1 5 2 41 1 61 1 152 1 207 3 178 1 255 1 303 1 179 1 128 1 262 1 351 1 335 1 110 1 162 1 143 1 194 1 227 1 292 1 312 1 270 1 56 1 57 1 166 1 
36 1 230 3 0 1 251 1 200 4 38 1 298 3 116 20 275 1 99 21 2 5 3 3 81 3 5 6 343 1 43 4 62 2 151 1 152 3 207 41 178 7 325 1 303 4 181 1 179 4 182 1 328 1 128 5 129 1 329 1 106 1 186 1 190 1 139 1 91 1 74 1 162 3 27 1 143 3 228 1 197 1 57 4 166 4 
230 4 36 1 0 1 38 1 116 20 275 1 2 4 3 4 5 8 81 3 43 4 178 7 325 1 179 3 181 2 128 5 328 1 182 1 129 1 329 1 186 1 91 1 139 1 190 1 143 4 197 1 57 4 251 1 200 4 298 3 99 18 343 1 62 2 151 1 207 38 152 4 303 3 106 1 162 4 74 1 27 1 228 1 166 4 
36 1 230 2 251 1 200 4 38 1 298 4 116 23 275 1 99 21 2 7 3 6 81 2 5 4 343 1 43 2 62 1 151 1 152 2 207 44 178 12 303 6 181 1 179 6 182 1 328 2 128 7 129 1 329 1 106 1 186 1 190 1 139 1 91 1 74 1 162 2 27 1 143 2 228 1 94 2 197 1 57 6 166 6 
36 2 230 2 0 1 200 2 38 1 298 1 116 9 99 10 2 3 3 3 81 1 5 4 343 1 43 2 62 1 152 2 207 19 178 6 303 3 179 3 182 1 328 1 128 3 129 1 91 1 162 2 143 2 295 1 57 3 166 3 
36 1 230 3 251 1 38 2 200 2 298 2 116 14 99 12 275 1 2 2 3 1 5 6 81 2 343 1 43 4 62 2 151 1 152 3 207 26 178 3 303 2 181 2 179 2 182 1 128 3 129 1 329 1 106 1 139 1 91 1 162 3 143 3 57 3 166 3 
279 1 96 1 69 1 201 1 63 1 22 1 269 1 334 1 218 1 268 1 
206 1 59 1 
69 1 21 1 114 1 63 1 22 1 334 1 306 1 218 1 268 1 
96 1 69 1 157 1 133 1 22 1 334 1 268 1 218 1 279 1 224 1 63 1 222 2 357 1 280 1 226 1 269 1 67 1 349 1 
96 1 69 1 157 1 133 1 22 1 334 1 268 1 218 1 279 1 224 1 63 1 222 2 357 1 280 1 226 1 269 1 67 1 349 1 
96 1 69 1 157 1 133 1 22 1 334 1 268 1 218 1 279 1 224 1 63 1 222 2 357 1 280 1 226 1 269 1 67 1 349 1 
130 1 137 1 205 1 
130 1 137 1 205 1 
15 1 288 1 
130 1 15 1 288 1 
176 1 109 1 
39 1 234 1 59 1 206 1 63 1 176 1 48 1 255 2 239 1 349 1 67 1 350 1 69 1 262 2 22 1 333 1 109 1 334 1 335 2 218 1 268 1 110 2 222 1 357 1 226 1 270 2 338 1 
137 1 205 1 
130 1 15 1 288 1 
230 1 231 1 340 2 116 1 99 1 100 2 5 2 6 1 237 1 175 1 152 1 207 2 240 1 305 1 307 1 213 1 187 1 89 2 215 2 53 1 335 2 141 1 110 2 162 1 143 1 227 1 195 1 270 2 113 1 56 1 359 1 
313 1 331 1 340 2 299 1 100 2 266 1 159 1 215 2 120 1 53 1 141 1 28 1 76 1 304 1 327 1 103 1 154 1 361 2 241 1 
313 1 340 1 100 1 266 1 159 1 215 1 120 1 53 1 141 1 142 1 76 1 304 1 327 1 103 1 154 1 361 2 241 1 
8 1 108 1 185 1 340 1 88 1 100 1 215 1 53 1 141 1 175 1 28 1 323 1 304 1 305 1 
313 1 340 1 299 1 100 1 266 1 159 1 215 1 120 1 53 1 141 1 28 1 76 1 304 1 327 1 103 1 154 1 361 2 241 1 
332 1 
339 1 248 1 133 1 291 1 118 1 64 1 208 1 
296 1 339 1 40 1 321 1 64 1 67 1 208 1 184 1 87 1 133 2 353 1 161 1 54 1 75 1 357 1 93 1 198 1 
115 2 118 1 40 4 2 2 235 2 173 2 174 3 175 10 321 3 179 2 128 2 282 2 242 3 331 1 86 1 87 5 185 1 133 8 12 2 53 3 141 4 54 4 248 1 336 6 93 12 196 2 198 4 57 2 296 6 339 2 297 1 149 2 340 3 253 1 100 3 101 1 301 1 203 1 342 2 64 9 305 3 67 5 208 8 156 2 353 4 71 2 73 2 215 3 160 6 26 1 357 5 111 2 311 2 166 2 
296 3 251 1 339 1 200 1 298 1 275 1 40 2 2 2 81 1 151 1 321 1 64 7 179 2 128 2 67 1 208 4 329 1 106 1 87 1 133 4 309 1 353 2 71 1 160 5 54 2 357 1 336 5 93 6 198 2 57 2 166 2 
37 1 40 1 2 1 202 1 61 1 255 1 64 2 128 2 155 1 67 1 208 2 85 1 262 1 131 1 186 1 353 1 71 2 190 1 335 1 110 1 54 1 27 1 357 1 270 1 196 1 198 1 
230 1 231 1 340 1 99 1 100 1 234 1 5 2 61 2 319 1 174 1 175 1 207 1 152 1 255 2 256 1 155 1 305 1 262 2 261 1 212 1 185 1 215 1 335 3 53 1 110 3 141 1 162 1 143 1 223 1 270 2 359 1 56 1 
296 2 282 1 339 2 133 4 40 1 353 1 203 1 160 2 54 1 336 2 93 4 64 1 228 1 198 1 208 2 
339 1 133 1 40 1 118 1 353 1 54 1 248 1 64 1 198 1 208 1 
296 5 133 5 2 2 71 2 160 5 336 5 311 1 93 10 64 5 179 2 196 1 128 2 57 2 166 2 208 5 
339 1 87 1 321 1 133 1 357 1 67 1 
297 1 340 4 253 2 40 1 100 4 203 2 121 1 175 1 321 2 323 1 64 2 127 1 305 1 67 3 208 2 282 2 87 4 108 1 185 2 353 2 246 1 215 4 53 1 141 1 54 2 357 3 16 1 198 2 58 1 
84 1 63 1 218 1 
279 1 45 1 63 1 109 1 218 1 
84 1 63 1 218 1 
84 1 63 1 218 1 
63 1 50 1 218 1 
63 1 50 1 218 1 
63 1 50 1 218 1 
63 1 218 1 
334 1 268 1 
230 2 186 1 116 4 99 4 2 1 3 2 5 4 190 1 162 2 74 1 143 2 27 1 207 8 152 2 178 3 303 1 228 1 181 1 128 1 197 1 
186 1 116 3 99 3 2 1 3 2 190 1 74 1 27 1 207 6 291 1 178 2 228 1 128 1 197 1 
230 1 116 2 99 2 2 1 3 1 5 2 355 1 162 1 143 1 152 1 207 4 178 2 303 1 179 1 128 1 57 1 166 1 
200 2 298 1 116 3 99 4 2 1 3 1 81 1 207 7 178 2 303 1 179 1 328 1 128 1 57 1 166 1 
230 2 200 2 298 2 116 11 99 12 2 3 3 5 5 4 207 23 152 2 178 9 303 4 179 2 181 2 128 3 328 1 7 1 186 1 135 1 190 2 74 1 162 2 27 2 143 2 228 1 94 1 197 1 57 2 166 2 
200 1 207 1 99 1 
207 1 298 1 116 1 
230 1 116 3 99 3 2 1 3 2 5 2 355 1 162 1 143 1 152 1 207 6 311 1 178 3 303 1 179 1 128 1 57 1 166 1 
230 1 251 1 200 1 298 1 116 6 99 6 275 1 2 2 3 1 81 1 5 2 343 1 151 1 207 12 152 1 178 2 303 1 179 2 128 2 106 1 329 1 162 1 143 1 57 2 166 2 
186 1 116 3 99 3 2 1 3 1 190 1 27 1 207 6 178 2 303 1 128 1 
230 1 116 1 99 2 3 1 5 2 190 1 74 1 162 1 27 1 143 1 207 3 152 1 178 2 303 1 181 1 7 1 197 1 
230 1 106 1 200 1 298 1 186 1 116 4 99 4 2 1 3 2 5 2 81 1 343 1 190 1 74 1 162 1 27 1 143 1 152 1 207 8 178 2 228 1 128 1 197 1 
230 2 200 2 298 1 116 6 99 5 2 1 3 2 81 1 5 4 343 1 207 11 152 2 178 3 303 1 328 1 128 2 106 1 186 1 190 1 355 1 74 1 162 2 27 1 143 2 228 1 197 1 57 1 166 1 
230 3 251 1 200 1 298 1 116 6 99 7 275 1 2 2 3 1 81 1 5 6 343 1 151 1 207 13 152 3 178 2 303 1 179 2 181 1 128 2 329 1 106 1 355 1 162 3 143 3 57 2 166 2 
230 3 251 1 200 1 298 1 116 7 99 4 275 1 2 1 3 1 81 1 5 6 343 1 151 1 207 11 152 3 178 2 303 1 181 1 179 1 128 2 106 1 329 1 355 1 162 3 143 3 57 2 166 2 
230 1 106 1 200 1 298 1 186 1 116 4 99 4 2 1 3 2 5 2 81 1 343 1 190 1 74 1 162 1 27 1 143 1 152 1 207 8 178 2 228 1 128 1 197 1 
230 1 251 1 200 1 298 1 116 6 99 6 275 1 2 2 3 1 81 1 5 2 343 1 151 1 207 12 152 1 178 2 303 1 179 2 128 2 106 1 329 1 162 1 143 1 57 2 166 2 
230 4 251 1 200 1 298 1 116 7 99 5 275 1 2 1 3 1 81 1 5 8 343 1 151 1 207 12 152 4 178 2 303 1 179 1 181 2 128 2 329 1 106 1 355 1 162 4 143 4 57 2 166 2 
230 4 251 1 0 1 200 1 298 1 116 7 99 5 275 1 2 1 3 2 81 1 5 8 343 1 151 1 207 12 152 4 178 4 303 2 179 1 181 2 128 2 329 1 106 1 162 4 143 4 57 2 166 2 
186 1 116 3 99 4 2 1 3 3 190 3 74 2 27 3 207 7 178 6 303 3 128 1 197 1 
230 4 251 1 0 1 200 1 298 1 116 7 99 5 275 1 2 1 3 1 81 1 5 8 343 1 151 1 207 12 152 4 178 2 303 1 179 1 181 2 128 2 329 1 106 1 162 4 143 4 57 2 166 2 
230 1 85 1 116 5 186 1 99 5 2 2 3 3 5 2 343 1 190 2 162 1 143 1 27 2 152 1 207 10 178 5 303 2 128 2 
230 1 116 2 5 2 343 1 162 1 143 1 152 1 207 2 178 1 303 1 128 1 57 1 
230 1 116 2 99 2 2 1 3 1 5 2 343 1 162 1 143 1 152 1 207 4 178 2 303 1 179 1 128 1 57 1 166 1 
230 3 0 1 116 1 99 2 3 1 5 6 343 1 190 1 162 3 143 3 27 1 207 3 152 3 178 2 303 1 181 1 7 1 
230 5 0 1 200 4 298 3 116 16 99 18 2 5 3 7 81 1 5 10 343 1 152 5 207 34 178 12 303 5 181 2 179 3 7 1 52 1 328 1 128 5 330 1 186 2 190 3 355 1 74 1 162 5 27 3 143 5 228 1 146 1 197 1 57 3 166 3 
110 1 122 1 286 1 270 1 229 1 234 1 335 1 
314 1 352 1 286 1 234 1 335 1 110 1 289 1 122 1 346 1 229 1 270 1 257 1 
141 1 175 1 108 1 323 1 291 1 340 1 185 1 100 1 215 1 305 1 53 1 
261 1 17 1 262 1 185 1 340 1 100 1 234 1 215 1 335 2 53 1 174 1 141 1 110 2 175 1 223 1 255 1 270 1 305 1 
17 1 340 1 253 1 100 1 234 1 236 1 173 1 174 2 175 3 255 1 102 1 180 1 305 2 262 2 261 1 215 1 53 1 335 2 110 2 141 1 223 1 111 1 270 2 
169 1 17 1 340 2 253 1 100 2 234 1 236 1 173 1 174 2 175 3 255 1 102 1 180 1 305 2 262 2 261 1 215 2 53 1 335 2 110 2 141 1 111 1 270 2 95 1 
339 1 340 2 115 1 253 1 100 2 202 1 235 1 61 1 82 1 173 1 174 1 175 4 345 1 255 1 155 1 305 1 67 2 242 1 262 1 87 1 131 1 185 1 133 1 215 2 335 1 53 1 110 1 141 1 357 2 111 1 270 1 
242 1 339 1 87 1 185 1 133 1 115 1 340 3 253 1 100 3 235 1 215 3 342 1 173 1 53 1 174 1 141 1 175 4 357 2 111 1 305 1 67 2 95 1 
141 1 243 1 340 1 100 1 215 1 53 1 
243 1 331 1 213 1 185 2 340 6 89 1 100 7 277 1 188 1 215 7 320 1 53 2 174 1 141 3 14 1 26 1 19 1 175 3 358 1 305 2 241 1 
230 2 231 2 274 1 116 3 2 1 3 2 41 1 5 4 234 2 319 1 174 1 175 1 178 2 128 1 331 1 186 1 10 1 187 1 190 1 335 2 53 1 141 1 143 2 197 1 56 2 17 1 340 1 99 3 100 1 152 2 207 6 255 1 256 1 305 1 262 1 261 1 351 1 215 1 110 2 162 2 74 1 27 1 223 1 227 1 312 1 228 1 270 1 
339 1 297 1 149 1 340 1 115 1 118 1 100 1 40 2 235 1 342 1 175 2 321 1 64 1 239 1 67 3 208 1 242 1 87 2 133 1 185 1 353 2 215 1 73 1 12 1 54 2 248 1 357 3 198 2 
243 1 331 1 86 1 340 2 100 2 235 1 215 2 53 1 174 1 141 2 26 1 175 2 305 1 
331 1 108 1 185 1 340 4 100 4 215 4 53 1 141 1 175 1 323 1 65 1 305 1 95 1 
340 2 98 1 253 1 100 2 215 2 53 1 174 1 141 2 19 1 46 1 175 1 358 1 35 1 305 1 
141 1 340 1 185 1 100 1 266 1 327 1 103 1 215 1 361 1 53 1 
331 1 340 2 213 1 100 2 215 2 53 1 141 1 175 1 240 1 305 1 241 1 
108 1 331 1 185 1 340 4 213 1 253 1 100 5 188 1 215 5 53 2 141 2 14 1 175 3 323 1 65 1 305 2 
108 1 331 1 185 1 340 4 213 1 253 1 100 5 188 1 215 5 53 2 141 2 44 1 175 3 323 1 65 1 305 2 
169 1 261 1 17 1 262 1 185 1 340 1 100 1 234 1 215 1 335 2 53 1 174 1 141 1 110 2 175 1 255 1 270 1 305 1 
340 1 253 1 100 1 215 1 320 1 53 1 174 1 141 2 26 1 19 1 175 1 358 1 305 1 
163 1 232 1 234 1 23 1 183 1 
339 1 232 2 133 1 115 1 263 1 234 1 236 1 23 2 18 1 163 1 357 2 102 1 145 1 32 1 180 1 239 1 183 2 67 2 260 1 
110 1 307 1 163 1 232 1 270 1 113 1 23 1 237 1 335 1 
163 1 32 1 260 1 
291 1 267 1 259 1 302 1 
324 1 341 1 267 1 60 1 259 1 302 1 138 1 
264 1 172 1 138 1 
1 1 171 1 341 1 60 1 267 1 354 2 302 1 138 3 13 1 324 3 259 1 78 1 
25 1 324 2 49 1 341 1 267 1 60 1 259 1 302 1 138 2 
1 1 144 1 324 1 126 1 341 1 327 1 60 1 159 1 259 1 361 1 138 1 
1 1 324 1 341 1 60 1 259 1 302 1 138 1 
1 1 324 1 341 1 267 1 60 1 302 2 138 1 
1 1 341 2 119 1 60 2 302 1 138 2 220 1 324 2 281 1 259 1 
1 1 136 1 341 1 267 1 60 1 302 1 138 3 42 1 324 3 49 2 153 1 126 1 259 2 
313 1 1 1 79 1 341 1 267 1 60 1 159 1 302 1 138 2 324 2 49 1 327 1 103 1 259 1 361 2 
1 1 341 2 267 1 60 2 302 1 138 4 42 1 25 1 324 4 49 2 124 1 126 1 259 2 
1 1 324 3 49 1 136 1 341 1 267 1 60 1 259 1 302 1 354 1 138 3 
252 1 126 1 259 1 42 1 
259 1 302 1 
1 1 324 1 341 1 267 1 60 1 259 1 302 1 138 1 
252 1 341 1 267 2 60 1 354 1 302 2 138 4 42 1 13 1 324 4 49 2 126 1 259 3 78 1 
209 1 1 1 341 1 60 1 267 1 302 1 138 2 324 2 49 1 347 1 259 1 168 1 
1 1 341 1 60 1 267 1 354 2 302 1 138 3 13 1 324 3 249 1 259 1 78 2 
191 1 344 1 273 2 259 2 
1 1 324 1 341 1 293 1 60 1 138 1 
1 1 324 2 49 1 136 1 341 1 267 1 60 1 259 1 302 1 138 2 
33 1 
1 1 324 1 341 1 267 1 60 1 259 1 302 1 138 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 77 144 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 77 325 165 223 (284,298) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 77 175 168 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 77 175 168 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 77 175 168 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 77 175 168 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 77 175 168 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 77 263 192 344 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 77 144 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 77 144 248 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 77 325 165 223 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 77 325 165 223 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 77 144 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 77 144 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 77 313 241 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 77 313 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 77 313 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 77 313 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 77 313 241 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 77 144 248 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 326 265 46 (128,170) (128,170) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 77 263 36 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 77 263 192 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 77 263 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 77 325 165 142 5 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 77 325 299 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 326 265 46 (128,170) (128,170) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 77 325 299 58 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 77 325 165 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 77 325 165 142 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 326 265 46 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 77 263 36 206 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 326 265 46 (128,170) (128,170) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 77 263 36 153 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 77 325 299 (128,170) (128,170) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 207 173 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 350 4 220 1 29 1 139 2 163 2 283 3 140 1 242 1 166 1 353 2 96 1 330 9 304 2 59 9 146 1 148 2 198 1 226 1 152 1 268 5 176 1 211 2 108 1 292 6 133 1 88 2 157 1 
3 1 350 4 220 1 29 1 139 2 163 2 283 3 140 1 242 1 166 1 353 2 96 1 330 9 304 2 59 9 146 1 148 2 198 1 226 1 152 1 268 5 176 1 211 2 108 1 292 6 133 1 88 2 157 1 
3 1 350 5 220 1 29 1 139 2 163 2 283 4 140 1 242 1 166 1 353 2 96 1 330 10 304 2 59 10 146 1 148 2 198 1 226 1 152 1 268 6 176 1 211 2 108 1 292 7 133 1 88 2 157 1 
3 1 350 3 220 1 29 1 139 2 163 2 283 2 140 1 242 1 166 1 353 1 96 1 330 7 304 2 59 7 146 1 148 2 226 1 152 1 268 4 176 1 211 2 108 1 292 4 133 1 88 2 157 1 
146 1 148 1 198 1 226 1 350 2 283 1 163 1 139 1 268 3 140 1 176 1 211 1 353 2 108 1 304 1 330 4 292 3 59 4 
122 1 148 1 226 1 29 1 268 1 139 1 163 1 140 1 166 1 354 1 108 1 304 1 330 2 59 2 317 1 88 1 
148 2 226 1 3 1 350 1 283 1 268 2 140 1 108 1 304 2 330 3 292 1 59 3 88 1 
3 1 350 4 283 3 139 1 163 1 140 1 242 1 353 2 330 9 304 2 59 9 146 1 148 2 197 1 198 1 226 1 268 5 176 1 211 1 250 1 108 1 292 7 88 1 157 1 
3 1 350 4 283 3 139 1 163 1 140 1 242 1 353 2 330 9 304 2 59 9 146 1 148 2 197 1 198 1 226 1 268 5 176 1 211 1 250 1 108 1 292 7 88 1 157 1 
256 1 
127 1 245 2 12 1 
61 1 231 2 362 2 266 1 333 2 10 2 33 2 366 2 
134 1 22 1 347 2 348 2 77 1 300 1 302 1 188 1 189 1 54 1 260 1 224 1 244 1 10 3 32 1 144 1 33 2 247 1 61 1 287 1 309 1 196 2 63 1 266 1 333 3 38 1 11 2 102 1 290 1 205 2 360 1 231 3 362 2 212 2 251 1 44 1 132 1 181 1 45 1 366 3 47 1 
247 1 98 1 61 1 231 1 141 1 362 1 333 1 10 1 33 1 366 1 
247 1 93 1 300 1 159 1 282 1 12 1 231 1 233 1 272 1 132 1 10 1 238 1 366 1 215 1 
247 1 93 1 333 1 300 1 159 1 282 2 12 1 231 1 233 2 362 1 132 1 10 1 33 1 366 1 215 1 
13 1 352 1 233 1 282 1 97 1 
13 1 352 1 225 1 233 2 93 1 100 1 282 2 12 1 
13 1 233 1 282 1 
247 1 98 1 61 1 333 1 282 1 115 1 352 1 231 1 141 1 233 1 362 1 10 1 33 1 366 1 
12 1 
13 1 352 1 233 2 93 1 100 1 26 1 282 2 12 1 
158 2 124 2 279 1 332 2 49 1 93 1 100 1 24 1 27 1 282 5 303 1 12 1 13 2 352 2 66 1 233 5 274 1 69 1 216 1 
256 1 
266 2 333 1 160 1 190 1 231 2 362 1 10 2 33 1 366 2 
284 1 74 1 213 1 
247 1 196 2 347 2 348 1 266 1 333 1 300 1 11 2 290 1 205 1 360 1 40 1 231 1 212 1 251 1 244 1 132 1 10 1 32 1 181 1 45 1 366 1 
347 2 348 1 4 1 300 1 7 1 244 1 32 1 10 2 247 1 196 2 333 2 11 2 290 1 205 1 360 1 231 2 212 1 362 1 251 1 213 1 132 1 45 1 181 1 366 2 
264 1 266 1 333 4 4 1 336 1 7 2 190 1 231 5 272 1 362 4 10 5 33 1 366 5 183 1 
247 1 98 1 62 1 231 2 362 2 333 2 10 2 366 2 
7 1 231 3 362 3 266 1 333 3 10 3 33 1 366 3 
247 1 98 1 231 1 362 1 333 1 10 1 366 1 
247 1 190 1 231 1 362 1 333 1 10 1 160 1 33 1 366 1 
134 1 22 1 322 1 347 2 348 1 4 1 300 2 159 1 302 1 282 1 162 1 189 1 190 1 7 1 54 1 224 1 244 1 32 1 10 4 33 2 247 2 61 1 287 1 309 1 196 2 63 1 266 1 333 4 11 2 102 1 290 1 360 1 205 1 231 4 233 1 362 3 212 1 251 1 44 1 132 2 181 1 45 1 366 4 215 1 47 1 
7 1 231 2 272 1 362 1 266 1 333 1 10 2 336 1 366 2 
247 1 322 1 4 1 333 3 159 1 300 1 282 1 94 1 12 1 190 1 7 2 231 3 233 1 362 3 132 1 10 3 33 1 366 3 215 1 
333 2 7 1 190 1 284 1 231 2 362 2 213 1 10 2 33 1 366 2 
247 1 196 2 347 2 348 1 266 1 333 1 300 1 11 2 290 1 205 1 360 1 231 1 212 1 251 1 244 1 132 1 10 1 32 1 181 1 45 1 366 1 
247 1 196 2 347 2 348 1 266 1 333 1 300 1 11 2 161 1 290 1 205 1 360 1 116 1 231 1 212 1 251 1 244 1 132 1 10 1 181 1 366 1 
320 1 134 1 287 1 22 2 309 1 74 1 63 1 325 1 219 1 77 1 298 1 102 1 189 2 114 1 361 1 165 1 223 1 284 1 42 1 44 1 213 1 47 1 
247 1 62 1 231 1 362 1 333 1 300 1 10 1 366 1 
310 1 237 1 
310 1 237 1 
240 1 131 1 
240 1 131 1 
240 1 131 1 
310 1 237 1 327 1 
117 1 310 1 237 1 
310 2 119 1 240 1 131 1 237 2 171 1 
310 1 237 1 327 1 
310 1 237 1 327 1 
310 1 359 1 237 1 
310 1 359 1 237 1 
310 1 359 1 237 1 
296 1 310 1 254 1 358 1 266 1 202 1 85 1 333 2 282 1 150 1 103 1 117 1 231 2 233 1 362 2 17 1 167 1 179 1 10 2 70 1 237 1 366 2 342 1 20 1 
110 2 311 1 310 2 280 1 358 2 85 2 282 2 150 3 53 1 12 1 232 1 270 1 233 2 30 1 167 1 70 2 237 2 171 1 342 2 
163 1 139 1 211 1 
163 1 139 1 354 1 
139 3 249 1 211 2 155 1 354 1 307 1 
139 2 249 1 211 1 354 1 16 1 307 1 
139 2 249 2 211 1 354 1 307 1 
320 1 158 1 72 1 254 1 325 1 49 1 349 1 93 1 27 2 282 5 165 1 352 4 56 2 142 1 329 1 245 3 124 1 332 1 100 1 82 1 202 1 127 1 84 2 103 1 12 2 13 1 42 1 210 1 66 3 233 5 43 2 130 1 
320 3 158 2 72 2 254 4 279 1 92 5 325 3 49 1 93 1 27 6 282 9 165 3 352 7 142 3 329 1 245 9 97 5 34 1 124 2 312 1 332 2 200 1 100 1 127 3 84 6 335 1 129 1 12 5 13 6 42 3 210 2 66 8 233 9 106 1 43 6 
320 1 158 1 72 1 254 1 279 1 325 1 93 1 282 3 27 2 352 2 165 1 56 1 142 1 245 4 124 1 332 1 82 1 127 2 84 2 12 3 42 1 210 1 66 3 233 3 130 1 43 2 
320 2 158 1 72 1 254 2 279 1 325 2 93 1 282 4 27 4 352 3 165 2 56 2 142 2 245 7 124 1 332 1 200 1 82 1 127 3 84 4 335 1 12 4 42 2 210 1 66 5 233 4 43 4 106 1 130 1 
256 1 
196 1 228 1 
18 1 
196 1 347 1 11 1 
196 1 271 1 
196 1 347 1 
196 3 347 1 80 2 281 1 11 1 246 1 
269 1 77 1 168 1 175 1 
269 1 77 1 168 1 175 1 
269 1 77 1 168 1 175 1 169 1 
269 1 77 1 168 1 175 1 
269 1 77 1 168 1 175 1 
345 1 348 1 239 1 138 1 163 1 139 2 140 1 164 1 354 1 120 1 244 1 330 2 304 1 59 2 148 1 226 1 172 1 205 1 360 1 268 1 41 1 14 1 211 1 155 1 212 1 108 1 292 1 71 1 88 1 89 1 
345 1 348 1 239 1 187 1 138 1 163 1 139 2 354 1 120 1 244 1 330 3 304 1 59 3 148 1 226 1 205 1 360 1 268 1 229 1 41 1 14 1 211 1 155 1 212 1 108 1 19 1 292 2 71 1 88 1 89 1 
348 1 239 1 187 1 138 1 139 2 163 1 354 1 244 1 330 2 59 2 226 1 205 1 360 1 268 1 41 1 14 1 155 1 211 1 212 1 108 1 19 1 292 2 71 1 88 1 89 1 
148 1 196 1 347 1 348 1 37 1 257 1 137 1 239 2 360 1 314 1 205 1 229 1 41 2 212 1 365 1 251 1 244 1 304 1 330 1 291 1 59 1 71 2 88 2 
345 1 348 1 239 1 138 1 163 1 139 2 140 1 164 1 354 1 120 1 244 1 330 1 304 1 59 1 148 1 205 1 360 1 41 1 14 1 211 1 155 1 212 1 19 1 71 1 88 1 89 1 
2 1 
49 1 93 1 186 2 282 5 191 1 244 1 9 2 10 1 245 2 286 1 247 1 196 1 332 1 100 3 199 1 203 1 204 1 12 2 205 2 13 6 66 2 338 1 212 2 251 2 291 1 215 1 109 2 158 1 72 1 111 4 347 1 348 2 255 1 112 2 300 1 159 1 27 2 28 1 259 1 121 2 305 2 123 2 124 1 357 1 127 2 314 1 360 1 230 1 231 1 233 5 272 1 132 1 316 1 238 1 366 1 
111 2 255 1 112 1 300 1 159 1 282 3 26 1 191 1 10 1 286 1 247 1 199 1 100 1 13 2 231 1 338 1 233 3 272 1 132 1 238 1 366 1 215 1 
111 3 255 1 93 1 300 1 159 1 282 3 26 1 191 1 10 1 286 1 247 1 123 1 199 1 100 1 12 1 13 1 231 1 338 1 233 3 272 1 132 1 238 1 366 1 215 1 
111 3 255 1 93 1 112 1 186 1 300 1 159 1 26 1 282 3 191 1 10 1 286 1 247 1 123 1 100 1 199 1 12 1 13 2 231 1 338 1 233 3 272 1 132 1 238 1 366 1 215 1 
158 1 217 1 111 6 49 1 75 1 93 5 255 1 112 4 186 4 300 1 159 1 25 1 27 1 26 1 282 5 259 1 191 1 121 2 9 2 305 2 10 1 286 1 247 1 123 4 124 1 332 1 199 1 100 3 127 2 204 1 12 5 13 7 231 1 66 1 15 1 338 1 233 5 272 1 178 1 132 1 238 1 366 1 215 1 109 2 
49 1 93 1 186 2 282 4 191 1 10 1 9 2 245 2 247 1 286 1 332 1 199 1 100 2 203 1 204 1 12 2 13 4 338 1 66 1 215 1 109 2 158 1 111 4 255 1 112 2 159 1 300 1 27 1 259 1 121 2 305 2 123 2 124 1 127 2 231 1 233 4 272 1 132 1 238 1 366 1 
158 1 217 1 111 4 49 1 93 1 255 1 112 2 186 2 300 1 159 1 27 1 282 4 259 1 191 1 121 2 9 2 305 2 10 1 286 1 247 1 123 2 124 1 332 1 100 2 199 1 127 2 204 1 12 1 13 4 231 1 66 1 338 1 15 1 233 4 272 1 178 1 132 1 238 1 366 1 215 1 109 2 
158 1 217 1 111 4 49 1 93 1 255 1 112 2 186 2 300 1 159 1 27 1 282 4 259 1 191 1 121 2 9 2 305 2 10 1 286 1 247 1 123 2 124 1 332 1 100 2 199 1 127 2 204 1 12 1 13 4 231 1 66 1 338 1 15 1 233 4 272 1 178 1 132 1 238 1 366 1 215 1 109 2 
158 1 343 1 217 1 91 1 111 4 49 1 93 1 255 1 112 2 186 2 300 1 159 1 27 1 282 4 259 1 191 1 305 2 10 1 245 2 286 1 247 1 123 2 124 1 332 1 100 2 199 1 12 1 13 4 209 2 231 1 66 1 338 1 233 4 68 1 272 1 132 1 238 1 182 2 366 1 215 1 109 2 
158 1 217 1 111 5 49 1 75 1 93 1 255 1 112 3 186 3 300 1 159 1 27 1 282 4 259 1 191 1 121 2 9 2 305 2 10 1 286 1 247 1 123 3 124 1 332 1 100 2 199 1 127 2 204 1 12 1 13 5 231 1 66 1 338 1 15 1 233 4 272 1 178 1 132 1 238 1 366 1 215 1 109 2 
158 1 217 1 111 5 49 1 75 1 93 1 255 1 112 3 186 3 300 1 159 1 27 1 282 4 259 1 191 1 121 2 9 2 305 2 10 1 286 1 247 1 123 3 124 1 332 1 100 2 199 1 127 2 204 1 12 1 13 5 231 1 66 1 338 1 15 1 233 4 272 1 178 1 132 1 238 1 366 1 215 1 109 2 
91 1 49 1 93 1 186 2 282 4 191 1 10 1 245 2 247 1 286 1 332 1 199 1 100 2 203 1 12 1 13 4 209 2 338 1 66 1 215 1 109 2 158 1 111 4 255 1 112 2 159 1 300 1 27 1 259 1 305 2 123 2 124 1 231 1 233 4 272 1 132 1 238 1 366 1 182 2 
361 1 287 1 134 1 309 1 63 1 256 1 44 1 102 1 47 1 
134 1 287 1 263 1 309 1 22 1 74 1 63 1 344 1 50 1 77 1 102 1 189 1 192 1 315 1 44 1 213 1 47 1 
287 1 134 1 22 1 309 1 63 1 77 1 4 1 333 1 102 1 189 1 7 1 54 1 231 1 67 1 362 1 315 1 44 1 10 1 144 1 261 1 366 1 47 1 
134 2 22 1 218 1 347 2 348 1 4 1 300 1 189 1 221 1 7 1 54 1 328 1 224 1 244 1 32 1 10 2 247 1 287 2 196 2 309 2 63 2 333 2 11 2 290 1 102 2 360 1 205 1 104 1 231 2 362 1 212 1 315 1 251 1 44 2 132 1 181 1 45 1 366 2 47 2 
134 1 287 1 309 1 63 1 348 1 77 1 248 1 102 1 205 1 105 1 212 1 251 1 44 1 144 1 47 1 
134 1 287 1 309 1 63 1 325 1 77 1 333 1 258 1 102 1 190 1 165 1 231 1 362 1 315 1 44 1 142 1 10 1 33 1 366 1 47 1 
361 1 287 1 134 1 165 1 223 1 309 1 63 1 325 1 77 1 44 1 102 1 47 1 
320 1 134 1 287 1 309 1 22 2 74 1 63 1 219 1 102 1 189 2 361 1 284 1 42 1 44 1 213 1 276 1 262 1 47 1 
361 1 287 1 134 1 165 1 309 1 63 1 325 1 77 1 44 1 142 1 102 1 47 1 
287 1 134 1 165 1 223 1 309 1 105 1 63 1 325 1 77 1 44 1 102 1 47 1 
320 1 134 1 287 1 309 1 22 2 74 1 63 1 219 1 102 1 189 2 284 1 105 1 42 1 44 1 213 1 276 1 262 1 47 1 
287 1 134 1 165 1 309 1 105 1 63 1 325 1 77 1 44 1 142 1 102 1 47 1 
287 1 134 1 165 1 309 1 63 1 325 1 77 1 44 1 142 1 102 1 47 1 
134 1 22 1 347 2 348 1 77 1 300 1 189 1 54 1 224 1 244 1 32 1 10 1 144 1 247 1 287 1 196 2 309 1 63 1 266 1 333 1 11 2 290 1 102 1 360 1 205 1 231 1 212 1 251 1 44 1 132 1 45 1 181 1 366 1 47 1 
319 1 134 1 22 1 347 2 348 1 77 1 300 1 161 1 189 1 116 1 54 1 244 1 10 1 144 1 247 1 287 1 196 2 309 1 63 1 266 1 333 1 11 2 290 1 102 1 360 1 205 1 231 1 212 1 251 1 44 1 132 1 181 1 366 1 47 1 
287 1 134 1 165 1 309 1 63 1 325 1 315 1 77 1 44 1 142 1 102 1 47 1 
134 1 325 1 347 2 348 1 77 1 300 1 165 1 224 1 142 1 244 1 32 1 10 1 247 1 287 1 196 2 309 1 63 1 172 1 333 1 11 2 290 1 102 1 360 1 205 1 104 1 231 1 212 1 44 1 132 1 45 1 181 1 366 1 47 1 
134 1 287 1 309 1 63 1 325 1 77 1 333 1 102 1 190 1 165 1 231 1 362 1 118 1 315 1 44 1 142 1 10 1 33 1 366 1 47 1 
134 1 287 1 135 1 22 1 63 1 313 1 77 1 64 1 189 1 241 1 44 1 306 1 156 1 47 1 
134 1 287 1 135 1 22 1 63 1 313 1 77 1 64 1 189 1 241 1 44 1 306 1 156 1 47 1 
134 1 287 1 135 1 22 1 63 1 313 1 77 1 64 1 189 1 241 1 44 1 306 1 156 1 47 1 
134 1 287 1 135 1 22 1 63 1 313 1 77 1 64 1 189 1 241 1 44 1 306 1 156 1 47 1 
134 1 287 1 135 1 22 1 63 1 313 1 77 1 64 1 189 1 241 1 44 1 306 1 156 1 47 1 
311 1 310 1 232 1 358 1 85 1 237 1 70 1 86 1 171 1 342 1 
117 1 17 1 
184 1 310 1 358 1 8 1 85 1 252 1 237 1 70 1 342 1 
327 1 60 1 
308 1 119 1 359 1 
110 1 311 1 310 1 280 1 358 1 85 1 282 1 150 2 53 1 12 1 232 1 233 1 30 1 167 1 70 1 237 1 171 1 342 1 
110 1 311 1 310 1 280 1 358 1 85 1 282 1 150 2 53 1 12 1 232 1 233 1 30 1 167 1 70 1 237 1 171 1 342 1 
110 1 311 1 310 1 280 1 358 1 85 1 282 1 150 2 53 1 12 1 232 1 233 1 30 1 167 1 70 1 237 1 171 1 342 1 
119 1 327 1 60 1 
119 1 327 1 60 1 
308 1 359 1 
308 1 119 1 359 1 
296 1 20 1 
110 1 296 1 254 1 48 1 282 1 53 1 117 1 352 1 10 2 310 1 358 1 266 1 85 1 202 1 333 2 150 1 103 1 231 2 233 1 362 2 17 1 179 1 237 1 70 1 366 2 342 1 20 1 
287 1 134 1 35 1 309 1 63 1 125 1 77 1 248 1 102 1 231 2 315 1 44 1 275 1 10 2 144 1 366 2 47 1 318 1 
348 2 172 1 201 1 239 1 360 1 205 2 138 1 163 1 139 2 211 1 155 1 354 1 212 2 120 1 244 1 19 1 253 1 195 1 89 1 
348 1 201 1 239 1 205 1 138 1 360 1 163 1 139 2 208 1 211 1 155 1 354 1 212 1 120 1 244 1 19 1 89 1 
196 1 347 1 348 1 37 1 239 1 51 1 360 1 205 1 314 1 212 1 251 1 244 1 291 1 195 1 
348 1 201 1 239 1 205 1 138 1 360 1 163 1 139 2 211 1 155 1 354 1 212 1 120 1 244 1 19 1 253 1 195 1 89 1 
143 1 
256 1 
158 1 49 1 93 1 27 1 282 1 121 1 9 1 245 1 124 1 332 1 100 1 127 1 204 1 12 2 13 1 66 1 233 1 
158 2 0 1 72 1 136 1 49 2 347 1 348 1 159 1 281 1 282 2 194 1 31 1 80 1 244 2 356 1 124 2 196 4 332 2 100 1 11 1 101 1 228 2 205 1 360 1 13 2 66 1 233 2 212 1 251 1 364 1 
295 2 158 2 320 2 72 1 90 1 277 1 49 2 325 2 50 1 93 2 282 1 27 5 28 1 222 1 165 2 142 2 245 6 124 2 263 1 36 1 332 2 100 1 84 5 127 3 39 1 12 5 13 1 153 1 42 2 66 8 233 1 234 1 43 5 341 1 294 1 
295 2 158 1 320 1 49 1 325 2 299 1 282 1 27 2 115 1 141 1 58 1 10 1 33 1 247 1 98 1 61 1 124 1 332 1 265 1 333 1 231 1 66 2 233 1 362 1 178 1 46 1 366 1 294 1 
158 1 124 1 332 1 49 1 93 1 27 1 12 1 66 1 69 1 216 1 
295 2 320 2 325 2 84 5 127 5 27 5 5 1 12 5 165 2 42 2 66 5 43 5 142 2 245 10 294 1 
13 1 233 1 93 1 100 1 282 1 12 1 
158 2 72 2 279 1 347 1 49 1 348 4 301 1 27 2 282 3 28 2 244 1 145 1 196 1 124 2 332 2 100 2 288 2 337 1 360 1 205 4 314 1 230 1 13 4 66 2 233 3 212 4 251 2 291 1 316 1 
134 1 22 1 347 2 348 1 302 1 300 1 189 1 54 1 224 1 244 1 10 3 32 1 33 2 61 1 247 1 287 1 309 1 196 2 63 1 266 1 333 3 11 2 102 1 290 1 205 1 360 1 231 3 212 1 362 2 251 1 44 1 132 1 181 1 45 1 366 3 47 1 
158 1 72 1 124 1 332 1 49 1 93 2 84 2 127 2 175 1 27 2 28 1 12 4 66 1 43 2 245 4 
107 1 85 1 342 1 
81 1 232 1 85 1 342 1 20 1 
107 1 85 1 342 1 
107 1 85 1 342 1 
85 1 214 1 342 1 
85 1 214 1 342 1 
85 1 214 1 342 1 
85 1 342 1 
310 1 237 1 
134 2 287 2 63 2 326 1 265 1 128 1 151 1 44 2 276 1 46 1 170 1 262 1 47 2 
256 1 
287 1 134 1 165 1 63 1 87 1 325 1 77 1 44 1 142 1 47 1 
263 1 22 1 36 1 50 1 77 1 189 1 
263 1 22 1 192 1 50 1 77 1 189 1 
22 1 50 1 189 1 
263 1 77 1 
165 1 22 1 325 1 77 1 142 1 189 1 5 1 
134 1 287 1 135 1 22 1 263 1 36 1 63 1 50 1 77 1 189 1 153 1 44 1 47 1 
325 1 77 1 299 1 
134 1 287 1 22 1 63 1 326 1 265 1 128 1 151 1 267 1 189 1 44 1 276 1 46 1 170 1 262 1 47 1 
325 1 265 1 77 1 299 1 58 1 276 1 46 1 262 1 
287 1 134 1 165 1 135 1 63 1 325 1 77 1 44 1 47 1 
287 1 134 1 165 1 135 1 63 1 325 1 77 1 44 1 142 1 47 1 
134 2 287 2 135 1 63 2 326 1 265 1 339 1 44 2 276 1 46 1 47 2 262 1 
134 3 287 3 263 1 135 1 22 1 36 1 63 3 50 1 77 1 189 1 206 1 339 1 87 1 44 3 47 3 
134 1 287 1 135 1 22 1 263 1 36 1 63 1 50 1 77 1 189 1 153 1 44 1 47 1 
134 2 287 2 263 1 135 1 22 1 36 1 63 2 50 1 77 1 189 1 153 1 87 1 44 2 47 2 
134 1 287 1 135 1 22 1 263 1 36 1 63 1 50 1 77 1 189 1 153 1 44 1 47 1 
134 1 287 1 135 1 22 1 263 1 36 1 63 1 50 1 77 1 189 1 153 1 44 1 47 1 
134 1 287 1 135 1 22 1 263 1 36 1 63 1 50 1 77 1 189 1 153 1 44 1 47 1 
134 1 287 1 135 1 22 1 263 1 36 1 63 1 50 1 77 1 189 1 153 1 44 1 47 1 
134 2 287 2 263 1 135 1 22 1 36 1 63 2 50 1 77 1 189 1 153 1 87 1 44 2 47 2 
134 2 287 2 263 1 135 1 22 1 36 1 63 2 50 1 77 1 189 1 153 1 339 1 44 2 47 2 
326 1 265 1 128 1 276 1 46 1 170 1 262 1 
134 2 287 2 263 1 135 1 22 1 36 1 63 2 50 1 77 1 189 1 153 1 339 1 44 2 47 2 
231 1 278 1 272 1 266 1 10 1 336 1 366 1 
21 1 23 1 278 1 266 1 336 1 6 1 231 1 272 1 177 1 236 1 10 1 366 1 
348 1 212 1 256 1 251 1 205 1 
247 1 196 2 347 2 348 1 266 1 333 2 300 1 11 2 290 1 205 1 360 1 7 1 231 2 362 1 212 1 251 1 244 1 132 1 10 2 181 1 45 1 366 2 
347 1 348 1 7 1 79 1 244 1 10 1 247 1 196 1 288 1 266 1 333 1 11 1 290 1 360 1 205 1 231 2 212 1 362 1 45 1 366 2 
347 1 348 1 161 1 7 1 79 1 244 1 10 1 247 1 196 1 288 1 266 1 333 1 11 1 290 1 360 1 205 1 231 2 212 1 362 1 366 2 
347 1 348 3 93 1 159 1 282 2 80 1 244 1 196 4 288 1 334 1 227 1 11 1 228 1 360 1 205 3 12 1 13 1 271 1 233 2 363 1 212 3 251 1 181 1 
196 4 347 1 93 1 348 3 288 1 159 1 282 2 11 1 228 1 12 1 205 3 360 1 13 1 271 1 233 2 363 1 212 3 251 1 31 1 244 1 80 1 181 1 
78 1 348 1 212 1 244 1 360 1 205 1 
321 1 196 3 346 1 347 2 348 7 172 1 126 1 281 1 289 1 11 1 205 7 360 2 78 1 207 1 65 1 260 1 212 6 57 1 251 2 244 3 19 1 
134 2 325 1 347 2 348 1 77 1 299 1 300 1 7 1 328 1 224 1 244 1 10 2 32 1 170 1 262 1 247 1 287 2 196 2 309 2 63 2 265 1 172 1 128 1 333 2 11 2 290 1 102 2 360 1 205 1 104 1 231 2 362 1 212 1 315 1 44 2 275 1 132 1 276 1 46 1 181 1 45 1 366 2 47 2 
158 2 49 2 93 1 348 1 159 1 27 1 282 3 352 1 31 1 80 1 356 1 145 1 124 2 196 2 332 2 100 1 101 1 228 1 12 1 205 1 13 2 66 1 233 3 212 1 251 1 364 1 69 1 216 1 
0 1 196 2 347 1 348 2 172 1 281 1 11 1 205 2 360 1 78 1 212 2 80 1 244 2 
196 1 347 1 348 4 172 1 205 4 314 1 360 1 340 1 363 1 212 4 251 1 244 1 291 1 
99 1 196 1 297 1 347 1 348 2 288 1 289 1 11 1 205 2 360 1 212 2 57 1 244 2 293 1 
163 1 139 1 354 1 348 1 212 1 251 1 244 1 89 1 360 1 205 1 
207 1 348 2 212 2 173 1 172 1 19 1 205 2 
196 3 346 1 347 2 348 5 288 1 172 1 314 1 205 5 360 2 65 1 207 1 340 1 212 4 251 1 244 2 291 1 
196 3 346 1 347 2 348 5 288 1 172 1 83 1 314 1 205 5 360 2 207 1 340 1 212 4 251 1 244 2 291 1 
247 1 196 2 347 2 348 1 266 1 333 2 300 1 11 2 290 1 161 1 205 1 360 1 7 1 231 2 362 1 212 1 251 1 244 1 132 1 10 2 181 1 366 2 
321 1 196 1 347 1 348 1 288 1 281 1 289 1 11 1 205 1 360 1 212 1 57 1 244 2 
285 1 324 1 266 1 235 1 331 1 
247 1 147 1 73 1 322 1 185 1 324 2 93 1 266 1 159 1 300 1 282 2 12 1 352 1 285 2 233 2 132 1 235 2 215 1 331 1 
35 1 324 1 125 1 231 1 235 1 10 1 366 1 331 1 318 1 
147 1 73 1 331 1 
256 1 
268 1 148 1 226 1 108 1 330 1 304 1 59 1 
330 1 71 1 88 1 
268 1 148 1 140 1 154 1 226 1 108 1 52 1 330 3 304 1 113 1 59 3 29 2 
268 1 148 1 226 1 353 1 108 1 330 2 304 1 292 1 59 2 
163 1 139 1 268 1 148 1 140 1 176 1 211 1 350 1 330 1 304 1 59 1 
268 1 148 1 140 1 108 1 330 1 304 1 59 1 
148 1 140 1 226 1 108 2 330 1 304 1 59 1 
148 2 1 1 268 1 140 1 55 1 95 1 108 1 304 2 330 2 59 2 
148 1 226 1 350 1 283 1 268 2 140 1 242 1 108 1 304 1 330 3 292 2 59 3 157 1 
148 1 226 1 268 1 139 2 163 1 140 1 155 1 211 1 354 1 273 1 108 1 304 1 330 2 292 1 59 2 
148 2 198 1 226 1 350 1 283 1 268 2 140 1 353 1 108 1 304 2 330 4 292 2 59 4 
268 1 148 1 140 1 226 1 108 1 330 1 304 1 59 1 
148 1 226 2 350 1 174 1 52 1 113 1 29 1 283 1 268 3 108 2 330 4 304 1 292 2 59 4 
268 1 148 1 140 1 323 1 197 1 226 1 149 1 108 1 330 2 304 1 292 1 59 2 
268 1 148 1 140 1 226 1 108 1 52 2 180 1 330 3 304 1 113 1 59 3 29 2 
268 2 193 1 76 1 355 2 
148 1 140 1 351 1 330 1 304 1 59 1 
268 1 148 1 140 1 226 1 108 1 330 2 304 1 292 1 59 2 157 1 
243 1 
268 1 148 1 140 1 226 1 108 1 330 1 304 1 59 1 
148 1 226 1 29 1 268 1 140 1 108 1 304 1 330 3 292 1 59 3 157 1 
268 1 283 1 350 1 174 1 
268 1 108 1 

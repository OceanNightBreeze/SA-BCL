#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 271 216 203 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 271 216 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 271 216 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 358 349 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 85 245 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 85 245 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 49 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 3 308 1 177 1 118 1 37 3 195 1 160 2 66 2 12 2 136 1 294 1 222 1 223 1 
257 1 37 1 321 1 160 1 12 1 222 1 
257 1 37 1 321 1 160 1 12 1 222 1 
257 1 37 1 321 1 160 1 12 1 222 1 
257 1 37 1 321 1 160 1 12 1 222 1 
321 4 335 1 114 1 253 1 129 1 177 1 55 1 118 1 37 4 160 1 66 3 124 1 12 1 136 3 294 1 222 1 332 2 223 2 
321 2 335 1 213 1 308 1 113 1 114 1 107 1 118 1 37 2 66 1 160 1 39 1 204 1 12 1 294 1 222 1 
335 1 308 1 114 1 55 1 118 1 37 9 195 1 38 1 124 1 12 2 294 1 103 1 223 4 222 1 248 1 321 9 366 1 253 1 129 1 177 3 160 2 66 5 136 7 332 2 
335 1 308 1 114 1 55 1 118 1 37 9 195 1 38 1 124 1 12 2 294 1 103 1 223 4 222 1 248 1 321 9 366 1 253 1 129 1 177 3 160 2 66 5 136 7 332 2 
320 1 225 1 43 1 15 1 188 1 287 1 341 1 45 1 97 1 219 1 300 1 100 1 331 1 88 1 
365 1 
259 1 365 1 105 1 3 1 287 2 331 1 88 2 273 1 
365 1 105 1 80 1 16 2 309 1 3 1 4 1 287 5 228 1 347 1 72 2 339 2 232 1 142 1 331 2 351 1 110 1 88 5 273 2 
365 1 105 1 190 1 
353 1 46 2 365 1 
209 1 320 2 225 2 15 2 43 2 219 2 45 2 341 1 
209 1 52 1 167 1 212 1 336 2 93 1 8 1 217 1 341 1 313 2 219 2 269 1 197 1 78 1 104 1 224 1 320 2 225 2 79 1 15 3 43 2 324 1 348 1 199 2 200 1 130 1 45 3 27 1 299 1 183 1 162 1 235 1 281 1 303 2 109 1 164 2 137 1 
320 1 225 1 15 1 43 1 219 1 188 1 300 1 100 1 45 1 341 1 
365 1 105 1 43 1 15 1 310 1 287 1 5 1 337 1 230 1 45 1 184 1 148 1 300 1 88 1 
320 1 225 1 365 1 105 1 43 1 15 1 310 1 287 2 337 1 45 1 219 1 184 1 148 1 300 1 88 2 
287 1 331 1 88 1 273 1 362 1 
365 1 105 1 3 1 287 2 54 1 331 1 88 2 273 1 
287 1 88 1 273 1 
320 1 209 2 225 1 43 2 15 2 275 1 45 2 194 1 219 1 
304 1 89 1 179 1 
209 1 79 1 15 1 212 1 336 1 93 1 191 1 200 1 45 1 162 1 269 1 281 1 303 1 164 1 78 1 104 1 
209 1 190 1 
320 1 225 1 79 1 43 1 15 2 212 1 93 1 336 1 83 1 200 1 355 1 45 2 162 1 269 1 281 1 303 1 164 1 89 1 104 1 78 1 
209 1 320 3 225 3 219 1 15 3 43 3 83 1 45 3 
320 1 225 1 15 1 43 1 188 1 300 1 45 1 
320 1 225 1 15 1 43 1 219 1 194 1 300 1 275 1 45 1 
209 1 52 1 167 1 212 1 310 1 93 1 287 1 336 1 337 1 217 1 355 1 341 1 313 1 219 2 194 1 148 1 269 1 104 1 197 1 78 1 224 1 320 3 225 3 79 1 15 4 43 3 83 1 199 2 200 1 369 1 130 1 45 4 183 1 184 1 162 1 235 1 300 1 281 1 303 1 109 1 88 1 164 1 137 1 206 1 
209 1 320 1 225 1 15 2 43 2 227 1 5 1 83 1 45 2 
320 3 225 3 365 1 43 3 15 3 310 1 287 1 337 1 83 2 355 1 45 3 96 1 219 1 194 1 184 1 148 1 300 1 88 1 206 1 
320 2 225 2 43 2 15 2 83 1 179 1 45 2 194 1 219 1 89 1 
209 1 79 1 15 1 212 1 336 1 93 1 200 1 45 1 162 1 269 1 281 1 303 1 164 1 78 1 104 1 
209 1 15 1 139 1 212 1 336 1 93 1 73 1 200 1 45 1 162 1 300 1 269 1 281 1 303 1 125 1 164 1 78 1 
167 1 338 1 217 1 266 1 313 3 358 1 244 1 270 1 59 1 14 1 224 1 62 1 128 1 324 2 199 2 130 1 179 2 183 1 235 1 87 1 304 2 137 1 89 2 
320 1 225 1 15 1 43 1 184 1 196 1 300 1 45 1 
209 1 320 4 225 4 219 1 194 1 15 5 43 5 64 1 82 1 227 1 5 1 83 2 355 1 45 5 
320 2 225 2 15 2 43 2 188 1 196 1 300 1 45 2 
108 1 264 1 327 1 
258 1 241 1 108 2 329 1 180 1 327 2 
108 1 327 1 
108 1 327 1 
258 1 241 1 
258 1 241 1 
258 1 241 1 
108 1 314 1 327 1 
108 1 314 1 327 1 
108 1 314 1 327 1 
108 1 340 1 327 1 
108 1 340 1 327 1 
108 1 340 1 327 1 
365 1 287 2 156 2 178 1 255 1 158 1 327 2 278 2 108 2 147 1 65 3 329 1 122 1 48 2 344 1 60 2 68 1 88 2 352 2 
209 1 287 1 264 1 215 1 193 1 99 1 58 1 60 1 320 2 225 2 43 2 15 2 255 1 45 2 327 1 278 1 108 1 65 1 185 1 48 1 260 1 88 1 352 1 207 1 
114 2 124 1 102 2 204 1 127 1 
335 1 114 1 124 1 
335 1 114 1 204 1 
114 3 124 2 102 1 204 1 70 1 127 1 
263 1 114 2 124 1 102 1 204 1 127 1 
353 1 166 2 3 1 287 5 72 1 339 1 312 1 358 1 76 1 58 1 59 1 247 2 273 1 345 1 80 2 16 1 105 1 365 2 128 1 347 1 24 1 349 1 298 1 46 3 159 2 26 1 185 1 260 1 331 4 88 5 110 2 
287 1 77 1 331 1 88 1 
353 2 166 1 287 3 72 1 339 1 358 1 76 1 58 1 59 1 247 2 345 1 105 1 365 3 16 1 80 2 128 1 298 1 349 1 26 1 159 2 46 4 331 2 351 1 88 3 110 2 
353 3 166 2 287 4 6 1 72 1 339 1 358 2 76 1 58 2 59 2 359 1 247 4 345 1 105 1 365 4 16 1 80 4 128 2 298 1 349 2 46 7 159 4 26 1 351 1 331 3 205 1 88 4 110 3 
372 1 
75 1 212 1 190 1 
212 1 18 1 
212 1 269 1 
51 1 75 2 212 3 162 1 269 1 154 1 
212 1 162 1 269 1 
212 1 305 1 
250 1 333 1 324 4 311 1 25 1 56 1 313 7 183 3 182 1 47 1 268 2 50 1 150 1 59 1 270 2 373 1 293 1 14 3 
284 1 333 2 167 1 94 1 311 1 217 1 313 28 56 5 358 3 171 1 268 3 150 2 59 4 270 5 293 1 14 10 363 4 224 1 250 1 128 3 368 1 198 1 322 1 324 16 199 2 25 1 349 3 182 1 183 12 234 1 235 1 50 2 373 2 283 3 
333 1 167 2 311 1 217 2 313 9 56 1 268 2 150 1 59 1 270 3 293 1 14 4 224 2 250 1 19 1 175 1 198 1 324 5 199 4 183 4 182 1 235 2 50 1 373 1 
250 1 333 1 324 4 311 1 25 1 56 1 313 7 183 3 182 1 268 2 50 1 150 1 59 1 270 2 373 1 293 1 14 3 
250 1 333 1 324 4 311 1 25 1 56 1 313 7 183 3 182 1 268 2 50 1 150 1 59 1 270 2 373 1 293 1 14 3 
321 1 152 1 212 1 308 2 106 1 20 1 93 1 336 1 155 1 326 2 36 2 37 1 98 1 160 1 269 1 281 1 303 1 165 2 12 1 164 1 237 1 78 1 295 1 
321 1 335 1 308 1 114 2 93 1 336 1 231 1 33 1 326 1 192 1 36 1 37 1 160 1 40 1 221 1 124 1 281 1 204 1 69 1 303 1 12 1 164 1 165 1 70 1 13 1 222 1 
335 1 308 1 114 2 336 1 93 1 33 1 36 1 192 1 118 1 37 2 40 1 221 1 124 1 12 1 294 1 222 1 321 2 231 1 326 1 66 1 160 1 163 1 281 1 204 1 303 1 69 1 136 1 165 1 164 1 70 1 
335 1 308 1 114 2 336 1 93 1 33 1 36 1 192 1 118 1 37 3 221 1 124 1 12 1 294 1 13 1 321 3 152 1 276 1 231 1 326 1 66 1 160 1 281 1 204 1 303 1 69 1 165 1 164 1 136 2 70 1 
335 1 308 1 114 2 336 1 93 1 33 1 36 1 118 1 37 2 124 1 294 1 13 1 321 2 276 1 231 1 326 1 66 1 281 1 204 1 303 1 69 1 165 1 164 1 136 2 70 1 
289 1 
334 1 92 1 3 3 287 5 336 2 93 1 5 1 337 1 95 2 339 1 290 2 243 1 148 1 101 2 151 2 345 1 251 1 105 1 16 1 15 1 106 1 20 1 347 1 300 1 303 2 110 2 164 2 353 2 212 1 310 1 72 1 116 2 119 1 356 1 315 1 269 1 360 2 272 1 126 1 273 6 78 2 361 4 365 2 80 2 43 1 323 1 230 1 370 2 45 1 46 2 184 1 186 1 281 1 88 5 238 1 
310 1 3 1 287 3 337 1 5 1 356 1 243 1 148 1 360 1 272 1 126 1 361 2 273 2 15 1 43 1 230 1 323 1 45 1 259 1 184 1 300 1 88 3 
310 1 3 1 287 3 337 1 5 1 116 1 356 1 243 1 148 1 272 1 126 1 273 1 361 3 15 1 43 1 105 1 365 1 230 1 323 1 45 1 259 1 184 1 300 1 88 3 
3 1 310 1 287 3 337 1 5 1 116 1 356 1 243 1 148 1 360 1 272 1 126 1 361 3 273 2 15 1 43 1 105 1 365 1 230 1 323 1 370 1 45 1 259 1 184 1 300 1 88 3 
3 1 310 1 287 3 5 1 337 1 216 1 356 1 243 1 148 1 271 1 360 2 272 1 126 1 273 3 361 2 43 1 15 1 230 1 323 1 370 2 45 1 259 1 184 1 203 1 300 1 88 3 
353 2 92 1 3 2 310 1 287 4 5 1 337 1 72 1 95 2 339 1 116 2 290 2 356 1 315 1 243 1 148 1 101 2 360 2 151 2 272 1 126 1 273 4 361 4 251 1 105 1 365 2 80 1 16 1 43 1 15 1 347 1 230 1 323 1 370 2 45 1 46 2 184 1 300 1 110 1 88 4 
43 1 15 1 310 1 287 2 5 1 337 1 323 1 230 1 45 1 356 1 184 1 243 1 148 1 300 1 271 1 272 1 88 2 126 1 361 2 
43 1 15 1 310 1 287 2 5 1 337 1 323 1 230 1 45 1 356 1 184 1 243 1 148 1 300 1 271 1 272 1 88 2 126 1 361 2 
30 1 92 1 3 2 310 1 287 4 337 1 5 1 72 1 95 2 339 1 116 2 143 2 356 1 243 1 148 1 149 1 101 2 360 2 272 1 126 1 273 4 361 4 173 1 42 1 365 1 105 1 80 1 16 1 15 1 43 1 347 1 230 1 323 1 44 2 370 2 45 1 46 2 184 1 300 1 110 1 88 4 
43 1 15 1 310 1 287 2 5 1 337 1 323 1 230 1 370 1 216 1 45 1 116 1 356 1 184 1 243 1 148 1 300 1 271 1 360 1 272 1 88 2 126 1 273 1 361 3 
43 1 15 1 310 1 287 2 5 1 337 1 323 1 230 1 370 1 216 1 45 1 116 1 356 1 184 1 243 1 148 1 300 1 271 1 360 1 272 1 88 2 126 1 273 1 361 3 
92 1 3 2 310 1 287 4 5 1 337 1 72 1 95 2 339 1 116 2 143 2 356 1 315 1 243 1 148 1 101 2 360 2 272 1 126 1 273 4 361 4 42 1 365 1 105 1 80 1 16 1 43 1 15 1 347 1 230 1 323 1 44 2 370 2 45 1 46 2 184 1 300 1 110 1 88 4 
211 1 140 1 167 2 212 3 93 2 336 8 338 1 8 1 217 2 313 2 267 1 170 1 123 1 269 2 13 1 78 2 224 2 320 1 225 1 15 1 43 1 106 1 20 1 83 1 324 1 199 4 45 1 130 2 27 2 183 1 86 1 163 1 235 2 134 1 281 2 303 8 164 7 109 1 137 2 
167 1 307 1 217 1 313 2 219 1 194 1 358 1 41 1 270 1 59 1 14 1 224 1 320 1 225 1 43 1 15 1 128 1 324 1 199 2 179 1 130 1 45 1 349 1 183 1 235 1 304 1 89 1 137 1 
209 2 333 1 167 1 190 1 338 1 217 1 311 1 313 6 268 1 270 2 59 1 293 1 14 2 224 1 250 1 324 3 199 2 179 1 130 1 182 1 183 3 235 1 373 1 304 1 89 1 137 1 
209 1 167 2 307 1 189 1 94 1 8 1 217 2 56 1 313 13 9 1 358 1 59 2 270 1 14 2 363 3 224 2 128 2 368 1 324 8 199 4 130 2 179 4 349 2 183 5 132 1 235 2 280 1 109 1 304 11 137 1 89 11 283 3 
209 1 286 1 167 1 307 1 212 1 93 1 336 1 8 1 191 1 217 1 355 1 291 1 313 2 269 1 104 1 78 1 224 1 320 1 225 1 79 1 15 2 43 1 83 1 324 1 199 2 200 1 179 1 130 1 45 2 279 1 183 1 162 1 235 1 281 1 303 1 164 1 109 1 137 1 
285 2 52 2 333 1 336 3 93 2 8 1 56 4 59 3 293 1 13 1 14 8 104 2 61 1 250 1 15 3 199 6 200 2 349 2 162 2 303 3 109 1 164 3 304 7 209 2 307 1 167 3 212 2 311 1 354 1 217 3 355 1 313 18 358 2 268 1 269 2 318 2 270 4 78 1 224 3 320 1 225 1 79 2 43 1 128 2 83 1 324 10 45 3 130 3 179 7 328 2 182 1 183 8 235 3 49 2 281 2 373 1 282 1 137 3 89 7 
167 1 128 1 324 2 338 1 199 2 217 1 179 1 130 1 56 1 313 2 244 1 235 1 59 1 304 1 14 1 89 1 137 1 224 1 
167 1 338 1 199 2 217 1 179 1 130 1 266 1 313 1 183 1 358 1 235 1 270 1 304 1 14 1 89 1 137 1 224 1 
167 1 338 1 217 1 313 3 56 1 358 1 59 1 270 1 14 2 224 1 128 1 324 2 199 2 130 1 179 2 349 1 183 1 235 1 304 2 137 1 89 2 
167 1 128 1 324 2 199 2 217 1 179 1 130 1 56 1 313 2 170 1 244 1 235 1 59 1 304 1 14 1 89 1 137 1 224 1 
167 1 199 2 217 1 179 1 130 1 266 1 313 1 183 1 170 1 358 1 235 1 270 1 304 1 14 1 89 1 137 1 224 1 
167 1 217 1 313 3 56 1 170 1 358 1 59 1 270 1 14 2 224 1 128 1 324 2 199 2 130 1 179 2 349 1 183 1 235 1 304 2 137 1 89 2 
167 1 128 1 324 2 199 2 217 1 179 2 130 1 349 1 56 1 313 3 183 1 358 1 235 1 270 1 59 1 304 2 14 2 89 2 137 1 224 1 
209 1 52 1 167 1 212 1 93 1 336 1 8 1 217 1 313 2 269 1 104 1 78 1 224 1 79 1 15 1 324 1 199 2 200 1 45 1 130 1 183 1 162 1 235 1 281 1 303 1 164 1 109 1 137 1 
209 1 139 1 167 1 212 1 93 1 336 1 73 1 217 1 313 1 357 1 269 1 125 1 78 1 224 1 15 1 199 2 200 1 45 1 130 1 183 1 162 1 300 1 235 1 281 1 303 1 164 1 109 1 137 1 
167 1 307 1 217 1 313 3 56 1 358 1 59 1 270 1 14 2 224 1 128 1 324 2 199 2 130 1 179 2 349 1 183 1 235 1 304 2 137 1 89 2 
52 1 167 1 212 1 93 1 336 1 217 1 56 1 313 3 358 1 269 1 270 1 59 1 14 2 104 1 224 1 79 1 15 1 128 1 324 2 199 2 200 1 179 2 45 1 130 1 349 1 328 1 183 1 162 1 163 1 235 1 281 1 303 1 304 2 164 1 89 2 137 1 
167 1 307 1 217 1 313 3 219 1 194 1 358 1 59 1 224 1 320 1 225 1 43 1 15 1 128 1 324 2 199 2 130 1 45 1 179 1 349 1 183 1 235 1 304 1 137 1 89 1 90 1 
167 2 1 1 112 1 240 1 94 1 217 2 35 1 74 1 313 16 56 3 358 3 245 1 59 3 270 3 14 6 363 2 224 2 128 3 367 2 175 1 368 1 324 9 199 4 349 3 85 2 183 7 235 2 208 1 283 1 
210 1 167 3 1 2 112 2 94 2 217 3 35 1 56 2 313 24 358 2 245 1 270 1 59 3 14 3 224 3 363 2 319 1 364 1 153 1 128 3 198 2 367 4 175 1 324 14 199 6 349 3 85 1 256 1 183 10 161 1 235 3 208 1 283 2 
333 1 1 2 94 3 240 1 56 4 245 1 59 5 293 1 14 7 250 1 153 1 198 1 199 6 157 1 349 4 256 1 161 1 208 1 167 3 210 1 112 1 217 3 311 1 35 1 313 37 358 4 268 1 270 3 224 3 363 4 319 1 364 1 128 4 368 1 175 1 367 4 324 20 85 1 183 17 182 1 235 3 373 1 283 3 
333 1 1 2 94 3 240 1 56 3 245 1 59 5 293 1 14 7 250 1 153 1 198 2 157 1 199 8 349 4 256 1 161 1 208 1 167 4 210 1 112 1 217 4 311 1 35 1 313 35 358 3 268 1 270 4 224 4 363 4 319 1 364 1 128 4 368 1 175 1 367 4 324 20 85 1 183 15 182 1 235 4 373 1 283 3 
333 1 210 1 167 2 1 1 112 1 94 2 311 1 217 2 35 1 313 38 56 6 358 6 268 1 245 1 59 7 270 6 293 1 14 12 319 1 363 4 224 2 250 1 364 1 153 1 128 6 198 1 367 2 175 1 368 2 324 23 199 4 349 6 85 1 256 1 182 1 183 15 161 1 235 2 280 2 373 1 208 1 283 4 
278 1 108 1 329 1 122 1 48 1 60 1 68 1 218 1 352 1 327 1 
99 1 264 1 
0 1 278 1 108 1 31 1 48 1 57 1 60 1 352 1 327 1 
365 1 287 1 156 1 178 1 255 1 327 1 278 1 108 1 147 1 65 2 329 1 122 1 48 1 344 1 60 1 68 1 88 1 352 1 
365 1 287 1 156 1 178 1 255 1 327 1 278 1 108 1 147 1 65 2 329 1 122 1 48 1 344 1 60 1 68 1 88 1 352 1 
365 1 287 1 156 1 178 1 255 1 327 1 278 1 108 1 147 1 65 2 329 1 122 1 48 1 344 1 60 1 68 1 88 1 352 1 
314 1 28 1 180 1 
314 1 28 1 180 1 
22 1 340 1 
22 1 340 1 180 1 
215 1 207 1 
209 1 287 1 264 1 215 1 193 1 344 1 99 1 58 1 60 1 320 2 225 2 15 2 43 2 156 1 45 2 327 1 278 1 108 1 65 1 185 1 48 1 29 1 260 1 331 1 88 1 352 1 207 1 
314 1 28 1 
22 1 340 1 180 1 
307 1 167 1 212 1 32 1 93 1 336 2 288 1 8 1 217 1 313 2 123 1 269 1 224 1 249 1 296 1 15 2 43 2 324 1 199 2 130 1 45 2 27 2 183 1 233 1 86 1 235 1 281 1 303 2 109 1 164 2 137 1 
212 1 106 1 20 1 21 1 93 1 336 1 98 1 242 1 269 1 281 1 303 1 164 1 165 1 78 1 
335 1 114 2 226 1 21 1 336 1 93 1 33 1 231 1 192 1 124 1 281 1 330 1 204 1 303 1 164 1 165 1 70 1 13 1 
335 1 114 2 226 1 21 1 93 1 336 2 33 1 231 1 192 1 163 1 124 1 281 1 330 1 204 1 303 2 164 2 165 1 70 1 13 1 
335 1 114 2 226 1 336 1 93 1 33 1 231 1 192 1 124 1 246 1 281 1 204 1 303 1 164 1 165 1 70 1 13 1 
343 1 
16 1 80 1 105 1 365 1 4 1 347 1 72 1 339 1 142 1 110 1 
353 5 81 1 80 5 365 5 262 2 128 2 349 2 159 5 46 10 358 2 49 1 59 2 247 5 110 3 
365 1 105 1 3 1 287 1 88 1 273 1 
111 1 334 2 212 1 3 2 93 1 336 4 287 3 72 2 339 2 115 1 292 1 269 1 78 2 273 4 345 2 16 2 80 2 106 1 20 1 347 1 133 2 186 1 281 1 351 1 303 4 164 4 110 2 88 3 238 1 
365 1 105 1 80 1 4 1 190 1 110 1 142 1 
353 1 3 1 287 1 72 1 339 1 290 1 151 1 273 1 251 1 80 1 16 1 365 2 105 1 347 1 46 1 110 1 88 1 
51 1 212 2 214 1 336 1 93 1 72 1 339 1 11 1 269 1 78 1 345 1 16 1 18 1 176 1 347 1 63 1 162 1 49 1 281 2 303 1 164 1 110 2 138 1 
353 3 262 1 3 1 287 1 94 1 7 1 72 2 339 2 358 2 59 2 247 5 273 1 363 1 319 1 16 2 365 4 80 4 364 1 105 1 153 1 128 2 347 2 349 2 256 1 46 6 159 5 161 1 88 1 110 5 283 1 
333 1 262 2 188 1 287 1 72 1 339 1 311 1 341 1 117 1 97 1 219 1 100 1 59 2 293 1 320 1 225 1 81 1 15 1 16 1 80 2 43 1 347 1 45 1 300 1 373 1 88 1 110 2 236 1 
209 1 52 1 167 1 212 1 336 1 93 1 217 1 341 1 313 1 219 2 269 1 78 1 197 1 104 1 224 1 320 2 225 2 79 1 15 3 43 2 199 2 200 1 45 3 130 1 183 1 162 1 235 1 281 1 303 1 109 1 164 1 137 1 
353 2 345 1 334 1 80 2 16 1 105 2 365 4 347 1 72 1 339 1 46 4 159 2 268 1 247 2 110 1 
48 1 229 1 215 1 68 1 352 1 
252 1 48 1 352 1 
252 1 48 1 352 1 
252 1 48 1 352 1 
2 1 48 1 352 1 
2 1 48 1 352 1 
2 1 48 1 352 1 
48 1 352 1 
108 1 327 1 
333 2 167 1 175 1 324 5 199 2 217 1 311 2 56 2 313 10 183 5 235 1 270 3 59 2 373 2 293 1 236 1 14 5 224 1 
167 1 128 1 175 1 324 2 199 2 217 1 313 2 56 1 235 1 59 1 14 1 224 1 
167 1 128 1 175 1 324 2 199 2 217 1 349 1 313 3 56 1 183 1 358 1 235 1 270 1 59 1 14 2 224 1 
333 1 167 3 198 1 175 1 240 1 324 1 199 6 201 1 217 3 313 3 56 1 183 2 235 3 270 1 373 1 14 2 224 3 
333 3 167 5 94 1 240 1 311 2 217 5 313 31 56 5 171 1 358 3 268 1 59 5 270 7 293 2 14 12 363 4 174 1 224 5 250 1 128 3 198 2 175 1 368 1 322 1 324 16 199 10 201 1 349 3 182 1 183 15 234 1 235 5 373 3 283 3 
250 1 333 1 167 2 198 1 324 4 199 4 311 1 217 2 313 8 56 1 183 4 182 1 268 1 235 2 59 1 270 2 373 1 293 1 14 3 224 2 
250 1 333 1 324 3 190 1 311 1 313 6 183 3 182 1 268 1 270 2 59 1 373 1 293 1 14 2 
167 1 128 1 324 2 199 2 217 1 349 1 313 3 56 1 183 1 358 1 235 1 270 1 59 1 14 2 174 1 224 1 
128 1 368 1 94 1 324 3 349 1 313 6 56 1 183 3 358 1 270 1 59 1 14 2 363 2 283 1 
333 2 167 2 311 1 217 2 56 4 313 21 9 1 358 2 268 1 59 3 270 5 293 1 14 9 363 2 224 2 250 1 128 2 368 1 198 2 324 11 199 4 201 1 349 2 182 1 183 10 235 2 280 1 373 2 283 2 
313 1 183 1 363 1 
313 1 324 1 283 1 
167 1 128 1 324 3 199 2 217 1 349 1 313 5 56 1 183 2 358 1 235 1 49 1 59 1 270 2 14 3 224 1 174 1 
167 1 94 1 217 1 313 10 56 1 358 2 59 2 270 1 14 2 363 1 224 1 319 1 364 1 153 1 128 2 175 1 324 6 199 2 349 2 256 1 183 4 161 1 235 1 283 1 
333 1 324 3 311 1 313 6 56 1 183 3 59 1 270 1 373 1 293 1 14 2 
250 1 333 1 167 1 198 1 324 1 199 2 201 1 217 1 56 1 313 3 183 2 182 1 235 1 270 1 373 1 14 2 224 1 
333 1 167 1 94 1 311 1 217 1 313 8 268 1 59 1 270 2 293 1 14 2 363 1 224 1 250 1 153 1 175 1 324 4 199 2 183 4 182 1 235 1 373 1 283 1 
333 1 167 2 94 1 311 1 217 2 313 11 56 1 268 1 270 2 59 2 293 1 14 3 363 2 224 2 174 1 250 1 153 1 128 1 175 1 368 1 324 6 199 4 349 1 182 1 183 5 235 2 373 1 283 1 
167 3 94 1 217 3 56 1 313 11 358 2 59 2 270 1 14 2 174 1 363 1 224 3 319 1 364 1 153 1 128 2 175 1 198 1 324 6 199 6 349 2 256 1 183 5 161 1 235 3 283 1 
167 3 94 1 217 3 313 10 56 1 358 1 59 2 270 1 14 2 174 1 363 1 224 3 319 1 364 1 153 1 128 2 198 1 175 1 324 7 199 6 349 2 256 1 183 3 161 1 235 3 283 1 
333 1 167 1 94 1 311 1 217 1 313 8 268 1 59 1 270 2 293 1 14 2 363 1 224 1 250 1 153 1 175 1 324 4 199 2 183 4 182 1 235 1 373 1 283 1 
167 1 94 1 217 1 313 10 56 1 358 2 59 2 270 1 14 2 363 1 224 1 319 1 364 1 153 1 128 2 175 1 324 6 199 2 349 2 256 1 183 4 161 1 235 1 283 1 
167 4 94 1 217 4 56 1 313 11 358 1 59 2 270 1 14 2 363 1 174 1 224 4 319 1 364 1 153 1 128 2 175 1 198 2 324 7 199 8 349 2 256 1 183 4 161 1 235 4 283 1 
167 4 94 1 240 1 217 4 56 2 313 11 358 1 59 2 270 2 14 4 363 1 224 4 319 1 364 1 153 1 128 2 175 1 198 2 324 7 199 8 349 2 256 1 183 4 161 1 235 4 283 1 
250 2 333 3 324 3 311 1 313 7 56 3 183 4 182 1 270 3 59 1 373 3 293 1 14 6 
167 4 94 1 240 1 217 4 56 1 313 11 358 1 59 2 270 1 14 2 363 1 224 4 319 1 364 1 153 1 128 2 175 1 198 2 324 7 199 8 349 2 256 1 183 4 161 1 235 4 283 1 
209 1 15 1 43 1 227 1 5 1 265 1 45 1 
209 1 43 1 15 1 141 1 239 1 227 1 5 1 265 1 45 1 187 1 220 1 317 1 
212 1 106 1 20 1 336 4 93 1 169 1 146 1 163 1 269 1 281 1 303 4 164 4 78 1 
212 1 53 1 336 2 93 1 34 1 133 1 162 1 67 1 269 1 281 2 282 1 303 2 135 1 164 2 
335 1 114 1 93 1 336 1 281 1 204 1 231 1 303 1 164 1 78 1 
212 1 32 1 336 2 93 1 163 1 86 1 269 1 281 1 303 2 164 2 13 1 
140 1 211 1 212 3 106 1 20 1 336 5 93 2 146 1 133 1 163 1 86 1 269 2 281 2 303 5 164 4 78 1 
211 1 212 3 106 1 20 1 336 5 93 2 202 1 146 1 133 1 163 1 86 1 269 2 281 2 303 5 164 4 78 1 
212 1 106 1 20 1 269 1 93 1 336 1 281 1 190 1 303 1 164 1 78 1 
209 1 320 1 225 1 43 1 15 2 212 1 336 1 93 1 83 1 200 1 45 2 162 1 269 1 281 1 303 1 164 1 78 1 104 1 
209 1 212 3 93 1 336 1 148 1 10 1 269 2 104 1 320 1 225 2 15 2 43 2 83 1 200 1 45 2 133 1 184 1 162 2 300 1 281 1 303 1 164 1 305 1 
209 1 212 3 93 1 336 1 73 1 148 1 10 1 269 2 125 1 320 1 225 2 15 2 43 2 83 1 200 1 45 2 133 1 184 1 162 2 300 2 281 1 303 1 164 1 305 1 
365 1 105 1 212 4 310 1 18 1 287 2 336 3 93 1 169 1 23 1 121 1 75 1 133 1 162 1 10 1 269 1 281 1 303 3 88 2 164 3 78 1 305 1 273 1 
365 1 105 1 212 4 310 1 18 1 287 2 336 3 93 1 169 1 75 1 133 1 162 1 10 1 269 1 281 1 303 3 88 2 164 3 78 1 305 1 172 1 273 1 
93 1 336 1 281 1 134 1 303 1 164 1 
51 1 211 1 140 1 212 3 53 1 336 7 93 2 34 1 267 1 27 1 162 1 86 1 163 1 269 2 134 1 261 1 281 3 303 7 164 6 13 1 78 2 
52 1 285 1 333 1 336 1 93 1 288 1 59 1 293 1 14 2 104 1 250 1 15 2 199 4 200 1 162 1 163 1 303 1 164 1 304 1 209 2 307 1 167 2 212 1 217 2 311 1 313 6 268 1 269 1 270 2 224 2 320 1 225 1 79 1 43 1 83 1 324 3 179 1 45 2 130 2 328 1 182 1 183 3 235 2 281 1 373 1 137 2 89 1 
111 1 333 1 262 2 188 1 214 1 4 1 287 1 336 1 72 1 339 1 311 2 341 1 142 1 97 1 219 1 100 1 59 2 293 1 78 1 320 1 225 1 81 1 15 1 43 1 365 1 105 1 80 4 16 1 347 1 45 1 300 1 373 1 303 1 331 1 110 4 164 1 88 1 236 1 138 1 
51 1 212 2 336 2 93 1 63 1 75 1 162 1 163 1 269 1 134 1 281 2 303 2 164 2 
209 1 212 1 93 1 336 1 73 1 269 1 125 1 78 1 320 1 225 1 15 2 43 1 83 1 200 1 45 2 162 1 300 1 281 1 303 1 164 1 
51 1 212 1 53 1 336 1 93 1 34 1 133 1 162 1 269 1 261 1 281 2 303 1 164 1 
209 1 145 1 301 1 316 1 168 1 
209 1 91 1 365 1 105 1 310 1 168 1 287 2 337 1 325 1 84 1 145 2 184 1 148 1 300 1 316 2 301 2 331 1 88 2 206 1 
249 1 15 1 43 1 296 1 233 1 301 1 316 1 168 1 45 1 
91 1 168 1 325 1 
118 1 37 1 321 1 66 1 160 1 12 1 294 1 222 1 
321 4 113 1 346 1 254 1 177 1 131 1 118 2 37 4 160 1 66 3 136 2 12 1 294 2 223 1 
321 2 366 1 277 1 118 1 37 2 120 1 66 1 160 1 12 1 136 1 294 1 222 1 
321 3 113 2 254 1 131 2 118 1 37 3 66 1 160 1 302 1 12 1 294 1 222 1 
181 1 66 2 17 1 350 2 
37 1 342 1 321 1 160 1 12 1 222 1 
118 1 37 2 321 2 66 1 160 1 136 1 12 1 294 1 103 1 222 1 
71 1 
118 1 37 1 321 1 66 1 160 1 12 1 294 1 222 1 
118 1 66 1 190 1 294 1 
118 1 37 1 321 1 66 1 160 1 12 1 294 1 
321 1 308 1 326 1 
306 1 321 3 113 2 254 1 131 1 118 1 37 3 66 1 160 1 12 1 294 1 222 1 
118 1 37 2 321 2 66 1 160 1 136 1 12 1 294 1 332 1 
321 1 335 1 114 1 55 1 37 1 160 1 66 1 124 1 12 1 222 1 223 1 
37 1 321 1 66 1 160 1 12 1 294 1 222 1 
118 1 37 1 321 1 160 1 12 1 294 2 222 1 
321 2 274 1 297 1 37 2 144 1 66 1 160 2 12 2 294 1 222 1 
321 3 177 1 118 1 37 3 38 1 160 1 66 2 12 1 136 2 294 1 103 1 222 1 223 1 
321 2 335 1 114 2 118 1 37 2 371 1 66 1 160 1 124 1 204 1 12 1 136 1 294 1 70 1 222 1 
118 1 37 4 321 4 66 2 160 2 253 1 177 1 136 2 12 2 294 1 223 1 332 1 222 1 
321 3 113 1 118 1 37 3 160 1 66 1 136 1 12 1 294 1 103 1 222 1 
66 1 346 1 177 1 223 1 
66 1 294 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) (95,134) (95,134) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) (95,134) (95,134) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) (95,134) (95,134) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) (95,134) (95,134) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 224 (74,85,119,298) 62 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (33,83,131,316,323) (149,275) (149,275) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) 161 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 224 51 (108,195) 161 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (12,227) (12,227) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 162 281 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 309 50 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 56 331 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 309 (106,145) 29 329 (198,270) 11 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (12,227) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 180 295 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 309 (317,326) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 309 (106,145) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 309 (106,145) 29 329 (198,270) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 224 (74,85,119,298) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 224 51 250 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 224 51 266 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 224 51 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 1 33 1 134 1 143 1 269 1 229 2 38 1 51 1 341 1 59 1 174 1 160 1 302 2 346 3 30 1 224 1 294 2 108 1 195 1 358 3 
95 1 33 1 134 1 143 1 269 1 229 2 38 1 51 1 341 1 59 1 174 1 302 2 160 1 346 3 30 1 224 1 294 2 108 1 195 1 358 3 
95 1 33 1 134 1 143 1 269 1 229 2 38 1 51 1 341 1 59 1 174 1 302 2 160 1 346 3 30 1 224 1 294 2 108 1 195 1 358 3 
95 1 33 1 134 1 143 1 269 1 229 2 38 1 51 1 341 1 59 1 174 1 302 2 160 1 346 3 30 1 224 1 294 2 108 1 195 1 358 3 
302 1 353 1 346 2 228 1 269 1 119 1 224 1 294 1 62 1 341 1 59 1 358 2 
302 1 33 1 167 1 346 1 143 1 275 1 229 1 269 1 38 1 149 1 294 1 358 1 
302 2 346 2 229 1 269 1 224 1 294 2 51 1 108 1 341 1 59 1 358 2 
298 1 353 1 269 1 229 1 51 1 341 1 59 1 302 2 161 1 346 3 294 2 224 1 108 1 358 3 
298 1 353 1 269 1 229 1 51 1 341 1 59 1 302 2 161 1 346 3 294 2 224 1 108 1 358 3 
19 1 307 1 248 1 
144 1 339 2 248 1 
0 1 40 1 156 2 170 2 118 2 255 2 290 2 43 2 
0 1 156 2 132 1 299 1 2 1 25 1 137 1 159 1 232 1 324 2 212 2 86 1 89 1 118 3 237 1 92 2 164 1 328 1 68 2 196 1 70 1 170 3 71 2 313 1 290 2 172 1 40 1 219 1 271 1 221 1 106 1 255 2 335 1 293 1 43 2 338 1 130 1 
40 1 156 1 91 1 170 1 118 1 255 1 41 1 290 1 150 1 43 1 
156 1 301 1 136 1 213 1 235 1 91 1 118 2 307 1 170 2 14 1 290 1 104 1 248 1 40 1 128 1 41 1 255 1 150 2 152 1 43 2 205 1 
156 2 170 2 290 2 104 1 301 1 248 1 40 1 213 1 235 2 91 1 128 1 118 2 41 1 255 2 307 1 150 2 43 2 152 1 205 2 
8 1 235 1 205 1 242 1 343 1 
235 2 126 1 284 1 307 1 205 2 248 1 242 1 343 1 
235 1 205 1 242 1 
156 1 170 1 290 1 104 1 343 1 40 1 235 1 91 1 118 1 41 1 255 1 150 1 43 1 205 1 
248 1 
235 2 284 1 307 1 238 1 205 2 248 1 242 1 343 1 
99 1 227 1 312 1 258 1 27 1 248 1 231 1 343 2 234 2 235 5 10 2 60 1 284 1 307 1 140 1 12 1 205 5 242 2 296 2 
0 1 19 1 
0 2 156 1 100 1 178 1 170 2 118 2 255 1 290 1 43 2 
190 1 35 1 102 1 
0 1 170 1 2 1 71 1 25 1 172 1 232 1 212 1 274 1 106 1 118 1 237 1 92 1 335 1 328 1 196 1 
156 1 170 2 2 1 71 1 23 1 125 1 25 1 172 1 232 1 212 1 190 1 106 1 118 2 255 1 237 1 335 1 92 1 328 1 43 1 196 1 
0 1 156 3 170 3 118 3 125 1 255 3 290 1 43 3 
156 1 91 1 170 1 118 1 255 1 150 1 43 1 
156 1 100 1 170 1 118 1 178 1 255 1 290 1 150 1 43 1 
0 1 132 1 2 1 232 1 137 1 188 1 324 1 235 1 86 1 237 1 92 1 240 1 328 1 93 1 196 1 290 2 106 1 255 3 335 1 150 2 293 1 152 1 205 1 156 3 299 1 23 1 25 1 301 1 159 1 212 1 213 1 118 4 164 1 68 2 71 1 170 4 70 1 125 1 172 1 40 1 219 1 128 1 178 1 43 3 130 1 
0 1 156 1 170 2 118 2 14 1 255 1 125 1 6 1 43 2 
156 3 170 3 23 1 125 2 290 1 301 1 248 1 213 1 235 1 128 1 178 1 118 3 255 3 150 1 152 1 43 3 348 1 205 1 93 1 
156 2 170 2 125 1 102 1 290 1 190 1 178 1 118 2 255 2 43 2 
0 1 170 1 2 1 71 1 25 1 172 1 232 1 212 1 106 1 118 1 237 1 92 1 335 1 328 1 196 1 
0 1 170 1 2 1 71 1 25 1 211 1 172 1 232 1 212 1 326 1 118 1 237 1 92 1 335 1 328 1 
155 1 299 2 5 1 137 1 159 1 324 4 189 1 190 2 164 1 68 2 350 1 70 1 35 2 313 2 102 2 176 1 292 1 219 1 18 1 199 1 293 1 204 1 278 1 183 1 
142 1 156 1 170 1 118 1 255 1 150 1 301 1 43 1 
0 1 156 4 170 5 14 1 125 2 23 1 290 1 322 1 6 1 118 5 178 1 61 1 255 4 43 5 
142 1 156 2 91 1 170 2 118 2 255 2 150 1 43 2 
304 1 34 1 
304 1 34 1 
192 1 32 1 
192 1 32 1 
304 1 34 1 192 1 32 1 
304 1 34 1 4 1 
304 1 34 1 4 1 
304 1 34 1 4 1 
98 1 304 1 34 1 
304 2 34 2 82 1 192 1 107 1 32 1 
304 1 34 1 3 1 
304 1 34 1 3 1 
304 1 34 1 3 1 
96 3 97 2 48 1 69 2 34 2 81 2 169 1 289 1 49 1 355 2 16 2 248 1 233 1 235 2 251 1 304 2 262 1 107 1 205 2 
153 1 0 1 156 2 81 1 235 1 303 1 304 1 118 2 96 1 349 1 69 1 98 1 34 1 289 1 170 2 355 1 16 1 175 1 17 1 272 1 255 2 129 1 43 2 205 1 
160 1 38 1 174 1 
167 1 38 1 174 1 
160 2 167 1 157 1 141 1 38 3 63 1 
160 1 167 1 157 1 216 1 141 1 38 2 
160 1 167 1 157 2 141 1 38 2 
297 1 155 1 339 3 210 2 342 1 231 1 343 4 234 1 235 5 10 1 284 1 307 1 162 1 286 1 242 1 350 1 57 2 268 1 312 3 217 2 248 2 175 1 144 1 292 1 272 1 60 2 129 1 77 1 205 5 44 1 278 1 296 1 
297 1 155 1 339 3 210 2 52 3 343 5 231 1 8 3 234 2 235 7 55 1 10 2 284 1 140 1 307 1 162 1 120 1 242 4 350 1 312 3 217 2 248 3 175 2 144 1 292 1 60 2 77 1 319 1 205 7 44 1 278 1 296 2 
268 1 312 1 342 1 343 1 234 1 235 2 10 1 77 1 140 1 162 1 205 2 296 1 
281 1 268 1 312 1 342 1 234 1 235 1 10 1 77 1 140 1 162 1 205 1 296 1 
19 1 309 1 
200 1 172 1 
76 1 
335 1 172 1 
237 1 335 1 203 1 50 1 309 1 172 1 
237 1 335 1 172 1 
103 1 172 1 
155 1 267 1 243 1 299 3 209 2 313 4 15 1 324 7 292 1 146 1 199 2 273 1 21 1 148 1 204 3 165 1 166 1 
155 1 267 1 243 1 299 3 209 2 313 4 15 1 324 7 292 1 146 1 199 2 273 1 21 1 148 1 204 3 165 1 166 1 
155 1 267 1 243 1 299 3 168 1 209 2 313 4 15 1 324 7 292 1 146 1 199 2 273 1 21 1 148 1 204 3 165 1 166 1 
297 3 155 4 299 15 135 1 209 3 259 1 260 4 137 1 159 1 324 31 325 1 68 2 165 1 166 2 330 1 311 1 350 3 267 1 243 2 288 1 313 16 15 2 249 3 292 4 219 1 146 5 199 5 273 1 21 1 148 2 357 1 293 1 204 10 278 3 
155 1 64 1 299 4 209 2 137 2 159 2 324 9 68 4 166 1 243 1 288 1 267 1 313 5 58 1 15 1 292 1 219 2 199 3 146 1 273 1 21 1 148 1 293 2 204 4 
229 1 25 1 340 1 115 1 232 1 160 1 212 1 302 1 28 1 346 2 92 1 285 1 94 1 167 1 353 1 71 1 73 1 269 1 38 2 314 1 59 1 174 1 177 1 179 1 318 1 294 1 279 1 63 1 358 2 22 1 
79 1 229 1 25 1 340 1 232 1 160 1 212 1 302 1 28 1 346 3 92 1 285 1 94 1 167 1 353 2 71 1 73 1 38 2 314 1 59 1 174 1 20 1 177 1 202 1 318 1 294 1 279 1 63 1 358 3 22 1 
79 1 229 1 25 1 340 1 232 1 212 1 160 1 28 1 346 2 92 1 94 1 167 1 353 2 71 1 73 1 38 2 314 1 59 1 174 1 177 1 202 1 279 1 63 1 358 2 22 1 
2 1 112 1 25 1 229 2 340 2 232 1 212 1 302 1 9 1 346 1 92 1 94 2 245 1 71 1 314 2 172 1 218 1 20 1 252 1 223 1 335 1 294 1 358 1 
229 1 25 1 340 1 232 1 160 1 212 1 302 1 28 1 346 1 92 1 285 1 94 1 167 1 71 1 269 1 38 2 314 1 174 1 177 1 202 1 179 1 318 1 294 1 63 1 358 1 22 1 
88 1 
2 2 25 1 301 1 136 1 232 1 231 1 138 1 212 2 213 1 234 1 235 3 56 1 10 1 118 1 214 1 191 1 284 1 307 1 92 2 242 2 170 1 71 2 312 1 14 1 124 1 331 1 172 1 248 1 218 1 252 1 128 1 222 1 60 1 77 1 335 1 150 1 180 1 152 1 43 1 295 1 205 3 296 1 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 3 56 1 128 1 118 1 214 1 222 1 191 1 284 1 307 1 238 1 150 1 152 1 43 1 205 3 242 1 
136 1 301 1 231 1 138 1 234 1 213 1 235 2 56 1 10 1 214 1 118 1 191 1 307 1 170 1 14 1 331 1 248 1 128 1 222 1 150 1 43 1 152 1 205 2 296 1 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
170 1 14 1 331 1 301 1 136 1 248 1 138 1 213 1 235 2 56 1 128 1 214 1 222 1 118 1 191 1 307 1 150 1 152 1 43 1 205 2 
136 1 301 1 231 1 138 1 234 1 213 1 235 2 56 1 10 1 214 1 118 1 191 1 307 1 170 1 14 1 331 1 248 1 128 1 222 1 150 1 43 1 152 1 205 2 296 1 
0 2 155 1 299 3 209 1 137 1 159 1 324 6 189 1 190 1 164 1 68 2 166 1 267 1 70 1 35 1 313 3 102 1 15 1 219 1 292 1 19 1 199 2 273 1 21 1 293 1 204 2 
0 1 297 2 155 1 299 6 259 1 260 3 137 2 159 2 324 14 86 1 89 1 190 11 306 1 164 1 31 1 68 4 311 1 350 1 122 1 70 2 35 11 313 8 36 1 102 4 315 1 249 3 219 2 292 2 146 1 199 1 293 2 204 2 278 2 
0 1 156 1 299 1 2 1 23 1 25 1 232 1 159 1 137 1 212 1 324 2 86 1 89 1 118 2 237 1 92 1 347 1 328 1 164 1 68 2 121 1 196 1 71 1 70 1 170 2 125 1 313 1 102 1 172 1 315 1 219 1 147 1 106 1 274 1 255 1 335 1 293 1 43 1 
0 2 2 1 283 2 137 3 232 2 324 20 86 1 89 1 190 7 237 2 92 3 328 2 241 1 196 2 102 7 15 1 198 2 292 3 199 4 146 4 21 1 106 2 255 1 202 1 335 2 293 3 204 8 297 2 155 3 156 1 299 10 209 1 23 1 25 2 159 3 212 3 118 3 164 3 68 6 166 1 350 2 267 1 215 1 71 3 170 3 70 3 35 7 125 1 72 2 313 10 173 1 315 1 172 2 219 3 273 1 43 1 182 2 278 2 130 2 
226 1 156 1 299 1 2 2 113 1 158 1 25 2 115 1 232 2 137 2 159 2 212 7 324 2 189 1 86 1 89 1 117 1 118 1 92 8 164 2 68 4 170 1 71 8 70 2 125 1 313 1 172 3 291 1 218 1 219 2 220 1 252 1 255 1 202 1 335 2 293 2 151 1 43 1 338 2 
297 1 155 1 156 1 299 2 137 1 159 1 324 3 190 1 236 1 118 1 164 1 68 2 350 1 35 1 70 1 170 1 313 1 102 1 290 1 315 1 219 1 292 1 199 1 178 1 255 1 293 1 204 1 43 1 278 1 
35 1 70 1 313 2 102 1 159 1 137 1 324 2 176 1 189 1 219 1 292 1 146 1 190 1 164 1 293 1 204 1 68 2 278 1 
350 1 155 1 299 2 35 1 70 1 102 1 5 1 159 1 137 1 324 2 189 1 219 1 199 1 190 1 164 1 293 1 204 1 68 2 
297 1 155 1 299 2 137 1 159 1 324 4 189 1 190 2 164 1 68 2 350 1 70 1 35 2 313 2 102 2 292 1 219 1 146 1 199 1 293 1 204 2 278 1 
35 1 70 1 313 2 102 1 159 1 137 1 324 2 176 1 219 1 292 1 146 1 190 1 117 1 164 1 293 1 204 1 68 2 278 1 
350 1 155 1 299 2 35 1 70 1 102 1 5 1 159 1 137 1 324 2 219 1 199 1 190 1 117 1 164 1 293 1 204 1 68 2 
297 1 155 1 299 2 137 1 159 1 324 4 190 2 117 1 164 1 68 2 350 1 70 1 35 2 313 2 102 2 292 1 219 1 146 1 199 1 293 1 204 2 278 1 
297 1 155 1 350 1 299 2 35 2 70 1 313 2 102 2 159 1 137 1 324 4 219 1 292 1 199 1 146 1 190 2 164 1 293 1 204 2 68 2 278 1 
0 1 299 1 2 1 25 1 232 1 159 1 137 1 324 2 212 1 86 1 89 1 118 1 237 1 92 1 328 1 164 1 68 2 196 1 71 1 170 1 70 1 313 1 172 1 219 1 106 1 335 1 293 1 130 1 
0 1 299 1 2 1 25 1 211 1 232 1 159 1 137 1 324 2 212 1 326 1 86 1 89 1 118 1 237 1 92 1 328 1 164 1 68 2 71 1 170 1 70 1 313 1 197 1 172 1 219 1 335 1 293 1 
297 1 155 1 299 2 137 1 159 1 324 4 190 2 164 1 68 2 350 1 70 1 35 2 313 2 102 2 315 1 292 1 219 1 146 1 199 1 293 1 204 2 278 1 
297 1 155 1 299 2 25 1 115 1 283 1 232 1 159 1 137 1 324 4 212 1 190 2 118 1 237 1 92 1 328 1 164 1 68 2 196 1 350 1 35 2 71 1 170 1 70 1 313 2 102 2 172 1 292 1 219 1 199 1 146 1 106 1 335 1 293 1 204 2 278 1 130 1 
297 1 155 1 156 1 299 1 137 1 159 1 324 3 190 1 118 1 164 1 68 2 193 1 350 1 70 1 170 1 35 1 313 2 290 1 102 1 315 1 219 1 292 1 146 1 178 1 255 1 293 1 204 1 43 1 278 1 
154 1 297 3 46 1 155 3 78 2 299 10 259 1 24 1 260 2 282 2 116 1 137 2 159 2 324 19 68 4 264 1 311 1 350 3 123 1 246 1 313 9 58 1 249 1 219 2 292 3 199 3 146 3 293 2 204 6 278 3 
154 1 297 3 256 1 155 2 46 2 78 4 1 1 299 12 24 1 259 2 260 2 282 1 261 1 137 3 159 3 324 26 67 1 68 6 264 1 350 2 288 2 123 2 313 14 58 1 249 2 219 3 356 1 292 3 146 2 199 2 201 1 293 3 204 4 278 3 
154 1 297 4 256 1 46 2 155 5 1 1 78 4 299 21 209 1 259 3 24 1 260 4 282 1 261 1 137 3 159 3 324 41 67 1 54 1 68 6 264 1 166 1 311 1 350 4 267 1 288 1 123 1 246 1 313 20 58 1 15 1 249 3 356 1 219 3 292 5 199 4 146 4 273 1 21 1 201 1 293 3 204 8 278 4 
154 1 297 4 256 1 46 2 155 4 1 1 78 4 299 18 209 1 259 3 24 1 260 4 282 1 261 1 137 4 159 4 324 38 67 1 54 1 68 8 264 1 166 1 311 1 350 3 267 1 288 2 123 1 246 1 313 20 58 1 15 1 249 3 356 1 219 4 292 5 199 4 146 3 273 1 21 1 201 1 293 4 204 7 278 4 
154 1 297 7 256 1 46 1 155 8 1 1 78 4 299 25 209 1 259 2 24 1 260 4 282 1 261 1 137 2 159 2 324 52 67 1 68 4 264 1 166 1 311 2 350 7 267 1 288 1 122 2 123 1 313 27 58 1 15 1 249 4 356 1 219 2 292 8 199 7 146 7 273 1 21 1 201 1 293 2 204 14 278 7 
233 1 48 1 304 1 69 1 34 1 81 1 355 1 187 1 16 1 107 1 
153 1 98 1 
304 1 69 1 34 1 81 1 355 1 114 1 16 1 230 1 39 1 
96 2 97 1 48 1 69 1 34 1 81 1 289 1 49 1 355 1 16 1 248 1 233 1 235 1 251 1 304 1 262 1 107 1 205 1 
96 2 97 1 48 1 69 1 34 1 81 1 289 1 49 1 355 1 16 1 248 1 233 1 235 1 251 1 304 1 262 1 107 1 205 1 
96 2 97 1 48 1 69 1 34 1 81 1 289 1 49 1 355 1 16 1 248 1 233 1 235 1 251 1 304 1 262 1 107 1 205 1 
265 1 82 1 4 1 
265 1 82 1 4 1 
3 1 257 1 
82 1 3 1 257 1 
17 1 303 1 
153 1 0 1 156 2 81 1 49 1 53 1 343 1 235 1 303 1 304 1 118 2 96 1 97 1 349 1 69 1 98 1 34 1 170 2 355 1 16 1 175 1 17 1 272 1 255 2 129 1 43 2 205 1 
265 1 4 1 
82 1 3 1 257 1 
226 1 110 1 47 1 299 1 25 1 232 1 159 1 137 1 324 2 212 2 345 1 86 1 89 1 118 2 92 2 164 1 68 2 71 2 70 1 170 2 313 1 172 1 315 1 291 1 219 1 335 1 336 1 293 1 43 2 338 2 45 1 
167 1 71 2 25 1 185 1 38 2 115 1 174 1 232 1 160 1 212 2 28 1 75 1 202 1 92 2 239 1 285 1 63 1 94 1 22 1 
167 1 71 1 25 1 185 1 38 2 171 1 174 1 232 1 160 1 212 1 28 1 202 1 92 1 285 1 63 1 94 1 22 1 
245 1 2 1 71 1 25 1 172 1 232 1 212 1 66 1 218 1 252 1 75 1 335 1 92 1 94 1 
167 1 71 1 25 1 185 1 38 2 174 1 232 1 160 1 212 1 28 1 75 1 202 1 92 1 239 1 285 1 63 1 94 1 22 1 
337 1 
19 1 227 1 312 1 60 1 307 1 12 1 248 1 
225 1 339 1 312 1 248 2 231 1 234 1 144 1 235 1 87 1 327 1 10 1 60 1 284 1 307 1 205 1 242 1 296 1 
2 1 25 2 231 1 232 1 212 1 234 1 10 1 29 1 11 1 237 1 92 1 309 1 242 1 194 1 329 1 71 1 312 1 270 1 172 3 145 1 200 2 77 1 203 1 335 1 296 1 
184 1 297 2 256 1 155 2 1 1 339 6 210 5 259 1 260 1 231 2 67 1 234 2 235 1 10 2 284 1 307 2 263 1 242 1 13 1 350 2 354 2 312 8 124 1 217 5 248 5 249 1 144 3 356 1 292 2 60 5 201 1 77 1 205 1 278 2 296 2 
184 1 155 1 207 1 156 1 231 1 234 1 235 1 10 1 91 1 118 1 166 1 287 1 267 1 170 1 354 2 312 2 290 1 104 1 15 1 40 1 292 2 60 2 41 1 255 1 150 1 43 1 205 1 296 1 
234 1 10 1 227 1 312 1 60 1 307 1 248 1 296 1 231 1 
297 1 350 1 155 1 339 2 312 1 210 1 217 1 248 1 144 1 292 1 60 2 278 1 
235 1 284 1 307 1 205 1 248 1 242 1 
2 2 25 1 7 1 232 1 231 1 212 2 234 2 235 2 10 2 284 1 140 1 92 2 242 2 71 2 312 1 124 1 172 1 218 1 252 1 60 1 77 1 335 1 180 1 295 1 205 2 296 2 
0 1 156 2 132 1 299 1 2 1 25 1 137 1 159 1 232 1 324 1 212 1 86 1 118 3 237 1 92 1 328 1 164 1 68 2 196 1 71 1 170 3 70 1 290 2 172 1 40 1 219 1 106 1 255 2 335 1 293 1 43 2 130 1 
339 4 312 1 209 1 124 1 210 2 217 2 248 4 231 1 144 2 234 1 10 1 60 2 77 1 307 2 296 1 
355 1 16 1 310 1 
355 1 16 1 310 1 
355 1 16 1 310 1 
303 1 48 1 355 1 300 1 16 1 
355 1 16 1 206 1 
355 1 16 1 206 1 
355 1 16 1 206 1 
355 1 16 1 
304 1 34 1 
155 1 267 1 288 1 299 4 209 1 313 4 15 1 159 2 137 2 324 8 292 1 219 2 146 1 199 2 273 1 21 1 293 2 204 3 68 4 166 1 
155 1 267 1 299 3 209 1 313 3 15 1 324 6 292 1 19 1 199 2 273 1 21 1 204 2 166 1 
297 1 155 1 350 1 299 2 313 2 186 1 159 1 137 1 324 4 219 1 292 1 199 1 146 1 293 1 204 2 68 2 278 1 
311 1 297 1 155 1 350 1 299 4 313 3 259 1 260 2 324 7 249 1 292 1 199 1 146 1 204 2 278 1 
297 2 155 3 299 12 209 1 260 2 159 2 137 2 324 23 31 1 68 4 166 2 311 1 350 2 267 1 288 2 122 1 313 11 37 1 15 2 249 2 292 3 219 2 146 4 199 5 273 1 21 1 293 2 204 9 278 2 
324 1 299 1 260 1 
324 1 249 1 313 1 
297 1 350 1 155 1 299 3 313 3 186 1 137 1 159 1 324 6 219 1 292 1 146 1 199 2 293 1 204 3 68 2 182 1 278 1 
297 2 155 2 256 1 1 1 299 6 259 1 260 1 137 1 159 1 324 12 67 1 68 2 350 2 313 6 58 1 249 1 219 1 356 1 292 2 146 1 199 1 201 1 293 1 204 2 278 2 
155 1 267 1 299 3 313 3 15 1 324 6 292 1 199 1 146 1 204 2 166 1 
288 1 299 2 313 1 37 1 15 1 159 1 137 1 324 3 219 1 146 1 199 1 273 1 21 1 293 1 204 2 68 2 166 1 
287 1 155 2 267 1 299 5 313 5 58 1 15 2 137 1 159 1 324 10 219 1 292 2 199 3 146 2 293 1 204 5 68 2 166 2 
313 2 58 1 159 1 137 1 324 2 219 1 292 1 146 1 293 1 204 1 68 2 278 1 
297 1 155 1 350 1 299 2 313 2 58 1 159 1 137 1 324 4 219 1 292 1 199 1 146 1 293 1 204 2 68 2 278 1 
288 1 299 2 246 1 313 1 58 1 37 1 15 1 159 3 137 3 324 3 219 3 199 1 146 1 293 3 204 2 68 6 166 1 
297 3 155 5 299 18 135 1 209 1 259 1 186 1 260 4 137 5 159 5 324 34 325 1 68 10 166 3 330 1 311 1 350 3 267 2 288 2 246 1 313 16 58 1 37 1 15 3 249 3 219 5 292 5 146 5 199 7 273 1 21 1 293 5 204 12 278 3 
155 1 1 1 299 4 209 1 259 1 260 1 137 1 159 1 324 8 68 2 166 1 267 1 313 4 58 1 15 1 249 1 292 1 219 1 199 2 273 1 21 1 293 1 204 2 
297 1 155 1 1 1 299 5 209 1 259 1 186 1 260 2 137 2 159 2 324 11 68 4 166 1 311 1 267 1 313 6 58 1 15 1 249 1 219 2 292 2 199 2 146 1 273 1 21 1 293 2 204 3 278 1 
297 2 155 3 256 1 1 1 299 10 209 1 259 1 186 1 260 1 137 3 159 3 324 19 67 1 68 6 166 1 350 2 267 1 288 1 313 9 58 1 15 1 249 1 219 3 356 1 292 3 146 1 199 3 273 1 21 1 201 1 293 3 204 4 278 2 
297 2 155 2 256 1 1 1 299 7 209 1 259 1 186 1 260 1 137 3 159 3 324 17 67 1 68 6 166 1 350 1 267 1 288 1 313 10 58 1 15 1 249 1 219 3 356 1 292 3 146 2 199 3 273 1 21 1 201 1 293 3 204 5 278 2 
155 1 1 1 299 4 209 1 259 1 260 1 137 1 159 1 324 8 68 2 166 1 267 1 313 4 58 1 15 1 249 1 292 1 219 1 199 2 273 1 21 1 293 1 204 2 
297 2 155 2 256 1 1 1 299 6 259 1 260 1 137 1 159 1 324 12 67 1 68 2 350 2 313 6 58 1 249 1 219 1 356 1 292 2 146 1 199 1 201 1 293 1 204 2 278 2 
297 2 256 1 155 2 1 1 299 8 209 1 259 1 186 1 260 1 137 4 159 4 324 18 67 1 68 8 166 1 350 1 267 1 288 2 313 10 58 1 15 1 249 1 219 4 356 1 292 3 146 2 199 3 273 1 21 1 201 1 293 4 204 5 278 2 
297 3 256 1 155 2 1 1 299 7 259 1 260 1 137 4 159 4 324 16 67 1 68 8 350 2 288 2 246 1 313 9 58 1 249 1 219 4 356 1 292 3 146 3 199 3 201 1 293 4 204 6 278 3 
155 1 267 1 299 4 313 3 15 3 324 7 292 1 199 3 146 3 273 2 21 1 204 6 166 3 
297 2 256 1 155 2 1 1 299 8 209 1 259 1 260 1 137 4 159 4 324 18 67 1 68 8 166 1 350 1 267 1 288 2 246 1 313 10 58 1 15 1 249 1 219 4 356 1 292 3 146 1 199 3 273 1 21 1 201 1 293 4 204 4 278 2 
0 1 170 1 118 1 305 1 14 1 6 1 43 1 
0 1 80 1 351 1 170 1 14 1 6 1 26 1 139 1 334 1 305 1 118 1 43 1 
218 1 212 1 19 1 252 1 71 1 2 1 25 1 335 1 92 1 172 1 232 1 
0 1 156 1 170 2 2 1 71 1 125 1 25 1 172 1 232 1 212 1 106 1 118 2 255 1 237 1 335 1 92 1 328 1 43 1 
0 1 156 2 170 2 71 1 125 1 247 1 25 1 103 1 301 1 172 3 232 1 212 1 128 1 106 1 118 2 255 1 254 1 237 2 335 2 92 1 150 1 328 1 43 2 
0 1 111 1 156 2 170 2 71 2 125 1 247 1 25 1 103 1 301 1 172 3 232 1 212 2 326 1 128 1 118 2 255 1 254 1 237 2 335 2 92 2 150 1 328 1 43 2 
212 1 235 1 317 1 200 1 71 1 254 1 92 1 309 1 172 1 205 1 242 1 
212 1 235 1 145 1 200 1 71 1 254 1 92 1 309 1 172 1 205 1 242 1 
212 1 71 1 113 1 25 1 92 1 232 1 
280 1 226 1 2 2 71 7 113 1 158 1 25 3 115 1 172 3 232 2 212 6 220 1 202 1 237 1 92 7 203 1 335 2 151 1 181 1 338 1 277 1 
0 2 155 1 156 1 299 3 209 1 25 1 115 1 283 1 232 1 159 2 137 2 324 6 212 1 345 1 190 1 118 2 237 1 92 1 328 1 164 2 68 4 166 1 196 1 267 1 35 1 70 2 170 2 71 1 313 3 125 1 102 1 15 1 172 1 315 1 198 1 292 1 219 2 199 2 273 1 21 1 106 1 255 1 335 1 293 2 204 2 43 1 130 1 
71 1 2 1 270 1 172 1 7 1 343 1 231 1 212 1 234 1 235 1 145 1 10 1 29 1 200 1 92 1 309 1 205 1 242 1 329 1 296 1 
71 1 113 1 25 2 172 1 232 1 212 1 237 1 92 1 203 1 335 1 309 1 194 1 
218 1 212 4 111 1 252 1 253 1 71 4 2 1 25 1 335 1 92 4 172 1 115 1 232 1 
280 1 71 2 25 2 105 1 172 1 332 1 232 1 212 2 254 1 237 1 92 2 335 1 241 1 277 1 
212 1 28 1 167 1 71 1 2 1 25 1 92 1 38 1 174 1 232 1 
226 1 71 2 25 1 115 1 172 1 232 1 212 2 202 1 92 2 335 1 45 1 
226 1 2 1 71 5 25 2 115 1 172 3 232 2 218 1 212 4 252 1 220 1 253 1 254 1 92 5 335 2 151 1 
226 1 133 1 2 1 71 5 25 2 115 1 172 3 232 2 218 1 212 4 252 1 253 1 254 1 92 5 335 2 151 1 
0 1 156 1 170 2 2 1 71 1 125 1 25 1 172 1 232 1 212 1 326 1 118 2 255 1 237 1 335 1 92 1 328 1 43 1 
280 1 71 1 25 2 172 1 232 1 212 1 254 1 237 1 92 1 203 1 335 1 181 1 277 1 
344 1 0 1 244 1 163 1 109 1 
320 1 156 1 301 1 343 1 344 1 213 1 235 2 91 1 118 1 307 1 163 1 93 1 244 1 352 1 170 1 290 1 104 1 248 1 40 1 128 1 255 1 41 1 42 1 150 2 43 1 152 1 205 2 109 1 
344 1 110 1 47 1 244 1 170 1 118 1 336 1 43 1 109 1 
320 1 244 1 352 1 
19 1 73 1 279 1 59 1 
302 1 346 1 73 1 294 1 279 1 59 1 358 1 
229 1 314 1 358 1 
33 2 131 1 73 1 269 1 323 1 59 1 316 1 302 1 346 3 294 1 279 1 358 3 
302 1 353 1 346 2 73 1 228 1 294 1 279 1 59 1 358 2 
302 1 346 1 269 1 119 1 224 1 294 1 341 1 59 1 358 1 
302 1 346 1 73 1 269 1 294 1 59 1 358 1 
302 1 346 1 73 2 269 1 294 1 279 1 358 1 
208 1 73 1 269 1 59 1 302 2 90 1 346 2 308 1 294 2 358 2 
302 1 250 1 333 1 353 1 346 2 269 1 224 1 294 1 51 1 341 1 59 1 358 2 
167 1 65 1 353 1 73 1 269 1 38 2 59 1 174 1 302 1 160 1 346 2 294 1 279 1 63 1 358 2 
302 1 266 1 353 1 346 2 228 1 269 1 224 1 294 1 51 1 341 1 59 1 358 2 
302 1 346 1 73 1 269 1 294 1 279 1 59 1 358 1 
302 1 346 2 353 1 224 1 294 1 51 1 341 2 59 1 358 2 
298 1 353 1 73 1 269 1 85 1 59 1 302 1 74 1 346 2 294 1 279 1 358 2 
33 2 131 1 73 1 269 1 83 1 59 1 316 2 302 1 346 3 294 1 279 1 358 3 
321 1 276 2 101 1 59 2 
302 1 346 1 269 1 84 1 294 1 358 1 
302 1 333 1 353 1 346 2 73 1 269 1 294 1 279 1 59 1 358 2 
127 1 
302 1 346 1 73 1 269 1 294 1 279 1 59 1 358 1 
33 1 353 1 73 1 269 1 59 1 302 1 333 1 346 3 294 1 279 1 358 3 
346 1 353 1 224 1 51 1 358 1 59 1 
73 1 59 1 

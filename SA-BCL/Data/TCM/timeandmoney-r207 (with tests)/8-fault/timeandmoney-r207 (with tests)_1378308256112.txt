#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (81,330) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (81,330) (81,330) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (31,101) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (31,101) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (149,157,204,339) (149,157,204,339) (33,212,317) (33,212,317) (33,212,317) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (149,157,204,339) (149,157,204,339) (33,212,317) (33,212,317) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (149,157,204,339) (149,157,204,339) (33,212,317) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (149,157,204,339) (149,157,204,339) (33,212,317) (33,212,317) (33,212,317) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (81,330) (81,330) 135 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (81,330) (81,330) 135 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 21 4 85 1 204 2 308 5 182 1 286 1 240 1 312 2 8 3 339 6 9 9 141 1 186 1 115 1 116 2 118 1 217 2 315 1 14 2 149 9 16 2 374 1 157 2 129 1 200 1 41 1 379 1 
0 1 21 4 85 1 204 2 308 5 182 1 286 1 240 1 312 2 8 3 339 6 9 9 141 1 186 1 115 1 116 2 118 1 217 2 315 1 14 2 149 9 16 2 374 1 157 2 129 1 200 1 41 1 379 1 
0 1 21 5 85 1 204 2 308 6 182 1 286 1 240 1 312 2 8 4 339 7 9 10 141 1 186 1 115 1 116 2 118 1 217 2 315 1 14 2 149 10 16 2 374 1 157 2 129 1 200 1 41 1 379 1 
0 1 21 3 85 1 204 2 308 4 182 1 286 1 240 1 312 2 8 2 339 4 9 7 141 1 186 1 116 2 118 1 217 2 315 1 14 2 149 7 16 1 374 1 157 2 129 1 200 1 41 1 379 1 
0 1 21 2 204 1 14 1 149 4 308 3 16 2 8 1 312 1 374 1 339 3 157 1 9 4 129 1 141 1 186 1 115 1 116 1 
0 1 217 1 315 1 204 1 369 1 180 1 149 2 308 1 312 1 157 1 9 2 141 1 186 1 214 1 116 1 379 1 
0 1 217 1 21 1 204 2 149 3 308 2 240 1 8 1 339 1 157 2 9 3 141 1 186 1 
0 1 21 4 204 2 308 5 182 1 240 1 8 3 338 1 312 1 339 7 9 9 141 1 186 1 213 1 115 1 116 1 217 1 14 1 149 9 16 2 374 1 157 2 129 1 200 1 
0 1 21 4 204 2 308 5 182 1 240 1 8 3 338 1 312 1 339 7 9 9 141 1 186 1 213 1 115 1 116 1 217 1 14 1 149 9 16 2 374 1 157 2 129 1 200 1 
239 1 378 1 155 1 
65 1 150 2 155 1 
44 2 58 2 140 1 299 2 61 2 87 2 90 1 92 2 
233 1 84 1 44 2 234 1 260 1 87 2 207 1 4 1 110 1 90 1 92 3 238 1 181 1 241 2 311 1 183 1 264 1 140 1 30 2 70 1 266 1 119 1 294 1 13 1 350 2 123 1 351 1 38 1 15 2 58 2 103 1 279 2 356 1 299 2 61 3 231 1 202 1 
330 1 
32 1 271 1 87 1 208 1 92 1 153 1 155 1 239 1 229 1 246 1 61 1 71 1 62 1 347 1 
32 1 44 1 87 1 208 2 92 1 153 1 155 1 239 1 58 1 229 1 246 2 299 1 61 1 71 1 62 1 
289 1 246 1 342 1 318 1 208 1 
239 1 289 1 246 2 303 1 304 1 342 1 208 2 155 1 
246 1 342 1 208 1 
330 1 289 1 246 1 208 1 81 1 
155 1 
239 1 289 1 246 2 303 1 342 1 208 2 35 1 155 1 
272 1 349 1 205 1 275 1 303 1 12 2 208 5 321 1 76 1 155 1 192 2 239 1 352 1 68 1 289 2 246 5 256 2 342 2 82 1 
90 1 378 1 
44 1 147 1 87 2 90 2 92 2 184 1 58 1 299 1 61 2 
45 1 99 1 224 1 
233 1 234 1 294 1 207 1 123 1 90 1 92 1 351 1 38 1 15 1 241 1 311 1 59 1 279 1 356 1 61 1 
233 1 294 1 283 1 234 1 99 1 123 1 207 1 87 1 92 2 351 1 38 1 15 1 311 1 241 1 58 1 279 1 356 1 299 1 61 2 357 1 
32 1 283 2 44 1 147 1 87 4 90 1 307 1 92 4 58 4 299 4 61 4 31 1 52 1 357 1 
58 1 299 1 61 1 87 1 92 1 101 1 
44 1 283 1 58 3 299 3 61 3 87 3 90 1 92 3 
58 1 299 1 61 1 87 1 92 1 101 1 
32 1 44 1 184 1 58 1 147 1 299 1 61 1 87 1 92 1 
233 1 84 1 234 1 44 2 283 1 260 1 207 1 87 3 4 1 90 1 208 1 92 4 238 1 311 1 241 1 183 1 140 1 30 1 362 1 246 1 248 1 71 1 266 1 119 1 32 1 294 1 147 1 350 2 123 1 153 1 351 1 38 1 15 1 58 3 103 1 229 1 279 1 356 1 299 3 61 4 231 1 62 1 202 1 357 1 
271 1 283 1 235 1 58 1 299 1 61 2 87 2 90 1 92 2 
32 1 177 1 44 1 283 2 147 1 87 3 208 1 92 3 153 1 155 1 58 3 229 1 246 1 362 1 299 3 71 1 61 3 62 1 357 1 
283 1 44 1 147 1 99 1 87 2 92 2 224 1 58 2 299 2 61 2 
233 1 234 1 294 1 207 1 123 1 90 1 92 1 351 1 38 1 15 1 241 1 311 1 279 1 356 1 61 1 
233 1 148 1 207 1 123 1 319 1 90 1 92 1 351 1 38 1 15 1 241 1 311 1 279 1 356 1 61 1 
84 1 45 2 260 2 109 1 4 1 238 1 94 1 27 1 183 1 264 2 29 1 30 4 292 1 99 2 350 2 172 1 224 2 194 1 323 1 156 1 103 1 20 1 202 1 43 1 
32 1 58 1 170 1 299 1 61 1 87 1 62 1 92 1 
326 1 23 1 
326 1 23 1 
371 1 210 1 
371 1 210 1 
371 1 210 1 
64 1 326 1 23 1 
64 1 326 1 23 1 
252 1 326 1 23 1 
305 1 326 2 23 2 371 1 210 1 259 1 
64 1 326 1 23 1 
326 1 23 1 293 1 
326 1 23 1 293 1 
326 1 23 1 293 1 
107 1 108 1 236 1 137 1 23 1 88 1 87 2 90 1 208 1 92 2 166 1 246 1 344 1 250 1 269 1 73 1 252 1 75 1 277 1 58 2 228 1 299 2 326 1 61 2 
329 1 107 1 236 3 88 2 23 2 163 1 208 2 155 1 337 1 185 1 228 2 78 1 298 1 166 2 246 2 340 2 326 2 344 2 259 1 
312 1 14 1 116 1 
312 1 180 1 116 1 
281 1 79 1 14 2 180 1 116 3 322 1 
295 1 281 1 79 1 14 1 180 1 116 2 
14 1 79 1 281 2 180 1 116 2 
109 1 303 1 137 1 22 1 65 1 26 2 208 5 239 1 27 1 289 4 246 5 50 1 343 1 342 1 346 1 269 1 120 1 12 1 275 3 150 3 75 1 321 2 192 1 155 2 193 1 125 2 126 1 352 1 324 2 156 1 256 1 43 1 
109 3 303 1 22 1 65 3 26 6 208 9 360 1 239 1 27 3 289 7 246 9 265 1 342 6 365 1 268 1 120 2 12 2 275 8 318 5 150 9 75 4 321 6 155 5 192 2 193 2 174 1 126 3 352 1 324 6 156 3 256 2 199 1 82 1 83 5 43 3 
109 1 65 2 208 3 26 2 239 1 27 1 289 2 50 1 246 3 346 1 120 1 12 1 275 3 150 4 75 1 321 2 155 3 192 1 193 1 125 1 126 1 156 1 324 2 256 1 82 1 43 1 
109 2 65 3 26 4 208 4 360 1 239 1 27 2 289 3 246 4 50 1 265 1 346 1 120 1 12 1 275 5 150 7 75 2 321 4 155 4 192 1 193 1 174 1 125 2 126 2 324 4 156 2 256 1 82 1 43 2 
39 1 356 1 378 1 
86 1 356 1 
168 1 
233 1 356 1 38 1 
356 1 220 1 
356 1 38 1 
233 1 152 1 38 1 39 2 356 2 132 1 168 1 
260 3 171 1 358 1 190 1 94 2 27 1 361 1 264 4 156 1 353 1 30 7 130 1 249 1 292 3 328 2 215 1 176 1 
260 3 171 1 358 1 190 1 94 2 27 1 361 1 264 4 156 1 353 1 30 7 130 1 249 1 292 3 328 2 215 1 176 1 
260 3 171 1 358 1 190 1 94 2 27 1 361 1 264 4 156 1 353 1 130 1 30 7 249 1 292 3 95 1 328 2 215 1 176 1 
63 4 84 1 284 1 260 15 358 1 109 3 4 1 334 1 336 1 94 5 183 1 28 1 27 4 361 2 264 16 30 31 249 2 114 3 215 1 292 10 96 1 171 2 350 2 190 5 226 1 126 3 156 4 353 1 130 1 175 1 202 1 328 3 176 2 43 3 
84 2 260 4 358 1 4 2 94 3 27 1 183 2 313 1 264 5 361 1 30 9 51 1 249 1 292 4 96 1 171 1 350 4 190 1 156 1 353 1 130 1 202 2 328 2 176 1 
0 1 217 1 33 1 204 1 368 1 317 1 285 1 149 2 276 1 320 1 15 1 241 1 339 1 157 1 9 1 279 1 212 1 314 1 80 1 
217 1 33 1 204 1 368 1 317 1 149 3 276 1 320 1 67 1 15 1 241 1 339 2 242 1 157 1 9 2 355 1 279 1 314 1 80 1 
217 1 33 1 368 1 149 2 320 1 67 1 15 1 241 1 339 2 242 1 9 1 279 1 314 1 80 1 
204 1 207 1 48 1 311 1 241 1 164 1 9 1 314 2 217 2 368 2 55 1 149 1 154 1 351 1 38 1 222 1 15 1 157 1 279 1 355 1 40 1 356 1 80 2 
0 1 217 1 33 1 204 1 368 1 317 1 149 2 276 1 320 1 15 1 241 1 339 1 242 1 157 1 9 1 279 1 212 1 314 1 80 1 
273 1 
3 1 179 2 87 1 5 1 92 1 93 1 239 1 241 2 243 2 246 5 10 1 342 6 187 2 347 1 12 1 150 2 351 2 153 1 155 2 193 1 192 1 15 2 352 1 256 1 356 1 104 2 61 1 62 1 258 2 106 1 303 3 207 1 24 1 111 2 65 2 208 5 359 1 311 1 164 1 69 4 71 1 169 1 216 1 117 2 32 1 271 1 122 1 275 2 38 1 321 2 278 1 128 1 229 1 40 1 279 2 
32 1 106 1 3 1 271 1 303 1 24 1 87 1 5 1 208 3 35 1 92 1 153 1 93 1 69 2 229 1 246 3 342 2 104 1 71 1 61 1 62 1 347 1 
32 1 106 1 3 1 271 1 303 1 24 1 87 1 5 1 208 3 35 1 92 1 153 1 93 1 155 1 239 1 243 1 69 3 229 1 246 3 342 1 71 1 61 1 62 1 347 1 
106 1 3 1 303 1 87 1 24 1 5 1 208 3 92 1 93 1 239 1 243 1 69 3 246 3 342 2 71 1 187 1 347 1 32 1 271 1 35 1 153 1 155 1 229 1 61 1 104 1 62 1 
3 1 179 2 87 1 5 1 92 1 93 1 239 5 243 4 246 5 291 1 10 1 342 7 187 4 345 1 347 1 12 1 153 1 155 5 192 1 352 1 256 1 104 4 61 1 62 1 258 2 106 1 303 3 24 1 111 2 208 5 65 2 69 6 167 1 71 1 169 1 117 2 32 1 271 1 275 1 35 1 372 1 321 1 229 1 134 1 
106 1 3 1 179 2 303 2 24 1 87 1 111 2 5 1 65 2 208 4 92 1 93 1 239 1 243 2 69 4 246 4 10 1 342 4 187 2 71 1 169 1 117 2 347 1 32 1 271 1 122 1 275 1 12 1 150 2 153 1 321 1 155 2 192 1 352 1 229 1 256 1 104 2 61 1 62 1 258 2 
106 1 3 1 179 2 303 2 87 1 24 1 111 2 5 1 65 2 208 4 92 1 93 1 239 1 243 2 69 4 291 1 246 4 10 1 167 1 342 4 187 2 71 1 345 1 169 1 117 2 347 1 32 1 271 1 275 1 12 1 153 1 321 1 155 1 192 1 352 1 229 1 256 1 104 2 61 1 62 1 258 2 
106 1 3 1 179 2 303 2 87 1 24 1 111 2 5 1 65 2 208 4 92 1 93 1 239 1 243 2 69 4 291 1 246 4 10 1 167 1 342 4 187 2 71 1 345 1 169 1 117 2 347 1 32 1 271 1 275 1 12 1 153 1 321 1 155 1 192 1 352 1 229 1 256 1 104 2 61 1 62 1 258 2 
161 2 106 1 3 1 179 2 303 2 87 1 24 1 111 2 5 1 208 4 92 1 91 1 93 1 239 1 243 2 69 4 291 1 246 4 342 4 187 2 71 1 169 1 144 2 347 1 32 1 271 1 97 1 275 1 12 1 150 2 173 1 153 1 321 1 155 1 192 1 352 1 229 1 256 1 104 2 61 1 62 1 
106 1 3 1 179 2 303 2 87 1 24 1 111 2 5 1 65 2 208 4 92 1 93 1 239 1 243 3 69 5 291 1 246 4 10 1 167 1 342 5 71 1 187 3 345 1 169 1 117 2 347 1 32 1 271 1 275 1 12 1 153 1 321 1 372 1 155 1 192 1 352 1 229 1 256 1 61 1 104 3 62 1 258 2 
106 1 3 1 179 2 303 2 87 1 24 1 111 2 5 1 65 2 208 4 92 1 93 1 239 1 243 3 69 5 291 1 246 4 10 1 167 1 342 5 71 1 187 3 345 1 169 1 117 2 347 1 32 1 271 1 275 1 12 1 153 1 321 1 372 1 155 1 192 1 352 1 229 1 256 1 61 1 104 3 62 1 258 2 
161 2 106 1 3 1 179 2 303 2 24 1 87 1 111 2 5 1 208 4 92 1 93 1 239 1 243 2 69 4 246 4 342 4 187 2 71 1 169 1 144 2 347 1 32 1 271 1 122 1 275 1 12 1 150 2 173 1 153 1 321 1 155 1 192 1 352 1 229 1 256 1 104 2 61 1 62 1 
84 1 45 1 260 3 358 1 4 1 90 2 238 1 94 2 183 1 27 1 361 1 264 3 30 6 292 2 99 1 350 2 224 1 323 1 156 1 103 1 353 1 130 1 202 1 328 1 378 1 176 1 
63 3 84 2 45 11 260 6 109 1 4 2 90 1 238 1 181 1 336 1 94 1 183 2 28 1 27 1 264 8 30 14 114 3 292 2 189 1 119 1 274 1 99 11 296 1 190 1 350 4 224 4 126 2 156 2 103 2 158 1 202 2 203 1 43 2 
233 1 234 1 283 1 84 1 260 1 207 1 87 1 4 1 90 1 92 2 238 1 181 1 311 1 241 1 288 1 183 1 264 1 30 2 270 1 119 1 294 1 296 1 123 1 350 2 351 1 38 1 15 1 224 1 58 1 59 1 103 1 279 1 356 1 299 1 61 2 300 1 202 1 357 1 
233 2 84 3 283 1 234 2 45 7 87 1 4 3 90 2 237 1 92 3 238 3 181 1 94 4 241 3 183 3 242 1 292 8 188 2 294 2 99 7 100 1 296 1 350 6 190 4 351 1 15 3 58 1 156 3 353 1 103 3 299 1 356 2 61 3 357 1 202 3 260 10 358 1 109 2 207 2 306 2 311 2 27 3 361 1 264 10 30 20 266 2 119 1 123 2 34 2 38 2 224 7 126 2 127 2 130 1 279 3 327 1 328 1 176 1 43 2 
283 1 84 2 285 1 260 1 87 1 207 2 4 2 66 1 92 1 238 2 181 1 311 2 241 7 138 1 183 2 242 1 264 1 164 1 30 2 119 1 13 2 350 4 36 1 351 2 38 2 15 8 323 1 58 1 103 2 280 1 279 8 40 1 299 1 356 3 19 1 61 1 282 1 201 1 202 2 
44 1 84 1 45 1 260 2 109 1 87 1 4 1 92 1 238 1 94 1 183 1 27 1 264 1 30 3 292 1 54 1 147 1 99 1 296 1 350 2 224 1 126 1 58 1 156 1 103 1 299 1 61 1 202 1 43 1 
84 1 45 1 99 1 190 1 350 2 4 1 172 1 238 1 224 1 183 1 323 1 264 2 156 1 103 1 30 2 202 1 292 1 43 1 
84 1 45 1 260 2 99 1 109 1 350 2 4 1 238 1 94 1 224 1 183 1 27 1 323 1 29 1 103 1 30 2 202 1 292 1 
84 1 45 2 260 2 109 1 4 1 238 1 94 1 183 1 27 1 264 2 30 4 292 2 99 2 350 2 190 1 224 2 126 1 323 1 156 1 103 1 202 1 43 1 
84 1 45 1 99 1 190 1 350 2 4 1 172 1 238 1 224 1 183 1 264 2 156 1 103 1 30 2 19 1 202 1 292 1 43 1 
84 1 45 1 260 2 99 1 109 1 350 2 4 1 238 1 94 1 224 1 183 1 27 1 29 1 103 1 30 2 19 1 202 1 292 1 
84 1 45 2 260 2 109 1 4 1 238 1 94 1 183 1 27 1 264 2 30 4 292 2 99 2 350 2 190 1 224 2 126 1 156 1 103 1 19 1 202 1 43 1 
84 1 45 2 260 2 109 1 4 1 238 1 94 1 183 1 27 1 264 2 30 4 292 2 99 2 350 2 190 1 224 2 126 1 156 1 103 1 202 1 43 1 
233 1 234 1 84 1 260 1 207 1 4 1 90 1 92 1 238 1 181 1 311 1 241 1 183 1 264 1 30 2 266 1 119 1 294 1 123 1 350 2 351 1 38 1 15 1 103 1 279 1 356 1 61 1 202 1 
233 1 84 1 260 1 207 1 4 1 90 1 92 1 238 1 181 1 311 1 241 1 183 1 264 1 30 2 119 1 148 1 123 1 350 2 319 1 351 1 38 1 15 1 325 1 103 1 279 1 356 1 61 1 202 1 
84 1 45 2 260 2 109 1 4 1 238 1 94 1 183 1 27 1 264 2 30 4 292 2 99 2 296 1 350 2 190 1 224 2 126 1 156 1 103 1 202 1 43 1 
233 1 234 1 84 1 45 2 260 2 285 1 109 1 207 1 4 1 92 1 238 1 94 1 311 1 241 1 27 1 183 1 264 2 30 4 266 1 292 2 188 1 294 1 99 2 190 1 123 1 350 2 38 1 224 2 15 1 126 1 156 1 103 1 279 1 356 1 61 1 202 1 43 1 
44 1 84 1 45 1 260 1 109 1 87 1 4 1 92 1 238 1 27 1 183 1 264 2 165 1 30 3 292 1 147 1 99 1 296 1 190 1 350 2 224 1 126 1 58 1 156 1 103 1 299 1 61 1 202 1 43 1 
63 2 84 2 260 10 47 1 109 3 333 1 4 2 309 1 94 3 336 1 183 2 28 1 27 3 139 1 313 1 264 9 30 19 341 1 114 1 292 6 145 1 56 2 350 4 190 3 373 2 126 3 156 3 202 2 232 1 43 3 
63 2 84 3 260 12 47 1 109 2 162 1 333 1 4 3 309 1 7 1 94 2 336 2 27 2 183 3 263 1 313 1 264 14 30 26 341 2 114 2 142 1 292 4 96 2 56 4 190 2 350 6 373 1 126 3 17 1 156 3 198 1 202 3 232 2 43 3 
84 3 47 1 4 3 333 1 336 3 94 4 7 1 183 3 341 1 142 1 292 8 96 1 145 1 56 4 190 4 350 6 156 5 17 1 353 1 198 1 202 3 105 1 63 4 260 21 109 4 358 1 162 1 309 1 27 5 28 1 263 1 264 20 313 1 361 1 30 41 114 3 373 1 126 4 130 1 232 2 328 1 43 4 176 1 
63 4 84 4 260 18 358 1 47 1 109 3 162 1 333 1 4 4 309 1 7 1 94 4 336 3 263 1 183 4 28 1 27 4 361 1 313 1 264 20 30 38 341 1 114 3 142 1 292 7 145 1 96 2 56 4 350 8 190 3 373 1 126 4 17 1 156 5 353 1 130 1 198 1 105 1 202 4 328 1 232 2 176 1 43 4 
63 3 84 2 260 20 358 1 109 5 47 1 162 1 333 1 4 2 309 1 7 1 94 5 336 2 27 6 183 2 263 1 28 1 361 1 313 1 264 22 30 42 341 1 114 3 142 1 292 10 96 1 56 4 350 4 190 5 373 1 126 5 17 1 156 6 353 1 130 1 198 1 158 1 202 2 328 1 232 1 176 1 43 5 
185 1 228 1 166 1 326 1 344 1 23 1 88 1 163 1 259 1 225 1 
252 1 277 1 
1 1 228 1 375 1 166 1 326 1 159 1 344 1 23 1 88 1 
64 1 57 1 
305 1 53 1 293 1 
107 1 236 2 88 1 23 1 163 1 208 1 155 1 337 1 185 1 228 1 78 1 298 1 246 1 166 1 340 1 326 1 344 1 259 1 
107 1 236 2 88 1 23 1 163 1 208 1 155 1 337 1 185 1 228 1 78 1 298 1 246 1 166 1 340 1 326 1 344 1 259 1 
107 1 236 2 88 1 23 1 163 1 208 1 155 1 337 1 185 1 228 1 78 1 298 1 246 1 166 1 340 1 326 1 344 1 259 1 
305 1 64 1 57 1 
305 1 64 1 57 1 
53 1 293 1 
305 1 53 1 293 1 
73 1 250 1 
108 1 236 1 137 1 23 1 88 1 87 2 90 1 208 1 92 2 337 1 289 1 340 1 246 1 166 1 344 1 250 1 269 1 73 1 252 1 124 1 75 1 277 1 228 1 58 2 299 2 326 1 61 2 
2 1 84 1 46 1 260 1 207 1 87 2 4 1 92 2 238 1 181 1 311 1 138 1 241 2 183 1 264 1 30 2 119 1 296 1 13 2 350 2 151 1 38 1 15 2 103 1 280 1 279 2 356 1 61 2 377 1 202 1 42 1 
285 1 146 1 276 1 320 1 261 1 15 2 241 2 211 1 242 1 279 2 314 1 
276 1 320 1 335 1 15 1 241 1 211 1 242 1 279 1 314 1 
207 1 351 1 38 1 261 1 221 1 222 1 15 1 311 1 241 1 164 1 279 1 40 1 356 1 314 1 
241 1 211 1 242 1 146 1 279 1 276 1 314 1 320 1 261 1 15 1 
136 1 
239 1 68 1 205 1 275 1 378 1 321 1 155 1 
303 1 65 1 208 1 239 1 246 1 10 1 342 1 117 1 275 1 12 1 150 1 321 1 192 1 155 2 352 1 256 1 258 1 
233 1 86 1 207 1 241 1 311 2 363 1 12 1 275 2 34 1 152 1 351 1 38 1 37 1 15 1 192 1 193 1 352 1 354 1 279 1 256 1 356 2 131 1 
63 1 109 2 303 1 162 1 89 2 208 1 26 5 65 3 6 1 336 1 239 2 263 1 27 2 246 1 342 1 114 1 142 1 275 8 12 2 150 6 255 1 321 5 193 1 192 2 155 5 278 1 352 2 126 2 17 1 324 5 156 2 256 2 198 1 18 1 43 2 
330 1 135 1 275 2 12 1 89 2 208 1 321 1 192 1 27 1 352 1 361 1 156 1 353 1 246 1 256 1 345 1 81 1 176 1 
205 1 12 1 275 1 321 1 192 1 155 1 239 1 352 1 68 1 256 1 
109 2 275 5 34 1 89 2 26 5 150 10 65 5 321 5 6 1 155 5 126 2 27 2 156 2 324 5 43 2 
239 1 246 1 303 1 342 1 208 1 155 1 
303 2 207 1 359 1 208 3 287 1 311 1 241 4 164 1 246 3 342 4 251 1 348 1 253 2 12 2 275 2 351 2 38 1 321 2 192 2 15 4 193 2 352 1 278 2 128 1 256 2 279 4 40 1 356 1 82 1 
233 1 84 1 44 2 234 1 260 1 87 2 207 1 4 1 90 1 92 3 238 1 241 1 311 1 183 1 140 1 30 1 266 1 119 1 294 1 350 2 123 1 351 1 38 1 15 1 58 2 103 1 279 1 299 2 356 1 61 3 231 1 202 1 
12 1 275 1 65 2 150 4 26 2 321 2 192 1 193 1 155 4 239 2 352 1 278 1 324 2 256 1 328 1 
166 1 344 1 133 1 
166 1 344 1 133 1 
60 1 166 1 344 1 163 1 250 1 
166 1 344 1 133 1 
166 1 218 1 344 1 
166 1 218 1 344 1 
166 1 218 1 344 1 
166 1 344 1 
326 1 23 1 
96 1 84 2 260 4 358 1 190 1 350 4 4 2 94 2 27 1 183 2 264 4 361 1 156 1 353 1 30 8 130 1 202 2 328 1 292 3 176 1 
260 3 358 1 94 2 27 1 361 1 264 3 156 1 353 1 130 1 30 6 328 1 292 2 378 1 176 1 
84 1 260 2 109 1 350 2 190 1 4 1 94 1 27 1 183 1 126 1 264 2 156 1 30 4 113 1 202 1 292 2 43 1 
63 1 264 1 260 1 30 2 114 1 336 1 
63 2 135 1 84 1 260 12 109 2 358 1 4 1 94 4 27 5 28 1 183 1 361 2 264 13 30 25 114 2 292 8 189 1 96 1 190 4 350 2 126 2 156 5 353 2 130 1 158 1 202 1 328 1 176 2 43 2 
63 1 260 1 30 1 
264 1 30 1 114 1 
84 1 260 3 109 1 350 2 34 1 190 1 4 1 94 2 183 1 126 1 27 1 264 3 156 1 30 6 113 1 202 1 292 3 43 1 
63 1 84 1 260 6 109 2 162 1 4 1 336 1 94 1 263 1 183 1 27 2 313 1 264 6 30 12 114 1 142 1 292 2 190 1 350 2 126 2 156 2 17 1 198 1 202 1 43 2 
260 3 190 1 94 1 27 1 264 3 361 1 156 1 353 1 30 6 292 2 176 1 
96 1 84 1 260 2 358 1 190 1 350 2 4 1 297 1 94 1 183 1 264 1 361 1 130 1 30 3 202 1 292 2 176 1 
84 1 135 1 260 5 350 2 190 2 4 1 94 3 183 1 27 2 313 1 361 2 264 5 156 2 353 1 30 10 202 1 292 5 176 2 
84 1 350 2 190 1 4 1 183 1 313 1 264 2 156 1 30 2 202 1 292 1 43 1 
84 1 260 2 109 1 350 2 190 1 4 1 94 1 27 1 183 1 126 1 313 1 264 2 156 1 30 4 202 1 292 2 43 1 
96 1 145 1 84 3 260 2 350 6 190 1 4 3 297 1 94 1 183 3 313 1 361 1 264 1 30 3 202 3 292 2 176 1 
63 4 84 5 284 1 260 18 358 1 109 3 4 5 334 1 336 1 94 7 183 5 28 1 27 5 361 3 313 1 264 16 30 34 113 1 114 3 292 12 96 2 145 1 350 10 190 5 297 1 126 3 156 5 353 2 130 1 175 1 202 5 328 1 176 3 43 3 
63 1 84 1 260 4 358 1 4 1 336 1 94 2 27 1 263 1 183 1 313 1 264 4 361 1 30 8 114 1 292 2 350 2 156 1 353 1 130 1 202 1 328 1 176 1 
63 2 84 2 260 5 358 1 4 2 94 2 336 1 27 1 263 1 183 2 28 1 361 1 313 1 264 6 30 11 113 1 114 1 292 3 350 4 190 1 126 1 156 2 353 1 130 1 202 2 328 1 176 1 43 1 
63 1 84 3 260 10 358 1 109 2 162 1 4 3 336 1 94 3 263 1 183 3 27 3 361 1 313 1 264 9 30 19 113 1 114 1 142 1 292 4 96 1 190 1 350 6 126 2 156 3 17 1 353 1 130 1 198 1 202 3 328 1 176 1 43 2 
63 1 84 3 260 7 358 1 109 1 162 1 4 3 336 1 94 3 263 1 183 3 27 2 361 1 313 1 264 10 30 17 113 1 114 1 142 1 292 5 96 1 190 2 350 6 126 2 156 3 17 1 353 1 130 1 198 1 202 3 328 1 176 1 43 2 
63 1 84 1 260 4 358 1 4 1 336 1 94 2 27 1 263 1 183 1 313 1 264 4 361 1 30 8 114 1 292 2 350 2 156 1 353 1 130 1 202 1 328 1 176 1 
63 1 84 1 260 6 109 2 162 1 4 1 336 1 94 1 263 1 183 1 27 2 313 1 264 6 30 12 114 1 142 1 292 2 190 1 350 2 126 2 156 2 17 1 198 1 202 1 43 2 
63 1 84 4 260 8 358 1 109 1 162 1 4 4 336 1 94 3 263 1 183 4 27 2 361 1 313 1 264 10 30 18 113 1 114 1 142 1 292 5 96 2 190 2 350 8 126 2 17 1 156 3 353 1 130 1 198 1 202 4 328 1 176 1 43 2 
63 1 84 4 260 7 109 2 162 1 4 4 336 1 94 3 263 1 183 4 27 2 313 1 264 9 30 16 114 1 142 1 292 6 145 1 96 2 190 3 350 8 126 3 17 1 156 3 198 1 202 4 43 3 
260 4 358 1 190 3 94 3 27 1 361 3 264 3 156 1 353 1 30 7 130 2 292 6 176 3 
63 1 84 4 260 8 358 1 109 1 162 1 4 4 336 1 94 3 263 1 183 4 27 2 361 1 313 1 264 10 30 18 114 1 142 1 292 4 145 1 96 2 190 1 350 8 126 2 17 1 156 3 353 1 130 1 198 1 202 4 328 1 176 1 43 2 
271 1 235 1 102 1 61 1 87 1 90 1 92 1 
271 1 196 1 235 1 102 1 244 1 61 1 87 1 90 1 92 1 219 1 366 1 11 1 
311 1 241 1 164 1 40 1 279 1 356 1 207 1 351 1 38 1 378 1 15 1 
233 1 283 1 294 1 123 1 87 1 207 1 90 1 92 2 351 1 38 1 15 1 311 1 241 1 58 1 279 1 356 1 299 1 61 2 
32 1 233 2 283 1 294 1 367 1 253 1 123 1 87 2 207 1 90 1 92 2 220 1 38 2 15 1 311 1 241 1 58 1 229 1 279 1 356 3 299 2 61 2 62 1 
233 2 283 1 207 1 87 2 90 1 92 2 241 2 311 1 32 1 367 1 253 1 123 1 319 1 220 1 38 2 15 2 197 1 58 1 229 1 279 2 299 2 356 3 61 2 62 1 
233 1 86 1 207 1 25 1 208 2 241 3 311 1 239 1 246 2 342 1 71 1 367 1 253 1 220 1 351 1 38 1 15 3 155 1 195 1 197 1 39 1 279 3 356 4 
233 1 331 1 367 1 86 1 253 1 207 1 208 2 351 1 220 1 38 1 155 1 15 3 239 1 311 1 241 3 197 1 39 1 246 2 279 3 356 4 342 1 71 1 
311 1 241 1 279 1 207 1 66 1 15 1 
233 1 285 1 13 1 207 2 191 1 66 1 36 1 152 1 351 2 38 2 15 7 241 6 311 3 242 1 280 1 279 7 356 3 282 1 201 1 257 1 302 1 
233 1 234 1 84 2 283 1 45 1 285 1 87 1 4 2 90 2 92 2 238 2 94 2 241 1 183 2 292 2 188 1 294 1 99 1 296 1 350 4 15 1 58 1 156 1 103 2 353 1 299 1 356 1 61 2 202 2 260 3 358 1 207 1 306 1 311 1 27 1 361 1 264 3 30 6 266 1 123 1 38 1 224 1 279 1 130 1 328 1 42 1 176 1 
330 1 135 1 205 1 89 2 208 1 239 1 241 1 27 2 68 1 361 1 289 1 246 1 348 1 275 4 12 1 351 1 37 1 321 2 155 1 15 1 192 1 352 1 156 1 353 1 256 1 279 1 81 1 176 1 
233 1 285 1 207 1 66 1 152 1 38 1 15 2 241 2 311 2 39 1 279 2 356 2 131 1 
285 1 207 1 351 1 38 1 49 1 15 4 311 1 241 4 197 1 164 1 279 4 40 1 356 1 
233 1 316 1 253 1 207 1 191 1 112 1 38 1 15 2 241 2 311 2 279 2 356 1 327 1 257 1 
311 1 241 1 312 1 279 1 180 1 207 1 72 1 351 1 116 1 15 1 
285 1 207 1 38 1 15 2 241 2 311 1 242 1 279 2 280 1 356 1 377 1 
285 1 253 1 207 2 36 1 351 1 38 2 49 1 15 5 241 4 311 2 164 1 40 1 279 5 280 1 356 3 282 1 
285 1 253 1 207 2 36 1 351 1 38 2 49 1 15 5 241 4 311 2 164 1 40 1 279 5 280 1 356 3 230 1 
233 1 283 1 123 1 87 1 207 1 319 1 90 1 92 2 351 1 38 1 15 1 311 1 241 1 58 1 279 1 356 1 299 1 61 2 
233 1 253 1 207 1 191 1 152 1 38 1 15 1 241 1 311 2 279 1 356 1 257 1 302 1 
310 1 178 1 121 1 332 1 90 1 
32 1 178 1 98 1 121 2 332 2 90 1 208 2 153 1 155 1 239 1 310 2 227 1 77 1 229 1 289 1 246 2 362 1 71 1 62 1 
178 1 2 1 121 1 332 1 46 1 87 1 151 1 92 1 61 1 
178 1 227 1 77 1 
141 1 186 1 308 1 378 1 
204 1 9 1 157 1 141 1 186 1 149 1 308 1 
217 1 9 1 80 1 
0 1 315 2 204 1 9 3 157 1 245 1 141 1 186 1 247 1 149 3 308 1 301 1 
16 1 339 1 204 1 9 2 157 1 141 1 186 1 149 2 308 1 
0 1 312 1 21 1 204 1 9 1 157 1 129 1 14 1 149 1 308 1 116 1 
0 1 204 1 9 1 157 1 141 1 149 1 308 1 
0 1 204 1 9 1 157 1 141 2 186 1 149 1 
0 1 204 2 9 2 157 2 141 1 149 2 308 1 160 1 267 1 143 1 
0 1 21 1 204 1 149 3 308 2 182 1 8 1 339 2 157 1 9 3 141 1 186 1 200 1 
0 1 204 1 14 1 180 1 149 2 254 1 308 1 322 1 312 1 339 1 157 1 9 2 141 1 186 1 116 2 
0 1 21 1 204 2 149 4 308 2 16 1 8 1 339 2 157 2 9 4 141 1 186 1 115 1 
0 1 204 1 9 1 157 1 141 1 186 1 149 1 308 1 
315 1 21 1 204 1 149 4 308 3 262 1 8 1 339 2 9 4 157 1 245 1 247 1 141 2 186 2 
0 1 204 1 149 2 308 1 338 1 339 1 157 1 9 2 290 1 141 1 186 1 364 1 
0 1 315 2 204 1 206 1 149 3 308 1 157 1 9 3 245 2 247 1 186 1 141 1 
74 1 370 1 376 2 308 2 
0 1 204 1 9 1 157 1 149 1 223 1 
0 1 339 1 204 1 9 2 157 1 141 1 186 1 200 1 149 2 308 1 
209 1 
0 1 204 1 9 1 157 1 141 1 186 1 149 1 308 1 
0 1 315 1 204 1 149 3 308 1 339 1 157 1 9 3 186 1 141 1 200 1 
8 1 21 1 308 1 262 1 
141 1 308 1 

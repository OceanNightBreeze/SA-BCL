#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 241 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 204 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 204 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 2 250 9 251 1 331 1 314 1 189 2 27 2 211 1 297 1 28 5 192 2 240 1 11 1 263 2 164 1 266 1 321 2 115 1 367 2 116 4 41 1 138 1 203 6 66 9 206 1 347 1 290 3 70 1 
1 2 250 9 251 1 331 1 314 1 189 2 27 2 211 1 297 1 28 5 192 2 240 1 11 1 263 2 164 1 266 1 321 2 115 1 367 2 116 4 41 1 138 1 203 6 66 9 206 1 347 1 290 3 70 1 
1 2 250 10 251 1 331 1 314 1 189 2 27 2 211 1 297 1 28 6 192 2 240 1 11 1 263 2 164 1 266 1 321 2 115 1 367 2 116 5 41 1 138 1 203 7 66 10 206 1 347 1 290 4 70 1 
1 2 250 7 251 1 331 1 314 1 189 2 27 2 211 1 297 1 28 4 192 2 240 1 11 1 263 2 164 1 321 2 115 1 367 1 116 3 41 1 138 1 203 4 66 7 206 1 347 1 290 2 70 1 
263 1 250 4 266 1 321 1 115 1 331 1 314 1 367 2 41 1 116 2 189 1 27 1 203 3 28 3 66 4 192 1 290 1 70 1 
263 1 87 1 1 1 250 2 251 1 321 1 115 1 331 1 189 1 27 1 81 1 28 1 66 2 347 1 96 1 70 1 
1 1 250 3 321 2 115 1 331 1 116 1 138 1 27 2 203 1 28 2 66 3 290 1 70 1 
1 1 250 9 331 1 314 1 189 1 27 2 211 1 28 5 192 1 263 1 164 1 13 1 321 2 266 1 115 1 345 1 367 2 116 4 41 1 138 1 203 7 66 9 290 3 70 1 
1 1 250 9 331 1 314 1 189 1 27 2 211 1 28 5 192 1 263 1 164 1 13 1 321 2 266 1 115 1 345 1 367 2 116 4 41 1 138 1 203 7 66 9 290 3 70 1 
195 1 350 1 204 1 
23 2 264 1 195 1 
358 2 270 2 34 1 344 1 146 2 207 2 149 2 318 2 
74 1 186 1 153 1 190 1 336 1 256 1 234 1 358 3 108 1 34 1 109 2 340 1 238 2 318 2 301 1 198 1 242 1 365 1 344 1 39 1 200 1 222 1 323 2 223 2 202 1 119 2 270 2 94 1 205 1 49 1 175 1 372 1 348 1 146 2 229 1 207 2 149 3 
358 1 270 1 34 1 371 1 146 1 25 1 207 1 181 1 149 1 318 1 
328 1 163 1 353 1 102 1 88 1 166 1 232 1 133 1 358 1 181 1 195 1 318 1 149 1 350 1 
328 1 102 2 166 2 88 1 232 1 133 1 270 1 358 1 146 1 207 1 181 1 195 1 318 1 149 1 350 1 
302 1 102 1 342 1 220 1 166 1 
233 1 102 2 342 1 220 1 166 2 283 1 195 1 350 1 
102 1 220 1 166 1 
342 1 102 1 166 1 25 1 324 1 270 1 358 1 34 1 371 1 146 1 207 1 181 1 318 1 149 1 
195 1 
233 1 102 2 342 1 220 1 166 2 195 1 350 1 351 1 
60 1 75 2 342 2 102 5 166 5 220 2 155 1 80 1 233 1 122 1 32 1 7 2 280 1 159 2 136 1 213 1 195 1 319 1 350 1 
56 1 186 1 365 1 167 1 323 1 223 1 190 1 336 1 270 1 358 2 49 1 175 1 372 1 348 1 109 1 340 1 146 1 318 1 149 2 327 1 
344 1 204 1 
344 1 117 1 91 1 358 2 270 1 194 1 146 1 207 1 181 1 318 2 149 2 
56 1 111 1 230 1 
186 1 365 1 344 1 323 1 223 1 190 1 336 1 358 1 49 1 175 1 372 1 109 1 348 1 212 1 340 1 149 1 
163 1 344 1 167 1 117 1 270 4 358 5 31 1 146 4 207 1 262 1 97 1 318 5 149 5 327 2 
358 2 270 2 371 1 125 1 146 2 181 1 149 2 318 2 
358 3 270 3 344 1 146 3 207 1 149 3 318 3 327 1 
358 1 270 1 371 1 146 1 181 1 149 1 318 1 
117 1 91 1 270 1 358 1 146 1 207 1 181 1 318 1 149 1 
328 1 102 1 186 1 153 1 190 1 336 1 232 1 133 1 234 1 358 4 108 1 34 1 109 1 340 1 238 2 318 3 217 1 242 1 365 1 344 1 39 1 200 1 88 1 166 1 222 1 167 1 323 1 117 1 223 1 202 1 119 1 270 3 94 1 49 1 305 1 175 1 372 1 348 1 146 3 229 1 207 2 181 1 149 4 327 1 
163 1 358 2 270 1 344 1 146 1 262 1 149 2 318 2 327 1 
328 1 102 1 166 1 88 1 167 1 117 1 232 1 133 1 270 3 358 3 305 1 146 3 207 1 181 1 195 1 318 3 149 3 327 2 22 1 
56 1 117 1 270 2 358 2 146 2 207 1 318 2 149 2 327 1 230 1 
186 1 365 1 344 1 323 1 223 1 190 1 336 1 358 1 49 1 175 1 109 1 348 1 372 1 340 1 149 1 
186 1 344 1 323 1 223 1 336 1 358 1 123 1 49 1 175 1 109 1 348 1 372 1 340 1 149 1 98 1 
56 2 153 1 254 1 79 1 26 1 356 1 256 2 132 1 157 1 82 1 278 1 234 1 108 1 111 2 238 2 36 1 39 1 200 1 222 2 90 1 119 4 94 1 180 1 230 2 
358 1 270 1 88 1 146 1 125 1 181 1 149 1 318 1 
100 1 360 1 
100 1 360 1 
235 1 169 1 
235 1 169 1 
235 1 169 1 
100 1 271 1 360 1 
100 1 279 1 360 1 
100 2 121 1 235 1 110 1 360 2 169 1 
100 1 271 1 360 1 
100 1 271 1 360 1 
100 1 360 1 139 1 
100 1 360 1 139 1 
100 1 360 1 139 1 
100 1 102 1 156 1 358 2 279 1 107 1 281 1 237 1 261 1 360 1 318 2 113 1 219 1 344 1 166 1 142 1 244 1 19 1 270 2 173 1 177 1 146 2 149 2 273 1 
37 1 329 1 100 2 219 2 102 2 24 1 166 2 129 2 168 1 142 3 244 2 64 1 173 2 281 2 110 1 53 1 360 2 195 1 273 1 
263 1 192 1 189 1 
263 1 96 1 189 1 
263 3 0 1 192 2 96 1 368 1 161 1 
73 1 263 2 0 1 192 1 96 1 161 1 
263 2 0 1 192 1 96 1 161 2 
102 5 339 2 7 1 299 1 159 1 60 2 264 2 342 4 166 5 220 1 267 1 122 1 270 1 181 1 350 1 23 2 75 1 76 1 25 1 77 2 275 1 79 1 132 1 233 1 278 1 358 1 34 1 237 1 195 1 35 1 318 1 319 3 324 1 43 1 44 1 90 1 371 1 146 1 207 1 147 1 149 1 247 2 
102 5 339 2 7 1 159 1 302 2 60 2 264 2 342 4 166 5 220 3 270 1 122 1 181 1 310 2 350 1 23 2 75 1 76 1 25 1 275 1 79 1 132 1 233 1 278 1 358 1 34 1 237 1 318 1 195 1 35 1 319 3 286 1 287 1 324 1 43 1 44 1 90 1 371 1 146 1 207 1 147 1 149 1 247 2 
23 2 75 1 76 1 102 3 25 1 77 1 275 1 79 1 80 1 132 1 278 1 358 1 339 2 299 1 7 1 34 1 159 1 237 1 318 1 195 1 319 3 60 2 264 2 342 2 166 3 267 1 324 1 43 1 44 1 90 1 270 1 371 1 146 1 207 1 181 1 147 1 149 1 247 2 350 1 
23 2 75 1 76 1 102 2 77 1 275 1 79 1 80 1 132 1 278 1 339 2 7 1 299 1 159 1 237 1 319 3 60 2 264 2 342 1 166 2 267 1 43 1 44 1 90 1 65 1 147 1 247 2 
372 1 118 1 204 1 
143 1 372 1 
260 1 
175 1 372 1 336 1 
144 1 372 1 
175 1 372 1 
151 1 218 1 175 1 372 3 118 2 336 1 
256 8 132 3 29 2 82 4 259 1 282 1 160 2 10 1 366 1 222 7 119 15 90 3 63 2 369 1 171 1 67 1 124 2 180 5 
256 8 132 3 29 2 82 4 259 1 282 1 160 2 10 3 366 1 222 7 119 15 90 3 63 2 369 1 171 1 67 1 124 2 180 7 
256 8 132 3 29 2 82 4 259 1 282 1 160 2 10 1 366 1 222 7 224 1 119 15 90 3 63 2 369 1 171 1 67 1 124 2 180 5 
76 3 252 1 313 1 153 1 316 1 255 1 187 4 79 3 256 21 132 6 29 2 278 3 82 7 234 1 259 1 282 2 160 3 238 2 10 7 196 1 366 2 39 1 200 1 222 20 15 3 119 41 90 6 369 1 63 3 92 1 171 1 67 1 124 3 176 1 180 14 
119 1 256 1 241 1 234 1 209 1 124 1 366 1 39 1 153 1 200 1 282 1 238 2 
182 1 1 1 127 1 250 2 331 1 189 1 27 1 28 1 192 1 8 1 109 1 59 1 162 1 263 2 38 1 321 1 115 1 323 1 368 1 223 1 203 1 304 1 66 2 49 1 348 1 96 1 246 1 70 1 293 1 99 1 
182 1 1 1 250 3 331 1 78 1 189 1 27 1 28 1 192 1 8 1 109 1 59 1 162 1 263 2 321 1 115 1 323 1 368 1 223 1 203 2 304 1 66 3 21 1 49 1 348 1 96 1 272 1 246 1 293 1 99 1 
1 1 250 2 331 1 78 1 189 1 28 1 8 1 192 1 109 1 59 1 162 1 263 2 115 1 323 1 368 1 223 1 203 2 66 2 49 1 348 1 96 1 272 1 246 1 293 1 99 1 
361 1 1 2 101 1 250 1 321 1 186 1 14 1 323 1 295 1 223 1 27 1 170 1 21 1 66 1 49 1 8 2 175 1 348 1 372 1 359 1 109 1 59 2 162 2 
182 1 1 1 127 1 250 1 78 1 189 1 27 1 192 1 8 1 109 1 59 1 162 1 263 2 321 1 323 1 368 1 223 1 304 1 66 1 49 1 348 1 96 1 246 1 70 1 293 1 99 1 
330 1 
328 1 102 5 4 1 334 1 7 1 159 1 109 2 58 1 60 2 163 1 341 1 264 2 343 2 220 6 166 5 223 2 170 1 122 1 174 2 175 1 348 1 181 1 350 1 23 2 75 1 353 1 186 2 231 1 128 2 232 1 233 3 133 1 358 1 33 1 83 2 359 1 195 2 318 1 319 2 86 2 197 1 322 1 40 4 88 1 323 2 201 1 140 1 43 1 47 2 49 1 372 1 289 1 245 1 149 1 208 2 
328 1 353 1 231 1 102 3 334 1 232 1 233 1 133 1 358 1 33 1 318 1 163 1 343 1 40 2 166 3 88 1 220 2 140 1 245 1 181 1 149 1 351 1 
328 1 353 1 231 1 102 3 334 1 128 1 232 1 233 1 133 1 358 1 33 1 318 1 195 1 163 1 40 3 220 1 166 3 88 1 140 1 245 1 181 1 149 1 350 1 351 1 
328 1 353 1 231 1 102 3 334 1 128 1 232 1 233 1 133 1 358 1 33 1 318 1 195 1 163 1 343 1 40 3 166 3 88 1 220 2 140 1 47 1 245 1 181 1 149 1 351 1 350 1 
328 1 2 1 102 5 334 1 7 1 159 1 60 1 163 1 264 2 343 4 166 5 220 7 122 1 174 2 178 1 181 1 351 1 350 5 353 1 75 1 231 1 128 4 232 1 233 3 133 1 358 1 33 1 83 2 318 1 195 5 319 1 197 1 86 2 363 1 40 6 322 1 88 1 140 1 47 4 48 1 52 1 245 1 149 1 208 2 
328 1 102 4 334 1 7 1 159 1 60 1 163 1 264 2 341 1 343 2 166 4 220 4 122 1 174 2 181 1 350 1 23 2 75 1 353 1 231 1 128 2 232 1 233 2 133 1 358 1 33 1 83 2 318 1 195 2 319 1 197 1 86 2 40 4 322 1 88 1 140 1 47 2 245 1 149 1 208 2 
328 1 353 1 75 1 231 1 102 4 128 2 334 1 232 1 233 2 133 1 358 1 33 1 7 1 83 2 159 1 195 1 318 1 319 1 86 2 197 1 60 1 163 1 264 2 343 2 322 1 40 4 220 4 166 4 88 1 140 1 47 2 122 1 48 1 174 2 52 1 178 1 245 1 181 1 149 1 208 2 350 1 
328 1 353 1 75 1 231 1 102 4 128 2 334 1 232 1 233 2 133 1 358 1 33 1 7 1 83 2 159 1 195 1 318 1 319 1 86 2 197 1 60 1 163 1 264 2 343 2 322 1 40 4 220 4 166 4 88 1 140 1 47 2 122 1 48 1 174 2 52 1 178 1 245 1 181 1 149 1 208 2 350 1 
23 2 328 1 353 1 75 1 231 1 102 4 128 2 334 1 232 1 233 2 133 1 358 1 33 1 7 1 106 1 159 1 195 1 318 1 319 1 86 2 60 1 364 2 163 1 320 2 343 2 322 1 40 4 220 4 166 4 88 1 140 1 243 1 47 2 122 1 50 1 52 1 245 1 181 1 149 1 208 2 350 1 
328 1 75 1 353 1 231 1 102 4 334 1 128 3 232 1 233 2 133 1 358 1 33 1 7 1 83 2 159 1 195 1 318 1 319 1 86 2 197 1 60 1 363 1 163 1 264 2 343 3 322 1 40 5 166 4 88 1 220 5 140 1 47 3 122 1 48 1 174 2 52 1 178 1 245 1 181 1 149 1 208 2 350 1 
328 1 75 1 353 1 231 1 102 4 334 1 128 3 232 1 233 2 133 1 358 1 33 1 7 1 83 2 159 1 195 1 318 1 319 1 86 2 197 1 60 1 363 1 163 1 264 2 343 3 322 1 40 5 166 4 88 1 220 5 140 1 47 3 122 1 48 1 174 2 52 1 178 1 245 1 181 1 149 1 208 2 350 1 
23 2 328 1 353 1 75 1 231 1 102 4 128 2 334 1 232 1 233 2 133 1 358 1 33 1 7 1 159 1 195 1 318 1 319 1 86 2 60 1 364 2 163 1 341 1 320 2 343 2 322 1 40 4 220 4 166 4 88 1 140 1 47 2 122 1 50 1 245 1 181 1 149 1 208 2 350 1 
56 1 344 2 200 1 153 1 39 1 222 3 204 1 132 1 119 6 256 3 90 1 29 1 82 2 63 1 234 1 94 1 124 1 108 1 67 1 259 1 111 1 160 1 180 2 36 1 238 2 230 1 
56 11 74 1 76 2 153 2 187 3 79 1 103 1 256 8 132 1 82 1 278 2 234 2 108 2 158 1 111 11 10 1 238 4 196 1 242 1 344 1 39 2 200 2 222 6 15 3 119 14 90 2 92 1 172 1 93 1 94 1 307 1 180 2 230 4 
74 1 186 1 153 1 190 1 103 1 336 1 256 1 358 2 234 1 108 1 109 1 340 1 212 1 318 1 238 2 365 1 242 1 344 1 200 1 39 1 323 1 167 1 222 1 223 1 119 2 270 1 94 1 49 1 370 1 175 1 372 1 348 1 146 1 68 1 149 2 230 1 327 1 55 1 
210 1 186 1 39 1 200 1 153 1 323 1 167 1 223 1 103 1 234 1 270 1 358 1 94 1 108 1 109 1 146 1 238 2 318 1 149 1 327 1 
274 1 74 1 186 2 153 2 78 1 188 1 256 1 358 1 234 2 108 2 135 1 109 7 359 1 36 1 318 1 238 4 214 1 38 1 165 1 242 1 39 2 200 2 323 8 222 1 223 8 119 2 170 1 270 1 94 2 49 2 205 2 175 2 348 2 372 3 146 1 308 1 149 1 327 1 126 1 
56 1 76 1 153 1 79 1 103 1 256 1 132 1 82 1 278 1 234 1 358 1 108 1 111 1 238 2 318 1 39 1 200 1 222 2 117 1 90 1 119 3 270 1 94 1 146 1 228 1 180 1 207 1 149 1 230 1 
56 1 200 1 153 1 39 1 254 1 119 2 90 1 256 2 278 1 234 1 94 1 108 1 111 1 180 1 10 1 36 1 238 2 230 1 
56 1 200 1 153 1 39 1 222 2 79 1 356 1 119 2 132 1 82 1 234 1 94 1 108 1 111 1 180 1 36 1 238 2 230 1 
56 2 76 1 153 1 79 1 256 2 132 1 278 1 82 1 234 1 108 1 111 2 238 2 36 1 10 1 39 1 200 1 222 2 90 1 119 4 94 1 180 2 230 2 
56 1 165 1 200 1 153 1 39 1 254 1 119 2 90 1 256 2 278 1 234 1 94 1 108 1 111 1 180 1 10 1 238 2 230 1 
56 1 165 1 200 1 153 1 39 1 222 2 79 1 356 1 119 2 132 1 82 1 234 1 94 1 108 1 111 1 180 1 238 2 230 1 
56 2 76 1 153 1 79 1 256 2 132 1 278 1 82 1 234 1 108 1 111 2 238 2 10 1 165 1 39 1 200 1 222 2 90 1 119 4 94 1 180 2 230 2 
56 2 76 1 200 1 153 1 39 1 222 2 79 1 132 1 90 1 256 2 119 4 82 1 278 1 234 1 94 1 108 1 111 2 180 2 10 1 238 2 230 2 
74 1 186 1 153 1 190 1 336 1 256 1 358 1 234 1 108 1 109 1 340 1 238 2 365 1 242 1 344 1 200 1 39 1 323 1 222 1 223 1 202 1 119 2 94 1 49 1 175 1 348 1 372 1 149 1 
74 1 186 1 153 1 130 1 336 1 256 1 358 1 234 1 108 1 109 1 340 1 238 2 242 1 344 1 200 1 39 1 323 1 222 1 223 1 119 2 94 1 49 1 123 1 175 1 348 1 372 1 149 1 98 1 
56 2 76 1 153 1 79 1 103 1 256 2 132 1 278 1 82 1 234 1 108 1 111 2 238 2 10 1 39 1 200 1 222 2 90 1 119 4 94 1 180 2 230 2 
56 2 76 1 153 1 79 1 190 1 336 1 132 1 256 2 82 1 278 1 358 1 234 1 108 1 109 1 340 1 111 2 10 1 238 2 365 1 38 1 200 1 39 1 222 2 323 1 223 1 202 1 119 4 90 1 94 1 49 1 175 1 348 1 372 1 180 2 292 1 149 1 230 2 
56 1 76 1 153 1 79 1 103 1 132 1 5 1 256 2 278 1 234 1 358 1 108 1 111 1 10 1 238 2 318 1 39 1 200 1 222 1 117 1 90 1 119 3 270 1 94 1 146 1 180 1 207 1 149 1 230 1 
249 2 209 1 352 1 76 1 153 2 332 1 79 1 335 2 256 4 132 1 6 1 357 1 278 1 234 2 238 4 10 1 362 1 39 2 200 2 221 1 222 4 119 8 90 1 180 1 291 1 
249 2 209 1 352 1 76 1 153 2 332 1 79 1 335 2 256 4 132 1 6 1 82 1 357 1 278 1 234 2 238 4 10 1 362 1 39 2 200 2 221 1 222 4 119 8 90 1 180 2 291 1 
249 2 209 1 76 1 153 1 332 1 79 1 335 1 256 7 132 2 6 1 29 1 278 1 357 1 82 1 234 1 259 1 160 1 10 1 238 2 362 1 39 1 200 1 221 1 222 6 119 13 90 2 63 1 67 1 124 1 180 2 
249 2 209 1 76 2 153 2 315 1 332 1 79 2 335 1 256 6 132 2 6 2 357 1 82 2 278 2 234 2 238 4 10 2 362 1 39 2 200 2 221 1 222 6 119 12 90 2 180 4 291 1 
249 2 209 1 76 1 153 1 332 1 79 1 335 2 256 4 132 1 6 1 357 1 278 1 234 1 238 2 362 1 39 1 200 1 221 2 222 4 119 8 90 1 
326 1 100 1 244 1 64 1 219 1 173 1 281 1 110 1 360 1 168 1 
279 1 107 1 
46 1 100 1 244 1 219 1 57 1 173 1 281 1 9 1 360 1 
12 1 271 1 
121 1 152 1 139 1 
37 1 329 1 100 1 219 1 102 1 166 1 129 1 168 1 142 2 244 1 64 1 173 1 281 1 110 1 53 1 360 1 195 1 273 1 
37 1 329 1 100 1 219 1 102 1 166 1 129 1 168 1 142 2 244 1 64 1 173 1 281 1 110 1 53 1 360 1 195 1 273 1 
37 1 329 1 100 1 219 1 102 1 166 1 129 1 168 1 142 2 244 1 64 1 173 1 281 1 110 1 53 1 360 1 195 1 273 1 
121 1 12 1 271 1 
121 1 12 1 271 1 
152 1 139 1 
121 1 152 1 139 1 
177 1 156 1 
100 1 102 1 129 1 156 1 358 2 279 1 107 1 281 1 237 1 261 1 360 1 318 2 113 1 199 1 219 1 342 1 344 1 166 1 142 1 244 1 19 1 270 2 173 1 177 1 146 2 53 1 149 2 
274 1 74 1 153 1 103 1 256 1 191 1 317 1 358 2 234 1 108 1 109 2 318 2 238 2 215 1 242 1 200 1 39 1 323 2 61 1 222 1 223 2 119 2 62 1 94 1 49 1 205 2 175 1 348 1 372 1 308 1 149 2 
263 2 38 1 137 1 323 2 368 1 78 1 223 2 189 1 304 1 120 1 49 1 192 1 8 1 96 1 348 1 109 2 288 1 246 1 99 1 
263 2 137 1 323 1 368 1 78 1 223 1 189 1 304 1 277 1 49 1 192 1 8 1 96 1 109 1 348 1 246 1 99 1 
186 1 323 1 295 1 223 1 120 1 337 1 170 1 49 1 8 1 175 1 348 1 372 1 109 1 359 1 
263 2 137 1 323 1 368 1 78 1 223 1 189 1 304 1 120 1 49 1 192 1 8 1 96 1 109 1 288 1 348 1 246 1 99 1 
285 1 
60 1 136 1 155 1 195 1 319 1 350 1 204 1 
23 1 75 1 102 1 233 1 7 1 83 1 159 1 195 2 319 1 197 1 60 1 264 1 220 1 166 1 122 1 174 1 350 1 
328 1 151 1 75 2 102 2 186 1 333 1 336 1 233 1 7 2 109 1 159 2 84 1 319 1 166 2 220 2 323 1 223 1 43 1 141 1 118 1 143 2 122 2 49 2 306 1 346 1 175 1 372 4 348 1 54 1 69 1 
23 3 183 1 311 1 75 1 76 4 354 1 275 2 187 2 79 4 132 4 278 4 339 8 7 1 159 1 284 1 319 11 196 1 60 7 264 3 15 2 89 1 90 4 92 1 122 1 93 1 247 8 
75 1 102 1 25 1 275 2 132 1 29 1 358 1 7 1 34 1 159 1 160 1 318 1 319 2 60 2 166 1 324 1 90 2 63 1 369 1 122 1 270 1 48 1 371 1 146 1 207 1 147 1 181 1 149 1 
60 1 75 1 155 1 122 1 7 1 159 1 136 1 195 1 350 1 319 1 
90 1 60 2 278 1 339 1 76 1 247 1 
233 1 102 1 166 1 220 1 195 1 350 1 
75 2 186 2 102 3 4 1 80 1 233 2 7 2 159 2 109 4 359 1 58 1 112 1 319 2 60 2 265 1 220 4 166 3 323 4 223 4 42 1 43 2 170 1 122 1 227 2 49 1 175 1 348 1 372 1 289 2 
186 1 153 1 190 1 336 1 234 1 358 3 34 1 108 1 109 1 340 1 238 2 318 2 242 1 365 1 344 1 39 1 200 1 222 1 323 1 223 1 202 1 119 1 270 2 94 1 49 1 175 1 348 1 372 1 146 2 229 1 207 2 149 3 
60 1 75 1 43 1 122 1 7 1 159 1 289 1 195 1 247 1 319 1 350 1 
216 1 219 1 281 1 
219 1 145 1 281 1 156 1 168 1 
216 1 219 1 281 1 
216 1 219 1 281 1 
219 1 281 1 104 1 
219 1 281 1 104 1 
219 1 281 1 104 1 
219 1 281 1 
100 1 360 1 
311 1 209 1 153 1 187 1 132 3 256 8 29 2 82 4 234 1 259 1 160 2 10 1 238 2 196 1 39 1 200 1 222 8 15 1 90 3 119 16 369 1 63 2 124 1 67 1 180 5 
311 1 209 1 76 1 153 2 187 2 132 3 256 10 29 2 82 4 278 1 234 2 258 1 259 1 160 2 238 4 10 2 196 1 39 2 200 2 222 9 15 1 119 19 90 4 369 1 63 2 92 1 124 1 67 1 180 6 
183 1 311 1 209 1 76 2 153 3 354 1 255 1 187 1 79 2 256 13 132 5 29 2 278 2 82 5 234 3 258 1 259 1 160 2 10 2 284 1 238 6 196 1 39 3 200 3 222 14 15 1 89 1 119 27 90 5 369 1 63 2 124 1 67 1 180 7 
183 1 311 1 209 1 76 2 153 3 354 1 255 1 187 1 79 1 256 14 132 4 29 2 278 2 82 5 234 3 258 1 259 1 160 2 10 4 238 6 284 1 196 1 39 3 200 3 222 11 15 1 89 1 119 25 90 5 369 1 63 2 124 1 67 1 180 9 
311 1 209 1 153 1 187 1 132 3 256 8 29 2 82 4 234 1 259 1 160 2 10 1 238 2 196 1 39 1 200 1 222 8 15 1 90 3 119 16 369 1 63 2 124 1 67 1 180 5 
183 1 311 1 209 1 76 2 153 1 354 1 187 1 79 2 256 6 132 2 278 2 82 1 234 1 10 1 238 2 284 1 196 1 39 1 200 1 222 6 15 1 89 1 119 12 90 2 180 2 
183 1 311 1 209 1 76 2 153 4 354 1 255 2 187 1 79 1 256 14 132 4 29 2 278 2 82 5 234 4 258 1 259 1 160 2 10 2 284 1 238 8 196 1 39 4 200 4 222 12 15 1 89 1 119 26 90 5 369 1 63 2 124 1 67 1 180 7 
183 1 311 1 209 1 76 3 153 4 354 1 255 2 187 1 79 2 256 9 132 2 278 3 82 3 234 4 10 3 284 1 238 8 196 1 39 4 200 4 222 7 15 1 89 1 119 16 90 3 180 6 291 1 
222 4 132 1 119 7 90 1 256 3 29 1 63 3 82 3 67 1 259 2 160 3 180 6 10 3 
183 1 311 1 209 1 76 2 153 4 354 1 255 2 187 1 79 1 256 14 132 4 29 2 278 2 82 5 234 4 259 1 160 2 10 2 284 1 238 8 196 1 39 4 200 4 222 12 15 1 89 1 119 26 90 5 369 1 63 2 124 1 67 1 180 7 291 1 
153 2 255 1 256 9 132 3 29 2 82 4 234 2 259 1 160 2 238 4 10 3 39 2 200 2 222 9 119 18 90 3 369 1 63 2 67 1 124 1 180 7 
222 3 204 1 90 1 256 3 119 6 132 1 29 1 63 1 82 2 124 1 67 1 259 1 160 1 180 2 
76 1 200 1 153 1 39 1 222 2 79 1 132 1 90 1 256 2 119 4 82 1 278 1 234 1 258 1 180 2 238 2 10 1 
196 1 76 1 222 4 79 1 187 2 15 1 132 1 119 7 256 3 90 1 82 1 92 1 278 1 180 2 10 1 
76 2 153 1 255 1 79 2 187 2 132 5 256 13 29 2 278 2 82 5 234 1 259 1 158 1 160 2 10 2 238 2 200 1 39 1 222 13 15 2 90 5 119 26 369 1 63 2 92 1 93 1 124 1 67 1 180 7 
119 1 222 1 187 1 
119 1 256 1 15 1 
76 1 39 1 153 1 200 1 222 3 79 1 119 6 90 1 256 3 132 1 278 1 82 2 234 1 134 1 258 1 180 3 238 2 10 1 
183 1 311 1 209 1 76 2 153 1 354 1 187 1 79 2 256 6 132 2 278 2 82 1 234 1 10 1 238 2 284 1 196 1 39 1 200 1 222 6 15 1 89 1 119 12 90 2 180 2 
222 3 90 1 256 3 119 6 132 1 29 1 63 1 82 1 160 1 180 2 10 1 
200 1 153 1 39 1 222 2 255 1 256 1 119 3 82 1 63 1 234 1 259 1 95 1 67 1 160 1 180 2 10 1 238 2 
209 1 39 1 153 1 200 1 222 5 256 5 119 10 90 2 132 2 29 1 369 1 63 2 82 3 234 1 160 2 180 5 238 2 10 2 
209 1 200 1 153 1 39 1 90 1 256 2 119 2 278 1 234 1 180 1 238 2 10 1 
209 1 76 1 200 1 153 1 39 1 222 2 79 1 132 1 90 1 256 2 119 4 82 1 278 1 234 1 180 2 238 2 10 1 
209 1 200 3 153 3 39 3 255 1 222 2 119 3 256 1 63 1 82 1 234 3 95 1 160 1 180 2 291 1 238 6 10 1 
209 1 76 2 252 1 153 4 255 1 316 1 187 3 79 2 256 16 132 5 29 2 82 5 278 2 234 4 258 1 259 1 160 2 238 8 10 4 196 1 39 4 200 4 222 16 15 3 119 32 90 5 369 1 63 2 124 1 67 1 176 1 180 9 291 1 
45 1 358 1 163 1 344 1 149 1 318 1 262 1 
163 1 344 1 355 1 268 1 45 1 325 1 30 1 358 1 262 1 318 1 149 1 309 1 
170 1 49 1 186 1 175 1 348 1 372 1 359 1 109 1 323 1 223 1 204 1 
186 1 344 1 323 1 223 1 190 1 336 1 270 1 358 2 49 1 175 1 372 1 109 1 348 1 340 1 146 1 318 1 149 2 327 1 
344 1 88 1 323 1 223 1 190 1 336 2 133 1 270 2 358 2 49 1 227 1 144 1 175 2 372 3 109 1 348 1 340 1 146 1 181 1 85 1 318 2 149 2 327 1 
336 2 133 1 358 2 109 2 340 1 318 2 85 1 344 1 88 1 323 2 223 2 225 1 270 2 123 1 227 1 49 1 175 2 144 1 348 1 372 3 146 1 181 1 149 2 327 1 
328 1 184 1 185 1 102 2 186 1 336 1 109 3 85 1 195 1 220 1 166 2 323 3 223 3 118 1 225 1 143 1 227 1 49 1 175 1 144 1 348 1 372 4 350 1 
328 1 186 1 102 2 166 2 220 1 323 3 333 1 223 3 336 1 118 1 225 1 143 1 49 1 227 1 144 1 175 1 109 3 372 4 348 1 195 1 85 1 350 1 
49 1 348 1 109 1 323 1 223 1 214 1 
151 1 38 1 186 2 323 7 3 1 78 1 223 7 188 1 336 1 205 1 49 3 135 1 175 2 109 6 372 3 348 2 308 1 148 1 71 1 214 1 126 1 
56 1 153 2 103 1 336 1 256 7 108 2 259 1 109 1 340 1 160 2 111 1 10 1 215 1 114 1 344 3 222 7 223 1 119 14 63 2 270 1 67 1 124 1 175 1 348 1 180 5 181 1 230 1 190 1 132 3 29 2 82 4 234 2 358 2 194 1 238 4 318 1 365 1 38 1 39 2 200 2 323 1 202 1 90 3 369 1 94 2 49 1 372 1 146 1 292 1 149 2 327 1 
328 1 75 2 186 1 102 3 333 1 155 1 233 1 7 2 109 1 159 2 136 1 195 1 319 1 60 1 342 1 166 3 220 2 323 1 223 1 42 1 118 1 143 1 122 2 306 1 372 2 54 1 69 1 350 1 
151 1 38 1 323 2 223 2 118 1 336 1 49 2 346 1 175 1 109 2 372 2 348 1 214 1 
312 1 186 1 38 1 323 4 223 4 225 1 170 1 49 1 175 1 109 4 359 1 372 1 348 1 
154 1 323 2 3 1 223 2 336 1 276 1 338 1 227 1 49 2 175 1 109 2 372 1 348 1 148 1 
263 1 49 1 186 1 96 1 348 1 109 1 323 1 223 1 189 1 99 1 
317 1 49 1 38 1 175 1 348 1 372 1 109 2 323 2 308 1 78 1 223 2 
312 1 186 1 38 1 323 5 223 5 188 1 170 1 227 1 49 2 175 2 135 1 359 1 109 4 372 3 348 2 308 1 
312 1 186 1 38 1 323 5 223 5 16 1 170 1 227 1 49 2 175 2 135 1 359 1 109 4 372 3 348 2 308 1 
186 1 344 1 323 1 223 1 336 1 270 1 358 2 49 1 123 1 175 1 372 1 109 1 348 1 340 1 146 1 318 1 149 2 327 1 
151 1 323 1 3 1 223 1 336 1 227 1 49 2 175 1 109 1 372 1 348 1 148 1 71 1 
298 1 344 1 236 1 131 1 72 1 
328 1 342 1 102 2 344 1 88 1 166 2 131 2 232 1 133 1 226 1 298 2 20 1 305 1 236 2 181 1 195 1 72 1 350 1 150 1 
191 1 62 1 358 1 236 1 61 1 149 1 318 1 72 1 131 1 
226 1 20 1 72 1 
28 1 115 1 331 1 204 1 
28 1 250 1 66 1 321 1 115 1 331 1 27 1 
1 1 66 1 162 1 
250 3 321 1 331 1 115 1 296 1 27 1 17 1 28 1 66 3 51 1 347 2 70 1 
28 1 250 2 66 2 321 1 115 1 331 1 367 1 27 1 203 1 
263 1 250 1 321 1 314 1 116 1 189 1 27 1 28 1 66 1 192 1 70 1 
28 1 250 1 66 1 321 1 115 1 70 1 27 1 
250 1 66 1 321 1 115 2 331 1 70 1 27 1 
28 1 257 1 250 2 66 2 321 2 115 1 179 1 349 1 70 1 27 2 
250 3 164 1 321 1 115 1 331 1 116 1 27 1 211 1 203 2 28 2 66 3 290 1 70 1 
263 2 250 2 321 1 115 1 331 1 368 1 189 1 27 1 203 1 28 1 66 2 192 1 96 1 70 1 239 1 
250 4 321 2 266 1 115 1 331 1 367 1 116 1 27 2 203 2 28 2 66 4 290 1 70 1 
28 1 250 1 66 1 321 1 115 1 331 1 70 1 27 1 
250 4 321 1 115 2 331 2 116 1 296 1 27 1 203 2 28 3 66 4 51 1 347 1 193 1 290 1 
250 2 321 1 115 1 331 1 345 1 27 1 203 1 28 1 269 1 66 2 300 1 70 1 
250 3 321 1 331 1 115 1 303 1 296 2 27 1 28 1 66 3 51 1 347 2 70 1 
28 2 18 2 105 1 294 1 
248 1 250 1 66 1 321 1 70 1 27 1 
28 1 250 2 66 2 164 1 321 1 115 1 331 1 70 1 27 1 203 1 
253 1 
28 1 250 1 66 1 321 1 115 1 331 1 70 1 27 1 
28 1 250 3 66 3 164 1 321 1 115 1 331 1 347 1 70 1 27 1 203 1 
28 1 193 1 116 1 290 1 
28 1 115 1 

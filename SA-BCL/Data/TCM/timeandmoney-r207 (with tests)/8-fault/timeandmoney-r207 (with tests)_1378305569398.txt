#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 16 242 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 16 242 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 16 242 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 16 242 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 16 242 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 37 315 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 82 252 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 82 252 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 82 252 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 116 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 7 254 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 37 315 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 16 (340,355) (340,355) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 2 42 1 5 4 194 1 121 1 103 1 310 5 49 6 106 1 222 1 158 2 336 3 268 1 10 2 133 1 367 2 13 1 66 1 233 9 321 2 137 9 69 1 369 1 92 1 71 1 208 2 187 2 276 1 
303 2 42 1 5 4 194 1 121 1 103 1 310 5 49 6 106 1 222 1 158 2 336 3 268 1 10 2 133 1 13 1 367 2 66 1 233 9 321 2 137 9 69 1 369 1 92 1 71 1 208 2 187 2 276 1 
303 2 42 1 5 5 194 1 121 1 103 1 310 6 49 7 106 1 222 1 158 2 336 4 268 1 10 2 133 1 13 1 367 2 66 1 233 10 321 2 137 10 69 1 369 1 92 1 71 1 208 2 187 2 276 1 
303 2 42 1 5 3 194 1 121 1 103 1 310 4 49 4 106 1 222 1 158 2 336 2 268 1 10 2 133 1 13 1 367 1 233 7 321 2 137 7 69 1 369 1 92 1 71 1 208 2 187 2 276 1 
303 1 158 1 336 1 10 1 133 1 13 1 367 2 66 1 5 2 233 4 194 1 321 1 137 4 310 3 49 3 71 1 222 1 187 1 
158 1 303 1 10 1 42 1 98 1 133 1 13 1 233 2 194 1 310 1 137 2 369 1 370 1 186 1 208 1 187 1 
158 2 336 1 133 1 13 1 5 1 233 3 194 1 121 1 137 3 310 2 49 1 208 1 187 2 
166 1 303 1 119 1 5 4 194 1 121 1 310 5 49 7 222 1 158 2 336 3 10 1 133 1 13 1 367 2 66 1 233 9 321 1 137 9 69 1 71 1 208 1 187 2 276 1 
166 1 303 1 119 1 5 4 194 1 121 1 310 5 49 7 222 1 158 2 336 3 10 1 133 1 13 1 367 2 66 1 233 9 321 1 137 9 69 1 71 1 208 1 187 2 276 1 
86 1 164 1 177 1 
360 1 86 1 349 2 
96 2 320 1 344 1 206 2 60 2 275 2 281 2 215 2 
167 1 96 2 240 1 23 1 281 2 215 3 41 1 307 1 46 1 219 1 29 1 197 1 263 1 356 2 332 2 248 1 178 1 294 1 60 2 62 1 269 2 203 1 12 1 230 1 320 1 344 1 15 1 206 2 90 2 163 1 185 1 275 3 346 1 209 2 75 1 141 1 117 1 
245 1 96 1 344 1 262 1 206 1 60 1 338 1 275 1 281 1 215 1 
118 1 76 1 338 1 86 1 253 1 361 1 215 1 87 1 206 1 275 1 105 1 72 1 177 1 142 1 
96 1 76 1 60 1 338 1 86 1 281 1 361 1 215 1 87 2 206 1 275 1 105 1 72 2 177 1 142 1 
352 1 146 1 169 1 72 1 87 1 
328 1 352 1 146 1 86 1 120 1 72 2 87 2 177 1 
146 1 72 1 87 1 
96 1 60 1 338 1 281 1 215 1 87 1 352 1 173 1 245 1 262 1 344 1 206 1 275 1 72 1 
86 1 
328 1 352 1 146 1 86 1 72 2 223 1 87 2 177 1 
19 1 146 2 9 2 86 1 282 1 339 1 87 5 204 1 261 1 318 2 328 1 352 2 234 1 156 2 72 5 287 1 177 1 54 1 32 1 
320 1 164 1 
96 1 147 1 60 1 281 1 215 2 320 2 206 2 274 1 275 2 
324 1 314 1 291 1 
62 1 269 1 203 1 215 1 41 1 12 1 307 1 67 1 46 1 320 1 90 1 275 1 346 1 332 1 248 1 117 1 
96 1 324 1 212 1 60 1 62 1 203 1 269 1 41 1 215 2 12 1 307 1 46 1 206 1 90 1 275 2 346 1 332 1 117 1 38 1 248 1 
96 3 320 1 206 3 60 3 275 3 281 1 215 3 38 1 
245 1 96 1 206 1 60 1 338 1 275 1 215 1 
96 1 147 1 206 1 60 1 274 1 338 1 275 1 281 1 215 1 
167 1 96 3 76 1 212 1 23 1 281 2 41 1 2 1 215 4 307 1 26 1 46 1 219 1 29 1 197 1 105 1 263 1 356 2 332 1 248 1 294 1 60 3 62 1 338 1 203 1 361 1 269 1 12 1 87 1 230 1 320 1 344 1 163 1 206 3 90 1 274 1 275 4 72 1 346 1 209 1 75 1 117 1 38 1 142 1 
118 1 96 1 320 1 206 2 279 1 60 1 275 2 215 2 38 1 
96 3 76 1 212 1 60 3 338 1 281 1 86 1 11 1 361 1 215 3 2 1 87 1 206 3 274 1 275 3 105 1 72 1 142 1 38 2 
96 2 60 2 324 1 281 1 215 2 206 2 274 1 275 2 38 1 314 1 
62 1 269 1 203 1 215 1 41 1 12 1 307 1 46 1 320 1 90 1 275 1 346 1 332 1 248 1 117 1 
62 1 269 1 111 1 203 1 215 1 41 1 12 1 307 1 46 1 320 1 368 1 90 1 275 1 346 1 332 1 
167 2 324 2 259 1 308 1 311 1 219 1 29 1 197 1 50 1 286 1 356 2 291 2 314 2 335 1 202 1 294 1 230 1 65 1 112 1 136 1 15 2 139 1 75 1 209 4 
96 1 206 1 60 1 338 1 105 1 275 1 140 1 215 1 
118 1 96 4 278 1 279 1 60 4 212 1 281 1 215 5 320 1 206 5 274 1 275 5 38 2 157 1 
245 1 96 2 206 2 60 2 140 1 338 1 275 2 215 2 
184 1 176 1 
184 1 176 1 
272 1 
272 1 
272 1 
184 1 270 1 176 1 
184 1 270 1 176 1 
190 1 184 1 176 1 74 1 272 1 
343 1 184 1 176 1 
184 1 270 1 176 1 
184 1 1 1 176 1 
184 1 1 1 176 1 
184 1 1 1 176 1 
95 1 57 2 337 2 229 1 131 2 86 1 78 2 327 2 87 2 366 1 80 1 244 1 285 1 300 1 162 1 184 2 176 2 72 2 322 3 
96 2 97 1 78 1 215 2 327 1 176 1 246 1 199 1 333 1 57 1 293 1 227 1 60 2 131 1 87 1 343 1 320 1 115 1 162 1 206 2 184 1 275 2 72 1 322 1 
303 1 321 1 10 1 
303 1 370 1 10 1 
14 1 89 1 303 3 321 2 370 1 18 1 
14 1 89 1 303 2 100 1 321 1 370 1 
14 1 89 2 303 2 321 1 370 1 
19 3 146 1 22 2 282 2 45 1 284 1 328 1 352 4 102 1 311 1 6 2 313 1 156 1 286 1 31 1 54 1 177 1 333 1 335 1 226 2 202 1 293 1 360 1 9 1 86 2 87 5 318 1 135 1 35 1 115 1 72 5 349 3 
19 8 146 6 22 6 169 5 0 1 282 6 284 2 352 7 328 1 48 1 311 3 6 6 155 1 312 1 313 3 156 2 286 3 177 1 54 1 32 1 335 3 202 3 293 4 360 3 9 2 126 1 86 5 64 5 159 1 87 9 318 2 135 2 35 1 72 9 349 9 
19 3 22 2 282 2 45 1 284 1 352 2 311 1 6 2 156 1 313 1 286 1 177 1 31 1 32 1 226 1 335 1 202 1 293 1 360 2 9 1 86 3 87 3 318 1 135 1 72 3 349 4 
19 5 22 4 0 1 282 4 45 1 284 1 352 3 48 1 311 2 6 4 155 1 156 1 313 2 286 2 177 1 31 1 32 1 226 2 335 2 202 2 293 2 360 3 9 1 86 4 87 4 318 1 135 1 72 4 349 7 
164 1 52 1 307 1 
7 1 307 1 
174 1 
12 1 307 1 
46 1 84 1 52 2 12 1 307 3 323 1 
46 1 12 1 307 1 
124 1 307 1 
15 1 16 1 242 1 191 1 209 1 
15 1 16 1 242 1 191 1 209 1 
15 1 16 1 242 1 191 1 209 1 243 1 
15 1 16 1 242 1 191 1 209 1 
15 1 16 1 242 1 191 1 209 1 
277 1 303 2 214 1 41 1 325 1 194 1 195 1 196 1 310 1 49 1 332 1 292 1 334 1 158 1 296 1 62 1 10 1 269 1 133 1 13 1 233 2 321 1 90 1 137 2 370 1 208 1 302 1 93 1 187 1 18 1 
277 1 239 1 303 2 214 1 41 1 325 1 194 1 195 1 310 1 49 2 332 1 56 1 292 1 334 1 158 1 296 1 297 1 62 1 10 1 269 1 133 1 233 3 321 1 90 1 137 3 370 1 208 1 302 1 18 1 187 1 
277 1 239 1 303 2 41 1 325 1 194 1 310 1 49 2 332 1 292 1 334 1 296 1 297 1 62 1 10 1 269 1 133 1 233 2 321 1 90 1 137 2 370 1 208 1 302 1 18 1 
56 1 277 2 158 1 189 1 144 1 228 1 296 2 62 1 269 1 41 1 12 1 307 1 341 1 233 1 137 1 90 1 235 1 208 2 302 2 346 1 187 1 332 1 125 1 
277 1 303 2 214 1 41 1 325 1 195 1 196 1 332 1 292 1 334 1 158 1 296 1 297 1 62 1 10 1 269 1 13 1 233 1 321 1 90 1 137 1 370 1 208 1 302 1 187 1 18 1 
304 1 
315 1 318 1 284 1 19 1 146 1 9 1 90 1 269 1 156 1 72 1 346 1 87 1 332 1 54 1 37 1 
118 1 76 1 20 1 146 2 215 1 283 1 328 1 101 1 122 1 105 1 221 1 223 1 338 1 253 1 361 1 87 3 255 1 206 1 275 1 72 3 371 2 142 1 
118 1 76 1 146 1 20 1 215 1 27 1 328 1 101 1 122 1 105 1 221 1 223 1 177 1 338 1 361 1 253 1 86 1 87 3 255 1 206 1 275 1 72 3 371 3 142 1 
118 1 76 1 20 1 146 2 215 1 283 1 27 1 328 1 101 1 122 1 105 1 221 1 223 1 288 1 177 1 338 1 361 1 253 1 86 1 87 3 255 1 206 1 275 1 72 3 371 3 142 1 
236 1 96 1 146 7 145 1 281 1 148 2 283 4 282 1 43 1 152 2 328 3 245 1 101 1 105 1 156 1 288 4 54 1 9 1 60 1 338 2 253 1 255 1 344 1 206 2 72 5 118 1 76 1 19 1 20 1 215 2 172 1 27 3 173 1 262 1 122 1 221 1 223 1 177 1 225 1 360 2 86 1 361 1 87 5 318 1 181 1 319 2 36 1 138 2 275 2 371 5 142 1 
146 4 148 2 282 1 283 2 152 2 328 2 101 1 105 1 156 1 54 1 288 2 9 1 338 1 253 1 255 1 206 1 72 4 349 2 118 1 76 1 19 1 20 1 215 1 351 1 27 2 122 1 221 1 177 1 360 2 361 1 86 2 87 4 318 1 181 1 319 2 36 1 138 2 275 1 371 4 142 1 
236 1 118 1 19 1 76 1 146 4 20 1 145 1 148 2 215 1 283 2 282 1 172 1 27 2 152 2 328 2 101 1 122 1 105 1 156 1 221 1 177 1 288 2 54 1 360 2 9 1 338 1 86 1 361 1 253 1 87 4 318 1 181 1 319 2 255 1 36 1 206 1 138 2 275 1 72 4 371 4 142 1 
236 1 118 1 19 1 76 1 146 4 20 1 145 1 148 2 215 1 283 2 282 1 172 1 27 2 152 2 328 2 101 1 122 1 105 1 156 1 221 1 177 1 288 2 54 1 360 2 9 1 338 1 86 1 361 1 253 1 87 4 318 1 181 1 319 2 255 1 36 1 206 1 138 2 275 1 72 4 371 4 142 1 
143 2 118 1 19 1 76 1 146 4 20 1 305 2 170 1 215 1 283 2 282 1 172 1 27 2 152 2 328 2 101 1 122 1 105 1 156 1 221 1 177 1 288 2 54 1 316 1 9 1 338 1 86 1 361 1 253 1 87 4 318 1 181 1 182 1 255 1 206 1 138 2 275 1 72 4 371 4 349 2 142 1 
236 1 118 1 19 1 76 1 145 1 20 1 146 5 148 2 215 1 282 1 283 3 172 1 152 2 27 3 328 2 101 1 122 1 105 1 156 1 221 1 177 1 54 1 288 3 225 1 360 2 9 1 338 1 86 1 361 1 253 1 87 4 318 1 181 1 319 2 255 1 36 1 206 1 138 2 275 1 72 4 371 5 142 1 
236 1 118 1 19 1 76 1 145 1 20 1 146 5 148 2 215 1 282 1 283 3 172 1 152 2 27 3 328 2 101 1 122 1 105 1 156 1 221 1 177 1 54 1 288 3 225 1 360 2 9 1 338 1 86 1 361 1 253 1 87 4 318 1 181 1 319 2 255 1 36 1 206 1 138 2 275 1 72 4 371 5 142 1 
143 2 146 4 282 1 283 2 152 2 328 2 101 1 105 1 156 1 54 1 288 2 9 1 338 1 253 1 255 1 206 1 72 4 349 2 118 1 76 1 19 1 20 1 305 2 170 1 215 1 351 1 27 2 122 1 221 1 177 1 361 1 86 1 87 4 318 1 181 1 138 2 275 1 371 4 142 1 
335 1 167 2 202 1 294 1 259 1 63 1 340 1 230 1 112 1 4 1 320 1 68 1 15 3 16 1 219 1 139 1 197 1 29 1 164 1 355 1 356 2 209 5 75 1 
167 6 259 2 324 11 23 1 149 1 311 1 218 1 219 2 29 2 197 2 313 2 286 2 356 4 224 3 290 1 291 11 314 4 335 2 202 1 294 2 59 1 251 1 130 1 230 1 342 3 112 1 232 1 320 1 301 1 15 8 185 1 75 2 209 14 
96 1 167 1 212 1 213 1 23 1 41 1 215 2 307 1 46 1 28 1 219 1 29 1 197 1 356 2 332 1 30 1 248 1 314 1 294 1 60 1 62 1 203 1 269 1 12 1 230 1 232 1 67 1 320 1 90 1 206 1 15 1 185 1 275 2 346 1 75 1 209 2 117 1 38 1 
96 1 324 6 41 2 4 1 46 2 47 1 197 3 8 2 51 2 53 2 286 2 332 1 248 2 291 6 335 3 202 3 294 3 60 1 62 2 63 1 203 2 12 2 340 1 112 3 68 1 206 1 163 2 15 10 16 1 347 1 346 1 75 3 209 19 117 2 167 9 259 3 212 1 23 1 215 3 307 2 311 2 219 3 29 3 355 1 313 2 356 6 314 6 33 2 269 1 230 3 232 1 320 1 90 1 185 1 275 3 38 1 
96 1 167 1 144 1 240 2 40 1 77 1 23 1 215 1 41 2 307 3 25 1 219 2 29 2 197 2 123 1 356 4 332 7 294 2 359 1 60 1 109 1 297 1 62 2 269 8 12 2 341 1 132 1 230 2 206 1 90 8 15 1 139 1 185 1 275 1 346 2 93 1 75 2 209 2 38 1 
96 1 167 2 259 1 324 1 281 1 215 1 311 1 219 1 29 1 197 1 313 1 286 1 356 2 314 1 291 1 357 1 335 1 202 1 294 1 60 1 230 1 112 1 232 1 206 1 15 1 274 1 275 1 75 1 209 3 
335 1 294 1 59 1 259 1 324 1 230 1 15 2 219 1 139 1 197 1 29 1 50 1 286 1 356 2 209 2 75 1 314 1 291 1 
202 1 167 2 294 1 259 1 324 1 230 1 112 1 65 1 311 1 219 1 139 1 197 1 29 1 356 2 209 2 75 1 314 1 291 1 
167 2 324 2 259 2 311 1 219 1 29 1 197 1 313 1 286 1 356 2 291 2 314 2 335 1 202 1 294 1 59 1 230 1 112 1 15 2 139 1 75 1 209 4 
335 1 294 1 59 1 259 1 324 1 77 1 230 1 15 2 219 1 197 1 29 1 50 1 286 1 356 2 209 2 75 1 314 1 291 1 
202 1 167 2 294 1 259 1 324 1 77 1 230 1 112 1 65 1 311 1 219 1 197 1 29 1 356 2 209 2 75 1 314 1 291 1 
167 2 324 2 259 2 77 1 311 1 219 1 29 1 197 1 313 1 286 1 356 2 291 2 314 2 335 1 202 1 294 1 59 1 230 1 112 1 15 2 75 1 209 4 
335 1 167 2 202 1 294 1 59 1 259 2 324 2 230 1 112 1 311 1 15 2 219 1 197 1 29 1 313 1 286 1 356 2 75 1 209 4 314 2 291 2 
167 1 23 1 41 1 215 1 307 1 46 1 219 1 197 1 29 1 356 2 332 1 248 1 294 1 62 1 203 1 269 1 12 1 230 1 320 1 15 1 163 1 90 1 185 1 275 1 346 1 209 2 75 1 117 1 
167 1 23 1 41 1 215 1 307 1 46 1 219 1 197 1 29 1 356 2 332 1 83 1 294 1 62 1 203 1 111 1 269 1 12 1 230 1 320 1 368 1 15 1 90 1 185 1 275 1 346 1 209 2 75 1 
167 2 324 2 259 2 311 1 219 1 29 1 197 1 313 1 286 1 356 2 291 2 314 2 335 1 202 1 294 1 59 1 230 1 112 1 232 1 15 2 75 1 209 4 
167 2 259 2 324 2 41 1 215 1 307 1 46 1 311 1 219 1 197 1 29 1 313 1 286 1 51 1 356 2 332 1 314 2 291 2 248 1 335 1 202 1 294 1 59 1 62 1 203 1 269 1 12 1 230 1 112 1 15 2 163 1 90 1 275 1 209 4 93 1 75 1 117 1 
167 1 96 1 259 1 324 1 281 1 215 1 311 1 219 1 29 1 197 1 313 1 286 1 356 2 291 1 314 1 335 1 202 1 294 1 59 1 61 1 60 1 230 1 232 1 206 1 15 2 274 1 275 1 75 1 209 3 
237 1 167 10 259 6 39 1 217 1 149 1 326 1 311 3 218 1 219 2 29 2 313 3 286 3 356 4 224 2 335 3 249 1 202 3 294 2 58 2 127 1 59 3 252 1 342 1 112 3 88 2 15 9 116 1 75 2 209 19 
167 8 259 2 39 1 217 1 153 1 82 1 311 1 219 3 218 2 104 2 29 3 313 2 286 2 356 6 107 1 224 2 335 2 202 1 294 3 58 2 59 1 127 2 252 2 271 1 342 2 112 1 15 10 116 1 345 1 75 3 209 18 188 1 
167 17 259 5 39 1 217 1 149 1 326 1 153 1 82 1 311 4 218 3 219 3 104 1 29 3 313 4 286 4 107 1 356 6 224 4 335 4 249 1 202 4 294 3 58 3 127 2 59 3 252 1 271 1 342 3 112 2 88 1 15 15 257 1 116 1 345 1 188 1 75 3 209 32 
167 15 259 6 39 1 217 1 149 1 326 1 153 1 82 1 311 3 218 3 219 4 104 2 29 4 313 4 286 4 107 1 356 8 224 4 335 4 249 1 202 3 294 4 58 3 127 2 59 3 252 1 271 1 342 3 112 3 88 1 15 16 257 1 116 1 345 1 188 1 75 4 209 31 
167 4 259 1 39 1 217 1 4 1 218 1 219 1 29 1 355 1 356 2 224 1 335 1 202 1 294 1 58 1 127 1 252 1 63 1 340 1 342 1 112 1 68 1 15 5 16 1 116 1 75 1 209 9 
80 1 3 1 95 1 57 1 184 1 229 1 131 1 176 1 78 1 327 1 
343 1 97 1 
57 1 154 1 184 1 241 1 131 1 176 1 78 1 362 1 327 1 
95 1 57 1 337 1 229 1 131 1 86 1 78 1 87 1 327 1 366 1 80 1 244 1 285 1 162 1 184 1 72 1 176 1 322 2 
95 1 57 1 337 1 229 1 131 1 86 1 78 1 87 1 327 1 366 1 80 1 244 1 285 1 162 1 184 1 72 1 176 1 322 2 
95 1 57 1 337 1 229 1 131 1 86 1 78 1 87 1 327 1 366 1 80 1 244 1 285 1 162 1 184 1 72 1 176 1 322 2 
190 1 270 1 348 1 
190 1 270 1 348 1 
309 1 1 1 
190 1 309 1 1 1 
227 1 199 1 
96 2 97 1 215 2 78 1 327 1 285 1 352 1 353 1 176 1 246 1 199 1 333 1 57 1 293 1 227 1 60 2 337 1 131 1 87 1 343 1 320 1 115 1 206 2 184 1 275 2 72 1 322 1 
270 1 348 1 
190 1 309 1 1 1 
167 1 240 2 40 1 23 1 41 1 215 2 307 1 150 1 44 1 151 1 219 1 29 1 197 1 356 2 332 2 294 1 359 1 62 1 128 1 269 2 12 1 230 1 232 1 90 2 206 2 15 1 185 1 275 2 17 1 75 1 209 2 
55 1 292 1 334 1 303 2 277 1 108 1 62 1 297 1 10 1 269 2 41 1 79 1 195 1 321 1 90 2 370 1 18 1 332 2 93 1 
292 1 200 1 334 1 303 2 277 1 108 1 297 1 62 1 10 1 269 1 41 1 195 1 321 1 90 1 370 1 18 1 332 1 
55 1 277 1 144 1 228 1 62 1 269 1 41 1 12 1 307 1 341 1 90 1 346 1 332 1 265 1 
55 1 292 1 334 1 303 2 277 1 108 1 62 1 297 1 10 1 269 1 41 1 79 1 195 1 321 1 90 1 370 1 18 1 332 1 
331 1 
19 1 234 1 86 1 164 1 282 1 287 1 177 1 
19 1 146 1 148 1 282 1 328 1 156 1 54 1 177 1 360 1 9 1 86 2 87 1 318 1 319 1 36 1 72 1 349 1 
9 1 62 2 269 1 41 1 12 1 307 1 254 1 260 1 318 1 46 1 7 1 90 1 156 1 346 1 54 1 332 1 323 1 
19 8 146 1 22 5 282 5 284 1 328 1 193 1 153 1 192 2 329 1 6 5 311 2 218 1 156 2 313 2 286 2 107 1 224 1 54 2 177 2 335 2 201 1 202 2 9 2 360 3 86 5 87 1 271 1 342 1 318 2 183 1 345 1 72 1 188 1 349 6 
19 2 96 1 145 1 306 1 281 1 215 1 282 2 4 1 173 1 245 1 192 2 262 1 156 1 54 1 335 2 202 1 9 1 60 1 338 1 63 1 87 1 318 1 183 1 68 1 344 1 206 1 275 1 72 1 
19 1 9 1 86 1 282 1 318 1 234 1 156 1 287 1 54 1 177 1 
335 2 202 2 19 5 360 5 22 5 86 5 282 5 192 2 183 1 6 5 311 2 313 2 53 1 286 2 349 10 
328 1 146 1 86 1 72 1 87 1 177 1 
315 1 318 1 266 1 284 1 19 1 146 1 9 1 90 1 156 1 269 1 346 1 54 1 332 1 37 1 
167 1 96 2 23 1 281 2 215 3 41 1 307 1 46 1 219 1 197 1 29 1 263 1 356 2 332 1 248 1 294 1 60 2 62 1 269 1 203 1 12 1 230 1 320 1 344 1 90 1 206 2 163 1 275 3 346 1 209 1 75 1 117 1 
19 1 201 1 360 1 9 1 22 1 86 2 282 2 318 1 284 1 6 1 16 1 156 1 54 1 177 1 349 2 
131 1 327 1 289 1 
131 1 327 1 289 1 
80 1 131 1 85 1 327 1 199 1 
131 1 327 1 289 1 
131 1 327 1 99 1 
131 1 327 1 99 1 
131 1 327 1 99 1 
131 1 327 1 
184 1 176 1 
335 1 202 1 167 3 294 2 59 1 259 2 63 1 340 1 112 1 4 1 68 1 15 4 16 1 219 2 104 1 29 2 355 1 356 4 209 7 75 2 
335 1 167 2 202 1 259 1 63 1 340 1 112 1 4 1 68 1 15 3 16 1 164 1 355 1 209 5 
335 1 167 2 202 1 294 1 59 1 259 2 112 1 299 1 311 1 15 2 219 1 29 1 313 1 286 1 356 2 75 1 209 4 
335 1 202 1 167 4 59 1 259 2 149 1 342 1 112 1 311 1 15 3 218 1 313 1 286 1 224 2 209 7 
167 8 259 3 149 1 4 1 311 2 219 1 104 1 29 1 355 1 313 2 286 2 356 2 224 2 290 1 335 3 202 3 294 1 59 1 251 1 63 1 340 1 342 2 112 2 68 1 15 9 16 1 209 17 75 1 
167 1 209 1 224 1 
15 1 209 1 342 1 
335 1 167 3 202 1 294 1 59 1 259 3 112 2 299 1 15 3 311 1 219 1 29 1 313 1 53 1 286 1 356 2 75 1 209 6 
167 6 259 2 217 1 153 1 311 2 218 1 219 1 29 1 313 2 286 2 356 2 107 1 224 1 335 2 202 2 294 1 59 1 271 1 342 1 112 1 15 6 345 1 209 12 75 1 188 1 
335 1 202 1 167 3 59 1 259 2 63 1 112 1 4 1 68 1 15 3 209 6 
167 2 294 1 250 1 59 1 259 2 340 1 112 1 4 1 68 1 15 1 219 1 104 1 29 1 355 1 356 2 209 3 75 1 
335 2 167 5 202 2 294 1 59 2 259 5 63 1 306 1 217 1 112 3 4 2 68 2 15 5 219 1 29 1 356 2 75 1 209 10 
335 1 294 1 59 1 259 1 217 1 15 2 219 1 29 1 286 1 356 2 75 1 209 2 
335 1 167 2 202 1 294 1 59 1 259 2 217 1 112 1 311 1 15 2 219 1 29 1 313 1 286 1 356 2 75 1 209 4 
249 1 167 2 294 3 250 1 59 1 259 2 217 1 112 1 4 1 68 1 15 1 219 3 104 1 29 3 356 6 209 3 75 3 
167 10 168 1 259 4 217 1 4 1 311 2 218 1 219 4 104 1 29 4 355 1 313 2 286 2 356 8 224 3 335 3 249 1 202 3 294 4 59 2 63 1 110 1 340 1 342 3 112 2 299 1 205 1 68 1 15 11 16 1 75 4 209 21 
167 3 259 1 217 1 4 1 218 1 219 1 29 1 355 1 356 2 224 1 335 1 202 1 294 1 63 1 340 1 271 1 342 1 112 1 68 1 15 4 16 1 209 7 75 1 
167 4 259 2 217 1 149 1 4 1 218 1 219 2 29 2 355 1 313 1 286 1 356 4 224 2 335 2 202 1 294 2 59 1 63 1 340 1 271 1 342 1 112 1 299 1 68 1 15 6 16 1 209 10 75 2 
167 9 259 3 217 1 4 1 153 1 311 2 218 1 219 3 104 1 29 3 355 1 313 2 286 2 356 6 107 1 224 1 335 3 202 3 294 3 59 1 63 1 340 1 271 1 342 1 112 2 299 1 68 1 15 9 16 1 345 1 209 18 75 3 188 1 
167 6 259 4 217 1 4 1 153 1 311 1 218 1 219 3 104 1 29 3 355 1 313 2 286 2 356 6 107 1 224 1 335 3 202 2 294 3 59 2 63 1 340 1 271 1 342 1 112 2 299 1 68 1 15 10 16 1 345 1 209 16 75 3 188 1 
167 3 259 1 217 1 4 1 218 1 219 1 29 1 355 1 356 2 224 1 335 1 202 1 294 1 63 1 340 1 271 1 342 1 112 1 68 1 15 4 16 1 209 7 75 1 
167 6 259 2 217 1 153 1 311 2 218 1 219 1 29 1 313 2 286 2 356 2 107 1 224 1 335 2 202 2 294 1 59 1 271 1 342 1 112 1 15 6 345 1 209 12 75 1 188 1 
167 7 259 3 217 1 4 1 153 1 311 1 218 1 219 4 104 2 29 4 355 1 313 2 286 2 356 8 107 1 224 1 335 3 202 2 294 4 59 1 63 1 340 1 271 1 342 1 112 2 299 1 68 1 15 10 16 1 345 1 209 17 75 4 188 1 
167 7 259 6 217 1 153 1 311 2 218 1 219 4 104 2 29 4 313 3 286 3 356 8 107 1 224 1 335 3 249 1 202 2 294 4 59 3 271 1 342 1 112 3 15 9 345 1 209 16 75 4 188 1 
335 1 167 4 202 1 59 3 259 6 63 1 340 1 112 3 4 3 68 3 15 3 355 2 209 7 
167 7 259 3 217 1 4 1 153 1 311 1 218 1 219 4 104 2 29 4 355 1 313 2 286 2 356 8 107 1 224 1 335 3 249 1 202 2 294 4 59 1 63 1 340 1 271 1 342 1 112 2 68 1 15 10 16 1 345 1 209 17 75 4 188 1 
118 1 320 1 206 1 21 1 279 1 275 1 215 1 
118 1 258 1 317 1 21 1 279 1 215 1 134 1 320 1 206 1 256 1 220 1 275 1 
144 1 90 1 62 1 164 1 269 1 41 1 12 1 346 1 307 1 341 1 332 1 
96 1 60 1 62 1 203 1 269 1 215 2 41 1 12 1 307 1 46 1 320 1 206 1 90 1 275 2 346 1 332 1 38 1 117 1 
76 1 96 1 60 2 62 1 338 1 203 1 269 1 215 2 41 1 12 2 180 1 307 3 161 1 46 2 320 1 206 2 90 1 105 1 275 2 124 1 332 1 38 1 117 1 
96 1 76 1 41 1 215 2 307 3 46 2 105 1 124 1 332 2 60 2 62 1 338 1 111 1 269 2 203 1 298 1 12 2 180 1 161 1 320 1 90 2 206 2 275 2 38 1 
146 1 41 1 307 4 81 1 46 1 7 1 52 1 124 1 332 3 177 1 62 1 269 3 86 1 298 1 12 1 87 2 180 1 161 1 90 3 72 2 372 1 346 1 142 1 
146 1 62 1 86 1 269 3 298 1 179 1 41 1 12 1 180 1 87 2 307 4 161 1 46 1 90 3 7 1 124 1 72 2 52 1 346 1 177 1 332 3 142 1 
90 1 62 1 109 1 269 1 41 1 332 1 
238 1 359 1 240 1 109 1 297 1 62 3 350 1 269 7 41 2 12 2 307 3 25 1 132 1 46 1 90 7 123 1 346 2 247 1 93 1 332 6 323 1 
167 2 96 1 259 1 41 1 215 2 307 1 4 1 46 1 219 2 29 2 197 2 355 1 51 1 356 4 332 1 248 1 335 1 202 1 294 2 60 1 62 1 33 1 63 1 128 1 203 1 269 1 12 1 340 1 230 2 112 1 232 1 320 1 68 1 15 3 206 1 90 1 163 1 16 1 275 2 209 5 75 2 93 1 38 1 117 1 
19 1 146 2 282 1 307 2 352 1 328 1 7 1 156 2 52 1 287 1 198 1 177 1 332 1 54 2 266 1 9 2 86 1 269 1 179 1 87 3 318 2 234 1 90 1 91 1 207 1 72 3 346 1 142 1 
109 1 62 2 269 1 41 1 12 1 307 1 260 1 46 1 174 1 90 1 52 1 332 1 323 1 
267 1 144 1 62 1 269 4 298 1 41 1 12 1 341 1 307 1 90 4 346 1 332 4 93 1 
280 1 62 2 350 1 269 2 41 1 12 1 307 1 161 1 46 1 114 1 90 2 73 1 247 1 332 2 
334 1 303 1 90 1 370 1 62 1 10 1 269 1 41 1 346 1 332 1 
359 1 90 2 62 1 297 1 269 2 41 1 17 1 12 1 307 1 332 2 93 1 
267 1 144 1 359 1 62 2 269 5 41 2 12 2 341 1 307 3 25 1 161 1 90 5 123 1 346 1 332 4 93 1 
267 1 144 1 359 1 62 2 269 5 41 2 12 2 341 1 307 3 161 1 90 5 354 1 123 1 346 1 332 4 93 1 
96 1 60 1 62 1 203 1 269 1 111 1 215 2 41 1 12 1 307 1 46 1 320 1 206 1 90 1 275 2 346 1 332 1 38 1 
238 1 62 2 350 1 269 1 41 1 12 1 307 1 161 1 46 1 90 1 247 1 332 1 323 1 
151 1 211 1 295 1 206 1 330 1 275 1 215 1 150 1 44 1 
330 1 175 1 363 1 
320 1 211 1 295 1 330 1 364 1 
76 1 211 2 295 2 338 1 86 1 171 1 361 1 2 1 363 1 87 2 364 2 352 1 320 1 330 1 105 1 175 1 72 2 177 1 142 1 
194 1 310 1 164 1 133 1 
233 1 158 1 194 1 310 1 137 1 187 1 133 1 
233 1 208 1 302 1 
210 1 158 1 216 1 160 1 133 1 13 1 233 1 194 1 137 1 187 1 
367 1 233 2 158 1 194 1 310 1 137 2 49 1 187 1 133 1 
13 1 5 1 303 1 233 1 158 1 321 1 310 1 137 1 10 1 71 1 187 1 
13 1 233 1 158 1 310 1 137 1 187 1 133 1 
13 1 233 1 158 1 194 1 137 1 187 1 133 2 
158 2 24 1 133 1 231 1 13 1 233 2 310 1 137 2 187 2 94 1 
158 1 336 1 133 1 13 1 5 1 233 3 194 1 137 3 69 1 310 2 49 2 187 1 276 1 
303 2 158 1 10 1 133 1 13 1 233 2 113 1 194 1 321 1 310 1 137 2 370 1 49 1 187 1 18 1 
158 2 336 1 133 1 13 1 367 1 66 1 5 1 233 4 194 1 137 4 310 2 49 2 187 2 
13 1 233 1 158 1 194 1 310 1 137 1 187 1 133 1 
210 2 158 1 336 1 216 1 160 1 133 2 5 1 233 3 194 2 137 3 310 2 49 2 187 1 
158 1 129 1 119 1 365 1 133 1 13 1 233 2 194 1 310 1 137 2 49 1 187 1 
210 1 158 1 216 1 133 1 13 1 233 1 194 1 137 1 264 1 187 1 
358 1 310 2 70 2 34 1 
13 1 233 1 158 1 137 1 165 1 187 1 
13 1 233 2 158 1 194 1 310 1 69 1 137 2 49 1 187 1 133 1 
273 1 
13 1 233 1 158 1 194 1 310 1 137 1 187 1 133 1 
13 1 233 3 158 1 194 1 69 1 310 1 137 3 49 1 42 1 187 1 133 1 
210 1 5 1 336 1 310 1 
310 1 133 1 

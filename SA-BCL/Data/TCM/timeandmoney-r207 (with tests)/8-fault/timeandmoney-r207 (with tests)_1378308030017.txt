#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 353 (13,212) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 353 (13,212) (13,212) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 236 (64,183,241) (64,183,241) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 236 (64,183,241) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (31,283) (52,112,184) (64,183,241) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (94,194) (139,235) (139,235) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 236 (64,183,241) (64,183,241) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 226 111 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 30 111 32 190 249 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 30 111 32 190 249 289 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 236 (52,112,184) (52,112,184) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 236 (52,112,184) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (94,194) (94,194) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 236 (52,112,184) (52,112,184) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 226 111 267 190 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 353 (13,212) (13,212) 356 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 30 111 32 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 30 111 32 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 30 111 32 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 30 111 32 190 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 43 1 301 1 328 5 75 1 362 1 50 1 160 1 210 1 80 9 259 4 91 1 232 2 96 1 307 2 120 2 142 2 143 2 366 2 344 1 292 1 293 2 320 1 17 9 85 1 68 1 224 3 151 6 
133 1 43 1 301 1 328 5 75 1 362 1 50 1 160 1 210 1 80 9 259 4 91 1 232 2 96 1 307 2 120 2 142 2 143 2 366 2 344 1 292 1 293 2 320 1 17 9 85 1 68 1 224 3 151 6 
133 1 43 1 301 1 328 6 75 1 362 1 50 1 160 1 210 1 80 10 259 5 91 1 232 2 96 1 307 2 120 2 142 2 143 2 366 2 344 1 292 1 293 2 320 1 17 10 85 1 68 1 224 4 151 7 
133 1 43 1 301 1 328 4 75 1 362 1 50 1 160 1 210 1 80 7 259 3 91 1 232 1 96 1 307 2 120 2 142 2 143 2 366 2 344 1 292 1 293 2 17 7 85 1 68 1 224 2 151 4 
143 1 366 1 328 3 362 1 50 1 160 1 292 1 80 4 320 1 259 2 91 1 17 4 232 2 120 1 307 1 224 1 151 3 142 1 
189 1 143 1 328 1 47 1 75 1 207 1 50 1 160 1 80 2 293 1 91 1 17 2 85 1 307 1 120 1 142 1 
50 1 160 1 133 1 293 1 80 3 259 1 328 2 17 3 91 1 307 2 151 1 224 1 142 2 
133 1 44 1 328 5 362 1 50 1 160 1 210 1 80 9 259 4 91 1 232 2 307 2 120 1 142 2 143 1 366 1 344 1 292 1 293 1 320 1 17 9 375 1 224 3 151 7 
133 1 44 1 328 5 362 1 50 1 160 1 210 1 80 9 259 4 91 1 232 2 307 2 120 1 142 2 143 1 366 1 344 1 292 1 293 1 320 1 17 9 375 1 224 3 151 7 
319 1 230 1 158 1 
168 2 246 1 158 1 
161 1 119 2 216 2 223 2 331 1 77 2 218 2 309 2 
21 1 250 1 70 2 355 1 177 1 154 2 357 1 113 2 178 1 2 2 72 1 157 1 360 1 74 1 331 1 77 2 333 1 209 1 161 1 119 2 34 1 83 1 309 3 144 1 341 1 167 1 98 1 216 2 218 2 316 1 269 1 348 2 371 1 351 1 223 3 41 1 67 1 
212 1 119 1 216 1 223 1 331 1 77 1 353 1 218 1 309 1 
180 1 228 1 146 1 229 1 77 1 181 1 230 1 158 1 49 1 223 1 66 1 187 1 324 1 309 1 
180 1 228 2 216 1 146 1 229 1 181 2 77 1 230 1 158 1 218 1 119 1 223 1 66 1 187 1 309 1 
228 1 220 1 181 1 285 1 48 1 
118 1 228 2 181 2 230 1 176 1 285 1 158 1 48 1 
228 1 181 1 48 1 
228 1 216 1 331 1 181 1 77 1 218 1 13 1 212 1 119 1 223 1 285 1 353 1 309 1 
158 1 
118 1 290 1 228 2 181 2 230 1 285 1 158 1 48 1 
340 1 327 1 169 1 238 1 288 2 228 5 345 1 181 5 230 1 275 2 158 1 48 2 118 1 57 2 260 1 33 1 284 1 285 2 215 1 
161 1 319 1 
216 1 77 2 218 1 161 2 119 1 86 1 223 2 338 1 309 2 
15 1 39 1 29 1 
21 1 70 1 144 1 63 1 72 1 2 1 157 1 360 1 348 1 371 1 161 1 351 1 223 1 41 1 309 1 83 1 
21 1 144 1 326 1 70 1 72 1 2 1 157 1 216 1 360 1 77 1 218 1 348 1 371 1 15 1 351 1 223 2 41 1 107 1 83 1 309 2 
326 1 313 1 216 4 77 5 276 1 218 4 161 1 119 1 81 1 223 5 338 1 324 1 107 2 309 5 
216 1 223 1 77 1 353 1 218 1 309 1 
161 1 119 1 216 3 223 3 107 1 77 3 218 3 309 3 
216 1 223 1 77 1 353 1 218 1 309 1 
119 1 216 1 66 1 86 1 223 1 338 1 77 1 218 1 309 1 
21 1 250 1 326 1 70 1 154 1 357 1 113 2 178 1 180 1 228 1 72 1 2 1 157 1 360 1 331 1 229 1 77 3 181 1 209 1 161 1 119 2 338 1 187 1 34 1 83 1 309 4 144 1 341 1 167 1 98 1 216 3 146 1 218 3 316 1 128 1 348 1 371 1 351 1 223 4 66 1 41 1 67 1 197 1 107 1 
161 1 216 1 223 2 324 1 77 2 107 1 276 1 218 1 309 2 
326 1 199 1 180 1 228 1 216 3 146 1 229 1 181 1 77 3 158 1 218 3 128 1 119 1 338 1 66 1 223 3 187 1 107 2 309 3 
216 2 77 2 218 2 15 1 39 1 119 1 338 1 223 2 107 1 309 2 
21 1 70 1 144 1 72 1 2 1 157 1 360 1 348 1 371 1 161 1 351 1 223 1 41 1 309 1 83 1 
21 1 70 1 144 1 72 1 2 1 157 1 348 1 243 1 371 1 161 1 351 1 223 1 308 1 309 1 83 1 
226 1 357 1 113 2 178 1 154 3 76 1 6 1 364 1 29 1 185 1 280 1 30 1 214 1 34 1 341 1 312 1 167 2 98 1 36 1 263 1 269 1 15 1 39 1 67 1 
358 1 146 1 216 1 66 1 223 1 77 1 218 1 309 1 
253 1 27 1 
253 1 27 1 
335 1 99 1 
335 1 99 1 
335 1 99 1 
123 1 253 1 27 1 
253 1 369 1 27 1 
335 1 130 1 253 2 99 1 374 1 27 2 20 1 
123 1 253 1 27 1 
123 1 253 1 27 1 
372 1 253 1 27 1 
372 1 253 1 27 1 
372 1 253 1 27 1 
228 1 253 1 5 1 27 1 181 1 77 2 89 1 51 1 161 1 163 1 336 1 233 1 309 2 216 2 314 1 369 1 315 1 370 1 218 2 296 1 223 2 298 1 175 1 354 1 
286 2 311 1 1 1 155 1 228 2 253 2 314 2 27 2 181 2 315 2 158 1 317 1 349 1 336 2 373 1 296 2 298 3 20 1 354 1 
143 1 366 1 120 1 
143 1 47 1 120 1 
143 3 166 1 237 1 366 2 47 1 283 1 
143 2 166 1 237 1 366 1 47 1 31 1 
143 2 166 1 366 1 237 2 47 1 
226 1 327 1 111 1 156 1 228 5 181 5 275 1 230 1 158 1 48 1 51 1 118 1 258 1 90 1 163 1 30 1 57 1 282 1 214 1 59 1 285 4 215 3 234 2 168 1 312 1 288 1 345 1 347 1 193 1 175 1 225 1 
226 3 327 3 111 3 156 3 228 9 181 9 230 1 275 2 28 1 208 1 158 2 48 6 51 4 118 1 90 2 30 3 57 2 214 3 306 1 95 1 33 1 285 7 215 8 168 3 312 3 145 5 288 2 84 1 170 1 345 1 347 1 193 3 220 5 225 2 
226 1 327 1 111 1 156 1 228 3 181 3 230 1 275 1 158 2 51 1 258 1 90 1 30 1 57 1 214 1 33 1 285 2 59 1 215 3 234 1 168 2 312 1 288 1 193 1 246 1 225 1 
226 2 327 2 111 2 156 2 228 4 181 4 230 1 275 1 28 1 208 1 158 2 51 2 258 1 90 1 30 2 57 1 214 2 33 1 59 1 285 3 215 5 234 2 168 3 312 2 288 1 170 1 193 2 246 1 225 1 
21 1 319 1 365 1 
21 1 40 1 
192 1 
21 1 157 1 83 1 
21 1 62 1 
21 1 83 1 
21 3 270 1 157 1 365 2 205 1 83 1 
248 1 167 3 312 1 202 1 154 7 359 1 25 1 263 2 274 1 6 3 334 1 269 4 245 1 173 2 82 1 214 1 377 1 
248 1 167 3 312 1 202 1 154 7 359 1 25 1 263 2 274 1 6 3 334 1 269 4 245 1 173 2 82 1 214 1 377 1 
248 1 167 3 312 1 202 1 154 7 359 1 25 1 263 2 274 1 6 3 334 1 269 4 245 1 173 2 82 1 58 1 214 1 377 1 
248 1 226 3 202 2 357 1 113 2 154 28 111 3 178 1 179 1 25 1 359 2 26 1 274 2 334 2 6 6 30 3 82 1 214 4 262 3 341 1 167 15 312 4 98 1 263 4 12 4 103 1 269 13 318 1 221 1 245 2 173 3 108 1 377 1 109 1 
202 1 357 2 113 4 178 2 154 9 329 1 359 1 25 1 274 1 6 4 334 1 82 1 214 1 341 2 312 1 167 4 98 2 263 3 217 1 269 5 221 1 245 1 173 2 377 1 
236 1 70 1 0 1 2 1 127 1 183 1 241 1 348 1 293 1 80 1 91 1 17 1 196 1 307 1 273 1 142 1 
236 1 70 1 251 1 0 1 2 1 127 1 183 1 37 1 348 1 293 1 80 2 17 2 281 1 196 1 307 1 151 1 142 1 
143 1 144 1 70 1 251 1 0 1 112 1 2 1 47 1 64 1 101 1 127 1 348 1 80 1 293 1 351 1 17 1 281 1 196 1 283 1 151 1 
235 1 70 1 0 2 72 1 2 1 127 2 37 1 348 1 293 2 80 1 17 1 194 1 139 1 196 2 307 1 142 1 261 1 
236 1 70 1 251 1 0 1 2 1 127 1 183 1 241 1 348 1 293 1 80 1 91 1 17 1 196 1 307 1 142 1 
363 1 
327 2 45 2 180 1 228 5 2 2 229 1 181 5 230 1 277 2 275 1 48 6 231 1 49 1 90 1 279 1 138 2 57 1 187 1 188 1 144 1 288 1 146 1 345 1 346 1 191 2 348 2 242 4 106 1 350 1 351 1 294 2 66 1 246 2 21 1 152 1 70 2 300 1 203 1 72 2 77 1 158 2 256 1 118 3 213 1 215 2 83 1 309 1 168 2 129 1 38 1 131 1 222 2 223 1 87 2 324 1 
180 1 228 3 229 1 77 1 181 3 277 1 48 2 49 1 118 1 279 1 213 1 187 1 188 1 309 1 290 1 146 1 346 1 242 2 38 1 223 1 66 1 324 1 
180 1 228 3 229 1 77 1 181 3 230 1 158 1 48 1 49 1 118 1 279 1 138 1 213 1 187 1 188 1 309 1 290 1 146 1 346 1 242 3 38 1 223 1 66 1 324 1 
180 1 228 3 229 1 77 1 181 3 277 1 230 1 158 1 48 2 49 1 118 1 279 1 138 1 213 1 187 1 188 1 309 1 290 1 146 1 346 1 242 3 38 1 223 1 66 1 87 1 324 1 
327 1 180 1 45 2 228 5 229 1 181 5 277 4 230 5 275 1 136 1 48 7 49 1 279 1 138 4 57 1 187 1 188 1 288 1 290 1 146 1 346 1 345 1 191 2 242 6 14 1 106 1 294 2 66 1 150 1 246 2 201 1 203 1 71 1 77 1 158 5 118 3 213 1 215 1 309 1 38 1 223 1 222 2 87 4 324 1 
327 1 180 1 45 2 228 4 229 1 181 4 275 1 277 2 230 1 48 4 49 1 279 1 138 2 57 1 187 1 188 1 288 1 146 1 345 1 346 1 191 2 242 4 106 1 294 2 66 1 246 2 203 1 77 1 158 2 118 2 213 1 215 1 309 1 168 2 38 1 223 1 222 2 131 1 87 2 324 1 
327 1 201 1 203 1 45 2 180 1 228 4 229 1 77 1 181 4 230 1 277 2 275 1 158 1 48 4 49 1 118 2 279 1 138 2 213 1 57 1 187 1 188 1 215 1 309 1 288 1 146 1 346 1 345 1 191 2 242 4 14 1 38 1 106 1 294 2 222 2 223 1 66 1 87 2 324 1 246 2 150 1 
327 1 201 1 203 1 45 2 180 1 228 4 229 1 77 1 181 4 230 1 277 2 275 1 158 1 48 4 49 1 118 2 279 1 138 2 213 1 57 1 187 1 188 1 215 1 309 1 288 1 146 1 346 1 345 1 191 2 242 4 14 1 38 1 106 1 294 2 222 2 223 1 66 1 87 2 324 1 246 2 150 1 
327 1 180 1 228 4 135 1 229 1 77 1 181 4 230 1 277 2 275 1 158 1 48 4 49 1 118 2 279 1 138 2 213 1 337 1 57 1 187 1 188 1 215 1 141 2 309 1 10 2 168 2 288 1 146 1 346 1 345 1 191 2 242 4 38 1 106 1 222 2 223 1 66 1 87 2 324 1 150 1 42 1 
327 1 201 1 203 1 45 2 180 1 71 1 228 4 229 1 77 1 181 4 230 1 275 1 277 3 158 1 48 5 49 1 118 2 279 1 138 3 213 1 57 1 187 1 188 1 215 1 309 1 288 1 146 1 345 1 346 1 191 2 242 5 14 1 38 1 106 1 294 2 222 2 223 1 66 1 87 3 324 1 246 2 150 1 
327 1 201 1 203 1 45 2 180 1 71 1 228 4 229 1 77 1 181 4 230 1 275 1 277 3 158 1 48 5 49 1 118 2 279 1 138 3 213 1 57 1 187 1 188 1 215 1 309 1 288 1 146 1 345 1 346 1 191 2 242 5 14 1 38 1 106 1 294 2 222 2 223 1 66 1 87 3 324 1 246 2 150 1 
327 1 180 1 228 4 229 1 181 4 275 1 277 2 230 1 48 4 49 1 279 1 138 2 57 1 187 1 188 1 141 2 10 2 288 1 146 1 345 1 346 1 191 2 242 4 106 1 66 1 77 1 158 1 118 2 213 1 215 1 309 1 168 2 38 1 223 1 222 2 131 1 87 2 324 1 42 1 
202 1 357 1 113 2 178 1 154 6 25 1 334 1 6 2 29 1 161 2 280 1 82 1 214 1 34 1 341 1 312 1 167 3 98 1 263 2 269 3 15 1 39 1 319 1 173 1 67 1 377 1 
226 2 250 1 177 1 357 2 113 4 178 2 154 14 111 2 88 1 114 1 26 1 6 1 29 10 161 1 30 2 214 2 140 1 34 2 165 1 262 3 341 2 167 8 312 2 98 2 263 1 12 3 102 1 269 6 15 10 318 1 39 2 67 1 
21 1 70 1 326 1 250 1 178 1 113 2 357 1 154 2 177 1 2 1 72 1 3 1 157 1 360 1 77 1 161 1 137 1 83 1 34 1 309 2 165 1 144 1 341 1 167 1 63 1 98 1 216 1 218 1 348 1 269 1 371 1 16 1 39 1 351 1 223 2 41 1 67 1 107 1 
226 2 326 1 177 1 178 3 2 1 334 1 6 4 56 2 9 1 144 2 341 3 98 3 105 1 348 1 15 5 351 2 107 1 67 3 21 2 250 1 70 1 202 1 357 3 113 6 154 18 111 2 72 1 25 1 157 2 360 2 361 2 77 1 29 5 161 2 78 2 30 2 82 1 214 3 309 3 34 3 83 2 165 1 310 2 167 10 312 3 216 1 263 4 218 1 316 2 269 8 371 2 39 5 173 1 223 3 41 2 377 1 
21 3 70 7 250 1 251 1 355 2 300 1 357 2 113 4 178 2 177 1 154 2 2 8 72 2 77 1 182 1 159 1 280 1 309 1 34 2 83 2 144 2 341 2 61 1 167 1 98 2 239 1 216 1 126 1 218 1 129 1 348 8 269 1 244 1 351 2 65 1 223 1 107 1 67 2 273 1 
226 1 165 1 341 1 154 2 111 1 178 1 113 2 357 1 98 1 216 1 77 1 218 1 269 2 305 1 119 1 223 1 338 1 214 1 67 1 309 1 34 1 
226 1 341 1 154 1 178 1 113 2 357 1 98 1 76 1 269 1 280 1 214 1 67 1 34 1 
341 1 312 1 167 2 154 2 178 1 113 2 357 1 98 1 263 1 6 1 29 1 364 1 15 1 39 1 280 1 30 1 67 1 34 1 
226 1 111 1 357 1 113 2 178 1 154 3 6 1 29 1 280 1 30 1 214 1 34 1 341 1 312 1 167 2 98 1 263 1 269 1 15 1 39 1 67 1 
226 1 341 1 154 1 178 1 113 2 357 1 98 1 126 1 76 1 269 1 214 1 67 1 34 1 
341 1 312 1 167 2 154 2 178 1 113 2 357 1 98 1 263 1 126 1 6 1 29 1 364 1 15 1 39 1 30 1 67 1 34 1 
226 1 111 1 357 1 113 2 178 1 154 3 6 1 29 1 30 1 214 1 34 1 341 1 312 1 167 2 98 1 263 1 126 1 269 1 15 1 39 1 67 1 
226 1 154 3 111 1 357 1 113 2 178 1 6 1 29 1 30 1 214 1 34 1 341 1 312 1 167 2 98 1 263 1 269 1 15 1 39 1 67 1 
21 1 70 1 250 1 177 1 154 2 178 1 113 2 357 1 2 1 72 1 157 1 360 1 161 1 83 1 309 1 34 1 144 1 341 1 167 1 98 1 316 1 269 1 348 1 371 1 351 1 223 1 41 1 67 1 
21 1 70 1 250 1 153 1 177 1 154 2 178 1 113 2 357 1 2 1 72 1 157 1 161 1 308 1 83 1 309 1 34 1 144 1 341 1 167 1 98 1 269 1 243 1 348 1 371 1 351 1 223 1 67 1 
226 1 111 1 357 1 113 2 178 1 154 3 6 1 29 1 30 1 214 1 34 1 165 1 341 1 312 1 167 2 98 1 263 1 269 1 15 1 39 1 67 1 
226 1 21 1 70 1 154 3 178 1 113 2 357 1 111 1 2 1 157 1 360 1 361 1 6 1 29 1 30 1 214 1 83 1 309 1 34 1 144 1 341 1 167 2 312 1 98 1 263 1 316 1 269 1 348 1 371 1 15 1 39 1 351 1 223 1 41 1 67 1 273 1 
226 1 357 1 113 2 178 1 111 1 154 2 77 1 119 1 30 1 338 1 214 1 34 1 309 1 165 1 341 1 312 1 167 1 98 1 216 1 147 1 218 1 269 1 223 1 67 1 
249 1 226 2 200 1 357 2 113 4 178 2 154 11 111 2 329 1 26 1 6 2 7 1 257 1 30 2 214 2 262 1 341 2 167 7 312 2 289 1 98 2 263 2 12 2 269 4 219 1 318 1 132 1 198 1 
249 2 226 2 200 1 357 2 113 4 178 2 154 17 111 2 329 1 26 2 6 1 304 1 7 2 257 2 30 2 32 1 214 2 262 2 341 2 312 2 167 10 190 1 289 1 98 2 263 1 12 2 267 1 269 7 221 1 148 1 
249 1 226 2 200 1 357 2 113 4 178 2 154 11 111 2 329 1 26 1 6 1 7 1 257 1 30 2 214 2 262 1 341 2 167 7 312 2 289 1 98 2 263 1 100 1 12 2 269 4 219 1 318 1 198 1 
249 1 226 2 200 1 357 2 113 4 178 2 154 11 111 2 329 1 26 1 6 1 7 1 257 1 30 2 214 2 262 1 341 2 167 7 312 2 289 1 98 2 263 1 100 1 12 2 269 4 219 1 318 1 198 1 
249 1 226 6 202 1 200 1 357 1 113 2 178 1 154 37 111 6 329 1 25 1 26 2 334 1 6 6 304 1 7 2 257 1 30 6 82 1 32 1 214 7 140 2 262 4 341 1 190 1 167 21 312 7 289 1 98 1 263 6 12 4 267 1 269 16 318 2 148 1 173 1 377 1 
349 1 172 1 336 1 373 1 253 1 296 1 314 1 27 1 315 1 20 1 
5 1 369 1 
122 1 79 1 336 1 322 1 253 1 296 1 314 1 27 1 315 1 
123 1 352 1 
372 1 73 1 374 1 
286 1 1 1 155 1 228 1 253 1 314 1 27 1 181 1 315 1 158 1 317 1 349 1 336 1 373 1 296 1 298 2 20 1 354 1 
286 1 1 1 155 1 228 1 253 1 314 1 27 1 181 1 315 1 158 1 317 1 349 1 336 1 373 1 296 1 298 2 20 1 354 1 
286 1 1 1 155 1 228 1 253 1 314 1 27 1 181 1 315 1 158 1 317 1 349 1 336 1 373 1 296 1 298 2 20 1 354 1 
123 1 374 1 352 1 
123 1 374 1 352 1 
372 1 73 1 
372 1 73 1 374 1 
233 1 370 1 
228 1 253 1 5 1 27 1 181 1 77 2 89 1 51 1 161 1 163 1 336 1 233 1 285 1 309 2 286 1 216 2 314 1 369 1 315 1 370 1 218 2 171 1 317 1 296 1 223 2 298 1 175 1 
21 1 250 1 70 2 355 2 178 1 113 2 357 1 177 1 154 2 2 2 24 1 77 2 159 1 53 1 83 1 34 1 309 2 165 1 144 1 341 1 61 1 167 1 367 1 11 1 98 1 268 1 348 2 269 1 351 1 223 2 67 1 
184 1 348 2 236 1 52 1 70 2 117 1 251 1 0 1 2 2 273 1 
325 1 348 1 236 1 52 1 70 1 251 1 0 1 2 1 
348 1 70 1 117 1 0 1 2 1 72 1 194 1 94 1 
184 1 348 1 236 1 52 1 70 1 117 1 251 1 0 1 2 1 
35 1 
327 1 169 1 319 1 260 1 230 1 215 1 158 1 
327 1 203 1 45 1 228 1 181 1 275 1 230 1 158 2 48 1 118 1 57 1 215 1 168 1 288 1 345 1 294 1 246 1 
226 2 327 5 2 1 228 5 4 1 229 2 181 5 230 1 275 3 48 5 90 2 8 2 54 2 57 3 56 2 144 2 288 3 343 1 345 3 193 4 348 1 351 1 195 1 246 4 21 6 70 1 22 2 111 2 72 1 156 4 157 1 158 5 256 1 118 3 30 2 365 2 214 2 121 2 215 8 83 1 168 8 312 2 270 1 321 2 40 3 272 2 
226 1 262 1 327 3 190 1 168 4 111 1 288 1 156 3 26 1 12 1 345 1 267 1 275 1 158 2 193 3 304 1 57 1 214 1 246 2 215 2 
356 1 312 1 201 1 202 1 288 1 228 1 216 1 331 1 345 1 77 1 181 1 275 1 334 1 218 1 13 1 212 1 119 1 57 1 223 1 272 2 353 1 215 2 309 1 
169 1 327 1 288 1 345 1 275 1 230 1 158 1 57 1 260 1 215 1 
226 1 327 1 312 1 168 2 111 1 156 1 158 1 193 1 30 1 272 1 214 1 246 1 215 2 
118 1 228 1 181 1 230 1 158 1 48 1 
21 1 70 4 327 2 300 1 2 4 72 2 228 3 181 3 275 2 278 2 231 1 48 4 256 2 118 2 90 2 211 1 57 2 33 1 215 2 83 1 144 1 287 1 288 2 345 1 129 1 348 4 291 1 350 1 351 1 
21 1 250 1 70 1 154 1 357 1 113 2 178 1 2 1 72 1 157 1 360 1 331 1 77 2 209 1 161 1 119 2 309 3 83 1 34 1 144 1 341 1 167 1 98 1 216 2 218 2 316 1 348 1 371 1 351 1 223 3 41 1 67 1 
168 4 327 2 288 1 156 2 345 1 275 1 230 2 158 4 193 2 256 1 90 1 173 1 57 1 246 2 215 1 
336 1 339 1 315 1 
227 1 349 1 336 1 233 1 315 1 
336 1 339 1 315 1 
336 1 339 1 315 1 
336 1 55 1 315 1 
336 1 55 1 315 1 
336 1 55 1 315 1 
336 1 315 1 
253 1 27 1 
341 2 312 1 167 4 202 1 154 8 178 2 113 4 357 2 98 2 25 1 263 2 6 3 334 1 269 4 221 1 245 1 173 1 82 1 214 1 377 1 
167 3 202 1 312 1 154 6 25 1 263 2 334 1 6 2 269 3 319 1 173 1 82 1 214 1 377 1 
226 1 341 1 167 2 312 1 178 1 113 2 357 1 111 1 154 3 98 1 330 1 263 1 6 1 269 1 30 1 214 1 
262 1 226 1 167 4 312 1 154 6 111 1 263 1 26 1 12 2 6 1 269 2 318 1 30 1 214 1 
226 2 202 2 111 2 154 21 178 2 113 4 357 2 25 1 334 2 6 7 30 2 82 1 214 3 140 1 262 2 341 2 312 3 167 12 98 2 263 5 12 2 102 1 269 9 318 1 221 2 245 2 18 1 173 1 377 1 
167 1 154 1 12 1 
269 1 262 1 154 1 
226 1 341 1 167 3 312 1 357 1 113 2 178 1 154 5 111 1 98 1 330 1 263 2 6 2 269 2 30 1 56 1 214 1 
226 2 154 10 357 1 113 2 178 1 111 2 329 1 26 1 6 1 304 1 30 2 32 1 214 2 262 1 341 1 167 6 190 1 312 2 98 1 263 1 12 1 267 1 269 4 148 1 
312 1 167 3 202 1 154 6 263 1 334 1 6 2 269 3 245 1 82 1 214 1 
341 1 202 1 167 2 154 3 178 1 113 2 357 1 98 1 25 1 263 1 6 2 334 1 269 1 221 1 245 1 18 1 377 1 
341 1 356 1 202 1 167 3 312 1 357 1 113 2 178 1 154 6 98 1 329 1 263 2 334 1 6 4 269 3 245 2 214 1 
226 1 341 1 178 1 113 2 357 1 154 1 329 1 98 1 269 1 214 1 
226 1 341 1 167 2 312 1 178 1 113 2 357 1 111 1 154 3 329 1 98 1 263 1 6 1 269 1 30 1 214 1 
341 3 167 2 202 1 154 3 178 3 113 6 357 3 329 1 98 3 263 1 334 1 6 2 269 1 219 1 221 1 18 1 245 1 
226 3 202 3 357 5 113 10 178 5 154 33 111 3 179 1 329 1 25 1 330 1 26 1 334 3 6 8 30 3 82 2 214 5 262 3 341 5 167 19 312 5 98 5 263 5 12 4 103 1 269 14 219 1 318 1 221 2 245 3 18 1 173 1 108 1 377 1 
202 1 154 8 357 1 113 2 178 1 329 1 25 1 26 1 334 1 6 2 82 1 214 1 262 1 341 1 312 1 167 4 190 1 98 1 263 2 12 1 269 4 173 1 377 1 
226 4 154 18 357 2 113 4 178 2 111 4 329 1 330 1 26 1 6 3 304 1 30 4 32 1 214 4 140 1 262 2 341 2 167 11 190 1 312 4 98 2 263 3 12 2 267 1 269 7 318 1 148 1 
226 2 202 1 154 17 357 3 113 6 178 3 111 2 329 1 25 1 330 1 26 1 334 1 6 3 304 1 30 2 82 1 32 1 214 3 262 1 341 3 167 10 190 1 312 3 98 3 263 3 12 1 267 1 269 7 221 1 148 1 173 1 377 1 
226 2 262 1 341 1 312 2 190 1 167 6 111 2 178 1 113 2 357 1 154 10 329 1 98 1 263 1 26 1 12 1 267 1 6 1 304 1 269 4 148 1 30 2 32 1 214 2 
202 1 154 8 357 1 113 2 178 1 329 1 25 1 26 1 334 1 6 2 82 1 214 1 262 1 341 1 312 1 167 4 190 1 98 1 263 2 12 1 269 4 173 1 377 1 
226 2 154 10 357 1 113 2 178 1 111 2 329 1 26 1 6 1 304 1 30 2 32 1 214 2 262 1 341 1 167 6 190 1 312 2 98 1 263 1 12 1 267 1 269 4 148 1 
226 2 154 11 357 3 113 6 178 3 111 2 329 1 330 1 26 1 6 1 304 1 30 2 32 1 214 2 262 1 341 3 167 7 190 1 312 2 98 3 263 1 12 1 267 1 269 4 221 1 148 1 
226 2 154 11 357 3 113 6 178 3 111 2 329 1 26 1 6 2 304 1 30 2 32 1 214 2 262 1 341 3 167 7 190 1 312 2 98 3 263 2 12 1 267 1 269 4 219 1 221 1 148 1 
167 4 312 1 202 3 154 7 25 1 263 3 334 3 6 6 269 3 245 3 82 1 214 1 377 2 
226 2 154 11 357 3 113 6 178 3 111 2 329 1 26 1 6 1 304 1 30 2 32 1 214 2 262 1 341 3 167 7 190 1 312 2 98 3 263 1 12 1 267 1 269 4 219 1 221 1 148 1 
161 1 93 1 223 1 77 1 324 1 276 1 309 1 
23 1 46 1 240 1 115 1 77 1 276 1 161 1 93 1 223 1 174 1 324 1 309 1 
21 1 348 1 144 1 70 1 300 1 319 1 351 1 2 1 72 1 83 1 129 1 
21 1 144 1 70 1 72 1 2 1 157 1 216 1 77 1 218 1 348 1 371 1 161 1 351 1 223 2 41 1 107 1 83 1 309 2 
21 3 144 1 70 1 62 1 180 1 2 1 157 2 146 1 216 1 77 2 218 2 278 1 348 1 371 1 161 1 351 1 297 1 66 1 223 2 41 1 107 1 83 2 309 2 
21 3 144 1 70 2 62 1 180 1 2 2 157 2 146 1 216 1 266 1 77 2 218 2 278 1 348 2 371 1 161 1 351 1 297 1 66 1 223 2 107 1 308 1 83 2 309 2 
21 4 144 1 70 3 62 1 72 1 228 2 2 3 157 1 124 1 266 1 229 1 332 1 181 2 230 1 158 1 278 1 48 1 348 3 351 1 297 1 40 1 365 1 83 1 
21 4 144 1 70 3 62 1 72 1 228 2 2 3 157 1 266 1 229 1 181 2 230 1 158 1 278 1 48 1 348 3 8 1 351 1 297 1 40 1 365 1 83 1 
348 1 144 1 70 1 351 1 2 1 65 1 
21 3 70 6 144 3 355 1 251 1 72 2 2 7 157 1 239 1 182 1 104 1 159 1 348 7 270 1 244 1 351 2 65 1 273 1 164 1 247 1 83 2 
21 1 70 1 202 1 154 6 178 2 113 4 357 2 2 1 25 1 157 1 360 1 361 1 77 1 6 2 334 1 29 1 161 2 78 1 53 1 82 1 214 1 83 1 34 2 309 2 165 1 144 1 341 2 167 3 312 1 98 2 263 2 216 1 218 1 316 1 269 3 348 1 371 1 15 1 39 1 351 1 173 1 223 2 41 1 67 2 107 1 273 1 377 1 
21 2 70 1 22 1 327 1 72 1 228 3 2 1 229 1 181 3 230 1 275 2 158 1 48 2 118 1 8 1 211 1 57 2 260 1 365 1 285 1 215 1 121 1 169 1 288 2 345 2 348 1 321 1 40 1 
21 2 70 2 144 2 2 2 157 1 348 2 270 1 351 1 195 1 65 1 365 1 273 1 83 1 
21 1 144 1 70 4 300 1 72 1 2 4 266 1 255 1 129 1 348 4 351 1 273 1 83 1 
21 1 70 2 144 2 2 2 157 1 264 1 265 1 278 1 104 1 303 1 348 2 351 1 164 1 83 1 
143 1 348 1 144 1 70 1 351 1 2 1 72 1 47 1 120 1 101 1 
21 1 268 1 348 2 144 1 70 2 251 1 351 1 2 2 273 1 83 1 159 1 
21 3 70 4 144 2 300 1 72 1 2 5 278 1 182 1 255 1 129 1 159 1 348 5 244 1 351 2 273 1 83 2 
21 3 70 4 144 2 300 1 72 1 2 5 116 1 278 1 182 1 255 1 129 1 159 1 348 5 351 2 273 1 83 2 
21 1 144 1 70 1 72 1 2 1 157 1 216 1 77 1 218 1 348 1 371 1 161 1 351 1 223 2 107 1 308 1 83 1 309 2 
21 1 70 1 144 2 2 1 157 1 104 1 278 1 348 1 270 1 351 1 164 1 247 1 83 1 
60 1 161 1 125 1 204 1 376 1 
60 2 180 1 228 2 302 1 146 1 125 1 229 1 204 2 181 2 230 1 158 1 128 1 161 1 271 1 66 1 187 1 285 1 376 2 69 1 
60 1 11 1 367 1 24 1 125 1 77 1 223 1 376 1 309 1 
302 1 125 1 69 1 
50 1 160 1 319 1 328 1 
50 1 160 1 80 1 328 1 17 1 307 1 142 1 
293 1 17 1 127 1 
328 1 50 1 160 1 80 3 91 1 17 3 295 1 186 1 149 1 85 2 307 1 142 1 
50 1 160 1 80 2 328 1 17 2 232 1 307 1 151 1 142 1 
143 1 366 1 80 1 259 1 328 1 17 1 91 1 120 1 307 1 362 1 142 1 
50 1 80 1 328 1 17 1 91 1 307 1 142 1 
50 2 160 1 80 1 17 1 91 1 307 1 142 1 
299 1 328 1 342 1 50 1 80 2 91 1 17 2 19 1 307 2 142 2 
328 2 344 1 50 1 160 1 210 1 80 3 259 1 91 1 17 3 307 1 151 2 224 1 142 1 
143 2 366 1 368 1 328 1 47 1 50 1 160 1 80 2 91 1 17 2 307 1 283 1 120 1 151 1 142 1 
50 1 160 1 80 4 259 1 320 1 328 2 17 4 91 1 232 1 307 2 224 1 151 2 142 2 
50 1 160 1 80 1 328 1 17 1 91 1 307 1 142 1 
328 3 50 2 160 2 80 4 259 1 17 4 85 1 149 1 186 1 92 1 307 1 151 2 224 1 142 1 
252 1 44 1 328 1 254 1 50 1 160 1 80 2 91 1 17 2 307 1 151 1 142 1 
328 1 50 1 160 1 80 3 91 1 17 3 186 1 149 2 85 2 307 1 97 1 142 1 
110 1 328 2 162 1 323 2 
80 1 17 1 91 1 307 1 206 1 142 1 
50 1 160 1 210 1 80 2 328 1 17 2 91 1 307 1 151 1 142 1 
134 1 
50 1 160 1 80 1 328 1 17 1 91 1 307 1 142 1 
50 1 210 1 160 1 80 3 328 1 17 3 91 1 85 1 307 1 151 1 142 1 
259 1 328 1 92 1 224 1 
50 1 328 1 

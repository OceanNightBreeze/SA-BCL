#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 32 380 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
213 2 366 1 186 1 323 1 296 1 297 2 6 1 140 2 245 1 272 6 328 1 330 2 349 1 373 1 333 9 334 1 250 1 306 2 149 2 150 1 151 9 226 3 254 4 206 1 230 1 59 5 124 2 159 1 
213 2 366 1 186 1 323 1 296 1 297 2 6 1 140 2 245 1 272 6 328 1 330 2 349 1 373 1 333 9 334 1 250 1 306 2 149 2 150 1 151 9 226 3 254 4 206 1 230 1 59 5 124 2 159 1 
213 2 366 1 186 1 323 1 296 1 297 2 6 1 140 2 245 1 272 7 328 1 330 2 349 1 373 1 333 10 334 1 250 1 306 2 149 2 150 1 151 10 226 4 254 5 206 1 230 1 59 6 124 2 159 1 
213 2 366 1 186 1 323 1 297 2 6 1 140 2 245 1 272 4 328 1 330 2 349 1 373 1 333 7 334 1 250 1 306 2 149 1 150 1 151 7 226 2 254 3 206 1 230 1 59 4 124 2 159 1 
334 1 250 1 306 1 149 2 150 1 226 1 151 4 254 2 213 1 186 1 296 1 297 1 6 1 140 1 272 3 59 3 124 1 333 4 
334 1 250 1 306 1 150 1 151 2 366 1 136 1 242 1 297 1 5 1 140 1 230 1 59 1 330 1 124 1 333 2 
334 1 250 1 150 1 151 3 226 1 254 1 297 2 206 1 140 2 272 1 330 1 59 2 333 3 
213 1 186 1 297 2 296 1 6 1 140 2 272 7 328 1 330 1 373 1 302 1 333 9 334 1 250 1 306 1 149 2 150 1 254 4 226 3 151 9 206 1 376 1 59 5 124 1 
213 1 186 1 297 2 296 1 6 1 140 2 272 7 328 1 330 1 373 1 302 1 333 9 334 1 250 1 306 1 149 2 150 1 254 4 226 3 151 9 206 1 376 1 59 5 124 1 
358 1 64 1 123 1 
358 1 307 2 311 1 
109 1 114 1 104 2 29 2 377 2 246 2 356 2 200 2 
102 2 270 1 239 1 131 1 104 3 134 1 214 1 216 2 47 1 109 1 244 1 219 1 367 1 28 1 327 1 29 2 246 2 301 1 93 1 147 1 98 1 352 1 114 1 353 1 356 2 200 3 310 1 34 1 176 1 14 1 203 2 35 2 178 1 156 1 377 2 79 2 381 1 
109 1 374 1 104 1 29 1 377 1 246 1 343 1 318 1 356 1 200 1 
71 1 64 1 129 1 104 1 318 1 321 1 200 1 164 1 358 1 9 1 29 1 273 1 92 1 10 1 
64 1 129 1 104 1 356 1 318 1 200 1 164 1 358 1 9 1 29 1 377 1 273 2 246 1 92 1 10 2 
46 1 196 1 122 1 273 1 10 1 
196 1 374 1 64 1 104 1 318 1 356 1 200 1 293 1 46 1 358 1 109 1 29 1 377 1 273 2 141 1 371 1 246 1 343 1 10 2 
196 1 273 1 10 1 
374 1 104 1 318 1 356 1 200 1 46 1 293 1 109 1 29 1 377 1 273 1 343 1 246 1 10 1 
358 1 
46 1 358 1 196 1 64 1 371 1 273 2 355 1 10 2 
72 2 83 2 145 1 196 2 64 1 198 1 199 1 165 1 46 2 358 1 314 1 298 1 369 2 154 1 371 1 273 5 142 1 10 5 224 1 
114 1 123 1 
104 2 114 1 24 1 318 1 356 1 200 2 75 1 243 1 29 2 377 1 246 1 
225 1 21 1 116 1 
102 1 352 1 131 1 114 1 104 1 134 1 353 1 214 1 216 1 200 1 54 1 203 1 244 1 367 1 178 1 381 1 
102 1 225 1 352 1 131 1 104 2 353 1 134 1 214 1 216 1 200 2 203 1 244 1 367 1 178 1 29 1 377 1 246 1 125 1 381 1 351 1 
114 1 104 3 29 3 377 3 246 3 356 1 200 3 351 1 
374 1 104 1 29 1 377 1 246 1 318 1 200 1 
104 1 24 1 356 1 318 1 200 1 243 1 29 1 377 1 246 1 
129 1 131 1 239 1 134 1 243 1 244 1 9 1 246 3 92 1 10 1 351 1 146 1 147 1 98 1 352 1 353 1 356 2 200 4 310 1 203 1 14 1 102 1 270 1 104 4 214 1 318 2 216 1 215 1 164 1 109 1 219 1 367 1 28 1 327 1 29 3 273 1 114 1 34 1 75 1 35 2 178 1 377 3 79 1 125 1 381 1 
71 1 104 2 114 1 318 1 200 2 75 1 29 2 377 1 246 1 351 1 94 1 
161 1 129 1 104 3 356 1 318 1 215 1 200 3 164 1 358 1 243 1 9 1 29 3 377 3 273 1 246 3 125 1 92 1 10 1 351 2 
243 1 225 1 21 1 104 2 29 2 377 2 246 2 356 1 200 2 351 1 
102 1 131 1 352 1 114 1 104 1 134 1 353 1 214 1 216 1 200 1 203 1 244 1 367 1 178 1 381 1 
102 1 131 1 352 1 114 1 104 1 353 1 214 1 216 1 200 1 217 1 203 1 367 1 178 1 340 1 381 1 
127 1 41 1 270 1 239 2 21 2 133 1 106 1 322 1 326 1 327 1 30 1 301 2 171 1 147 1 225 2 98 1 99 1 116 2 34 1 312 1 14 1 177 1 35 2 79 4 
104 1 318 1 200 1 164 1 166 1 29 1 377 1 246 1 
71 1 104 5 114 1 356 1 200 5 188 1 120 1 243 1 29 5 377 4 246 4 125 1 94 1 351 2 
374 1 104 1 29 1 377 1 246 1 318 1 200 1 
84 1 372 1 
84 1 372 1 
22 1 256 1 
22 1 256 1 
22 1 256 1 
84 1 372 1 38 1 
84 1 372 1 350 1 
22 1 84 2 372 2 61 1 108 1 256 1 
84 1 372 1 38 1 
84 1 372 1 38 1 
194 1 84 1 372 1 
194 1 84 1 372 1 
194 1 84 1 372 1 
335 2 112 1 172 1 163 2 74 1 84 2 255 1 108 1 358 1 204 2 273 2 372 2 209 2 232 3 265 1 167 2 223 1 332 1 10 2 
290 1 84 1 104 2 87 1 8 1 29 2 348 1 273 1 246 2 372 1 167 1 350 1 10 1 335 1 336 1 114 1 282 1 255 1 200 2 204 1 377 2 232 1 209 1 210 1 
306 1 213 1 124 1 
306 1 124 1 136 1 
113 1 197 1 213 2 124 3 193 1 136 1 
90 1 113 1 213 1 124 2 193 1 136 1 
113 2 213 1 124 2 193 1 136 1 
290 1 127 1 83 1 40 2 64 1 133 1 3 1 25 1 87 1 322 1 165 1 46 4 68 1 48 2 49 1 298 2 368 1 369 1 371 1 273 5 142 3 10 5 72 1 307 3 96 2 196 1 99 1 311 1 358 2 121 1 155 1 158 1 210 1 
82 1 127 3 83 2 162 5 64 1 133 3 3 2 25 1 87 4 322 3 46 7 165 1 68 3 48 6 49 2 298 6 368 3 369 2 273 9 371 1 142 8 10 9 305 1 95 1 72 2 307 9 96 6 196 6 99 3 309 1 311 3 358 5 314 1 122 5 16 1 361 1 
83 1 40 1 127 1 64 1 133 1 3 1 87 1 322 1 46 2 68 1 48 2 49 1 369 1 368 1 298 2 273 3 142 3 10 3 72 1 96 2 307 4 99 1 311 2 358 3 121 1 314 1 155 1 
82 1 83 1 40 2 127 2 64 1 133 2 3 1 87 2 322 2 46 3 68 2 48 4 49 1 369 1 368 2 298 4 273 4 142 5 10 4 72 1 307 7 96 4 99 2 309 1 311 3 358 4 121 1 314 1 155 1 361 1 
11 1 352 1 123 1 
218 1 352 1 
19 1 
178 1 352 1 
55 1 11 2 178 1 352 3 241 1 381 1 
178 1 352 1 381 1 
352 1 91 1 
160 1 247 1 127 1 277 2 316 1 239 1 32 1 106 3 320 1 174 1 175 1 50 1 285 1 30 2 301 3 79 4 
160 1 247 1 127 1 277 2 316 1 239 1 32 1 106 3 320 1 174 1 175 1 50 1 285 1 30 2 301 3 79 4 
160 1 247 1 127 1 277 2 316 1 239 1 32 1 106 3 320 1 174 1 175 1 50 1 285 1 100 1 30 2 301 3 79 4 
160 3 127 7 316 2 270 2 239 18 133 5 106 15 320 1 322 4 50 7 327 2 368 4 30 8 301 22 144 1 247 1 277 3 98 2 99 4 12 1 32 2 174 1 175 3 153 1 257 2 14 2 35 4 58 4 360 1 36 1 285 2 181 4 379 1 79 40 380 1 39 1 267 1 
160 1 247 1 127 1 277 2 316 1 98 2 270 2 239 2 2 1 32 1 106 4 320 1 175 1 257 1 14 2 35 4 50 1 285 1 327 2 30 3 301 4 143 1 79 6 
102 1 81 1 131 1 213 1 216 1 136 1 88 1 297 1 325 1 192 1 140 1 272 1 370 1 329 1 330 1 333 2 334 1 250 1 306 1 276 1 150 1 197 1 151 2 353 1 279 1 203 1 76 1 59 1 180 1 124 2 
102 1 81 1 131 1 213 1 216 1 136 1 297 1 325 1 192 1 140 1 272 2 370 1 329 1 330 1 333 3 250 1 306 1 276 1 97 1 150 1 197 1 53 1 151 3 353 1 279 1 118 1 203 1 76 1 59 1 124 2 
102 1 131 1 213 1 216 1 136 1 325 1 192 1 272 2 330 1 370 1 329 1 333 2 250 1 276 1 306 1 150 1 53 1 197 1 151 2 353 1 118 1 203 1 76 1 59 1 124 2 
102 1 97 1 131 1 352 1 105 1 151 1 353 1 214 1 216 1 119 1 203 1 297 1 205 1 178 1 220 1 140 1 192 2 101 1 330 2 370 2 329 2 362 1 333 1 
102 1 81 1 131 1 213 1 216 1 136 1 297 1 325 1 192 1 140 1 370 1 329 1 330 1 333 1 334 1 306 1 276 1 197 1 151 1 353 1 279 1 118 1 203 1 76 1 180 1 124 2 
344 1 
83 1 131 1 49 1 191 2 298 2 142 2 10 4 304 1 248 1 195 2 196 6 307 2 252 2 352 1 353 1 311 2 358 1 203 2 313 1 205 1 359 2 15 1 207 2 211 1 102 2 103 1 364 1 214 2 216 2 165 1 69 1 220 1 369 1 70 1 371 3 273 4 111 2 169 1 72 1 278 1 31 1 375 2 117 2 178 1 
103 1 196 2 252 1 31 1 355 1 69 1 70 1 371 1 273 2 10 2 304 1 
103 1 69 1 191 1 70 1 31 1 375 1 273 1 304 1 10 1 
103 1 196 2 252 1 31 1 375 1 355 1 69 1 359 1 191 1 70 1 371 1 273 2 10 2 304 1 
83 1 291 1 293 1 191 3 298 1 142 1 246 1 10 4 304 1 195 2 196 7 252 4 355 1 356 1 200 1 311 2 358 2 359 4 207 2 103 1 364 1 64 2 271 1 104 1 318 1 107 1 165 1 69 1 109 1 369 1 29 1 70 1 273 4 371 3 111 2 169 1 72 1 374 1 337 1 31 1 375 3 117 2 377 1 343 1 233 1 
103 1 83 1 364 1 64 1 165 1 69 1 191 2 369 1 298 1 70 1 371 2 273 3 142 1 111 2 304 1 10 3 169 1 195 2 72 1 196 4 307 2 252 2 31 1 375 2 117 2 311 2 358 2 359 2 15 1 207 2 
103 1 83 1 364 1 64 1 271 1 291 1 165 1 69 1 191 2 369 1 298 1 70 1 371 2 273 3 142 1 111 2 304 1 10 3 169 1 195 2 72 1 196 4 252 2 337 1 31 1 375 2 117 2 311 2 358 1 359 2 207 2 
103 1 83 1 364 1 64 1 271 1 291 1 165 1 69 1 191 2 369 1 298 1 70 1 371 2 273 3 142 1 111 2 304 1 10 3 169 1 195 2 72 1 196 4 252 2 337 1 31 1 375 2 117 2 311 2 358 1 359 2 207 2 
103 1 83 1 64 1 271 1 132 1 44 1 165 1 26 2 69 1 191 2 369 1 298 1 70 1 371 2 273 3 142 1 111 2 304 1 10 3 169 1 72 1 196 4 307 2 252 2 31 1 375 2 283 1 358 1 359 2 207 2 60 2 
103 1 83 1 364 1 64 1 271 1 291 1 107 1 165 1 69 1 191 3 369 1 298 1 70 1 371 2 273 3 142 1 111 2 169 1 304 1 10 3 195 2 72 1 196 5 252 3 31 1 337 1 375 3 117 2 311 2 358 1 359 3 207 2 
103 1 83 1 364 1 64 1 271 1 291 1 107 1 165 1 69 1 191 3 369 1 298 1 70 1 371 2 273 3 142 1 111 2 169 1 304 1 10 3 195 2 72 1 196 5 252 3 31 1 337 1 375 3 117 2 311 2 358 1 359 3 207 2 
103 1 83 1 64 1 132 1 165 1 26 2 69 1 191 2 369 1 298 1 70 1 371 2 273 3 142 1 111 2 304 1 10 3 169 1 72 1 196 4 307 2 252 2 31 1 375 2 358 1 359 2 15 1 207 2 60 2 
160 1 127 1 41 1 270 1 21 1 239 1 106 2 320 1 327 1 30 2 301 2 247 1 147 1 277 1 225 1 98 1 114 1 32 1 116 1 175 1 34 1 14 1 35 2 123 1 79 3 
127 2 237 1 270 2 239 6 21 4 133 1 106 2 322 2 89 1 50 1 28 1 327 2 368 2 30 1 301 8 274 1 144 1 93 1 147 2 225 11 98 2 99 1 114 1 116 11 34 1 14 2 35 4 360 1 58 3 37 1 181 3 79 14 39 1 
102 1 20 1 1 1 270 1 131 1 21 1 239 1 104 2 134 1 214 1 216 1 244 1 367 1 28 1 327 1 29 1 246 1 301 1 274 1 351 1 93 1 147 1 98 1 352 1 114 1 353 1 200 2 34 1 54 1 203 1 14 1 35 2 178 1 377 1 234 1 79 2 125 1 381 1 
127 3 0 2 238 1 239 8 131 2 133 2 134 2 244 2 50 4 246 1 301 9 303 1 93 1 351 1 247 1 147 3 98 3 352 2 99 2 353 2 200 3 310 2 203 3 14 3 160 1 102 3 270 3 317 2 21 7 104 3 214 1 106 8 320 1 216 3 322 2 367 2 28 1 327 3 368 2 29 1 30 4 110 2 274 1 277 1 225 7 114 1 32 1 116 7 175 1 34 3 118 1 35 6 78 1 178 2 377 1 287 2 79 17 125 1 381 2 
102 3 41 1 270 2 131 1 239 1 104 1 214 1 216 3 88 1 28 1 220 1 327 2 29 1 246 1 301 1 351 1 170 1 93 1 147 2 98 2 352 1 353 1 13 1 200 1 34 2 176 1 203 3 14 2 35 4 205 1 178 1 231 1 377 1 79 2 
127 1 270 1 21 1 239 2 104 1 133 1 106 1 185 1 322 1 243 1 327 1 368 1 29 1 30 1 246 1 301 1 274 1 147 1 225 1 98 1 99 1 116 1 356 1 200 1 34 1 14 1 35 2 377 1 79 3 
147 1 127 1 225 1 41 1 98 1 270 1 21 1 116 1 106 1 322 1 34 1 14 1 35 2 50 1 327 1 301 2 79 2 171 1 
147 1 225 1 41 1 98 1 270 1 21 1 99 1 239 2 133 1 116 1 106 1 34 1 14 1 177 1 35 2 327 1 30 1 79 2 
127 1 41 1 270 1 21 2 239 2 133 1 106 2 322 1 50 1 368 1 327 1 30 1 301 2 147 1 225 2 98 1 99 1 116 2 34 1 14 1 35 2 79 4 
147 1 127 1 225 1 98 1 270 1 21 1 116 1 106 1 322 1 34 1 14 1 35 2 50 1 327 1 301 2 79 2 170 1 171 1 
147 1 225 1 98 1 270 1 21 1 99 1 239 2 133 1 116 1 34 1 14 1 177 1 35 2 327 1 79 2 170 1 
147 1 127 1 225 2 98 1 270 1 239 2 99 1 21 2 133 1 116 2 322 1 34 1 14 1 35 2 327 1 368 1 301 2 79 4 170 1 
127 1 270 1 21 2 239 2 133 1 106 2 322 1 50 1 368 1 327 1 30 1 301 2 147 1 225 2 98 1 99 1 116 2 34 1 14 1 35 2 79 4 
102 1 270 1 131 1 239 1 104 1 134 1 214 1 216 1 244 1 367 1 28 1 327 1 301 1 93 1 147 1 98 1 352 1 114 1 353 1 310 1 200 1 34 1 203 1 14 1 35 2 178 1 79 2 381 1 
102 1 270 1 131 1 239 1 104 1 214 1 216 1 217 1 367 1 28 1 327 1 301 1 93 1 147 1 148 1 98 1 352 1 114 1 353 1 200 1 34 1 203 1 14 1 35 2 178 1 340 1 79 2 381 1 
127 1 270 1 21 2 239 2 133 1 106 2 322 1 50 1 368 1 327 1 30 1 301 2 274 1 147 1 225 2 98 1 99 1 116 2 34 1 14 1 35 2 79 4 
102 1 127 1 317 1 270 1 239 2 21 2 131 1 104 1 133 1 134 1 106 2 216 1 322 1 88 1 244 1 50 1 367 1 327 1 368 1 30 1 301 2 147 1 225 2 98 1 99 1 352 1 353 1 116 2 310 1 200 1 34 1 203 1 14 1 35 2 178 1 79 4 381 1 
127 1 270 1 239 1 21 1 104 1 133 1 106 1 322 1 243 1 50 1 327 1 368 1 29 1 246 1 301 2 274 1 147 1 225 1 98 1 99 1 116 1 356 1 200 1 34 1 14 1 35 2 377 1 263 1 79 3 
183 1 127 8 184 1 239 22 130 1 42 1 292 1 133 6 86 1 138 1 50 8 301 26 143 1 300 1 144 2 247 1 52 1 98 4 99 6 257 2 14 4 58 4 360 2 17 1 160 1 270 4 212 1 106 15 319 1 320 1 322 7 67 3 368 7 327 4 30 7 277 1 32 1 175 1 228 1 35 8 181 4 79 48 39 2 
183 1 184 2 127 3 212 1 270 3 239 12 130 1 292 1 42 1 133 2 106 4 319 1 86 1 322 3 67 4 138 1 50 2 327 3 368 3 30 2 143 1 301 14 98 3 99 2 257 2 228 2 14 3 35 6 58 2 181 2 17 1 79 26 266 1 39 2 
183 1 127 8 184 1 239 22 130 1 42 1 292 1 133 6 86 1 138 1 50 7 301 26 143 1 300 1 144 2 247 1 98 4 99 6 257 2 14 4 58 4 360 2 17 1 266 1 160 1 270 4 212 1 106 14 319 1 320 1 322 7 67 3 368 7 327 4 30 7 277 1 32 1 175 1 228 1 35 8 181 4 79 48 39 2 
183 1 127 8 184 1 239 23 130 1 42 1 292 1 133 6 86 1 138 1 50 7 301 27 143 1 300 1 144 2 247 1 98 4 99 6 257 2 14 4 58 4 360 2 17 1 266 1 160 1 270 4 212 1 106 14 319 1 320 1 322 7 67 4 368 7 327 4 30 7 277 1 32 1 175 1 228 1 35 8 181 4 79 50 39 2 
160 1 183 1 184 1 127 8 212 1 270 2 130 1 239 23 292 1 42 1 133 7 319 1 106 14 320 1 86 1 322 7 67 4 138 1 50 7 327 2 368 7 30 7 143 1 301 26 144 2 247 1 277 1 98 2 99 7 32 1 175 1 257 1 228 1 14 2 35 4 360 2 58 4 181 4 17 1 79 49 266 1 39 2 
335 1 204 1 74 1 84 1 262 1 372 1 209 1 167 1 108 1 332 1 
8 1 350 1 
229 1 335 1 204 1 84 1 341 1 43 1 372 1 209 1 167 1 
335 1 112 1 172 1 163 1 74 1 84 1 255 1 108 1 358 1 204 1 273 1 372 1 209 1 232 2 167 1 223 1 332 1 10 1 
335 1 112 1 172 1 163 1 74 1 84 1 255 1 108 1 358 1 204 1 273 1 372 1 209 1 232 2 167 1 223 1 332 1 10 1 
335 1 112 1 172 1 163 1 74 1 84 1 255 1 108 1 358 1 204 1 273 1 372 1 209 1 232 2 167 1 223 1 332 1 10 1 
235 1 61 1 38 1 
235 1 61 1 38 1 
194 1 157 1 
194 1 157 1 61 1 
348 1 282 1 
290 1 163 1 104 2 84 1 87 1 46 1 8 1 29 2 348 1 273 1 372 1 246 2 167 1 350 1 223 1 331 1 10 1 335 1 336 1 114 1 282 1 200 2 204 1 377 2 209 1 232 1 210 1 
235 1 38 1 
194 1 157 1 61 1 
102 2 270 1 131 1 239 1 104 2 216 2 66 1 137 1 28 1 327 1 29 2 301 1 274 1 93 1 275 1 147 1 51 1 98 1 352 1 353 1 13 1 200 2 34 1 176 2 203 2 14 1 35 2 178 1 179 1 315 1 79 2 
102 2 249 1 81 1 306 1 197 1 131 1 213 1 353 1 85 1 216 2 136 1 88 1 118 1 203 2 325 1 76 1 259 1 370 1 124 2 
102 1 249 1 81 1 306 1 197 1 131 1 213 1 353 1 216 1 136 1 118 1 201 1 203 1 325 1 76 1 370 1 124 2 
102 1 131 1 352 1 115 1 105 1 353 1 214 1 216 1 203 1 205 1 178 1 220 1 259 1 370 1 
102 1 249 1 81 1 306 1 197 1 131 1 213 1 353 1 85 1 216 1 136 1 118 1 203 1 325 1 76 1 259 1 370 1 124 2 
152 1 
358 1 64 1 298 1 123 1 142 1 199 1 224 1 
83 1 364 1 64 1 165 1 298 1 369 1 371 1 273 1 142 1 10 1 195 1 72 1 307 1 196 1 117 1 311 1 358 2 
83 4 127 2 131 3 133 2 135 2 88 1 48 6 49 2 190 2 9 2 347 1 298 8 91 2 142 9 10 5 196 5 96 6 307 12 251 1 11 2 352 10 99 2 353 4 199 1 311 6 357 2 203 3 358 8 55 1 56 1 211 1 102 3 268 2 64 2 214 1 216 3 365 2 322 2 165 4 68 2 218 3 369 4 368 2 273 5 371 3 168 1 224 1 72 4 338 2 178 3 339 2 342 1 287 2 381 3 
183 1 83 2 127 2 64 2 212 1 42 1 133 2 135 1 86 1 322 2 294 1 165 2 68 3 138 1 48 5 49 1 369 2 298 5 368 2 273 1 371 1 142 8 10 1 72 2 196 1 307 6 96 5 99 2 311 3 358 5 58 1 261 1 181 1 39 1 211 1 
160 1 127 1 72 1 83 1 291 1 133 1 32 1 175 1 165 1 68 1 298 2 369 1 273 1 142 2 10 1 380 1 
72 1 83 1 64 1 199 1 165 1 358 1 369 1 298 1 142 1 224 1 
127 2 96 5 307 10 99 2 133 2 135 1 322 2 311 5 68 2 358 5 48 5 368 2 298 5 287 1 142 5 
358 1 196 1 64 1 273 1 371 1 10 1 
126 1 102 4 83 2 131 1 214 2 216 4 165 1 295 1 49 2 220 1 369 2 298 2 371 2 273 3 142 2 10 3 248 1 72 2 196 4 251 2 278 1 352 1 353 1 203 4 205 1 314 1 178 1 342 1 211 2 
102 1 270 1 239 1 131 1 104 3 134 1 214 1 216 1 109 1 244 1 219 1 367 1 28 1 327 1 29 2 246 2 147 1 98 1 352 1 114 1 353 1 356 2 200 3 310 1 34 1 14 1 203 1 35 2 178 1 377 2 79 1 381 1 
72 1 83 1 307 4 96 2 277 1 64 2 311 2 165 1 358 4 48 2 49 1 298 2 369 1 142 1 211 1 
335 1 281 1 209 1 
335 1 253 1 282 1 209 1 332 1 
335 1 281 1 209 1 
335 1 281 1 209 1 
363 1 335 1 209 1 
363 1 335 1 209 1 
363 1 335 1 209 1 
335 1 209 1 
84 1 372 1 
247 1 160 1 127 1 277 1 98 2 270 2 239 2 32 1 106 3 320 1 175 1 257 1 14 2 35 4 50 1 327 2 30 2 301 3 79 5 
160 1 247 1 127 1 277 1 239 1 123 1 30 2 32 1 301 2 106 2 79 3 320 1 175 1 
127 1 98 1 270 1 239 2 99 1 133 1 106 1 345 1 322 1 14 1 35 2 327 1 368 1 30 1 301 2 79 4 
127 2 99 2 239 6 133 2 106 4 322 2 50 2 360 1 58 2 368 2 30 2 181 2 301 6 79 12 144 1 39 1 
160 3 127 5 237 1 270 2 239 13 133 3 106 13 320 1 322 2 50 6 368 2 327 2 30 7 301 14 144 1 247 1 277 1 98 2 99 2 32 2 175 3 257 2 14 2 35 4 58 2 360 1 36 1 181 2 79 27 380 1 
58 1 239 1 79 1 
301 1 181 1 79 1 
127 1 270 1 98 1 239 3 99 1 133 1 345 1 106 3 322 1 14 1 35 2 50 2 327 1 368 1 30 1 287 1 301 3 79 6 
183 1 127 2 270 1 212 1 239 6 42 1 133 2 106 2 86 1 322 2 138 1 50 1 327 1 368 2 30 1 143 1 301 6 98 1 99 2 14 1 35 2 58 1 181 1 79 12 39 1 
127 1 32 1 301 1 79 1 
160 1 247 1 98 1 270 1 239 2 106 2 320 1 175 1 257 1 14 1 35 2 50 1 36 1 327 1 30 1 301 1 79 3 
160 1 127 2 270 1 98 1 239 3 133 1 32 1 106 4 175 1 14 1 35 2 50 2 327 1 30 2 143 1 301 4 79 7 380 1 
127 1 98 1 270 1 106 1 322 1 14 1 35 2 50 1 327 1 143 1 301 2 79 2 
127 1 98 1 270 1 239 2 99 1 133 1 106 2 322 1 14 1 35 2 50 1 327 1 368 1 30 1 143 1 301 2 79 4 
160 1 98 3 270 3 239 2 106 2 175 1 257 1 14 3 35 6 50 1 36 1 327 3 30 1 300 1 143 1 301 1 79 3 
160 2 127 6 270 5 239 16 133 4 345 1 106 12 320 1 322 4 50 6 327 5 368 4 30 6 300 1 143 1 301 17 144 1 247 1 277 1 98 5 99 4 12 1 32 2 175 2 257 2 14 5 35 10 36 1 360 1 58 4 181 4 379 1 79 33 39 1 267 1 
160 1 127 1 270 1 239 2 106 2 86 1 320 1 327 1 30 2 143 1 301 3 247 1 277 1 98 1 32 1 175 1 14 1 35 2 58 1 181 1 79 5 39 1 
160 1 127 2 270 2 239 3 345 1 106 3 320 1 86 1 322 1 50 1 327 2 368 1 30 2 143 1 301 5 144 1 247 1 277 1 98 2 32 1 175 1 14 2 35 4 58 2 181 1 79 8 39 1 
160 1 183 1 127 3 270 3 212 1 239 8 42 1 133 2 345 1 106 5 320 1 86 1 322 2 138 1 50 1 327 3 368 2 30 4 143 1 301 8 247 1 277 1 98 3 99 2 32 1 175 1 257 1 14 3 35 6 58 1 181 1 79 16 39 1 
160 1 183 1 127 3 270 3 212 1 239 5 42 1 133 1 345 1 106 4 320 1 86 1 322 2 138 1 50 2 327 3 368 2 30 2 143 1 301 9 247 1 277 1 98 3 99 1 32 1 175 1 257 1 14 3 35 6 58 1 181 1 79 14 39 1 
160 1 127 1 270 1 239 2 106 2 86 1 320 1 327 1 30 2 143 1 301 3 247 1 277 1 98 1 32 1 175 1 14 1 35 2 58 1 181 1 79 5 39 1 
183 1 127 2 270 1 212 1 239 6 42 1 133 2 106 2 86 1 322 2 138 1 50 1 327 1 368 2 30 1 143 1 301 6 98 1 99 2 14 1 35 2 58 1 181 1 79 12 39 1 
160 1 183 1 127 3 212 1 270 4 239 6 42 1 133 1 345 1 106 5 320 1 86 1 322 2 138 1 50 2 327 4 368 2 30 3 143 1 301 9 247 1 277 1 98 4 99 1 32 1 175 1 257 2 14 4 35 8 58 1 181 1 79 15 39 1 
183 1 127 2 270 3 212 1 239 4 42 1 133 1 106 2 86 1 322 2 138 1 50 2 327 3 368 2 143 1 300 1 301 7 98 3 99 1 257 1 14 3 35 6 58 1 181 1 79 11 39 1 
247 1 160 2 127 3 277 1 239 2 133 1 32 2 106 7 320 1 175 2 50 3 30 4 301 5 79 7 380 1 
160 1 183 1 127 3 212 1 270 4 239 6 42 1 133 1 106 4 320 1 86 1 322 2 138 1 50 1 327 4 368 2 30 3 143 1 300 1 301 9 247 1 277 1 98 4 99 1 32 1 175 1 257 2 14 4 35 8 58 1 181 1 79 15 39 1 
71 1 7 1 114 1 104 1 29 1 200 1 94 1 
236 1 114 1 308 1 318 1 189 1 75 1 324 1 264 1 
102 1 203 1 205 1 178 1 220 1 131 1 352 1 353 1 123 1 214 1 216 1 
102 1 352 1 131 1 114 1 104 2 353 1 214 1 216 1 200 2 203 1 244 1 367 1 178 1 29 1 377 1 246 1 381 1 351 1 
102 1 268 1 131 1 104 1 318 2 216 1 164 1 244 1 367 1 29 1 91 1 246 1 92 1 351 1 251 1 352 3 114 1 353 1 200 1 75 1 203 1 178 2 377 1 381 2 
102 1 268 1 131 1 104 1 318 2 216 1 164 1 367 1 29 1 91 1 246 1 92 1 351 1 251 1 352 3 114 1 353 1 200 1 75 1 203 1 178 2 340 1 377 1 381 2 
102 3 268 1 64 1 131 1 23 1 214 1 45 1 216 3 218 1 9 1 273 2 91 1 10 2 196 1 251 1 11 1 352 4 353 1 203 3 358 1 178 1 18 1 381 1 
102 3 268 1 196 1 251 1 64 1 11 1 352 4 131 1 353 1 214 1 216 3 358 1 203 3 218 1 190 1 9 1 178 1 91 1 273 2 18 1 381 1 10 2 
102 1 203 1 131 1 353 1 286 1 216 1 
102 2 65 1 352 1 131 1 353 2 214 1 216 2 88 1 203 2 55 1 284 1 258 1 178 1 231 1 381 1 
160 1 102 1 127 1 270 2 317 1 21 1 239 1 131 1 104 2 134 1 106 2 320 1 216 1 88 1 244 1 367 1 327 2 29 1 30 2 110 1 246 1 301 2 274 1 351 1 247 1 147 2 51 1 225 1 277 1 98 2 352 1 114 1 353 1 116 1 32 1 200 2 310 1 175 1 34 2 14 2 203 1 35 4 178 1 377 1 79 3 381 1 
102 1 83 2 64 1 214 1 216 1 365 1 165 2 46 1 218 1 190 1 9 1 298 1 369 2 273 3 371 1 142 1 10 3 224 1 72 2 196 2 11 1 352 2 199 1 358 1 203 1 357 1 338 1 342 1 
102 2 11 1 352 2 131 1 353 2 216 2 88 1 203 2 55 1 178 1 286 1 168 1 381 1 
102 4 352 1 131 1 353 1 214 1 216 4 227 1 88 1 203 4 205 1 220 1 178 1 18 1 
102 2 251 1 128 1 352 1 131 1 353 2 216 2 203 2 139 1 284 1 258 1 178 1 303 1 381 1 
102 1 203 1 306 1 76 1 131 1 353 1 214 1 124 1 216 1 136 1 
118 1 102 2 203 2 178 1 131 1 352 1 353 1 179 1 216 2 275 1 88 1 
102 4 251 1 352 3 131 2 353 2 214 1 216 5 227 1 88 1 203 5 205 1 77 1 220 1 178 2 57 1 179 1 
102 4 251 1 352 3 131 2 353 2 214 1 216 5 227 1 88 1 187 1 203 5 205 1 220 1 178 2 57 1 179 1 
102 1 352 1 131 1 114 1 104 2 353 1 214 1 216 1 200 2 203 1 367 1 178 1 29 1 340 1 377 1 246 1 381 1 351 1 
102 1 251 1 65 1 352 1 131 1 353 2 216 1 203 1 55 1 284 1 258 1 178 1 381 1 
104 1 29 1 315 1 299 1 346 1 200 1 66 1 137 1 288 1 
202 1 63 1 346 1 
114 1 299 1 173 1 346 1 288 1 
63 1 64 1 129 1 104 1 318 2 215 1 346 1 164 1 46 1 293 1 109 1 9 1 29 1 273 2 246 1 299 1 92 1 10 2 374 1 356 1 173 1 200 1 33 1 202 1 358 1 377 1 343 1 288 1 
250 1 150 1 123 1 59 1 
250 1 297 1 150 1 140 1 151 1 59 1 333 1 
192 1 151 1 330 1 
334 1 73 1 250 1 150 1 151 3 366 2 4 1 297 1 140 1 260 1 59 1 333 3 
250 1 297 1 149 1 150 1 140 1 151 2 272 1 59 1 333 2 
334 1 306 1 297 1 140 1 213 1 254 1 151 1 59 1 124 1 186 1 333 1 
334 1 250 1 297 1 140 1 151 1 59 1 333 1 
334 1 250 2 297 1 150 1 140 1 151 1 333 1 
334 1 250 1 151 2 240 1 297 2 140 2 59 1 221 1 80 1 333 2 
334 1 250 1 150 1 151 3 226 1 254 1 297 1 140 1 328 1 272 2 59 2 373 1 333 3 
334 1 250 1 306 1 150 1 197 1 151 2 213 1 354 1 136 1 297 1 140 1 272 1 59 1 124 2 333 2 
334 1 250 1 149 1 150 1 151 4 226 1 254 1 297 2 296 1 140 2 272 2 59 2 333 4 
334 1 250 1 297 1 150 1 140 1 151 1 59 1 333 1 
269 1 250 2 150 2 151 4 226 1 254 1 366 1 4 1 297 1 260 1 140 1 272 2 59 3 333 4 
334 1 250 1 150 1 151 2 297 1 27 1 140 1 272 1 59 1 302 1 182 1 333 2 
334 1 250 1 150 1 151 3 366 2 4 2 297 1 260 1 140 1 59 1 378 1 333 3 
59 2 280 1 289 2 62 1 
334 1 297 1 140 1 151 1 222 1 333 1 
334 1 250 1 297 1 150 1 140 1 151 2 272 1 328 1 59 1 333 2 
208 1 
334 1 250 1 297 1 150 1 140 1 151 1 59 1 333 1 
334 1 250 1 150 1 151 3 366 1 297 1 140 1 272 1 328 1 59 1 333 3 
269 1 254 1 226 1 59 1 
250 1 59 1 

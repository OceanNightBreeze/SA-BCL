#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 72 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 221 182 128 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
241 2 358 2 330 1 18 1 242 9 1 2 73 1 217 6 4 1 52 1 179 1 223 1 192 1 364 1 196 1 341 1 41 1 82 1 201 9 157 4 15 1 45 2 350 1 373 2 324 2 326 2 327 3 92 5 
241 2 358 2 330 1 18 1 242 9 1 2 73 1 217 6 4 1 52 1 179 1 223 1 192 1 364 1 196 1 341 1 41 1 82 1 201 9 157 4 15 1 45 2 350 1 373 2 324 2 326 2 327 3 92 5 
241 2 358 2 330 1 18 1 242 10 1 2 73 1 217 7 4 1 52 1 179 1 223 1 192 1 364 1 196 1 341 1 41 1 82 1 201 10 157 5 15 1 45 2 350 1 373 2 324 2 326 2 327 4 92 6 
241 2 358 2 330 1 18 1 242 7 1 1 73 1 217 4 4 1 179 1 223 1 192 1 364 1 196 1 341 1 41 1 82 1 201 7 157 3 15 1 45 2 350 1 373 2 324 2 326 2 327 2 92 4 
358 1 330 1 241 1 41 1 242 4 1 2 82 1 201 4 157 2 217 3 4 1 52 1 373 1 324 1 326 1 192 1 327 1 92 3 
358 1 250 1 242 2 82 1 201 2 73 1 4 1 350 1 45 1 373 1 351 1 324 1 192 1 326 1 140 1 92 1 
242 3 82 1 201 3 157 1 217 1 4 1 45 1 373 2 179 1 324 2 192 1 327 1 92 2 
358 1 241 1 330 1 41 1 242 9 1 2 82 1 201 9 83 1 157 4 59 1 217 7 4 1 52 1 45 1 373 2 179 1 223 1 324 2 326 1 192 1 364 1 92 5 327 3 
358 1 241 1 330 1 41 1 242 9 1 2 82 1 201 9 83 1 157 4 59 1 217 7 4 1 52 1 45 1 373 2 179 1 223 1 324 2 326 1 192 1 364 1 92 5 327 3 
321 1 136 1 370 1 
321 1 163 1 291 2 
336 2 6 2 191 2 125 1 19 1 13 2 309 2 86 2 
120 1 292 1 293 1 172 1 267 2 19 1 336 3 219 1 6 3 246 1 8 1 191 2 125 1 77 1 309 2 79 1 54 1 180 1 40 1 57 1 367 2 60 1 130 1 13 2 348 1 227 2 86 2 285 1 160 2 235 2 374 1 239 1 116 1 240 1 144 1 264 1 119 1 
336 1 24 1 6 1 81 1 191 1 125 1 13 1 377 1 309 1 86 1 
343 1 56 1 81 1 13 1 148 1 300 1 336 1 21 1 321 1 337 1 6 1 204 1 110 1 136 1 
343 1 56 2 81 1 13 1 148 1 86 1 21 2 336 1 321 1 6 1 204 1 191 1 110 1 136 1 309 1 
21 1 56 1 251 1 31 1 165 1 
103 1 21 2 321 1 56 2 136 1 251 1 165 1 311 1 
21 1 56 1 165 1 
24 1 56 1 81 1 251 1 317 1 13 1 86 1 21 1 336 1 6 1 191 1 125 1 377 1 309 1 
321 1 
21 2 321 1 56 2 136 1 251 1 165 1 311 1 161 1 
55 2 56 5 294 1 251 2 295 1 297 1 21 5 321 1 259 1 136 1 275 2 352 1 139 1 37 1 195 1 165 2 311 1 356 1 169 2 
19 1 370 1 
253 1 146 1 13 2 19 2 86 1 336 2 6 2 191 1 309 1 
178 1 281 1 159 1 
120 1 40 1 367 1 60 1 19 1 227 1 336 1 219 1 6 1 8 1 235 1 111 1 374 1 240 1 264 1 144 1 
120 1 40 1 367 1 60 1 333 1 13 1 227 1 86 1 178 1 336 2 219 1 6 2 8 1 323 1 235 1 374 1 309 1 240 1 144 1 264 1 
215 1 253 1 13 5 19 1 333 1 86 4 134 1 336 5 337 1 6 5 323 2 191 1 137 1 309 4 
336 2 6 2 81 1 13 2 377 1 50 1 309 2 86 2 
336 3 6 3 191 1 323 1 19 1 13 3 309 3 86 3 
336 1 6 1 81 1 13 1 377 1 309 1 86 1 
336 1 6 1 81 1 191 1 253 1 146 1 13 1 309 1 86 1 
120 1 292 1 267 1 19 1 333 1 148 1 151 1 336 4 21 1 219 1 6 4 8 1 191 2 153 1 125 1 77 1 309 3 79 1 54 1 180 1 343 1 40 1 56 1 57 1 81 1 367 1 253 1 60 1 130 1 13 3 348 1 227 1 86 3 285 1 160 2 204 1 323 1 110 1 235 1 374 1 116 1 240 1 144 1 264 1 
336 2 337 1 6 2 323 1 19 1 13 2 309 1 86 1 134 1 
343 1 56 1 81 1 253 1 106 1 333 1 13 3 148 1 86 3 21 1 336 3 151 1 321 1 6 3 204 1 191 1 110 1 323 2 309 3 
253 1 13 2 159 1 86 2 178 1 336 2 6 2 323 1 191 1 309 2 
120 1 40 1 367 1 60 1 19 1 227 1 336 1 219 1 6 1 8 1 235 1 374 1 240 1 264 1 144 1 
40 1 367 1 60 1 19 1 227 1 334 1 336 1 219 1 6 1 8 1 235 1 240 1 264 1 144 1 329 1 
357 1 281 2 57 1 155 1 267 4 254 1 369 1 42 1 159 2 348 2 270 1 160 2 178 2 361 1 230 1 354 1 239 2 116 1 77 1 154 1 79 1 180 1 54 1 312 1 
336 1 6 1 81 1 148 1 13 1 309 1 86 1 50 1 
173 1 272 1 
173 1 272 1 
306 1 93 1 
306 1 93 1 
306 1 93 1 
173 1 353 1 272 1 
173 1 158 1 272 1 
306 1 276 1 173 2 376 1 93 1 272 2 
173 1 353 1 272 1 
173 1 353 1 272 1 
104 1 173 1 272 1 
104 1 173 1 272 1 
104 1 173 1 272 1 
173 1 19 1 360 1 272 1 21 1 336 2 301 1 6 2 9 1 309 2 23 1 197 1 56 1 107 1 158 1 13 2 255 1 86 2 371 1 25 1 286 1 114 1 184 1 375 1 
197 2 265 2 95 1 56 2 58 1 173 2 331 1 107 3 347 1 268 1 255 1 371 2 272 2 162 1 21 2 321 1 276 1 9 2 184 2 
358 1 241 1 326 1 
358 1 351 1 326 1 
344 1 241 2 358 3 351 1 248 1 228 1 
344 1 241 1 362 1 358 2 351 1 248 1 
241 1 344 2 358 2 351 1 248 1 
212 1 28 1 297 1 360 1 301 1 21 5 275 1 195 3 154 1 23 1 311 1 102 1 55 1 56 5 251 4 369 1 42 1 230 1 163 1 259 2 321 2 65 2 136 1 234 1 138 2 206 1 165 1 290 1 263 2 291 3 94 1 169 1 
212 3 297 1 31 5 177 1 21 9 302 1 152 5 275 2 195 8 154 3 23 4 311 1 55 2 56 9 181 1 251 7 226 1 369 3 42 3 230 3 163 3 259 6 321 5 65 6 136 1 234 2 237 1 138 6 206 2 165 6 291 9 68 1 94 1 356 1 169 2 
212 1 28 1 21 3 275 1 195 3 154 1 23 1 102 1 55 1 56 3 251 2 369 1 42 1 230 1 321 3 163 2 259 2 65 2 136 1 234 1 138 2 206 1 263 1 291 4 169 1 356 1 
212 2 28 1 21 4 302 1 275 1 195 5 154 2 23 2 102 1 55 1 56 4 181 1 251 3 369 2 42 2 230 2 321 4 163 3 259 4 65 4 136 1 234 1 237 1 138 4 206 1 263 2 291 7 169 1 356 1 
225 1 60 1 370 1 
222 1 60 1 
33 1 
40 1 60 1 144 1 
174 1 60 1 
40 1 60 1 
150 1 40 1 225 2 60 3 61 1 144 1 
171 1 155 2 105 1 216 1 108 1 267 7 369 1 348 3 245 1 318 1 271 1 258 1 361 3 230 1 233 1 27 2 239 4 
171 1 155 2 105 1 216 1 108 1 267 7 369 1 348 3 245 1 318 1 271 1 258 1 361 3 230 1 233 1 27 2 239 4 
171 1 155 2 105 1 216 1 108 1 267 7 369 1 348 3 245 1 318 1 271 1 258 1 361 3 189 1 230 1 233 1 27 2 239 4 
171 1 267 6 216 1 245 2 149 1 361 2 221 1 273 1 77 1 79 1 54 1 57 1 155 1 182 1 105 1 108 1 348 3 318 1 160 2 325 1 27 1 207 1 261 1 239 3 
171 1 57 2 155 3 105 1 108 1 216 1 267 9 369 1 348 4 245 1 271 1 160 4 44 1 258 1 361 4 230 1 233 1 27 2 207 1 239 5 115 1 77 2 79 2 54 2 
241 1 358 2 242 2 217 1 3 1 4 1 175 1 7 1 35 1 192 1 365 1 342 1 367 1 82 1 201 2 132 1 227 1 257 1 228 1 45 1 373 1 351 1 164 1 235 1 324 1 326 1 141 1 92 1 240 1 264 1 
241 1 358 2 242 3 217 2 4 1 175 1 7 1 35 1 365 1 342 1 367 1 82 1 201 3 132 1 227 1 257 1 228 1 45 1 373 1 351 1 164 1 235 1 324 1 326 1 142 1 92 1 67 1 117 1 240 1 264 1 
358 2 241 1 242 2 217 2 4 1 175 1 35 1 342 1 367 1 82 1 201 2 132 1 227 1 257 1 228 1 45 1 351 1 164 1 235 1 326 1 92 1 67 1 117 1 240 1 264 1 
40 1 242 1 367 1 201 1 60 1 32 1 132 2 227 1 244 1 257 2 64 1 45 2 219 1 373 1 324 1 235 1 224 1 142 1 47 1 279 1 240 1 264 1 342 2 
241 1 358 2 242 1 175 1 7 1 35 1 192 1 365 1 342 1 367 1 201 1 132 1 227 1 257 1 228 1 45 1 373 1 351 1 164 1 235 1 324 1 326 1 141 1 67 1 240 1 264 1 
51 1 
0 1 213 2 2 1 219 2 336 1 337 1 6 1 275 1 343 1 40 1 81 1 13 1 227 2 232 4 136 1 234 1 235 2 91 2 46 1 143 2 47 1 291 2 240 1 297 1 148 1 298 1 244 1 20 1 299 1 300 1 21 5 98 1 303 1 363 2 307 1 195 2 100 2 22 1 101 1 311 3 199 2 55 1 314 1 56 5 367 2 60 1 63 2 321 2 163 2 259 2 204 1 110 1 165 6 264 1 169 1 
343 1 0 1 56 3 81 1 148 1 13 1 298 1 20 1 300 1 161 1 21 3 336 1 337 1 6 1 98 1 204 1 232 2 110 1 307 1 100 1 165 2 311 1 
343 1 0 1 199 1 56 3 81 1 148 1 13 1 298 1 20 1 300 1 161 1 21 3 336 1 321 1 337 1 6 1 98 1 204 1 232 3 110 1 136 1 307 1 165 1 311 1 
0 1 148 1 298 1 20 1 300 1 336 1 21 3 6 1 337 1 98 1 307 1 100 1 311 1 343 1 199 1 56 3 81 1 13 1 161 1 321 1 204 1 232 3 110 1 136 1 91 1 165 2 
0 1 213 2 332 1 218 1 336 1 6 1 337 1 275 1 343 1 81 1 13 1 232 6 136 5 91 4 143 2 297 1 148 1 298 1 20 1 299 1 300 1 21 5 98 1 363 2 307 1 195 1 100 4 366 1 310 1 311 3 199 4 55 1 56 5 314 1 63 2 161 1 321 5 259 1 163 2 204 1 110 1 165 7 209 1 169 1 
0 1 213 2 297 1 148 1 298 1 20 1 299 1 300 1 21 4 336 1 337 1 6 1 98 1 363 2 275 1 307 1 195 1 100 2 311 2 343 1 199 2 55 1 314 1 56 4 81 1 63 2 13 1 321 2 163 2 259 1 204 1 232 4 110 1 136 1 91 2 165 4 46 1 143 2 291 2 169 1 
0 1 213 2 297 1 148 1 218 1 298 1 299 1 20 1 300 1 336 1 21 4 6 1 337 1 98 1 363 2 275 1 307 1 195 1 100 2 366 1 311 2 343 1 199 2 55 1 314 1 56 4 81 1 63 2 13 1 321 1 163 2 259 1 204 1 232 4 110 1 136 1 91 2 165 4 209 1 143 2 169 1 
0 1 213 2 297 1 148 1 218 1 298 1 299 1 20 1 300 1 336 1 21 4 6 1 337 1 98 1 363 2 275 1 307 1 195 1 100 2 366 1 311 2 343 1 199 2 55 1 314 1 56 4 81 1 63 2 13 1 321 1 163 2 259 1 204 1 232 4 110 1 136 1 91 2 165 4 209 1 143 2 169 1 
343 1 0 1 56 2 81 1 72 1 148 1 13 1 298 1 20 1 300 1 21 2 336 1 337 1 6 1 98 1 204 1 232 2 110 1 307 1 
0 1 213 2 297 1 332 1 148 1 218 1 298 1 299 1 20 1 300 1 336 1 21 4 6 1 337 1 98 1 363 2 275 1 307 1 195 1 100 3 366 1 311 2 343 1 199 3 55 1 314 1 56 4 81 1 63 2 13 1 321 1 163 2 259 1 204 1 232 5 110 1 136 1 91 3 165 5 209 1 143 2 169 1 
0 1 213 2 297 1 332 1 148 1 218 1 298 1 299 1 20 1 300 1 336 1 21 4 6 1 337 1 98 1 363 2 275 1 307 1 195 1 100 3 366 1 311 2 343 1 199 3 55 1 314 1 56 4 81 1 63 2 13 1 321 1 163 2 259 1 204 1 232 5 110 1 136 1 91 3 165 5 209 1 143 2 169 1 
0 1 213 2 48 2 297 1 30 1 148 1 298 1 20 1 300 1 21 4 336 1 337 1 6 1 98 1 275 1 307 1 195 1 100 2 311 2 343 1 199 2 55 1 314 1 56 4 81 1 13 1 287 2 321 1 259 1 204 1 232 4 110 1 136 1 91 2 165 4 46 1 143 2 291 2 169 1 
171 1 267 6 19 2 271 1 178 1 361 2 77 1 79 1 54 1 180 1 281 1 57 1 155 2 108 1 254 1 369 1 159 1 370 1 348 3 160 2 258 1 230 1 233 1 27 1 239 3 116 1 
292 1 212 2 172 1 267 12 19 1 178 6 361 1 221 2 305 1 11 1 77 2 308 1 154 1 79 2 54 2 180 1 281 6 282 1 81 1 57 2 155 1 369 2 348 5 42 2 159 2 160 4 230 1 203 1 325 2 113 1 239 7 116 2 262 1 
292 1 172 1 267 2 19 1 333 1 336 1 6 1 34 1 305 1 77 1 309 1 79 1 54 1 180 1 80 1 81 1 57 1 13 1 159 1 348 1 86 1 256 1 160 2 323 1 239 1 116 1 262 1 
120 2 212 2 171 1 172 1 69 2 267 20 216 4 333 1 271 1 335 1 178 7 219 1 336 3 6 3 8 2 339 2 77 3 79 3 180 3 281 7 40 2 12 2 13 1 348 10 227 3 42 2 86 1 87 1 285 2 230 3 233 1 235 3 239 10 240 2 144 2 292 1 19 2 361 8 99 1 309 1 154 2 53 2 54 3 367 3 57 3 155 4 108 1 60 2 369 3 159 7 160 6 258 1 323 1 27 1 374 2 262 1 116 3 67 1 264 2 
172 1 267 2 3 1 219 2 336 1 6 1 274 1 77 2 79 2 180 2 40 3 13 1 348 1 227 7 86 1 235 7 239 1 47 1 240 4 144 1 186 1 293 2 292 1 96 1 244 1 194 1 309 1 54 2 57 2 367 6 316 1 60 4 254 1 160 4 202 1 323 1 208 1 116 2 166 1 168 1 67 1 264 3 328 1 
212 1 267 3 178 1 361 1 336 1 6 1 191 1 77 1 309 1 154 1 79 1 54 1 180 1 281 1 57 1 155 1 253 1 369 1 13 1 159 1 14 1 42 1 348 2 86 1 160 2 230 1 239 1 116 1 262 1 
281 1 57 1 216 1 267 2 254 1 369 1 159 1 42 1 160 2 178 1 361 1 354 1 239 2 116 1 77 1 79 1 180 1 54 1 
281 1 57 1 155 1 267 2 254 1 159 1 348 2 160 2 178 1 361 1 230 1 116 1 77 1 154 1 79 1 180 1 54 1 312 1 
212 1 267 4 216 1 178 2 361 2 77 1 154 1 79 1 54 1 180 1 281 2 57 1 155 1 254 1 369 1 42 1 159 2 348 2 160 2 230 1 239 2 116 1 
281 1 57 1 216 1 267 2 369 1 159 1 42 1 160 2 178 1 361 1 354 1 208 1 239 2 116 1 77 1 79 1 180 1 54 1 
281 1 57 1 155 1 267 2 159 1 348 2 160 2 178 1 361 1 230 1 208 1 116 1 77 1 154 1 79 1 180 1 54 1 312 1 
212 1 267 4 216 1 178 2 361 2 77 1 154 1 79 1 54 1 180 1 281 2 57 1 155 1 369 1 42 1 159 2 348 2 160 2 230 1 208 1 239 2 116 1 
212 1 267 4 216 1 178 2 361 2 77 1 154 1 79 1 54 1 180 1 281 2 57 1 155 1 369 1 42 1 159 2 348 2 160 2 230 1 239 2 116 1 
120 1 292 1 172 1 267 2 19 1 219 1 336 1 6 1 8 1 77 1 79 1 180 1 54 1 40 1 367 1 57 1 60 1 227 1 348 1 285 1 160 2 235 1 374 1 239 1 116 1 240 1 144 1 264 1 
40 1 367 1 60 1 227 1 334 1 336 1 219 1 6 1 8 1 235 1 289 1 240 1 264 1 144 1 329 1 
212 1 267 4 216 1 178 2 361 2 77 1 154 1 79 1 54 1 180 1 281 2 57 1 155 1 369 1 42 1 159 2 348 2 160 2 230 1 239 2 116 1 262 1 
120 1 212 1 69 1 216 1 267 4 3 1 178 2 361 2 336 1 6 1 8 1 77 1 154 1 79 1 180 1 54 1 281 2 40 1 367 1 57 1 155 1 60 1 369 1 348 2 159 2 42 1 227 1 285 1 160 2 230 1 235 1 374 1 239 2 116 1 240 1 144 1 264 1 
187 1 212 1 216 1 267 3 178 1 361 1 336 1 6 1 191 1 77 1 154 1 309 1 79 1 54 1 180 1 281 1 57 1 253 1 369 1 13 1 348 1 42 1 159 1 86 1 160 2 230 1 239 2 116 1 262 1 
212 3 296 1 216 2 267 25 74 4 361 5 221 2 190 1 77 2 154 3 79 2 128 1 54 2 39 2 313 1 282 1 57 2 368 1 155 3 182 2 84 1 369 3 348 13 42 3 319 1 160 4 135 1 230 3 325 3 90 1 239 12 115 1 
212 3 71 1 296 1 216 2 267 26 5 1 74 4 361 4 221 2 190 1 77 3 154 2 79 3 128 1 54 3 39 1 313 2 57 3 155 2 182 2 84 1 369 3 348 12 42 3 319 1 160 6 135 2 229 1 230 2 325 2 207 2 260 1 239 14 115 1 
212 4 171 1 71 1 267 41 216 3 5 1 74 4 271 1 221 3 77 3 79 3 128 1 39 1 282 1 182 3 84 1 42 4 348 21 135 1 230 5 229 1 231 1 233 1 239 20 296 1 361 7 190 1 154 4 54 3 313 2 57 3 155 4 368 1 108 1 369 5 319 1 160 6 258 1 325 4 27 1 207 1 260 1 115 1 
212 4 171 1 71 1 296 1 216 2 267 38 5 1 74 4 271 1 361 6 221 3 190 1 77 4 154 3 79 4 128 1 54 4 39 1 313 2 282 1 57 4 368 1 155 4 182 3 108 1 84 1 369 5 348 18 42 4 319 1 160 8 258 1 135 1 229 1 230 4 231 1 233 1 27 1 325 4 207 2 260 1 239 20 115 1 
212 5 171 3 71 1 296 1 267 52 216 5 5 1 74 4 271 3 361 12 221 3 190 1 11 1 77 2 154 5 79 2 128 1 54 2 39 1 313 1 282 1 57 2 155 7 182 2 108 3 84 1 369 8 348 24 42 5 319 1 160 4 258 3 135 1 229 1 230 8 233 3 27 3 325 3 207 1 260 1 239 28 115 1 
197 1 162 1 276 1 173 1 9 1 277 1 347 1 184 1 371 1 272 1 
158 1 286 1 
197 1 36 1 173 1 9 1 156 1 131 1 184 1 371 1 272 1 
353 1 280 1 
104 1 126 1 376 1 
197 1 265 1 95 1 56 1 173 1 331 1 107 2 347 1 268 1 255 1 371 1 272 1 162 1 21 1 321 1 276 1 9 1 184 1 
197 1 265 1 95 1 56 1 173 1 331 1 107 2 347 1 268 1 255 1 371 1 272 1 162 1 21 1 321 1 276 1 9 1 184 1 
197 1 265 1 95 1 56 1 173 1 331 1 107 2 347 1 268 1 255 1 371 1 272 1 162 1 21 1 321 1 276 1 9 1 184 1 
353 1 376 1 280 1 
353 1 376 1 280 1 
104 1 126 1 
104 1 126 1 376 1 
114 1 25 1 
265 1 173 1 268 1 19 1 360 1 272 1 336 2 21 1 301 1 6 2 9 1 193 1 309 2 23 1 197 1 56 1 251 1 107 1 158 1 13 2 86 2 371 1 25 1 286 1 114 1 184 1 375 1 
292 1 293 2 172 1 266 1 267 2 359 1 336 2 6 2 338 1 274 1 10 1 77 1 79 1 54 1 180 1 40 1 315 1 57 1 367 2 316 1 60 1 13 2 227 2 348 1 160 2 235 2 239 1 116 1 262 1 240 1 264 1 
241 1 358 2 145 1 367 2 3 1 227 2 175 1 228 1 351 1 7 1 164 1 235 2 326 1 240 1 67 1 264 1 249 1 342 1 118 1 
241 1 358 2 367 1 227 1 175 1 228 1 349 1 351 1 7 1 164 1 235 1 326 1 67 1 240 1 264 1 342 1 118 1 
40 1 367 1 60 1 227 1 244 1 88 1 64 1 219 1 235 1 47 1 240 1 264 1 249 1 342 1 
241 1 358 2 145 1 367 1 227 1 175 1 228 1 351 1 7 1 164 1 235 1 326 1 240 1 67 1 249 1 264 1 342 1 118 1 
43 1 
321 1 259 1 294 1 136 1 139 1 195 1 370 1 
55 1 56 1 297 1 63 1 299 1 21 1 321 2 259 1 163 1 136 1 363 1 275 1 195 1 165 1 291 1 311 1 169 1 
212 2 2 1 70 2 174 2 3 1 219 1 124 2 222 3 275 4 278 2 40 3 225 2 346 2 284 2 85 1 227 3 133 2 42 2 230 2 136 2 234 2 235 3 138 6 355 1 139 1 240 4 291 12 144 3 17 2 294 1 297 4 188 1 150 1 21 5 304 2 195 9 154 2 53 2 311 3 55 4 56 5 367 3 60 10 62 1 369 2 163 6 321 8 259 8 65 6 110 2 66 1 165 5 264 3 169 4 
55 1 182 1 297 1 259 1 221 1 321 1 163 1 65 1 275 1 325 1 138 1 195 1 291 2 128 1 169 1 
171 1 243 1 297 1 21 1 336 1 6 1 191 1 275 1 125 1 195 1 366 1 309 1 24 1 55 1 56 1 81 1 108 1 284 1 369 1 317 1 13 1 86 1 259 1 233 1 377 1 169 1 
55 1 294 1 297 1 259 1 321 1 275 1 136 1 139 1 195 1 169 1 
212 2 284 2 369 2 42 2 259 5 163 5 321 5 230 2 124 1 65 5 138 5 195 5 154 2 53 1 291 10 
21 1 321 1 56 1 136 1 165 1 311 1 
185 1 96 1 2 2 297 1 244 1 219 2 21 3 303 1 275 2 195 2 101 1 311 2 40 2 55 2 56 3 367 4 60 2 62 2 227 4 259 2 205 1 235 4 234 2 355 1 166 1 165 4 168 1 47 1 240 3 144 1 264 2 356 1 328 1 169 2 
120 1 292 1 267 1 19 1 219 1 336 3 6 3 8 1 191 2 125 1 77 1 309 2 79 1 180 1 54 1 40 1 57 1 367 1 130 1 60 1 13 2 348 1 227 1 86 2 285 1 160 2 235 1 374 1 116 1 240 1 264 1 144 1 
55 1 2 1 297 1 163 2 259 2 321 4 65 2 27 1 275 1 234 1 136 2 138 2 195 1 291 4 169 1 
197 1 167 1 371 1 
197 1 162 1 176 1 25 1 371 1 
197 1 167 1 371 1 
197 1 167 1 371 1 
197 1 29 1 371 1 
197 1 29 1 371 1 
197 1 29 1 371 1 
197 1 371 1 
173 1 272 1 
171 1 57 2 155 2 267 8 216 1 108 1 369 1 348 4 160 4 271 1 258 1 361 3 230 1 233 1 27 1 207 1 239 4 77 2 79 2 54 2 
171 1 155 2 108 1 267 6 369 1 348 3 370 1 271 1 258 1 361 2 230 1 233 1 27 1 239 3 
212 1 57 1 155 1 267 4 216 1 369 1 348 2 42 1 160 2 361 2 230 1 239 2 77 1 154 1 79 1 170 1 54 1 
221 1 325 1 182 1 267 2 239 1 348 1 
212 2 171 2 243 1 267 23 216 1 271 1 361 5 221 2 11 1 77 1 154 2 308 1 79 1 54 1 282 1 57 1 155 4 108 2 369 4 42 2 348 12 160 2 258 1 230 4 233 2 27 1 325 2 207 1 239 11 
325 1 267 1 348 1 
221 1 267 1 239 1 
212 1 57 1 155 2 267 6 216 1 369 1 348 3 42 1 160 2 361 3 230 1 239 3 77 1 154 1 79 1 53 1 54 1 170 1 
212 2 71 1 216 1 267 12 5 1 361 2 221 1 77 1 154 2 79 1 128 1 54 1 57 1 155 1 182 1 369 2 348 6 42 2 160 2 230 2 229 1 325 1 260 1 239 6 115 1 
171 1 155 1 267 6 108 1 216 1 369 1 348 3 361 2 230 1 233 1 239 3 
171 1 57 1 155 1 216 1 108 1 267 3 348 2 160 2 271 1 258 1 361 2 207 1 261 1 239 1 77 1 79 1 54 1 
171 1 155 1 243 1 108 1 267 5 369 1 348 3 361 1 230 1 233 1 239 2 
57 1 267 2 216 1 369 1 42 1 160 2 361 1 239 2 115 1 77 1 79 1 54 1 
212 1 57 1 155 1 267 4 216 1 369 1 348 2 42 1 160 2 361 2 230 1 239 2 115 1 77 1 154 1 79 1 54 1 
171 1 57 3 368 1 155 1 267 3 108 1 216 1 348 2 160 6 361 2 207 1 261 1 239 1 115 1 77 3 79 3 54 3 
171 2 243 1 216 2 267 12 149 1 271 1 361 4 221 1 77 4 79 4 54 4 57 4 368 1 155 2 182 1 108 2 369 1 348 7 160 8 258 1 230 1 233 1 325 1 207 1 261 1 239 5 115 1 170 1 
212 2 171 2 71 1 243 1 216 3 267 21 5 1 271 1 361 7 221 1 77 2 154 1 79 2 128 1 54 2 57 2 155 4 182 1 108 2 369 4 348 9 42 2 160 4 258 1 230 3 229 1 233 2 27 1 325 1 207 1 260 1 239 12 115 1 
212 2 171 1 71 1 216 1 267 17 5 1 271 1 361 4 221 1 77 3 154 1 79 3 128 1 54 3 57 3 155 3 182 1 108 1 369 3 348 7 42 2 160 6 258 1 229 1 230 2 233 1 27 1 325 1 207 1 260 1 239 10 115 1 170 1 
212 2 171 1 71 1 216 1 267 19 5 1 271 1 361 4 221 1 77 3 154 2 79 3 128 1 54 3 57 3 155 3 182 1 108 1 369 3 348 10 42 2 160 6 258 1 229 1 230 3 233 1 27 1 325 1 207 1 260 1 239 9 115 1 170 1 
212 2 171 1 71 1 216 2 267 17 5 1 271 1 361 5 221 1 77 3 154 1 79 3 128 1 54 3 57 3 155 3 182 1 108 1 369 3 348 7 42 2 160 6 258 1 230 2 229 1 233 1 27 1 325 1 207 1 260 1 239 10 115 1 170 1 
212 2 171 2 71 1 243 1 216 3 267 21 5 1 271 1 361 7 221 1 77 2 154 1 79 2 128 1 54 2 57 2 155 4 182 1 108 2 369 4 348 9 42 2 160 4 258 1 230 3 229 1 233 2 27 1 325 1 207 1 260 1 239 12 115 1 
212 2 71 1 216 1 267 12 5 1 361 2 221 1 77 1 154 2 79 1 128 1 54 1 57 1 155 1 182 1 369 2 348 6 42 2 160 2 230 2 229 1 325 1 260 1 239 6 115 1 
212 2 171 1 71 1 216 2 267 18 5 1 271 1 361 5 221 1 77 4 154 1 79 4 128 1 54 4 57 4 155 3 182 1 108 1 369 3 348 8 42 2 160 8 258 1 229 1 230 2 233 1 27 1 325 1 207 2 260 1 239 10 115 1 170 1 
212 3 71 1 216 3 267 16 5 1 361 6 221 1 77 4 154 2 79 4 128 1 54 4 57 4 368 1 155 3 182 1 369 3 348 7 42 3 160 8 229 1 230 2 325 1 207 2 260 1 239 9 115 1 
171 3 155 3 267 7 108 3 216 3 369 1 348 4 271 1 258 2 361 6 230 1 233 1 239 3 
212 2 171 1 71 1 216 1 267 18 5 1 271 1 361 4 221 1 77 4 154 1 79 4 128 1 54 4 57 4 368 1 155 3 182 1 108 1 369 3 348 8 42 2 160 8 258 1 229 1 230 2 233 1 27 1 325 1 207 2 260 1 239 10 115 1 
336 1 6 1 337 1 340 1 19 1 13 1 134 1 
345 1 19 1 121 1 13 1 109 1 134 1 336 1 220 1 337 1 6 1 97 1 340 1 
219 1 40 1 367 1 235 1 60 1 370 1 227 1 47 1 244 1 240 1 264 1 
120 1 40 1 367 1 60 1 19 1 13 1 227 1 86 1 336 2 219 1 6 2 8 1 323 1 235 1 309 1 240 1 144 1 264 1 
120 1 174 1 19 1 148 1 336 2 6 2 8 1 309 2 343 1 40 2 367 1 81 1 60 3 62 1 13 2 227 1 133 1 86 1 323 1 235 1 240 1 264 1 144 2 
174 1 19 1 148 1 334 1 122 1 336 2 6 2 8 1 309 2 343 1 40 2 367 2 81 1 60 3 62 1 13 2 227 2 133 1 86 1 323 1 235 2 240 1 264 1 144 2 
40 1 56 2 225 1 367 3 174 1 60 4 62 1 49 1 133 1 227 3 122 1 219 1 21 2 321 1 110 1 222 1 136 1 235 3 238 1 165 1 240 1 144 1 264 1 
40 1 56 2 225 1 367 3 174 1 60 4 62 1 133 1 227 3 122 1 219 1 21 2 321 1 304 1 110 1 222 1 136 1 235 3 165 1 240 1 144 1 264 1 
367 1 235 1 236 1 227 1 240 1 264 1 
186 1 293 1 3 1 150 1 219 2 274 1 247 1 194 1 40 2 367 5 60 3 227 6 202 1 235 6 168 1 240 3 67 1 264 2 144 1 328 1 
120 1 171 1 69 1 266 1 267 6 3 1 271 1 178 1 336 2 6 2 8 1 77 2 79 2 180 2 281 1 40 1 12 1 13 1 227 1 348 3 86 1 285 1 230 1 233 1 235 1 239 3 240 1 144 1 19 2 361 2 309 1 54 2 367 1 57 2 155 2 60 1 108 1 369 1 159 1 160 4 258 1 323 1 27 1 374 1 262 1 116 2 264 1 
17 1 294 1 70 1 297 2 219 1 21 3 304 1 222 1 275 2 195 1 278 1 311 1 55 2 56 3 225 1 367 1 251 1 60 2 227 1 321 1 259 1 110 1 136 1 235 1 139 1 355 1 165 2 169 2 
40 1 225 1 367 2 60 2 3 1 85 1 227 2 150 1 235 2 236 1 240 2 144 1 264 1 
38 1 40 1 367 4 60 1 3 1 227 4 244 1 122 1 219 1 235 4 47 1 240 1 264 1 
40 1 367 2 96 1 60 1 62 1 227 2 99 1 235 2 166 1 168 1 240 2 144 1 264 1 328 1 
358 1 219 1 351 1 367 1 235 1 326 1 227 1 175 1 240 1 264 1 
40 1 274 1 367 2 235 2 60 1 10 1 3 1 227 2 240 1 67 1 264 1 
38 1 40 2 367 4 60 3 62 1 3 1 227 5 244 1 202 1 219 1 274 1 235 5 194 1 47 1 240 2 264 2 
38 1 40 2 214 1 367 4 60 3 62 1 3 1 227 5 244 1 219 1 274 1 235 5 194 1 47 1 240 2 264 2 
40 1 367 1 60 1 19 1 13 1 227 1 86 1 334 1 336 2 219 1 6 2 8 1 323 1 235 1 309 1 240 1 144 1 264 1 
40 1 367 1 60 1 62 1 227 1 150 1 235 1 247 1 168 1 240 2 144 1 264 1 328 1 
26 1 252 1 112 1 147 1 19 1 
343 1 56 2 81 1 251 1 252 2 283 1 147 1 19 1 148 1 269 1 21 2 151 1 321 1 26 2 204 1 110 1 136 1 112 2 129 1 
315 1 147 1 13 1 359 1 336 1 338 1 6 1 26 1 112 1 
283 1 147 1 269 1 
82 1 370 1 92 1 4 1 
373 1 242 1 82 1 324 1 201 1 92 1 4 1 
45 1 201 1 257 1 
200 1 242 3 82 1 201 3 73 2 4 1 288 1 373 1 324 1 192 1 92 1 127 1 
373 1 242 2 1 1 82 1 324 1 201 2 217 1 92 1 4 1 
241 1 358 1 41 1 242 1 201 1 157 1 373 1 324 1 192 1 326 1 92 1 
373 1 242 1 82 1 324 1 201 1 192 1 92 1 
373 1 242 1 82 2 324 1 201 1 192 1 4 1 
242 2 82 1 201 2 373 2 123 1 16 1 324 2 192 1 92 1 210 1 
242 3 82 1 201 3 157 1 217 2 4 1 373 1 223 1 324 1 192 1 364 1 327 1 92 2 
358 2 241 1 242 2 82 1 201 2 217 1 4 1 228 1 351 1 373 1 322 1 324 1 192 1 326 1 92 1 
242 4 1 1 82 1 201 4 157 1 217 2 4 1 52 1 373 2 324 2 192 1 327 1 92 2 
373 1 242 1 82 1 324 1 201 1 192 1 92 1 4 1 
211 1 242 4 82 2 201 4 157 1 73 1 217 2 4 2 288 1 373 1 324 1 327 1 92 3 127 1 
198 1 242 2 82 1 201 2 59 1 217 1 183 1 4 1 373 1 324 1 192 1 92 1 
242 3 82 1 201 3 73 2 4 1 288 1 373 1 324 1 76 1 192 1 92 1 127 2 
320 1 372 1 92 2 75 2 
373 1 242 1 324 1 201 1 192 1 89 1 
373 1 242 2 82 1 324 1 201 2 192 1 217 1 364 1 92 1 4 1 
78 1 
373 1 242 1 82 1 324 1 201 1 192 1 92 1 4 1 
242 3 82 1 201 3 73 1 217 1 4 1 373 1 324 1 192 1 364 1 92 1 
211 1 157 1 92 1 327 1 
82 1 92 1 

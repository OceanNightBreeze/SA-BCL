#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 127 269 37 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 127 247 312 57 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 127 233 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 127 269 117 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 127 269 64 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 127 233 4 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) (209,277) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) 98 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (182,198,253,309) (209,277) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (182,198,253,309) (182,198,253,309) (209,277) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 127 223 50 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 127 138 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 127 269 37 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 127 138 83 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 127 269 37 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 127 269 301 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 127 269 301 74 109 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 127 269 301 74 109 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 127 269 301 74 236 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 127 138 83 208 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 127 138 83 208 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 127 269 301 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 127 269 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 127 223 50 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 127 269 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 127 (204,320) 267 148 (87,144) 111 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 127 269 180 261 11 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 127 (238,287) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 127 (204,320) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 127 (204,320) 267 148 (87,144) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
163 1 70 1 119 1 202 1 3 1 291 1 153 1 123 1 274 1 125 1 6 1 89 1 278 1 59 1 
169 1 
127 1 269 1 274 1 37 1 202 1 3 1 
127 1 247 1 274 3 202 2 9 1 3 3 57 1 78 1 312 1 80 1 61 1 
299 1 
179 1 169 1 265 2 
123 2 315 1 6 2 125 1 119 2 70 2 278 2 59 2 
93 1 0 1 197 1 240 1 134 1 284 1 201 1 244 2 204 1 105 1 213 2 6 2 54 1 55 1 7 1 252 2 59 3 217 1 305 1 119 2 70 2 262 1 177 1 151 2 77 1 263 1 25 2 26 1 123 2 315 1 229 1 34 1 125 1 184 1 278 3 90 1 39 1 
70 1 119 1 291 1 123 1 153 1 125 1 6 1 278 1 89 1 59 1 
44 1 260 1 101 1 205 1 3 1 123 1 106 1 153 1 145 1 274 1 110 1 278 1 169 1 59 1 
260 1 70 1 119 1 101 1 3 2 123 1 106 1 153 1 274 2 6 1 145 1 110 1 278 1 169 1 59 1 
127 1 274 1 233 1 202 1 3 1 
127 1 269 1 117 1 274 1 202 1 3 1 
127 1 274 1 3 1 
48 1 70 1 119 1 290 1 153 1 123 2 315 1 6 1 251 1 278 2 59 2 
256 1 72 1 222 1 
217 1 305 1 201 1 262 1 286 1 151 1 204 1 263 1 105 1 315 1 213 1 229 1 278 1 90 1 252 1 59 1 
217 1 305 1 119 1 201 1 262 1 204 1 151 1 263 1 222 1 105 1 123 1 213 1 229 1 6 1 90 1 278 2 252 1 40 1 59 2 216 1 
299 1 
119 2 48 1 70 1 153 1 123 2 315 1 6 2 251 1 278 2 59 2 216 1 
153 1 123 2 181 1 6 2 119 2 89 1 278 2 59 2 
70 1 119 3 153 1 123 3 315 1 6 3 251 1 278 3 59 3 216 1 
153 1 123 1 6 1 119 1 89 1 278 1 59 1 
48 1 70 1 119 1 290 1 123 1 153 1 6 1 278 1 59 1 
0 1 197 1 240 1 48 1 284 1 201 1 101 1 244 1 204 1 3 1 105 1 106 1 213 1 55 1 6 3 145 1 110 1 252 1 59 4 216 1 255 1 217 1 305 1 259 1 70 2 119 3 262 1 177 1 151 1 77 1 263 1 25 2 26 1 123 3 153 1 315 1 229 1 274 1 125 1 184 1 90 1 278 4 39 1 40 1 
123 2 315 1 6 1 56 1 119 1 205 1 278 2 59 2 216 1 
259 1 70 1 48 1 119 3 101 1 3 1 29 1 153 1 123 3 106 1 274 1 6 3 145 1 110 1 278 3 169 1 40 1 59 3 216 2 
123 2 6 2 119 2 70 1 48 1 72 1 278 2 222 1 59 2 216 1 
217 1 305 1 201 1 262 1 151 1 204 1 263 1 105 1 315 1 213 1 229 1 278 1 90 1 252 1 59 1 
217 1 238 1 305 1 19 1 201 1 151 1 263 1 105 1 315 1 213 1 229 1 278 1 90 1 252 1 59 1 
0 1 240 2 283 1 284 1 200 1 244 4 51 1 7 2 60 1 114 1 256 2 17 1 220 1 72 2 177 1 221 1 77 1 25 2 26 1 222 2 226 1 86 1 38 1 39 1 
153 1 123 1 181 1 145 1 6 1 119 1 278 1 59 1 
66 1 143 1 160 1 
313 1 66 2 33 1 160 2 219 1 135 1 
66 1 160 1 
66 1 160 1 
219 1 135 1 
219 1 135 1 
66 1 160 1 219 1 135 1 
66 1 160 1 1 1 
66 1 160 1 1 1 
66 1 160 1 1 1 
66 1 160 1 69 1 
66 1 160 1 69 1 
66 1 160 1 69 1 
45 1 239 1 160 1 3 1 143 1 6 2 298 1 59 2 147 1 218 1 115 1 66 1 257 1 16 1 119 2 22 1 122 1 82 1 81 1 123 2 315 1 274 1 188 1 278 2 
116 1 45 2 172 1 257 2 66 2 160 2 2 1 24 1 3 2 82 3 31 1 212 2 33 1 274 2 317 1 298 1 188 2 169 1 147 2 
164 1 292 2 162 1 319 1 186 2 
292 1 162 1 35 1 
292 1 35 1 319 1 
164 1 211 1 292 3 162 2 319 1 186 1 
164 1 292 2 162 1 319 1 186 1 243 1 
127 1 269 1 64 1 274 1 202 1 3 1 
127 1 274 2 318 1 233 1 202 2 3 2 224 1 4 1 
130 1 132 1 202 2 285 2 3 3 166 1 246 1 108 3 52 1 9 1 169 3 60 1 61 1 114 1 67 2 260 1 121 1 22 1 221 1 78 1 264 2 80 1 265 4 179 2 86 1 274 3 
163 1 3 3 108 5 246 1 166 1 6 1 9 1 169 4 114 2 260 1 119 1 121 1 22 2 264 4 265 7 179 3 123 1 274 3 125 1 183 1 187 1 278 1 130 2 132 1 202 2 285 4 291 1 207 1 52 1 59 1 60 2 61 1 67 4 70 1 221 2 78 1 80 1 153 1 86 2 89 1 
228 1 
299 1 
229 1 295 1 
217 1 229 1 201 1 
229 1 136 1 
217 1 229 1 
158 2 217 1 195 1 229 3 201 1 120 1 
114 1 194 1 240 3 17 3 199 1 161 2 99 1 200 2 71 1 244 7 141 1 5 1 210 1 155 1 7 4 189 1 60 1 191 1 
194 1 0 1 240 15 199 2 131 1 161 3 130 3 99 1 200 5 137 1 244 31 5 2 141 5 139 1 210 2 7 16 58 1 60 4 114 4 17 10 71 1 73 3 221 3 77 1 178 4 25 2 26 1 86 3 230 1 276 1 275 1 189 1 39 1 191 2 
194 1 0 2 240 4 161 2 199 1 99 1 200 3 244 9 5 1 141 1 210 1 7 5 60 1 114 1 174 1 17 4 77 2 25 4 26 2 275 1 39 2 189 1 126 1 191 1 
114 1 194 1 240 3 17 3 199 1 161 2 99 1 200 2 71 1 244 7 141 1 5 1 210 1 7 4 189 1 60 1 191 1 
114 1 194 1 240 3 17 3 199 1 161 2 99 1 200 2 71 1 244 7 141 1 5 1 210 1 7 4 189 1 60 1 191 1 
258 1 198 1 182 1 309 1 277 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 98 1 
258 1 198 1 182 1 309 1 277 1 
209 1 258 1 309 1 253 1 
165 1 
127 1 121 1 3 1 151 1 78 1 263 1 223 1 79 1 80 1 50 1 108 1 213 1 274 1 9 1 252 1 
127 1 44 1 306 1 97 2 101 1 242 1 3 2 205 1 138 1 153 1 106 1 123 1 249 1 145 1 274 2 110 1 297 1 214 1 278 1 59 1 
127 1 44 1 306 1 97 3 260 1 101 1 242 1 3 2 205 1 269 1 153 1 123 1 106 1 249 1 145 1 274 2 37 1 110 1 297 1 214 1 278 1 146 1 169 1 59 1 
127 1 44 1 306 1 97 2 101 1 242 1 3 2 205 1 138 1 153 1 123 1 106 1 83 1 249 1 145 1 274 2 110 1 297 1 214 1 278 1 59 1 
127 1 269 1 274 1 37 1 3 1 
127 1 44 1 279 1 97 2 242 1 101 1 289 1 3 2 205 1 107 1 106 1 108 1 249 1 145 1 110 1 214 1 297 1 9 1 59 1 301 1 306 1 67 1 78 1 79 1 265 1 80 1 30 1 179 1 269 1 270 1 123 1 153 1 274 2 278 1 
127 1 44 1 279 1 97 2 242 1 101 1 289 1 205 1 3 2 107 1 106 1 108 1 249 1 145 1 109 1 110 1 214 1 297 1 9 1 59 1 301 1 306 1 65 1 67 1 74 1 78 1 79 1 80 1 30 1 179 1 269 1 270 1 123 1 153 1 274 2 278 1 
127 1 44 1 279 1 97 2 242 1 101 1 289 1 205 1 3 2 107 1 106 1 108 1 249 1 145 1 109 1 110 1 214 1 297 1 9 1 59 1 301 1 306 1 65 1 67 1 74 1 78 1 79 1 80 1 30 1 179 1 269 1 270 1 123 1 153 1 274 2 278 1 
127 1 44 1 279 1 97 2 242 1 101 1 289 1 205 1 3 2 106 1 108 1 142 1 249 1 145 1 168 1 110 1 214 1 297 1 9 1 59 1 301 1 306 1 67 1 15 1 74 1 78 1 79 1 265 1 80 1 269 1 123 1 153 1 274 2 185 1 278 1 236 1 
127 1 44 1 306 1 97 2 101 1 242 1 3 2 205 1 138 1 208 1 153 1 123 1 106 1 83 1 249 1 145 1 274 2 110 1 297 1 214 1 278 1 59 1 
127 1 44 1 306 1 97 2 101 1 242 1 3 2 205 1 138 1 208 1 153 1 123 1 106 1 83 1 249 1 145 1 274 2 110 1 297 1 214 1 278 1 59 1 
127 1 44 1 279 1 97 2 242 1 101 1 289 1 3 2 205 1 106 1 108 1 142 1 249 1 145 1 168 1 110 1 214 1 297 1 9 1 59 1 301 1 306 1 67 1 15 1 78 1 79 1 265 1 80 1 269 1 123 1 153 1 274 2 278 1 
0 2 96 1 197 1 241 1 240 1 134 1 284 2 244 2 49 1 213 7 6 1 7 1 252 8 59 1 216 1 171 1 303 1 217 2 14 1 305 2 118 1 68 1 119 1 177 2 151 8 263 2 77 2 25 4 26 2 123 1 229 3 34 2 38 1 278 1 90 2 39 2 190 1 157 1 321 1 
0 1 240 2 130 1 48 1 200 1 284 1 244 3 6 1 7 1 8 1 59 1 60 1 114 1 256 1 17 1 119 1 70 1 72 1 177 1 221 1 77 1 222 1 25 2 26 1 123 1 86 1 278 1 39 1 237 1 
0 1 284 1 177 1 38 1 299 1 77 1 39 1 25 2 26 1 
0 2 197 1 240 6 131 1 130 2 134 1 133 1 200 1 284 2 137 1 244 14 141 1 245 1 7 8 8 1 60 2 114 1 256 11 17 2 72 4 177 1 73 3 221 2 178 3 77 2 25 4 26 2 222 11 225 1 315 1 86 1 39 2 92 1 
0 1 197 1 240 1 134 1 201 1 284 1 204 1 286 1 244 2 104 1 105 1 213 1 6 1 7 1 8 1 252 1 59 2 216 1 217 1 305 1 119 1 262 1 72 1 177 1 151 1 263 1 77 1 26 1 25 2 123 1 315 1 229 1 231 1 90 1 156 1 278 2 39 1 40 1 
0 3 241 1 240 10 161 1 99 1 244 20 105 2 6 1 7 10 8 1 252 3 114 3 256 7 17 8 119 1 262 2 177 3 263 1 25 6 26 3 28 2 123 1 32 2 278 3 189 1 39 3 40 1 191 1 193 1 194 1 197 1 199 1 130 2 134 1 200 4 284 3 201 2 204 2 141 4 213 3 55 2 296 1 59 3 60 3 215 1 216 1 217 2 305 2 72 7 221 2 151 3 77 3 222 7 227 2 315 2 229 2 86 2 87 2 90 2 
256 1 0 1 17 1 283 1 284 1 72 1 177 1 221 1 244 2 77 1 222 1 26 1 25 2 141 1 7 2 38 1 39 1 60 1 
114 1 256 1 0 1 240 2 17 1 200 1 284 1 72 1 220 1 177 1 244 2 77 1 222 1 26 1 25 2 86 1 38 1 39 1 
0 1 240 2 130 1 284 1 200 1 244 4 141 1 7 2 60 1 114 1 256 2 17 2 72 2 221 1 177 1 77 1 25 2 26 1 222 2 86 1 38 1 39 1 
256 1 0 1 118 1 17 1 283 1 284 1 72 1 177 1 221 1 244 2 77 1 222 1 26 1 25 2 141 1 7 2 39 1 60 1 
114 1 256 1 0 1 118 1 240 2 17 1 200 1 284 1 72 1 220 1 177 1 244 2 77 1 222 1 26 1 25 2 86 1 39 1 
0 1 240 2 130 1 284 1 200 1 244 4 141 1 7 2 60 1 114 1 256 2 118 1 17 2 72 2 221 1 177 1 77 1 25 2 26 1 222 2 86 1 39 1 
0 1 240 2 130 1 284 1 200 1 244 4 141 1 7 2 60 1 114 1 256 2 17 2 72 2 221 1 177 1 77 1 25 2 26 1 222 2 86 1 39 1 
0 1 197 1 240 1 134 1 201 1 284 1 244 2 204 1 105 1 213 1 55 1 7 1 252 1 59 1 217 1 305 1 262 1 177 1 151 1 263 1 77 1 26 1 25 2 315 1 229 1 90 1 278 1 39 1 
238 1 0 1 197 1 240 1 134 1 201 1 284 1 244 2 105 1 213 1 7 1 252 1 59 1 217 1 305 1 19 1 177 1 151 1 263 1 77 1 26 1 25 2 27 1 315 1 229 1 90 1 278 1 39 1 
0 1 240 2 130 1 284 1 200 1 244 4 141 1 7 2 8 1 60 1 114 1 256 2 17 2 72 2 221 1 177 1 77 1 25 2 26 1 222 2 86 1 39 1 
0 1 240 2 130 1 200 1 201 1 284 1 244 4 204 1 105 1 141 1 213 1 55 1 7 2 252 1 59 1 60 1 114 1 256 2 217 1 14 1 305 1 17 2 72 2 262 1 221 1 177 1 151 1 77 1 222 2 26 1 25 2 28 1 86 1 229 1 90 1 278 1 39 1 
0 1 240 1 130 1 48 1 284 1 244 3 141 1 6 1 7 2 8 1 59 1 60 1 114 1 256 1 307 1 17 1 119 1 70 1 72 1 177 1 221 1 77 1 25 2 26 1 222 1 123 1 86 1 278 1 39 1 
0 3 240 21 161 1 99 1 244 41 167 4 7 20 11 1 114 5 173 1 17 8 174 1 261 1 176 2 178 4 26 3 25 6 124 1 275 1 39 3 189 1 191 1 41 1 129 1 194 1 130 4 131 1 47 1 199 1 200 4 137 3 141 4 294 1 60 5 221 4 73 3 152 1 77 3 314 1 86 4 85 1 316 1 234 1 
129 1 194 1 0 4 240 18 161 1 199 1 47 1 131 1 130 4 99 1 200 4 137 3 244 38 141 3 294 1 167 4 7 20 11 1 60 5 114 4 173 1 174 1 17 7 261 1 176 2 73 3 221 4 152 1 178 4 77 4 25 8 26 4 314 1 124 1 85 1 86 3 316 1 275 2 234 1 189 1 39 4 41 1 191 1 
129 1 194 1 0 2 240 25 161 1 199 1 47 1 131 2 130 7 99 1 200 7 137 2 244 52 141 7 294 1 167 4 7 27 11 1 60 8 114 8 173 1 174 1 17 14 261 1 176 1 73 4 221 7 152 1 178 4 77 2 25 4 26 2 314 1 85 1 86 7 316 1 275 1 234 1 189 1 39 2 92 2 191 1 
129 1 0 2 240 10 131 1 130 3 200 3 137 1 244 19 141 3 248 1 294 1 167 2 7 9 60 3 114 3 174 1 17 6 176 1 73 1 221 3 178 2 77 2 25 4 26 2 85 2 86 3 316 1 234 1 39 2 41 1 
129 2 0 3 240 12 47 1 130 3 200 2 244 26 137 2 141 2 294 1 167 4 7 14 11 1 60 3 114 2 173 1 17 4 174 1 261 1 176 2 73 2 221 3 152 1 77 3 178 2 25 6 26 3 314 1 85 1 86 2 316 1 275 2 234 1 39 3 
45 1 31 1 66 1 257 1 33 1 160 1 2 1 188 1 147 1 322 1 
143 1 16 1 
45 1 66 1 257 1 160 1 175 1 188 1 206 1 147 1 266 1 
196 1 1 1 
313 1 69 1 112 1 
45 1 172 1 257 1 66 1 160 1 2 1 24 1 3 1 82 2 31 1 212 1 33 1 274 1 317 1 298 1 188 1 169 1 147 1 
45 1 172 1 257 1 66 1 160 1 2 1 24 1 3 1 82 2 31 1 212 1 33 1 274 1 317 1 298 1 188 1 169 1 147 1 
45 1 172 1 257 1 66 1 160 1 2 1 24 1 3 1 82 2 31 1 212 1 33 1 274 1 317 1 298 1 188 1 169 1 147 1 
313 1 196 1 1 1 
313 1 196 1 1 1 
69 1 112 1 
313 1 69 1 112 1 
115 1 239 1 
43 1 45 1 239 1 160 1 202 1 3 1 212 1 143 1 6 2 59 2 147 1 218 1 115 1 66 1 257 1 16 1 119 2 22 1 122 1 82 1 81 1 123 2 315 1 274 1 317 1 278 2 188 1 
128 1 0 1 197 1 240 1 134 1 284 1 244 2 49 1 213 2 250 1 7 1 8 1 252 2 59 2 113 1 217 1 305 1 150 1 177 1 76 1 151 2 77 1 26 1 25 2 123 2 229 1 34 2 90 1 278 2 39 1 190 1 
302 1 171 1 217 1 304 1 303 1 305 1 203 1 151 1 263 1 213 1 272 1 229 1 90 1 252 1 
62 1 94 1 305 1 241 1 162 1 203 1 102 1 151 1 311 1 140 1 211 1 292 2 213 1 272 1 35 1 319 1 90 1 252 1 
62 1 14 1 94 1 305 1 241 1 162 1 203 1 102 1 151 2 311 1 140 1 211 1 292 2 213 2 272 1 35 1 319 1 90 1 252 2 
62 1 94 1 305 1 241 1 162 1 203 1 102 1 151 1 268 1 140 1 211 1 292 2 213 1 35 1 319 1 90 1 252 1 
75 1 
67 1 308 1 260 1 78 1 79 1 80 1 108 1 9 1 170 1 169 1 
114 2 67 5 130 2 221 2 285 5 264 5 265 10 179 5 227 1 108 5 86 2 300 1 91 2 169 5 60 2 
127 1 269 1 
127 1 46 1 121 1 151 1 263 1 78 1 79 1 223 1 80 1 50 1 108 1 213 1 9 1 252 1 
299 1 
127 1 67 1 78 1 79 1 265 1 80 1 30 1 179 1 269 1 270 1 107 1 108 1 9 1 
127 1 195 1 201 1 108 1 213 1 144 1 295 2 111 1 10 1 9 1 252 1 148 1 217 1 305 1 121 1 151 1 263 1 78 1 79 1 80 1 267 1 229 3 320 1 90 2 
127 1 130 1 285 4 137 1 108 5 9 1 11 1 169 4 60 1 114 1 67 2 261 1 260 1 73 1 221 1 152 1 178 1 78 1 264 4 79 1 265 6 80 1 179 3 269 1 180 1 86 1 91 1 
199 1 99 1 163 1 3 1 291 1 108 2 6 1 9 1 300 1 59 1 60 2 114 1 65 1 67 2 70 1 119 1 78 1 79 1 80 1 153 1 123 1 274 1 125 1 89 1 278 1 91 2 191 1 42 1 
0 1 197 1 240 1 201 1 284 1 244 1 204 1 105 1 213 1 6 2 55 1 252 1 59 3 217 1 305 1 119 2 70 2 262 1 177 1 151 1 77 1 263 1 25 2 26 1 123 2 315 1 229 1 125 1 184 1 278 3 90 1 39 1 
67 2 161 1 260 2 121 1 285 2 78 1 264 2 79 1 265 4 80 1 179 2 108 1 273 1 9 1 169 4 
115 1 63 1 45 1 2 1 147 1 
45 1 232 1 147 1 
45 1 232 1 147 1 
45 1 232 1 147 1 
45 1 288 1 147 1 
45 1 288 1 147 1 
45 1 288 1 147 1 
45 1 147 1 
66 1 160 1 
194 1 0 1 240 4 161 1 199 1 99 1 200 2 244 8 137 1 7 4 11 1 60 1 114 1 174 1 17 2 73 1 178 1 77 1 25 2 26 1 39 1 189 1 191 1 
194 1 0 2 240 5 161 1 199 1 131 1 130 1 99 1 200 2 244 11 137 1 141 1 7 6 11 1 60 2 114 1 174 1 17 3 73 1 221 1 178 2 77 2 25 4 26 2 189 1 39 2 191 1 192 1 
194 1 0 3 240 10 161 1 199 1 47 1 130 2 99 1 200 3 244 19 137 1 141 1 7 9 11 1 60 3 114 3 173 1 174 1 17 4 261 1 73 1 221 2 152 1 178 1 77 3 25 6 26 3 86 2 275 1 189 1 39 3 191 1 192 1 
194 1 0 3 240 7 161 1 199 1 130 2 47 1 99 1 200 3 244 17 137 1 141 2 7 10 11 1 60 3 114 2 173 1 174 1 17 5 261 1 73 1 221 2 152 1 178 1 77 3 25 6 26 3 86 1 275 1 189 1 39 3 191 1 192 1 
194 1 0 1 240 4 161 1 199 1 99 1 200 2 244 8 137 1 7 4 11 1 60 1 114 1 174 1 17 2 73 1 178 1 77 1 25 2 26 1 39 1 189 1 191 1 
114 2 173 1 0 1 240 6 47 1 17 2 130 2 174 1 261 1 200 1 221 2 73 1 152 1 137 1 244 12 77 1 178 1 26 1 25 2 141 1 86 2 7 6 39 1 11 1 60 2 
194 1 0 4 240 8 161 1 199 1 47 1 130 2 99 1 200 3 244 18 137 1 141 2 7 10 11 1 60 3 114 2 173 1 174 1 17 5 261 1 73 1 221 2 152 1 178 1 77 4 25 8 26 4 86 1 275 2 189 1 39 4 191 1 192 1 
0 4 240 7 47 1 130 3 200 3 244 16 137 1 141 3 7 9 11 1 60 3 114 2 173 1 174 1 17 6 261 1 73 1 221 3 152 1 178 1 77 4 25 8 26 4 86 2 275 2 39 4 41 1 
114 1 194 1 240 4 199 3 17 6 99 1 200 3 244 7 141 3 7 3 189 2 191 3 60 1 
194 1 0 4 240 8 161 1 199 1 47 1 130 2 99 1 200 3 244 18 137 1 141 1 7 10 11 1 60 3 114 2 173 1 174 1 17 4 261 1 73 1 221 2 152 1 178 1 77 4 25 8 26 4 86 1 275 2 189 1 39 4 191 1 41 1 
114 2 0 1 240 5 174 1 199 2 17 5 99 1 200 3 244 10 77 1 25 2 26 1 141 2 7 5 39 1 191 2 60 2 42 1 
0 1 174 1 17 1 221 1 244 2 77 1 26 1 25 2 141 1 7 2 39 1 60 1 
114 1 0 1 240 2 17 2 174 1 130 1 200 1 221 1 244 4 77 1 26 1 25 2 141 1 86 1 7 2 39 1 60 1 
0 3 240 2 174 1 199 1 17 2 200 1 244 3 77 3 26 3 25 6 141 1 275 1 7 1 39 3 41 1 191 1 13 1 
194 1 0 5 240 18 161 1 199 3 131 1 130 3 99 2 200 7 137 1 244 34 139 1 141 5 7 16 58 1 60 5 13 1 114 5 174 1 17 12 73 3 221 3 178 4 77 5 25 10 26 5 86 3 230 1 275 2 189 1 39 5 191 3 192 1 41 1 
114 1 194 1 0 2 240 4 161 1 17 3 199 1 99 1 200 2 244 8 77 2 26 2 25 4 141 1 275 1 7 4 39 2 189 1 60 1 191 1 
299 1 
114 1 0 1 240 2 17 2 130 1 200 1 221 1 244 4 77 1 26 1 25 2 141 1 86 1 7 2 39 1 192 1 60 1 
114 1 240 4 131 1 130 1 17 2 200 1 73 1 221 1 137 1 244 7 178 2 141 1 86 1 7 3 60 1 
194 1 0 2 240 12 161 1 199 2 130 2 131 1 99 1 200 5 244 23 141 4 7 11 60 3 13 1 114 3 17 9 221 2 73 2 178 2 77 2 26 2 25 4 225 1 86 2 275 2 189 1 39 2 92 1 191 2 
240 1 244 1 178 1 
7 1 73 1 244 1 
114 1 0 1 240 3 130 1 17 3 200 2 221 1 244 6 77 1 25 2 26 1 141 1 227 1 86 1 7 3 39 1 192 1 60 1 
114 2 173 1 0 1 240 6 47 1 17 2 130 2 174 1 261 1 200 1 221 2 73 1 152 1 137 1 244 12 77 1 178 1 26 1 25 2 141 1 86 2 7 6 39 1 11 1 60 2 
114 1 240 3 199 1 17 2 99 1 200 1 244 6 141 1 7 3 60 1 191 1 
194 1 0 1 240 2 17 2 199 1 200 1 244 3 77 1 26 1 25 2 141 1 275 1 7 1 189 1 39 1 191 1 13 1 
123 1 315 1 293 1 56 1 278 1 205 1 59 1 
149 1 282 1 20 1 205 1 123 1 315 1 293 1 53 1 36 1 56 1 278 1 59 1 
171 1 303 1 217 1 14 1 305 1 281 1 151 4 263 1 213 4 229 1 88 1 90 1 252 4 
217 1 95 1 159 1 305 1 280 1 201 1 151 2 84 1 213 2 229 1 90 2 252 2 235 1 215 1 
62 1 305 1 292 1 213 1 35 1 319 1 90 1 151 1 252 1 263 1 
217 1 14 1 305 1 241 1 151 2 76 1 213 2 229 1 90 1 252 2 190 1 
171 1 303 1 217 2 95 1 14 1 305 2 96 1 151 5 263 1 213 4 229 3 88 1 90 2 252 5 190 1 157 1 
171 1 303 1 217 2 95 1 14 1 305 2 151 5 23 1 263 1 213 4 229 3 88 1 90 2 252 5 190 1 157 1 
213 1 299 1 151 1 252 1 263 1 
217 1 305 1 119 1 201 1 151 1 204 1 263 1 105 1 123 1 315 1 213 1 229 1 6 1 90 1 278 2 252 1 59 2 216 1 
95 1 201 2 101 1 136 1 204 1 105 1 213 1 6 2 145 1 252 1 59 2 254 1 216 1 217 2 305 1 119 1 151 1 123 2 153 1 315 1 229 3 278 2 90 1 
238 1 95 1 281 1 201 2 101 1 136 1 105 1 213 2 6 2 145 1 252 2 59 2 254 1 216 1 217 2 305 1 119 1 151 2 123 2 153 1 315 1 229 3 278 2 90 1 
127 1 95 1 213 1 229 1 274 1 295 1 287 1 151 1 3 1 252 1 
127 1 95 1 213 1 229 1 274 1 295 1 320 1 151 1 3 1 252 1 
305 1 213 1 90 1 151 1 252 1 321 1 
217 2 14 1 195 1 305 2 96 1 280 1 241 1 68 1 100 1 201 1 151 7 263 2 84 1 213 6 229 3 34 1 90 3 252 7 190 1 157 1 321 1 
0 2 240 3 161 1 99 1 244 6 105 1 6 1 7 3 8 1 252 1 114 1 256 1 14 1 17 2 119 1 262 1 177 2 25 4 26 2 28 1 123 1 278 2 39 2 189 1 191 1 194 1 199 1 284 2 201 1 200 2 204 1 213 1 55 1 59 2 60 1 216 1 217 1 305 1 150 1 72 1 151 1 77 2 222 1 315 2 229 1 87 1 90 1 
127 1 46 1 202 1 3 1 151 1 78 1 263 1 79 1 80 1 267 1 213 1 229 1 144 1 274 1 295 1 320 1 9 1 252 1 148 1 
158 1 217 1 14 1 195 1 305 1 201 1 151 2 213 2 229 2 10 1 90 2 252 2 321 1 
217 1 238 1 305 1 119 1 201 1 151 1 263 1 105 1 123 1 315 1 213 1 229 1 6 1 90 1 278 2 252 1 59 2 216 1 
217 1 95 1 195 1 305 1 280 1 100 1 201 1 151 1 84 1 213 1 229 1 90 2 252 1 
315 1 154 1 18 1 310 1 103 1 
18 2 259 1 260 1 101 1 21 1 310 2 202 1 3 2 103 2 153 1 271 1 106 1 315 1 154 1 145 1 274 2 110 1 169 1 12 1 
128 1 18 1 103 1 123 1 154 1 250 1 278 1 59 1 113 1 
271 1 154 1 21 1 

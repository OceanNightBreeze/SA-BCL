#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 26 (155,164) (155,164) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 26 (155,164) (155,164) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 26 (155,164) (155,164) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (146,289) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (146,289) 244 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (146,289) 244 4 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 139 (143,282) (143,282) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
46 1 331 1 85 2 25 1 26 1 201 1 48 2 249 7 250 2 155 1 69 3 227 1 139 3 271 2 95 1 141 7 230 4 19 2 324 1 164 1 216 2 352 2 239 1 241 1 128 1 
46 1 331 1 85 2 25 1 26 1 201 1 48 2 249 7 250 2 155 1 69 3 227 1 139 3 271 2 95 1 141 7 230 4 19 2 324 1 164 1 216 2 352 2 239 1 241 1 128 1 
46 1 331 1 85 2 25 1 26 1 201 1 48 2 249 7 250 2 155 1 69 3 227 1 139 3 271 2 95 1 141 7 230 4 19 2 324 1 164 1 216 2 352 2 239 1 241 1 128 1 
46 1 282 1 331 1 85 2 25 1 26 1 201 1 48 2 249 7 250 2 155 1 69 3 227 1 139 3 271 2 95 1 141 7 143 1 230 4 19 2 324 1 164 1 216 2 352 2 239 1 241 1 128 1 
139 2 46 1 271 1 0 1 282 1 141 4 26 1 48 1 201 1 143 1 230 3 249 4 250 1 19 1 216 1 69 2 352 1 227 2 
46 1 271 1 282 1 307 1 85 1 25 1 141 2 48 1 143 1 249 2 284 1 250 1 205 1 324 1 216 1 
139 1 46 1 271 2 19 1 282 1 69 1 216 2 85 1 141 3 143 1 230 1 249 3 128 1 
167 1 46 1 0 1 282 1 331 1 85 1 283 1 26 1 201 1 48 1 249 9 250 1 69 4 227 2 139 4 271 2 141 9 143 1 230 7 19 3 216 2 352 1 241 1 128 1 
167 1 46 1 0 1 282 1 331 1 85 1 283 1 26 1 201 1 48 1 249 9 250 1 69 4 227 2 139 4 271 2 141 9 143 1 230 7 19 3 216 2 352 1 241 1 128 1 
235 1 125 1 10 1 
329 2 235 1 142 1 
262 2 311 2 100 1 161 2 83 2 339 1 277 2 328 2 
63 1 262 2 64 1 2 1 83 3 306 2 266 1 50 2 86 1 286 1 28 1 339 1 53 2 252 1 136 1 209 1 70 1 311 3 161 2 188 2 190 2 55 1 37 1 18 1 323 1 258 1 100 1 351 1 259 1 276 1 277 2 279 1 197 1 148 1 328 2 261 1 221 1 
336 1 193 1 262 1 22 1 311 1 100 1 161 1 83 1 277 1 328 1 
262 1 342 1 149 1 311 1 199 1 330 1 83 1 200 1 131 1 336 1 214 1 235 1 125 1 208 1 
262 1 342 1 311 1 199 1 330 2 161 1 83 1 200 2 131 1 336 1 235 1 125 1 277 1 208 1 328 1 
88 1 330 1 200 1 98 1 319 1 
182 1 88 1 330 2 235 1 35 1 125 1 200 2 319 1 
88 1 330 1 200 1 
22 1 262 1 330 1 311 1 161 1 83 1 200 1 96 1 319 1 336 1 193 1 100 1 277 1 328 1 
235 1 
182 1 88 1 330 2 235 1 125 1 200 2 31 1 319 1 
302 1 182 1 310 1 138 1 198 1 93 1 343 2 330 5 169 2 150 1 24 2 84 1 200 5 153 1 319 2 88 2 235 1 125 1 30 1 
63 1 262 1 311 2 161 1 83 2 306 1 190 1 110 1 266 1 18 1 37 1 259 1 53 1 78 1 136 1 197 1 158 1 70 1 328 1 261 1 
339 1 10 1 
262 2 311 2 161 1 83 2 339 2 277 1 253 1 328 1 301 1 
156 1 237 1 110 1 
63 1 311 1 83 1 306 1 190 1 266 1 37 1 18 1 259 1 339 1 53 1 136 1 197 1 61 1 70 1 261 1 
262 3 311 3 161 3 83 3 339 1 277 1 158 1 328 3 
336 1 193 1 262 1 311 1 161 1 83 1 328 1 
336 1 262 1 311 1 161 1 83 1 277 1 253 1 328 1 301 1 
63 1 262 3 64 1 199 1 330 1 2 1 83 4 306 1 200 1 131 1 266 1 336 1 50 2 86 1 339 1 53 1 136 1 208 1 158 1 209 1 70 1 342 1 114 1 311 4 161 3 188 1 190 1 318 1 18 1 37 1 323 1 258 1 100 1 351 1 259 1 276 1 277 2 78 1 279 1 197 1 148 1 328 3 261 1 301 1 
262 2 149 1 311 2 161 1 83 2 339 1 195 1 158 1 328 1 
262 3 104 1 114 1 342 1 330 1 311 3 199 1 161 3 83 3 200 1 131 1 336 1 235 1 277 1 78 1 208 1 158 2 328 3 301 1 
262 2 311 2 161 2 83 2 110 1 156 1 277 1 158 1 328 2 301 1 
63 1 311 1 83 1 306 1 190 1 266 1 37 1 18 1 259 1 339 1 53 1 136 1 197 1 70 1 261 1 
63 1 311 1 83 1 306 1 190 1 266 1 18 1 259 1 339 1 53 1 278 1 269 1 197 1 70 1 261 1 
304 1 64 1 2 1 6 1 110 2 109 1 337 1 50 2 156 2 224 1 252 2 33 1 272 1 188 4 211 1 38 1 258 1 323 2 163 1 351 1 276 1 237 2 42 1 148 1 
336 1 262 1 199 1 311 1 161 1 83 1 240 1 328 1 
262 5 149 1 280 1 311 5 161 4 165 1 83 5 339 1 78 1 277 1 195 1 158 2 328 4 301 1 
336 1 193 1 262 2 311 2 161 2 83 2 240 1 328 2 
146 1 229 1 
146 1 229 1 
289 1 254 1 
289 1 254 1 
289 1 254 1 
146 1 229 1 
146 1 229 1 
146 1 229 1 
146 1 229 1 
146 1 229 1 
146 1 229 1 
146 1 229 1 
146 1 229 1 
244 1 225 1 146 1 229 1 
244 1 225 1 330 1 146 1 200 1 4 1 229 1 
352 1 48 1 250 1 
205 1 48 1 250 1 
129 1 205 1 3 1 219 1 352 2 250 3 
129 1 205 1 325 1 3 1 352 1 250 2 
129 2 205 1 3 1 352 1 250 2 
198 3 304 1 329 3 330 5 169 1 150 2 24 1 151 1 152 1 200 5 332 1 153 1 337 1 88 1 338 1 54 1 92 1 33 1 182 1 343 1 14 2 255 1 142 1 319 4 256 1 99 1 163 1 235 2 326 2 125 1 126 1 127 2 
198 8 304 3 329 9 330 9 169 2 150 6 24 2 200 9 332 1 202 1 153 1 337 3 51 1 88 6 338 3 159 1 309 1 33 3 310 1 182 1 343 2 14 6 255 2 345 5 142 3 98 5 319 7 256 2 163 3 41 1 59 1 235 5 126 4 125 1 127 6 
198 3 304 1 329 4 330 3 169 1 24 1 150 2 152 1 200 3 337 1 338 1 33 1 310 1 343 1 14 2 255 1 142 2 319 2 256 1 99 1 163 1 235 3 125 1 126 1 326 1 127 2 
198 5 304 2 329 7 330 4 169 1 24 1 150 4 152 1 200 4 337 2 338 2 159 1 33 2 310 1 343 1 14 4 255 1 142 3 319 3 256 1 99 1 163 2 41 1 59 1 235 4 125 1 126 2 326 2 127 4 
171 1 266 1 10 1 
292 1 266 1 
162 1 
63 1 266 1 
291 1 63 1 171 2 162 1 7 1 266 3 261 1 
63 1 266 1 261 1 
266 1 248 1 
11 1 188 7 174 1 106 1 97 1 109 3 203 1 27 2 320 1 57 1 337 1 323 3 224 2 163 1 178 1 252 4 135 1 
11 1 188 7 174 1 106 1 97 1 109 3 203 1 27 2 320 1 57 1 337 1 323 3 224 2 163 1 178 1 252 4 135 1 
11 1 1 1 188 7 174 1 106 1 97 1 109 3 203 1 27 2 320 1 57 1 337 1 323 3 224 2 163 1 178 1 252 4 135 1 
304 3 64 1 2 1 106 1 174 5 109 10 203 2 27 3 50 2 337 4 224 5 338 3 178 1 252 16 135 1 32 1 181 1 33 3 11 1 71 1 210 1 72 1 185 1 115 1 188 31 97 2 320 2 57 2 39 3 258 1 323 15 163 4 79 4 148 1 
105 1 64 2 2 2 174 1 109 4 27 2 203 1 337 1 50 4 224 3 178 1 252 5 135 1 181 1 290 1 11 1 188 9 97 1 57 1 320 1 258 2 323 4 163 1 148 2 
46 1 282 1 306 1 85 1 264 1 48 1 246 1 249 2 250 2 205 1 132 1 207 1 53 1 157 1 70 1 271 1 314 1 34 1 141 2 190 1 143 1 230 1 20 1 216 1 219 1 352 1 299 1 43 1 197 1 
282 1 306 1 85 1 264 1 48 1 246 1 333 1 249 3 250 2 205 1 8 1 132 1 207 1 53 1 157 1 70 1 271 1 314 1 34 1 141 3 190 1 143 1 230 2 76 1 216 1 219 1 352 1 43 1 197 1 
282 1 306 1 85 1 264 1 48 1 246 1 333 1 249 2 250 2 205 1 132 1 207 1 53 1 157 1 70 1 314 1 141 2 190 1 143 1 230 2 76 1 219 1 352 1 197 1 
63 1 271 1 65 1 314 2 306 1 85 2 347 1 141 1 190 1 266 1 249 1 213 1 8 1 259 1 275 1 216 1 207 2 53 1 157 2 260 1 197 1 70 1 62 1 
46 1 306 1 85 1 264 1 48 1 246 1 333 1 249 1 250 2 205 1 132 1 207 1 53 1 157 1 70 1 271 1 314 1 34 1 141 1 190 1 216 1 219 1 352 1 299 1 43 1 197 1 
73 1 
198 1 63 2 330 2 169 1 306 2 24 1 150 1 200 2 153 1 266 2 308 1 88 2 133 1 53 2 70 2 182 1 343 1 255 1 190 2 17 1 192 1 349 1 213 1 259 2 236 1 220 1 197 3 62 1 261 1 
182 1 342 1 262 1 149 1 199 1 330 3 311 1 116 1 83 1 200 3 47 1 119 1 131 1 336 1 88 2 214 1 238 1 31 1 208 1 327 2 137 1 44 1 
182 1 262 1 342 1 149 1 199 1 330 3 311 1 116 1 83 1 200 3 47 1 119 1 348 1 131 1 336 1 88 1 214 1 235 1 125 1 31 1 208 1 327 3 137 1 44 1 
262 1 149 1 330 3 199 1 83 1 47 1 200 3 131 1 336 1 88 2 340 1 31 1 208 1 137 1 182 1 342 1 311 1 116 1 119 1 348 1 214 1 235 1 125 1 238 1 327 3 44 1 
262 1 169 1 83 1 47 1 131 1 88 7 9 1 179 1 134 1 137 1 182 3 13 2 311 1 187 1 16 1 142 2 58 2 233 2 235 5 238 4 327 6 23 1 198 1 149 1 199 1 330 5 24 1 150 1 200 5 153 1 336 1 340 4 208 1 31 1 342 1 343 1 116 1 119 1 348 4 295 1 214 1 125 5 297 2 44 1 
262 1 169 1 83 1 47 1 173 1 131 1 88 4 137 1 182 2 13 2 311 1 187 1 16 1 142 2 58 2 233 2 235 2 238 2 327 4 198 1 149 1 329 2 199 1 330 4 24 1 150 1 200 4 153 1 336 1 340 2 208 1 342 1 343 1 116 1 119 1 348 2 214 1 125 1 297 2 44 1 
198 1 262 1 149 1 330 4 199 1 169 1 150 1 83 1 24 1 47 1 200 4 153 1 131 1 336 1 88 4 340 2 179 1 9 1 134 1 208 1 137 1 182 2 342 1 13 2 343 1 311 1 187 1 116 1 119 1 142 2 16 1 348 2 58 2 214 1 233 2 235 1 125 1 297 2 238 2 327 4 44 1 
198 1 262 1 149 1 330 4 199 1 169 1 150 1 83 1 24 1 47 1 200 4 153 1 131 1 336 1 88 4 340 2 179 1 9 1 134 1 208 1 137 1 182 2 342 1 13 2 343 1 311 1 187 1 116 1 119 1 142 2 16 1 348 2 58 2 214 1 233 2 235 1 125 1 297 2 238 2 327 4 44 1 
198 1 262 1 149 1 329 2 330 4 199 1 169 1 150 1 83 1 24 1 245 2 47 1 200 4 153 1 131 1 336 1 88 4 177 1 340 2 179 1 208 1 137 1 182 2 342 1 343 1 311 1 187 1 116 1 119 1 348 2 58 2 231 2 321 1 214 1 235 1 125 1 297 2 238 2 327 4 44 1 147 1 
198 1 262 1 149 1 330 4 199 1 169 1 150 1 24 1 83 1 47 1 200 4 153 1 131 1 336 1 88 5 179 1 340 3 9 1 134 1 208 1 137 1 182 2 342 1 13 2 343 1 311 1 187 1 116 1 119 1 142 2 16 1 348 3 295 1 58 2 214 1 233 2 235 1 125 1 297 2 238 3 327 5 44 1 
198 1 262 1 149 1 330 4 199 1 169 1 150 1 24 1 83 1 47 1 200 4 153 1 131 1 336 1 88 5 179 1 340 3 9 1 134 1 208 1 137 1 182 2 342 1 13 2 343 1 311 1 187 1 116 1 119 1 142 2 16 1 348 3 295 1 58 2 214 1 233 2 235 1 125 1 297 2 238 3 327 5 44 1 
198 1 262 1 149 1 329 2 330 4 199 1 169 1 150 1 24 1 83 1 245 2 173 1 47 1 200 4 153 1 131 1 336 1 88 4 177 1 340 2 208 1 137 1 182 2 342 1 343 1 311 1 187 1 116 1 119 1 348 2 58 2 231 2 214 1 235 1 125 1 297 2 238 2 327 4 44 1 
64 1 2 1 6 1 110 1 109 2 203 1 27 1 156 1 50 2 337 1 224 2 339 2 178 1 252 3 135 1 10 1 11 1 188 6 320 1 258 1 323 3 163 1 351 1 276 1 237 1 148 1 
304 1 64 2 2 2 174 1 109 2 110 13 50 4 156 4 337 1 224 1 286 1 338 3 339 1 226 1 252 10 209 1 32 2 33 3 185 1 188 17 74 1 39 3 323 7 258 2 163 3 351 1 123 1 166 1 276 2 237 13 79 4 300 1 148 2 
63 1 262 1 64 1 306 1 2 1 83 2 266 1 156 1 50 2 286 1 339 1 53 1 252 1 136 1 158 1 70 1 209 1 311 2 161 1 188 2 190 1 191 1 18 1 37 1 56 1 258 1 323 1 259 1 351 1 123 1 276 1 78 1 60 1 197 1 61 1 328 1 148 1 261 1 
262 1 311 1 64 1 161 1 306 1 83 1 2 1 190 1 212 1 50 2 258 1 259 1 351 1 123 1 53 1 276 1 78 1 158 1 148 1 328 1 
103 1 262 1 303 1 63 2 64 2 83 1 306 8 2 2 6 1 333 1 266 3 50 4 286 1 28 2 53 7 252 1 158 1 70 2 209 1 311 1 161 1 228 1 188 2 190 8 144 1 213 1 350 1 258 2 323 1 145 1 259 2 351 2 102 1 20 1 276 2 197 2 328 1 148 2 62 1 
262 1 304 1 64 1 2 1 83 1 109 1 110 1 204 1 156 1 50 2 337 1 224 1 338 1 252 1 33 1 311 1 161 1 188 3 258 1 323 2 163 1 351 1 123 1 276 1 237 1 277 1 148 1 328 1 301 1 
64 1 2 1 188 2 174 1 211 1 6 1 109 1 110 1 156 1 50 2 258 1 163 1 351 1 276 1 237 1 252 2 148 1 33 1 
304 1 64 1 2 1 188 2 6 1 109 1 110 1 38 1 156 1 50 2 337 1 224 1 258 1 323 2 351 1 276 1 237 1 148 1 
304 1 64 1 2 1 174 1 6 1 110 2 109 2 50 2 156 2 337 1 224 1 338 1 252 2 33 1 188 4 258 1 323 2 163 1 351 1 276 1 237 2 148 1 
64 1 2 1 188 2 174 1 211 1 109 1 110 1 144 1 156 1 50 2 258 1 163 1 351 1 276 1 237 1 252 2 148 1 33 1 
304 1 64 1 2 1 188 2 109 1 110 1 144 1 38 1 156 1 50 2 337 1 224 1 258 1 323 2 351 1 276 1 237 1 148 1 
304 1 64 1 2 1 174 1 110 2 109 2 50 2 156 2 337 1 224 1 338 1 252 2 33 1 188 4 144 1 258 1 323 2 163 1 351 1 276 1 237 2 148 1 
304 1 64 1 2 1 174 1 110 2 109 2 50 2 156 2 337 1 224 1 338 1 252 2 33 1 188 4 258 1 323 2 163 1 351 1 276 1 237 2 148 1 
63 1 64 1 306 1 83 1 2 1 266 1 50 2 286 1 339 1 53 1 252 1 136 1 70 1 209 1 311 1 188 2 190 1 18 1 37 1 258 1 323 1 259 1 351 1 276 1 279 1 197 1 148 1 261 1 
63 1 64 1 306 1 83 1 2 1 266 1 50 2 286 1 339 1 53 1 252 1 269 1 70 1 209 1 311 1 188 2 190 1 18 1 258 1 323 1 259 1 351 1 234 1 276 1 278 1 197 1 148 1 261 1 
304 1 64 1 2 1 174 1 110 2 109 2 50 2 156 2 337 1 224 1 338 1 252 2 33 1 188 4 258 1 323 2 163 1 351 1 123 1 276 1 237 2 148 1 
63 1 304 1 64 1 306 1 83 1 2 1 174 1 109 2 110 2 266 1 337 1 156 2 50 2 224 1 338 1 53 1 252 2 136 1 70 1 33 1 311 1 188 4 190 1 18 1 37 1 323 2 258 1 163 1 351 1 20 1 276 1 237 2 279 1 197 1 45 1 148 1 261 1 
262 1 304 1 281 1 64 1 2 1 83 1 174 1 109 1 110 1 337 1 50 2 156 1 338 1 252 2 33 1 311 1 161 1 188 3 323 1 258 1 163 1 351 1 123 1 276 1 237 1 277 1 148 1 328 1 301 1 
222 1 81 1 130 1 304 4 64 3 2 3 174 4 107 1 109 8 27 1 203 1 251 1 50 6 337 5 224 4 87 1 338 5 206 1 178 1 113 1 252 22 268 1 135 1 180 1 181 1 32 2 33 5 11 1 290 1 184 1 185 3 188 44 316 1 294 1 320 1 39 3 322 2 258 3 323 22 163 6 194 4 79 5 148 3 
222 1 81 1 130 1 304 4 64 4 2 4 174 3 107 1 109 8 27 1 203 1 251 1 50 8 337 5 224 5 87 1 338 5 206 1 178 1 113 1 252 22 268 1 135 1 180 1 181 2 32 2 33 5 11 1 290 1 184 1 185 3 188 43 316 1 294 1 320 1 39 3 322 2 258 4 323 21 163 6 194 4 79 5 148 4 
222 1 81 1 130 1 304 7 64 2 2 2 174 7 109 14 27 1 203 1 251 1 50 4 337 8 224 7 87 1 338 7 206 1 178 1 113 1 226 2 252 27 268 1 135 1 180 1 181 1 32 2 33 7 11 1 290 1 184 1 185 2 188 52 294 1 320 1 39 4 322 1 258 2 323 25 163 8 194 4 79 4 148 2 
130 1 304 3 64 2 2 2 174 3 109 6 50 4 337 3 224 3 87 1 338 3 206 2 252 9 268 1 180 1 32 1 33 3 290 1 185 1 188 19 316 1 39 1 322 1 258 2 323 10 163 3 194 2 79 2 242 1 148 2 
222 1 81 1 130 1 304 2 64 3 2 3 174 2 109 4 251 1 337 2 50 6 224 2 87 2 338 3 206 1 113 1 252 14 268 1 180 1 181 2 33 3 290 1 184 1 185 2 188 26 294 1 39 2 323 12 322 2 258 3 163 3 194 4 79 2 148 3 
262 1 311 1 83 1 77 1 
344 1 306 2 293 1 5 1 48 1 190 2 246 1 333 1 250 2 205 1 132 1 20 1 219 1 53 2 352 1 157 1 197 1 43 1 70 1 
306 1 293 1 48 1 190 1 265 1 246 1 333 1 250 2 205 1 132 1 219 1 53 1 352 1 157 1 43 1 197 1 70 1 
63 1 344 1 306 1 347 1 190 1 266 1 213 1 259 1 53 1 90 1 157 1 197 1 70 1 62 1 
344 1 306 1 293 1 5 1 48 1 190 1 246 1 333 1 250 2 205 1 132 1 219 1 53 1 352 1 157 1 197 1 43 1 70 1 
21 1 
302 1 198 1 150 1 235 1 125 1 30 1 10 1 
182 1 198 1 13 1 329 1 343 1 330 1 169 1 24 1 150 1 200 1 153 1 16 1 142 1 88 1 233 1 235 2 125 1 
302 1 304 2 169 4 306 3 171 2 131 2 266 10 88 5 133 1 53 3 270 1 182 3 15 2 14 6 313 2 273 2 190 3 142 6 101 2 20 1 235 8 196 2 197 4 198 9 63 3 329 12 330 5 24 4 150 8 200 5 153 4 248 2 337 2 338 2 287 2 30 1 288 1 70 3 33 2 291 1 343 4 160 1 255 2 292 3 117 1 118 2 120 1 40 2 75 2 163 2 259 1 125 2 127 6 261 3 
198 8 81 1 329 6 304 2 330 1 169 2 24 2 150 5 200 1 153 2 251 1 337 2 88 1 338 2 133 1 113 1 33 2 183 1 182 1 184 1 185 1 343 2 14 5 255 1 118 1 142 3 294 1 39 1 75 2 163 2 235 5 125 2 127 5 79 1 80 1 
198 2 22 1 262 1 330 1 169 1 83 1 24 1 150 2 200 1 153 1 203 1 336 1 337 1 52 1 134 1 11 1 343 1 311 1 161 1 118 1 96 1 320 1 193 1 75 2 163 2 100 1 277 1 328 1 
302 1 198 1 343 1 169 1 24 1 150 1 153 1 235 1 125 1 30 1 
198 5 329 10 304 2 14 5 313 1 150 5 118 1 142 5 75 2 337 2 163 2 338 2 235 5 127 5 33 2 
182 1 88 1 330 1 235 1 125 1 200 1 
63 2 198 1 330 1 169 1 24 1 306 2 150 1 200 1 153 1 266 2 308 1 88 2 133 1 53 2 70 2 182 1 343 1 255 1 120 1 190 2 17 1 192 1 349 1 213 1 259 2 236 1 220 1 197 3 62 1 261 1 
262 2 63 1 64 1 2 1 306 1 83 3 266 1 50 2 86 1 339 1 53 1 136 1 209 1 70 1 311 3 161 2 188 1 190 1 37 1 18 1 323 1 258 1 100 1 259 1 351 1 276 1 277 2 279 1 197 1 148 1 328 2 261 1 
198 1 329 4 343 1 14 2 169 1 255 1 150 2 24 1 142 2 153 1 27 1 133 1 235 4 125 2 127 2 
215 1 91 1 49 1 
335 1 82 1 215 1 91 1 189 1 
215 1 91 1 49 1 
215 1 91 1 49 1 
215 1 91 1 298 1 
215 1 91 1 298 1 
215 1 91 1 298 1 
215 1 91 1 
146 1 229 1 
81 1 64 1 2 1 109 2 27 1 203 1 337 1 50 2 224 2 338 1 178 1 252 6 135 1 32 1 33 1 11 1 290 1 185 1 188 11 320 1 39 1 323 5 258 1 163 2 79 2 148 1 
81 1 64 2 2 2 174 1 109 3 27 1 203 1 285 1 337 1 50 4 224 2 338 1 178 1 252 6 135 1 32 1 33 1 11 1 290 1 185 1 188 11 320 1 39 1 323 5 258 2 163 2 79 2 148 2 
81 1 304 2 64 3 2 3 174 1 109 4 27 1 203 1 285 1 251 1 50 6 337 3 224 3 338 2 178 1 113 1 252 9 135 1 181 1 33 2 11 1 290 1 184 1 185 1 188 19 294 1 320 1 39 1 323 10 258 3 163 3 79 1 148 3 
81 1 304 1 64 3 2 3 174 2 109 5 27 1 203 1 285 1 251 1 50 6 337 2 224 3 338 2 178 1 113 1 252 10 135 1 181 1 33 2 11 1 290 1 184 1 185 1 188 17 294 1 320 1 39 1 323 7 258 3 163 3 79 1 148 3 
81 1 64 1 2 1 109 2 27 1 203 1 337 1 50 2 224 2 338 1 178 1 252 6 135 1 32 1 33 1 11 1 290 1 185 1 188 11 320 1 39 1 323 5 258 1 163 2 79 2 148 1 
81 1 304 2 64 1 2 1 174 1 109 2 251 1 50 2 337 2 224 1 338 2 113 1 252 6 33 2 290 1 184 1 185 1 188 12 294 1 39 1 323 6 258 1 163 2 79 1 148 1 
81 1 304 1 64 4 2 4 174 2 109 5 27 1 203 1 285 1 251 1 50 8 337 2 224 3 338 2 178 1 113 1 252 10 135 1 181 2 33 2 11 1 290 1 184 1 185 1 188 18 294 1 320 1 39 1 323 8 258 4 163 3 79 1 148 4 
81 1 304 2 64 4 2 4 174 3 109 6 251 1 50 8 337 2 224 3 338 3 113 1 252 9 181 2 33 3 290 1 184 1 185 1 188 16 316 1 294 1 39 1 323 7 258 4 163 3 79 1 148 4 
11 1 188 7 174 3 109 6 203 3 320 3 337 1 323 4 224 3 163 1 178 1 252 3 135 2 
81 1 304 1 64 4 2 4 174 1 109 4 27 1 203 1 251 1 50 8 337 2 224 3 338 2 178 1 113 1 252 10 135 1 181 2 33 2 11 1 290 1 184 1 185 1 188 18 316 1 294 1 320 1 39 1 323 8 258 4 163 3 79 1 148 4 
11 1 64 2 2 2 188 8 174 1 109 3 27 1 203 1 320 1 337 1 50 4 323 4 224 2 258 2 163 1 178 1 252 4 135 1 148 2 181 1 
11 1 188 6 109 2 27 1 203 1 320 1 337 1 323 3 224 2 163 1 178 1 252 3 135 1 10 1 
304 1 64 1 2 1 188 4 174 1 109 2 285 1 337 1 50 2 224 1 323 2 258 1 163 1 338 1 252 2 148 1 33 1 
304 1 185 1 188 7 174 1 109 2 39 1 337 1 224 1 323 4 163 1 338 1 252 3 79 2 32 1 33 1 
304 2 64 2 2 2 174 4 223 1 109 9 27 1 203 2 337 3 50 4 224 5 338 2 178 1 226 1 252 11 135 1 32 1 181 2 33 2 11 1 188 23 320 2 39 2 323 12 258 2 163 3 166 1 79 2 148 2 
323 1 188 1 79 1 
39 1 188 1 252 1 
304 1 64 1 313 1 2 1 188 6 174 1 109 3 285 1 50 2 337 1 258 1 323 3 224 2 163 1 338 1 252 3 148 1 33 1 
81 1 304 2 64 1 2 1 174 1 109 2 251 1 50 2 337 2 224 1 338 2 113 1 252 6 33 2 290 1 184 1 185 1 188 12 294 1 39 1 323 6 258 1 163 2 79 1 148 1 
11 1 188 6 174 1 109 2 203 1 320 1 337 1 323 3 224 1 163 1 252 3 
64 1 2 1 188 3 174 1 223 1 109 2 203 1 320 1 50 2 224 1 323 2 258 1 178 1 252 1 135 1 181 1 148 1 
290 1 11 1 64 1 2 1 188 10 174 2 109 5 203 2 320 2 50 2 337 2 258 1 224 3 323 5 163 2 52 1 252 5 148 1 
290 1 64 1 2 1 188 2 174 1 109 1 50 2 258 1 163 1 252 2 148 1 33 1 
290 1 304 1 64 1 2 1 188 4 174 1 109 2 337 1 50 2 224 1 323 2 258 1 163 1 338 1 252 2 148 1 33 1 
290 1 64 3 2 3 188 3 223 1 316 1 174 1 109 2 203 1 320 1 50 6 323 2 258 3 224 1 252 1 181 1 148 3 
304 3 64 5 2 5 223 1 174 5 109 12 27 1 203 3 285 1 50 10 337 5 224 7 338 3 178 1 252 16 135 1 181 2 32 1 33 3 11 2 290 1 210 1 71 1 115 1 185 1 188 34 316 1 320 3 39 3 323 18 258 5 163 5 79 4 148 5 
262 1 149 1 311 1 83 1 66 1 339 1 195 1 
12 1 262 1 149 1 311 1 312 1 66 1 83 1 176 1 339 1 218 1 195 1 341 1 
63 1 213 1 259 1 306 1 53 1 190 1 197 1 266 1 70 1 62 1 10 1 
63 1 262 1 311 2 161 1 83 2 306 1 190 1 266 1 18 1 37 1 259 1 339 1 53 1 197 1 158 1 328 1 70 1 261 1 
63 2 262 2 199 1 311 2 161 1 83 2 306 1 117 1 190 1 248 1 266 3 18 1 37 1 336 1 101 1 339 1 53 1 208 1 197 1 158 1 328 2 70 1 261 2 
262 2 63 2 199 1 306 2 83 2 266 3 248 1 336 1 339 1 53 2 208 1 158 1 70 1 311 2 140 1 161 1 117 1 190 2 18 1 101 1 278 1 197 1 328 2 261 2 
63 1 263 1 330 2 140 1 306 3 292 1 171 1 117 1 200 2 317 1 190 3 131 1 248 1 266 4 88 1 259 1 101 1 235 1 53 3 125 1 197 1 70 1 261 1 
63 1 330 2 140 1 306 3 292 1 171 1 117 1 273 1 200 2 190 3 131 1 248 1 266 4 88 1 259 1 101 1 235 1 53 3 125 1 197 1 70 1 261 1 
306 1 102 1 53 1 190 1 197 1 70 1 
103 1 291 1 63 2 306 7 228 1 190 7 333 1 266 3 154 1 349 1 350 1 28 1 145 1 259 2 102 1 20 1 53 6 220 1 197 3 70 2 261 1 
262 1 305 1 306 1 83 2 2 2 266 1 50 4 224 2 53 1 89 1 178 1 136 1 135 1 11 1 311 2 188 6 190 1 18 1 320 1 323 3 20 1 276 2 237 1 279 1 197 1 148 2 328 1 63 1 64 2 109 2 110 1 203 1 27 1 156 1 337 1 339 2 252 3 158 1 70 1 161 1 37 1 258 2 163 1 351 2 123 1 45 1 261 1 
302 1 198 1 330 3 169 2 150 1 306 1 24 2 171 1 200 3 153 2 131 1 266 2 88 2 53 1 287 1 30 1 182 1 343 2 15 1 292 1 273 1 120 1 190 1 319 1 259 1 235 1 125 1 196 1 
291 1 63 1 160 1 171 1 306 2 190 2 266 2 102 1 20 1 53 2 197 2 70 1 261 1 
63 1 140 1 306 4 190 4 266 1 213 1 68 1 259 1 20 1 53 4 197 1 62 1 70 1 
63 1 186 1 306 2 117 1 190 2 17 1 266 1 192 1 349 1 53 2 220 1 197 2 70 1 261 1 
205 1 259 1 306 1 53 1 48 1 190 1 246 1 197 1 70 1 250 1 
63 1 170 1 306 2 20 1 228 1 53 2 190 2 197 1 266 1 333 1 70 1 
63 2 306 5 117 1 228 1 190 5 266 3 213 1 350 1 68 1 259 1 145 1 20 1 53 4 197 2 62 1 70 2 
63 2 306 5 117 1 228 1 190 5 266 3 213 1 68 1 259 1 267 1 145 1 20 1 53 4 197 2 62 1 70 2 
63 1 262 1 311 2 161 1 83 2 306 1 190 1 266 1 18 1 259 1 339 1 53 1 278 1 197 1 158 1 328 1 70 1 261 1 
291 1 63 1 306 1 117 1 190 1 266 1 154 1 349 1 53 1 220 1 197 2 70 1 261 1 
296 1 257 1 77 1 243 1 
296 1 217 1 121 1 
296 1 257 1 339 1 108 1 243 1 
114 1 342 1 199 1 330 2 200 2 131 1 108 2 121 1 319 1 111 1 336 1 296 1 257 2 339 1 217 1 235 1 125 1 208 1 243 2 
282 1 143 1 10 1 
271 1 282 1 216 1 141 1 143 1 249 1 
207 1 85 1 141 1 
46 1 274 1 271 1 122 1 282 1 112 1 216 1 25 2 141 3 143 1 249 3 
271 1 282 1 216 1 141 2 143 1 230 1 227 1 249 2 
139 1 46 1 271 1 69 1 216 1 352 1 141 1 48 1 201 1 249 1 250 1 
46 1 271 1 216 1 141 1 143 1 249 1 
139 1 46 1 271 1 282 1 216 1 141 1 143 1 249 1 
46 1 271 2 315 1 141 2 143 1 175 1 249 2 36 1 216 2 
139 1 46 1 271 1 282 1 331 1 141 3 143 1 230 2 249 3 19 1 216 1 69 1 241 1 
46 1 205 1 94 1 271 1 282 1 216 1 219 1 352 1 141 2 48 1 143 1 230 1 249 2 250 2 
139 1 46 1 271 2 19 1 0 1 282 1 69 1 216 2 141 4 143 1 230 2 227 1 249 4 
46 1 271 1 282 1 216 1 141 1 143 1 249 1 
139 1 168 1 271 1 282 2 25 1 141 4 143 2 230 2 249 4 274 1 19 1 112 1 216 1 69 1 
46 1 271 1 282 1 29 1 216 1 283 1 67 1 141 2 143 1 230 1 249 2 
46 1 271 1 282 1 25 2 141 3 247 1 143 1 249 3 274 2 112 1 216 1 
139 2 172 2 124 1 334 1 
46 1 271 1 216 1 346 1 141 1 249 1 
46 1 271 1 282 1 216 1 141 2 143 1 241 1 230 1 249 2 
232 1 
46 1 271 1 282 1 216 1 141 1 143 1 249 1 
46 1 271 1 282 1 216 1 25 1 141 3 241 1 143 1 230 1 249 3 
139 1 168 1 19 1 69 1 
143 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 99 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 308 268 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
355 2 71 1 316 2 120 1 334 2 210 6 157 2 159 1 80 4 58 1 31 5 254 1 253 3 366 1 104 1 13 1 38 2 107 9 136 1 170 1 20 1 326 1 25 9 309 2 282 1 312 1 174 2 220 1 
355 2 71 1 316 2 120 1 334 2 210 6 157 2 159 1 80 4 58 1 31 5 254 1 253 3 366 1 104 1 13 1 38 2 107 9 136 1 170 1 20 1 326 1 309 2 25 9 282 1 312 1 174 2 220 1 
355 2 71 1 316 2 120 1 334 2 210 7 157 2 159 1 80 5 58 1 31 6 254 1 253 4 366 1 104 1 13 1 38 2 107 10 136 1 170 1 20 1 326 1 309 2 25 10 282 1 312 1 174 2 220 1 
355 2 71 1 316 2 120 1 334 2 210 4 157 1 80 3 58 1 31 4 254 1 253 2 366 1 104 1 13 1 38 2 107 7 136 1 170 1 20 1 326 1 309 2 25 7 282 1 312 1 174 2 220 1 
104 1 355 1 38 1 71 1 107 4 334 1 210 3 157 2 20 1 159 1 25 4 309 1 80 2 31 3 253 1 254 1 174 1 366 1 
13 1 355 1 16 1 38 1 107 2 316 1 302 1 334 1 20 1 25 2 374 1 58 1 31 1 254 1 174 1 366 1 
355 2 107 3 316 1 136 1 210 1 20 1 25 3 80 1 31 2 254 1 174 2 253 1 366 1 
104 1 355 2 38 1 71 1 272 1 107 9 316 1 136 1 334 1 210 7 157 2 20 1 159 1 309 1 25 9 80 4 282 1 312 1 31 5 254 1 174 2 101 1 253 3 366 1 
104 1 355 2 38 1 71 1 272 1 107 9 316 1 136 1 334 1 210 7 157 2 20 1 159 1 309 1 25 9 80 4 282 1 312 1 31 5 254 1 174 2 101 1 253 3 366 1 
94 1 299 1 238 1 
190 1 299 1 305 2 
281 2 83 1 320 2 292 2 39 2 45 2 371 2 184 1 
331 1 147 1 51 1 118 1 119 1 95 1 27 1 183 1 4 1 335 1 184 1 245 1 320 3 338 1 360 2 123 1 292 2 365 1 234 2 340 2 275 1 83 1 256 1 213 1 18 1 192 1 39 2 371 2 344 2 281 3 264 1 175 1 45 2 354 2 314 1 179 1 315 1 
281 1 59 1 320 1 65 1 292 1 274 1 39 1 45 1 371 1 184 1 
134 1 299 1 84 1 39 1 274 1 238 1 289 1 240 1 306 1 281 1 320 1 144 1 339 1 199 1 
281 1 320 1 134 1 299 1 292 1 84 2 199 2 339 1 274 1 39 1 238 1 45 1 371 1 240 1 289 1 
84 1 199 1 284 1 227 1 139 1 
59 1 35 1 299 1 84 2 274 1 39 1 238 1 371 1 184 1 139 1 281 1 320 1 65 1 292 1 199 2 128 1 45 1 284 1 132 1 
84 1 199 1 139 1 
35 1 59 1 84 1 274 1 39 1 371 1 184 1 281 1 320 1 65 1 292 1 199 1 284 1 45 1 
299 1 
243 1 274 1 184 1 320 1 292 1 132 1 35 1 59 1 299 1 84 2 39 1 238 1 371 1 139 1 281 1 65 1 199 2 284 1 45 1 
47 1 49 1 225 2 208 2 76 1 288 1 274 1 226 2 184 1 6 1 8 2 320 1 248 5 252 4 292 1 11 1 363 1 103 1 323 1 132 1 59 1 35 1 299 2 84 5 39 1 238 2 171 2 371 1 139 2 281 1 372 1 351 1 65 1 199 5 377 1 45 1 284 2 202 2 
83 1 94 1 
83 2 39 2 371 1 281 2 307 1 345 1 320 2 292 1 45 1 
346 1 266 1 303 1 
147 1 83 1 118 1 97 1 18 1 27 1 192 1 344 1 281 1 245 1 264 1 320 1 360 1 175 1 314 1 234 1 
147 1 118 1 27 1 18 1 303 1 192 1 39 1 344 1 264 1 245 1 281 2 320 2 359 1 79 1 360 1 292 1 175 1 45 1 314 1 234 1 
281 3 83 1 320 3 79 1 292 3 39 3 45 3 371 1 
281 1 320 1 65 1 292 1 274 1 39 1 45 1 
281 1 307 1 345 1 320 1 292 1 274 1 39 1 45 1 371 1 
331 1 147 1 118 1 119 1 27 1 274 1 4 1 289 1 184 1 245 1 320 4 338 1 79 1 359 1 360 1 123 1 292 3 339 1 365 1 234 1 340 1 275 1 83 1 256 1 134 1 213 1 18 1 109 1 84 1 192 1 39 3 41 1 371 2 344 1 240 1 264 1 307 1 281 4 199 1 175 1 45 3 354 2 314 1 315 1 
281 2 185 1 83 1 320 2 79 1 292 1 39 2 45 1 306 1 
134 1 299 1 84 1 109 1 274 1 39 3 371 1 289 1 240 1 307 1 281 3 160 1 320 3 359 1 79 2 292 3 199 1 339 1 45 3 
39 2 303 1 371 1 307 1 281 2 346 1 320 2 79 1 292 2 45 2 
147 1 83 1 118 1 18 1 27 1 192 1 344 1 281 1 245 1 264 1 320 1 360 1 175 1 314 1 234 1 
147 1 83 1 148 1 18 1 27 1 192 1 344 1 281 1 264 1 320 1 360 1 175 1 314 1 234 1 330 1 
331 1 208 1 4 1 54 1 335 2 161 1 56 1 338 1 123 1 365 2 233 1 340 4 34 1 256 1 135 1 213 1 259 1 303 2 19 1 346 2 266 2 310 1 354 2 202 1 
281 1 320 1 134 1 292 1 274 1 39 1 376 1 45 1 
307 1 281 5 185 1 83 1 320 5 359 1 79 2 286 1 292 4 39 5 45 4 371 1 177 1 306 1 
281 2 320 2 65 1 292 2 376 1 274 1 39 2 45 2 
287 1 293 1 
287 1 293 1 
37 1 81 1 
37 1 81 1 
37 1 81 1 
287 1 152 1 293 1 
82 1 287 1 293 1 
37 1 287 2 261 1 293 2 110 1 81 1 
287 1 152 1 293 1 
287 1 152 1 293 1 
333 1 287 1 293 1 
333 1 287 1 293 1 
333 1 287 1 293 1 
299 1 287 2 258 2 153 1 98 1 84 2 110 1 86 2 291 1 90 2 349 1 42 1 164 1 249 2 293 2 199 2 328 3 329 1 116 2 
287 1 153 1 206 1 156 1 5 1 320 2 292 2 293 1 82 1 83 1 258 1 84 1 39 2 86 1 281 2 90 1 373 1 269 1 199 1 270 1 45 2 328 1 116 1 203 1 
309 1 38 1 334 1 
38 1 16 1 334 1 
309 2 16 1 356 1 334 3 178 1 21 1 
309 1 16 1 356 1 334 2 21 1 194 1 
309 1 16 1 356 1 334 2 21 2 
48 1 225 1 208 1 28 1 226 1 8 1 248 2 57 1 231 1 252 3 11 1 233 1 132 1 34 1 190 1 14 2 299 2 301 2 84 5 111 1 238 1 305 3 280 2 139 1 347 1 373 1 353 1 269 1 270 1 199 5 284 4 202 1 
0 1 274 1 227 1 184 1 320 1 292 1 35 1 59 1 191 1 299 1 84 2 39 1 238 1 216 1 371 1 139 1 281 1 65 1 199 2 284 2 45 1 
47 1 225 1 208 1 28 1 226 1 8 1 57 1 248 2 231 1 252 3 233 1 34 1 190 2 14 2 299 3 301 1 84 3 238 1 111 1 280 2 305 4 347 1 373 1 199 3 284 2 202 1 
47 1 208 1 8 1 248 2 57 1 252 3 292 1 59 1 14 2 105 1 299 3 301 1 111 1 305 4 347 1 65 1 224 1 225 1 274 1 28 1 226 1 184 1 320 1 231 1 127 1 233 1 34 1 35 1 190 2 84 3 39 1 238 1 371 1 280 2 281 1 373 2 199 3 284 2 45 1 202 1 
60 1 94 1 192 1 
2 1 192 1 
85 1 
27 1 192 1 
60 2 27 1 192 3 130 1 40 1 314 1 
27 1 192 1 314 1 
113 1 192 1 
72 1 73 1 300 1 208 1 76 1 259 2 54 3 335 4 372 1 172 1 143 2 166 1 365 3 232 1 323 1 202 1 340 7 
72 1 73 1 300 1 208 1 76 1 259 2 54 3 335 4 372 1 172 1 143 2 166 1 365 3 232 1 323 1 202 1 340 7 
72 1 73 1 204 1 300 1 208 1 76 1 259 2 54 3 335 4 372 1 172 1 143 2 166 1 365 3 232 1 323 1 202 1 340 7 
143 1 73 1 232 2 335 1 99 1 340 1 
331 2 180 1 73 1 208 1 76 1 4 2 54 4 335 5 338 2 123 2 166 1 232 1 365 4 323 1 340 9 108 1 300 1 259 3 172 1 372 1 143 2 197 1 354 4 202 1 
147 1 221 1 355 1 316 1 334 2 210 1 247 1 337 1 122 1 360 1 362 1 31 1 254 1 366 1 234 1 38 1 16 1 107 2 17 1 18 1 138 1 344 1 20 1 142 1 309 1 25 2 174 1 219 1 46 1 178 1 
147 1 221 1 355 1 316 1 334 2 210 2 247 1 337 1 122 1 360 1 362 1 31 1 366 1 234 1 277 1 133 1 38 1 16 1 107 3 18 1 138 1 344 1 279 1 20 1 142 1 309 1 25 3 174 1 219 1 178 1 
147 1 221 1 133 1 277 1 38 1 16 1 107 2 316 1 18 1 334 2 210 2 138 1 344 1 20 1 142 1 309 1 25 2 122 1 360 1 362 1 31 1 219 1 366 1 178 1 234 1 
147 1 70 1 52 1 355 1 235 1 285 1 316 2 107 1 18 1 27 1 192 1 138 2 279 1 344 1 142 2 25 1 122 2 360 1 250 1 174 1 175 1 189 1 234 1 
147 1 221 1 355 1 316 1 334 2 247 1 337 1 122 1 360 1 362 1 254 1 234 1 277 1 38 1 16 1 107 1 18 1 138 1 344 1 142 1 309 1 25 1 174 1 219 1 46 1 178 1 
68 1 
147 1 52 1 96 2 209 1 289 1 8 1 162 1 165 1 248 2 211 1 252 2 11 1 339 1 12 1 102 1 341 1 342 2 299 1 18 1 214 3 344 2 305 2 22 1 306 1 217 2 347 1 26 1 352 1 175 2 271 1 182 1 27 1 225 1 274 1 226 1 320 1 360 2 125 1 33 1 129 1 189 1 132 2 234 2 190 2 134 1 84 4 137 1 192 1 39 1 139 4 240 1 281 1 144 1 199 4 
341 1 134 1 182 1 214 2 84 2 274 1 39 1 139 1 240 1 289 1 22 1 306 1 281 1 320 1 211 1 144 1 339 1 199 2 33 1 129 1 
243 1 182 1 274 1 289 1 320 1 211 1 339 1 129 1 33 1 132 1 341 1 134 1 299 1 214 3 84 3 39 1 238 1 139 1 240 1 306 1 281 1 26 1 144 1 199 3 
341 1 134 1 182 1 214 2 84 2 274 1 39 1 139 1 240 1 289 1 22 1 306 1 281 1 320 1 211 1 144 1 339 1 199 2 33 1 129 1 102 1 
243 1 182 1 274 2 184 1 289 1 357 1 320 2 211 1 292 1 339 1 129 1 33 1 102 1 132 1 59 1 35 1 341 1 134 1 299 1 214 3 84 3 39 2 238 1 371 1 139 2 240 1 306 1 22 1 281 2 26 1 65 1 144 1 199 3 45 1 
182 1 96 2 225 1 274 1 226 1 289 1 8 1 162 1 320 1 165 1 248 1 211 1 252 1 125 1 11 1 339 1 129 1 33 1 102 1 132 1 190 2 341 1 342 2 134 1 299 2 214 3 84 3 39 1 238 1 139 2 305 2 240 1 22 1 306 1 281 1 217 2 26 1 144 1 352 1 199 3 
182 1 96 2 225 1 274 1 226 1 289 1 290 1 8 1 162 2 320 1 248 1 211 1 252 1 125 1 11 1 339 1 129 1 33 1 102 2 132 2 190 2 341 1 342 2 134 1 106 1 299 1 214 4 84 4 39 1 238 1 139 4 240 1 22 2 306 1 281 1 217 2 348 1 26 2 144 1 352 1 199 4 
96 2 289 1 290 1 8 1 162 2 211 1 248 1 252 1 292 1 11 1 339 1 102 2 59 1 341 1 106 1 342 2 299 1 214 4 306 1 22 2 348 1 217 2 26 2 65 1 352 1 182 1 225 1 274 2 226 1 184 1 320 2 125 1 33 1 129 1 132 2 35 1 190 2 134 1 84 4 39 2 238 1 371 1 240 1 139 4 281 2 144 1 199 4 45 1 
289 1 8 1 211 1 248 1 292 1 11 1 339 1 102 2 295 2 59 1 341 1 342 2 299 1 343 1 214 4 305 2 112 1 306 1 22 2 348 1 217 2 26 2 65 1 352 1 69 1 182 1 225 1 274 2 226 1 184 1 320 2 33 1 129 1 132 2 35 1 134 1 84 4 39 2 238 1 371 1 240 1 139 4 281 2 144 1 199 4 45 1 201 2 
96 2 289 1 290 1 8 1 162 2 211 1 248 1 252 1 292 1 11 1 339 1 102 3 59 1 341 1 106 1 342 2 299 1 214 4 22 3 306 1 348 1 217 2 26 2 65 1 352 1 182 1 225 1 274 2 226 1 184 1 320 2 125 1 33 1 129 1 132 2 35 1 190 2 134 1 84 4 39 2 238 1 371 1 139 5 240 1 281 2 145 1 144 1 199 4 45 1 
96 2 289 1 290 1 8 1 162 2 211 1 248 1 252 1 292 1 11 1 339 1 102 3 59 1 341 1 106 1 342 2 299 1 214 5 22 3 306 1 348 1 217 2 26 3 65 1 352 1 182 1 225 1 274 2 226 1 184 1 320 2 125 1 33 1 129 1 132 2 35 1 190 2 134 1 84 4 39 2 238 1 371 1 139 5 240 1 281 2 145 1 144 1 199 4 45 1 
289 1 8 1 211 1 248 1 165 1 292 1 11 1 339 1 102 2 295 2 59 1 341 1 342 2 299 1 214 4 305 2 306 1 22 2 217 2 26 2 65 1 352 1 69 1 182 1 225 1 274 2 226 1 184 1 320 2 33 1 129 1 132 2 35 1 134 1 84 4 39 2 238 1 371 1 240 1 139 4 281 2 144 1 199 4 45 1 201 2 
331 1 94 1 76 1 208 1 4 1 54 2 335 3 161 1 338 1 123 1 166 1 365 3 323 1 340 6 256 1 83 2 213 1 259 2 303 1 346 1 372 1 172 1 266 1 143 1 354 2 202 1 
331 2 223 3 154 1 208 1 183 1 155 1 4 2 54 2 335 8 57 2 338 2 123 2 365 6 233 1 340 14 275 1 34 2 83 1 256 1 324 1 61 1 213 2 300 1 259 1 303 11 169 1 88 1 89 1 346 4 266 11 176 3 354 4 202 2 
147 1 331 1 118 1 150 1 27 1 97 1 154 1 183 1 4 1 335 1 245 1 320 2 79 1 359 1 338 1 360 1 123 1 292 1 365 1 234 1 340 2 275 1 298 1 83 1 256 1 213 1 18 1 192 1 39 1 344 1 264 1 281 2 346 1 283 1 175 1 45 1 314 1 354 2 
331 3 147 2 50 1 208 3 154 1 4 3 54 8 335 10 245 2 55 2 57 2 338 3 292 1 166 1 340 20 256 3 213 3 300 4 18 2 260 1 259 4 303 7 344 3 264 2 346 7 172 1 266 7 175 1 354 6 314 2 315 2 222 2 118 2 27 2 76 1 183 1 121 2 320 3 359 1 79 1 360 3 123 3 30 2 365 10 323 1 234 3 233 2 275 1 34 2 276 1 83 2 277 1 39 1 192 2 281 3 372 1 143 1 45 1 202 3 
147 2 331 2 51 2 52 1 149 1 27 2 183 1 4 2 335 1 229 1 161 1 320 1 186 1 79 1 338 2 360 8 123 2 292 1 32 1 365 1 234 8 189 1 340 2 275 1 256 2 277 1 213 2 17 1 18 2 39 1 192 3 263 1 344 7 281 1 267 1 67 1 175 2 45 1 354 4 
331 1 154 1 208 1 4 1 54 1 335 1 320 1 78 1 57 1 338 1 123 1 292 1 365 2 233 1 340 3 34 1 256 1 213 1 259 1 303 1 39 1 371 1 307 1 281 1 346 1 266 1 45 1 354 2 202 1 
331 1 34 1 256 1 213 1 300 1 303 1 4 1 54 1 335 2 346 1 161 1 56 1 266 1 338 1 123 1 354 2 340 2 202 1 
331 1 256 1 213 1 135 1 259 1 208 1 303 1 4 1 54 1 346 1 161 1 266 1 338 1 123 1 365 2 354 2 233 1 340 2 
331 1 34 1 256 1 213 1 300 1 259 1 208 1 303 2 4 1 54 2 335 2 346 2 161 1 266 2 57 1 338 1 123 1 365 2 354 2 233 1 340 4 202 1 
331 1 34 1 256 1 213 1 300 1 303 1 4 1 54 1 335 2 229 1 346 1 56 1 266 1 338 1 123 1 354 2 340 2 202 1 
331 1 256 1 213 1 135 1 259 1 208 1 303 1 4 1 54 1 229 1 346 1 266 1 338 1 123 1 365 2 354 2 233 1 340 2 
331 1 34 1 256 1 213 1 300 1 259 1 208 1 303 2 4 1 54 2 335 2 229 1 346 2 266 2 57 1 338 1 123 1 365 2 354 2 233 1 340 4 202 1 
331 1 34 1 256 1 213 1 300 1 259 1 208 1 303 2 4 1 54 2 335 2 346 2 266 2 57 1 338 1 123 1 365 2 354 2 233 1 202 1 340 4 
147 1 331 1 118 1 27 1 183 1 4 1 335 1 245 1 320 1 338 1 360 1 123 1 365 1 234 1 340 2 275 1 83 1 256 1 213 1 18 1 192 1 344 1 264 1 281 1 175 1 314 1 354 2 315 1 
147 1 331 1 148 1 27 1 183 1 4 1 335 1 320 1 338 1 360 1 123 1 365 1 234 1 340 2 275 1 83 1 256 1 213 1 18 1 192 1 344 1 264 1 281 1 198 1 175 1 314 1 354 2 330 1 
331 1 34 1 256 1 213 1 300 1 259 1 208 1 154 1 303 2 4 1 54 2 335 2 346 2 266 2 57 1 338 1 123 1 365 2 354 2 233 1 340 4 202 1 
147 1 331 1 118 1 27 1 208 1 4 1 54 2 335 2 245 1 320 1 57 1 338 1 360 1 30 1 123 1 365 2 233 1 234 1 340 4 34 1 256 1 213 1 300 1 17 1 18 1 259 1 303 2 192 1 344 1 264 1 281 1 346 2 266 2 314 1 354 2 202 1 315 1 
331 1 92 1 208 1 154 1 4 1 54 1 335 2 320 1 57 1 338 1 123 1 292 1 365 1 233 1 340 3 34 1 256 1 213 1 300 1 39 1 303 1 371 1 307 1 281 1 346 1 266 1 45 1 354 2 202 1 
331 3 180 1 332 3 223 4 208 4 4 3 54 5 335 15 358 1 246 1 319 1 57 4 29 1 338 3 123 3 365 17 131 1 233 4 340 32 34 4 168 1 108 1 300 3 259 2 169 1 215 1 304 1 140 2 265 1 88 3 308 1 268 1 146 1 200 1 176 3 354 6 202 4 
331 4 180 2 332 4 223 4 208 3 4 4 54 6 335 17 358 1 246 1 319 1 57 4 29 1 338 4 123 4 365 16 131 1 233 3 340 33 34 4 168 1 108 1 300 3 259 3 169 1 215 1 304 1 140 2 265 1 88 3 308 1 268 1 146 1 200 1 176 3 354 8 202 4 
331 2 180 1 332 3 223 4 76 1 208 7 155 2 4 2 54 12 335 24 358 1 246 1 319 1 57 6 29 1 338 2 123 2 166 1 365 22 131 1 323 1 233 6 340 46 34 6 168 1 108 1 300 6 259 6 169 2 215 1 304 1 140 1 88 2 308 1 372 1 172 1 268 1 143 1 200 1 176 4 354 4 202 7 
331 2 332 2 223 2 208 3 4 2 54 6 335 9 246 1 319 1 57 3 338 2 123 2 365 10 233 3 340 19 34 3 108 1 300 3 259 3 169 1 304 1 140 1 265 1 88 1 308 2 268 1 218 1 176 1 354 4 202 3 
331 3 180 2 332 3 223 2 208 2 4 3 54 2 335 13 358 1 246 1 319 2 57 3 338 3 29 1 123 3 365 11 131 1 233 2 340 24 34 3 168 1 300 1 108 1 259 1 215 1 304 1 140 2 88 2 308 1 268 1 200 1 176 2 354 6 202 3 
291 1 90 1 349 1 241 1 287 1 258 1 293 1 110 1 86 1 116 1 
82 1 203 1 
24 1 90 1 91 1 230 1 287 1 258 1 293 1 86 1 116 1 
299 1 287 1 153 1 258 1 98 1 84 1 110 1 86 1 291 1 90 1 349 1 42 1 164 1 249 1 199 1 293 1 328 2 116 1 
299 1 287 1 153 1 258 1 98 1 84 1 110 1 86 1 291 1 90 1 349 1 42 1 164 1 249 1 199 1 293 1 328 2 116 1 
299 1 287 1 153 1 258 1 98 1 84 1 110 1 86 1 291 1 90 1 349 1 42 1 164 1 249 1 199 1 293 1 328 2 116 1 
311 1 152 1 261 1 
311 1 152 1 261 1 
151 1 333 1 
151 1 333 1 261 1 
156 1 5 1 
287 1 206 1 156 1 5 1 320 2 164 1 249 1 292 2 293 1 82 1 83 1 258 1 84 1 39 2 86 1 87 1 281 2 90 1 373 1 269 1 199 1 270 1 284 1 45 2 328 1 116 1 203 1 
311 1 152 1 
151 1 333 1 261 1 
147 1 331 1 51 2 149 1 27 1 154 1 183 1 4 1 335 1 7 1 320 2 163 1 338 1 360 2 123 1 322 1 365 1 234 2 340 2 275 1 256 1 325 1 213 1 18 1 192 1 39 2 344 2 281 2 267 1 354 2 115 1 
147 1 277 1 1 1 38 1 16 1 17 1 18 1 334 2 344 2 336 1 142 1 337 1 309 1 360 2 362 1 313 1 219 1 178 1 234 2 
147 1 277 1 38 1 16 1 18 1 334 2 344 1 158 1 142 1 337 1 309 1 360 1 362 1 313 1 219 1 178 1 234 1 
147 1 52 1 235 1 18 1 27 1 192 1 262 1 344 1 336 1 142 1 360 1 175 1 234 1 189 1 
147 1 277 1 1 1 38 1 16 1 18 1 334 2 344 1 336 1 142 1 337 1 309 1 360 1 362 1 313 1 219 1 178 1 234 1 
114 1 
49 1 248 1 94 1 299 1 252 1 363 1 238 1 
190 1 299 2 225 1 96 1 84 1 238 1 226 1 139 1 305 1 8 1 162 1 248 1 125 1 252 1 11 1 199 1 132 1 
147 2 2 2 53 1 208 1 8 2 57 1 248 3 252 4 11 2 339 1 14 3 60 1 167 1 299 3 18 1 171 1 344 1 305 6 347 1 66 1 175 1 314 1 222 1 75 1 27 1 225 2 226 2 360 1 130 1 234 1 132 1 233 1 367 1 34 1 190 3 84 2 192 4 239 1 139 2 280 3 44 1 199 2 202 1 
223 1 225 2 208 2 226 2 358 1 8 2 248 4 57 2 29 1 361 1 252 7 11 2 131 1 132 1 233 2 34 2 14 5 190 3 299 4 168 1 84 1 238 1 171 1 139 1 305 6 280 5 88 1 199 1 200 1 176 1 202 2 
225 1 288 1 76 1 208 1 274 1 226 1 184 1 6 1 8 1 320 1 248 2 252 2 11 1 292 1 323 1 35 1 59 1 106 1 84 1 39 1 171 2 371 1 281 1 372 1 65 1 199 1 45 1 202 2 
49 1 299 1 225 1 238 1 226 1 8 1 248 1 252 1 11 1 363 1 
34 2 14 5 190 5 222 1 299 5 208 2 171 2 280 5 305 10 6 1 57 2 248 5 252 5 233 2 202 2 
35 1 59 1 299 1 84 1 274 1 39 1 238 1 371 1 184 1 139 1 281 1 320 1 65 1 292 1 199 1 45 1 132 1 
47 1 147 3 271 1 52 1 27 2 225 2 209 1 207 1 318 1 226 2 228 1 8 2 248 1 360 2 251 1 252 1 11 1 188 1 12 1 234 2 132 1 189 1 18 2 84 2 192 2 344 2 139 2 347 1 175 2 199 2 314 1 
147 1 331 1 118 1 119 1 27 1 4 1 184 1 245 1 320 3 338 1 360 1 123 1 292 2 365 1 234 1 340 1 275 1 83 1 256 1 213 1 18 1 39 2 192 1 344 1 371 2 281 3 264 1 175 1 45 2 354 2 314 1 315 1 
271 1 190 2 14 2 299 4 225 1 238 2 226 1 280 2 305 4 8 1 248 2 347 1 143 1 252 1 11 1 
86 1 297 1 116 1 
291 1 196 1 86 1 156 1 116 1 
86 1 297 1 116 1 
86 1 297 1 116 1 
212 1 86 1 116 1 
212 1 86 1 116 1 
212 1 86 1 116 1 
86 1 116 1 
287 1 293 1 
331 1 223 1 208 1 76 1 4 1 54 2 335 4 338 1 123 1 166 1 365 4 131 1 323 1 340 8 108 1 259 2 88 1 172 1 372 1 143 1 176 1 354 2 202 1 
331 2 223 2 208 1 76 1 4 2 54 3 335 6 57 1 338 2 123 2 166 1 294 1 365 5 131 1 323 1 340 11 34 1 108 1 300 1 259 2 169 1 88 1 372 1 172 1 143 1 176 1 354 4 202 2 
331 3 180 1 223 1 208 2 4 3 54 2 335 6 358 1 57 2 338 3 29 1 123 3 294 1 365 7 131 1 233 2 340 13 34 2 168 1 300 1 108 1 259 1 88 1 200 1 176 1 354 6 202 2 
331 3 180 1 223 1 208 1 4 3 54 2 335 7 358 1 57 2 338 3 29 1 123 3 294 1 365 4 131 1 233 1 340 11 34 2 168 1 300 1 108 1 259 1 88 1 176 1 200 1 354 6 202 2 
331 1 223 1 208 1 76 1 4 1 54 2 335 4 338 1 123 1 166 1 365 4 131 1 323 1 340 8 108 1 259 2 88 1 172 1 372 1 143 1 176 1 354 2 202 1 
331 1 223 1 208 2 4 1 54 2 335 6 358 1 57 2 338 1 29 1 123 1 365 6 131 1 233 2 340 12 34 2 168 1 300 1 108 1 259 1 88 1 176 1 200 1 354 2 202 2 
331 4 180 2 223 1 208 1 4 4 54 2 335 7 358 1 57 2 338 4 29 1 123 4 294 1 365 5 131 1 233 1 340 12 34 2 168 1 300 1 108 1 259 1 88 1 200 1 176 1 354 8 202 2 
331 4 180 2 223 1 208 1 4 4 54 4 335 7 358 1 57 2 338 4 29 1 123 4 365 5 131 1 233 1 340 12 34 2 168 1 300 2 108 1 259 2 88 1 265 1 200 1 176 1 354 8 202 2 
300 3 208 1 259 3 76 1 54 6 335 3 172 2 372 3 166 1 365 4 323 3 340 7 202 1 
331 4 180 2 223 1 208 1 4 4 54 2 335 7 358 1 57 2 338 4 29 1 123 4 365 5 131 1 233 1 340 12 34 2 168 1 300 1 108 1 259 1 88 1 265 1 200 1 176 1 354 8 202 2 
331 2 180 1 300 1 208 1 76 1 259 2 4 2 54 3 335 4 172 1 372 1 338 2 143 1 123 2 166 1 365 4 354 4 323 1 202 1 340 8 
94 1 259 2 76 1 208 1 54 2 335 3 172 1 372 1 143 1 166 1 365 3 323 1 202 1 340 6 
331 1 34 1 300 1 259 1 208 1 4 1 54 2 335 2 57 1 338 1 123 1 294 1 365 2 354 2 233 1 202 1 340 4 
34 1 223 2 300 1 259 1 208 1 169 1 54 2 335 3 88 1 57 1 176 1 365 4 233 1 340 7 202 1 
331 2 180 2 223 2 76 1 208 3 155 1 4 2 54 9 335 11 57 2 338 2 123 2 166 1 365 12 323 2 233 2 340 23 34 2 61 1 278 1 300 4 259 5 169 1 372 2 172 1 143 1 176 2 354 4 202 3 
223 1 365 1 340 1 
176 1 335 1 340 1 
331 1 34 1 222 1 300 1 208 1 259 2 4 1 54 3 335 3 57 1 338 1 123 1 294 1 365 3 354 2 233 1 340 6 202 1 
331 1 223 1 208 2 4 1 54 2 335 6 358 1 57 2 338 1 29 1 123 1 365 6 131 1 233 2 340 12 34 2 168 1 300 1 108 1 259 1 88 1 176 1 200 1 354 2 202 2 
300 1 76 1 208 1 259 1 54 2 335 3 372 1 365 3 323 1 202 1 340 6 
331 1 180 1 278 1 300 1 259 1 4 1 54 2 335 1 372 1 172 1 338 1 123 1 166 1 365 2 354 2 323 1 340 3 
331 1 108 1 300 2 288 1 259 3 76 1 208 2 4 1 54 5 335 5 372 2 338 1 123 1 365 5 354 2 323 2 340 10 202 2 
331 1 34 1 108 1 300 1 4 1 54 1 335 2 338 1 123 1 354 2 202 1 340 2 
331 1 34 1 108 1 300 1 259 1 208 1 4 1 54 2 335 2 57 1 338 1 123 1 365 2 354 2 233 1 202 1 340 4 
331 3 180 1 278 1 108 1 300 1 259 1 4 3 54 2 335 1 265 1 372 1 338 3 123 3 365 2 354 6 323 1 340 3 
331 5 180 2 223 4 76 2 208 5 4 5 54 12 335 16 57 3 338 5 123 5 166 1 294 1 365 18 323 3 233 3 340 34 34 3 368 1 278 1 108 1 300 5 259 7 169 1 141 1 88 1 265 1 372 3 172 1 143 1 375 1 176 3 354 10 202 5 
281 1 185 1 83 1 320 1 74 1 39 1 306 1 
83 1 10 1 64 1 126 1 205 1 273 1 274 1 193 1 
147 1 52 1 94 1 360 1 18 1 27 1 192 1 175 1 344 1 189 1 234 1 
147 1 83 1 27 1 18 1 192 1 39 1 344 1 264 1 281 2 245 1 320 2 79 1 360 1 292 1 175 1 45 1 314 1 234 1 
147 1 83 1 134 1 27 2 18 1 274 1 192 3 39 2 344 1 240 1 264 1 281 2 245 1 320 2 113 1 79 1 100 1 360 1 124 1 292 2 45 1 314 2 234 1 
147 1 83 1 134 1 27 2 18 1 274 1 192 3 39 2 370 1 344 2 240 1 264 1 281 2 320 2 113 1 79 1 100 1 360 2 124 1 292 2 45 1 314 2 234 2 330 1 
147 1 2 1 181 1 27 1 274 1 184 1 320 1 100 1 360 1 124 1 292 1 339 1 234 1 59 1 35 1 60 1 236 1 299 1 18 1 84 2 39 1 192 4 238 1 371 1 344 1 139 1 281 1 113 1 65 1 199 2 45 1 314 1 
147 1 2 1 27 1 274 1 184 1 320 1 100 1 360 1 124 1 292 1 339 1 234 1 367 1 59 1 35 1 60 1 299 1 18 1 84 2 39 1 192 4 238 1 371 1 344 1 139 1 281 1 113 1 65 1 199 2 45 1 314 1 
147 1 360 1 18 1 32 1 344 1 234 1 
147 3 51 1 93 1 277 1 17 1 27 2 18 2 192 3 263 1 318 1 344 6 267 1 186 1 67 1 360 7 175 2 32 1 130 1 188 1 314 1 234 7 
147 1 331 2 118 1 27 1 208 1 76 1 154 1 4 2 54 2 335 3 121 1 245 1 320 2 79 1 338 2 360 1 123 2 30 1 292 1 166 1 365 3 323 1 234 1 340 6 83 2 256 2 213 2 17 1 18 1 259 2 303 1 192 1 39 1 344 1 264 1 281 2 346 1 266 1 372 1 172 1 143 1 45 1 314 1 354 4 202 1 115 1 315 1 
49 1 2 1 207 1 288 1 208 2 6 1 8 2 248 5 252 4 11 2 292 1 339 1 59 1 60 1 167 1 299 2 171 2 344 1 65 1 66 1 175 1 225 2 76 1 274 1 226 2 184 1 320 1 360 1 363 1 132 1 234 1 323 1 367 1 35 1 84 3 192 2 39 1 238 2 239 1 371 1 139 2 281 1 372 1 199 3 284 1 45 1 202 2 
147 2 60 1 75 1 17 1 27 1 18 1 192 2 344 2 360 2 32 1 130 1 314 1 234 2 
147 1 52 1 17 1 257 1 27 1 18 1 192 1 370 1 344 4 360 4 175 1 234 4 189 1 
147 2 50 1 27 1 18 1 192 1 318 1 344 2 228 1 100 1 360 2 251 1 188 1 314 1 234 2 
147 1 38 1 16 1 360 1 362 1 18 1 334 1 175 1 344 1 234 1 
147 1 277 1 325 1 17 1 27 1 18 1 192 1 344 2 267 1 360 2 234 2 
147 2 52 1 17 1 257 1 27 2 18 2 192 3 344 4 267 1 100 1 186 1 360 5 67 1 175 1 189 1 234 5 
147 2 52 1 17 1 257 1 237 1 27 2 18 2 192 3 344 4 267 1 100 1 360 5 67 1 175 1 189 1 234 5 
147 1 83 1 27 1 18 1 192 1 39 1 344 1 264 1 281 2 320 2 79 1 360 1 292 1 175 1 45 1 314 1 234 1 330 1 
147 2 93 1 27 1 18 1 192 1 318 1 344 1 100 1 360 1 130 1 188 1 314 1 234 1 
3 1 369 1 39 1 7 1 281 1 320 1 163 1 327 1 322 1 
3 1 242 1 187 1 
83 1 327 1 3 1 369 1 77 1 
83 1 15 1 134 1 299 1 3 1 84 2 369 2 109 1 274 1 238 1 77 2 240 1 289 1 327 2 339 1 199 2 242 1 284 1 187 1 
94 1 31 1 366 1 20 1 
25 1 355 1 107 1 31 1 174 1 366 1 20 1 
122 1 316 1 107 1 
23 1 25 3 355 1 107 3 58 2 31 1 174 1 254 1 364 1 366 1 255 1 20 1 
25 2 355 1 107 2 31 1 174 1 210 1 366 1 157 1 20 1 
104 1 309 1 25 1 355 1 38 1 80 1 107 1 31 1 334 1 174 1 254 1 
25 1 355 1 107 1 31 1 174 1 254 1 20 1 
25 1 355 1 107 1 174 1 254 1 366 1 20 2 
195 1 25 2 355 2 117 1 107 2 31 1 174 2 254 1 317 1 20 1 
355 1 107 3 210 2 20 1 25 3 80 1 282 1 312 1 31 2 254 1 174 1 253 1 366 1 
355 1 16 1 38 1 107 2 334 2 210 1 20 1 25 2 309 1 321 1 31 1 254 1 174 1 366 1 178 1 
355 2 107 4 210 2 157 1 20 1 159 1 25 4 80 1 31 2 254 1 174 2 253 1 366 1 
25 1 355 1 107 1 31 1 174 1 254 1 366 1 20 1 
355 1 107 4 62 1 210 2 20 2 23 1 25 4 80 1 58 1 31 3 174 1 253 1 364 1 366 2 
355 1 107 2 210 1 20 1 25 2 9 1 31 1 254 1 174 1 101 1 366 1 296 1 
23 2 25 3 355 1 107 3 58 2 31 1 174 1 254 1 364 1 244 1 366 1 20 1 
350 2 36 1 43 1 31 2 
63 1 25 1 355 1 107 1 174 1 254 1 
25 2 355 1 107 2 282 1 31 1 174 1 254 1 210 1 366 1 20 1 
173 1 
25 1 355 1 107 1 31 1 174 1 254 1 366 1 20 1 
25 3 355 1 107 3 282 1 58 1 31 1 174 1 254 1 210 1 366 1 20 1 
80 1 62 1 31 1 253 1 
31 1 20 1 

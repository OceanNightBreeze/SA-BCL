#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (159,351) 319 (89,166) (89,166) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (159,351) 319 (89,166) (89,166) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (159,351) 319 (89,166) (89,166) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (159,351) 319 (89,166) (89,166) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (145,198,231,354) (145,198,231,354) 250 279 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (145,198,231,354) (145,198,231,354) 250 279 124 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (145,198,231,354) (145,198,231,354) 250 279 124 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 235 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (145,198,231,354) (145,198,231,354) 250 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (145,198,231,354) (145,198,231,354) 250 74 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 138 1 354 2 351 1 266 1 330 1 220 1 231 1 317 1 145 3 198 2 380 1 253 3 
138 1 89 1 319 1 354 1 159 1 266 1 166 1 198 1 373 1 253 1 145 1 
138 1 89 1 319 1 354 1 159 1 266 1 166 1 198 1 373 1 253 1 145 1 
138 1 89 1 319 1 354 1 159 1 266 1 166 1 198 1 373 1 253 1 145 1 
138 1 89 1 319 1 354 1 159 1 266 1 166 1 198 1 373 1 253 1 145 1 
354 1 266 1 250 1 279 1 198 1 231 1 253 1 145 2 
64 1 138 1 15 1 354 1 126 1 266 1 330 1 304 1 373 1 145 2 321 1 91 1 151 1 198 1 380 1 253 2 
124 1 138 1 354 2 351 1 290 1 266 1 220 2 279 1 231 5 317 2 145 7 250 1 234 1 198 2 327 1 253 6 
124 1 138 1 354 2 351 1 290 1 266 1 220 2 279 1 231 5 317 2 145 7 250 1 234 1 198 2 327 1 253 6 
43 1 216 1 202 1 181 1 189 1 377 1 245 1 157 1 93 1 296 1 197 1 134 1 226 1 187 1 
108 1 
43 1 216 2 157 2 300 1 289 1 98 1 108 1 358 1 
43 2 299 1 216 5 276 2 96 2 300 1 289 2 291 1 98 1 50 1 357 1 108 1 52 1 100 1 259 1 142 1 157 5 174 1 367 2 
300 1 108 1 199 1 
328 2 108 1 341 1 
245 2 202 2 93 2 189 1 296 2 134 2 197 2 12 1 
162 2 288 1 217 1 1 1 164 1 189 1 55 1 81 2 245 2 246 1 149 1 59 1 296 3 197 2 251 1 345 1 346 1 298 1 12 1 65 2 329 1 202 3 350 1 352 1 88 1 371 1 155 1 32 1 359 1 211 2 262 1 113 1 93 2 263 1 214 2 134 2 19 1 
245 1 202 1 181 1 93 1 189 1 296 1 134 1 197 1 226 1 187 1 
216 1 202 1 300 1 301 1 316 1 108 1 25 1 57 1 157 1 39 1 296 1 195 1 134 1 187 1 
216 2 202 1 300 1 301 1 108 1 245 1 57 1 157 2 93 1 39 1 296 1 195 1 197 1 134 1 187 1 
43 1 216 1 157 1 289 1 121 1 
43 1 14 1 216 2 157 2 300 1 289 1 98 1 108 1 
216 1 157 1 289 1 
202 2 9 1 245 1 360 1 93 1 296 2 134 2 197 1 12 2 
63 1 320 1 243 1 
288 1 65 1 217 1 202 1 350 1 352 1 51 1 359 1 81 1 262 1 214 1 296 1 345 1 346 1 298 1 12 1 
288 1 65 1 217 1 202 2 350 1 352 1 230 1 359 1 81 1 262 1 245 1 320 1 214 1 296 2 197 1 134 1 345 1 326 1 346 1 298 1 
199 1 12 1 
245 3 202 3 93 1 296 3 134 3 197 3 230 1 12 1 
245 1 202 1 296 1 134 1 197 1 226 1 187 1 
9 1 245 1 202 1 360 1 93 1 296 1 134 1 197 1 187 1 
162 1 288 1 217 1 216 1 1 1 164 1 189 1 55 1 81 1 245 3 57 1 246 1 149 1 296 4 195 1 197 3 345 1 346 1 326 1 298 1 12 1 65 1 329 1 202 4 350 1 352 1 204 1 301 1 88 1 155 1 230 1 359 1 211 2 262 1 157 1 360 1 39 1 93 2 263 1 214 1 134 3 19 1 186 1 187 1 
245 1 202 2 316 1 296 2 134 2 197 1 230 1 191 1 12 1 
216 1 202 3 301 1 108 1 230 2 146 1 245 3 57 1 157 1 360 1 93 1 39 1 195 1 296 3 197 3 134 3 326 1 186 1 187 1 
63 1 245 2 202 2 320 1 360 1 93 1 296 2 134 2 197 2 230 1 
288 1 65 1 217 1 202 1 350 1 352 1 359 1 81 1 262 1 214 1 296 1 345 1 346 1 298 1 12 1 
136 1 288 1 65 1 217 1 202 1 350 1 352 1 359 1 81 1 170 1 214 1 296 1 345 1 298 1 12 1 
162 4 1 1 2 1 164 1 5 1 243 2 246 1 320 2 82 1 63 2 254 1 329 2 88 1 278 1 371 2 33 1 209 1 183 1 211 2 263 1 19 1 117 1 215 1 135 1 
57 1 245 1 202 1 296 1 134 1 197 1 205 1 187 1 
201 1 202 5 29 1 316 1 230 2 191 1 245 4 360 1 93 1 296 5 197 4 134 5 326 1 12 1 
245 2 202 2 296 2 134 2 197 2 205 1 226 1 187 1 
3 1 38 1 208 1 
110 1 38 2 185 1 196 1 208 2 313 1 
38 1 208 1 
38 1 208 1 
110 1 185 1 
110 1 185 1 
110 1 185 1 
38 1 325 1 208 1 
38 1 325 1 208 1 
38 1 325 1 208 1 
376 1 38 1 208 1 
376 1 38 1 208 1 
376 1 38 1 208 1 
0 2 238 3 216 2 331 1 108 1 206 1 168 2 260 1 244 2 208 2 157 2 248 1 247 1 38 2 343 1 175 2 308 1 311 2 313 1 
238 1 216 1 3 1 338 1 49 1 168 1 244 1 245 2 342 1 272 1 175 1 296 2 104 1 197 2 12 1 105 1 202 2 206 1 208 1 157 1 112 1 38 1 134 2 311 1 
34 2 15 2 47 1 207 1 304 1 
15 1 126 1 207 1 
15 1 126 1 304 1 
34 1 17 1 15 3 47 1 207 2 304 1 
34 1 261 1 15 2 47 1 207 1 304 1 
43 4 216 5 2 1 96 1 140 2 289 1 22 2 98 1 219 1 50 1 23 1 142 3 341 1 342 1 174 2 323 2 367 1 105 1 328 3 200 1 276 1 300 1 278 1 108 2 305 1 157 5 112 1 378 1 73 1 117 1 135 1 119 1 
43 7 216 9 2 3 96 2 140 6 289 6 98 1 219 2 50 1 121 5 23 1 142 8 341 3 174 6 249 5 323 6 252 1 367 2 299 1 328 9 200 2 276 2 300 1 256 1 278 3 108 5 35 1 112 4 157 9 378 3 71 1 133 1 117 3 75 1 135 3 
43 2 216 3 96 1 2 1 22 1 140 2 219 1 142 3 341 2 174 2 323 2 367 1 299 1 200 1 328 4 276 1 300 1 278 1 108 3 157 3 112 1 378 1 73 1 117 1 119 1 135 1 
43 3 216 4 96 1 2 2 140 4 22 2 219 1 142 5 341 3 174 4 323 4 252 1 367 1 299 1 328 7 200 1 276 1 300 1 278 2 108 4 35 1 157 4 112 2 378 2 71 1 73 1 117 2 119 1 135 2 
171 1 
337 1 345 1 199 1 
302 1 345 1 
345 1 298 1 
362 1 315 1 171 1 337 2 350 1 345 2 298 1 
350 1 345 1 298 1 
122 1 345 1 
162 7 254 3 329 3 348 1 16 1 278 1 371 4 209 2 364 1 148 1 131 1 361 1 150 1 132 2 160 1 297 1 310 1 135 1 
162 1 16 2 132 1 297 1 371 1 310 1 144 1 
162 1 211 2 1 1 16 1 164 1 263 1 88 1 132 1 293 1 371 1 235 1 310 1 
162 7 254 3 329 3 348 1 16 1 278 1 371 4 209 2 364 1 148 1 131 1 361 1 132 2 160 1 297 1 310 1 135 1 
162 7 254 3 329 3 348 1 16 1 278 1 371 4 209 2 364 1 148 1 131 1 361 1 132 2 160 1 297 1 310 1 135 1 
288 1 138 2 95 2 241 2 145 1 81 1 193 1 223 1 273 1 345 1 198 1 62 1 298 1 253 1 347 1 65 1 354 1 352 1 303 2 359 1 214 1 118 1 77 1 
138 1 95 1 266 1 241 1 141 1 145 1 81 1 11 1 26 1 198 1 253 1 65 1 368 1 15 2 126 1 354 1 353 1 352 1 207 1 303 1 304 1 359 1 17 1 114 1 214 1 41 1 
138 1 95 1 266 1 241 1 141 1 145 2 81 1 26 1 85 1 198 1 253 2 64 1 65 1 368 1 15 2 126 1 354 1 353 1 352 1 330 1 207 1 303 1 231 1 304 1 359 1 17 1 114 1 214 1 380 1 41 1 
138 1 95 1 241 1 141 1 145 3 81 1 11 1 26 1 198 1 62 1 253 3 64 1 65 1 15 2 126 1 354 1 353 1 352 1 330 1 207 1 303 1 231 2 304 1 359 1 17 1 114 1 214 1 309 1 380 1 41 1 
138 1 95 1 241 1 141 1 145 2 81 1 11 1 26 1 253 2 64 1 65 1 15 2 352 1 126 1 330 1 207 1 303 1 231 2 304 1 359 1 17 1 214 1 309 1 380 1 41 1 
222 1 
288 2 96 1 289 6 98 3 50 1 142 2 341 2 193 1 57 1 296 1 195 1 61 2 345 1 298 1 200 1 65 2 153 2 202 1 352 1 300 1 301 1 67 4 68 1 258 1 108 2 359 1 156 1 157 5 70 1 214 2 265 2 312 1 77 1 216 5 316 1 268 1 81 2 25 1 174 2 324 1 367 1 123 2 328 2 276 1 87 1 128 1 277 1 372 1 332 2 232 1 39 1 134 1 187 1 236 2 42 2 
216 3 202 1 289 2 301 1 316 1 98 1 67 2 258 1 268 1 358 1 156 1 25 1 57 1 157 3 70 1 232 1 39 1 195 1 296 1 134 1 123 1 187 1 
216 3 289 1 316 1 98 1 268 1 25 1 57 1 296 1 195 1 202 1 301 1 300 1 67 3 258 1 108 1 358 1 156 1 157 3 232 1 70 1 39 1 134 1 187 1 265 1 
216 3 289 2 316 1 98 1 268 1 25 1 57 1 296 1 195 1 61 1 123 1 202 1 301 1 300 1 67 3 258 1 108 1 358 1 156 1 157 3 232 1 70 1 39 1 134 1 187 1 265 1 
96 1 189 1 289 7 98 3 50 1 142 1 341 2 245 1 57 1 194 1 60 1 195 1 296 2 197 1 61 4 153 2 202 2 300 1 301 1 67 4 258 1 108 1 358 1 156 1 157 5 70 1 265 2 312 1 216 5 363 1 316 1 268 1 25 1 174 1 226 1 367 1 123 4 228 1 276 1 181 1 277 1 130 1 332 2 377 1 232 1 93 1 39 1 134 2 187 2 42 2 236 2 
96 1 289 4 98 2 50 1 142 1 341 2 57 1 195 1 296 1 61 2 153 2 202 1 301 1 300 1 67 4 258 1 108 2 156 1 157 4 70 1 265 2 312 1 216 4 316 1 268 1 25 1 174 1 367 1 123 2 328 2 276 1 277 1 372 1 332 2 232 1 39 1 134 1 187 1 42 2 236 2 
96 1 189 1 289 4 98 2 50 1 142 1 341 2 245 1 57 1 194 1 195 1 296 2 197 1 61 2 153 2 202 2 301 1 300 1 67 4 258 1 108 1 156 1 157 4 70 1 265 2 312 1 216 4 363 1 316 1 268 1 25 1 174 1 226 1 367 1 123 2 228 1 276 1 181 1 277 1 332 2 377 1 232 1 93 1 39 1 134 2 187 2 42 2 236 2 
96 1 189 1 289 4 98 2 50 1 142 1 341 2 245 1 57 1 194 1 195 1 296 2 197 1 61 2 153 2 202 2 301 1 300 1 67 4 258 1 108 1 156 1 157 4 70 1 265 2 312 1 216 4 363 1 316 1 268 1 25 1 174 1 226 1 367 1 123 2 228 1 276 1 181 1 277 1 332 2 377 1 232 1 93 1 39 1 134 2 187 2 42 2 236 2 
96 1 189 1 289 4 98 2 50 1 142 1 245 1 57 1 194 1 195 1 296 2 197 1 61 2 153 2 154 1 202 2 301 1 300 1 67 4 258 1 108 1 156 1 157 4 70 1 265 2 312 1 216 4 316 1 268 1 25 1 174 1 225 2 226 1 367 1 123 2 178 2 328 2 276 1 181 1 377 1 90 1 232 1 379 1 93 1 39 1 134 2 187 2 42 2 
96 1 189 1 289 5 98 2 50 1 142 1 341 2 245 1 57 1 194 1 195 1 296 2 197 1 61 3 153 2 202 2 301 1 300 1 67 5 258 1 108 1 156 1 157 4 70 1 265 3 312 1 216 4 363 1 316 1 268 1 25 1 174 1 226 1 367 1 123 3 228 1 276 1 181 1 277 1 130 1 332 2 377 1 232 1 93 1 39 1 134 2 187 2 42 2 236 2 
96 1 189 1 289 5 98 2 50 1 142 1 341 2 245 1 57 1 194 1 195 1 296 2 197 1 61 3 153 2 202 2 301 1 300 1 67 5 258 1 108 1 156 1 157 4 70 1 265 3 312 1 216 4 363 1 316 1 268 1 25 1 174 1 226 1 367 1 123 3 228 1 276 1 181 1 277 1 130 1 332 2 377 1 232 1 93 1 39 1 134 2 187 2 42 2 236 2 
216 4 96 1 289 4 316 1 98 2 50 1 268 1 142 1 25 1 57 1 174 1 225 2 296 1 195 1 61 2 367 1 123 2 178 2 328 2 153 2 276 1 202 1 300 1 301 1 67 4 258 1 108 1 372 1 156 1 157 4 90 1 232 1 70 1 39 1 134 1 265 2 187 1 42 2 312 1 
162 2 288 2 1 2 164 2 4 1 81 8 245 1 193 1 246 2 11 1 224 1 296 1 197 1 251 1 85 1 345 3 298 2 106 1 65 8 329 1 202 1 352 2 88 2 257 1 230 1 371 1 155 1 32 2 33 1 359 2 211 4 281 1 214 7 263 2 134 1 19 2 161 1 40 1 77 1 
162 3 1 1 2 1 164 1 243 1 245 1 246 1 320 1 296 1 197 1 63 1 254 1 329 2 202 1 88 1 369 1 278 1 371 1 209 1 211 2 378 1 360 1 93 1 263 1 306 1 134 1 19 1 117 1 135 1 
162 6 1 1 164 1 243 1 364 1 148 1 246 1 320 1 199 1 12 2 63 1 254 2 329 3 348 1 88 1 278 1 371 3 33 1 209 2 211 2 361 1 263 1 132 1 160 1 19 1 135 1 
162 14 1 2 2 2 164 2 243 11 271 1 246 2 172 1 320 11 10 3 344 1 251 1 12 1 63 4 254 2 329 6 88 2 369 1 278 1 155 1 371 8 209 1 375 1 280 3 211 4 131 1 378 2 92 1 263 2 19 1 117 1 135 2 284 1 
137 1 162 2 288 1 217 1 1 1 21 1 164 1 51 1 81 1 245 1 246 1 296 2 197 1 251 1 345 1 346 1 326 1 298 1 12 1 63 1 65 1 329 1 202 2 350 1 203 1 352 1 88 1 369 1 230 1 155 1 371 1 359 1 262 1 211 2 214 1 263 1 134 1 19 1 
237 2 288 1 1 3 2 2 243 7 55 2 148 1 147 2 245 1 246 3 294 2 11 1 103 1 296 3 197 1 251 1 345 2 346 2 298 2 12 2 63 7 65 3 254 8 202 3 348 1 350 2 352 2 155 1 209 4 359 2 211 6 262 2 361 1 214 3 263 3 160 1 19 3 117 2 314 1 162 20 217 2 164 3 364 1 81 3 320 7 27 2 326 1 275 1 329 10 88 3 369 1 278 3 230 1 371 10 378 2 131 4 132 1 134 1 135 3 
63 1 162 2 254 1 1 1 2 1 164 1 88 1 371 2 243 1 33 1 211 2 246 1 131 1 320 1 82 1 263 1 19 1 135 1 
63 1 162 2 254 1 329 2 1 1 164 1 88 1 5 1 278 1 243 1 33 1 209 1 211 2 246 1 320 1 263 1 19 1 117 1 
162 4 2 1 1 1 164 1 243 2 246 1 320 2 63 2 254 2 329 2 88 1 278 1 371 2 33 1 209 1 211 2 378 1 131 1 263 1 19 1 117 1 135 1 
63 1 162 2 254 1 1 1 2 1 4 1 164 1 88 1 371 2 243 1 211 2 246 1 131 1 320 1 82 1 263 1 19 1 135 1 
63 1 162 2 254 1 329 2 1 1 4 1 164 1 88 1 5 1 278 1 243 1 209 1 211 2 246 1 320 1 263 1 19 1 117 1 
162 4 2 1 1 1 164 1 4 1 243 2 246 1 320 2 63 2 254 2 329 2 88 1 278 1 371 2 209 1 211 2 378 1 131 1 263 1 19 1 117 1 135 1 
63 2 162 4 254 2 329 2 1 1 2 1 164 1 88 1 278 1 371 2 243 2 209 1 211 2 246 1 131 1 320 2 378 1 263 1 19 1 117 1 135 1 
162 2 288 1 217 1 1 1 164 1 55 1 81 1 246 1 296 1 251 1 345 1 346 1 298 1 12 1 65 1 329 1 202 1 350 1 352 1 88 1 371 1 155 1 359 1 262 1 211 2 214 1 263 1 19 1 
162 2 136 1 288 1 217 1 1 1 164 1 56 1 81 1 170 1 246 1 296 1 251 1 345 1 298 1 12 1 65 1 329 1 202 1 350 1 352 1 88 1 371 1 155 1 359 1 211 2 214 1 263 1 19 1 
162 4 2 1 1 1 164 1 243 2 246 1 320 2 63 2 254 2 329 2 88 1 369 1 278 1 371 2 209 1 211 2 378 1 131 1 263 1 19 1 117 1 135 1 
162 4 237 1 217 1 2 1 1 1 164 1 243 2 55 1 81 1 246 1 320 2 296 1 85 1 345 1 346 1 298 1 63 2 254 2 65 1 329 2 202 1 350 1 352 1 88 1 278 1 371 2 209 1 359 1 262 1 211 2 131 1 378 1 214 1 263 1 19 1 117 1 135 1 
162 3 1 1 2 1 164 1 243 1 245 1 246 1 320 1 296 1 197 1 63 1 254 1 329 1 202 1 88 1 369 1 66 1 278 1 371 2 211 2 131 1 378 1 360 1 93 1 263 1 134 1 19 1 117 1 135 1 
162 19 1 2 2 3 164 2 293 1 101 1 271 1 10 2 28 1 176 1 366 1 152 1 86 1 180 2 254 6 329 10 88 2 278 3 371 9 209 3 375 1 280 1 211 4 378 3 131 3 158 1 115 2 263 2 117 3 135 3 
162 26 1 3 2 3 164 3 48 1 242 2 293 1 79 1 101 1 318 1 271 2 10 2 176 1 366 1 152 2 13 1 86 2 180 1 254 4 329 12 88 3 278 2 371 14 209 2 280 2 211 6 131 2 282 1 378 3 115 4 263 3 213 1 117 2 135 3 
286 1 2 4 1 3 48 1 293 1 242 1 101 1 148 1 10 4 152 2 13 1 254 8 348 1 209 4 211 6 361 1 263 3 115 4 213 1 160 1 117 4 162 41 164 3 79 1 364 1 271 3 318 1 176 1 28 1 366 1 86 1 180 1 329 21 88 3 278 5 371 20 375 1 280 3 131 4 378 4 282 1 132 1 135 5 
286 1 162 38 1 4 2 4 164 4 48 1 242 2 293 1 79 1 101 1 364 1 148 1 318 1 271 3 10 4 28 1 176 1 366 1 152 2 13 1 86 1 180 1 254 7 329 18 348 1 88 4 278 4 371 20 209 4 375 1 280 3 211 8 282 1 378 4 131 3 361 1 213 1 115 4 263 4 132 1 160 1 117 3 135 5 
162 52 1 2 2 7 164 2 48 1 242 1 293 1 79 1 101 1 364 1 148 1 318 1 271 2 10 4 176 1 366 1 152 1 13 1 86 1 180 1 254 14 329 25 348 1 88 2 278 8 371 27 209 7 375 2 280 4 211 4 282 1 378 7 131 7 92 2 361 1 213 1 115 4 263 2 132 1 160 1 117 7 135 8 
248 1 38 1 175 1 168 1 311 1 260 1 381 1 208 1 244 1 313 1 
3 1 104 1 
45 1 38 1 127 1 175 1 168 1 311 1 374 1 208 1 244 1 
0 1 238 2 216 1 331 1 108 1 206 1 168 1 260 1 244 1 208 1 157 1 248 1 247 1 38 1 343 1 175 1 311 1 313 1 
0 1 238 2 216 1 331 1 108 1 206 1 168 1 260 1 244 1 208 1 157 1 248 1 247 1 38 1 343 1 175 1 311 1 313 1 
0 1 238 2 216 1 331 1 108 1 206 1 168 1 260 1 244 1 208 1 157 1 248 1 247 1 38 1 343 1 175 1 311 1 313 1 
334 1 196 1 325 1 
334 1 196 1 325 1 
376 1 6 1 
376 1 196 1 6 1 
272 1 49 1 
0 1 43 1 238 1 216 1 3 1 338 1 49 1 168 1 244 1 245 2 342 1 272 1 343 1 296 2 175 1 104 1 197 2 12 1 105 1 202 2 208 1 157 1 112 1 38 1 307 1 134 2 311 1 
334 1 325 1 
376 1 196 1 6 1 
162 2 188 1 1 1 46 1 164 1 81 2 246 1 296 2 251 1 345 1 227 1 298 1 65 2 329 1 202 2 352 1 88 1 369 1 257 1 356 1 371 1 155 1 32 2 359 1 211 2 37 1 263 1 214 2 134 2 19 1 161 1 
347 1 288 1 65 1 95 1 352 1 102 1 359 1 81 1 193 1 214 1 274 1 345 1 298 1 77 1 
65 1 95 1 336 1 15 2 126 1 353 1 352 1 207 1 304 1 359 1 81 1 17 1 233 1 11 1 214 1 26 1 274 1 41 1 
65 2 95 1 336 1 15 2 126 1 352 1 353 1 207 1 304 1 359 1 81 2 17 1 233 1 11 1 214 2 26 1 274 1 85 1 41 1 
65 1 95 1 15 2 126 1 353 1 352 1 207 1 304 1 359 1 81 1 17 1 233 1 11 1 214 1 26 1 283 1 41 1 
355 1 
276 1 96 1 300 1 291 1 50 1 357 1 108 1 142 1 174 1 367 1 
328 10 2 2 140 5 99 2 278 2 108 5 142 5 341 5 294 1 322 1 378 2 174 5 323 5 117 2 135 2 
216 1 157 1 300 1 289 1 98 1 108 1 
288 2 216 3 96 2 289 4 98 2 50 1 142 2 340 1 81 4 193 1 174 2 324 2 345 1 367 2 298 1 299 1 65 4 200 2 276 2 125 1 352 1 255 2 128 1 68 1 359 1 157 3 214 4 285 1 77 1 
174 1 300 1 291 1 357 1 108 1 142 1 199 1 
216 1 96 1 289 1 98 1 50 1 142 1 341 1 174 1 367 1 328 1 276 1 300 1 277 1 108 2 332 1 157 1 236 1 
288 1 96 4 2 2 97 2 337 2 289 5 140 6 291 1 99 2 339 2 98 3 50 4 142 9 54 2 341 6 294 2 195 2 345 10 298 3 200 2 65 3 350 3 352 3 300 2 255 1 302 3 357 1 108 8 359 4 212 1 157 5 214 3 72 1 116 1 117 2 362 1 216 5 20 2 81 3 365 2 322 2 174 8 323 6 324 1 122 2 85 1 367 4 328 12 276 4 125 1 278 2 36 2 378 2 135 2 
44 1 216 1 96 2 2 2 289 1 140 5 48 1 98 1 99 2 50 2 79 1 142 8 341 3 271 1 322 1 174 5 10 1 323 5 324 1 367 2 13 1 200 1 328 6 276 2 300 2 182 1 278 2 108 5 280 1 157 1 282 1 378 2 213 1 117 2 135 2 
216 1 96 1 189 1 99 2 50 1 142 2 245 1 322 1 174 2 296 1 197 1 226 1 367 1 228 1 276 1 202 1 348 1 181 1 31 1 278 1 377 1 157 1 361 1 93 1 160 1 134 1 187 1 135 2 
162 1 288 1 217 1 1 1 164 1 189 1 55 1 81 1 245 2 149 1 246 1 296 3 197 2 345 1 346 1 298 1 12 1 65 1 329 1 202 3 350 1 352 1 88 1 155 1 359 1 211 2 262 1 93 2 263 1 214 1 134 2 19 1 
328 4 200 1 276 1 96 1 140 2 300 2 50 1 108 4 142 1 341 2 174 2 132 1 323 2 324 1 367 1 
8 1 248 1 272 1 168 1 311 1 
169 1 168 1 311 1 
169 1 168 1 311 1 
169 1 168 1 311 1 
264 1 168 1 311 1 
264 1 168 1 311 1 
264 1 168 1 311 1 
168 1 311 1 
38 1 208 1 
162 10 254 5 329 5 1 1 348 1 164 1 88 1 31 1 278 2 293 1 371 5 209 3 211 2 131 2 361 2 263 1 160 2 135 2 
162 2 254 1 1 1 2 1 164 1 88 1 293 1 371 2 211 2 131 1 263 1 135 1 
162 4 254 2 329 2 1 1 2 1 164 1 88 1 278 1 293 1 371 2 209 1 211 2 378 1 131 1 263 1 117 1 135 1 
162 3 254 2 329 2 1 3 164 3 88 3 129 1 242 1 293 1 371 1 209 1 211 6 131 1 361 1 263 3 160 1 28 1 
162 34 1 5 2 3 218 1 164 5 292 1 242 2 293 1 364 1 148 1 270 1 271 1 10 4 28 1 254 12 329 18 348 2 88 5 129 1 278 5 371 16 375 1 209 7 109 1 280 3 211 10 378 3 131 5 361 3 263 5 132 1 160 3 117 3 135 5 
162 8 254 2 329 4 1 1 348 1 164 1 88 1 278 1 371 4 293 1 209 2 364 1 280 1 148 1 211 2 271 1 282 1 361 1 263 1 10 1 132 1 160 1 135 1 
162 11 1 2 2 1 164 2 293 1 364 1 148 1 270 1 271 1 10 2 254 3 329 5 348 1 88 2 278 1 371 6 209 2 375 1 280 1 211 4 282 1 378 1 131 1 361 1 263 2 132 1 160 1 135 2 
162 19 1 3 2 2 164 3 48 1 293 1 242 1 79 1 364 1 148 1 270 1 271 1 10 1 13 1 254 4 329 10 348 1 88 3 278 3 371 9 209 3 280 1 211 6 131 1 282 1 378 2 361 1 263 3 213 1 132 1 160 1 117 2 135 3 
162 17 1 3 2 2 164 3 48 1 242 1 293 1 79 1 364 1 148 1 270 1 271 1 10 1 13 1 254 5 329 7 348 1 88 3 278 2 371 10 209 3 280 1 211 6 131 2 282 1 378 2 361 1 263 3 213 1 132 1 160 1 117 1 135 3 
162 8 254 2 329 4 1 1 348 1 164 1 88 1 278 1 371 4 293 1 209 2 364 1 280 1 148 1 211 2 271 1 282 1 361 1 263 1 10 1 132 1 160 1 135 1 
162 12 1 1 2 2 164 1 48 1 293 1 79 1 271 1 10 1 13 1 254 2 329 6 88 1 278 2 371 6 209 1 280 1 211 2 131 1 282 1 378 2 263 1 213 1 117 2 135 2 
162 18 1 4 2 2 164 4 48 1 293 1 242 2 79 1 364 1 148 1 270 1 271 1 10 1 13 1 254 5 329 8 348 1 88 4 278 2 371 10 209 3 280 1 211 8 131 2 282 1 378 2 361 1 263 4 213 1 132 1 160 1 117 1 135 3 
162 16 1 4 2 3 164 4 48 1 293 1 242 2 79 1 271 1 10 1 28 1 13 1 254 6 329 7 88 4 278 2 371 9 209 3 280 1 211 8 131 3 282 1 378 3 263 4 213 1 117 2 135 3 
162 7 254 6 329 4 348 1 278 1 371 3 209 3 364 1 148 2 131 3 361 3 160 3 135 1 
162 18 1 4 2 2 164 4 48 1 293 1 242 2 79 1 364 1 148 1 271 1 10 1 28 1 13 1 254 4 329 8 348 1 88 4 278 2 371 10 209 3 280 1 211 8 131 1 282 1 378 2 361 1 263 4 213 1 132 1 160 1 117 1 135 3 
162 8 254 3 329 4 1 2 348 1 164 2 88 2 278 1 371 4 242 1 209 2 364 1 148 1 211 4 131 1 361 1 263 2 132 1 160 1 135 1 
162 6 364 1 254 2 148 1 329 3 348 1 361 1 132 1 160 1 278 1 371 3 199 1 135 1 209 2 
162 4 254 2 329 2 1 1 2 1 164 1 88 1 278 1 371 2 209 1 270 1 211 2 378 1 131 1 263 1 117 1 135 1 
162 7 254 2 329 4 2 1 278 1 371 3 209 1 375 1 280 1 271 1 378 1 131 1 10 2 117 1 135 1 
162 23 2 2 1 2 164 2 242 2 364 1 148 1 172 1 10 2 254 9 329 12 348 1 88 2 278 3 129 1 371 11 375 1 209 5 280 2 211 4 131 4 378 2 92 1 361 2 263 2 132 1 160 2 117 2 135 3 
162 1 329 1 10 1 
162 1 280 1 371 1 
162 6 254 3 329 3 1 1 2 1 164 1 88 1 278 1 371 3 209 2 270 1 211 2 294 1 378 1 131 1 263 1 117 1 135 1 
162 12 1 1 2 2 164 1 48 1 293 1 79 1 271 1 10 1 13 1 254 2 329 6 88 1 278 2 371 6 209 1 280 1 211 2 131 1 282 1 378 2 263 1 213 1 117 2 135 2 
162 6 254 2 329 3 348 1 278 1 371 3 209 1 131 1 361 1 160 1 135 1 
162 3 254 2 329 2 1 1 164 1 88 1 129 1 371 1 242 1 209 1 364 1 148 1 211 2 131 1 361 1 263 1 160 1 
179 1 202 1 316 1 296 1 134 1 191 1 12 1 
179 1 287 1 139 1 202 1 316 1 165 1 191 1 210 1 296 1 134 1 177 1 12 1 
239 1 288 1 65 4 352 1 269 1 359 1 81 4 193 1 214 4 85 1 345 1 298 1 77 1 
65 2 350 1 163 1 352 1 255 1 359 2 81 2 7 1 69 1 103 1 214 2 94 1 345 1 298 1 
81 1 65 1 288 1 15 1 126 1 352 1 26 1 214 1 304 1 359 1 
81 2 65 2 352 1 46 1 11 1 214 2 257 1 345 1 85 1 298 1 359 1 
288 1 65 5 352 2 255 1 257 1 269 1 359 2 81 5 193 1 281 1 214 4 224 1 85 1 345 3 298 2 77 1 
288 1 65 5 352 2 255 1 257 1 24 1 269 1 359 2 81 5 193 1 281 1 214 4 85 1 345 3 298 2 77 1 
81 1 65 1 288 1 193 1 352 1 214 1 345 1 199 1 298 1 359 1 77 1 
288 1 65 1 217 1 202 2 350 1 352 1 230 1 359 1 81 1 245 1 262 1 214 1 296 2 197 1 134 1 345 1 298 1 12 1 
65 1 217 1 202 2 350 2 352 1 301 1 255 1 230 1 359 1 81 1 36 1 57 1 245 1 262 1 214 1 296 2 122 1 197 2 134 2 345 3 187 1 298 2 12 1 
239 1 217 1 81 2 170 1 245 1 57 1 296 2 197 2 122 1 345 3 298 2 12 1 65 2 202 2 350 2 352 1 301 1 255 1 230 1 359 1 36 1 214 2 134 2 187 1 
239 1 288 1 216 2 337 1 289 1 53 1 81 3 195 1 122 1 345 4 298 1 65 3 350 1 352 1 30 1 300 1 255 1 302 1 108 1 359 1 36 1 157 2 214 3 
239 1 288 1 65 3 216 2 350 1 337 1 352 1 300 1 289 1 255 1 302 1 108 1 54 1 359 1 81 3 36 1 157 2 214 3 195 1 122 1 345 4 298 1 
81 1 65 1 352 1 214 1 40 1 359 1 
106 1 362 1 288 2 65 7 350 1 163 1 352 2 257 1 78 1 32 1 359 3 81 7 281 1 11 1 224 1 214 6 94 1 85 1 345 3 40 1 298 2 
162 6 237 1 217 1 1 2 164 2 243 1 55 1 364 1 81 1 148 1 147 1 245 1 246 2 320 1 296 2 197 1 345 1 85 1 346 1 298 1 12 2 63 1 254 2 65 1 329 3 202 2 348 1 350 1 352 1 88 2 369 1 278 1 371 3 230 1 209 2 359 1 211 4 262 1 37 1 361 1 263 2 214 1 132 1 160 1 134 1 19 2 135 1 
43 1 288 1 216 3 96 2 20 1 97 1 337 1 289 2 291 1 339 1 98 1 50 2 142 1 54 1 81 1 174 1 195 1 367 2 345 2 65 1 276 2 125 1 300 1 302 1 357 1 108 1 157 3 214 1 
362 1 65 2 337 1 350 1 352 1 359 2 81 2 214 2 85 1 116 1 345 2 40 1 298 1 
288 1 65 1 217 1 202 2 350 1 352 1 230 1 359 1 81 1 245 1 170 1 214 1 296 2 197 1 134 1 345 1 298 1 12 1 
362 1 65 1 350 1 163 1 352 1 255 1 78 1 359 2 81 1 214 1 94 1 345 1 298 1 
188 1 202 1 356 1 58 1 295 1 83 1 296 1 134 1 227 1 
58 1 229 1 18 1 
58 1 295 1 83 1 370 1 12 1 
43 1 107 1 216 2 229 1 300 1 301 1 370 2 108 1 57 1 58 1 157 2 295 2 83 2 39 1 18 1 195 1 186 1 187 1 12 1 
64 1 354 1 266 1 330 1 198 1 380 1 253 1 145 1 
64 2 240 1 354 1 330 2 220 1 80 1 231 2 317 1 145 4 173 1 151 1 198 1 380 2 253 4 
64 1 354 1 266 1 330 1 267 1 192 1 231 1 145 2 234 1 198 1 380 1 253 2 
64 1 354 1 266 1 330 1 80 1 143 1 145 3 173 2 151 2 198 1 380 1 253 3 
349 1 330 2 190 1 167 2 
354 1 266 1 198 1 221 1 253 1 145 1 
64 1 354 1 266 1 330 1 198 1 380 1 231 1 327 1 253 2 145 2 
184 1 
64 1 354 1 266 1 330 1 198 1 380 1 253 1 145 1 
64 1 330 1 380 1 199 1 
64 1 354 1 330 1 198 1 380 1 253 1 145 1 
138 1 241 1 253 1 
64 1 173 1 354 1 266 1 330 1 84 1 151 2 80 1 198 1 380 1 253 3 145 3 
354 1 250 1 198 1 231 1 253 1 145 2 
111 1 15 1 126 1 354 1 266 1 207 1 198 1 317 1 253 1 145 1 
354 1 266 1 330 1 198 1 380 1 253 1 145 1 
64 1 354 1 266 1 198 1 380 2 253 1 145 1 
354 2 266 1 330 1 120 1 145 2 333 1 198 2 380 1 76 1 253 2 
64 1 354 1 266 1 290 1 330 1 220 1 231 2 317 1 145 3 198 1 380 1 327 1 253 3 
64 1 15 2 354 1 126 1 266 1 330 1 207 1 304 1 231 1 145 2 17 1 335 1 198 1 380 1 253 2 
354 1 266 1 250 1 74 1 198 1 231 1 253 1 145 2 
64 1 354 1 266 1 330 1 231 1 145 3 151 1 198 1 380 1 327 1 253 3 
220 1 231 1 317 1 253 1 145 1 
330 1 380 1 

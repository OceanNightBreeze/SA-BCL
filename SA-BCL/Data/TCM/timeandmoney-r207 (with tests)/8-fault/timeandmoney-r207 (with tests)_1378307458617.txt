#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 141 (156,212) (156,212) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 141 (156,212) (156,212) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 141 (156,212) (156,212) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 141 (156,212) (156,212) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (282,351) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 340 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 14 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (34,110,231,248) (34,110,231,248) 240 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
231 2 167 2 199 1 141 1 316 1 77 1 156 1 49 1 110 1 182 1 217 1 34 1 100 1 38 1 188 1 212 1 
231 2 167 2 199 1 141 1 316 1 77 1 156 1 49 1 110 1 182 1 34 1 217 1 100 1 38 1 188 1 212 1 
231 2 167 2 199 1 141 1 316 1 77 1 156 1 49 1 110 1 182 1 34 1 217 1 100 1 38 1 188 1 212 1 
231 2 167 2 199 1 141 1 316 1 77 1 156 1 49 1 110 1 182 1 34 1 217 1 100 1 38 1 188 1 212 1 
231 4 167 4 199 1 326 1 248 3 214 1 316 1 141 1 3 3 181 1 110 1 216 1 34 1 217 1 259 1 38 1 123 2 228 2 
231 2 167 2 199 1 15 1 214 1 316 1 3 1 77 1 19 1 252 1 110 1 182 1 34 1 259 1 38 1 188 1 
349 1 231 3 167 3 199 1 248 1 214 1 3 2 181 1 110 2 182 1 34 2 259 1 228 1 
349 1 199 1 248 7 27 1 316 1 3 5 181 3 110 2 182 1 34 2 259 1 38 1 228 4 231 9 167 9 326 1 214 1 141 1 59 1 44 1 65 1 216 1 217 1 123 2 
349 1 199 1 248 7 27 1 316 1 3 5 181 3 110 2 182 1 34 2 259 1 38 1 228 4 231 9 167 9 326 1 214 1 141 1 59 1 44 1 65 1 216 1 217 1 123 2 
14 1 67 1 235 1 
10 2 67 1 226 1 
90 2 330 2 183 2 28 2 373 2 303 1 46 1 61 2 
244 2 149 1 350 1 201 1 295 1 28 3 297 1 253 1 78 2 358 1 300 2 278 1 361 1 183 2 204 1 303 1 363 1 364 1 230 1 40 2 264 1 90 2 232 1 281 2 57 1 343 1 91 1 18 1 96 1 61 3 310 1 330 2 147 1 373 2 125 1 46 1 313 1 
90 1 330 1 183 1 28 1 192 1 373 1 303 1 72 1 129 1 61 1 
55 1 41 1 28 1 235 1 192 1 356 1 357 1 61 1 134 1 97 1 241 1 67 1 373 1 136 1 
90 1 55 1 41 1 28 1 235 1 192 1 356 1 357 1 61 1 134 2 330 1 183 1 241 2 67 1 373 1 
134 1 241 1 362 1 186 1 359 1 
134 2 241 2 362 1 67 1 235 1 206 1 186 1 101 1 
134 1 241 1 186 1 
90 1 28 1 192 1 61 1 134 1 330 1 241 1 183 1 362 1 303 1 373 1 161 1 72 1 129 1 
67 1 
134 2 241 2 362 1 42 1 67 1 235 1 186 1 101 1 
151 1 26 2 353 1 235 1 193 1 94 1 277 1 133 1 50 1 134 5 158 2 21 1 241 5 362 2 67 1 101 1 208 2 186 2 39 1 
14 1 46 1 
90 1 28 2 61 2 255 1 330 1 183 1 373 2 46 2 227 1 
282 1 345 1 95 1 
40 1 149 1 350 1 343 1 201 1 91 1 28 1 78 1 358 1 61 1 300 1 84 1 125 1 46 1 313 1 364 1 
40 1 149 1 350 1 282 1 201 1 343 1 91 1 28 2 78 1 358 1 61 2 300 1 330 1 183 1 53 1 290 1 373 1 125 1 313 1 364 1 
90 1 330 3 183 3 28 3 290 1 373 3 46 1 61 3 
330 1 183 1 28 1 192 1 373 1 129 1 61 1 
90 1 255 1 330 1 183 1 28 1 192 1 373 1 227 1 61 1 
244 1 149 1 350 1 275 1 201 1 28 4 356 1 357 1 297 1 253 1 78 1 358 1 300 1 255 1 134 1 278 1 361 1 183 3 204 1 53 1 303 1 363 1 364 1 230 1 40 1 264 1 55 1 366 1 90 2 41 1 281 2 343 1 91 1 192 1 96 1 61 4 310 1 330 3 241 1 373 3 290 1 125 1 46 1 313 1 
269 1 97 1 330 1 183 1 28 2 373 2 290 1 46 1 61 2 
90 1 366 1 55 1 41 1 28 3 192 1 355 1 356 1 357 1 61 3 255 1 134 1 330 3 241 1 183 3 67 1 53 1 290 2 373 3 
90 1 282 1 28 2 95 1 61 2 255 1 330 2 183 2 290 1 373 2 
40 1 149 1 350 1 343 1 201 1 91 1 28 1 78 1 358 1 61 1 300 1 125 1 46 1 313 1 364 1 
40 1 149 1 343 1 201 1 91 1 28 1 78 1 202 1 358 1 61 1 300 1 157 1 125 1 46 1 313 1 
365 1 351 1 
330 1 183 1 28 1 192 1 288 1 373 1 357 1 61 1 
90 1 28 5 306 1 61 5 269 1 255 1 97 1 330 4 183 4 53 1 290 2 373 5 46 1 88 1 
330 2 183 2 28 2 288 1 192 1 373 2 129 1 61 2 
344 1 23 1 
344 1 23 1 
107 1 221 1 
107 1 221 1 
107 1 221 1 
344 1 23 1 285 1 
344 1 23 1 104 1 
73 1 344 2 23 2 107 1 102 1 221 1 
344 1 23 1 285 1 
344 1 23 1 285 1 
331 1 344 1 23 1 
331 1 344 1 23 1 
331 1 344 1 23 1 
246 2 223 1 28 1 155 1 134 2 183 1 86 1 303 1 54 1 161 1 90 1 324 2 192 1 267 1 344 2 143 2 370 2 61 1 176 2 330 1 241 2 196 1 122 1 373 1 23 2 292 1 72 1 129 1 
367 1 324 1 246 1 223 1 2 1 28 2 328 1 344 1 117 1 370 1 143 1 318 1 61 2 134 1 176 1 330 2 241 1 183 2 335 1 373 2 23 1 46 1 187 1 104 1 
217 1 316 1 38 1 
316 1 38 1 252 1 
217 2 11 1 316 3 142 1 70 1 252 1 
217 1 316 2 142 1 262 1 70 1 252 1 
217 1 316 2 142 2 70 1 252 1 
151 2 301 2 158 1 10 4 303 1 208 1 161 1 209 1 12 1 165 1 117 1 61 1 173 1 174 1 63 2 312 1 67 1 68 1 72 1 314 1 129 1 26 1 28 1 134 5 183 1 184 1 362 4 85 1 226 2 186 1 280 1 90 1 235 1 193 1 192 1 94 3 330 1 241 5 242 1 373 1 289 2 101 1 
151 2 301 2 158 1 10 4 303 1 208 1 161 1 209 1 12 1 165 1 305 2 117 1 61 1 346 1 173 1 174 1 312 1 67 1 72 1 314 1 129 1 26 1 28 1 359 2 134 5 183 1 184 1 362 4 226 2 186 3 280 1 138 1 90 1 235 1 192 1 193 1 94 3 330 1 241 5 242 1 373 1 289 2 101 1 
26 1 151 2 28 1 133 1 134 3 301 1 158 1 183 1 362 2 10 1 85 1 303 1 208 1 161 1 209 1 90 1 165 1 192 1 235 1 94 1 117 1 61 1 173 1 174 1 330 1 63 1 241 3 312 1 67 1 68 1 373 1 289 1 72 1 129 1 
26 1 151 2 340 1 133 1 301 1 134 2 158 1 362 1 10 1 85 1 208 1 209 1 165 1 94 1 117 1 173 1 174 1 63 1 241 2 312 1 68 1 289 1 
14 1 121 1 358 1 
119 1 358 1 
4 1 
201 1 358 1 
198 1 315 1 201 1 121 2 313 1 358 3 
201 1 313 1 358 1 
358 1 299 1 
244 7 293 1 74 3 200 2 29 1 132 1 18 4 108 1 253 3 317 1 33 1 175 1 312 1 36 1 242 1 185 1 342 2 
244 7 293 1 74 3 200 2 29 1 132 1 18 4 108 1 253 3 317 1 33 1 175 1 312 1 36 1 242 1 185 1 342 2 
244 7 293 1 74 3 200 2 29 1 132 1 18 4 108 1 253 3 317 1 33 1 175 1 312 1 83 1 36 1 242 1 185 1 342 2 
244 31 293 5 74 10 200 5 29 2 30 1 132 1 108 2 253 15 317 2 33 1 360 4 278 1 184 3 36 2 185 1 321 1 363 1 342 3 230 1 165 3 281 2 139 1 18 16 173 3 120 1 371 3 175 1 310 1 312 4 272 1 374 1 242 4 177 1 
244 9 293 1 130 1 200 3 74 4 29 1 132 1 108 1 317 1 253 4 278 2 36 1 185 1 363 2 342 2 230 2 281 4 139 1 18 5 310 2 175 1 312 1 242 1 103 1 
149 1 199 1 248 1 76 1 316 2 3 1 153 1 78 1 252 1 300 1 110 1 203 1 51 1 182 1 35 1 34 1 11 1 259 1 37 1 38 1 162 1 40 1 231 2 167 2 169 1 343 1 214 1 307 1 369 1 217 1 
149 1 248 2 76 1 316 2 3 1 153 1 78 1 251 1 252 1 300 1 254 1 110 1 203 1 51 1 182 1 34 1 11 1 259 1 37 1 38 1 162 1 40 1 231 3 167 3 169 1 343 1 214 1 369 1 217 1 127 1 
149 1 248 2 76 1 316 2 3 1 153 1 78 1 251 1 252 1 300 1 203 1 182 1 51 1 11 1 259 1 38 1 40 1 231 2 167 2 169 1 343 1 214 1 369 1 217 1 127 1 
149 1 25 1 201 1 153 2 78 1 358 1 300 1 254 1 110 1 51 2 182 2 34 1 190 1 40 1 231 1 167 1 169 2 327 1 343 1 62 1 273 1 125 1 24 1 
149 1 199 1 76 1 316 2 153 1 78 1 251 1 252 1 300 1 110 1 203 1 51 1 182 1 34 1 11 1 37 1 38 1 162 1 40 1 231 1 167 1 169 1 343 1 307 1 369 1 217 1 
283 1 
149 1 47 2 48 2 339 2 151 2 201 1 1 2 300 2 158 1 10 2 208 1 209 1 55 1 164 1 168 1 343 1 17 2 61 1 62 1 22 1 218 1 67 2 125 2 124 4 128 1 25 1 26 1 75 2 28 1 356 1 357 1 78 2 358 1 134 5 320 1 225 1 226 2 186 6 136 1 279 2 229 1 40 2 41 1 235 1 193 1 192 1 94 2 239 1 97 1 241 5 197 1 334 1 373 1 101 3 148 1 
28 1 356 1 357 1 134 3 320 1 186 2 136 1 229 1 55 1 41 1 42 1 192 1 17 1 61 1 239 1 97 1 22 1 241 3 334 1 373 1 124 2 101 1 
75 1 28 1 356 1 357 1 134 3 320 1 186 1 136 1 229 1 55 1 41 1 42 1 192 1 235 1 61 1 239 1 97 1 22 1 241 3 67 1 334 1 373 1 124 3 101 1 
47 1 75 1 28 1 356 1 357 1 134 3 320 1 186 2 136 1 229 1 55 1 41 1 42 1 192 1 235 1 17 1 61 1 239 1 97 1 22 1 241 3 67 1 334 1 373 1 124 3 101 1 
47 4 338 1 151 1 339 2 48 2 152 1 1 2 158 1 52 1 208 1 55 1 164 1 17 4 61 1 22 1 67 5 124 6 128 1 26 1 75 4 28 1 357 1 356 1 134 5 320 1 226 2 186 7 136 1 229 1 137 1 279 2 41 1 42 1 192 1 235 5 193 1 94 1 239 1 97 1 98 1 241 5 334 1 373 1 101 3 
47 2 151 1 339 2 48 2 1 2 158 1 10 2 208 1 55 1 164 1 17 2 61 1 22 1 218 1 67 2 124 4 128 1 26 1 75 2 28 1 357 1 356 1 134 4 320 1 226 2 186 4 136 1 229 1 279 2 41 1 192 1 193 1 235 1 94 1 239 1 97 1 241 4 334 1 373 1 101 2 
47 2 48 2 339 2 151 1 338 1 26 1 75 2 1 2 28 1 356 1 357 1 134 4 158 1 52 1 320 1 226 2 186 4 208 1 136 1 279 2 229 1 55 1 164 1 41 1 235 1 192 1 193 1 17 2 94 1 61 1 239 1 97 1 98 1 22 1 241 4 67 1 334 1 373 1 124 4 101 2 128 1 
47 2 48 2 339 2 151 1 338 1 26 1 75 2 1 2 28 1 356 1 357 1 134 4 158 1 52 1 320 1 226 2 186 4 208 1 136 1 279 2 229 1 55 1 164 1 41 1 235 1 192 1 193 1 17 2 94 1 61 1 239 1 97 1 98 1 22 1 241 4 67 1 334 1 373 1 124 4 101 2 128 1 
47 2 339 2 151 1 26 1 75 2 28 1 356 1 357 1 134 4 158 1 224 1 320 1 10 2 159 1 160 2 186 4 208 1 136 1 87 2 279 2 229 1 55 1 164 1 41 1 235 1 116 1 192 1 193 1 17 2 94 1 61 1 239 1 97 1 98 1 22 1 241 4 67 1 334 1 373 1 124 4 101 2 
47 3 48 2 339 2 151 1 26 1 338 1 75 3 1 2 28 1 356 1 357 1 134 4 158 1 52 1 320 1 226 2 208 1 186 5 136 1 279 2 229 1 137 1 55 1 164 1 41 1 235 1 193 1 192 1 17 3 94 1 61 1 239 1 97 1 98 1 22 1 241 4 67 1 334 1 373 1 124 5 101 2 128 1 
47 3 48 2 339 2 151 1 26 1 338 1 75 3 1 2 28 1 356 1 357 1 134 4 158 1 52 1 320 1 226 2 208 1 186 5 136 1 279 2 229 1 137 1 55 1 164 1 41 1 235 1 193 1 192 1 17 3 94 1 61 1 239 1 97 1 98 1 22 1 241 4 67 1 334 1 373 1 124 5 101 2 128 1 
47 2 151 1 339 2 158 1 10 2 160 2 208 1 55 1 164 1 116 1 17 2 61 1 22 1 218 1 67 1 124 4 26 1 75 2 28 1 357 1 356 1 134 4 320 1 186 4 136 1 87 2 229 1 279 2 41 1 192 1 193 1 235 1 94 1 239 1 97 1 241 4 334 1 373 1 101 2 
365 1 14 1 
244 14 293 1 74 2 200 1 295 1 341 1 297 1 253 6 360 3 278 2 184 1 302 1 135 1 321 1 363 2 230 2 264 1 165 2 281 4 282 11 345 11 18 8 95 4 96 2 118 1 173 2 371 3 145 1 310 2 312 2 374 1 242 1 46 1 
244 2 149 1 350 1 105 1 201 1 28 2 295 1 297 1 78 1 253 1 358 1 80 1 300 1 109 1 278 1 183 1 84 1 302 1 53 1 363 1 364 1 40 1 230 1 264 1 281 2 343 1 91 1 18 1 95 1 96 1 61 2 310 1 330 1 125 1 373 1 290 1 46 1 313 1 
244 20 149 2 293 4 200 4 201 2 296 1 295 1 108 1 297 3 251 1 253 10 300 3 302 1 53 1 342 1 210 2 264 1 165 2 343 2 266 2 345 7 18 10 61 3 173 2 347 2 175 1 310 3 312 3 125 1 313 2 220 1 350 2 74 8 28 3 29 1 132 1 78 3 79 1 358 2 278 3 361 2 183 1 184 2 185 1 363 3 364 2 40 3 230 3 281 6 282 7 233 2 91 2 95 7 96 3 330 1 242 3 290 1 373 1 46 2 
244 2 149 2 25 1 201 2 28 1 295 1 31 1 297 1 251 1 78 8 253 1 358 3 300 7 278 1 82 1 35 1 183 1 363 1 365 1 40 8 230 1 264 1 281 2 343 2 284 1 18 1 236 1 96 1 61 1 215 1 62 1 310 1 330 1 147 2 373 1 290 1 125 2 243 1 274 1 
244 3 74 1 200 1 28 1 276 1 297 1 253 2 255 1 278 1 183 1 184 1 302 1 363 1 230 1 90 1 165 1 282 1 281 2 345 1 18 1 95 1 96 1 61 1 173 1 310 1 330 1 312 1 373 1 242 1 
365 1 
365 1 
365 1 
244 2 230 1 165 1 282 1 281 2 293 1 74 1 345 1 18 2 95 1 297 1 32 1 96 1 82 1 278 1 310 1 312 1 363 1 
244 2 230 1 282 1 281 2 74 1 200 1 345 1 95 1 297 1 253 2 96 1 82 1 278 1 310 1 66 1 184 1 242 1 363 1 
244 4 293 1 74 2 200 1 297 1 253 2 278 1 82 1 184 1 363 1 230 1 165 1 281 2 282 2 18 2 345 2 95 2 96 1 173 1 310 1 312 1 242 1 
230 1 244 4 165 1 282 2 281 2 293 1 200 1 74 2 345 2 18 2 95 2 297 1 253 2 96 1 173 1 278 1 310 1 312 1 184 1 242 1 363 1 
244 2 149 1 350 1 201 1 295 1 28 1 297 1 78 1 253 1 358 1 300 1 278 1 361 1 363 1 364 1 40 1 230 1 264 1 281 2 343 1 91 1 18 1 96 1 61 1 310 1 125 1 46 1 313 1 
244 2 149 1 201 1 295 1 28 1 297 1 78 1 253 1 202 1 358 1 300 1 157 1 278 1 363 1 40 1 230 1 264 1 281 2 343 1 91 1 18 1 96 1 61 1 310 1 195 1 125 1 46 1 313 1 
244 4 293 1 74 2 200 1 297 1 253 2 278 1 184 1 302 1 363 1 230 1 165 1 281 2 282 2 18 2 345 2 95 2 96 1 173 1 310 1 312 1 242 1 
244 4 149 1 350 1 293 1 200 1 74 2 201 1 28 1 297 1 253 2 78 1 358 1 300 1 278 1 361 1 35 1 184 1 363 1 364 1 40 1 230 1 165 1 282 2 281 2 343 1 91 1 266 1 345 2 18 2 95 2 96 1 61 1 173 1 310 1 312 1 242 1 313 1 
244 3 293 1 74 1 28 1 297 1 253 1 255 1 278 1 183 1 184 1 302 1 363 1 230 1 90 1 165 1 281 2 282 1 18 2 345 1 95 1 96 1 61 1 173 1 310 1 330 1 312 1 219 1 242 1 373 1 
244 19 293 3 200 3 74 6 106 1 180 1 354 1 250 1 5 1 253 10 360 2 278 2 184 3 261 2 321 1 363 2 230 2 165 3 281 4 18 9 43 1 173 3 371 1 310 2 312 3 99 2 374 1 242 3 126 1 103 1 
244 23 337 1 293 1 179 1 74 2 200 1 247 1 106 1 180 2 253 10 5 1 360 2 278 2 257 1 184 2 261 1 321 2 189 1 363 2 230 2 165 3 281 4 139 1 18 13 43 1 172 1 173 3 371 2 310 2 312 3 99 3 242 2 126 2 103 1 
244 31 337 1 293 3 294 1 179 1 200 2 74 5 247 1 106 1 180 1 250 1 5 1 253 16 360 4 278 2 257 1 184 4 261 1 321 3 189 1 363 2 230 2 165 4 281 4 18 15 43 1 172 1 173 4 371 3 310 2 312 4 99 3 374 1 242 4 126 2 103 1 
244 32 337 1 293 3 294 1 179 1 200 3 74 6 247 1 106 1 180 1 250 1 5 1 253 15 360 4 278 3 257 1 184 3 261 1 321 3 189 1 363 3 230 3 165 4 281 6 139 1 18 17 43 1 172 1 173 4 371 3 310 3 312 4 99 4 374 1 242 3 126 2 103 1 
244 52 337 1 293 8 179 1 200 7 74 15 247 1 106 1 180 1 29 1 132 1 341 2 108 1 5 1 253 25 360 4 278 2 257 1 184 7 185 1 261 1 321 2 189 1 342 1 363 2 230 2 165 7 281 4 139 1 18 27 43 1 172 1 173 7 371 4 175 1 310 2 312 8 99 4 374 2 242 8 126 1 103 1 
171 1 245 1 324 1 166 1 246 1 344 1 23 1 102 1 143 1 370 1 
2 1 104 1 
319 1 324 1 246 1 194 1 344 1 23 1 308 1 143 1 370 1 
246 1 223 1 28 1 155 1 134 1 183 1 86 1 303 1 54 1 161 1 90 1 324 1 192 1 267 1 344 1 143 1 370 1 61 1 176 2 330 1 241 1 196 1 122 1 373 1 23 1 292 1 72 1 129 1 
246 1 223 1 28 1 155 1 134 1 183 1 86 1 303 1 54 1 161 1 90 1 324 1 192 1 267 1 344 1 143 1 370 1 61 1 176 2 330 1 241 1 196 1 122 1 373 1 23 1 292 1 72 1 129 1 
246 1 223 1 28 1 155 1 134 1 183 1 86 1 303 1 54 1 161 1 90 1 324 1 192 1 267 1 344 1 143 1 370 1 61 1 176 2 330 1 241 1 196 1 122 1 373 1 23 1 292 1 72 1 129 1 
286 1 73 1 285 1 
286 1 73 1 285 1 
331 1 89 1 
73 1 331 1 89 1 
328 1 187 1 
246 1 28 2 2 1 318 1 134 1 183 2 362 1 86 1 187 1 54 1 324 1 367 1 265 1 344 1 328 1 117 1 143 1 370 1 61 2 176 1 330 2 241 1 23 1 335 1 373 2 46 1 104 1 
286 1 285 1 
73 1 331 1 89 1 
244 2 149 1 222 1 201 1 28 2 295 1 297 1 78 2 253 1 358 1 300 2 278 1 258 1 302 1 363 1 40 2 230 1 264 1 281 2 343 1 115 1 92 1 18 1 268 1 96 1 61 2 215 1 310 1 147 2 373 2 243 1 
40 2 149 1 343 1 316 2 153 1 252 1 251 1 78 2 369 1 300 2 238 1 144 1 203 1 217 1 35 1 11 1 205 1 37 1 38 1 
40 1 149 1 114 1 343 1 316 2 153 1 252 1 251 1 78 1 369 1 300 1 144 1 203 1 217 1 11 1 37 1 38 1 
40 1 149 1 25 1 343 1 201 1 153 1 154 1 78 1 358 1 300 1 238 1 62 1 125 1 190 1 
40 1 149 1 343 1 316 2 153 1 252 1 251 1 78 1 369 1 300 1 238 1 144 1 203 1 217 1 11 1 205 1 37 1 38 1 
0 1 
21 1 151 1 14 1 67 1 235 1 94 1 50 1 
151 1 26 1 48 1 1 1 134 1 158 1 10 1 226 1 208 1 186 1 193 1 235 1 94 1 241 1 67 2 101 1 128 1 
198 1 149 2 151 3 26 2 201 1 78 1 358 3 300 1 301 2 134 2 158 2 10 2 207 1 186 2 208 2 209 1 40 1 165 1 41 1 56 1 233 1 16 1 343 1 193 2 94 2 93 1 60 1 173 1 119 2 312 1 241 2 287 1 289 2 125 1 101 1 348 1 313 1 
337 1 26 1 151 4 179 1 301 5 360 1 158 1 257 1 184 2 10 3 321 1 208 1 189 1 165 2 193 1 94 6 172 1 173 2 371 1 312 2 289 5 242 2 
26 1 151 2 28 1 29 1 132 1 108 1 134 1 158 1 52 1 183 1 303 1 208 1 161 1 280 2 12 1 90 1 192 1 193 1 94 2 61 1 330 1 241 1 312 2 45 1 242 1 373 1 72 1 129 1 
26 1 151 1 193 1 235 1 94 1 50 1 158 1 21 1 67 1 208 1 
173 1 301 1 165 1 151 2 312 1 10 1 289 1 
134 1 241 1 67 1 235 1 186 1 101 1 
149 1 25 1 26 2 151 2 201 1 78 4 133 1 358 1 300 4 134 3 158 2 208 2 186 4 209 2 112 1 40 4 168 1 343 1 140 1 368 2 193 1 94 2 62 1 241 3 197 1 125 2 291 1 101 2 148 2 
244 1 149 1 350 1 201 1 28 3 297 1 253 1 78 1 358 1 300 1 278 1 361 1 183 2 204 1 303 1 363 1 364 1 230 1 40 1 264 1 90 2 281 2 343 1 91 1 96 1 61 3 310 1 330 2 125 1 373 2 46 1 313 1 
151 1 26 1 193 1 235 1 94 1 301 1 158 1 10 1 67 1 208 1 209 1 148 1 
246 1 309 1 143 1 
166 1 246 1 328 1 111 1 143 1 
246 1 309 1 143 1 
246 1 309 1 143 1 
246 1 20 1 143 1 
246 1 20 1 143 1 
246 1 20 1 143 1 
246 1 143 1 
344 1 23 1 
244 8 230 2 281 4 293 1 74 3 200 2 139 1 29 1 132 1 18 4 108 1 253 4 278 2 310 2 175 1 312 1 242 1 185 1 342 1 363 2 
244 6 175 1 312 1 74 2 200 2 14 1 29 1 242 1 18 3 132 1 185 1 108 1 253 3 342 1 
230 1 244 4 165 1 281 2 293 1 200 1 74 2 18 2 253 2 173 1 278 1 310 1 256 1 312 1 184 1 242 1 363 1 
244 7 165 1 293 1 200 1 74 2 18 3 253 4 173 1 360 2 371 1 312 1 184 1 242 1 374 1 321 1 
244 23 293 4 74 9 200 5 29 2 132 1 341 1 108 2 253 12 360 2 278 2 184 2 185 1 135 1 342 1 363 2 230 2 165 2 281 4 139 2 18 11 173 2 371 2 175 1 310 2 372 1 312 3 374 1 242 3 
244 1 360 1 253 1 
244 1 371 1 18 1 
230 1 244 6 165 1 281 2 233 1 293 1 74 3 200 2 18 3 253 3 173 1 310 1 278 1 256 1 312 1 184 1 242 1 363 1 
244 12 337 1 293 1 200 1 74 2 179 1 253 6 360 1 278 1 257 1 184 2 321 1 189 1 363 1 230 1 165 2 281 2 18 6 172 1 173 2 371 1 310 1 312 2 242 2 103 1 
244 6 293 1 200 1 74 2 29 1 132 1 18 3 108 1 253 3 312 1 242 1 
244 3 230 1 281 2 293 1 74 2 200 1 139 1 29 1 18 1 108 1 253 2 175 1 278 1 310 1 372 1 185 1 363 1 
230 1 244 10 281 2 293 2 200 3 74 5 29 2 18 5 132 1 108 2 253 5 310 1 278 1 312 2 45 1 242 2 103 1 363 1 
230 1 244 2 165 1 281 2 293 1 74 1 18 2 278 1 310 1 312 1 103 1 363 1 
230 1 244 4 165 1 281 2 293 1 200 1 74 2 18 2 253 2 173 1 278 1 310 1 312 1 184 1 242 1 103 1 363 1 
244 3 230 3 281 6 293 1 139 1 200 1 74 2 29 1 250 1 18 1 108 1 253 2 278 3 310 3 372 1 103 1 363 3 
244 34 293 5 74 12 200 7 29 3 30 1 132 2 250 1 108 3 253 18 360 4 278 5 256 1 184 3 185 1 321 1 342 1 363 5 230 5 165 3 281 10 139 2 18 16 173 3 120 1 371 3 175 1 310 5 372 1 312 5 374 1 242 5 177 1 103 1 
244 8 200 2 74 2 29 1 132 1 108 1 253 4 360 1 278 1 257 1 185 1 321 1 342 1 363 1 230 1 281 2 18 4 371 1 310 1 175 1 312 1 242 1 103 1 
244 11 293 1 200 2 74 3 29 1 132 1 108 1 253 5 360 2 278 2 257 1 256 1 185 1 321 1 342 1 363 2 230 2 165 1 281 4 18 6 173 1 371 1 175 1 310 2 312 2 242 1 374 1 103 1 
244 12 337 1 293 1 200 1 74 2 179 1 253 6 360 1 278 2 256 1 257 1 184 2 321 1 189 1 363 2 230 2 165 2 281 4 18 6 172 1 173 2 371 1 310 2 312 2 242 2 103 1 
244 17 337 1 293 2 200 2 179 1 74 4 29 1 132 1 108 1 253 7 360 1 278 3 256 1 257 1 184 1 185 1 321 1 189 1 342 1 363 3 230 3 165 2 281 6 139 1 18 10 172 1 173 2 371 1 175 1 310 3 312 3 242 2 103 1 
244 8 200 2 74 2 29 1 132 1 108 1 253 4 360 1 278 1 257 1 185 1 321 1 342 1 363 1 230 1 281 2 18 4 371 1 310 1 175 1 312 1 242 1 103 1 
244 12 337 1 293 1 179 1 74 1 253 6 360 1 278 1 257 1 184 2 321 1 189 1 363 1 230 1 165 2 281 2 18 6 172 1 173 2 371 1 310 1 312 2 242 2 103 1 
244 11 337 1 293 1 200 1 74 2 179 1 253 4 360 1 278 3 257 1 256 1 184 1 321 1 189 1 363 3 230 3 165 2 281 6 139 1 18 7 172 1 173 2 371 1 310 3 312 2 242 1 103 1 
244 16 337 1 293 3 179 1 200 3 74 6 250 1 253 7 360 1 278 4 257 1 184 2 321 1 189 1 363 4 230 4 165 3 281 8 139 2 18 9 172 1 173 3 371 1 310 4 312 3 242 2 103 1 
244 7 293 3 200 3 74 6 29 3 132 1 18 3 108 3 253 4 175 2 312 1 242 1 185 1 
244 18 337 1 293 1 179 1 200 4 74 5 29 1 132 1 250 1 108 1 253 8 360 1 278 4 257 1 184 1 185 1 321 1 189 1 342 1 363 4 230 4 165 2 281 8 139 2 18 10 172 1 173 2 371 1 175 1 310 4 312 3 242 2 103 1 
269 1 97 1 28 1 373 1 46 1 58 1 61 1 
150 1 213 1 28 1 58 1 61 1 269 1 97 1 270 1 373 1 46 1 375 1 178 1 
40 1 300 1 149 1 62 1 25 1 343 1 201 1 14 1 125 1 78 1 358 1 
40 1 149 1 350 1 201 1 343 1 91 1 28 2 78 1 358 1 61 2 300 1 330 1 183 1 290 1 373 1 125 1 46 1 313 1 
149 1 350 1 201 2 28 2 356 1 357 1 78 1 358 3 299 1 300 1 8 1 183 2 40 1 343 1 91 1 368 1 192 1 61 2 330 1 373 2 290 1 46 1 313 2 
149 1 201 2 28 2 356 1 357 1 78 2 202 1 358 3 299 1 300 2 8 1 183 2 40 2 325 1 343 1 91 1 368 1 192 1 61 2 330 1 373 2 290 1 46 1 313 2 
40 3 149 1 41 1 325 1 201 1 343 1 235 1 368 1 78 3 299 1 358 4 300 3 119 1 134 2 8 1 311 1 241 2 67 1 121 1 125 1 313 1 186 1 263 1 
28 1 78 1 358 1 300 1 134 2 183 1 303 1 186 1 161 1 40 1 90 1 41 1 192 1 368 1 235 1 61 1 119 1 330 1 241 2 67 1 373 1 348 1 72 1 129 1 
40 1 300 1 149 1 343 1 31 1 78 1 
40 7 198 1 149 3 201 2 343 2 284 1 131 1 31 1 236 1 251 1 78 7 358 3 300 6 215 1 35 1 147 1 146 1 125 2 313 1 322 1 274 1 
244 6 149 1 350 1 74 2 200 2 201 1 28 2 29 1 132 1 108 1 297 2 253 3 78 1 358 1 300 1 278 2 361 1 183 1 35 1 302 1 185 1 342 1 363 2 210 1 364 1 230 2 40 1 282 1 281 4 343 1 91 1 266 1 345 1 18 3 95 1 268 1 96 2 61 2 175 1 310 2 330 1 312 1 242 1 373 1 290 1 46 2 313 1 
151 5 108 1 50 1 300 1 158 2 303 1 208 2 161 1 112 1 12 1 56 1 61 1 119 1 21 1 312 2 67 2 125 1 348 1 72 1 129 1 26 2 28 1 29 1 132 1 78 1 358 1 134 3 183 1 362 1 186 2 40 1 280 2 90 1 41 1 192 1 193 2 235 2 93 1 94 4 330 1 287 1 241 3 45 1 242 2 373 1 101 1 
40 2 198 1 149 2 201 1 343 1 31 1 78 2 358 2 300 2 35 1 121 1 207 1 313 1 
40 4 149 1 25 1 113 1 325 1 201 1 343 1 78 4 358 1 300 4 62 1 35 1 125 1 
40 2 149 2 13 1 201 1 343 1 131 1 296 1 368 1 78 2 358 1 300 2 333 1 313 1 322 1 
40 1 300 1 149 1 203 1 343 1 316 1 38 1 125 1 252 1 78 1 
40 2 300 2 149 1 215 1 35 1 343 1 201 1 258 1 251 1 78 2 358 1 
40 5 149 2 25 1 113 1 201 2 343 2 284 1 368 1 236 1 78 5 358 3 300 4 62 1 215 1 35 1 125 1 
40 5 149 2 25 1 113 1 201 2 343 2 284 1 368 1 170 1 78 5 358 3 300 4 62 1 215 1 35 1 125 1 
40 1 149 1 201 1 343 1 91 1 28 2 78 1 358 1 202 1 61 2 300 1 330 1 183 1 290 1 373 1 125 1 46 1 313 1 
40 1 198 1 149 2 201 1 343 1 131 1 368 1 78 1 358 1 300 1 146 1 313 1 322 1 
64 1 271 1 234 1 46 1 6 1 
304 1 366 1 55 1 41 1 234 1 235 1 192 1 249 1 357 1 356 1 6 2 134 2 64 2 241 2 271 2 362 1 67 1 332 1 46 1 
222 1 115 1 234 1 28 1 92 1 6 1 61 1 64 1 373 1 
304 1 234 1 249 1 
14 1 214 1 259 1 3 1 
231 1 110 1 167 1 34 1 214 1 259 1 3 1 
182 1 167 1 169 1 
231 3 167 3 199 1 214 1 3 1 77 2 298 1 110 1 34 1 259 1 260 1 71 1 
231 2 110 1 167 2 34 1 248 1 214 1 259 1 3 1 123 1 
231 1 167 1 199 1 316 1 3 1 110 1 216 1 34 1 217 1 38 1 228 1 
231 1 110 1 167 1 34 1 199 1 214 1 3 1 
231 1 110 1 167 1 34 1 199 1 214 2 259 1 
163 1 231 2 167 2 199 1 214 1 3 1 110 2 34 2 336 1 211 1 
231 3 167 3 199 1 248 2 214 1 3 2 181 1 59 1 110 1 65 1 34 1 259 1 228 1 
231 2 110 1 167 1 240 1 34 1 199 1 248 1 316 1 252 1 
231 4 167 4 199 1 326 1 248 2 214 1 3 2 181 1 110 2 34 2 259 1 123 1 228 1 
231 1 110 1 167 1 34 1 199 1 214 1 259 1 3 1 
231 4 167 4 248 2 214 2 3 3 77 1 181 1 298 1 329 1 110 1 34 1 259 2 71 1 228 1 
231 2 167 2 199 1 27 1 248 1 214 1 3 1 110 1 9 1 34 1 259 1 191 1 
231 3 167 3 199 1 352 1 214 1 3 1 77 2 298 2 110 1 34 1 259 1 71 1 
69 1 3 2 237 1 323 2 
81 1 231 1 110 1 167 1 34 1 199 1 
231 2 110 1 167 2 34 1 199 1 248 1 214 1 259 1 3 1 59 1 
7 1 
231 1 110 1 167 1 34 1 199 1 214 1 259 1 3 1 
231 3 110 1 167 3 34 1 199 1 248 1 214 1 259 1 3 1 77 1 59 1 
329 1 3 1 181 1 228 1 
214 1 3 1 

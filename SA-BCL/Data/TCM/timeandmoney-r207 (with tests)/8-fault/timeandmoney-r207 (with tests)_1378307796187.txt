#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (237,305) (237,305) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (237,305) (237,305) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (237,305) (237,305) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (237,305) (237,305) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 311 73 275 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 311 73 275 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 311 73 275 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 311 73 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 1 286 1 170 1 160 1 113 1 305 1 64 1 241 1 246 1 237 1 68 1 132 1 263 1 
158 1 286 1 170 1 160 1 113 1 305 1 64 1 241 1 246 1 237 1 68 1 132 1 263 1 
158 1 286 1 170 1 160 1 113 1 305 1 64 1 241 1 246 1 237 1 68 1 132 1 263 1 
158 1 286 1 170 1 160 1 113 1 305 1 64 1 241 1 246 1 237 1 68 1 132 1 263 1 
353 3 165 1 83 3 70 1 246 4 87 1 111 1 239 1 358 2 263 1 211 2 181 1 170 1 286 4 241 1 64 1 230 1 132 1 
83 1 246 2 111 1 239 1 198 1 121 1 139 1 170 1 286 2 113 1 241 1 64 1 230 1 123 1 68 1 132 1 
353 1 83 2 246 3 239 1 211 1 170 2 286 3 181 1 113 1 241 1 64 2 230 1 368 1 
151 1 70 1 246 9 211 4 181 3 230 1 353 7 165 1 303 1 83 5 356 1 111 1 87 1 239 1 358 2 263 1 286 9 170 2 113 1 64 2 241 1 148 1 368 1 132 1 
151 1 70 1 246 9 211 4 181 3 230 1 353 7 165 1 303 1 83 5 356 1 111 1 87 1 239 1 358 2 263 1 286 9 170 2 113 1 64 2 241 1 148 1 368 1 132 1 
324 1 191 1 301 1 
174 2 59 1 191 1 
171 2 125 2 319 2 219 1 342 1 289 2 25 2 199 2 
133 1 319 3 318 1 223 1 342 1 29 2 177 1 71 1 276 2 249 1 3 1 225 1 344 1 183 1 233 1 107 1 125 2 354 1 141 1 307 2 109 2 13 1 197 1 62 1 336 1 199 2 171 3 265 1 288 1 115 1 219 1 118 2 92 1 289 2 21 1 25 2 69 1 
171 1 125 1 319 1 219 1 289 1 357 1 25 1 310 1 199 1 42 1 
125 1 222 1 319 2 191 1 357 2 310 1 42 1 199 2 171 2 54 1 219 1 365 1 243 1 187 1 289 1 301 1 25 1 204 1 
125 2 319 2 191 1 357 2 156 1 334 1 310 1 42 1 199 2 171 2 54 1 219 1 365 1 187 1 289 2 301 1 25 2 204 1 
205 1 110 1 156 1 334 1 348 1 
205 1 191 1 290 1 301 1 156 2 334 2 348 1 89 1 
205 1 156 1 334 1 
125 1 319 1 357 1 156 1 334 1 310 1 42 1 199 1 171 1 54 1 219 1 289 1 348 1 25 1 
191 1 
205 1 191 1 104 1 301 1 156 2 334 2 348 1 89 1 
85 1 205 2 191 1 194 1 154 1 208 2 156 5 334 5 89 1 322 2 5 2 280 1 161 1 34 1 216 1 301 1 348 2 96 1 272 1 
149 1 354 1 318 1 319 2 223 1 109 1 13 1 276 1 249 1 359 1 199 1 171 2 288 1 115 1 118 1 92 1 289 1 221 1 25 1 69 1 
324 1 342 1 
125 1 319 2 342 2 195 1 112 1 199 2 171 2 289 1 25 1 
149 1 7 1 300 1 
354 1 102 1 319 1 318 1 223 1 109 1 342 1 13 1 276 1 249 1 171 1 115 1 288 1 118 1 92 1 69 1 
171 3 125 1 319 3 342 1 289 3 221 1 25 3 199 3 
171 1 319 1 289 1 357 1 25 1 310 1 199 1 
171 1 125 1 319 1 289 1 195 1 357 1 25 1 112 1 199 1 
125 1 319 2 206 1 357 1 359 1 112 1 335 1 199 2 171 2 365 1 187 1 289 2 221 1 25 2 204 1 
171 2 319 2 243 1 342 1 289 1 298 1 221 1 25 1 199 2 
319 1 357 1 359 1 335 1 199 1 171 1 365 1 187 1 289 1 23 1 221 1 25 1 204 1 
149 1 171 2 125 1 319 2 289 2 7 1 221 1 25 2 112 1 199 2 
354 1 319 1 318 1 223 1 109 1 342 1 13 1 276 1 249 1 171 1 115 1 288 1 118 1 92 1 69 1 
354 1 319 1 223 1 235 1 109 1 342 1 13 1 276 1 171 1 115 1 288 1 118 1 92 1 26 1 69 1 
149 1 341 1 133 2 307 2 143 1 29 2 14 1 71 1 308 1 225 1 62 1 3 1 265 1 366 1 21 1 300 1 
171 1 82 1 319 1 289 1 357 1 25 1 204 1 199 1 
125 1 319 5 342 1 127 1 359 1 112 1 199 5 171 5 200 1 243 1 289 4 298 1 221 2 25 4 
82 1 171 2 319 2 289 2 357 1 25 2 310 1 199 2 
108 1 226 1 
108 1 226 1 
31 1 360 1 
31 1 360 1 
31 1 360 1 
108 1 196 1 226 1 
108 2 291 1 40 1 226 2 31 1 360 1 
108 1 72 1 226 1 
108 1 196 1 226 1 
108 1 196 1 226 1 
331 1 108 1 226 1 
331 1 108 1 226 1 
331 1 108 1 226 1 
330 3 166 2 108 2 234 2 191 1 207 1 274 1 156 2 40 1 226 2 334 2 251 2 254 2 312 2 257 1 347 1 24 1 81 1 97 1 
319 2 342 1 320 1 156 1 248 1 72 1 226 1 251 1 182 1 254 1 55 1 255 1 330 1 234 1 108 1 166 1 238 1 334 1 199 2 171 2 201 1 289 2 25 2 97 1 
111 1 132 1 263 1 
111 1 198 1 132 1 
39 1 329 1 198 1 132 3 284 1 263 2 
39 1 261 1 198 1 132 2 284 1 263 1 
39 1 198 1 132 2 263 1 284 2 
341 1 174 3 205 1 154 1 208 1 156 5 322 1 5 1 255 1 55 1 216 2 56 1 140 2 301 1 217 1 348 4 59 1 85 3 191 2 14 1 333 1 334 5 89 1 285 1 362 1 20 1 201 1 44 1 245 1 22 2 27 2 46 1 
174 1 205 3 319 1 154 1 208 1 156 5 322 1 5 1 180 1 212 2 54 1 55 1 216 2 56 1 140 1 217 1 301 1 348 4 125 1 85 1 191 1 193 1 110 2 357 1 333 1 334 5 89 1 310 1 42 1 199 1 171 1 219 1 44 1 245 1 289 1 22 1 25 1 46 1 
341 1 174 4 208 1 156 3 322 1 5 1 55 1 216 2 140 2 301 1 217 1 348 2 59 2 85 3 191 3 14 1 333 1 334 3 285 1 20 1 245 1 44 1 22 2 27 1 46 1 272 1 
341 2 174 7 208 1 156 4 322 1 5 1 55 2 216 4 140 4 301 1 217 1 348 3 59 3 85 5 191 4 14 2 144 1 333 2 334 4 17 1 285 1 240 1 20 1 245 1 44 2 22 4 27 2 46 2 272 1 
324 1 58 1 69 1 
69 1 98 1 
95 1 
288 1 69 1 
252 1 58 2 288 1 13 1 69 3 138 1 
288 1 13 1 69 1 
51 1 69 1 
340 1 135 1 307 1 247 1 283 1 336 1 323 1 296 2 116 1 94 1 147 1 67 1 351 1 
340 1 135 1 307 1 247 1 283 1 336 1 323 1 296 2 116 1 94 1 147 1 67 1 351 1 
340 1 135 1 307 1 247 1 283 1 336 1 227 1 323 1 296 2 116 1 94 1 147 1 67 1 351 1 
292 1 341 3 340 4 133 12 135 2 120 1 29 2 247 5 3 1 323 1 253 1 296 9 346 1 78 4 35 3 351 1 302 1 307 25 283 1 169 1 14 3 333 3 62 1 336 13 265 1 114 1 116 2 44 3 21 1 94 2 147 2 67 2 46 3 
340 2 133 1 135 1 307 3 283 1 247 1 29 4 62 2 3 2 336 2 265 2 114 1 296 3 116 1 66 1 339 1 21 2 94 1 147 1 67 1 351 1 
134 1 223 1 246 2 276 1 250 1 279 1 122 1 230 1 256 1 162 1 329 1 353 1 83 1 304 1 86 1 109 1 111 1 239 1 198 1 263 1 286 2 170 1 90 1 113 1 64 1 241 1 118 1 92 1 132 2 48 1 
134 1 223 1 246 3 276 1 250 1 122 1 230 1 326 1 256 1 162 1 329 1 353 2 83 1 304 1 86 1 109 1 12 1 332 1 111 1 239 1 198 1 263 1 286 3 170 1 113 1 64 1 118 1 92 1 132 2 48 1 
134 1 223 1 246 2 276 1 250 1 230 1 256 1 162 1 329 1 353 2 83 1 304 1 86 1 109 1 12 1 332 1 111 1 239 1 198 1 263 1 286 2 113 1 118 1 92 1 132 2 
134 2 223 1 28 1 246 1 276 1 2 1 250 2 4 1 326 1 256 2 260 1 354 1 109 1 15 1 286 1 170 1 113 2 64 1 130 1 288 1 118 1 92 1 69 1 
304 1 134 1 223 1 86 1 109 1 332 1 246 1 111 1 276 1 198 1 250 1 263 1 122 1 90 1 170 1 286 1 113 1 241 1 64 1 118 1 92 1 256 1 162 1 329 1 132 2 48 1 
184 1 
174 2 222 1 319 1 223 1 176 1 1 1 2 1 276 2 322 1 278 1 5 1 187 1 8 2 106 1 59 2 191 1 192 2 109 2 334 4 199 1 19 2 288 1 118 2 243 1 69 1 204 1 205 6 28 1 154 1 208 1 209 2 156 4 74 2 33 1 214 1 216 2 217 1 259 1 354 2 85 2 355 1 262 2 357 1 88 2 89 3 264 1 171 1 364 1 365 1 93 2 92 1 173 1 316 1 
222 1 205 2 319 1 176 1 104 1 357 1 156 2 334 2 89 1 278 1 199 1 19 1 171 1 365 1 33 1 243 1 187 1 173 1 259 1 204 1 
222 1 319 1 192 1 176 1 357 1 156 1 334 1 278 1 199 1 171 1 365 1 33 1 243 1 187 1 173 1 8 1 259 1 204 1 
222 1 319 1 205 2 176 1 104 1 156 2 278 1 33 1 187 1 8 1 259 1 192 1 357 1 334 2 89 1 199 1 171 1 19 1 365 1 243 1 93 1 173 1 204 1 
222 1 319 2 103 1 176 1 104 1 278 1 322 1 5 1 54 1 228 1 187 1 8 3 106 1 59 2 191 2 192 3 334 4 199 2 19 4 243 1 289 1 25 1 204 1 205 7 154 1 208 1 209 2 156 4 74 2 33 1 216 1 163 1 301 2 259 1 218 1 125 1 85 1 262 2 357 2 88 2 89 3 310 1 42 1 171 2 364 1 219 1 365 1 220 1 93 4 173 1 
222 1 174 2 319 1 176 1 322 1 278 1 5 1 187 1 8 2 106 1 59 2 192 2 191 2 334 3 199 1 19 2 243 1 204 1 205 4 154 1 208 1 209 2 156 3 74 2 33 1 214 1 216 1 301 1 259 1 85 1 262 2 357 1 88 2 89 2 171 1 364 1 365 1 93 2 173 1 
222 1 205 4 319 1 176 1 154 1 208 1 209 2 156 3 74 2 278 1 322 1 5 1 33 1 187 1 216 1 301 1 8 2 163 1 106 1 259 1 218 1 59 2 85 1 191 1 192 2 262 2 357 1 88 2 334 3 89 2 199 1 19 2 171 1 364 1 365 1 243 1 220 1 93 2 173 1 204 1 
222 1 205 4 319 1 176 1 154 1 208 1 209 2 156 3 74 2 278 1 322 1 5 1 33 1 187 1 216 1 301 1 8 2 163 1 106 1 259 1 218 1 59 2 85 1 191 1 192 2 262 2 357 1 88 2 334 3 89 2 199 1 19 2 171 1 364 1 365 1 243 1 220 1 93 2 173 1 204 1 
174 2 222 1 205 4 319 1 176 1 154 1 208 1 209 2 156 3 295 1 30 1 278 1 322 1 5 1 33 1 187 1 216 1 301 1 8 2 9 2 106 1 259 1 218 1 85 1 191 1 192 2 357 1 88 2 334 3 89 2 361 1 199 1 19 2 171 1 242 2 365 1 243 1 93 2 173 1 204 1 
222 1 319 1 205 5 103 1 176 1 154 1 208 1 209 2 156 3 74 2 322 1 278 1 5 1 33 1 187 1 216 1 301 1 8 3 163 1 106 1 259 1 218 1 59 2 85 1 191 1 192 3 262 2 357 1 88 2 334 3 89 2 199 1 171 1 19 3 364 1 365 1 243 1 220 1 93 3 173 1 204 1 
222 1 319 1 205 5 103 1 176 1 154 1 208 1 209 2 156 3 74 2 322 1 278 1 5 1 33 1 187 1 216 1 301 1 8 3 163 1 106 1 259 1 218 1 59 2 85 1 191 1 192 3 262 2 357 1 88 2 334 3 89 2 199 1 171 1 19 3 364 1 365 1 243 1 220 1 93 3 173 1 204 1 
174 2 222 1 205 4 319 1 176 1 154 1 208 1 209 2 156 3 278 1 322 1 5 1 33 1 214 1 187 1 216 1 301 1 8 2 9 2 106 1 259 1 85 1 191 1 192 2 357 1 88 2 334 3 89 2 361 1 199 1 19 2 171 1 242 2 365 1 243 1 93 2 173 1 204 1 
340 1 135 1 143 1 29 2 283 1 71 1 225 1 62 1 3 1 265 1 324 1 296 1 21 1 94 1 351 1 
149 7 133 3 342 1 294 1 29 4 71 1 3 2 225 2 76 1 253 1 6 1 300 7 7 5 78 2 35 2 107 1 11 1 307 9 357 1 333 2 62 2 336 6 265 2 44 2 172 1 21 2 46 2 119 1 
102 1 133 1 318 1 319 2 223 1 342 1 29 2 249 1 276 1 71 1 225 1 3 1 7 1 11 1 107 1 354 1 141 1 109 1 167 1 307 2 13 1 62 1 359 1 199 1 336 1 171 2 265 1 288 1 115 1 267 1 118 1 92 1 289 1 21 1 221 1 25 1 270 1 69 1 
149 2 133 2 318 1 319 2 223 1 29 4 177 1 249 1 71 2 276 1 277 1 225 2 3 2 297 1 185 1 300 2 11 1 107 1 354 1 84 1 307 5 109 1 13 1 333 1 62 2 359 1 336 3 199 1 171 2 265 2 288 1 115 1 118 1 44 1 92 1 289 1 21 2 221 1 131 1 25 1 46 1 69 1 
317 1 133 1 319 1 223 2 293 1 28 1 29 4 276 8 71 2 2 1 321 1 3 2 225 2 279 1 233 2 107 1 354 2 141 1 143 1 109 7 307 2 332 1 62 2 128 1 199 1 336 1 171 1 265 2 288 2 117 1 314 1 118 8 92 2 289 1 367 1 21 2 221 1 25 1 69 3 
149 1 340 1 341 1 133 2 319 1 29 2 71 1 3 1 225 1 296 1 7 1 300 1 349 1 11 1 125 1 307 3 14 1 333 1 62 1 112 1 199 1 336 1 171 1 265 1 44 1 289 1 21 1 25 1 46 1 
149 1 307 2 143 1 155 1 29 2 71 1 333 1 225 1 62 1 3 1 336 2 265 1 21 1 300 1 46 1 
149 1 341 1 133 2 307 2 143 1 29 2 14 1 71 1 225 1 62 1 3 1 265 1 366 1 21 1 300 1 
149 1 307 2 143 1 29 2 71 1 333 1 225 1 62 1 3 1 336 2 265 1 44 1 21 1 300 1 46 1 
149 1 307 2 155 1 29 2 71 1 333 1 225 1 62 1 3 1 336 2 265 1 314 1 21 1 300 1 46 1 
149 1 341 1 133 2 307 2 29 2 14 1 71 1 225 1 62 1 3 1 265 1 314 1 366 1 21 1 300 1 
149 1 307 2 29 2 71 1 333 1 225 1 62 1 3 1 336 2 265 1 314 1 44 1 21 1 300 1 46 1 
149 1 307 2 29 2 71 1 333 1 225 1 62 1 3 1 336 2 265 1 44 1 21 1 300 1 46 1 
133 1 318 1 319 1 223 1 342 1 29 2 177 1 249 1 276 1 71 1 225 1 3 1 107 1 354 1 141 1 307 2 109 1 13 1 62 1 336 1 171 1 265 1 288 1 115 1 118 1 92 1 21 1 69 1 
133 1 319 1 223 1 342 1 29 2 276 1 71 1 225 1 3 1 229 1 107 1 354 1 141 1 235 1 307 2 109 1 13 1 62 1 336 1 171 1 265 1 288 1 115 1 118 1 92 1 21 1 26 1 69 1 
149 1 11 1 307 2 29 2 71 1 333 1 225 1 62 1 3 1 336 2 265 1 44 1 21 1 300 1 46 1 
149 1 318 1 319 1 223 1 29 2 177 1 249 1 276 1 71 1 225 1 3 1 279 1 300 1 84 1 307 2 109 1 13 1 333 1 62 1 336 2 171 1 265 1 115 1 288 1 118 1 92 1 44 1 21 1 46 1 69 1 
149 1 319 1 247 1 29 2 71 1 137 1 3 1 225 1 296 1 300 1 7 1 11 1 125 1 307 2 333 1 62 1 112 1 199 1 336 2 171 1 265 1 44 1 289 1 21 1 25 1 46 1 
99 1 100 1 340 2 292 3 341 3 133 15 175 1 29 6 247 2 275 1 73 1 3 3 343 2 213 1 253 1 296 4 78 4 35 3 307 27 14 3 333 3 61 1 62 3 336 12 63 3 265 3 311 1 114 1 44 3 339 1 21 3 46 3 47 1 370 1 
99 1 100 1 340 3 292 3 341 3 133 15 175 1 29 6 247 2 275 1 73 1 3 3 343 2 213 1 253 1 296 5 78 4 35 3 307 27 14 3 333 3 61 1 62 3 336 12 63 3 265 3 311 1 114 1 44 3 339 1 21 3 46 3 47 1 370 1 
99 1 101 1 340 6 292 2 341 5 133 17 175 1 135 1 29 4 247 5 275 1 73 1 3 2 343 1 253 2 296 11 78 4 35 4 351 1 307 37 283 1 14 5 333 6 62 2 336 20 63 2 265 2 311 1 114 1 91 1 44 6 339 1 21 2 94 1 119 2 46 6 370 1 
100 2 340 3 292 1 341 3 133 10 29 4 247 3 275 1 73 1 3 2 343 1 253 1 296 6 258 1 78 2 35 1 307 19 14 3 333 3 61 1 62 2 336 9 63 2 265 2 44 3 339 1 21 2 46 3 47 1 370 1 
99 1 340 1 341 1 292 2 133 8 175 1 29 4 275 1 73 2 3 2 343 2 296 1 78 2 35 2 307 14 14 1 333 1 62 2 336 6 63 2 265 2 311 1 114 1 44 1 339 1 21 2 46 1 370 1 
317 1 133 1 319 2 223 1 293 1 224 1 29 2 276 2 71 1 225 1 157 1 3 1 188 1 233 2 11 1 107 1 38 1 141 1 307 2 109 2 62 1 199 2 336 1 171 2 265 1 288 1 338 1 118 2 92 1 21 1 69 1 
134 1 223 1 86 1 152 1 109 2 332 1 111 1 276 2 198 1 263 1 279 1 118 2 92 1 162 1 329 1 80 1 132 2 48 1 49 1 
134 1 86 1 223 1 109 1 332 1 111 1 276 1 198 1 263 1 363 1 118 1 92 1 162 1 329 1 80 1 132 2 48 1 
354 1 134 1 223 1 152 1 109 1 28 1 276 1 2 1 130 1 288 1 105 1 118 1 92 1 69 1 
134 1 86 1 223 1 152 1 109 1 332 1 111 1 276 1 198 1 263 1 118 1 92 1 162 1 329 1 80 1 132 2 48 1 49 1 
142 1 
324 1 85 1 191 1 34 1 194 1 216 1 301 1 
174 1 205 1 154 1 208 1 156 1 74 1 322 1 5 1 216 1 301 1 59 1 85 1 191 2 262 1 334 1 89 1 364 1 
50 2 174 12 223 3 51 2 276 3 277 2 279 1 322 4 5 4 138 1 231 1 140 6 189 2 57 1 58 2 59 6 191 8 194 1 109 3 282 2 236 1 13 3 14 2 333 2 334 5 288 3 118 3 244 2 22 6 69 10 341 2 205 5 154 4 208 4 156 5 159 1 345 2 34 1 216 8 301 2 217 2 164 2 354 1 85 9 306 2 89 3 313 2 92 4 44 2 45 2 269 1 316 1 46 2 98 3 
50 1 99 1 292 1 341 1 174 6 205 1 175 1 154 2 208 2 156 1 322 2 5 2 216 2 140 4 78 1 301 1 35 1 85 5 59 3 191 4 14 1 333 1 334 1 41 1 89 1 311 1 44 1 22 4 46 1 
50 2 341 1 319 1 135 1 154 1 208 1 156 1 322 1 5 1 54 1 215 1 216 2 163 1 125 1 85 2 282 1 357 1 334 1 310 1 42 1 199 1 171 1 65 1 219 1 289 1 94 1 25 1 46 2 
85 1 191 1 194 1 154 1 208 1 322 1 5 1 34 1 216 1 301 1 
50 2 341 2 174 10 59 5 85 5 191 5 282 1 14 2 333 2 277 1 44 2 216 5 140 5 22 5 46 2 
205 1 191 1 301 1 156 1 334 1 89 1 
205 4 223 1 153 1 28 1 1 1 154 1 208 2 156 3 276 4 2 1 322 2 5 2 77 1 216 2 217 2 57 1 354 2 85 2 109 4 334 3 89 2 264 1 288 1 118 4 92 1 269 2 316 2 272 1 69 1 
133 1 319 3 318 1 223 1 342 1 29 2 177 1 276 1 249 1 71 1 3 1 225 1 183 1 107 1 354 1 125 2 307 1 109 1 13 1 62 1 199 2 171 3 265 1 115 1 288 1 219 1 118 1 92 1 289 2 21 1 25 2 69 1 
174 4 59 2 85 1 191 4 154 1 208 1 322 1 5 1 116 1 216 2 140 2 22 2 217 1 301 2 316 1 
234 1 254 1 10 1 
0 1 234 1 254 1 274 1 238 1 
234 1 254 1 10 1 
234 1 254 1 10 1 
234 1 254 1 315 1 
234 1 254 1 315 1 
234 1 254 1 315 1 
234 1 254 1 
108 1 226 1 
292 1 265 1 133 1 311 1 307 2 339 1 21 1 29 2 78 1 35 1 3 1 62 1 336 1 
292 1 133 2 307 5 247 1 29 4 333 1 62 2 3 2 336 3 265 2 253 1 311 1 296 1 44 1 327 1 339 1 21 2 78 2 35 1 46 1 
99 1 340 1 341 1 292 1 133 5 175 1 307 8 29 4 14 1 333 1 62 2 3 2 336 3 265 2 311 1 114 1 296 1 44 1 339 1 21 2 78 1 35 1 46 1 
99 1 292 1 341 1 340 1 101 1 133 4 175 1 247 1 29 4 3 2 296 2 78 1 35 1 307 11 14 1 333 2 62 2 336 7 265 2 311 1 114 1 91 1 44 2 339 1 21 2 46 2 
292 1 265 1 133 1 311 1 307 2 339 1 21 1 29 2 78 1 35 1 3 1 62 1 336 1 
99 1 292 1 341 2 340 1 101 1 133 6 175 1 247 1 29 2 3 1 296 2 78 1 35 1 307 12 14 2 333 2 62 1 336 6 265 1 311 1 91 1 44 2 339 1 21 1 46 2 
99 1 340 1 341 1 292 1 133 5 175 1 307 8 29 6 14 1 333 1 62 3 3 3 336 3 265 3 311 1 114 1 296 1 44 1 339 1 327 1 21 3 78 1 35 1 46 1 
99 1 340 2 341 1 292 1 133 5 175 1 307 8 29 6 14 1 333 1 61 1 62 3 3 3 336 3 265 3 311 1 114 1 296 2 44 1 339 1 21 3 78 1 35 1 46 1 
340 2 133 1 135 2 307 2 283 1 247 2 336 1 296 4 94 2 351 2 
99 1 340 1 341 1 292 1 133 5 175 1 307 8 29 6 14 1 333 1 61 1 62 3 3 3 336 3 265 3 311 1 114 1 296 1 44 1 339 1 21 3 78 1 35 1 46 1 
340 1 133 1 135 1 307 2 247 1 29 4 283 1 62 2 3 2 336 1 265 2 296 2 114 1 21 2 94 1 351 1 
340 1 324 1 296 1 135 1 283 1 94 1 351 1 
340 1 341 1 133 2 307 4 29 2 247 1 14 1 333 1 62 1 3 1 336 2 265 1 296 2 44 1 327 1 21 1 46 1 
340 1 341 1 292 1 133 4 307 7 247 1 14 1 333 1 336 3 253 1 296 2 44 1 78 2 35 1 46 1 
341 3 340 6 133 14 135 4 294 1 247 5 29 4 3 2 253 1 296 11 215 1 78 2 79 1 35 2 351 1 307 27 283 1 14 2 333 2 62 2 336 13 265 2 65 1 114 2 116 1 44 2 21 2 94 4 46 3 119 1 
133 1 307 1 78 1 
307 1 35 1 336 1 
341 1 340 2 133 3 307 6 29 2 247 1 14 1 333 1 3 1 62 1 277 1 336 3 265 1 296 3 44 1 327 1 21 1 46 1 
99 1 292 1 341 2 340 1 101 1 133 6 175 1 247 1 29 2 3 1 296 2 78 1 35 1 307 12 14 2 333 2 62 1 336 6 265 1 311 1 91 1 44 2 339 1 21 1 46 2 
341 1 340 1 133 3 135 1 307 6 247 1 336 3 296 2 215 1 94 1 46 1 
340 3 341 1 133 6 135 3 29 2 247 3 3 1 296 6 215 1 79 1 351 1 307 12 283 1 62 1 336 6 265 1 65 1 114 1 116 1 21 1 94 3 46 1 
340 3 341 2 133 5 135 2 307 10 29 2 247 2 3 1 62 1 336 5 265 1 65 1 296 5 339 1 215 1 21 1 94 2 46 2 
307 2 29 2 247 1 333 1 62 1 3 1 336 2 265 1 296 1 339 1 21 1 46 1 
340 1 341 1 133 2 307 4 29 2 247 1 14 1 333 1 62 1 3 1 336 2 265 1 296 2 44 1 339 1 21 1 46 1 
340 1 133 2 135 1 307 3 29 6 247 1 61 1 62 3 3 3 336 1 265 3 114 1 296 2 339 1 21 3 94 1 79 1 
292 1 341 4 340 6 133 15 135 3 120 1 29 10 247 5 3 5 253 1 296 11 215 1 327 1 79 1 78 4 35 3 351 1 302 1 307 28 283 1 169 1 14 3 333 3 61 1 62 5 336 13 265 5 114 2 44 3 339 1 21 5 94 3 46 4 
171 1 319 1 243 1 342 1 298 1 178 1 199 1 
319 1 342 1 60 1 168 1 136 1 178 1 16 1 199 1 171 1 266 1 243 1 298 1 
324 1 354 1 288 1 223 1 118 1 92 1 28 1 109 1 2 1 276 1 69 1 
354 1 319 2 318 1 223 1 109 1 342 1 13 1 276 1 199 1 171 2 288 1 115 1 118 1 92 1 289 1 221 1 25 1 69 1 
318 1 319 2 223 1 51 1 342 1 276 1 189 1 109 1 13 2 357 1 199 2 171 2 115 1 288 2 365 1 118 1 92 1 289 2 269 1 221 1 25 1 69 3 204 1 
319 2 223 1 51 1 342 1 276 2 189 1 235 1 109 2 13 2 357 1 309 1 199 2 171 2 115 1 288 2 365 1 118 2 92 1 289 2 269 1 221 1 25 1 69 3 204 1 
205 1 223 1 51 1 156 2 210 1 276 3 301 1 189 1 354 1 58 1 191 1 109 3 13 1 309 1 334 2 146 1 288 1 313 1 118 3 92 1 269 1 69 4 98 1 
354 1 205 1 58 1 191 1 51 1 223 1 109 3 13 1 156 2 276 3 309 1 334 2 288 1 313 1 345 1 118 3 92 1 269 1 301 1 189 1 98 1 69 4 
223 1 118 1 92 1 109 1 276 1 321 1 
354 2 223 2 293 1 109 6 332 1 13 1 276 7 321 1 279 1 128 1 138 1 129 1 288 2 117 1 118 7 92 3 367 1 299 1 233 1 273 1 69 3 
340 1 319 2 318 1 223 1 135 1 29 4 177 1 71 2 276 1 249 1 225 2 157 1 3 2 279 1 296 1 185 1 351 1 11 1 84 1 109 1 13 1 283 1 62 2 199 1 171 2 265 2 288 1 115 1 118 1 92 1 289 1 21 2 94 1 221 1 25 1 69 1 
205 2 154 2 208 2 156 3 276 1 322 2 5 2 345 1 34 1 216 1 301 1 164 1 348 1 57 1 354 1 85 1 58 1 191 1 306 1 194 1 109 1 334 3 89 1 313 1 118 1 244 1 98 1 69 2 
58 1 223 1 109 2 13 1 276 2 321 1 279 1 138 1 288 1 118 2 92 2 231 1 69 2 
124 1 354 1 223 1 109 4 28 1 276 4 2 1 309 1 279 1 288 1 118 4 92 1 69 1 
223 1 109 2 13 1 276 2 129 1 287 1 288 1 268 1 118 2 186 1 92 2 269 1 299 1 69 1 
354 1 223 1 118 1 92 1 109 1 162 1 111 1 276 1 198 1 132 1 
288 1 223 1 293 1 118 2 92 1 109 2 224 1 332 1 276 2 279 1 69 1 
124 1 354 1 223 2 293 1 28 1 109 4 2 1 276 5 279 1 288 2 117 1 118 5 92 2 269 1 367 1 69 3 
124 1 354 1 223 2 293 1 28 1 109 4 2 1 276 5 279 1 288 2 118 5 203 1 92 2 269 1 367 1 69 3 
354 1 319 2 223 1 235 1 109 1 342 1 13 1 276 1 199 1 171 2 288 1 115 1 118 1 92 1 289 1 221 1 25 1 69 1 
223 1 109 1 13 1 276 1 138 1 129 1 288 1 118 1 92 2 269 1 299 1 273 1 69 1 
43 1 325 1 202 1 342 1 18 1 
319 1 156 1 325 1 54 1 281 1 187 1 301 1 348 1 125 1 191 1 357 2 334 1 335 1 18 1 310 1 199 1 42 1 171 1 43 1 202 1 365 1 219 1 289 1 369 1 25 1 271 1 204 1 
38 1 319 1 18 1 199 1 171 1 325 1 202 1 338 1 188 1 
325 1 281 1 271 1 
83 1 324 1 230 1 239 1 
286 1 170 1 83 1 64 1 230 1 246 1 239 1 
113 1 256 1 246 1 
139 2 286 3 170 1 83 1 64 1 241 1 230 1 52 1 246 3 239 1 179 1 32 1 
353 1 286 2 170 1 83 1 64 1 230 1 246 2 239 1 358 1 
165 1 83 1 246 1 111 1 263 1 211 1 170 1 286 1 241 1 64 1 132 1 
286 1 170 1 83 1 64 1 241 1 246 1 239 1 
286 1 170 1 64 1 241 1 230 1 246 1 239 2 
286 2 170 2 83 1 64 2 241 1 246 2 145 1 239 1 350 1 53 1 
353 2 83 2 151 1 246 3 356 1 239 1 211 1 170 1 286 3 181 1 241 1 64 1 230 1 
353 1 83 1 246 2 111 1 239 1 198 1 75 1 263 1 170 1 286 2 241 1 64 1 230 1 329 1 132 2 
353 2 83 2 246 4 87 1 239 1 358 1 211 1 170 2 286 4 181 1 241 1 64 2 230 1 
286 1 170 1 83 1 64 1 241 1 230 1 246 1 239 1 
353 2 83 3 246 4 179 1 239 2 32 1 211 1 139 1 286 4 170 1 181 1 64 1 230 2 36 1 
353 1 83 1 303 1 246 2 239 1 170 1 286 2 241 1 64 1 337 1 230 1 232 1 
139 2 286 3 170 1 83 1 37 1 64 1 241 1 230 1 246 3 239 1 179 2 32 1 
150 1 83 2 126 2 328 1 
286 1 170 1 190 1 64 1 241 1 246 1 
353 1 286 2 170 1 83 1 64 1 241 1 230 1 356 1 246 2 239 1 
352 1 
286 1 170 1 83 1 64 1 241 1 230 1 246 1 239 1 
353 1 83 1 246 3 356 1 239 1 170 1 286 3 139 1 241 1 64 1 230 1 
181 1 83 1 36 1 211 1 
83 1 239 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (62,65) 263 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (57,120) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (57,120) (57,120) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (183,212,241) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (57,120) (57,120) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (62,65) 263 159 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (57,120) (57,120) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 298 248 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 194 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (62,65) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (62,65) (62,65) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 108 176 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 108 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 108 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 108 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 108 3 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (57,120) (57,120) 249 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (62,65) 263 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (57,120) (57,120) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (57,120) (57,120) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (57,120) (57,120) 249 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (57,120) (57,120) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 184 (94,130) (94,130) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
78 1 39 1 130 1 19 1 354 1 135 1 106 1 23 9 259 1 4 3 184 4 234 9 359 1 311 1 312 2 45 1 235 1 26 1 190 6 161 4 366 2 94 1 268 1 167 2 219 2 74 1 222 2 128 2 223 2 
78 1 39 1 130 1 19 1 354 1 135 1 106 1 23 9 259 1 4 3 184 4 234 9 359 1 311 1 312 2 45 1 235 1 26 1 190 6 161 4 366 2 94 1 268 1 167 2 219 2 74 1 222 2 128 2 223 2 
78 1 39 1 130 1 19 1 354 1 135 1 106 1 23 9 259 1 4 3 184 4 234 9 359 1 311 1 312 2 45 1 235 1 26 1 190 6 161 4 366 2 94 1 268 1 167 2 219 2 74 1 222 2 128 2 223 2 
78 1 39 1 130 1 19 1 354 1 135 1 106 1 23 7 4 2 184 3 234 7 359 1 311 1 312 2 45 1 235 1 26 1 190 4 161 3 366 2 94 1 268 1 167 1 219 2 74 1 222 2 128 2 223 2 
161 2 130 1 366 1 94 1 268 1 135 1 167 2 23 4 74 1 219 1 4 1 259 1 184 2 234 4 222 1 312 1 45 1 190 3 223 1 
78 1 130 1 366 1 94 1 268 1 106 1 23 2 234 2 222 1 312 1 45 1 205 1 347 1 191 1 223 1 128 1 
161 1 39 1 130 1 366 2 94 1 268 1 23 3 4 1 184 1 234 3 312 2 45 1 190 1 128 1 
39 1 130 1 19 1 354 1 135 1 23 9 4 3 259 1 184 4 234 9 312 2 45 1 190 7 161 4 366 2 94 1 268 1 167 2 74 1 219 1 222 1 76 1 128 1 250 1 223 1 
39 1 130 1 19 1 354 1 135 1 23 9 4 3 259 1 184 4 234 9 312 2 45 1 190 7 161 4 366 2 94 1 268 1 167 2 74 1 219 1 222 1 76 1 128 1 250 1 223 1 
231 1 75 1 127 1 
231 1 193 2 156 1 
129 1 257 2 
129 1 158 1 257 1 273 1 154 2 307 1 277 1 65 1 263 1 146 2 264 2 
129 1 120 1 257 1 
129 1 18 1 57 1 252 1 315 1 326 1 120 1 121 1 257 1 241 1 306 1 231 1 183 1 289 1 109 1 212 1 75 1 216 1 
183 1 257 1 
212 1 90 1 315 1 180 1 174 1 
231 1 212 2 315 2 75 1 180 1 346 1 32 1 174 1 
212 1 315 1 180 1 
129 1 57 1 212 1 315 1 120 1 257 1 174 1 
231 1 
231 1 212 2 315 2 75 1 180 1 261 1 32 1 174 1 
361 1 103 2 315 5 208 2 180 2 162 1 327 2 82 1 270 1 32 1 182 1 231 1 212 5 52 1 199 1 201 1 75 1 291 1 174 2 
127 1 
252 1 326 1 121 1 257 1 42 1 289 1 370 1 46 1 314 1 
324 1 142 1 252 1 177 1 326 2 179 1 364 1 295 1 351 1 256 1 210 1 121 2 317 1 73 1 273 1 154 1 110 1 9 1 146 1 264 1 
324 1 252 1 177 1 326 1 256 1 121 1 257 1 42 1 289 1 370 1 314 1 
289 1 252 2 178 1 326 2 177 2 256 2 121 2 243 1 
324 1 252 2 177 2 326 2 256 2 121 2 257 1 289 1 370 1 314 1 
289 1 252 1 178 1 326 1 177 1 256 1 121 1 
257 1 46 1 42 1 
129 1 324 1 315 1 252 1 159 1 177 1 326 1 256 1 121 1 317 1 257 2 306 1 42 1 183 1 154 1 273 1 212 1 109 1 289 1 65 1 247 1 263 1 216 1 146 1 264 1 
18 1 324 1 252 2 326 2 177 1 101 1 256 1 121 2 314 1 
324 2 315 1 252 2 177 2 326 2 256 2 121 2 257 1 317 1 306 1 42 1 231 1 183 1 212 1 109 1 289 1 247 1 321 1 216 1 
257 1 42 1 
154 1 273 1 146 1 264 1 
154 1 273 1 146 1 264 1 
69 1 316 1 275 1 58 1 254 1 163 1 242 1 281 2 
289 1 252 1 326 1 177 1 256 1 121 1 216 1 243 1 
282 1 294 1 
282 1 294 1 
276 1 296 1 
276 1 296 1 
276 1 296 1 
322 1 282 1 294 1 
322 1 282 1 294 1 
282 2 294 2 276 1 296 1 7 1 172 1 
282 1 294 1 186 1 
322 1 282 1 294 1 
282 1 253 1 294 1 
282 1 253 1 294 1 
282 1 253 1 294 1 
282 1 36 1 252 2 177 2 326 2 37 1 256 2 255 1 41 1 153 1 230 1 212 1 186 1 314 1 68 1 315 1 294 1 91 1 70 1 121 2 342 1 14 1 99 1 147 1 
282 2 36 2 315 2 294 2 70 3 365 1 255 2 41 2 287 1 165 1 230 1 231 1 212 2 300 2 260 1 345 1 172 1 280 1 147 2 
222 1 223 1 219 1 
222 1 205 1 223 1 
237 1 33 1 363 1 205 1 219 2 223 3 
237 1 33 1 168 1 205 1 219 1 223 2 
33 1 237 2 205 1 219 1 223 2 
226 1 103 1 79 1 208 1 151 1 180 1 327 1 105 1 82 3 153 1 182 1 232 2 231 2 212 5 138 1 43 1 139 1 44 2 215 1 156 1 361 2 315 5 217 1 193 3 267 1 32 1 342 1 99 1 221 2 369 1 75 1 174 4 
103 2 38 1 79 3 208 2 151 3 180 6 327 2 285 1 352 5 82 8 153 4 182 1 232 6 231 5 212 9 24 1 138 3 43 3 139 2 156 3 361 6 90 5 315 9 217 3 193 9 95 1 267 1 270 1 32 1 274 1 221 6 369 2 75 1 373 1 174 7 
226 1 103 1 208 1 79 1 151 1 327 1 82 3 153 1 231 3 232 2 212 3 138 1 43 1 139 1 44 1 215 1 156 2 361 2 315 3 217 1 193 4 270 1 221 2 369 1 75 1 174 2 
103 1 226 1 38 1 208 1 79 2 151 2 327 1 82 5 153 2 231 4 232 4 212 4 24 1 138 2 43 2 139 1 44 2 215 1 156 3 361 4 315 4 217 2 193 7 270 1 221 4 369 1 75 1 373 1 174 3 
364 1 371 1 127 1 
34 1 364 1 
262 1 
179 1 364 1 295 1 
364 1 60 1 
364 1 295 1 
325 1 179 1 364 3 295 1 131 1 262 1 371 2 
89 2 227 1 338 2 293 1 151 1 195 1 13 4 134 1 166 1 2 1 15 1 138 1 137 3 343 7 5 1 112 1 141 3 
89 2 227 1 338 2 293 1 151 1 195 1 13 4 134 1 166 1 2 1 15 1 138 1 137 3 343 7 5 1 112 1 141 3 
89 2 227 1 338 2 293 1 151 1 195 1 13 4 134 1 166 1 2 1 15 1 138 1 137 3 343 7 5 1 112 1 141 3 206 1 
225 1 227 1 79 3 58 1 151 4 254 1 328 1 40 1 134 2 2 2 137 10 138 4 5 5 43 3 112 2 141 15 292 1 236 3 69 1 89 5 293 1 338 3 217 3 92 1 195 1 13 16 163 1 166 2 297 1 15 1 343 31 245 1 281 2 17 4 
227 1 58 2 151 1 254 2 328 1 134 1 2 1 138 1 137 4 5 1 112 1 141 4 69 2 89 3 338 2 195 1 13 5 163 2 166 1 97 1 368 1 15 1 343 9 281 4 
130 1 81 1 304 1 210 1 21 1 23 2 154 1 332 1 234 2 333 1 312 1 45 1 87 1 190 1 264 1 337 1 142 1 363 1 366 1 94 1 268 1 341 1 219 1 169 1 222 1 301 1 205 1 146 1 128 1 223 2 
130 1 81 1 304 1 210 1 21 1 23 3 154 1 234 3 333 1 308 1 312 1 87 1 264 1 190 2 142 1 363 1 218 1 366 1 94 1 268 1 341 1 219 1 169 1 222 1 301 1 205 1 146 1 77 1 128 1 223 2 
130 1 304 1 210 1 21 1 23 2 154 1 234 2 308 1 87 1 264 1 190 2 142 1 218 1 363 1 94 1 268 1 341 1 219 1 169 1 222 1 301 1 205 1 146 1 128 1 223 2 
239 1 142 1 339 1 364 1 295 1 366 1 210 1 21 2 341 2 23 1 273 1 154 1 299 1 234 1 83 1 301 2 312 1 114 1 146 1 77 1 102 1 264 1 128 2 
81 1 304 1 210 1 21 1 23 1 154 1 332 1 234 1 333 1 308 1 312 1 45 1 87 1 264 1 142 1 363 1 366 1 341 1 219 1 169 1 222 1 301 1 205 1 146 1 128 1 223 2 
303 1 
326 1 80 2 180 6 327 1 82 2 136 1 181 2 182 1 183 1 231 4 289 1 8 2 12 1 239 1 142 1 192 1 193 2 93 1 295 1 49 1 241 1 197 2 299 1 203 1 146 2 18 1 103 1 252 1 208 1 104 2 152 1 210 1 306 1 63 1 212 5 154 2 109 1 357 1 25 2 216 1 313 4 360 1 156 2 117 2 264 2 361 2 315 5 364 1 71 1 121 1 32 3 273 2 369 1 75 3 173 1 
18 1 252 1 326 1 180 2 136 1 306 1 183 1 231 2 212 3 289 1 109 1 261 1 357 1 8 1 216 1 313 2 315 3 49 1 121 1 241 1 32 1 75 2 203 1 173 1 
18 1 315 2 252 1 326 1 49 1 121 1 136 1 241 1 197 1 306 1 231 2 183 1 109 1 289 1 212 2 75 2 357 1 203 1 216 1 313 3 173 1 
18 1 252 1 326 1 80 1 180 2 136 1 306 1 183 1 231 3 212 3 289 1 109 1 261 1 357 1 8 1 216 1 313 3 315 3 49 1 121 1 241 1 32 1 197 1 75 3 203 1 173 1 
129 1 326 1 80 4 180 7 327 1 136 1 82 1 182 1 181 2 231 4 183 1 289 1 8 4 47 1 192 1 93 1 49 1 241 1 197 3 200 1 203 1 18 1 57 1 103 1 252 1 208 1 59 1 61 1 104 2 257 1 306 1 109 1 212 5 111 1 261 1 357 1 25 2 216 1 313 5 117 2 156 2 361 1 315 5 120 1 121 1 32 3 75 4 173 1 
18 1 103 1 252 1 326 1 208 1 80 2 180 4 327 1 104 2 82 1 136 1 306 1 181 2 182 1 183 1 231 4 212 4 289 1 109 1 357 1 8 2 25 2 216 1 313 4 360 1 156 2 117 2 361 1 192 1 315 4 193 2 93 1 49 1 121 1 241 1 197 2 32 2 75 3 203 1 173 1 
18 1 103 1 252 1 326 1 208 1 80 2 180 4 59 1 327 1 104 2 82 1 136 1 306 1 181 2 182 1 183 1 231 3 212 4 289 1 109 1 111 1 357 1 8 2 25 2 216 1 313 4 156 2 117 2 47 1 361 1 192 1 315 4 93 1 49 1 121 1 241 1 197 2 32 2 75 3 203 1 173 1 
18 1 103 1 252 1 326 1 208 1 80 2 180 4 59 1 327 1 104 2 82 1 136 1 306 1 181 2 182 1 183 1 231 3 212 4 289 1 109 1 111 1 357 1 8 2 25 2 216 1 313 4 156 2 117 2 47 1 361 1 192 1 315 4 93 1 49 1 121 1 241 1 197 2 32 2 75 3 203 1 173 1 
18 1 103 1 252 1 326 1 208 1 80 2 180 4 327 1 104 2 82 1 136 1 306 1 182 1 183 1 231 3 212 4 289 1 109 1 290 1 140 2 357 1 8 2 25 2 216 1 313 4 88 2 47 1 361 1 315 4 193 2 93 1 49 1 121 1 241 1 197 2 32 2 220 1 75 3 124 1 203 1 173 1 
18 1 103 1 252 1 326 1 208 1 80 3 59 1 180 5 327 1 61 1 104 2 82 1 136 1 306 1 181 2 182 1 183 1 231 3 212 4 289 1 109 1 111 1 357 1 8 3 25 2 216 1 313 5 156 2 117 2 47 1 361 1 192 1 315 4 93 1 49 1 121 1 241 1 32 2 197 3 75 3 203 1 173 1 
18 1 103 1 252 1 326 1 208 1 80 3 59 1 180 5 327 1 61 1 104 2 82 1 136 1 306 1 181 2 182 1 183 1 231 3 212 4 289 1 109 1 111 1 357 1 8 3 25 2 216 1 313 5 156 2 117 2 47 1 361 1 192 1 315 4 93 1 49 1 121 1 241 1 32 2 197 3 75 3 203 1 173 1 
18 1 103 1 252 1 326 1 208 1 80 2 180 4 327 1 104 2 82 1 136 1 306 1 182 1 183 1 231 3 212 4 289 1 109 1 140 2 357 1 8 2 25 2 216 1 313 4 360 1 88 2 361 1 315 4 193 2 93 1 49 1 121 1 241 1 197 2 32 2 75 3 124 1 203 1 173 1 
69 1 89 1 338 1 227 1 316 1 58 1 151 1 254 1 195 1 13 2 163 1 242 1 2 1 15 1 343 2 137 1 275 1 112 1 281 2 127 1 
69 1 316 1 58 1 254 1 13 1 163 1 367 1 298 1 343 2 275 1 141 1 248 1 236 1 281 2 17 1 
324 1 252 1 148 1 326 2 177 1 179 1 58 1 254 1 284 1 351 1 256 1 210 1 233 1 154 1 110 1 141 1 86 1 310 1 264 1 314 1 69 1 142 1 362 1 316 1 364 1 295 1 121 2 13 1 317 1 163 1 73 1 367 1 273 1 343 2 275 1 126 1 146 1 281 2 
324 1 227 1 177 1 326 3 179 2 79 2 284 1 330 1 2 1 138 3 137 8 5 4 43 2 141 10 9 7 89 4 142 2 338 1 195 1 295 2 13 10 15 1 343 20 348 1 146 3 252 1 148 7 58 3 254 3 151 3 350 2 62 2 256 1 351 2 210 2 154 3 110 2 213 2 112 1 308 1 65 2 310 1 264 3 314 2 69 3 118 2 217 2 316 3 364 2 121 3 163 3 317 1 73 2 122 1 367 1 273 1 275 3 372 7 281 6 
69 1 316 1 58 1 194 1 254 1 284 1 13 1 163 1 273 1 154 1 343 1 275 1 66 1 146 1 281 2 264 1 
323 1 79 1 58 1 254 1 151 1 257 1 42 1 138 1 43 1 141 1 69 1 217 1 316 1 13 1 163 1 367 1 343 2 275 1 281 2 
69 1 143 1 217 1 316 1 58 1 254 1 151 1 13 1 163 1 242 1 343 1 275 1 281 2 
69 1 316 1 58 1 240 1 254 1 163 1 242 1 343 1 138 1 43 1 275 1 141 1 281 2 
69 1 217 1 316 1 79 1 58 1 254 1 151 1 13 1 163 1 242 1 138 1 343 2 43 1 275 1 141 1 281 2 
69 1 143 1 217 1 316 1 58 1 254 1 151 1 13 1 163 1 343 1 275 1 66 1 281 2 
69 1 316 1 58 1 240 1 254 1 163 1 343 1 138 1 43 1 275 1 141 1 66 1 281 2 
69 1 217 1 316 1 79 1 58 1 254 1 151 1 13 1 163 1 138 1 343 2 43 1 275 1 141 1 66 1 281 2 
69 1 217 1 316 1 79 1 58 1 254 1 151 1 13 1 163 1 138 1 343 2 43 1 275 1 141 1 281 2 
154 1 273 1 65 1 146 1 264 1 
331 1 154 1 273 1 146 1 264 1 
69 1 217 1 316 1 79 1 58 1 254 1 151 1 13 1 163 1 367 1 138 1 343 2 43 1 275 1 141 1 281 2 
154 1 337 1 65 1 62 1 146 1 264 1 
69 1 217 1 316 1 79 1 149 1 58 1 151 1 254 1 13 1 163 1 257 1 367 1 42 1 138 1 343 2 43 1 275 1 141 1 281 2 
79 1 58 2 254 2 151 1 108 1 137 2 138 1 5 1 43 1 113 1 141 5 236 1 157 1 69 2 89 1 217 1 92 1 13 4 163 2 96 1 97 1 198 1 343 9 144 1 245 1 349 1 281 4 176 1 17 2 
79 2 58 3 254 3 151 2 328 2 288 1 108 1 3 1 137 2 138 1 5 1 43 1 113 3 141 9 236 2 157 1 69 3 89 1 217 2 92 2 13 11 163 3 97 1 198 1 272 1 343 20 144 2 319 1 320 1 204 1 302 1 349 2 281 6 17 2 
79 1 58 2 254 2 151 1 108 1 3 1 137 2 138 1 5 1 43 1 113 1 141 5 236 1 157 1 69 2 89 1 217 1 92 1 13 4 163 2 96 1 97 1 198 1 343 9 144 1 245 1 349 1 281 4 17 2 
79 1 58 2 254 2 151 1 108 1 3 1 137 2 138 1 5 1 43 1 113 1 141 5 236 1 157 1 69 2 89 1 217 1 92 1 13 4 163 2 96 1 97 1 198 1 343 9 144 1 245 1 349 1 281 4 17 2 
227 1 79 6 58 2 254 2 151 7 328 1 288 1 2 1 108 1 3 1 137 12 138 7 5 6 43 6 112 1 113 3 141 22 236 4 157 1 69 2 89 6 338 1 217 6 92 2 195 1 13 24 163 2 97 1 198 1 15 1 272 1 343 46 16 2 144 1 245 2 319 1 320 1 204 1 302 1 349 1 281 4 17 4 
282 1 36 1 294 1 260 1 255 1 115 1 41 1 172 1 280 1 147 1 
37 1 186 1 
282 1 36 1 214 1 294 1 100 1 255 1 41 1 20 1 147 1 
322 1 72 1 
253 1 7 1 10 1 
282 1 315 1 36 1 294 1 70 2 255 1 41 1 287 1 165 1 230 1 231 1 212 1 300 1 260 1 345 1 172 1 280 1 147 1 
282 1 315 1 36 1 294 1 70 2 255 1 41 1 287 1 165 1 230 1 231 1 212 1 300 1 260 1 345 1 172 1 280 1 147 1 
282 1 315 1 36 1 294 1 70 2 255 1 41 1 287 1 165 1 230 1 231 1 212 1 300 1 260 1 345 1 172 1 280 1 147 1 
322 1 7 1 72 1 
322 1 7 1 72 1 
253 1 10 1 
253 1 7 1 10 1 
91 1 14 1 
282 1 36 1 252 2 326 2 37 1 177 2 255 1 256 2 287 1 41 1 258 1 153 1 212 1 186 1 314 1 68 1 315 1 294 1 91 1 70 1 121 2 342 1 14 1 99 1 300 1 174 1 147 1 
252 2 326 2 58 1 254 1 284 1 0 1 210 1 154 2 6 1 141 1 310 1 264 2 238 1 69 1 142 1 158 2 316 1 364 1 194 1 295 1 196 1 121 2 13 1 163 1 51 1 367 1 244 1 343 2 275 1 146 2 281 2 
337 1 142 1 363 1 210 1 304 1 286 1 21 1 219 1 154 2 169 1 333 1 222 1 334 1 202 1 308 1 205 1 146 2 264 2 223 2 
142 1 363 1 304 1 210 1 21 1 219 1 154 1 169 1 333 1 222 1 123 1 334 1 308 1 205 1 146 1 264 1 223 2 
239 1 142 1 364 1 295 1 210 1 286 1 21 1 273 1 154 1 299 1 146 1 279 1 264 1 102 1 
142 1 363 1 210 1 304 1 286 1 21 1 219 1 154 1 169 1 333 1 222 1 334 1 202 1 308 1 205 1 146 1 264 1 223 2 
266 1 
231 1 361 1 75 1 291 1 162 1 82 1 127 1 
103 1 208 1 180 1 327 1 82 1 182 1 181 1 231 2 212 1 156 1 117 1 361 1 192 1 315 1 193 1 32 1 75 1 
34 2 325 1 179 1 79 1 180 2 327 2 329 1 82 4 182 2 232 3 231 3 138 1 43 1 85 1 189 1 142 1 193 6 295 1 344 1 146 1 103 2 208 2 151 1 210 2 353 1 154 1 109 1 212 2 356 1 155 1 264 1 156 3 118 1 361 3 315 2 217 1 364 4 32 1 273 1 221 3 369 1 171 1 371 1 
103 2 208 2 79 2 180 1 151 2 327 2 152 1 211 1 329 2 82 8 288 1 182 2 232 5 231 5 212 1 138 2 43 2 67 1 156 3 236 1 361 5 315 1 217 2 193 6 92 1 32 1 272 1 221 5 369 1 75 2 170 1 319 1 320 1 302 1 17 1 
129 1 57 1 361 1 103 1 315 1 227 1 208 1 120 1 151 1 327 1 257 1 329 2 82 2 182 1 2 1 212 1 138 1 111 1 112 1 249 1 
103 1 361 1 208 1 162 1 327 1 82 1 182 1 231 1 75 1 291 1 
118 1 361 5 217 2 79 2 193 10 151 2 329 2 82 5 232 5 231 5 221 5 138 2 43 2 67 1 156 5 
231 1 212 1 315 1 75 1 180 1 32 1 
103 2 208 2 180 4 327 2 210 1 152 2 82 2 182 1 154 4 212 3 264 4 12 1 361 2 239 1 142 1 315 3 29 2 364 1 295 1 71 1 340 1 164 1 270 1 32 2 273 2 299 1 369 2 318 1 146 4 
129 1 154 1 273 1 65 1 263 1 257 1 146 1 264 1 
361 2 103 1 338 1 193 4 208 1 327 1 152 1 82 1 182 1 232 2 231 4 221 2 369 1 75 2 156 2 
187 1 41 1 147 1 
187 1 41 1 147 1 
145 1 41 1 280 1 14 1 147 1 
187 1 41 1 147 1 
41 1 188 1 147 1 
41 1 188 1 147 1 
41 1 188 1 147 1 
41 1 147 1 
282 1 294 1 
69 2 89 2 338 1 227 1 58 2 151 1 254 2 328 1 195 1 13 4 163 2 2 1 15 1 138 1 343 8 137 3 5 1 112 1 141 4 281 4 
89 2 338 1 227 1 151 1 195 1 13 3 2 1 15 1 137 2 343 6 138 1 112 1 141 3 127 1 
69 1 89 1 217 1 79 1 58 1 254 1 151 1 13 2 163 1 138 1 137 2 343 4 43 1 5 1 141 2 358 1 281 2 
89 1 217 1 79 1 92 1 151 1 13 3 138 1 343 7 137 2 43 1 5 1 245 1 141 4 236 1 17 2 
227 1 79 2 58 2 151 3 254 2 328 2 228 1 2 2 137 9 138 3 5 4 43 2 112 2 141 12 236 2 69 2 89 5 338 1 217 2 195 1 13 11 163 2 298 1 15 1 343 23 245 1 16 1 281 4 17 2 
343 1 141 1 17 1 
343 1 13 1 236 1 
69 1 118 1 89 2 217 1 79 1 58 1 254 1 151 1 13 3 163 1 343 6 137 3 138 1 5 1 43 1 358 1 141 3 281 2 
79 2 58 1 254 1 151 2 288 1 138 2 137 2 5 1 43 2 141 6 236 1 69 1 89 1 217 2 92 1 13 6 163 1 97 1 272 1 343 12 319 1 320 1 302 1 281 2 17 1 
89 1 227 1 151 1 13 3 2 1 343 6 138 1 137 2 5 1 112 1 141 3 
69 1 89 1 58 1 254 1 195 1 228 1 328 1 13 1 163 1 2 1 15 1 137 2 343 3 5 1 112 1 141 2 281 2 
69 1 89 3 227 1 58 1 254 1 151 2 13 5 163 1 97 1 2 2 137 5 343 10 138 2 5 2 112 2 141 5 249 1 281 2 
69 1 217 1 58 1 254 1 151 1 13 2 163 1 97 1 343 2 137 1 5 1 281 2 
69 1 89 1 217 1 79 1 58 1 254 1 151 1 13 2 163 1 97 1 138 1 137 2 343 4 43 1 5 1 141 2 281 2 
69 3 89 1 58 3 254 3 328 1 228 1 13 1 163 3 96 1 97 1 2 1 343 3 137 2 5 1 112 1 141 2 281 6 
225 1 227 2 79 3 58 5 254 5 151 5 228 1 328 2 2 3 137 12 138 5 5 5 43 3 112 3 141 18 358 1 292 1 236 3 69 5 89 7 338 1 217 3 92 1 195 1 13 16 163 5 96 1 97 1 297 1 15 1 343 34 245 1 281 10 17 4 
227 1 58 1 151 1 254 1 288 1 2 1 138 1 137 2 112 1 141 4 236 1 69 1 89 2 338 1 92 1 195 1 13 4 163 1 97 1 15 1 343 8 281 2 17 1 
227 1 79 1 58 2 254 2 151 2 288 1 2 1 138 1 137 3 5 1 112 1 141 5 358 1 236 1 69 2 89 2 338 1 217 1 92 1 195 1 13 6 163 2 97 1 15 1 343 11 245 1 281 4 17 2 
227 1 79 2 58 3 254 3 151 3 328 1 288 1 2 1 138 3 137 4 5 1 43 2 112 1 358 1 141 10 236 1 69 3 89 3 338 1 217 2 92 1 195 1 13 9 163 3 97 1 15 1 272 1 343 19 319 1 320 1 302 1 281 6 17 1 
227 1 79 2 58 3 254 3 151 3 328 1 288 1 2 1 138 2 137 5 5 2 43 1 112 1 358 1 141 7 236 1 69 3 89 3 338 1 217 2 92 1 195 1 13 10 163 3 97 1 15 1 272 1 343 17 319 1 320 1 302 1 281 6 17 1 
227 1 58 1 151 1 254 1 288 1 2 1 138 1 137 2 112 1 141 4 236 1 69 1 89 2 338 1 92 1 195 1 13 4 163 1 97 1 15 1 343 8 281 2 17 1 
79 2 58 1 254 1 151 2 288 1 138 2 137 2 5 1 43 2 141 6 236 1 69 1 89 1 217 2 92 1 13 6 163 1 97 1 272 1 343 12 319 1 320 1 302 1 281 2 17 1 
227 1 79 2 58 4 254 4 151 3 328 2 288 1 2 1 138 2 137 5 5 2 43 1 112 1 141 8 358 1 236 1 69 4 89 3 338 1 217 2 92 1 195 1 13 10 163 4 97 1 15 1 272 1 343 18 319 1 320 1 302 1 281 8 17 1 
79 3 58 4 254 4 151 3 328 2 288 1 138 2 137 6 5 3 43 2 141 7 236 1 69 4 89 3 217 3 92 1 13 9 163 4 96 1 97 1 272 1 343 16 319 1 320 1 302 1 281 8 17 1 
89 3 227 1 151 1 195 2 13 3 2 3 15 1 138 1 343 7 137 6 5 3 112 3 141 4 
227 1 79 2 58 4 254 4 151 3 328 2 288 1 2 1 138 2 137 4 5 1 43 1 112 1 141 8 236 1 69 4 89 3 338 1 217 2 92 1 195 1 13 10 163 4 96 1 97 1 15 1 272 1 343 18 319 1 320 1 302 1 281 8 17 1 
18 1 252 1 326 1 278 1 101 1 121 1 314 1 
18 1 35 1 252 1 326 1 121 1 84 1 335 1 278 1 309 1 101 1 185 1 314 1 
239 1 154 1 273 1 142 1 299 1 364 1 295 1 210 1 146 1 127 1 264 1 
324 1 252 1 142 1 177 1 326 2 179 1 364 1 295 1 256 1 351 1 210 1 121 2 73 1 273 1 154 1 146 1 264 1 314 1 
324 1 252 2 142 1 177 2 326 2 179 2 364 3 29 1 60 1 295 2 256 1 351 1 210 1 121 2 269 1 306 1 73 1 289 1 154 1 216 1 146 1 264 1 314 1 
324 1 252 2 142 1 177 2 326 2 179 2 364 3 29 1 60 1 295 2 256 1 210 1 121 2 269 1 306 1 73 1 1 1 289 1 154 2 216 1 146 2 56 1 264 2 314 1 
129 1 34 1 57 1 179 1 180 1 60 1 132 1 210 1 257 1 231 1 154 1 212 2 109 1 264 1 142 1 315 2 120 1 364 4 29 1 295 1 269 1 75 1 371 1 146 1 175 1 
129 1 34 1 57 1 179 1 180 1 60 1 210 1 257 1 231 1 154 1 212 2 109 1 85 1 264 1 142 1 315 2 120 1 364 4 29 1 295 1 269 1 75 1 371 1 146 1 
154 1 142 1 160 1 210 1 146 1 264 1 
337 1 207 1 158 1 142 2 160 1 325 1 179 1 150 1 364 3 295 2 210 3 229 1 51 1 273 2 154 7 246 1 308 1 116 1 146 7 265 1 264 6 
324 1 177 1 326 2 227 1 179 1 2 1 137 2 138 1 141 3 9 1 238 1 337 1 142 1 89 2 338 1 295 1 195 1 13 3 15 1 343 6 146 1 252 1 148 1 58 2 254 2 151 1 350 1 62 1 351 1 256 1 210 1 154 1 110 1 112 1 65 1 264 1 314 2 69 2 316 2 364 1 121 2 163 2 73 1 367 1 275 2 372 1 281 4 
129 1 34 1 57 1 103 2 227 1 208 2 151 1 180 2 327 2 257 1 329 2 82 4 2 1 182 2 231 2 212 3 154 1 109 1 138 2 112 1 85 1 291 1 155 1 264 1 361 3 315 3 120 1 364 2 162 1 32 1 273 1 344 1 75 2 318 1 171 1 371 1 146 1 249 1 174 1 
337 1 142 1 160 1 325 1 179 1 364 2 295 1 353 1 210 2 154 2 371 1 146 2 264 2 
337 1 239 1 142 1 364 1 295 1 210 1 355 1 273 1 154 4 299 1 146 4 56 1 264 4 
207 1 142 1 179 1 29 1 150 1 364 1 295 1 210 2 305 1 154 2 348 1 146 2 11 1 264 2 
154 1 273 1 142 1 222 1 210 1 304 1 205 1 146 1 264 1 223 1 
337 1 142 1 364 1 295 1 210 1 51 1 154 2 244 1 308 1 146 2 264 2 
239 1 337 1 142 2 29 1 364 3 295 2 210 2 229 1 51 1 355 1 273 1 154 5 299 1 146 5 264 4 265 1 
239 1 337 1 142 2 29 1 364 3 295 2 31 1 210 2 51 1 355 1 273 1 154 5 299 1 146 5 264 4 265 1 
324 1 252 1 142 1 177 1 326 2 179 1 364 1 295 1 256 1 210 1 121 2 73 1 1 1 273 1 154 1 146 1 264 1 314 1 
207 1 142 1 325 1 179 1 150 1 29 1 364 1 295 1 210 2 154 1 246 1 146 1 264 1 
53 1 48 1 50 1 314 1 22 1 
129 1 224 1 57 1 257 1 306 1 22 1 183 1 231 1 212 2 289 1 109 1 64 1 216 1 315 2 48 1 120 1 50 1 53 1 54 1 75 1 247 1 174 1 
252 1 326 1 0 1 196 1 121 1 50 1 22 1 53 1 6 1 
64 1 53 1 54 1 
130 1 94 1 127 1 
234 1 130 1 366 1 94 1 312 1 268 1 23 1 
234 1 341 1 128 1 
251 1 209 1 130 1 366 1 94 1 268 1 106 1 23 2 234 2 312 1 45 1 
130 1 366 1 94 1 268 1 167 1 23 2 234 2 312 1 190 1 
161 1 366 1 135 1 23 1 219 1 184 1 234 1 222 1 312 1 45 1 223 1 
234 1 130 1 366 1 312 1 45 1 23 1 
184 1 234 1 130 1 366 1 94 1 312 1 45 1 23 1 
283 1 130 1 30 1 366 2 23 2 234 2 55 1 312 2 45 1 
161 1 130 1 366 1 94 1 268 1 19 1 354 1 23 3 4 1 184 1 234 3 312 1 45 1 190 2 
363 1 119 1 130 1 366 1 94 1 268 1 23 2 219 1 234 2 222 1 312 1 205 1 45 1 190 1 223 2 
161 1 130 1 366 1 94 1 268 1 167 1 23 3 259 1 4 1 184 1 234 3 312 1 45 1 190 2 
234 1 130 1 366 1 94 1 312 1 268 1 45 1 23 1 
161 1 130 1 366 1 94 1 268 2 23 3 4 1 184 1 234 3 312 1 190 2 
130 1 366 1 94 1 268 1 98 1 23 2 107 1 234 2 312 1 45 1 190 1 250 1 
209 1 130 1 366 1 133 1 94 1 268 1 106 1 23 2 234 2 312 1 45 1 
184 2 271 1 125 1 336 2 
234 1 366 1 312 1 45 1 27 1 23 1 
130 1 366 1 94 1 268 1 354 1 23 2 234 2 312 1 45 1 190 1 
28 1 
234 1 130 1 366 1 94 1 312 1 268 1 45 1 23 1 
130 1 366 1 94 1 268 1 106 1 23 2 234 2 312 1 45 1 
4 1 184 1 161 1 268 1 
130 1 

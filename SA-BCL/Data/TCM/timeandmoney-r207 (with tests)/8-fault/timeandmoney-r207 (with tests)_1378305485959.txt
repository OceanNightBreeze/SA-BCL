#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (137,364) (137,364) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (137,364) (137,364) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (137,364) (137,364) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (137,364) (137,364) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 1 358 1 170 1 239 1 137 1 354 1 364 1 190 1 75 1 74 1 219 1 
335 1 358 1 170 1 239 1 137 1 354 1 364 1 190 1 75 1 74 1 219 1 
335 1 358 1 170 1 239 1 137 1 354 1 364 1 190 1 75 1 74 1 219 1 
335 1 358 1 170 1 239 1 137 1 354 1 364 1 190 1 75 1 74 1 219 1 
335 1 90 1 222 2 156 1 185 3 117 3 354 4 84 1 276 1 21 1 239 1 73 1 299 1 55 1 190 4 24 2 74 1 303 1 
335 1 170 1 156 1 59 1 117 1 354 2 158 1 275 1 276 1 239 1 73 1 278 1 55 1 190 2 74 1 219 1 
335 2 222 1 156 1 224 1 185 1 117 2 354 3 239 1 73 1 299 1 190 3 74 2 219 1 
222 4 90 1 156 1 224 1 185 7 117 5 354 9 276 1 73 1 299 3 55 1 190 9 74 2 303 1 335 2 113 1 263 1 84 1 21 1 239 1 22 1 348 1 24 2 219 1 
222 4 90 1 156 1 224 1 185 7 117 5 354 9 276 1 73 1 299 3 55 1 190 9 74 2 303 1 335 2 113 1 263 1 84 1 21 1 239 1 22 1 348 1 24 2 219 1 
200 1 8 1 350 1 
8 1 50 2 77 1 
344 1 28 2 279 2 2 1 15 2 146 2 367 2 352 2 
155 1 248 2 28 2 250 1 2 1 67 2 251 1 227 1 355 1 188 2 34 1 256 1 103 1 279 3 301 1 121 1 104 1 332 1 146 2 281 1 38 1 108 1 41 1 259 1 15 2 260 1 16 1 366 1 17 1 367 3 344 1 316 2 20 1 373 2 318 1 218 1 352 2 
342 1 28 1 279 1 2 1 15 1 199 1 146 1 87 1 367 1 352 1 
12 1 116 1 209 1 128 1 15 1 367 1 8 1 279 1 317 1 37 1 375 1 56 1 350 1 87 1 
12 1 116 1 209 2 28 1 15 1 367 1 8 1 279 1 37 2 146 1 375 1 56 1 350 1 352 1 87 1 
142 1 209 1 216 1 37 1 365 1 
142 1 309 1 209 2 8 1 37 2 203 1 365 1 350 1 
209 1 37 1 365 1 
48 1 209 1 28 1 2 1 15 1 367 1 342 1 142 1 279 1 37 1 199 1 146 1 87 1 352 1 
8 1 
142 1 309 1 209 2 8 1 240 1 37 2 365 1 350 1 
306 1 109 1 223 1 309 1 209 5 184 1 136 1 135 1 325 2 130 1 365 2 82 2 228 1 142 2 277 1 8 1 64 2 37 5 350 1 
344 1 200 1 
28 1 15 2 367 2 178 1 344 2 345 1 279 2 146 1 352 1 
35 1 194 1 119 1 
248 1 67 1 251 1 79 1 260 1 16 1 366 1 367 1 344 1 188 1 256 1 279 1 218 1 332 1 38 1 108 1 
248 1 295 1 251 1 67 1 15 1 260 1 16 1 366 1 367 2 45 1 188 1 256 1 35 1 279 2 332 1 218 1 146 1 38 1 352 1 108 1 
28 1 295 1 15 5 367 5 45 2 178 1 344 1 163 1 279 5 317 1 320 1 146 4 378 1 352 4 
342 1 279 2 15 2 319 1 146 2 87 1 367 2 352 2 
45 1 344 1 28 1 279 3 15 3 146 3 367 3 352 3 
342 1 279 1 15 1 146 1 87 1 367 1 352 1 
178 1 345 1 28 1 279 1 15 1 146 1 87 1 367 1 352 1 
155 1 116 1 248 1 28 2 250 1 2 1 295 1 251 1 67 1 227 1 69 1 188 1 256 1 103 1 279 4 144 1 301 1 37 1 104 1 332 1 146 3 56 1 281 1 38 1 108 1 12 1 209 1 259 1 15 3 260 1 16 1 366 1 367 4 45 1 344 1 316 2 20 1 178 1 373 1 318 1 218 1 375 1 352 3 87 1 
45 1 344 1 163 1 279 2 317 1 15 2 146 1 367 2 352 1 
12 1 116 1 209 1 28 1 295 1 15 3 367 3 177 1 69 1 45 2 178 1 8 1 279 3 37 1 146 3 375 1 56 1 87 1 352 3 
45 1 178 1 35 1 28 1 279 2 15 2 146 2 367 2 352 2 119 1 
248 1 67 1 251 1 260 1 16 1 366 1 367 1 344 1 188 1 256 1 279 1 218 1 332 1 38 1 108 1 
248 1 67 1 251 1 60 1 16 1 366 1 367 1 344 1 188 1 256 1 279 1 189 1 218 1 332 1 108 1 
155 1 294 1 250 1 227 2 355 2 119 2 35 2 103 1 120 1 145 1 150 1 236 1 259 1 237 1 283 1 194 2 314 1 175 1 316 2 20 1 373 4 318 1 377 1 376 1 
279 1 15 1 319 1 56 1 146 1 87 1 367 1 352 1 
44 1 245 1 
44 1 245 1 
85 1 261 1 
85 1 261 1 
85 1 261 1 
44 1 272 1 245 1 
44 1 112 1 245 1 
160 1 44 2 85 1 261 1 245 2 106 1 
44 1 272 1 245 1 
44 1 272 1 245 1 
44 1 273 1 245 1 
44 1 273 1 245 1 
44 1 273 1 245 1 
323 1 141 1 72 1 143 1 279 2 37 1 146 2 125 1 208 1 362 1 209 1 339 1 15 2 174 1 112 1 367 2 195 1 44 1 18 1 344 1 46 1 198 1 245 1 352 2 
334 1 293 2 125 1 361 1 362 2 209 2 323 2 339 3 30 1 111 1 195 2 160 1 44 2 99 1 18 2 8 1 37 2 245 2 166 1 
276 1 55 1 303 1 
276 1 55 1 158 1 
282 1 139 1 55 3 94 1 303 2 158 1 
307 1 139 1 55 2 94 1 303 1 158 1 
139 2 55 2 94 1 303 1 158 1 
322 1 136 2 252 1 325 1 50 3 142 4 72 1 298 2 8 2 37 5 145 1 10 2 304 1 333 1 77 1 306 3 208 1 309 1 209 5 130 1 365 1 314 1 175 1 82 1 371 1 46 1 64 1 377 1 268 1 350 1 291 2 183 1 
27 1 322 2 136 6 325 2 50 9 356 1 274 1 142 7 72 4 8 5 36 1 37 9 145 3 10 6 304 3 77 3 109 1 306 8 209 9 309 1 365 6 130 1 314 3 175 3 82 2 368 1 315 1 371 1 216 5 64 2 377 3 268 2 349 5 350 1 291 6 
322 1 136 2 325 1 50 4 142 2 72 1 298 1 8 3 37 3 145 1 10 2 304 1 333 1 77 2 109 1 306 3 209 3 314 1 175 1 82 1 64 1 268 1 377 1 350 1 183 1 291 2 
322 1 136 4 325 1 50 7 356 1 142 3 72 2 298 2 8 4 37 4 145 2 10 4 304 2 333 1 77 3 109 1 306 5 209 4 314 2 175 2 82 1 368 1 315 1 64 1 268 1 377 2 350 1 291 4 183 1 
200 1 140 1 108 1 
285 1 108 1 
89 1 
332 1 366 1 108 1 
328 1 108 1 
332 1 108 1 
290 1 140 2 118 1 332 1 366 1 108 3 
237 2 253 1 297 1 227 3 314 1 159 1 355 4 52 1 255 1 98 1 33 1 370 2 120 3 206 1 373 7 377 1 164 1 
237 2 253 1 297 1 227 3 314 1 159 1 355 4 52 1 255 1 98 1 33 1 370 2 120 3 206 1 373 7 377 1 164 1 
237 2 253 1 297 1 227 3 314 1 159 1 355 4 255 1 52 1 71 1 98 1 33 1 370 2 120 3 206 1 373 7 377 1 164 1 
297 1 253 5 227 15 355 16 159 2 255 1 52 1 97 1 98 2 33 1 7 1 103 1 359 1 120 10 206 2 145 3 164 2 304 3 237 5 259 1 314 4 175 3 213 1 316 2 20 1 370 3 114 1 373 31 318 1 266 3 265 1 377 4 182 4 379 1 
253 1 227 4 355 5 159 1 329 1 52 1 255 1 98 1 33 1 103 1 120 3 206 1 164 1 259 1 237 2 314 2 19 1 316 2 20 1 370 1 373 9 318 1 377 2 133 1 
270 1 248 1 156 1 185 1 3 1 117 1 67 1 251 1 354 2 158 1 188 1 276 1 162 1 73 1 257 1 55 2 190 2 303 1 74 1 11 1 335 1 282 1 172 1 131 1 212 1 289 1 239 1 346 1 218 1 219 1 
248 1 156 1 185 2 3 1 117 1 67 1 251 1 354 3 225 1 158 1 357 1 188 1 276 1 162 1 73 1 257 1 55 2 190 3 303 1 74 1 11 1 335 1 149 1 282 1 131 1 212 1 289 1 346 1 218 1 219 1 
248 1 156 1 185 2 3 1 117 1 67 1 251 1 354 2 225 1 158 1 188 1 276 1 73 1 257 1 55 2 190 2 303 1 11 1 149 1 282 1 212 1 289 1 346 1 218 1 219 1 
134 1 248 1 92 1 3 2 67 1 324 1 251 1 354 1 68 1 357 1 188 1 257 2 190 1 74 1 332 1 11 2 108 1 335 1 127 1 363 1 16 1 218 1 219 2 
270 1 248 1 3 1 67 1 251 1 354 1 225 1 158 1 188 1 276 1 162 1 257 1 55 2 190 1 303 1 74 1 11 1 335 1 282 1 131 1 212 1 289 1 239 1 346 1 218 1 219 1 
343 1 
321 2 136 2 324 1 325 1 50 2 187 2 6 2 188 2 54 2 330 1 101 2 8 2 279 1 332 1 56 1 108 1 12 1 233 2 15 1 61 1 238 2 16 2 288 1 64 1 25 4 350 1 116 1 248 2 67 2 251 1 68 1 202 1 161 1 205 1 300 1 37 5 77 2 306 2 309 3 258 1 209 5 128 1 129 1 80 1 365 6 130 1 82 1 176 1 367 1 214 1 317 1 268 1 218 1 375 1 87 1 
116 1 161 1 205 1 279 1 37 3 56 1 12 1 209 3 309 1 15 1 128 1 61 1 238 1 365 2 367 1 176 1 214 1 240 1 317 1 375 1 25 2 87 1 
116 1 161 1 205 1 54 1 279 1 8 1 37 3 56 1 12 1 209 3 309 1 15 1 128 1 61 1 365 1 367 1 176 1 214 1 240 1 317 1 375 1 25 3 87 1 350 1 
116 1 161 1 6 1 205 1 54 1 279 1 8 1 37 3 56 1 12 1 309 1 209 3 15 1 128 1 61 1 238 1 365 2 367 1 176 1 214 1 240 1 317 1 375 1 25 3 87 1 350 1 
321 2 1 1 136 1 325 1 5 1 96 1 187 2 6 4 54 4 101 2 279 1 8 5 56 1 12 1 233 2 15 1 61 1 238 4 341 1 288 1 240 1 64 1 25 6 350 5 116 1 161 1 205 1 37 5 77 2 306 1 209 5 309 3 128 1 80 1 365 7 130 1 367 1 176 1 82 1 214 1 317 1 132 1 375 1 87 1 
321 2 136 1 325 1 50 2 187 2 6 2 54 2 101 2 330 1 279 1 8 2 56 1 12 1 233 2 15 1 61 1 238 2 288 1 64 1 25 4 350 1 116 1 161 1 205 1 37 4 77 2 306 1 209 4 309 2 128 1 80 1 130 1 365 4 367 1 82 1 176 1 214 1 317 1 375 1 87 1 
116 1 321 2 1 1 136 1 325 1 96 1 187 2 6 2 161 1 54 2 205 1 101 2 8 1 279 1 37 4 56 1 77 2 306 1 12 1 233 2 309 2 209 4 15 1 128 1 80 1 61 1 238 2 365 4 130 1 82 1 367 1 176 1 288 1 214 1 317 1 64 1 132 1 375 1 25 4 350 1 87 1 
116 1 321 2 1 1 136 1 325 1 96 1 187 2 6 2 161 1 54 2 205 1 101 2 8 1 279 1 37 4 56 1 77 2 306 1 12 1 233 2 309 2 209 4 15 1 128 1 80 1 61 1 238 2 365 4 130 1 82 1 367 1 176 1 288 1 214 1 317 1 64 1 132 1 375 1 25 4 350 1 87 1 
220 1 116 1 321 2 136 1 226 2 325 1 50 2 6 2 161 1 54 2 205 1 101 2 8 1 279 1 37 4 56 1 306 1 12 1 78 1 309 2 209 4 173 2 15 1 128 1 61 1 238 2 365 4 130 1 82 1 367 1 176 1 288 1 214 1 317 1 64 1 132 1 375 1 25 4 350 1 87 1 292 1 
116 1 321 2 1 1 136 1 325 1 5 1 96 1 187 2 161 1 6 3 205 1 54 3 101 2 8 1 279 1 37 4 56 1 77 2 306 1 12 1 233 2 309 2 209 4 15 1 128 1 80 1 61 1 238 3 130 1 365 5 82 1 367 1 176 1 288 1 214 1 317 1 64 1 132 1 375 1 25 5 350 1 87 1 
116 1 321 2 1 1 136 1 325 1 5 1 96 1 187 2 161 1 6 3 205 1 54 3 101 2 8 1 279 1 37 4 56 1 77 2 306 1 12 1 233 2 309 2 209 4 15 1 128 1 80 1 61 1 238 3 130 1 365 5 82 1 367 1 176 1 288 1 214 1 317 1 64 1 132 1 375 1 25 5 350 1 87 1 
220 1 321 2 136 1 325 1 226 2 50 2 6 2 54 2 101 2 330 1 279 1 8 1 56 1 12 1 15 1 61 1 238 2 288 1 64 1 25 4 350 1 116 1 161 1 205 1 37 4 306 1 209 4 309 2 128 1 173 2 130 1 365 4 367 1 82 1 176 1 214 1 317 1 375 1 87 1 
150 1 155 1 200 1 250 1 237 2 259 1 194 1 227 3 314 1 355 3 52 1 255 1 119 1 98 1 344 2 33 1 20 1 316 2 370 1 35 1 103 1 120 2 373 6 318 1 377 1 164 1 
155 1 271 1 250 2 253 1 227 6 355 8 119 4 35 11 7 1 103 2 120 2 145 2 304 2 281 1 165 1 310 1 41 1 237 1 259 2 62 1 194 11 314 1 175 1 344 1 316 4 20 2 215 1 373 14 318 2 266 3 377 2 379 1 182 3 
155 1 248 1 250 1 295 1 251 1 67 1 227 1 355 1 119 1 188 1 256 1 279 2 103 1 332 1 146 1 38 1 281 1 108 1 124 1 232 1 310 1 41 1 259 1 79 1 15 1 260 1 16 1 366 1 367 2 45 1 344 1 20 1 316 2 179 1 373 2 318 1 218 1 352 1 
221 1 227 7 52 1 98 1 188 1 103 3 279 3 145 1 104 2 146 1 332 2 281 1 108 2 237 3 15 1 16 1 194 4 344 2 20 3 197 1 352 1 247 2 155 3 248 1 250 3 295 1 67 1 251 2 355 7 255 1 119 4 33 1 256 2 35 4 120 3 164 1 304 1 38 2 168 1 310 1 41 1 259 3 260 2 81 1 366 2 314 2 367 3 175 1 45 1 316 6 370 1 217 2 373 14 318 3 218 2 377 2 
269 1 155 2 0 1 248 7 250 2 251 2 67 8 324 1 68 1 225 1 31 1 51 1 227 1 355 1 188 8 279 1 103 2 146 1 332 2 281 1 108 3 147 1 150 1 41 1 259 2 172 1 15 1 16 2 367 1 17 2 45 1 316 4 20 2 373 2 318 2 218 2 246 1 352 1 153 1 
155 1 28 1 250 1 227 2 355 1 119 1 35 1 103 1 279 1 120 1 145 1 230 1 146 1 304 1 310 1 237 1 259 1 15 1 194 1 314 1 367 1 175 1 178 1 316 2 20 1 373 3 318 1 377 1 352 1 
150 1 155 1 294 1 250 1 259 1 253 1 194 1 355 2 119 1 20 1 316 2 35 1 103 1 120 1 373 2 145 1 318 1 377 1 
150 1 155 1 250 1 237 1 259 1 194 1 227 2 314 1 175 1 119 1 20 1 316 2 35 1 103 1 120 1 373 2 318 1 376 1 
155 1 250 1 253 1 227 2 355 2 119 2 35 2 103 1 120 2 145 1 304 1 150 1 259 1 237 1 194 2 314 1 175 1 316 2 20 1 373 4 318 1 377 1 
155 1 294 1 250 1 259 1 253 1 194 1 355 2 119 1 20 1 316 2 35 1 103 1 120 1 373 2 145 1 318 1 377 1 153 1 
155 1 250 1 237 1 259 1 194 1 227 2 314 1 175 1 119 1 20 1 316 2 35 1 103 1 120 1 373 2 318 1 376 1 153 1 
155 1 250 1 253 1 227 2 355 2 119 2 35 2 103 1 120 2 145 1 304 1 259 1 237 1 194 2 314 1 175 1 316 2 20 1 373 4 318 1 377 1 153 1 
155 1 250 1 253 1 227 2 355 2 119 2 35 2 103 1 120 2 145 1 304 1 259 1 237 1 194 2 314 1 175 1 316 2 20 1 373 4 318 1 377 1 
155 1 248 1 250 1 251 1 67 1 227 1 355 1 188 1 256 1 279 1 103 1 104 1 332 1 38 1 281 1 108 1 41 1 259 1 260 1 16 1 366 1 367 1 344 1 20 1 316 2 373 2 318 1 218 1 
155 1 248 1 250 1 251 1 67 1 227 1 355 1 188 1 256 1 279 1 103 1 189 1 332 1 281 1 108 1 41 1 259 1 60 1 16 1 366 1 367 1 344 1 20 1 316 2 47 1 373 2 318 1 218 1 
155 1 250 1 253 1 227 2 355 2 119 2 35 2 103 1 120 2 145 1 304 1 310 1 259 1 237 1 194 2 314 1 175 1 316 2 20 1 373 4 318 1 377 1 
155 1 248 1 250 1 251 1 67 1 253 1 227 2 355 2 119 2 188 1 256 1 35 2 279 1 103 1 120 2 145 1 104 1 332 1 304 1 38 1 108 1 237 1 259 1 172 1 260 1 194 2 314 1 366 1 175 1 367 1 20 1 316 2 217 1 373 4 318 1 377 1 218 1 
155 1 28 1 250 1 253 1 227 1 355 2 119 1 35 1 103 1 279 1 120 1 145 1 146 1 304 1 310 1 40 1 259 1 15 1 194 1 314 1 175 1 367 1 178 1 316 2 20 1 373 3 318 1 377 1 352 1 
138 1 253 1 227 5 355 4 204 1 32 1 7 1 103 2 120 2 145 1 304 1 76 1 311 1 338 1 237 1 259 2 314 1 175 1 369 1 316 4 20 2 242 1 373 9 318 2 266 1 377 1 182 2 379 1 133 1 
249 1 138 1 253 1 95 1 227 9 355 11 204 1 32 2 103 3 120 2 122 1 145 2 304 2 337 1 338 1 237 1 259 3 63 1 314 1 175 1 213 2 369 3 316 6 20 3 242 2 65 1 243 1 373 20 318 3 266 2 377 2 133 1 379 2 182 2 
138 1 253 1 227 5 355 4 204 1 32 1 7 1 103 2 120 2 145 1 304 1 76 1 338 1 237 1 259 2 314 1 175 1 369 1 316 4 20 2 242 1 243 1 373 9 318 2 266 1 377 1 182 2 379 1 133 1 
138 1 253 1 227 5 355 4 204 1 32 1 7 1 103 2 120 2 145 1 304 1 76 1 338 1 237 1 259 2 314 1 175 1 369 1 316 4 20 2 242 1 243 1 373 9 318 2 266 1 377 1 182 2 379 1 133 1 
249 1 138 1 95 1 253 6 227 22 355 24 255 1 52 1 204 1 32 1 98 1 33 1 7 2 103 2 120 12 122 1 145 6 164 1 304 6 337 1 338 1 237 6 259 2 63 1 314 7 175 6 213 1 369 3 316 4 20 2 370 1 215 2 242 1 65 1 243 1 373 46 318 2 266 4 377 7 182 4 379 2 133 1 
160 1 334 1 44 1 18 1 361 1 362 1 9 1 323 1 245 1 195 1 
143 1 112 1 
186 1 44 1 18 1 154 1 362 1 115 1 323 1 245 1 195 1 
148 1 272 1 
287 1 273 1 106 1 
334 1 293 1 125 1 361 1 362 1 209 1 323 1 339 2 30 1 111 1 195 1 160 1 44 1 18 1 8 1 37 1 245 1 166 1 
334 1 293 1 125 1 361 1 362 1 209 1 323 1 339 2 30 1 111 1 195 1 160 1 44 1 18 1 8 1 37 1 245 1 166 1 
334 1 293 1 125 1 361 1 362 1 209 1 323 1 339 2 30 1 111 1 195 1 160 1 44 1 18 1 8 1 37 1 245 1 166 1 
148 1 272 1 106 1 
148 1 272 1 106 1 
287 1 273 1 
287 1 273 1 106 1 
198 1 141 1 
293 1 323 1 141 1 142 1 72 1 143 1 279 2 37 1 146 2 305 1 208 1 362 1 209 1 339 1 15 2 111 1 174 1 112 1 367 2 195 1 44 1 18 1 344 1 46 1 198 1 245 1 352 2 
269 1 155 1 248 2 250 1 251 1 67 2 51 1 227 1 355 1 229 1 188 2 279 2 103 1 192 1 332 1 281 1 108 1 310 1 14 1 41 1 259 1 15 2 367 2 17 2 20 1 316 2 372 1 373 2 318 1 218 1 180 1 
308 1 248 2 282 1 3 1 251 1 67 2 172 1 225 1 158 1 131 1 212 1 188 2 276 1 346 1 102 1 55 2 303 1 218 1 105 1 
248 1 282 1 3 1 67 1 251 1 225 1 158 1 131 1 212 1 43 1 188 1 276 1 346 1 102 1 55 2 303 1 218 1 
248 1 353 1 3 1 251 1 67 1 363 1 324 1 68 1 16 1 188 1 218 1 332 1 105 1 108 1 
308 1 248 1 282 1 3 1 67 1 251 1 225 1 158 1 131 1 212 1 188 1 276 1 346 1 102 1 55 2 303 1 218 1 105 1 
91 1 
306 1 200 1 223 1 8 1 136 1 135 1 350 1 
136 1 325 1 50 1 187 1 8 2 37 1 77 1 306 1 233 1 309 1 209 1 80 1 130 1 365 1 82 1 64 1 350 1 
223 1 135 1 136 8 140 2 93 1 325 4 50 12 328 2 188 3 8 8 331 1 145 2 280 2 191 2 10 6 332 3 108 10 12 2 235 1 284 2 16 1 285 3 286 2 290 1 64 4 350 2 291 6 248 3 251 3 67 3 254 2 360 2 37 5 304 2 77 6 306 9 168 2 258 1 210 2 209 5 309 3 126 1 42 1 172 1 130 4 365 5 366 3 314 2 82 4 175 2 83 2 268 2 218 4 377 2 
136 5 4 1 325 2 49 1 95 1 50 6 8 5 37 1 122 1 145 2 10 5 304 2 77 3 306 8 337 1 258 1 209 1 309 1 284 2 365 1 130 2 63 1 314 2 286 1 82 2 175 2 65 1 64 2 266 1 268 1 377 2 182 1 379 1 350 2 291 5 
48 1 1 1 28 1 136 2 2 1 325 1 98 1 33 1 279 1 37 1 164 1 146 1 306 2 209 1 15 1 284 2 130 1 314 1 286 1 367 1 82 1 342 1 19 1 64 1 199 1 377 2 87 1 352 1 
306 1 223 1 135 1 136 1 325 1 130 1 82 1 8 1 64 1 350 1 
168 1 306 5 136 5 284 2 50 10 314 2 286 1 175 2 8 5 145 2 10 5 304 2 377 2 291 5 77 5 
209 1 309 1 8 1 37 1 365 1 350 1 
248 4 136 2 251 1 67 4 324 1 202 1 68 1 325 2 70 1 188 4 331 1 37 3 332 1 108 1 109 1 306 2 258 2 309 2 209 3 42 2 129 1 130 1 16 2 365 4 82 2 64 2 218 1 268 2 351 1 
155 1 248 1 28 2 2 1 250 1 67 1 251 1 227 1 188 1 256 1 103 1 279 3 301 1 104 1 146 2 332 1 281 1 38 1 108 1 259 1 15 2 260 1 16 1 366 1 367 3 344 1 316 2 20 1 373 1 318 1 218 1 352 2 
306 1 258 1 136 2 325 1 50 4 130 1 82 1 370 1 8 4 64 1 10 2 268 1 350 2 291 2 77 2 
18 1 193 1 195 1 
18 1 361 1 141 1 327 1 195 1 
18 1 193 1 195 1 
18 1 193 1 195 1 
18 1 58 1 195 1 
18 1 58 1 195 1 
18 1 58 1 195 1 
18 1 195 1 
44 1 245 1 
237 2 259 2 253 1 227 4 314 1 355 4 52 1 255 1 213 1 98 1 33 1 20 2 316 4 370 1 103 2 120 3 373 8 318 2 377 1 164 1 
200 1 237 2 227 3 355 3 314 1 52 1 255 1 98 1 33 1 370 1 120 2 373 6 164 1 377 1 
237 1 259 1 253 1 227 2 314 1 355 2 175 1 20 1 316 2 103 1 120 2 145 1 373 4 318 1 304 1 377 1 181 1 
237 1 253 1 227 4 314 1 355 3 175 1 7 1 120 2 373 7 145 1 266 1 304 1 377 1 379 1 182 2 
253 4 227 12 355 11 255 1 52 1 98 2 33 1 7 1 103 2 120 9 145 2 164 2 304 2 165 1 107 1 237 5 259 2 314 3 175 2 213 2 20 2 316 4 370 1 215 1 373 23 266 2 318 2 377 3 182 2 
373 1 227 1 182 1 
373 1 266 1 355 1 
168 1 259 1 237 2 253 1 227 3 355 3 314 1 175 1 316 2 20 1 103 1 120 3 373 6 145 1 318 1 304 1 377 1 181 1 
253 1 95 1 227 6 355 6 103 1 120 2 145 2 122 1 304 2 337 1 259 1 237 1 63 1 314 2 175 2 316 2 20 1 65 1 373 12 266 1 318 1 377 2 182 1 379 1 133 1 
237 1 253 1 227 3 355 3 314 1 98 1 33 1 120 2 373 6 377 1 164 1 
237 1 259 1 253 1 227 2 355 1 255 1 52 1 98 1 213 1 20 1 316 2 103 1 120 2 373 3 318 1 164 1 107 1 
259 1 237 3 253 2 227 5 355 5 314 2 19 1 98 2 316 2 20 1 33 1 103 1 120 5 373 10 318 1 164 2 377 2 133 1 
259 1 253 1 355 2 20 1 316 2 103 1 120 1 145 1 373 2 318 1 377 1 133 1 
237 1 259 1 253 1 227 2 314 1 355 2 175 1 20 1 316 2 103 1 120 2 145 1 373 4 318 1 304 1 377 1 133 1 
259 3 237 1 253 1 227 2 355 1 213 1 98 1 20 3 316 6 103 3 120 2 373 3 318 3 164 1 76 1 133 1 107 1 
253 5 227 18 355 16 255 1 52 1 97 1 98 3 33 2 7 1 359 1 103 5 120 12 145 3 164 3 304 3 76 1 107 1 259 5 237 7 314 5 175 3 213 2 316 10 20 5 370 1 114 1 373 34 318 5 266 3 377 5 181 1 182 4 379 1 133 1 
227 4 355 4 52 1 255 1 98 1 33 1 103 1 120 2 164 1 337 1 259 1 237 2 314 1 316 2 20 1 370 1 373 8 266 1 318 1 377 1 182 1 379 1 133 1 
253 1 227 5 355 6 255 1 52 1 98 1 33 1 7 1 103 2 120 3 145 1 164 1 304 1 337 1 237 2 259 2 314 1 316 4 20 2 370 1 373 11 318 2 266 1 377 2 181 1 182 2 379 1 133 1 
253 1 95 1 227 10 355 9 255 1 52 1 98 1 33 1 103 3 120 4 122 1 145 2 164 1 304 2 337 1 259 3 237 3 63 1 314 3 175 2 213 1 316 6 20 3 370 1 65 1 373 19 266 1 318 3 377 3 181 1 182 1 379 1 133 1 
253 2 95 1 227 7 355 10 255 1 52 1 98 1 33 1 103 3 120 5 145 2 122 1 164 1 304 2 337 1 259 3 237 3 63 1 314 2 175 1 213 1 316 6 20 3 370 1 65 1 373 17 266 1 318 3 377 3 181 1 182 1 379 1 133 1 
227 4 355 4 52 1 255 1 98 1 33 1 103 1 120 2 164 1 337 1 259 1 237 2 314 1 316 2 20 1 370 1 373 8 266 1 318 1 377 1 182 1 379 1 133 1 
253 1 95 1 227 6 355 6 103 1 120 2 145 2 122 1 304 2 337 1 259 1 237 1 63 1 314 2 175 2 316 2 20 1 65 1 373 12 266 1 318 1 377 2 182 1 379 1 133 1 
253 2 95 1 227 8 355 10 255 1 52 1 98 1 33 1 103 4 120 5 122 1 145 2 164 1 304 2 337 1 259 4 237 3 63 1 314 2 175 1 213 2 316 8 20 4 370 1 65 1 373 18 318 4 266 1 377 3 181 1 182 1 379 1 133 1 
253 3 95 1 227 7 355 9 103 4 120 6 122 1 145 3 304 3 76 1 337 1 259 4 237 3 63 1 314 2 175 2 213 2 316 8 20 4 65 1 373 16 318 4 266 1 377 3 182 1 379 1 133 1 
237 3 253 3 227 4 314 1 355 3 52 1 255 2 98 3 33 1 120 6 373 7 164 3 377 1 
253 1 95 1 227 8 355 10 255 1 52 1 98 1 33 1 103 4 120 4 122 1 145 2 164 1 304 2 76 1 337 1 259 4 237 3 63 1 314 2 175 1 213 2 316 8 20 4 370 1 65 1 373 18 318 4 266 1 377 3 182 1 379 1 133 1 
344 1 279 1 163 1 317 1 15 1 86 1 367 1 
15 1 151 1 367 1 344 1 347 1 163 1 279 1 317 1 86 1 66 1 267 1 57 1 
188 1 200 1 248 1 251 1 324 1 67 1 68 1 218 1 332 1 16 1 108 1 
248 1 67 1 251 1 15 1 16 1 366 1 367 2 45 1 344 1 188 1 256 1 279 2 332 1 218 1 146 1 38 1 352 1 108 1 
116 1 248 1 251 1 67 1 254 1 328 1 188 1 256 1 279 2 146 1 332 2 56 1 38 1 108 3 42 1 15 2 366 2 367 2 45 1 344 1 218 1 352 2 87 1 
116 1 248 2 251 1 67 2 254 1 328 1 188 2 256 1 279 2 189 1 146 1 332 2 56 1 39 1 108 3 42 1 15 2 366 2 367 2 45 1 344 1 218 1 352 2 87 1 
88 1 248 3 251 1 67 3 140 1 254 1 328 1 188 3 8 1 37 2 332 1 39 1 108 4 12 1 209 2 42 1 365 1 16 1 285 1 313 1 366 1 218 1 350 1 
12 1 248 3 209 2 210 1 42 1 67 3 251 1 140 1 16 1 254 1 365 1 328 1 366 1 285 1 188 3 8 1 37 2 332 1 218 1 350 1 39 1 108 4 
188 1 248 1 251 1 67 1 218 1 246 1 
269 1 248 6 0 1 29 1 251 2 67 7 225 1 31 1 188 7 332 2 167 1 108 3 147 1 172 1 16 2 366 1 17 1 290 1 218 3 246 1 380 1 
247 1 155 2 248 1 250 2 251 1 67 1 227 3 355 3 255 1 52 1 119 1 98 1 33 1 188 1 256 1 35 1 279 2 103 2 120 2 104 1 164 1 332 1 146 1 38 1 108 1 310 1 14 1 237 2 259 2 15 1 172 1 260 1 194 1 314 1 366 1 367 2 45 1 344 2 20 2 316 4 370 1 217 1 373 6 318 2 377 1 218 1 352 1 
248 1 223 1 136 1 135 1 67 1 140 1 325 2 142 1 188 1 8 1 331 1 37 3 360 1 280 1 108 2 306 1 12 1 209 3 210 1 309 1 16 1 130 2 365 2 285 1 82 2 83 1 64 2 350 1 
248 2 126 1 67 2 251 1 172 1 140 1 366 1 188 2 290 1 332 1 218 2 246 1 108 2 
248 4 67 4 324 1 251 1 172 1 68 1 16 1 188 4 241 1 218 1 332 1 39 1 108 1 
169 1 13 1 336 1 248 2 42 1 67 2 251 1 366 1 188 2 332 1 218 2 167 1 380 1 108 1 
188 1 276 1 248 1 251 1 67 1 55 1 158 1 218 1 16 1 212 1 
229 1 269 1 188 2 248 2 251 1 67 2 172 1 225 1 218 1 332 1 108 1 
269 1 248 4 0 1 42 1 324 1 67 5 251 2 68 1 172 1 16 1 31 1 188 5 241 1 332 2 218 2 108 3 
269 1 248 4 110 1 42 1 324 1 67 5 251 2 68 1 172 1 16 1 31 1 188 5 241 1 332 2 218 2 108 3 
248 1 67 1 251 1 15 1 16 1 366 1 367 2 45 1 344 1 188 1 256 1 279 2 189 1 332 1 218 1 146 1 352 1 108 1 
248 1 29 1 42 1 67 1 251 1 366 1 188 1 290 1 332 1 218 2 167 1 380 1 108 1 
279 1 372 1 15 1 264 1 192 1 326 1 312 1 180 1 367 1 
53 1 374 1 312 1 
344 1 211 1 264 1 326 1 312 1 
12 1 116 1 209 2 211 2 326 2 312 1 69 1 344 1 142 1 53 1 8 1 37 2 264 2 374 1 56 1 375 1 26 1 350 1 87 1 
200 1 156 1 73 1 117 1 
335 1 156 1 73 1 117 1 354 1 190 1 74 1 
190 1 219 1 11 1 
335 1 239 1 156 1 73 1 278 2 117 1 354 3 190 3 74 1 262 1 123 1 231 1 
335 1 156 1 73 1 185 1 117 1 354 2 24 1 190 2 74 1 
335 1 222 1 117 1 354 1 84 1 276 1 239 1 55 1 190 1 74 1 303 1 
335 1 239 1 156 1 117 1 354 1 190 1 74 1 
335 1 239 1 156 2 73 1 354 1 190 1 74 1 
335 2 234 1 156 1 201 1 117 1 354 2 239 1 152 1 190 2 74 2 
335 1 222 1 156 1 185 2 117 2 354 3 263 1 239 1 73 1 299 1 348 1 190 3 74 1 
335 1 156 1 282 1 185 1 117 1 354 2 158 1 276 1 239 1 73 1 55 2 23 1 190 2 74 1 303 1 
335 2 90 1 222 1 156 1 185 2 117 2 354 4 239 1 73 1 299 1 190 4 24 1 74 2 
335 1 239 1 156 1 73 1 117 1 354 1 190 1 74 1 
335 1 222 1 156 2 185 2 117 3 354 4 278 1 73 2 299 1 244 1 190 4 74 1 123 1 231 1 
335 1 156 1 185 1 117 1 354 2 157 1 340 1 113 1 239 1 73 1 190 2 74 1 
335 1 156 1 117 1 296 1 354 3 239 1 278 2 73 1 190 3 74 1 231 1 123 2 
100 1 196 2 117 2 207 1 
335 1 239 1 302 1 354 1 190 1 74 1 
335 1 239 1 156 1 73 1 185 1 117 1 348 1 354 2 190 2 74 1 
171 1 
335 1 239 1 156 1 73 1 117 1 354 1 190 1 74 1 
335 1 239 1 156 1 73 1 278 1 185 1 117 1 348 1 354 3 190 3 74 1 
222 1 299 1 117 1 244 1 
156 1 117 1 

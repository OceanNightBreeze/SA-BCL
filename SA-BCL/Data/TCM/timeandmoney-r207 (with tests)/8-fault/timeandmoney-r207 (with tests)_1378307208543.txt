#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (251,315) 132 (124,265) (124,265) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (251,315) 132 (124,265) (124,265) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (251,315) 132 (124,265) (124,265) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (251,315) 132 (124,265) (124,265) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 199 202 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 316 308 304 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 239 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 209 1 283 3 70 1 264 2 306 1 247 2 296 2 174 1 251 1 155 1 281 1 22 3 
209 1 283 1 264 1 315 1 265 1 296 1 174 1 333 1 132 1 124 1 22 1 
209 1 283 1 264 1 315 1 265 1 296 1 174 1 333 1 132 1 124 1 22 1 
209 1 283 1 264 1 315 1 265 1 296 1 174 1 333 1 132 1 124 1 22 1 
209 1 283 1 264 1 315 1 265 1 296 1 174 1 333 1 132 1 124 1 22 1 
109 2 236 1 283 4 70 1 264 1 306 1 247 3 296 1 174 1 266 1 155 1 107 1 322 1 347 1 206 1 217 2 281 3 22 4 
257 1 209 1 172 1 283 2 70 1 264 1 247 1 306 1 296 1 174 1 176 1 317 1 333 1 107 1 322 1 22 2 
109 4 2 1 147 1 70 1 247 5 296 2 174 1 276 1 251 1 203 1 155 3 322 1 347 1 206 1 281 7 209 1 236 1 283 9 264 2 306 1 266 1 107 1 217 2 22 9 
109 4 2 1 147 1 70 1 247 5 296 2 174 1 276 1 251 1 203 1 155 3 322 1 347 1 206 1 281 7 209 1 236 1 283 9 264 2 306 1 266 1 107 1 217 2 22 9 
128 1 0 1 138 1 27 1 60 1 185 1 130 1 63 1 32 1 240 1 136 1 270 1 254 1 188 1 
170 1 
128 1 170 1 94 1 352 1 185 2 28 1 80 1 130 2 
128 2 170 1 139 1 258 1 25 1 329 2 3 1 352 2 185 5 249 2 4 1 28 1 80 1 130 5 103 1 154 1 319 2 348 1 190 1 
170 1 239 1 28 1 
170 1 350 2 184 1 
0 2 32 2 138 2 326 1 136 2 27 1 60 2 254 2 
0 2 1 1 51 1 173 1 312 1 222 1 27 1 177 1 5 1 152 1 92 1 318 2 7 1 32 2 33 1 277 1 136 2 300 2 157 1 254 3 11 1 256 1 74 2 349 1 56 1 138 3 326 1 60 2 81 1 143 2 123 2 125 1 186 1 311 1 294 1 191 1 295 1 
0 1 32 1 138 1 240 1 136 1 27 1 60 1 254 1 188 1 63 1 
170 1 138 1 91 1 16 1 185 1 28 1 130 1 101 1 187 1 136 1 254 1 280 1 188 1 323 1 
170 1 0 1 138 1 60 1 185 2 16 1 28 1 130 2 101 1 32 1 187 1 136 1 254 1 188 1 323 1 
128 1 321 1 352 1 185 1 130 1 
128 1 170 1 76 1 352 1 185 2 28 1 80 1 130 2 
352 1 185 1 130 1 
0 1 138 2 326 2 142 1 60 1 32 1 136 2 35 1 254 2 
84 1 263 1 192 1 
138 1 326 1 141 1 81 1 143 1 123 1 92 1 125 1 33 1 7 1 186 1 300 1 254 1 11 1 191 1 56 1 
239 1 326 1 
14 1 0 1 138 2 60 1 263 1 81 1 143 1 123 1 92 1 125 1 7 1 33 1 134 1 186 1 136 1 300 1 254 2 11 1 191 1 56 1 
14 1 32 1 0 3 138 3 326 1 136 3 60 3 254 3 
0 1 138 1 240 1 136 1 60 1 254 1 188 1 
0 1 32 1 138 1 136 1 35 1 142 1 60 1 254 1 188 1 
0 3 173 1 222 1 245 1 27 1 227 1 130 1 5 1 152 1 92 1 318 1 7 1 33 1 32 2 134 1 35 1 136 3 300 1 157 1 254 4 11 1 256 1 74 2 56 1 349 1 323 1 14 1 138 4 326 1 60 3 16 1 185 1 101 1 81 1 143 1 123 1 125 1 186 1 187 1 311 1 294 1 188 1 191 1 295 1 
14 1 0 1 138 2 326 1 78 1 91 1 136 2 60 1 254 2 
170 1 14 2 0 3 138 3 271 1 60 3 185 1 16 1 130 1 227 1 101 1 32 1 134 1 187 1 35 1 136 3 254 3 188 1 323 1 
14 1 0 2 138 2 60 2 263 1 32 1 84 1 35 1 136 2 254 2 
138 1 326 1 143 1 81 1 123 1 92 1 125 1 33 1 7 1 186 1 300 1 254 1 11 1 191 1 56 1 
194 1 138 1 326 1 143 1 81 1 123 1 125 1 33 1 7 1 9 1 186 1 300 1 254 1 11 1 56 1 
173 1 222 1 225 1 228 1 5 1 152 1 318 4 277 2 157 1 158 1 12 1 74 2 256 2 13 1 259 1 263 2 43 1 336 1 269 1 84 2 338 1 358 1 192 2 295 1 
0 1 138 1 136 1 60 1 254 1 278 1 188 1 323 1 
14 2 0 4 138 5 326 1 78 1 90 1 91 1 60 4 32 1 134 1 55 1 136 5 35 1 254 5 
0 2 138 2 240 1 136 2 60 2 278 1 254 2 188 1 
219 1 355 1 75 1 
219 2 267 1 69 1 183 1 146 1 75 2 
219 1 75 1 
219 1 75 1 
267 1 146 1 
267 1 146 1 
267 1 146 1 
219 1 243 1 75 1 
219 1 243 1 75 1 
219 1 243 1 75 1 
219 1 15 1 75 1 
219 1 15 1 75 1 
219 1 15 1 75 1 
219 2 170 1 196 3 235 2 66 1 148 1 183 1 246 1 129 1 185 2 213 1 130 2 201 1 20 2 44 1 65 2 97 2 116 2 75 2 
219 1 0 2 196 1 198 1 246 1 314 1 130 1 54 1 133 1 320 1 136 2 254 2 97 1 75 1 116 1 235 1 138 2 326 1 60 2 185 1 355 1 65 1 167 1 242 1 
257 1 107 2 156 1 137 2 206 1 
107 1 322 1 206 1 
257 1 107 1 322 1 
257 1 107 3 137 1 156 1 205 1 206 2 
257 1 107 2 137 1 156 1 206 1 255 1 
128 4 170 2 225 1 249 1 130 5 28 1 4 3 275 2 53 1 153 1 133 1 252 1 345 1 319 1 12 1 181 2 100 1 350 3 139 1 329 1 352 1 184 1 185 5 42 1 43 1 80 1 102 1 105 2 103 2 167 1 242 1 338 1 
128 7 170 5 25 1 113 1 225 3 249 2 130 9 28 1 4 8 275 6 250 1 31 1 153 2 319 2 135 1 321 5 230 1 12 3 100 3 350 9 139 1 352 6 329 2 184 3 185 9 42 2 43 3 80 1 102 1 105 6 103 6 167 4 241 1 337 5 338 3 
128 2 170 3 25 1 249 1 225 1 28 1 130 3 4 3 275 2 53 1 153 1 345 1 319 1 12 1 181 1 100 1 350 4 329 1 184 2 185 3 42 1 43 1 103 2 105 2 167 1 338 1 
128 3 170 4 25 1 113 1 249 1 225 2 28 1 130 4 4 5 275 4 53 1 250 1 153 1 319 1 345 1 230 1 12 2 181 2 100 2 350 7 329 1 184 3 185 4 42 1 43 2 105 4 103 4 167 2 338 2 
220 1 
239 1 81 1 127 1 
150 1 81 1 
7 1 81 1 
125 1 7 1 79 1 179 1 81 3 127 2 
125 1 7 1 81 1 
238 1 81 1 
38 2 119 1 112 1 77 1 313 1 211 1 43 1 175 1 318 7 144 1 34 1 277 4 279 1 158 3 358 2 12 1 169 1 256 3 
173 1 222 1 200 1 316 1 175 1 5 1 318 6 73 1 34 1 277 3 253 1 158 2 256 3 74 2 38 1 40 1 119 1 77 2 211 1 308 1 144 1 357 1 358 1 295 1 
112 1 173 1 222 1 68 1 175 2 342 1 5 1 318 14 34 1 277 8 158 4 279 2 12 3 74 2 256 6 38 2 119 2 77 1 211 1 43 3 290 1 358 3 169 1 295 1 
38 2 119 1 112 1 77 1 211 1 43 1 175 1 318 7 144 1 34 1 277 4 279 1 158 3 358 2 12 1 169 1 256 3 
38 2 119 1 112 1 77 1 211 1 43 1 175 1 318 7 144 1 34 1 277 4 279 1 158 3 358 2 12 1 169 1 256 3 
341 1 224 1 274 1 296 1 33 1 7 1 344 1 10 1 300 1 204 2 11 1 302 1 56 2 209 2 283 1 182 2 305 1 264 1 354 2 81 1 122 1 143 1 123 1 125 1 268 1 126 1 85 1 339 1 22 1 
67 1 296 1 174 1 30 1 33 1 178 1 322 1 300 1 204 1 205 1 206 1 56 1 257 1 209 1 182 1 283 1 237 1 261 1 264 1 354 1 143 1 123 1 163 1 64 1 107 2 22 1 
67 1 70 1 247 1 131 1 296 1 174 1 30 1 33 1 178 1 322 1 300 1 204 1 205 1 206 1 281 1 56 1 257 1 209 1 182 1 283 2 261 1 264 1 306 1 354 1 143 1 123 1 163 1 64 1 107 2 22 2 
341 1 67 1 70 1 247 1 296 1 33 1 178 1 322 1 300 1 204 1 205 1 206 1 115 1 281 2 56 1 257 1 209 1 182 1 283 3 237 1 261 1 264 1 306 1 354 1 143 1 123 1 163 1 64 1 107 2 22 3 
70 1 247 1 33 1 178 1 300 1 322 1 204 1 205 1 206 1 115 1 281 2 56 1 257 1 209 1 182 1 283 2 237 1 261 1 306 1 354 1 143 1 123 1 64 1 107 2 22 2 
48 1 
224 1 114 1 249 1 130 2 4 1 33 1 7 1 344 1 319 1 10 1 300 2 11 2 56 2 139 1 305 1 329 1 352 2 185 2 42 1 80 1 81 1 143 2 123 2 103 1 125 1 145 1 216 1 339 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 352 1 91 1 16 1 185 3 130 3 80 1 101 1 94 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 139 1 199 1 329 1 91 1 16 1 185 2 249 1 130 2 101 1 202 1 319 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 199 1 91 1 16 1 185 2 130 2 101 1 202 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
138 1 139 1 199 1 329 1 91 1 16 1 185 2 249 1 130 2 101 1 202 1 319 1 187 1 136 1 254 1 86 1 188 1 301 1 280 1 88 1 323 1 
49 1 173 1 51 1 222 1 224 1 177 1 5 1 152 1 33 1 7 1 318 2 344 1 10 1 277 1 300 2 157 1 11 1 231 1 74 2 256 1 56 2 305 1 81 1 143 2 123 2 125 1 294 1 339 1 295 1 
0 1 173 1 222 1 225 1 5 1 152 1 6 1 32 1 318 3 35 1 136 1 277 1 157 1 254 1 158 1 12 1 74 2 256 2 138 1 100 1 60 1 263 1 43 1 84 1 168 1 338 1 358 1 192 1 295 1 
38 1 112 1 119 1 173 1 326 2 222 1 263 1 43 1 175 1 228 1 152 1 5 1 318 6 239 1 84 1 277 3 157 1 279 1 158 2 358 2 12 1 192 1 169 1 256 3 295 1 74 2 
111 1 171 1 51 1 173 2 222 2 225 2 71 1 316 2 5 2 152 2 6 1 318 12 73 2 277 7 157 1 158 1 12 1 256 5 74 4 100 2 303 1 326 1 120 1 263 6 43 2 104 1 84 2 338 1 358 1 188 1 294 1 192 6 295 2 
0 1 173 1 51 1 222 1 152 1 5 1 6 1 92 1 7 1 33 1 134 1 318 2 136 1 277 1 300 1 157 1 254 2 11 1 74 2 256 1 56 1 14 1 138 2 326 1 59 1 141 1 60 1 61 1 81 1 143 1 123 1 125 1 186 1 84 1 45 1 294 1 191 1 295 1 
0 1 51 1 173 3 222 3 225 2 175 1 5 3 6 1 92 2 134 1 318 20 7 2 136 1 277 10 279 1 11 1 12 3 56 2 14 1 138 3 100 2 326 2 237 1 60 1 143 3 18 1 186 2 292 2 338 2 294 1 191 2 192 7 295 3 112 1 26 2 152 3 33 2 297 2 36 1 300 3 254 3 157 3 158 8 256 10 74 6 349 2 38 1 119 1 210 1 211 4 263 7 43 3 81 2 123 3 125 2 310 2 84 7 358 4 169 1 
173 1 222 1 211 1 263 1 225 1 43 1 228 1 152 1 5 1 318 2 336 1 84 1 277 2 157 1 158 1 192 1 295 1 74 2 
173 1 222 1 263 1 228 1 152 1 5 1 318 2 269 1 84 1 157 1 338 1 158 1 358 1 12 1 192 1 295 1 74 2 256 2 
100 1 173 1 222 1 211 1 263 2 225 1 43 1 228 1 152 1 5 1 318 4 84 2 277 2 338 1 157 1 358 1 158 2 12 1 192 2 256 2 295 1 74 2 
49 1 173 1 222 1 211 1 263 1 225 1 43 1 152 1 5 1 318 2 336 1 84 1 277 2 157 1 158 1 192 1 295 1 74 2 
49 1 173 1 222 1 263 1 152 1 5 1 318 2 269 1 84 1 157 1 338 1 158 1 358 1 12 1 192 1 295 1 74 2 256 2 
49 1 100 1 173 1 222 1 211 1 263 2 225 1 43 1 152 1 5 1 318 4 84 2 277 2 338 1 157 1 358 1 158 2 12 1 192 2 256 2 295 1 74 2 
100 1 173 1 222 1 211 1 263 2 225 1 43 1 152 1 5 1 318 4 84 2 277 2 338 1 157 1 358 1 158 2 12 1 192 2 256 2 295 1 74 2 
51 1 173 1 222 1 152 1 5 1 92 1 318 2 7 1 33 1 277 1 300 1 254 1 157 1 11 1 74 2 256 1 56 1 349 1 138 1 326 1 143 1 81 1 123 1 125 1 186 1 294 1 191 1 295 1 
194 1 51 1 173 1 222 1 152 1 5 1 318 2 7 1 33 1 9 1 277 1 300 1 254 1 157 1 11 1 74 2 256 1 56 1 138 1 326 1 161 1 143 1 81 1 123 1 125 1 186 1 294 1 295 1 
100 1 173 1 222 1 211 1 263 2 225 1 43 1 152 1 5 1 6 1 318 4 84 2 277 2 338 1 157 1 358 1 158 2 12 1 192 2 256 2 295 1 74 2 
173 1 222 1 225 1 131 1 152 1 5 1 92 1 318 4 33 1 7 1 297 1 277 2 300 1 254 1 157 1 158 2 12 1 256 2 74 2 56 1 349 1 138 1 100 1 211 1 263 2 43 1 143 1 81 1 123 1 125 1 84 2 186 1 338 1 358 1 192 2 191 1 295 1 
110 1 0 1 173 1 222 1 225 1 5 1 152 1 6 1 32 1 318 3 35 1 136 1 277 2 157 1 254 1 158 1 12 1 256 1 74 2 138 1 100 1 211 1 60 1 263 1 43 1 84 1 338 1 192 1 295 1 
244 1 171 1 173 2 197 1 222 2 68 1 225 3 316 2 5 2 318 25 73 3 277 12 96 2 158 5 12 3 74 4 37 1 256 13 98 1 57 4 39 1 100 3 304 1 211 2 43 3 308 2 17 1 21 1 338 3 358 3 189 1 295 2 
244 2 173 3 24 1 197 2 222 3 68 1 225 3 316 2 5 3 318 26 73 2 277 14 96 1 158 4 12 2 256 12 74 6 37 1 98 1 57 4 40 2 100 3 282 1 304 1 211 2 43 3 308 2 17 1 286 1 287 1 21 1 338 2 358 2 295 3 
244 2 171 1 112 1 173 3 24 1 197 1 222 3 68 1 225 4 175 1 316 3 5 3 318 41 73 4 277 20 96 1 279 1 158 7 12 5 232 1 74 6 37 1 256 21 98 1 57 4 38 1 39 1 40 1 119 1 100 4 282 1 304 1 211 3 43 5 308 3 17 1 286 1 287 1 21 1 338 4 358 4 169 1 295 3 
244 2 171 1 112 1 173 4 24 1 197 1 222 4 68 1 225 4 175 1 316 3 5 4 318 38 73 4 277 20 96 1 279 1 158 6 12 4 232 1 74 8 37 1 256 18 98 1 57 4 38 1 39 1 40 2 119 1 100 4 282 1 304 1 211 2 43 5 308 3 17 1 286 1 287 1 21 1 338 3 358 4 169 1 295 4 
244 1 171 1 112 3 173 2 24 1 197 1 222 2 68 1 225 5 71 1 175 3 316 3 5 2 318 52 73 3 277 28 96 1 279 3 158 12 12 8 74 4 37 1 256 24 98 1 57 4 38 3 40 1 119 3 100 5 282 1 304 1 211 5 43 8 308 2 17 1 286 1 287 1 21 1 338 5 358 7 169 3 295 2 
340 1 219 1 235 1 65 1 183 1 129 1 97 1 75 1 116 1 201 1 
198 1 355 1 
219 1 235 1 89 1 65 1 330 1 97 1 75 1 116 1 218 1 
219 1 170 1 196 2 235 1 66 1 183 1 246 1 129 1 185 1 213 1 130 1 201 1 20 1 44 1 65 1 97 1 116 1 75 1 
219 1 170 1 196 2 235 1 66 1 183 1 246 1 129 1 185 1 213 1 130 1 201 1 20 1 44 1 65 1 97 1 116 1 75 1 
219 1 170 1 196 2 235 1 66 1 183 1 246 1 129 1 185 1 213 1 130 1 201 1 20 1 44 1 65 1 97 1 116 1 75 1 
58 1 69 1 243 1 
58 1 69 1 243 1 
15 1 215 1 
15 1 69 1 215 1 
320 1 314 1 
128 1 219 1 196 1 0 2 66 1 198 1 314 1 130 1 54 1 133 1 320 1 136 2 254 2 97 1 75 1 116 1 138 2 235 1 326 1 60 2 212 1 185 1 355 1 20 1 65 1 167 1 242 1 
58 1 243 1 
15 1 69 1 215 1 
173 1 51 1 222 1 248 1 177 2 152 1 5 1 6 1 93 1 33 1 7 1 318 2 136 2 277 1 300 2 157 1 254 2 231 1 74 2 256 1 56 1 207 1 117 1 138 2 81 1 143 2 288 1 123 2 106 1 294 1 295 1 
108 1 224 1 7 1 33 1 344 1 10 1 300 1 11 1 56 2 41 1 182 1 305 1 143 1 81 1 123 1 125 1 126 1 85 1 339 1 
257 1 108 1 67 1 182 1 237 1 62 1 143 1 123 1 33 1 298 1 64 1 178 1 107 2 322 1 300 1 205 1 206 1 56 1 
257 1 108 1 67 1 182 1 237 1 131 1 62 1 143 2 123 2 33 1 298 1 64 1 178 1 107 2 322 1 300 2 205 1 206 1 56 1 
257 1 67 1 182 1 237 1 62 1 143 1 123 1 33 1 64 1 178 1 166 1 107 2 322 1 300 1 205 1 206 1 56 1 
307 1 
170 1 319 1 139 1 329 1 348 1 249 1 4 1 28 1 190 1 103 1 
234 1 170 5 100 2 350 10 26 1 184 5 225 2 43 2 4 5 275 5 72 2 103 5 105 5 338 2 12 2 
170 1 352 1 185 1 28 1 130 1 80 1 
224 1 114 1 249 1 4 1 130 1 33 1 7 1 344 1 319 1 10 1 300 2 11 2 56 2 139 1 305 1 329 1 352 2 42 1 185 1 80 1 81 1 143 2 123 2 103 1 125 1 145 1 216 1 87 1 339 1 
170 1 239 1 348 1 4 1 28 1 190 1 103 1 
170 2 350 1 139 1 221 1 352 1 260 1 329 1 140 1 184 1 185 1 249 1 28 1 130 1 80 1 4 1 103 1 319 1 
170 8 225 2 131 1 4 9 130 5 226 2 275 6 7 3 319 4 11 1 12 2 56 4 234 2 100 2 325 2 139 4 327 2 328 2 329 4 184 6 16 2 185 5 332 1 143 3 105 6 103 8 238 2 338 2 190 1 26 2 149 1 114 1 249 4 28 2 150 3 72 2 33 3 299 1 300 3 348 1 159 2 208 2 350 12 79 1 352 5 42 2 43 2 80 3 81 10 123 3 125 3 165 1 87 1 127 2 
170 1 139 1 350 2 304 1 329 1 184 1 249 1 308 1 4 1 316 1 275 1 103 1 105 1 73 1 319 1 
0 1 27 1 249 1 130 1 4 2 175 1 72 2 32 1 319 1 136 1 254 1 279 1 12 1 234 1 138 1 119 1 139 1 329 1 60 1 185 1 43 2 285 1 63 1 103 2 290 1 240 1 270 1 188 1 
0 2 173 1 222 1 27 1 5 1 152 1 92 1 318 1 32 2 33 1 7 1 136 2 300 1 254 3 157 1 11 1 256 1 74 2 349 1 56 1 138 3 326 1 60 2 143 1 81 1 123 1 125 1 186 1 311 1 294 1 191 1 295 1 
38 1 170 4 350 4 139 1 329 1 184 2 42 1 114 1 249 1 4 1 28 2 275 2 105 2 103 2 319 1 
19 1 320 1 65 1 97 1 201 1 
65 1 273 1 97 1 
65 1 273 1 97 1 
65 1 273 1 97 1 
65 1 331 1 97 1 
65 1 331 1 97 1 
65 1 331 1 97 1 
65 1 97 1 
219 1 75 1 
119 2 173 1 222 1 68 1 211 2 43 2 175 2 5 1 290 1 318 10 277 5 358 3 158 5 279 1 12 2 74 2 295 1 256 5 
173 1 222 1 68 1 211 1 225 1 43 1 5 1 318 2 277 2 158 1 295 1 74 2 
100 1 173 1 222 1 68 1 211 1 225 1 43 1 5 1 318 4 277 2 338 1 358 1 158 2 12 1 256 2 295 1 74 2 
39 1 40 1 119 1 173 3 222 3 68 1 211 1 175 1 5 3 318 3 277 1 357 1 358 1 158 2 256 2 295 3 74 6 
112 1 173 4 222 4 68 1 200 1 316 1 175 2 5 4 318 15 73 1 277 7 279 1 158 6 12 2 256 8 74 8 39 1 40 1 119 2 211 3 43 2 308 1 121 1 290 1 357 1 358 3 169 1 295 4 
38 1 40 1 112 1 119 1 173 2 222 2 211 1 43 1 175 1 5 2 318 8 277 4 279 1 158 3 358 2 12 1 169 1 256 4 295 2 74 4 
38 1 318 6 119 1 112 1 239 1 277 3 43 1 279 1 158 2 358 2 12 1 175 1 169 1 256 3 
100 1 173 1 222 1 211 1 225 1 43 1 121 1 5 1 318 4 277 2 338 1 358 1 158 2 12 1 256 2 295 1 74 2 
318 2 73 1 277 1 308 1 316 1 256 1 
171 1 111 1 112 1 173 1 222 1 225 2 71 1 175 2 316 2 5 1 318 26 73 2 277 13 279 2 158 7 12 5 256 13 74 2 38 1 40 1 119 2 100 2 211 2 43 5 290 1 338 2 358 5 169 1 295 1 
318 1 73 1 256 1 
318 1 277 1 316 1 
100 1 173 1 222 1 26 1 211 1 225 1 43 1 121 1 5 1 318 6 277 3 338 1 158 3 358 2 12 1 74 2 295 1 256 3 
100 2 282 1 173 1 24 1 222 1 304 1 68 1 211 1 43 2 225 2 308 1 286 1 287 1 316 1 5 1 318 12 73 1 277 6 338 2 158 2 358 1 12 2 295 1 74 2 256 6 
119 1 211 1 43 1 175 1 318 6 277 3 279 1 358 1 158 2 12 1 256 3 
40 1 119 1 112 1 173 1 222 1 211 1 175 1 5 1 318 3 277 1 357 1 158 2 358 1 169 1 256 2 295 1 74 2 
112 1 173 2 222 2 24 1 68 1 225 2 175 2 316 1 5 2 318 24 73 1 277 14 279 2 158 9 12 4 256 10 74 4 38 1 40 1 119 2 100 2 282 1 304 1 211 4 43 5 308 1 287 1 286 1 290 1 338 1 358 5 169 1 295 2 
112 1 173 3 222 3 24 1 68 1 225 2 175 1 316 1 5 3 318 17 73 1 277 10 279 1 158 4 12 2 256 7 74 6 38 1 40 1 119 1 100 2 282 1 304 1 211 1 43 3 308 1 286 1 121 1 287 1 338 1 358 3 169 1 295 3 
112 1 173 3 222 3 24 1 68 1 225 2 175 1 316 1 5 3 318 19 73 1 277 9 279 1 158 4 12 3 256 10 74 6 38 1 40 1 119 1 100 2 282 1 304 1 211 1 43 3 308 1 121 1 286 1 287 1 338 2 358 3 169 1 295 3 
112 1 173 3 222 3 24 1 68 1 225 2 175 1 316 1 5 3 318 17 73 1 277 10 279 1 158 5 12 2 256 7 74 6 38 1 40 1 119 1 100 2 282 1 304 1 211 2 43 3 308 1 121 1 287 1 286 1 338 1 358 3 169 1 295 3 
112 1 173 2 222 2 24 1 68 1 225 2 175 2 316 1 5 2 318 24 73 1 277 14 279 2 158 9 12 4 256 10 74 4 38 1 40 1 119 2 100 2 282 1 304 1 211 4 43 5 308 1 287 1 286 1 290 1 338 1 358 5 169 1 295 2 
100 2 282 1 173 1 24 1 222 1 304 1 68 1 211 1 43 2 225 2 308 1 286 1 287 1 316 1 5 1 318 12 73 1 277 6 338 2 158 2 358 1 12 2 295 1 74 2 256 6 
112 1 173 4 24 1 222 4 68 1 225 2 175 1 316 1 5 4 318 18 73 1 277 10 279 1 158 5 12 2 256 8 74 8 38 1 40 2 119 1 100 2 282 1 304 1 211 2 43 3 308 1 286 1 121 1 287 1 338 1 358 3 169 1 295 4 
173 4 24 1 222 4 68 1 225 3 316 1 5 4 318 16 73 1 277 9 158 6 12 2 256 7 74 8 39 1 40 2 100 3 282 1 304 1 211 3 43 3 308 1 286 1 287 1 338 2 358 3 295 4 
112 1 119 3 211 3 43 1 175 3 318 7 277 3 358 3 158 6 279 1 12 1 169 2 256 4 
112 1 173 4 24 1 222 4 68 1 225 2 175 1 316 1 5 4 318 18 73 1 277 10 279 1 158 4 12 2 256 8 74 8 38 1 39 1 40 2 119 1 100 2 282 1 304 1 211 1 43 3 308 1 286 1 287 1 338 1 358 3 169 1 295 4 
138 1 326 1 78 1 136 1 91 1 254 1 293 1 
195 1 138 1 326 1 223 1 78 1 91 1 289 1 291 1 136 1 254 1 293 1 47 1 
224 1 305 1 131 1 81 1 143 2 123 2 125 1 33 1 7 1 344 1 10 1 300 2 11 1 339 1 56 2 
305 1 143 2 81 1 123 2 18 1 125 1 7 1 33 1 165 1 344 1 10 1 300 2 339 1 56 2 
257 1 33 1 178 1 107 1 322 1 300 1 11 1 143 1 56 1 123 1 
117 1 33 1 7 1 106 1 237 1 300 2 131 1 81 1 143 2 56 1 123 2 
224 1 52 1 131 1 33 2 7 2 344 1 10 1 300 3 11 1 56 3 117 1 305 1 81 3 143 3 123 2 125 1 164 1 339 1 
224 1 52 1 131 1 33 2 7 2 344 1 10 1 300 3 11 1 56 3 117 1 305 1 81 3 143 3 123 2 162 1 125 1 339 1 
239 1 224 1 300 1 11 1 143 1 123 1 
14 1 0 1 138 2 326 1 60 1 81 1 143 1 123 1 92 1 125 1 7 1 33 1 186 1 136 1 300 1 254 2 11 1 56 1 
14 1 0 2 138 2 326 1 60 1 226 1 101 1 81 3 143 1 123 1 92 1 125 2 238 1 7 2 33 1 165 1 186 1 136 2 300 1 254 2 188 1 323 1 56 1 
194 1 14 1 0 2 138 2 326 1 60 1 226 1 101 1 81 3 143 2 123 2 125 2 238 1 7 2 33 1 165 1 95 1 186 1 136 2 300 2 254 2 188 1 323 1 56 1 
170 1 352 1 16 1 185 2 28 1 226 1 130 2 150 1 143 3 81 4 123 3 343 1 125 1 238 1 7 1 335 1 33 1 165 1 95 1 300 3 11 1 56 1 127 1 
170 1 328 1 352 1 16 1 185 2 28 1 226 1 130 2 150 1 143 3 81 4 123 3 125 1 238 1 7 1 33 1 165 1 95 1 300 3 11 1 56 1 127 1 
33 1 300 1 143 1 56 1 123 1 309 1 
117 1 118 1 237 1 351 1 79 1 52 1 131 1 177 1 143 7 81 3 309 1 123 6 125 1 164 1 7 2 33 2 344 1 300 7 11 2 339 1 56 3 
0 1 173 2 222 2 131 1 175 1 5 2 6 1 92 1 7 1 318 6 136 1 277 3 279 1 12 1 56 1 14 1 138 2 326 2 60 1 143 1 186 1 292 1 191 1 192 1 295 2 112 1 152 2 33 1 297 1 300 1 254 2 157 2 158 2 74 4 256 3 349 1 207 1 38 1 119 1 263 1 43 1 81 1 123 1 125 1 84 1 358 2 169 1 
128 1 170 1 249 2 4 1 28 1 130 3 150 1 319 2 300 1 348 1 11 1 159 1 139 2 325 1 327 1 328 1 329 2 352 2 185 3 16 1 80 1 143 1 81 2 123 1 103 1 190 1 87 1 127 1 
79 1 131 1 143 2 81 2 309 1 123 2 125 1 7 1 33 1 299 1 300 2 56 2 127 1 
194 1 14 1 0 1 138 2 326 1 60 1 81 1 143 1 123 1 125 1 7 1 33 1 186 1 136 1 300 1 254 2 11 1 56 1 
351 1 79 1 143 1 81 1 123 1 125 1 7 1 33 1 165 1 344 1 300 1 339 1 56 2 
93 1 229 1 138 1 136 1 254 1 248 1 180 1 288 1 233 1 
229 1 346 1 160 1 
229 1 326 1 180 1 233 1 99 1 
128 1 170 1 326 1 16 1 185 2 28 1 130 2 227 1 101 1 214 1 229 1 187 1 346 1 188 1 180 2 323 1 233 2 160 1 99 2 
283 1 70 1 264 1 247 1 306 1 296 1 174 1 22 1 
109 1 172 1 283 4 284 1 70 2 264 1 306 2 247 3 296 1 29 1 356 1 155 1 281 2 22 4 
283 2 70 1 262 1 353 1 264 1 247 1 306 1 296 1 174 1 276 1 281 1 22 2 
172 2 283 3 272 1 284 2 70 1 264 1 247 1 306 1 296 1 174 1 356 1 22 3 
324 2 83 1 46 1 247 2 
50 1 283 1 264 1 296 1 174 1 22 1 
203 1 283 2 70 1 264 1 247 1 306 1 296 1 174 1 281 1 22 2 
82 1 
283 1 70 1 264 1 247 1 306 1 296 1 174 1 22 1 
239 1 70 1 247 1 306 1 
283 1 70 1 264 1 247 1 306 1 296 1 22 1 
209 1 354 1 22 1 
172 2 283 3 284 1 70 1 264 1 247 1 306 1 296 1 174 1 356 1 8 1 22 3 
283 2 70 1 264 1 247 1 306 1 296 1 217 1 281 1 22 2 
109 1 236 1 283 1 264 1 247 1 296 1 174 1 107 1 322 1 206 1 22 1 
283 1 264 1 247 1 306 1 296 1 174 1 22 1 
283 1 70 1 264 1 306 2 296 1 174 1 22 1 
23 1 283 2 264 2 247 1 306 1 296 2 174 1 334 1 193 1 22 2 
109 1 283 3 147 1 70 1 264 1 306 1 247 2 296 1 174 1 203 1 155 1 281 2 22 3 
257 1 283 2 70 1 264 1 247 1 306 1 296 1 174 1 151 1 107 2 322 1 205 1 206 1 281 1 22 2 
109 1 283 4 70 1 264 2 306 1 247 2 296 2 174 1 266 1 155 1 217 1 281 2 22 4 
172 1 203 1 283 3 70 1 264 1 247 1 306 1 296 1 174 1 281 1 22 3 
109 1 155 1 247 1 29 1 
247 1 306 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (31,299) (31,299) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (31,299) (31,299) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (31,299) (31,299) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (31,299) (31,299) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 286 345 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 286 339 22 28 253 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 286 339 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 286 339 22 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 286 339 22 28 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 286 339 22 28 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 313 3 320 1 88 2 164 1 226 2 97 1 200 1 341 1 342 1 126 1 9 2 129 3 
194 1 118 1 313 2 320 1 151 1 88 1 349 1 186 1 122 1 226 1 274 1 31 1 298 1 129 2 299 1 
194 1 118 1 313 2 320 1 151 1 88 1 349 1 186 1 122 1 226 1 274 1 31 1 298 1 129 2 299 1 
194 1 118 1 313 2 320 1 151 1 88 1 349 1 186 1 122 1 226 1 274 1 31 1 298 1 129 2 299 1 
194 1 118 1 313 2 320 1 151 1 88 1 349 1 186 1 122 1 226 1 274 1 31 1 298 1 129 2 299 1 
194 1 313 4 320 1 164 1 88 1 15 2 6 1 122 1 226 1 97 1 78 1 274 1 200 1 341 3 126 2 9 3 180 1 129 4 
52 1 194 1 118 1 313 2 2 1 320 1 88 1 349 1 226 1 97 1 274 1 200 1 9 1 298 1 129 2 248 1 
194 1 313 9 87 1 88 2 6 1 226 2 200 1 341 7 342 1 9 5 180 1 118 1 320 1 164 3 15 2 122 1 17 1 324 1 97 1 274 1 78 1 254 1 126 4 129 9 
194 1 313 9 87 1 88 2 6 1 226 2 200 1 341 7 342 1 9 5 180 1 118 1 320 1 164 3 15 2 122 1 17 1 324 1 97 1 274 1 78 1 254 1 126 4 129 9 
65 1 12 1 39 1 74 1 76 1 100 1 229 1 169 1 267 1 295 1 145 1 115 1 300 1 103 1 
93 1 
173 1 37 1 210 1 39 2 267 1 132 1 103 2 93 1 
218 2 132 1 133 2 89 4 229 1 7 1 232 1 204 1 178 1 136 4 343 2 267 2 295 1 268 1 317 1 115 1 300 1 369 2 93 1 65 1 37 2 249 1 12 1 161 1 39 5 74 1 305 1 76 1 100 1 355 2 210 1 169 1 145 1 147 1 331 2 103 5 171 1 334 1 
80 1 210 1 93 1 
318 1 309 2 93 1 
76 2 100 1 12 2 169 2 295 2 82 1 74 2 145 2 
336 1 53 1 150 1 23 1 25 1 262 2 228 1 203 1 295 2 112 2 297 1 115 1 182 1 346 1 347 1 12 2 184 1 348 1 41 1 74 3 42 2 252 1 143 2 124 1 76 3 100 1 377 1 240 1 169 3 278 2 192 2 357 1 257 1 82 1 145 3 212 2 48 1 214 1 379 2 333 1 49 1 
65 1 76 1 100 1 12 1 169 1 295 1 74 1 145 1 115 1 300 1 
250 1 39 1 16 1 23 1 95 1 74 1 252 1 340 1 210 1 169 1 145 1 115 1 103 1 93 1 
12 1 39 2 16 1 23 1 74 1 252 1 340 1 76 1 210 1 169 1 295 1 145 1 115 1 103 2 93 1 
37 1 39 1 267 1 103 1 44 1 
37 1 210 1 39 2 267 1 73 1 132 1 103 2 93 1 
37 1 39 1 103 1 
182 1 336 1 348 1 54 1 23 1 74 2 252 1 143 2 165 1 76 2 262 2 377 1 228 1 169 2 111 1 192 1 357 1 295 1 112 1 145 2 212 1 48 1 115 1 379 2 
174 1 12 1 352 1 74 2 76 1 376 1 169 2 295 1 145 2 82 1 115 1 
216 1 350 1 111 1 
182 1 336 1 68 1 348 1 23 1 74 1 252 1 143 2 76 1 377 1 262 2 228 1 169 1 192 1 112 1 357 1 82 1 145 1 212 1 48 1 115 1 379 2 
80 1 82 1 
165 1 76 3 12 1 169 3 295 3 82 1 74 3 145 3 
65 1 76 1 169 1 295 1 74 1 145 1 115 1 
174 1 12 1 74 1 76 1 376 1 169 1 295 1 145 1 115 1 
336 1 53 1 150 1 54 1 23 2 340 1 155 1 25 1 262 2 228 1 203 1 295 3 112 1 115 2 182 1 346 1 347 1 12 2 184 1 39 1 348 1 16 1 74 4 42 1 252 2 143 2 374 1 124 1 76 4 165 1 377 1 376 1 100 1 240 1 169 4 278 2 192 1 357 1 82 1 145 4 212 1 48 1 214 1 103 1 379 2 
76 1 165 1 250 1 169 2 295 1 82 1 170 1 74 2 145 2 
69 1 12 1 39 1 54 1 16 1 23 1 74 3 252 1 340 1 155 1 165 2 76 3 376 1 169 3 295 3 145 3 115 1 103 1 93 1 
12 1 350 1 74 2 165 1 76 2 376 1 169 2 111 1 295 2 145 2 
182 1 336 1 348 1 23 1 74 1 252 1 143 2 76 1 377 1 262 2 228 1 169 1 192 1 112 1 357 1 82 1 145 1 212 1 48 1 115 1 379 2 
182 1 336 1 23 1 74 1 252 1 288 1 143 2 76 1 262 2 228 1 169 1 192 1 112 1 357 1 82 1 145 1 212 1 48 1 115 1 34 1 379 2 
216 2 53 1 312 1 222 1 4 1 133 1 25 2 32 1 111 2 369 1 347 1 184 1 350 2 40 1 41 2 42 4 372 1 124 1 166 1 240 1 278 2 358 1 256 1 214 1 
76 1 219 1 169 1 23 1 295 1 74 1 145 1 115 1 
12 1 250 1 54 1 74 5 373 1 165 2 76 4 376 1 294 1 169 5 295 4 170 1 145 5 82 1 
65 1 76 2 219 1 169 2 295 2 74 2 145 2 115 1 
370 1 106 1 188 1 
311 1 370 2 157 1 101 1 83 1 188 2 
370 1 188 1 
370 1 188 1 
311 1 101 1 
311 1 101 1 
311 1 101 1 
370 1 172 1 188 1 
370 1 172 1 188 1 
370 1 172 1 188 1 
272 1 370 1 188 1 
272 1 370 1 188 1 
272 1 370 1 188 1 
0 1 67 1 234 2 370 2 39 2 120 3 185 1 107 1 243 2 238 1 188 2 199 1 61 2 327 1 211 2 102 2 103 2 83 1 93 1 
337 1 106 1 107 1 243 1 91 1 61 1 247 1 295 2 92 1 234 1 38 1 370 1 120 1 39 1 74 2 188 1 76 2 354 1 169 2 82 1 145 2 241 1 102 1 103 1 
274 2 52 1 8 2 319 1 122 1 
194 1 274 1 122 1 
194 1 274 1 52 1 
274 3 52 1 8 1 319 1 72 1 122 2 
274 2 52 1 8 1 319 1 122 1 64 1 
193 2 337 1 338 1 363 2 132 1 133 1 89 3 244 1 247 1 32 1 136 2 343 1 267 4 296 1 369 1 233 1 93 2 318 1 37 1 38 1 162 1 39 5 40 1 98 1 46 1 355 1 210 1 277 2 309 3 147 1 331 1 103 5 
193 6 338 3 363 6 55 1 132 1 133 3 89 8 291 1 244 2 232 1 29 1 32 3 136 6 267 7 343 2 369 3 233 1 93 5 318 3 37 6 38 4 162 2 39 9 235 1 40 3 44 5 355 2 210 1 309 9 128 1 310 1 20 5 147 1 331 2 103 9 
193 2 338 1 363 2 133 1 89 3 244 1 232 1 32 1 267 2 343 1 136 2 296 1 369 1 93 3 318 2 38 1 162 1 39 3 40 1 98 1 355 1 210 1 277 1 309 4 331 1 103 3 
193 4 338 2 363 4 55 1 133 2 89 5 244 1 232 1 29 1 32 2 343 1 267 3 136 4 296 1 369 2 93 4 318 3 38 2 162 1 39 4 40 2 98 1 355 1 210 1 277 2 309 7 310 1 331 1 103 4 
108 1 
149 1 80 1 379 1 
3 1 379 1 
262 1 379 1 
262 1 149 2 60 1 207 1 143 1 379 3 
262 1 143 1 379 1 
379 1 359 1 
51 1 360 1 1 2 175 1 152 1 41 4 133 1 42 7 25 3 79 1 7 1 204 1 256 3 358 2 316 1 369 1 301 1 171 1 
148 1 360 1 51 2 217 1 220 1 1 3 53 1 175 1 338 3 109 4 133 4 25 15 7 2 204 2 179 1 32 3 316 1 369 4 301 5 347 1 184 1 119 1 40 3 351 3 41 16 237 1 42 31 79 2 278 2 256 10 358 5 213 1 214 1 171 1 
281 1 51 1 53 2 1 2 175 1 133 1 25 4 7 1 204 1 316 1 369 1 301 1 347 2 184 2 41 5 42 9 79 1 168 1 278 4 358 3 256 4 213 1 214 2 171 1 
51 1 360 1 1 2 175 1 41 4 133 1 42 7 25 3 79 1 7 1 204 1 256 3 358 2 316 1 369 1 301 1 171 1 
51 1 360 1 1 2 175 1 41 4 133 1 42 7 25 3 79 1 7 1 204 1 256 3 358 2 316 1 369 1 301 1 171 1 
86 1 336 1 118 2 313 1 88 1 140 1 43 1 226 1 262 1 190 1 228 1 202 1 192 1 127 2 112 1 330 2 212 1 269 2 48 1 114 1 21 1 129 1 379 1 
85 1 215 1 194 1 336 1 52 1 313 1 362 1 88 1 226 1 228 1 135 1 344 1 112 1 269 1 118 1 72 1 320 1 122 1 99 1 274 2 19 1 127 1 192 1 330 1 212 1 129 1 
85 1 215 1 194 1 336 1 52 1 313 2 362 1 88 1 226 1 200 1 341 1 228 1 344 1 9 1 112 1 269 1 118 1 72 1 320 1 121 1 122 1 97 1 99 1 274 2 19 1 127 1 192 1 330 1 212 1 129 2 
215 1 194 1 336 1 52 1 313 3 362 1 88 1 226 1 200 1 341 2 228 1 202 1 135 1 344 1 9 1 112 1 269 1 118 1 72 1 122 1 97 1 99 1 274 2 19 1 127 1 192 1 330 1 212 1 129 3 130 1 
215 1 336 1 52 1 194 1 313 2 200 1 341 2 228 1 135 1 344 1 9 1 112 1 269 1 118 1 72 1 122 1 97 1 99 1 274 2 127 1 192 1 330 1 212 1 129 2 130 1 
134 1 
336 1 282 2 286 1 5 1 340 1 244 1 343 1 112 2 345 1 63 1 114 1 160 1 115 1 250 1 16 1 74 1 252 1 353 1 307 1 167 1 355 1 169 1 212 2 23 1 132 1 177 1 89 2 90 1 262 1 228 1 136 2 36 1 37 2 39 3 140 1 141 1 95 1 187 1 192 2 145 1 147 1 48 2 331 1 103 3 379 1 
173 1 282 2 23 1 5 1 132 1 340 1 63 1 160 1 115 1 37 2 250 1 39 3 16 1 141 1 236 1 95 1 74 1 252 1 307 1 169 1 145 1 103 3 
173 1 282 3 23 1 5 1 24 1 132 1 340 1 63 1 160 1 115 1 93 1 37 1 250 1 39 3 16 1 141 1 95 1 74 1 252 1 307 1 210 1 169 1 145 1 103 3 
173 1 282 3 23 1 5 1 132 1 24 1 340 1 245 1 63 1 160 1 115 1 93 1 37 2 250 1 39 3 16 1 141 1 236 1 95 1 74 1 252 1 307 1 210 1 169 1 145 1 103 3 
173 1 282 2 22 1 339 1 286 1 23 1 5 1 132 1 340 1 89 1 90 1 366 1 245 2 28 1 136 1 343 1 63 1 160 1 115 1 37 3 250 1 39 3 141 1 16 1 236 2 95 1 74 1 187 1 252 1 353 1 253 1 307 1 355 1 169 1 145 1 147 1 331 1 103 3 
282 2 286 1 23 1 5 1 340 1 89 1 90 1 136 1 343 1 63 1 160 1 115 1 39 2 250 1 141 1 16 1 95 1 74 1 187 1 252 1 353 1 307 1 355 1 169 1 145 1 147 1 331 1 103 2 
282 2 22 1 339 1 286 1 23 1 5 1 340 1 89 1 90 1 366 1 136 1 343 1 63 1 160 1 115 1 250 1 39 2 16 1 141 1 95 1 74 1 187 1 252 1 353 1 307 1 355 1 169 1 145 1 147 1 331 1 103 2 
282 2 22 1 339 1 286 1 23 1 5 1 340 1 89 1 90 1 366 1 136 1 343 1 63 1 160 1 115 1 250 1 39 2 16 1 141 1 95 1 74 1 187 1 252 1 353 1 307 1 355 1 169 1 145 1 147 1 331 1 103 2 
282 4 339 1 286 1 23 1 5 1 24 2 132 2 287 1 225 1 340 1 89 1 245 2 136 1 343 1 368 2 63 1 367 1 160 1 115 1 93 1 37 4 250 1 39 4 236 2 16 1 141 1 95 1 74 1 187 2 252 1 353 2 307 1 355 1 210 1 169 1 309 2 145 1 280 2 147 1 331 1 103 4 
282 3 22 1 339 1 286 1 23 1 5 1 24 1 340 1 89 1 90 1 366 1 245 1 28 1 136 1 343 1 63 1 160 1 115 1 37 1 250 1 39 2 16 1 141 1 236 1 95 1 74 1 187 1 252 1 353 1 307 1 355 1 169 1 145 1 147 1 331 1 103 2 
282 3 22 1 339 1 286 1 23 1 5 1 24 1 340 1 89 1 90 1 366 1 245 1 28 1 136 1 343 1 63 1 160 1 115 1 37 1 250 1 39 2 16 1 141 1 236 1 95 1 74 1 187 1 252 1 353 1 307 1 355 1 169 1 145 1 147 1 331 1 103 2 
282 4 286 1 5 1 287 1 340 1 245 2 343 1 63 1 115 1 160 1 250 1 16 1 74 1 252 1 353 2 307 1 355 1 210 1 169 1 309 2 23 1 132 2 24 2 89 1 27 1 136 1 368 2 93 1 37 4 39 4 141 1 236 2 95 1 187 2 145 1 147 1 280 2 331 1 103 4 
336 2 53 2 150 1 196 1 25 1 262 2 228 2 135 1 295 1 112 7 297 2 114 1 347 2 184 2 121 1 140 1 41 1 74 1 142 1 42 2 124 2 189 1 76 1 165 1 166 1 378 1 255 1 169 1 240 2 278 4 328 1 192 8 145 1 212 8 257 1 48 2 146 1 214 2 379 3 
216 1 53 1 338 1 133 1 25 2 111 1 32 1 295 1 369 1 347 1 12 1 184 1 350 1 40 1 41 1 74 1 42 3 124 1 304 1 76 1 376 1 240 1 191 1 169 1 278 2 256 1 358 1 145 1 214 1 
216 1 347 1 1 1 53 1 175 1 184 1 350 1 41 3 133 1 42 6 124 1 25 3 166 1 7 1 80 1 204 1 240 1 278 2 111 1 256 2 358 2 316 1 82 2 369 1 214 1 171 1 
216 11 53 2 150 1 338 2 109 3 133 1 25 6 315 1 179 1 156 1 111 11 32 1 158 1 301 1 369 2 347 2 71 1 184 2 119 1 40 2 350 4 351 3 41 8 42 14 124 1 240 2 191 1 278 4 256 2 358 1 257 1 82 1 214 2 
336 1 53 1 150 1 54 1 23 1 289 1 25 1 262 2 228 1 112 1 295 1 115 1 182 1 347 1 68 1 184 1 348 1 350 1 41 1 74 2 252 1 42 2 143 2 124 1 76 2 165 1 377 1 240 1 191 1 169 2 278 2 192 1 329 1 47 1 357 1 82 1 212 1 145 2 257 1 48 1 214 1 379 2 
336 2 1 1 53 3 150 1 338 2 54 1 7 1 204 1 111 7 112 3 295 1 301 4 115 2 346 2 347 3 163 1 348 2 350 7 74 3 252 2 124 3 165 1 76 3 169 3 358 4 256 8 357 2 82 2 257 1 212 3 214 3 171 1 84 2 259 2 216 7 175 1 23 2 133 3 25 10 262 4 228 2 135 1 32 2 316 1 369 3 35 1 182 2 184 3 40 2 41 10 42 20 143 4 377 2 326 2 239 1 191 1 240 3 278 6 192 3 145 3 48 1 332 2 379 4 
216 1 347 1 53 1 184 1 350 1 4 1 40 1 41 2 42 2 124 1 166 1 240 1 278 2 111 1 256 1 301 1 214 1 369 1 
216 1 347 1 53 1 312 1 184 1 350 1 42 2 133 1 124 1 25 2 166 1 240 1 278 2 111 1 32 1 256 1 358 1 214 1 
216 2 53 1 338 1 133 1 25 2 111 2 32 1 369 1 301 1 347 1 184 1 40 1 350 2 41 2 42 4 124 1 166 1 240 1 278 2 256 2 358 1 214 1 
216 1 347 1 53 1 184 1 350 1 4 1 40 1 41 2 42 2 124 1 240 1 278 2 111 1 256 1 146 1 301 1 214 1 369 1 
216 1 347 1 53 1 312 1 184 1 350 1 42 2 133 1 124 1 25 2 240 1 278 2 111 1 32 1 256 1 358 1 146 1 214 1 
216 2 53 1 338 1 133 1 25 2 111 2 32 1 369 1 301 1 347 1 184 1 40 1 350 2 41 2 42 4 124 1 240 1 278 2 256 2 358 1 146 1 214 1 
216 2 53 1 338 1 133 1 25 2 111 2 32 1 369 1 301 1 347 1 184 1 40 1 350 2 41 2 42 4 124 1 240 1 278 2 256 2 358 1 214 1 
336 1 53 1 150 1 23 1 25 1 262 2 228 1 112 1 115 1 182 1 346 1 347 1 184 1 348 1 41 1 74 1 42 2 252 1 143 2 124 1 76 1 377 1 169 1 240 1 278 2 192 1 357 1 257 1 82 1 212 1 145 1 48 1 214 1 379 2 
336 1 53 1 150 1 23 1 288 1 25 1 262 2 228 1 266 1 112 1 115 1 34 1 182 1 347 1 184 1 41 1 74 1 42 2 252 1 143 2 124 1 76 1 169 1 240 1 278 2 192 1 357 1 257 1 82 1 212 1 145 1 48 1 214 1 379 2 
216 2 53 1 338 1 133 1 25 2 111 2 32 1 369 1 301 1 347 1 184 1 40 1 350 2 41 2 42 4 124 1 240 1 191 1 278 2 256 2 358 1 214 1 
216 2 259 1 336 1 53 1 338 1 23 1 133 1 25 2 262 2 228 1 32 1 111 2 112 1 301 1 369 1 115 1 182 1 346 1 347 1 184 1 348 1 350 2 40 1 121 1 41 2 74 1 42 4 252 1 143 2 124 1 76 1 377 1 169 1 240 1 278 2 192 1 358 1 256 2 357 1 212 1 145 1 214 1 379 2 
216 1 53 1 338 1 133 1 25 1 32 1 111 1 295 1 301 1 369 1 347 1 12 1 184 1 40 1 350 1 41 2 74 1 42 3 124 1 96 1 76 1 376 1 240 1 191 1 169 1 278 2 256 1 145 1 214 1 
281 1 53 2 338 3 109 2 133 3 290 1 25 10 227 1 263 1 201 1 246 1 26 1 179 1 32 3 369 3 301 3 181 2 302 2 116 1 347 2 184 2 119 1 40 3 351 1 41 9 42 19 278 4 358 3 256 6 214 2 
281 1 53 3 361 1 338 3 133 2 109 2 198 1 25 12 227 1 263 1 201 2 26 1 179 2 32 2 301 2 369 3 181 4 302 1 116 2 347 3 184 3 40 3 41 14 351 2 42 26 273 1 81 1 278 6 256 4 358 2 213 2 214 3 50 1 258 1 
281 1 53 3 1 1 338 4 109 4 198 1 290 1 201 1 7 1 204 1 301 4 116 2 302 1 347 3 119 1 351 3 81 1 256 8 358 4 213 1 214 3 258 1 171 1 361 1 175 1 261 1 133 5 25 21 227 1 263 1 26 1 179 3 32 4 316 1 369 5 181 4 184 3 40 4 41 20 42 41 273 1 278 6 50 1 
281 1 1 1 53 4 175 1 361 1 338 4 261 1 109 4 133 4 290 1 198 1 25 18 227 1 263 1 201 1 7 1 26 1 204 1 179 3 32 3 316 1 369 5 301 3 181 4 302 1 116 2 347 4 184 4 119 1 40 4 351 3 41 20 42 38 273 1 81 1 278 8 358 4 256 7 213 2 214 4 171 1 50 1 258 1 
281 1 1 1 53 2 175 1 361 1 338 5 133 6 109 3 198 1 25 20 315 1 227 1 263 1 201 1 7 1 26 1 204 1 179 2 32 5 316 1 369 6 301 5 181 4 302 1 116 1 347 2 184 2 119 1 40 5 351 3 41 22 42 42 273 1 81 1 278 4 358 5 256 10 213 1 214 2 171 1 50 1 258 1 
138 1 67 1 234 1 370 1 61 1 327 1 243 1 102 1 83 1 188 1 
106 1 92 1 
234 1 370 1 61 1 275 1 322 1 371 1 243 1 102 1 188 1 
0 1 67 1 234 1 370 1 39 1 120 2 107 1 243 1 238 1 188 1 199 1 61 1 327 1 211 1 103 1 102 1 83 1 93 1 
0 1 67 1 234 1 370 1 39 1 120 2 107 1 243 1 238 1 188 1 199 1 61 1 327 1 211 1 103 1 102 1 83 1 93 1 
0 1 67 1 234 1 370 1 39 1 120 2 107 1 243 1 238 1 188 1 199 1 61 1 327 1 211 1 103 1 102 1 83 1 93 1 
265 1 157 1 172 1 
265 1 157 1 172 1 
272 1 224 1 
272 1 224 1 157 1 
354 1 241 1 
337 1 106 1 243 1 199 1 91 1 61 1 247 1 267 1 295 2 92 1 159 1 234 1 38 1 370 1 39 1 120 1 74 2 188 1 354 1 76 2 169 2 211 1 82 1 145 2 241 1 103 1 102 1 
265 1 172 1 
272 1 224 1 157 1 
336 1 53 1 221 1 150 1 195 1 196 1 154 1 25 1 262 1 228 1 112 2 297 2 270 1 347 1 184 1 41 1 74 2 42 2 124 1 77 1 255 1 240 1 191 1 169 2 278 2 192 2 212 2 145 2 257 1 214 1 379 1 
336 1 131 1 140 1 262 1 306 1 228 1 192 1 112 1 212 1 48 1 269 1 21 1 114 1 379 1 
215 1 194 1 52 1 336 1 183 1 72 1 362 1 122 1 274 2 306 1 228 1 135 1 192 1 344 1 112 1 212 1 113 1 269 1 
215 1 194 1 52 1 336 1 183 1 72 1 362 1 121 1 122 1 274 2 306 1 228 1 135 1 192 2 344 1 112 2 212 2 113 1 269 1 
215 1 194 1 52 1 336 1 183 1 72 1 362 1 122 1 274 2 59 1 228 1 135 1 192 1 344 1 112 1 212 1 269 1 
18 1 
161 1 355 1 343 1 147 1 331 1 
84 1 218 2 193 5 318 5 249 1 338 2 363 5 40 2 133 2 89 5 136 5 309 10 32 2 369 2 93 5 
37 1 210 1 39 1 132 1 103 1 93 1 
336 1 364 1 177 2 132 2 57 2 89 2 262 1 244 2 228 1 232 1 343 2 136 2 112 4 114 1 36 1 11 1 37 4 39 3 140 1 209 1 167 1 355 2 192 4 212 4 147 1 48 2 331 2 103 3 379 1 
80 1 161 1 268 1 
90 1 355 1 136 1 343 1 147 1 331 1 89 1 
335 1 336 1 193 6 149 2 3 3 338 2 56 2 340 2 244 2 7 1 60 1 204 1 343 4 295 1 112 1 115 1 300 1 65 1 66 2 12 1 249 3 161 1 74 1 75 1 209 1 305 1 76 1 125 2 355 4 210 2 169 1 309 12 212 1 171 1 84 2 218 4 223 1 363 6 177 1 132 3 133 4 89 12 262 1 228 2 229 1 264 2 136 11 32 2 268 1 33 2 369 4 93 8 37 5 318 6 39 5 40 2 143 1 100 1 192 1 145 1 147 4 48 1 331 4 103 5 379 6 
218 2 193 5 361 1 338 2 363 5 177 1 132 1 109 1 133 2 89 8 198 1 244 1 58 1 179 1 343 2 136 5 32 2 369 2 93 5 37 1 318 3 249 1 39 1 208 1 40 2 351 1 273 1 355 2 81 1 210 2 309 6 147 2 331 2 103 1 258 1 
218 2 133 1 89 2 366 1 7 1 229 1 204 1 343 1 136 2 295 1 115 1 369 2 300 1 65 1 249 1 12 1 39 1 74 1 305 1 76 1 100 1 355 1 169 1 145 1 147 1 331 1 103 1 171 1 
336 1 53 1 150 1 23 1 25 1 262 2 228 1 203 1 112 1 295 2 115 1 182 1 346 1 347 1 12 2 184 1 348 1 74 3 42 1 252 1 143 2 124 1 76 3 100 1 377 1 240 1 169 3 278 2 192 1 357 1 82 1 212 1 145 3 48 1 214 1 379 2 
193 2 318 2 1 1 363 2 177 1 89 1 244 1 355 1 210 2 309 4 136 2 343 1 147 1 331 1 93 4 
67 1 110 1 234 1 243 1 241 1 
234 1 285 1 243 1 
234 1 285 1 243 1 
234 1 285 1 243 1 
234 1 176 1 243 1 
234 1 176 1 243 1 
234 1 176 1 243 1 
234 1 243 1 
370 1 188 1 
281 1 347 1 53 1 184 1 41 5 42 10 133 2 305 1 25 5 7 2 204 2 278 2 358 3 256 5 214 1 301 2 369 2 171 1 
281 1 347 1 53 1 184 1 40 1 41 2 42 2 278 2 256 1 214 1 369 1 301 1 
281 1 347 1 53 1 184 1 338 1 40 1 41 2 133 1 42 4 25 2 278 2 32 1 358 1 256 2 214 1 369 1 301 1 
281 1 347 3 53 3 184 3 41 1 153 1 42 3 290 1 25 2 7 1 204 1 278 6 358 1 256 2 213 1 214 3 301 1 
148 1 281 1 217 1 1 1 220 1 283 1 53 5 175 1 338 3 153 1 109 4 133 5 25 18 290 1 7 3 204 3 179 1 32 3 316 1 369 5 301 5 347 5 184 5 119 1 40 3 351 3 41 16 42 34 278 10 256 12 358 7 213 2 214 5 171 2 
281 1 1 1 53 1 175 1 133 1 109 1 25 4 7 1 204 1 179 1 316 1 369 1 347 1 184 1 351 1 41 4 42 8 81 1 278 2 358 2 256 2 214 1 171 1 
281 1 1 1 53 2 283 1 175 1 338 1 133 1 109 2 25 5 7 1 204 1 179 1 316 1 369 2 301 1 347 2 184 2 119 1 40 1 351 1 41 6 42 11 81 1 278 4 358 2 256 3 214 2 171 1 
281 1 1 1 283 1 53 3 175 1 361 1 338 2 109 1 133 3 25 10 198 1 7 1 204 1 179 1 32 2 316 1 301 1 369 3 347 3 184 3 40 2 351 1 41 9 42 19 273 1 81 1 278 6 358 3 256 4 213 1 214 3 171 1 258 1 
281 1 1 1 283 1 53 3 175 1 361 1 338 2 109 1 133 2 25 7 198 1 7 1 204 1 179 1 32 1 316 1 301 2 369 3 347 3 184 3 40 2 351 1 41 10 42 17 273 1 81 1 278 6 358 3 256 5 213 1 214 3 171 1 258 1 
281 1 1 1 53 1 175 1 133 1 109 1 25 4 7 1 204 1 179 1 316 1 369 1 347 1 184 1 351 1 41 4 42 8 81 1 278 2 358 2 256 2 214 1 171 1 
281 1 53 1 361 1 338 2 109 1 133 2 25 6 198 1 179 1 32 2 301 1 369 2 347 1 184 1 40 2 351 1 41 6 42 12 273 1 81 1 278 2 358 1 256 2 214 1 258 1 
281 1 1 1 283 1 53 4 175 1 361 1 338 2 109 1 133 2 198 1 25 8 7 1 204 1 179 1 32 1 316 1 301 2 369 3 347 4 184 4 40 2 351 1 41 10 42 18 273 1 81 1 278 8 358 3 256 5 213 2 214 4 171 1 258 1 
281 1 53 4 361 1 338 3 109 1 133 2 198 1 25 7 290 1 179 1 32 2 301 3 369 3 347 4 184 4 40 3 351 1 41 9 42 16 273 1 81 1 278 8 358 3 256 6 213 2 214 4 258 1 
175 2 41 3 133 1 42 7 25 4 7 3 204 3 316 1 358 3 256 6 301 3 369 1 171 1 
281 1 1 1 53 4 175 1 361 1 338 2 109 1 133 2 198 1 25 8 290 1 7 1 204 1 179 1 32 1 316 1 301 1 369 3 347 4 184 4 40 2 351 1 41 10 42 18 273 1 81 1 278 8 358 3 256 4 213 2 214 4 171 1 258 1 
347 2 1 1 53 2 175 1 184 2 41 4 133 1 42 8 25 4 7 1 204 1 278 4 256 3 358 2 316 1 213 1 369 1 301 1 214 2 171 1 
25 3 1 1 7 1 175 1 80 1 204 1 41 3 256 2 358 2 316 1 133 1 42 6 369 1 171 1 
347 1 283 1 53 1 184 1 338 1 40 1 41 2 133 1 42 4 25 2 278 2 32 1 358 1 256 2 214 1 369 1 301 1 
25 1 179 1 41 1 351 1 42 2 109 1 
1 1 53 1 175 1 338 2 133 5 109 2 25 12 315 1 7 2 204 2 156 1 32 2 316 1 369 5 301 4 347 1 184 1 119 1 40 2 41 13 351 2 42 25 305 1 278 2 358 4 256 8 213 1 214 1 171 2 
25 1 42 1 109 1 
41 1 351 1 42 1 
84 1 347 1 53 1 283 1 184 1 338 1 40 1 41 3 42 6 133 1 25 3 278 2 32 1 256 3 358 2 214 1 369 1 301 1 
281 1 53 1 361 1 338 2 109 1 133 2 25 6 198 1 179 1 32 2 301 1 369 2 347 1 184 1 40 2 351 1 41 6 42 12 273 1 81 1 278 2 358 1 256 2 214 1 258 1 
25 3 7 1 204 1 256 2 358 1 41 3 133 1 42 6 301 1 369 1 171 1 
347 1 53 1 175 1 184 1 41 1 153 1 42 3 25 2 7 1 204 1 278 2 256 2 358 1 316 1 213 1 301 1 214 1 
30 1 169 1 250 1 82 1 74 1 145 1 170 1 
13 1 250 1 251 1 74 1 323 1 45 1 30 1 169 1 82 1 170 1 145 1 271 1 
336 1 121 1 140 1 123 1 262 1 228 1 192 4 112 4 212 4 48 1 137 1 114 1 379 1 
336 1 163 1 14 1 143 1 57 1 262 1 325 1 228 2 231 1 276 1 192 2 112 2 212 2 379 1 
215 1 194 1 274 1 52 1 336 1 228 1 192 1 112 1 212 1 48 1 
262 1 336 1 228 1 135 1 192 2 121 1 196 1 112 2 212 2 154 1 379 1 
336 2 140 1 121 1 196 1 123 1 57 1 262 2 228 2 378 1 192 5 328 1 112 4 212 5 48 1 114 1 379 3 
336 2 140 1 121 1 196 1 123 1 303 1 57 1 262 2 228 2 192 5 328 1 112 4 212 5 48 1 114 1 379 3 
262 1 336 1 228 1 80 1 140 1 192 1 112 1 212 1 48 1 114 1 379 1 
182 1 336 1 348 1 23 1 74 2 252 1 143 2 165 1 76 2 262 2 228 1 169 2 192 1 357 1 295 1 112 1 82 1 145 2 212 1 48 1 115 1 379 2 
336 1 57 1 262 1 228 1 112 1 295 1 115 1 348 1 352 1 74 2 143 1 76 1 165 1 169 2 192 1 357 1 212 1 145 1 82 1 379 1 
336 1 57 1 262 1 228 1 112 1 295 1 115 1 34 1 352 1 74 2 143 1 76 1 165 1 169 2 192 1 357 1 212 1 145 1 82 1 379 1 
182 1 37 1 336 1 284 1 149 1 3 1 39 2 143 1 340 1 57 1 262 1 228 1 210 1 308 1 192 3 112 3 212 3 48 1 137 1 103 2 93 1 359 1 379 4 
182 1 66 1 37 1 336 1 149 1 3 1 39 2 143 1 340 1 57 1 262 1 228 1 210 1 192 3 112 3 212 3 48 1 137 1 103 2 93 1 359 1 379 4 
189 1 336 1 228 1 192 1 112 1 212 1 
336 2 139 1 121 1 196 1 142 1 143 1 189 1 262 2 325 1 228 3 378 1 60 1 135 1 276 1 328 1 192 7 112 6 212 7 297 1 48 2 379 3 
336 1 1 1 53 2 7 1 204 1 111 1 112 1 295 1 115 1 346 1 347 2 348 1 350 1 121 1 74 2 252 1 124 2 165 1 76 2 169 2 357 1 358 2 256 2 82 2 212 1 214 2 171 1 216 1 259 1 221 1 175 1 23 1 133 1 25 3 262 2 228 1 316 1 369 1 182 1 184 2 41 3 42 6 143 2 377 1 191 1 240 2 278 4 192 1 145 2 332 1 379 2 
149 1 3 1 56 1 340 1 7 1 204 1 343 2 112 1 295 1 115 1 300 1 65 1 66 1 249 1 12 1 161 1 74 1 209 1 305 1 76 1 125 1 355 2 210 1 169 1 212 1 171 1 218 2 132 1 133 2 89 4 229 1 267 1 136 4 268 1 33 1 369 2 93 1 37 2 39 3 100 1 192 1 145 1 147 2 48 1 331 2 103 3 379 2 
336 1 149 1 223 1 121 1 143 1 189 1 262 1 228 2 60 1 192 2 112 2 212 2 379 2 
182 1 336 1 23 1 74 2 252 1 143 2 165 1 76 2 262 2 228 1 169 2 192 1 357 1 295 1 112 1 82 1 145 2 212 1 48 1 115 1 379 2 34 1 
336 1 139 1 143 1 57 1 262 1 325 1 228 2 60 1 276 1 192 1 112 1 212 1 379 1 
292 1 260 1 105 1 321 1 82 1 
104 1 105 2 260 2 39 2 23 1 16 1 321 2 252 1 340 1 155 1 292 1 210 1 267 1 279 1 206 1 82 1 115 1 103 2 93 1 
195 1 105 1 260 1 74 1 292 1 77 1 169 1 145 1 270 1 
292 1 104 1 206 1 
97 1 200 1 313 1 320 1 88 1 9 1 129 1 226 1 
70 1 313 4 88 1 164 1 226 1 97 2 200 2 341 2 62 1 144 1 126 1 9 3 298 1 129 4 
313 2 320 1 88 1 242 1 17 1 197 1 226 1 97 1 200 1 341 1 9 1 129 2 
70 2 313 3 320 1 88 1 226 1 97 1 200 1 62 1 205 1 9 1 129 3 298 2 
117 1 314 1 9 2 365 2 
293 1 313 1 320 1 88 1 129 1 226 1 
97 1 200 1 341 1 87 1 313 2 320 1 88 1 9 1 129 2 226 1 
10 1 
97 1 200 1 313 1 320 1 88 1 9 1 129 1 226 1 
97 1 200 1 80 1 9 1 
97 1 200 1 313 1 88 1 9 1 129 1 226 1 
118 1 313 1 127 1 
97 1 200 1 70 1 313 3 62 1 320 1 88 1 9 1 298 2 129 3 375 1 226 1 
97 1 200 1 341 1 313 2 15 1 88 1 9 1 129 2 226 1 
194 1 274 1 313 1 320 1 126 1 88 1 9 1 122 1 180 1 129 1 226 1 
200 1 313 1 320 1 88 1 9 1 129 1 226 1 
97 1 200 2 313 1 320 1 88 1 129 1 226 1 
313 1 320 1 88 1 226 1 230 1 356 1 129 1 
313 3 87 1 320 1 88 1 164 1 226 1 324 1 97 1 200 1 341 2 126 1 9 2 129 3 
52 1 194 1 313 2 94 1 72 1 320 1 88 1 122 1 226 1 97 1 274 2 200 1 341 1 9 1 129 2 
313 4 320 1 88 2 15 1 164 1 226 2 97 1 78 1 200 1 341 2 126 1 9 2 129 4 
313 3 87 1 320 1 88 1 226 1 97 1 341 1 200 1 9 1 129 3 298 1 
144 1 126 1 164 1 9 1 
200 1 9 1 

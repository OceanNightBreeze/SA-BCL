#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (168,257) (168,257) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (168,257) (168,257) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (168,257) (168,257) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (168,257) (168,257) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 113 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 113 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 73 116 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 73 116 66 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 73 273 135 5 (60,282) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 90 120 274 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 90 120 274 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 90 120 274 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 90 120 274 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 90 120 274 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 101 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 73 110 311 42 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 73 116 68 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 73 116 119 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 90 272 18 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 90 85 43 188 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 73 273 135 5 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 90 85 43 188 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 73 273 135 5 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 73 116 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 73 116 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 73 53 255 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 73 53 255 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 73 53 255 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 73 53 255 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 73 53 255 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 90 272 18 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 78 334 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 73 116 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 97 49 172 (83,132) (83,132) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 101 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 73 110 125 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 73 110 311 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 73 110 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 90 265 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 73 155 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 90 85 343 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 73 327 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 97 49 172 184 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 90 85 43 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 90 85 43 260 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 97 49 172 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 73 110 125 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 97 49 172 (83,132) (83,132) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 73 110 125 153 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 97 49 172 (83,132) (83,132) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 71 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 71 247 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 2 123 1 134 1 180 9 95 2 263 1 246 1 168 1 308 9 81 4 323 1 108 2 310 2 56 2 257 1 89 6 157 2 348 2 15 1 316 1 261 1 335 1 74 1 92 4 163 1 77 3 
321 2 123 1 134 1 180 9 95 2 263 1 246 1 168 1 308 9 81 4 323 1 108 2 310 2 257 1 56 2 89 6 157 2 348 2 15 1 316 1 261 1 335 1 74 1 92 4 163 1 77 3 
321 2 123 1 134 1 180 9 95 2 263 1 246 1 168 1 308 9 81 4 323 1 108 2 310 2 257 1 56 2 89 6 157 2 348 2 15 1 316 1 261 1 335 1 74 1 92 4 163 1 77 3 
321 2 123 1 134 1 180 7 95 1 263 1 246 1 168 1 308 7 81 3 323 1 108 2 310 2 257 1 56 2 89 4 157 2 348 2 15 1 316 1 261 1 74 1 92 3 163 1 77 2 
180 4 95 2 263 1 308 4 108 1 81 2 310 1 56 1 157 1 89 3 348 1 261 1 335 1 74 1 92 2 77 1 
321 1 180 2 245 1 218 1 246 1 308 2 81 1 323 1 108 1 310 1 157 1 348 1 315 1 45 1 261 1 354 1 
321 1 180 3 308 3 81 2 157 2 89 1 348 2 45 1 261 1 92 1 163 1 354 1 77 1 
321 1 123 1 134 1 180 9 95 2 263 1 230 1 308 9 108 1 81 4 310 1 56 1 157 2 89 7 348 2 113 1 261 1 335 1 74 1 92 4 163 1 77 3 
321 1 123 1 134 1 180 9 95 2 263 1 230 1 308 9 108 1 81 4 310 1 56 1 157 2 89 7 348 2 113 1 261 1 335 1 74 1 92 4 163 1 77 3 
101 1 149 1 11 1 
16 2 11 1 250 1 
236 1 4 2 9 2 161 2 336 1 87 2 239 2 76 2 
122 1 284 1 169 1 3 1 100 1 170 1 128 1 4 3 237 1 266 1 195 1 174 1 197 2 9 2 336 1 338 1 239 2 271 1 254 1 87 2 88 2 44 1 70 1 158 2 73 1 19 1 116 1 161 3 76 2 
4 1 6 1 151 1 8 1 9 1 161 1 336 1 87 1 239 1 76 1 
121 1 322 1 104 1 11 1 185 1 87 1 126 1 4 1 149 1 6 1 289 1 317 1 32 1 161 1 
322 1 104 1 11 1 87 1 126 1 4 1 149 1 6 1 289 1 317 2 9 1 32 2 161 1 76 1 239 1 
205 1 317 1 32 1 211 1 148 1 
149 1 205 1 194 1 317 2 299 1 32 2 11 1 211 1 
205 1 317 1 32 1 
87 1 211 1 4 1 6 1 151 1 317 1 8 1 9 1 32 1 336 1 161 1 118 1 76 1 239 1 
11 1 
149 1 205 1 194 1 317 2 59 1 32 2 11 1 211 1 
205 2 283 1 344 1 145 1 64 1 332 2 11 1 98 1 136 1 211 2 193 1 149 1 194 1 103 2 298 2 317 5 32 5 238 1 141 1 
236 1 101 1 
87 2 192 1 4 2 236 2 9 1 161 2 162 1 76 1 239 1 
259 1 82 1 282 1 
122 1 254 1 88 1 170 1 44 1 236 1 4 1 223 1 158 1 237 1 70 1 195 1 197 1 174 1 161 1 338 1 
0 1 207 1 185 1 87 5 12 1 192 1 4 5 236 1 333 1 9 4 161 5 319 2 239 4 76 1 
4 2 6 1 151 1 96 1 9 2 161 2 87 2 239 2 
236 1 4 3 9 3 161 3 87 3 319 1 76 1 239 3 
4 1 6 1 151 1 9 1 161 1 87 1 239 1 
4 1 6 1 9 1 161 1 162 1 87 1 239 1 76 1 192 1 
122 1 284 1 169 1 126 1 100 1 170 1 192 1 4 4 333 1 237 1 195 1 6 1 289 1 174 1 197 1 317 1 9 3 32 1 336 1 338 1 319 1 239 3 271 1 322 1 104 1 254 1 66 1 87 3 88 1 44 1 70 1 158 1 328 1 73 1 19 1 116 1 161 4 76 2 
236 1 4 2 0 1 9 1 161 2 185 1 87 2 319 1 239 1 
322 1 104 1 11 1 87 3 126 1 192 1 333 1 4 3 6 1 289 1 279 1 317 1 328 1 9 3 32 1 161 3 319 2 76 1 239 3 
4 2 259 1 9 2 161 2 87 2 319 1 239 2 76 1 282 1 192 1 
122 1 254 1 88 1 170 1 44 1 236 1 4 1 158 1 237 1 70 1 195 1 197 1 174 1 161 1 338 1 
122 1 88 1 170 1 44 1 236 1 4 1 158 1 187 1 70 1 195 1 278 1 197 1 174 1 161 1 338 1 
5 1 306 1 284 1 73 1 273 1 19 1 135 1 60 1 100 1 
4 1 6 1 104 1 96 1 9 1 161 1 87 1 239 1 
122 1 254 1 87 1 88 1 170 1 44 1 333 1 4 2 70 1 237 1 158 1 195 1 174 1 197 1 9 1 161 2 338 1 319 1 239 1 282 1 
38 1 256 1 
38 1 256 1 
309 1 178 1 
309 1 178 1 
309 1 178 1 
342 1 38 1 256 1 
91 1 38 1 256 1 
309 1 38 2 178 1 256 2 221 1 313 1 
342 1 38 1 256 1 
342 1 38 1 256 1 
38 1 147 1 256 1 
38 1 147 1 256 1 
38 1 147 1 256 1 
25 1 26 1 52 1 331 1 208 1 2 1 236 1 4 2 317 1 9 2 32 1 239 2 179 1 341 1 240 1 38 1 87 2 256 1 14 1 326 1 91 1 161 2 300 1 302 1 
208 2 2 2 146 1 4 1 6 1 151 1 317 2 8 1 9 1 32 2 269 1 336 1 239 1 320 1 179 1 341 2 240 2 253 1 38 2 87 1 256 2 14 2 352 1 161 1 353 1 226 1 118 1 76 1 
108 1 310 1 56 1 
218 1 108 1 310 1 
115 1 218 1 152 1 108 3 345 1 56 2 
29 1 115 1 218 1 108 2 345 1 56 1 
115 2 218 1 108 2 345 1 56 1 
205 1 25 1 26 1 332 1 98 2 211 4 287 1 149 1 194 1 103 1 58 1 317 5 32 5 250 1 182 1 85 1 295 1 344 1 273 1 37 1 135 1 64 3 11 2 13 2 326 1 43 1 200 2 298 1 260 1 16 3 351 2 303 1 
205 1 210 1 55 1 211 2 148 1 4 1 149 1 6 1 151 1 84 1 317 2 8 1 9 1 32 2 336 1 239 1 11 1 87 1 161 1 118 1 76 1 
26 1 332 1 98 2 211 2 287 1 149 1 103 1 58 1 317 3 32 3 250 2 238 1 85 1 273 1 37 1 135 1 64 3 11 3 13 1 43 1 200 2 298 1 260 1 351 2 16 4 303 1 
26 2 332 1 27 1 98 4 211 3 287 1 149 1 248 1 103 1 58 1 317 4 32 4 250 3 238 1 85 2 273 2 37 1 135 2 64 5 11 4 13 2 242 1 43 2 200 4 298 1 260 2 16 7 351 4 303 1 
101 1 79 1 338 1 
78 1 338 1 
232 1 
70 1 174 1 338 1 
275 1 338 1 
70 1 338 1 
70 1 79 2 174 1 106 1 338 3 251 1 
120 1 213 1 90 1 274 1 
120 1 213 1 90 1 274 1 
120 1 213 1 90 1 296 1 274 1 
120 1 213 1 90 1 274 1 
120 1 213 1 90 1 274 1 
122 1 308 2 81 1 285 1 310 1 56 1 99 1 28 1 212 1 195 1 197 1 152 1 33 1 339 1 321 1 217 1 180 2 218 1 108 2 88 1 258 1 89 1 157 1 158 1 348 1 202 1 45 1 261 1 142 1 354 1 
244 1 122 1 144 1 308 3 81 1 285 1 310 1 56 1 28 1 212 1 195 1 197 1 152 1 33 1 339 1 321 1 217 1 180 3 218 1 108 2 88 1 258 1 157 1 89 2 140 1 158 1 348 1 202 1 45 1 354 1 
244 1 122 1 144 1 308 2 81 1 285 1 310 1 56 1 28 1 195 1 197 1 152 1 339 1 321 1 217 1 180 2 218 1 108 2 88 1 258 1 89 2 158 1 202 1 45 1 354 1 
305 1 321 2 122 1 180 1 217 2 63 1 308 1 67 1 88 1 170 1 157 1 140 1 28 2 70 1 348 1 158 1 195 1 197 1 243 1 20 1 338 1 339 2 35 1 
244 1 122 1 308 1 285 1 310 1 56 1 99 1 28 1 212 1 195 1 197 1 152 1 33 1 339 1 321 1 217 1 180 1 218 1 108 2 88 1 258 1 157 1 158 1 348 1 202 1 261 1 
292 1 
143 1 98 2 234 1 4 1 149 1 194 3 195 1 6 1 103 1 58 1 197 2 7 1 317 5 270 2 322 1 104 1 63 1 241 2 64 2 65 1 11 2 67 1 199 2 70 1 158 2 159 1 16 2 160 1 161 1 205 6 121 1 122 1 80 1 332 1 126 1 170 2 129 2 289 1 131 1 32 5 250 2 338 1 216 1 36 1 344 1 88 2 185 1 87 1 297 4 349 2 298 1 47 1 262 1 227 2 51 2 
121 1 205 2 126 1 4 1 6 1 194 1 289 1 7 1 317 3 59 1 32 3 216 1 322 1 104 1 65 1 87 1 185 1 297 2 349 1 159 1 262 1 161 1 
205 1 121 1 126 1 4 1 149 1 6 1 194 1 289 1 7 1 317 3 59 1 32 3 216 1 322 1 104 1 65 1 11 1 87 1 185 1 297 3 159 1 262 1 161 1 51 1 
121 1 205 2 126 1 4 1 149 1 194 1 6 1 289 1 7 1 317 3 59 1 32 3 216 1 322 1 104 1 65 1 11 1 87 1 185 1 297 3 349 1 159 1 262 1 161 1 227 1 51 1 
143 1 121 1 205 7 332 1 98 1 126 1 4 1 149 5 129 2 194 3 6 1 103 1 289 1 267 1 7 1 317 5 59 1 32 5 250 2 270 2 216 1 36 1 322 1 104 1 344 1 183 1 241 2 64 1 65 1 40 1 11 5 199 2 87 1 185 1 276 1 297 6 298 1 349 4 159 1 262 1 161 1 227 4 304 1 51 4 
143 1 98 1 4 1 149 1 6 1 194 2 103 1 7 1 317 4 270 2 104 1 322 1 65 1 64 1 241 2 11 2 199 2 159 1 16 2 161 1 121 1 205 4 80 1 332 1 126 1 129 2 289 1 32 4 250 2 216 1 36 1 344 1 87 1 185 1 297 4 298 1 349 2 262 1 227 2 51 2 
143 1 205 4 121 1 332 1 98 1 126 1 4 1 149 1 194 2 129 2 6 1 289 1 103 1 7 1 267 1 317 4 32 4 250 2 270 2 216 1 36 1 322 1 104 1 344 1 241 2 64 1 65 1 11 1 40 1 199 2 87 1 185 1 297 4 349 2 298 1 159 1 262 1 161 1 227 2 51 2 304 1 
143 1 205 4 121 1 332 1 98 1 126 1 4 1 149 1 194 2 129 2 6 1 289 1 103 1 7 1 267 1 317 4 32 4 250 2 270 2 216 1 36 1 322 1 104 1 344 1 241 2 64 1 65 1 11 1 40 1 199 2 87 1 185 1 297 4 349 2 298 1 159 1 262 1 161 1 227 2 51 2 304 1 
143 1 205 4 121 1 332 1 98 1 126 1 4 1 149 1 194 2 129 2 6 1 289 1 103 1 7 1 175 2 317 4 32 4 270 2 216 1 181 2 322 1 104 1 344 1 64 1 65 1 11 1 87 1 185 1 222 1 297 4 349 2 298 1 159 1 350 1 16 2 262 1 224 1 161 1 227 2 51 2 304 1 
143 1 121 1 205 5 332 1 98 1 126 1 4 1 149 1 194 2 129 2 6 1 103 1 289 1 267 1 7 1 317 4 32 4 250 2 270 2 216 1 36 1 322 1 104 1 344 1 241 2 64 1 65 1 11 1 40 1 199 2 87 1 185 1 276 1 297 5 298 1 349 3 159 1 262 1 161 1 227 3 304 1 51 3 
143 1 121 1 205 5 332 1 98 1 126 1 4 1 149 1 194 2 129 2 6 1 103 1 289 1 267 1 7 1 317 4 32 4 250 2 270 2 216 1 36 1 322 1 104 1 344 1 241 2 64 1 65 1 11 1 40 1 199 2 87 1 185 1 276 1 297 5 298 1 349 3 159 1 262 1 161 1 227 3 304 1 51 3 
143 1 98 1 4 1 149 1 6 1 194 2 103 1 7 1 317 4 270 2 104 1 322 1 65 1 64 1 11 1 159 1 16 2 161 1 121 1 205 4 80 1 332 1 126 1 129 2 289 1 175 2 32 4 216 1 181 2 344 1 87 1 185 1 222 1 297 4 298 1 349 2 262 1 227 2 51 2 
101 1 306 1 83 1 284 1 19 1 97 1 49 1 132 1 100 1 172 1 
284 1 73 1 19 1 286 1 311 1 100 1 42 1 110 1 
284 1 286 1 87 1 68 1 100 1 333 1 4 1 73 1 9 1 19 1 116 1 161 1 319 1 239 1 
284 1 286 1 88 1 87 1 100 1 170 1 333 1 4 1 158 1 197 1 73 1 9 1 19 1 116 1 161 1 119 1 319 1 239 1 
90 1 158 1 288 1 197 1 272 1 284 1 18 1 19 1 88 1 170 1 100 1 
85 1 284 1 286 1 87 1 100 1 43 1 192 1 4 1 90 1 260 1 19 1 9 1 161 1 301 1 76 1 239 1 
90 1 306 1 85 1 284 1 19 1 188 1 100 1 43 1 
5 1 306 1 284 1 73 1 273 1 19 1 135 1 100 1 
90 1 306 1 85 1 260 1 284 1 19 1 100 1 43 1 
90 1 288 1 85 1 284 1 19 1 188 1 100 1 43 1 
5 1 288 1 284 1 73 1 273 1 19 1 135 1 100 1 
90 1 288 1 85 1 260 1 284 1 19 1 100 1 43 1 
90 1 85 1 260 1 284 1 19 1 100 1 43 1 
271 1 122 1 284 1 254 1 88 1 100 1 170 1 44 1 4 1 158 1 237 1 70 1 195 1 197 1 174 1 73 1 19 1 116 1 161 1 338 1 
122 1 284 1 88 1 100 1 170 1 44 1 4 1 158 1 187 1 70 1 195 1 196 1 278 1 197 1 174 1 73 1 19 1 116 1 161 1 338 1 
90 1 85 1 260 1 284 1 19 1 286 1 100 1 43 1 
271 1 122 1 85 1 284 1 254 1 88 1 100 1 43 1 44 1 4 1 90 1 70 1 158 1 237 1 195 1 260 1 197 1 174 1 291 1 19 1 161 1 338 1 142 1 
85 1 284 1 286 1 87 1 100 1 43 1 192 1 4 1 90 1 260 1 30 1 19 1 9 1 161 1 76 1 239 1 
229 1 124 1 86 1 53 1 73 1 93 1 255 1 100 1 
229 1 124 1 86 1 53 1 73 1 93 1 255 1 100 1 
229 1 124 1 86 1 53 1 73 1 93 1 255 1 100 1 
229 1 124 1 86 1 53 1 73 1 93 1 255 1 100 1 
229 1 124 1 86 1 53 1 73 1 93 1 255 1 100 1 
46 1 341 1 10 1 240 1 2 1 38 1 256 1 137 1 14 1 313 1 
91 1 300 1 
330 1 341 1 240 1 2 1 38 1 164 1 156 1 256 1 14 1 
342 1 215 1 
147 1 221 1 228 1 
208 2 2 1 146 1 4 1 6 1 151 1 317 1 8 1 9 1 32 1 269 1 336 1 239 1 320 1 179 1 341 1 240 1 253 1 38 1 87 1 256 1 14 1 352 1 161 1 353 1 226 1 118 1 76 1 
208 2 2 1 146 1 4 1 6 1 151 1 317 1 8 1 9 1 32 1 269 1 336 1 239 1 320 1 179 1 341 1 240 1 253 1 38 1 87 1 256 1 14 1 352 1 161 1 353 1 226 1 118 1 76 1 
208 2 2 1 146 1 4 1 6 1 151 1 317 1 8 1 9 1 32 1 269 1 336 1 239 1 320 1 179 1 341 1 240 1 253 1 38 1 87 1 256 1 14 1 352 1 161 1 353 1 226 1 118 1 76 1 
342 1 221 1 215 1 
342 1 221 1 215 1 
147 1 228 1 
147 1 221 1 228 1 
52 1 302 1 
25 1 26 1 52 1 331 1 2 1 208 1 146 1 211 1 171 1 236 1 4 2 317 1 9 2 32 1 269 1 239 2 341 1 240 1 38 1 87 2 256 1 14 1 326 1 91 1 161 2 300 1 302 1 
272 1 284 1 286 1 87 2 100 1 4 2 314 1 90 1 18 1 268 1 19 1 161 2 189 1 293 1 
244 1 122 1 218 1 108 2 54 1 285 1 310 1 88 2 56 1 325 1 158 2 195 1 202 1 197 2 152 1 203 1 33 1 339 1 142 1 
244 1 122 1 218 1 108 2 285 1 310 1 88 1 56 1 158 1 130 1 202 1 195 1 197 1 152 1 203 1 33 1 339 1 
122 1 63 1 54 1 67 1 88 1 170 1 70 1 158 1 195 1 197 1 243 1 280 1 338 1 339 1 
244 1 122 1 218 1 108 2 54 1 285 1 310 1 88 1 56 1 325 1 158 1 195 1 202 1 197 1 152 1 203 1 33 1 339 1 
139 1 
101 1 149 1 64 1 11 1 98 1 141 1 193 1 
205 1 332 1 98 1 149 1 194 1 103 1 317 1 32 1 250 1 36 1 344 1 241 1 64 1 11 2 199 1 298 1 16 1 
78 1 122 1 344 1 332 1 88 1 170 1 70 1 158 1 334 1 195 2 103 1 298 1 150 1 174 1 197 1 338 1 251 1 
24 1 205 1 125 1 332 2 98 5 265 1 149 2 194 1 103 2 58 1 317 1 176 1 131 1 32 1 153 1 337 2 250 3 198 1 85 2 344 2 273 2 64 8 135 2 11 5 110 1 43 2 200 5 298 2 260 2 16 6 351 5 114 1 329 1 22 1 204 1 
332 1 98 2 172 1 4 1 6 1 151 1 103 1 267 1 317 1 8 1 9 1 32 1 336 1 337 2 239 1 85 2 343 1 344 1 184 1 273 1 64 2 87 1 298 1 329 1 49 1 161 1 118 1 76 1 
344 1 64 1 332 1 98 1 11 1 193 1 149 1 103 1 298 1 141 1 
85 2 155 1 273 2 135 2 64 5 98 5 11 5 43 2 200 5 260 2 351 5 16 10 329 1 337 2 250 5 
149 1 205 1 194 1 317 1 32 1 11 1 
205 4 122 1 332 2 98 2 170 2 173 1 195 1 194 2 103 2 197 4 58 2 290 2 317 3 131 2 32 3 318 1 238 1 338 1 63 1 344 1 64 2 346 1 67 1 88 4 70 1 158 4 298 2 160 1 47 1 
122 1 284 1 169 1 170 1 100 1 4 3 237 1 195 1 197 1 174 1 9 2 336 1 338 1 239 2 271 1 254 1 88 1 87 2 44 1 158 1 70 1 73 1 19 1 116 1 161 3 76 2 
120 1 344 1 64 1 332 1 98 2 11 4 200 2 149 2 103 1 298 1 58 1 351 2 16 4 131 1 250 2 
201 1 240 1 2 1 
10 1 240 1 50 1 2 1 302 1 
201 1 240 1 2 1 
201 1 240 1 2 1 
240 1 2 1 347 1 
240 1 2 1 347 1 
240 1 2 1 347 1 
240 1 2 1 
38 1 256 1 
83 1 97 1 49 1 132 1 127 1 100 2 172 1 
101 1 83 1 97 1 49 1 132 1 172 1 
90 1 85 1 260 1 186 1 100 1 43 1 
73 1 125 1 110 1 
73 1 311 1 110 1 
73 1 110 1 
90 1 265 1 
155 1 73 1 
124 1 73 1 125 1 153 1 100 1 110 1 
90 1 85 1 343 1 
327 1 73 1 
184 1 97 1 49 1 172 1 
90 1 124 1 85 1 100 1 43 1 
90 1 124 1 85 1 260 1 100 1 43 1 
124 1 97 1 49 1 100 1 172 1 
124 1 73 1 125 1 186 1 233 1 34 1 100 3 110 1 
124 1 73 1 125 1 153 1 100 1 110 1 
124 1 73 1 125 1 153 1 186 1 100 2 110 1 
124 1 73 1 125 1 153 1 100 1 110 1 
124 1 73 1 125 1 153 1 100 1 110 1 
124 1 73 1 125 1 153 1 100 1 110 1 
124 1 73 1 125 1 153 1 100 1 110 1 
124 1 73 1 125 1 153 1 186 1 100 2 110 1 
124 1 73 1 125 1 153 1 233 1 100 2 110 1 
83 1 97 1 49 1 132 1 172 1 
124 1 73 1 125 1 153 1 233 1 100 2 110 1 
236 1 4 1 165 1 0 1 161 1 87 1 185 1 
340 1 165 1 0 1 252 1 185 1 87 1 109 1 236 1 4 1 72 1 161 1 21 1 
101 1 70 1 158 1 195 1 122 1 197 1 63 1 67 1 88 1 338 1 170 1 
122 1 87 1 88 1 170 1 44 1 236 1 4 2 70 1 158 1 237 1 195 1 174 1 197 1 9 1 161 2 338 1 319 1 239 1 
122 1 206 1 126 1 236 1 4 2 237 1 195 1 6 1 197 1 174 2 290 1 9 1 338 3 319 1 239 2 104 1 88 1 87 2 275 1 44 1 158 1 70 2 161 2 
122 1 206 1 126 1 236 1 4 2 195 1 6 1 197 2 174 2 290 1 9 1 249 1 338 3 319 1 239 2 104 1 88 2 87 2 275 1 44 1 187 1 158 2 70 2 161 2 
205 1 78 1 122 1 206 1 79 1 231 1 170 1 149 1 195 1 289 1 197 3 174 1 290 1 317 2 249 1 32 2 338 4 11 1 88 3 275 1 111 1 158 3 70 1 
78 1 205 1 206 1 294 1 122 1 79 1 11 1 275 1 88 3 170 1 149 1 70 1 158 3 195 1 289 1 174 1 197 3 290 1 317 2 249 1 32 2 338 4 
158 1 195 1 122 1 197 1 88 1 41 1 
244 1 122 2 105 1 190 1 88 7 41 1 170 2 235 1 312 1 128 1 277 1 158 7 70 2 195 3 197 6 174 1 48 1 177 1 338 3 142 1 251 1 
122 1 284 2 97 1 286 1 100 2 172 1 314 1 4 2 237 1 195 1 83 1 197 1 174 1 291 1 9 1 132 1 338 1 319 1 239 1 271 1 254 1 87 1 88 1 220 1 44 1 70 1 158 1 19 2 49 1 161 2 142 1 
23 1 78 1 205 2 79 1 167 1 332 2 98 1 170 1 211 1 193 1 149 1 194 1 103 2 289 1 197 1 317 3 32 3 338 2 294 1 344 2 64 1 11 1 346 1 88 1 158 1 298 2 117 1 141 1 
122 1 79 1 232 1 88 1 41 1 158 1 70 1 195 2 150 1 197 1 174 1 338 1 251 1 
94 1 122 1 63 1 67 1 88 4 170 1 158 4 70 1 195 1 197 4 249 1 338 1 142 1 
122 1 264 1 190 1 88 2 277 1 158 2 70 1 57 1 195 2 197 2 174 1 290 1 17 1 338 1 
158 1 195 1 122 1 202 1 197 1 218 1 108 1 310 1 88 1 170 1 
244 1 122 1 88 2 158 2 70 1 195 1 197 2 31 1 48 1 338 1 142 1 
94 1 122 2 63 1 105 1 67 1 88 5 170 1 158 5 70 2 195 2 197 4 290 1 48 1 177 1 338 3 142 1 
94 1 122 2 63 1 105 1 39 1 67 1 88 5 170 1 158 5 70 2 195 2 197 4 290 1 48 1 338 3 142 1 
122 1 87 1 88 1 170 1 44 1 236 1 4 2 70 1 158 1 187 1 195 1 174 1 197 1 9 1 161 2 338 1 319 1 239 1 
122 1 190 1 88 1 312 1 277 1 158 1 70 1 195 2 197 1 174 1 290 1 338 1 251 1 
71 1 268 1 107 1 138 1 
154 1 138 1 247 1 
71 1 268 1 107 1 138 2 
154 1 71 1 268 1 317 1 107 1 32 1 219 1 211 1 138 2 247 1 
101 1 45 1 81 1 354 1 
348 1 180 1 45 1 308 1 81 1 354 1 157 1 
321 1 217 1 308 1 
180 3 62 1 1 1 191 1 308 3 81 1 323 2 157 1 348 1 45 1 261 1 354 1 
348 1 180 2 45 1 95 1 308 2 81 1 354 1 89 1 157 1 
180 1 263 1 308 1 81 1 108 1 310 1 56 1 157 1 348 1 261 1 92 1 
348 1 180 1 261 1 308 1 81 1 354 1 157 1 
348 1 180 1 45 1 261 1 308 1 354 2 157 1 
180 2 308 2 81 1 324 1 157 2 348 2 102 1 261 1 75 1 354 1 
180 3 134 1 123 1 308 3 81 2 157 1 89 2 348 1 45 1 261 1 92 1 354 1 77 1 
180 2 166 1 218 1 308 2 81 1 108 2 310 1 56 1 157 1 89 1 348 1 45 1 261 1 152 1 354 1 
180 4 95 1 308 4 81 2 157 2 89 2 348 2 45 1 261 1 335 1 92 1 354 1 77 1 
348 1 180 1 45 1 261 1 308 1 81 1 354 1 157 1 
180 4 62 1 191 1 308 4 323 1 81 3 89 2 157 1 348 1 45 2 225 1 92 1 354 2 77 1 
180 2 230 1 308 2 81 1 69 1 157 1 89 1 348 1 214 1 45 1 261 1 354 1 
133 1 180 3 62 2 191 1 308 3 81 1 323 2 157 1 348 1 45 1 261 1 354 1 
307 1 81 2 281 2 61 1 
348 1 180 1 261 1 308 1 209 1 157 1 
348 1 123 1 180 2 45 1 261 1 308 2 81 1 354 1 89 1 157 1 
112 1 
348 1 180 1 45 1 261 1 308 1 81 1 354 1 157 1 
180 3 123 1 308 3 323 1 81 1 89 1 157 1 348 1 45 1 261 1 354 1 
225 1 81 1 92 1 77 1 
81 1 354 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 328 (24,342) (24,342) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 328 (24,342) (24,342) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 328 (24,342) (24,342) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 328 (24,342) (24,342) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 128 32 361 165 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 128 32 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 128 32 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 128 245 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 128 32 361 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 128 32 361 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 308 325 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 87 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 1 270 1 97 2 229 2 24 1 210 1 44 1 285 1 272 1 259 1 58 1 7 1 279 1 328 1 221 1 342 1 
122 1 270 1 97 2 229 2 24 1 210 1 44 1 285 1 272 1 259 1 58 1 7 1 279 1 328 1 221 1 342 1 
122 1 270 1 97 2 229 2 24 1 210 1 44 1 285 1 272 1 259 1 58 1 7 1 279 1 328 1 221 1 342 1 
122 1 270 1 97 2 229 2 24 1 210 1 44 1 285 1 272 1 259 1 58 1 7 1 279 1 328 1 221 1 342 1 
71 2 252 3 123 1 270 1 97 4 347 2 229 4 174 1 210 1 285 1 272 1 259 1 328 1 221 1 153 3 260 1 222 1 11 1 
122 1 252 1 270 1 97 2 229 2 323 1 174 1 210 1 44 1 285 1 272 1 129 1 259 1 327 1 279 1 260 1 
71 1 252 2 270 2 97 3 229 3 174 1 210 2 272 1 279 1 329 1 153 1 260 1 11 1 
0 1 347 2 210 2 285 1 114 1 329 1 328 1 221 1 222 1 353 1 11 3 71 4 252 5 97 9 270 2 123 1 229 9 174 1 272 1 259 1 274 1 279 1 153 7 260 1 
0 1 347 2 210 2 285 1 114 1 329 1 328 1 221 1 222 1 353 1 11 3 71 4 252 5 97 9 270 2 123 1 229 9 174 1 272 1 259 1 274 1 279 1 153 7 260 1 
337 1 298 1 19 1 
4 2 298 1 242 1 
355 1 334 2 294 2 60 2 295 2 144 2 369 2 79 1 
134 1 85 1 110 1 66 1 306 1 212 1 211 1 243 1 140 1 215 1 312 1 188 1 9 2 95 1 330 2 331 2 190 1 144 2 146 1 332 2 147 1 227 2 355 1 334 2 294 3 99 1 295 2 356 1 358 1 78 1 79 1 177 1 365 1 104 1 60 3 369 2 205 1 
94 1 334 1 294 1 60 1 295 1 268 1 144 1 61 1 369 1 79 1 
12 1 334 1 294 1 74 1 88 1 115 1 234 1 217 1 298 1 19 1 60 1 132 1 61 1 237 1 
12 1 334 1 294 1 295 1 88 1 115 1 217 2 298 1 19 1 60 1 144 1 132 1 61 1 237 2 369 1 
251 1 217 1 83 1 151 1 237 1 
70 1 251 1 275 1 217 2 298 1 19 1 151 1 237 2 
217 1 151 1 237 1 
251 1 334 1 294 1 295 1 79 1 326 1 217 1 94 1 60 1 268 1 144 1 61 1 237 1 369 1 
298 1 
70 1 33 1 251 1 217 2 298 1 19 1 151 1 237 2 
70 1 251 2 321 1 25 1 75 1 151 2 350 1 197 1 233 2 29 2 56 1 199 2 217 5 8 1 298 1 288 1 19 1 313 1 237 5 
355 1 337 1 
171 1 334 2 355 2 294 2 295 1 57 1 60 2 144 1 369 1 
228 1 52 1 67 1 
134 1 227 1 355 1 85 1 294 1 110 1 356 1 358 1 77 1 177 1 9 1 95 1 330 1 60 1 190 1 104 1 
134 1 227 1 85 1 334 1 110 1 294 2 295 1 356 1 358 1 177 1 31 1 189 1 9 1 67 1 95 1 330 1 104 1 60 2 190 1 369 1 
355 1 31 1 334 3 294 3 60 3 295 3 144 1 369 3 
94 1 334 1 294 1 60 1 295 1 61 1 369 1 
171 1 57 1 334 1 294 1 60 1 295 1 144 1 61 1 369 1 
134 1 85 1 110 1 66 1 306 1 88 1 212 1 211 1 243 1 115 1 215 1 217 1 188 1 31 1 189 1 9 1 95 1 330 1 331 1 190 1 144 2 146 1 332 2 68 1 171 1 12 1 227 1 355 1 98 1 334 3 294 4 295 3 356 1 358 1 79 1 177 1 365 1 104 1 60 4 132 1 61 1 237 1 369 3 205 1 
355 1 334 2 31 1 23 1 294 2 74 1 60 2 295 1 369 1 
171 1 12 1 334 3 98 1 294 3 295 3 88 1 38 1 115 1 217 1 31 2 189 1 298 1 60 3 144 1 61 1 132 1 237 1 369 3 
171 1 334 2 52 1 294 2 295 2 31 1 67 1 60 2 144 1 369 2 
134 1 227 1 355 1 85 1 294 1 110 1 356 1 358 1 177 1 9 1 95 1 330 1 60 1 190 1 104 1 
134 1 227 1 355 1 85 1 294 1 110 1 43 1 356 1 9 1 95 1 330 1 60 1 190 1 104 1 169 1 
194 1 306 1 66 1 35 1 308 1 212 1 243 1 167 1 215 1 188 1 331 1 365 1 155 1 332 2 
334 1 294 1 60 1 295 1 61 1 132 1 369 1 359 1 
171 1 334 5 355 1 23 1 294 5 74 1 295 4 31 2 103 1 189 1 59 1 60 5 144 1 369 4 
94 1 334 2 294 2 60 2 295 2 61 1 359 1 369 2 
183 1 46 1 
183 1 46 1 
230 1 191 1 
230 1 191 1 
230 1 191 1 
183 1 154 1 46 1 
183 1 154 1 46 1 
183 1 154 1 46 1 
183 1 363 1 46 1 
152 1 301 1 183 2 230 1 191 1 46 2 
183 1 126 1 46 1 
183 1 126 1 46 1 
183 1 126 1 46 1 
183 2 64 2 253 1 208 1 283 1 166 2 152 1 6 3 217 2 202 2 298 1 203 2 46 2 120 1 106 1 158 1 343 1 314 2 237 2 
63 1 62 1 183 1 27 1 284 1 166 1 6 1 265 1 217 1 46 1 223 1 314 1 355 1 253 1 334 2 294 2 295 2 296 1 363 1 202 1 203 1 60 2 237 1 369 2 
259 1 221 1 285 1 
259 1 323 1 285 1 
221 2 323 1 336 1 285 3 250 1 236 1 
195 1 221 1 323 1 285 2 250 1 236 1 
221 1 323 1 285 2 250 1 236 2 
63 1 262 1 322 2 308 1 27 1 242 1 325 1 167 1 116 1 4 2 29 1 265 1 217 5 30 1 8 2 225 1 70 1 251 4 173 1 148 1 151 1 197 1 233 1 56 2 277 1 176 1 199 1 298 2 19 1 366 1 237 5 42 1 
304 1 321 1 262 1 308 3 242 3 310 5 139 1 325 3 167 3 116 3 4 6 29 2 265 4 217 9 8 5 45 1 225 2 251 7 70 1 15 1 173 3 40 1 151 6 197 1 233 2 56 6 277 3 176 3 199 2 280 1 298 5 19 1 83 5 366 2 237 9 
321 1 322 1 308 1 242 1 325 1 167 1 116 1 29 1 4 2 326 1 265 1 30 1 217 3 94 1 8 2 268 1 144 1 225 1 251 2 334 1 294 1 148 1 173 1 295 1 79 1 233 1 56 2 199 1 176 1 277 1 298 2 19 1 60 1 366 1 61 1 237 3 369 1 
321 1 322 2 242 2 325 2 4 4 326 1 94 1 8 3 144 1 251 3 334 1 294 1 15 1 148 1 295 1 56 4 199 1 298 3 19 1 60 1 61 1 308 2 116 2 167 2 29 1 265 2 30 1 217 4 268 1 225 1 173 2 40 1 233 1 79 1 176 2 277 2 280 1 366 1 237 4 369 1 
134 1 337 1 37 1 
134 1 86 1 
111 1 
134 1 356 1 
134 3 108 1 37 2 104 1 356 1 324 1 
134 1 104 1 356 1 
134 1 89 1 
84 1 302 1 147 3 160 1 109 1 254 1 307 1 101 1 212 3 53 2 167 1 116 1 81 1 331 6 290 1 248 1 96 1 
84 1 302 1 147 3 160 1 109 1 254 1 307 1 101 1 212 3 53 2 167 1 116 1 81 1 331 6 290 1 248 1 96 1 
84 1 302 1 147 3 160 1 109 1 254 1 137 1 307 1 101 1 212 3 53 2 167 1 116 1 81 1 331 6 290 1 248 1 96 1 
84 2 302 1 240 4 135 1 109 2 160 2 66 2 26 2 307 2 308 4 212 14 163 1 243 2 325 4 116 5 167 5 215 2 142 1 331 32 290 2 248 5 96 1 332 4 333 1 50 4 147 18 254 2 149 1 101 1 76 1 53 7 255 1 81 1 18 1 176 4 365 2 
84 1 302 1 147 3 160 1 109 1 254 1 66 1 241 1 307 1 101 1 212 3 53 1 243 1 54 1 167 1 116 1 215 1 81 1 331 6 365 1 290 1 332 2 
22 1 85 1 110 1 323 1 210 1 285 2 214 1 93 1 9 1 143 1 221 1 330 1 269 1 252 1 226 1 227 1 97 2 270 1 124 1 229 2 174 1 336 1 127 1 272 1 259 1 279 1 153 1 260 1 281 1 344 1 
261 1 22 1 184 1 85 1 110 1 323 1 210 1 285 2 286 1 93 1 9 1 143 1 221 1 330 1 252 1 226 1 227 1 97 3 270 1 124 1 229 3 174 1 336 1 127 1 259 1 279 1 153 2 260 1 281 1 344 1 
261 1 22 1 184 1 85 1 110 1 323 1 285 2 93 1 9 1 330 1 221 1 252 1 226 1 227 1 97 2 124 1 229 2 174 1 336 1 259 1 279 1 153 2 260 1 281 1 344 1 
226 2 134 1 227 1 85 1 270 1 97 1 110 1 161 1 229 1 356 1 196 1 162 1 210 1 55 1 286 1 216 1 93 2 279 2 9 1 351 1 330 1 190 1 281 2 
22 1 184 1 85 1 110 1 323 1 210 1 285 2 214 1 93 1 9 1 143 1 221 1 330 1 226 1 227 1 97 1 270 1 124 1 229 1 336 1 127 1 272 1 259 1 279 1 281 1 344 1 
117 1 
134 1 85 1 88 1 90 1 8 2 9 2 330 2 190 2 12 1 334 1 294 1 196 1 151 2 197 1 56 2 199 1 60 1 156 2 61 1 65 1 110 1 206 1 264 1 162 1 164 1 115 1 29 1 217 3 121 1 70 1 227 2 74 1 317 1 356 1 233 1 234 1 178 1 179 1 366 1 367 1 319 1 132 1 237 3 
206 1 88 1 2 1 164 1 115 1 90 1 217 3 121 1 33 1 70 1 12 1 334 1 294 1 74 1 151 2 234 1 60 1 367 1 156 2 132 1 61 1 237 3 
206 1 88 1 164 1 115 1 90 1 217 3 121 1 291 1 33 1 70 1 12 1 334 1 294 1 74 1 151 1 234 1 298 1 19 1 60 1 367 1 156 3 132 1 61 1 237 3 
206 1 88 1 2 1 164 1 115 1 90 1 217 3 121 1 291 1 70 1 33 1 12 1 334 1 294 1 74 1 151 2 234 1 297 1 298 1 19 1 60 1 367 1 156 3 132 1 61 1 237 3 
206 1 264 1 88 1 2 2 164 1 165 1 115 1 90 1 29 1 217 3 8 1 32 1 121 1 70 1 33 1 12 1 334 1 294 1 74 1 151 3 128 1 197 1 273 1 233 1 56 1 361 1 234 1 199 1 297 2 60 1 367 1 319 1 156 2 132 1 61 1 237 3 
206 1 264 1 88 1 164 1 115 1 90 1 29 1 217 2 8 1 121 1 12 1 334 1 294 1 74 1 197 1 233 1 56 1 234 1 199 1 60 1 367 1 156 2 319 1 132 1 61 1 237 2 
206 1 264 1 88 1 164 1 115 1 90 1 29 1 217 2 8 1 32 1 121 1 12 1 334 1 294 1 74 1 128 1 273 1 197 1 233 1 56 1 234 1 199 1 60 1 367 1 319 1 156 2 132 1 61 1 237 2 
206 1 264 1 88 1 164 1 115 1 90 1 29 1 217 2 8 1 32 1 121 1 12 1 334 1 294 1 74 1 128 1 273 1 197 1 233 1 56 1 234 1 199 1 60 1 367 1 319 1 156 2 132 1 61 1 237 2 
206 1 264 1 88 1 164 1 115 1 90 1 29 1 217 2 8 1 119 1 245 1 121 1 12 1 334 1 294 1 74 1 128 1 197 1 233 1 56 1 234 1 199 1 131 1 60 1 367 1 156 2 132 1 61 1 237 2 
206 1 264 1 88 1 2 1 164 1 115 1 90 1 29 1 217 2 8 1 32 1 121 1 291 1 12 1 334 1 294 1 74 1 151 1 128 1 197 1 273 1 233 1 56 1 361 1 234 1 199 1 297 1 60 1 367 1 319 1 156 3 132 1 61 1 237 2 
206 1 264 1 88 1 2 1 164 1 115 1 90 1 29 1 217 2 8 1 32 1 121 1 291 1 12 1 334 1 294 1 74 1 151 1 128 1 197 1 273 1 233 1 56 1 361 1 234 1 199 1 297 1 60 1 367 1 319 1 156 3 132 1 61 1 237 2 
206 1 264 1 88 1 164 1 115 1 90 1 29 1 217 2 8 1 121 1 12 1 334 1 294 1 74 1 197 1 233 1 56 1 234 1 199 1 60 1 131 1 367 1 156 2 132 1 61 1 237 2 
84 1 302 1 147 2 355 2 194 1 254 1 306 1 66 1 307 1 101 1 212 3 53 1 243 1 167 1 116 1 215 1 81 1 188 1 337 1 331 5 365 1 332 2 
240 3 66 2 306 2 308 1 212 5 112 1 243 2 325 2 116 2 167 1 215 2 188 1 67 10 331 13 248 1 146 1 332 4 50 3 147 8 355 1 228 10 52 3 125 1 149 1 76 1 53 1 255 1 78 1 176 2 339 1 365 2 159 1 
134 1 85 1 110 1 306 1 66 1 212 1 243 1 215 1 188 1 31 1 9 1 189 1 95 1 330 1 190 1 331 2 146 1 332 2 72 1 227 1 147 1 355 1 334 1 52 1 294 2 125 1 295 1 356 1 358 1 77 1 78 1 130 1 177 1 201 1 104 1 365 1 60 2 369 1 
84 1 134 2 184 1 1 1 85 2 243 3 186 1 325 2 188 3 9 3 189 1 95 2 330 3 190 1 331 17 248 4 146 1 332 6 147 9 334 1 254 1 294 3 52 4 101 1 295 1 53 5 341 2 340 2 60 3 104 2 107 2 302 1 346 1 110 2 66 3 306 3 307 1 308 2 212 8 211 2 167 3 116 3 215 3 31 1 67 4 354 2 227 3 355 2 228 4 125 1 356 2 358 2 78 1 81 1 176 2 177 2 365 3 369 1 
238 1 134 3 184 1 85 2 110 2 66 2 306 2 212 1 162 1 243 2 140 2 215 2 92 1 31 1 188 2 9 7 330 8 190 2 331 2 192 1 146 1 332 4 269 1 13 1 227 8 147 1 194 1 334 1 294 1 34 1 295 1 196 1 356 2 78 1 175 1 82 1 60 1 365 2 369 1 
66 1 306 1 308 1 212 1 243 1 325 1 116 1 167 1 215 1 188 1 331 2 144 1 332 2 171 1 147 1 334 1 294 1 125 1 295 1 257 1 176 1 365 1 60 1 369 1 
49 1 147 2 228 1 194 1 52 1 306 1 66 1 53 1 243 1 116 1 215 1 176 1 188 1 67 1 331 2 365 1 248 1 332 2 
194 1 306 1 66 1 35 1 308 1 212 1 243 1 167 1 215 1 188 1 331 1 365 1 332 2 
147 2 228 1 194 1 52 1 306 1 66 1 308 1 212 1 243 1 325 1 167 1 116 1 215 1 176 1 188 1 67 1 331 3 365 1 332 2 
49 1 147 2 228 1 52 1 34 1 306 1 66 1 53 1 243 1 116 1 215 1 176 1 188 1 67 1 331 2 365 1 248 1 332 2 
34 1 306 1 66 1 35 1 308 1 212 1 243 1 167 1 215 1 188 1 331 1 365 1 332 2 
147 2 228 1 52 1 34 1 306 1 66 1 308 1 212 1 243 1 325 1 167 1 116 1 215 1 176 1 188 1 67 1 331 3 365 1 332 2 
147 2 228 1 52 1 306 1 66 1 308 1 212 1 243 1 325 1 167 1 116 1 215 1 176 1 188 1 67 1 365 1 331 3 332 2 
134 1 85 1 110 1 306 1 66 1 211 1 212 1 243 1 215 1 188 1 9 1 95 1 330 1 331 2 190 1 146 1 332 2 147 1 227 1 355 1 294 1 356 1 358 1 78 1 177 1 104 1 60 1 365 1 
134 1 85 1 110 1 306 1 66 1 43 1 212 1 243 1 215 1 188 1 9 1 95 1 330 1 331 2 190 1 146 1 332 2 169 1 147 1 227 1 355 1 294 1 356 1 78 1 102 1 104 1 60 1 365 1 
147 2 228 1 52 1 125 1 306 1 66 1 308 1 212 1 243 1 325 1 167 1 116 1 215 1 176 1 188 1 67 1 331 3 365 1 332 2 
134 1 85 1 110 1 306 1 66 1 308 1 212 1 211 1 243 1 325 1 167 1 116 1 215 1 188 1 9 1 67 1 95 1 330 1 331 3 354 1 332 2 269 1 147 2 227 1 228 1 52 1 294 1 356 1 358 1 176 1 177 1 104 1 60 1 365 1 
66 1 306 1 308 1 212 2 243 1 325 1 167 1 116 1 215 1 188 1 67 1 331 4 144 1 332 2 171 1 147 2 334 1 228 1 294 1 52 1 125 1 295 1 176 1 365 1 60 1 369 1 345 1 
84 1 239 1 302 1 240 4 26 1 66 3 307 1 308 6 212 18 243 3 3 1 325 7 187 1 213 1 116 8 167 7 5 1 215 3 331 44 248 7 193 1 332 6 69 1 14 1 50 4 147 26 293 1 254 1 149 2 101 1 100 1 150 3 76 2 255 2 53 8 54 1 81 1 278 1 176 7 365 3 181 1 182 1 
239 2 240 2 26 1 66 2 308 2 212 9 243 2 3 1 325 3 167 2 213 1 116 3 5 1 215 2 331 23 248 1 193 1 332 4 69 1 14 2 147 14 50 2 293 1 149 2 36 1 150 4 100 1 53 1 54 1 278 1 176 3 365 2 182 1 
84 1 239 2 240 5 243 3 3 1 325 7 187 1 5 1 331 49 248 8 193 1 332 6 14 1 147 28 50 5 254 1 293 1 149 3 150 4 100 1 101 1 53 9 255 2 54 1 302 1 66 3 26 1 307 1 308 7 212 21 311 1 167 8 116 8 213 1 215 3 69 1 76 2 36 1 81 1 176 7 278 1 365 3 182 1 
84 1 239 1 302 1 240 4 26 1 66 3 307 1 308 6 212 19 243 3 3 1 325 7 187 1 213 1 116 8 167 7 5 1 215 3 331 46 248 7 193 1 332 6 69 1 14 1 50 4 147 27 293 1 254 1 149 2 36 1 101 1 100 1 150 4 76 2 255 2 53 8 54 1 81 1 278 1 176 7 365 3 182 1 
84 1 239 1 302 1 240 4 26 1 66 2 307 1 308 7 212 19 243 2 3 1 325 7 213 1 116 8 167 8 5 1 215 2 331 45 248 6 193 1 332 4 69 1 14 1 50 4 147 26 293 1 254 1 149 2 36 1 101 1 100 1 150 4 76 2 255 2 53 7 54 1 81 1 278 1 176 7 365 2 182 1 
152 1 183 1 202 1 352 1 203 1 46 1 120 1 343 1 314 1 166 1 
363 1 284 1 
183 1 202 1 207 1 203 1 232 1 46 1 249 1 314 1 166 1 
183 1 64 1 253 1 208 1 283 1 166 1 152 1 6 2 217 1 202 1 298 1 203 1 46 1 120 1 106 1 343 1 314 1 237 1 
183 1 64 1 253 1 208 1 283 1 166 1 152 1 6 2 217 1 202 1 298 1 203 1 46 1 120 1 106 1 343 1 314 1 237 1 
183 1 64 1 253 1 208 1 283 1 166 1 152 1 6 2 217 1 202 1 298 1 203 1 46 1 120 1 106 1 343 1 314 1 237 1 
301 1 154 1 256 1 
301 1 154 1 256 1 
126 1 289 1 
301 1 126 1 289 1 
62 1 223 1 
63 1 62 1 64 1 21 1 183 1 27 1 284 1 166 1 6 1 265 1 217 1 46 1 223 1 314 1 251 1 355 1 334 2 294 2 295 2 296 1 363 1 202 1 60 2 203 1 106 1 237 1 369 2 
154 1 256 1 
301 1 126 1 289 1 
238 1 134 1 133 1 85 1 110 1 306 1 66 1 138 1 212 1 243 1 140 2 215 1 118 1 188 1 218 1 9 2 330 2 247 1 331 2 192 1 146 1 332 2 227 2 147 1 334 2 294 2 125 1 356 1 78 1 60 2 365 1 
269 1 227 2 22 1 85 1 184 1 110 1 124 1 323 1 348 1 336 1 285 2 258 1 127 1 259 1 91 1 9 2 221 1 330 2 281 1 
227 1 22 1 184 1 85 1 124 1 110 1 323 1 336 1 285 2 127 1 259 1 91 1 9 1 221 1 330 1 235 1 281 1 
134 1 227 1 85 1 110 1 356 1 348 1 196 1 162 1 39 1 216 1 9 1 330 1 190 1 281 1 
227 1 22 1 184 1 85 1 110 1 124 1 323 1 348 1 336 1 285 2 258 1 127 1 259 1 91 1 9 1 221 1 330 1 281 1 
10 1 
56 1 8 1 337 1 298 1 25 1 19 1 350 1 
29 1 48 1 56 1 199 1 8 1 319 1 197 1 233 1 
134 2 108 1 227 1 85 1 110 2 86 1 87 1 335 1 356 1 197 1 233 1 29 1 199 1 9 1 330 1 104 1 190 1 
240 1 308 2 242 2 3 1 325 2 116 2 167 2 4 4 29 1 5 1 8 4 193 1 50 1 173 3 149 1 100 1 197 1 233 1 56 4 277 3 199 1 176 2 298 2 182 1 
84 1 320 1 136 2 307 1 116 2 167 1 29 1 326 1 217 1 94 1 8 2 268 1 144 1 292 1 334 1 294 1 295 1 197 1 273 1 233 1 79 1 81 1 56 2 199 1 60 1 61 1 237 1 369 1 
25 1 350 1 197 1 233 1 29 1 56 1 199 1 8 1 298 1 19 1 
173 1 308 1 242 1 325 1 116 1 167 1 4 2 56 2 176 1 277 1 8 1 298 1 
70 1 217 1 298 1 19 1 151 1 237 1 
134 1 321 1 85 1 110 1 162 1 141 1 29 2 217 3 8 2 9 4 330 4 190 2 145 2 70 2 227 4 317 1 356 1 196 1 151 4 197 1 233 2 56 2 276 1 199 2 178 2 179 1 366 2 157 1 237 3 
134 1 85 1 110 1 66 1 306 1 212 1 211 1 243 1 215 1 188 1 9 1 95 1 330 1 331 1 190 1 144 2 146 1 332 2 227 1 355 1 334 2 294 3 295 2 356 1 358 1 79 1 177 1 365 1 60 3 104 1 369 2 205 1 
173 2 242 2 197 1 233 1 4 4 29 1 56 2 277 2 199 1 178 1 8 1 298 4 19 2 290 1 366 1 
263 1 314 1 166 1 
263 1 314 1 166 1 
263 1 314 1 166 1 
338 1 120 1 223 1 314 1 166 1 
244 1 314 1 166 1 
244 1 314 1 166 1 
244 1 314 1 166 1 
314 1 166 1 
183 1 46 1 
84 1 302 1 147 3 254 1 66 2 26 1 101 1 307 1 212 4 53 2 243 2 167 1 116 1 215 2 81 1 331 7 365 2 248 1 332 4 
84 1 81 1 302 1 147 2 337 1 254 1 331 5 307 1 101 1 212 3 53 1 167 1 116 1 
147 2 66 1 308 1 212 1 243 1 325 1 167 1 116 1 215 1 362 1 176 1 365 1 331 3 332 2 
240 2 50 2 147 6 149 1 76 1 308 2 212 4 255 1 53 2 325 2 167 2 116 2 176 2 331 10 248 2 
320 1 84 4 302 1 240 2 26 2 66 2 307 4 308 2 212 14 243 2 163 1 325 2 116 4 167 4 215 2 331 27 248 5 332 4 147 13 50 2 254 4 101 1 76 1 53 9 255 1 81 2 176 2 365 2 159 1 
240 1 331 1 212 1 
147 1 50 1 331 1 
107 1 147 3 308 1 212 2 53 1 325 1 116 1 167 1 176 1 331 5 248 1 
240 1 66 1 308 2 212 4 243 1 3 1 325 2 116 2 167 2 215 1 5 1 331 10 248 1 193 1 332 2 50 1 147 6 149 1 100 1 53 1 54 1 176 2 365 1 182 1 
84 1 147 3 254 1 307 1 212 3 53 2 116 1 167 1 81 1 331 6 248 1 
84 1 302 1 147 1 254 1 26 1 66 1 307 1 101 1 212 2 53 2 163 1 243 1 215 1 331 3 365 1 248 1 332 2 
320 1 84 2 147 5 254 3 66 1 307 2 212 5 243 1 53 5 54 1 116 2 167 2 215 1 81 1 365 1 331 10 248 2 332 2 
147 2 66 1 243 1 53 1 54 1 116 1 215 1 176 1 365 1 331 2 248 1 332 2 
147 2 66 1 308 1 212 1 53 1 243 1 54 1 325 1 167 1 116 1 215 1 176 1 365 1 331 3 248 1 332 2 
84 1 147 1 254 1 26 1 66 3 307 1 212 2 163 1 243 3 53 2 54 1 187 1 215 3 331 3 365 3 248 1 332 6 
84 3 302 1 240 4 135 1 26 2 66 5 307 3 308 4 212 17 163 1 243 5 325 4 187 1 116 6 167 6 215 5 142 1 331 36 248 7 332 10 50 4 147 19 254 3 149 1 101 1 76 1 53 10 255 1 54 1 81 2 18 1 362 1 176 4 365 5 
84 1 302 1 240 1 66 1 307 1 212 4 243 1 3 1 167 1 116 1 215 1 331 7 332 2 50 1 147 3 254 1 149 1 101 1 53 1 54 1 81 1 365 1 
84 1 302 1 240 2 66 2 307 1 212 5 243 2 3 1 325 1 167 1 116 2 215 2 331 10 248 1 332 4 50 1 147 5 254 1 149 1 101 1 76 1 53 2 54 1 81 1 362 1 176 1 365 2 
240 1 66 2 308 2 212 4 243 2 3 1 325 2 116 2 167 2 215 2 5 1 331 10 248 1 193 1 332 4 50 1 147 6 149 1 100 1 53 1 54 1 362 1 176 2 365 2 182 1 
84 1 302 1 240 1 26 1 66 3 307 1 308 1 212 6 243 3 3 1 325 2 116 3 167 2 215 3 5 1 331 15 248 2 193 1 332 6 50 1 147 9 254 1 149 1 101 1 100 1 53 3 54 1 81 1 362 1 176 2 365 3 182 1 
84 1 302 1 240 1 66 1 307 1 212 4 243 1 3 1 167 1 116 1 215 1 331 7 332 2 50 1 147 3 254 1 149 1 101 1 53 1 54 1 81 1 365 1 
240 1 66 1 308 2 212 4 243 1 3 1 325 2 116 2 167 2 215 1 5 1 331 10 248 1 193 1 332 2 50 1 147 6 149 1 100 1 53 1 54 1 176 2 365 1 182 1 
240 1 26 1 66 3 308 1 212 3 243 3 3 1 325 2 116 2 167 1 215 3 5 1 331 10 248 1 193 1 332 6 50 1 147 7 149 1 100 1 53 1 54 1 362 1 176 2 365 3 182 1 
240 1 26 1 66 3 308 1 212 3 243 3 3 1 325 2 187 1 116 2 167 1 215 3 5 1 331 10 248 2 193 1 332 6 50 1 147 7 149 1 100 1 53 2 54 1 176 2 365 3 182 1 
320 1 84 4 302 1 147 5 254 5 101 1 307 4 212 5 53 9 167 2 116 2 81 2 331 10 290 1 248 4 
240 1 26 1 66 3 308 1 212 3 243 3 3 1 325 2 187 1 116 2 167 1 215 3 5 1 331 10 248 1 193 1 332 6 50 1 147 7 149 1 100 1 53 1 54 1 176 2 365 3 182 1 
303 1 355 1 334 1 294 1 23 1 74 1 60 1 
303 1 355 1 334 1 23 1 294 1 316 1 74 1 17 1 28 1 60 1 299 1 170 1 
134 1 227 1 85 1 337 1 110 1 9 1 330 1 190 1 356 1 196 1 162 1 
134 1 227 1 355 1 334 1 85 1 110 1 294 2 295 1 356 1 358 1 31 1 9 1 95 1 330 1 104 1 60 2 190 1 369 1 
134 3 85 1 110 1 88 1 89 1 31 1 9 1 95 1 330 1 145 1 227 1 355 1 334 2 294 2 295 2 356 2 358 1 16 1 60 2 104 2 132 1 61 1 369 1 
134 3 85 1 110 1 43 1 88 1 89 1 31 1 9 2 95 1 330 2 145 1 227 2 355 1 334 2 294 2 295 2 231 1 356 2 16 1 60 2 104 2 132 1 61 1 369 1 
134 4 85 1 110 1 86 1 89 1 115 1 217 2 9 3 330 3 190 1 145 1 224 1 227 3 37 1 231 1 356 1 151 1 16 1 298 1 19 1 180 1 104 1 237 2 
134 4 227 3 85 1 110 1 86 1 37 1 231 1 356 1 89 1 151 1 115 1 16 1 217 2 9 3 266 1 298 1 19 1 330 3 190 1 104 1 145 1 237 2 
227 1 85 1 110 1 9 1 330 1 82 1 
238 1 269 1 300 1 13 1 108 1 134 3 227 7 184 1 85 2 110 3 356 2 140 1 360 1 175 1 92 1 200 1 9 6 330 7 82 1 190 2 104 1 
84 1 302 1 134 1 85 1 110 1 306 2 66 2 307 1 212 3 211 1 243 2 167 1 116 1 215 2 188 2 31 1 9 1 95 1 247 1 330 1 331 5 332 4 354 1 269 1 147 2 227 1 355 2 334 1 254 1 294 2 125 1 101 1 295 1 356 1 358 1 53 1 81 1 177 1 341 1 104 1 365 2 60 2 369 1 
134 2 25 1 86 1 309 1 350 1 115 1 141 1 29 2 217 3 8 1 9 1 266 1 330 1 190 1 251 1 70 1 227 1 271 1 37 1 151 2 197 2 233 2 56 1 199 2 318 1 298 1 19 1 237 3 
269 1 108 1 134 2 227 2 85 1 110 2 335 1 37 1 356 1 9 2 330 2 82 1 104 1 
269 1 134 1 227 4 85 1 110 1 231 1 196 1 356 1 162 1 9 4 220 1 330 4 190 1 
300 1 346 1 305 1 134 1 227 2 85 1 110 2 356 1 200 1 9 2 330 2 104 1 145 1 105 1 
259 1 227 1 85 1 110 1 124 1 9 1 323 1 330 1 190 1 285 1 
238 1 269 1 134 1 227 2 85 1 184 1 110 1 9 2 138 1 330 2 356 1 
269 1 238 1 134 3 227 5 85 2 110 2 196 1 356 2 162 1 175 1 92 1 9 4 220 1 330 5 190 1 145 1 
269 1 238 1 134 3 227 5 85 2 110 2 196 1 356 2 162 1 113 1 175 1 9 4 220 1 330 5 190 1 145 1 
134 1 227 1 355 1 334 1 85 1 110 1 294 2 295 1 356 1 43 1 31 1 9 1 95 1 330 1 104 1 60 2 190 1 369 1 
300 1 108 1 134 1 227 1 85 1 110 2 356 1 360 1 200 1 9 1 330 1 104 1 145 1 
172 1 133 1 334 1 294 1 80 1 118 1 218 1 60 1 204 1 
41 1 185 1 80 1 
168 1 172 1 355 1 204 1 80 1 
20 1 251 1 172 2 12 1 355 1 98 1 185 1 88 1 115 1 80 1 168 2 41 1 217 2 298 1 19 1 204 2 61 1 132 1 237 2 
252 1 337 1 260 1 174 1 
252 1 97 1 270 1 229 1 260 1 174 1 210 1 
93 1 97 1 279 1 
122 2 252 1 270 1 97 3 229 3 349 1 210 1 174 1 272 1 198 1 267 1 260 1 
252 1 347 1 97 2 270 1 229 2 153 1 260 1 174 1 210 1 
71 1 252 1 270 1 97 1 229 1 210 1 285 1 272 1 259 1 221 1 222 1 
252 1 97 1 270 1 229 1 260 1 210 1 272 1 
97 1 270 1 229 1 260 2 174 1 210 1 272 1 
287 1 252 1 97 2 270 2 282 1 364 1 229 2 260 1 210 2 272 1 
0 1 71 1 252 2 270 1 97 3 229 3 174 1 210 1 272 1 114 1 153 2 260 1 11 1 
252 1 270 1 97 2 51 1 229 2 323 1 174 1 210 1 285 2 336 1 272 1 259 1 221 1 153 1 260 1 
71 1 252 2 270 2 97 4 123 1 347 1 229 4 174 1 210 2 272 1 153 2 260 1 11 1 
252 1 97 1 270 1 229 1 260 1 174 1 210 1 272 1 
122 1 71 1 252 3 97 4 270 1 229 4 209 1 174 2 210 1 198 1 267 1 153 2 260 2 11 1 
252 1 97 2 270 1 229 2 246 1 153 1 260 1 174 1 210 1 353 1 272 1 368 1 
47 1 122 2 252 1 270 1 97 3 229 3 210 1 174 1 272 1 198 2 267 1 260 1 
315 1 252 1 357 1 
97 1 270 1 219 1 229 1 210 1 272 1 
252 1 97 2 270 1 229 2 153 1 260 1 174 1 210 1 114 1 272 1 
73 1 
252 1 97 1 270 1 229 1 260 1 174 1 210 1 272 1 
122 1 252 1 97 3 270 1 229 3 153 1 260 1 174 1 210 1 114 1 272 1 
252 1 71 1 209 1 11 1 
252 1 260 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 17 11 312 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
47 9 111 1 209 1 288 2 290 1 192 2 212 1 361 9 193 1 29 1 80 1 267 1 177 1 300 6 12 2 82 1 125 2 245 5 151 1 16 1 247 1 370 3 373 1 202 1 376 2 277 2 254 2 329 4 
47 9 111 1 209 1 288 2 290 1 192 2 212 1 361 9 193 1 29 1 80 1 267 1 177 1 300 6 12 2 82 1 125 2 245 5 151 1 16 1 247 1 370 3 373 1 202 1 376 2 277 2 254 2 329 4 
47 10 111 1 209 1 288 2 290 1 192 2 212 1 361 10 193 1 29 1 80 1 267 1 177 1 300 7 12 2 82 1 125 2 245 6 151 1 16 1 247 1 370 4 373 1 202 1 376 2 277 2 254 2 329 5 
47 7 111 1 209 1 288 2 290 1 192 2 212 1 361 7 193 1 29 1 267 1 177 1 300 4 12 2 82 1 125 2 245 4 151 1 16 1 247 1 370 2 373 1 202 1 376 2 277 2 254 1 329 3 
47 4 300 3 12 1 82 1 209 1 288 1 245 3 125 1 361 4 370 1 247 1 193 1 29 1 277 1 376 1 80 1 254 2 329 2 
47 2 177 1 110 1 12 1 111 1 209 1 288 1 245 1 192 1 361 2 247 1 193 1 376 1 277 1 98 1 243 1 
47 3 300 1 209 1 288 2 245 2 192 1 361 3 247 1 370 1 193 1 376 2 267 1 329 1 
47 9 209 1 288 2 192 1 361 9 193 1 29 1 80 1 267 1 10 1 300 7 12 1 82 1 245 5 125 1 370 3 247 1 43 1 373 1 202 1 376 2 277 1 254 2 329 4 
47 9 209 1 288 2 192 1 361 9 193 1 29 1 80 1 267 1 10 1 300 7 12 1 82 1 245 5 125 1 370 3 247 1 43 1 373 1 202 1 376 2 277 1 254 2 329 4 
354 1 123 1 280 1 
188 1 
362 2 35 1 23 2 146 2 327 2 338 2 8 2 255 1 
93 1 23 3 231 1 161 1 211 1 96 1 117 1 56 1 119 1 334 1 362 2 78 1 336 1 238 1 338 2 8 3 34 1 124 1 35 1 182 1 343 1 320 1 83 1 146 2 102 1 85 2 149 1 371 2 67 1 225 2 276 1 250 1 227 1 327 2 278 2 189 2 255 1 
362 1 341 1 23 1 352 1 89 1 146 1 327 1 338 1 8 1 255 1 
23 1 219 1 292 1 58 1 362 1 349 1 28 1 354 1 226 1 266 1 89 1 123 1 8 1 268 1 
23 1 219 1 146 1 292 1 349 2 362 1 28 2 354 1 226 1 89 1 327 1 123 1 338 1 8 1 268 1 
349 1 179 1 28 1 377 1 174 1 
349 2 179 1 28 2 354 1 174 1 123 1 264 1 283 1 
349 1 179 1 28 1 
341 1 23 1 286 1 146 1 349 1 362 1 28 1 352 1 89 1 174 1 327 1 338 1 255 1 8 1 
354 1 
349 2 179 1 28 2 309 1 354 1 174 1 123 1 264 1 
179 2 331 1 133 1 271 1 302 2 137 1 15 2 368 1 264 1 349 5 200 1 28 5 234 1 44 1 354 1 187 2 174 2 123 1 176 1 
35 1 280 1 
23 2 35 2 346 1 146 1 186 1 362 2 327 1 338 1 8 2 
41 1 6 1 310 1 
299 1 124 1 93 1 35 1 23 1 161 1 102 1 96 1 334 1 371 1 78 1 225 1 336 1 250 1 278 1 8 1 
93 1 124 1 23 2 161 1 102 1 146 1 198 1 96 1 367 1 334 1 362 1 371 1 78 1 225 1 6 1 336 1 250 1 327 1 278 1 8 2 
362 3 35 1 23 3 146 3 327 3 338 1 198 1 8 3 
362 1 341 1 23 1 89 1 146 1 327 1 8 1 
362 1 23 1 89 1 146 1 327 1 346 1 338 1 8 1 186 1 
93 1 23 4 231 1 161 1 292 1 96 1 117 1 334 1 362 3 28 1 78 1 336 1 238 1 338 2 8 4 268 1 33 1 34 1 124 1 35 1 343 1 320 1 219 1 83 1 102 1 346 1 146 3 85 1 198 1 367 1 149 1 349 1 371 1 67 1 225 1 226 1 250 1 89 1 227 1 327 3 278 1 328 1 189 2 255 1 
42 1 58 1 362 2 35 1 23 2 146 1 327 1 198 1 8 2 
23 3 219 1 346 1 146 3 198 2 292 1 367 1 349 1 362 3 28 1 233 1 354 1 226 1 89 1 327 3 338 1 328 1 8 3 268 1 
23 2 346 1 146 2 198 1 41 1 362 2 6 1 327 2 338 1 8 2 
124 1 93 1 35 1 23 1 161 1 102 1 96 1 334 1 371 1 78 1 225 1 336 1 250 1 278 1 8 1 
93 1 35 1 23 1 161 1 262 1 38 1 96 1 334 1 371 1 78 1 225 1 336 1 250 1 278 1 8 1 
228 1 333 1 210 1 117 1 232 1 119 2 6 2 216 1 217 1 34 1 343 1 320 1 65 1 344 1 83 2 85 4 149 1 41 2 248 1 249 1 353 1 227 1 310 2 189 2 
362 1 23 1 226 1 89 1 197 1 146 1 327 1 8 1 
23 5 35 1 146 4 346 1 198 2 367 1 118 1 42 1 58 1 362 5 140 1 327 4 338 1 8 5 
362 2 341 1 23 2 197 1 89 1 146 2 327 2 8 2 
27 1 19 1 
27 1 19 1 
322 1 215 1 
322 1 215 1 
322 1 215 1 
27 1 19 1 114 1 
27 1 19 1 185 1 
27 2 19 2 205 1 322 1 215 1 256 1 
27 1 19 1 114 1 
27 1 19 1 114 1 
372 1 27 1 19 1 
372 1 27 1 19 1 
372 1 27 1 19 1 
208 2 108 1 342 1 218 1 134 2 163 3 25 1 357 1 55 2 27 2 349 2 28 2 363 1 19 2 79 2 354 1 45 2 141 1 256 1 
208 1 108 1 23 2 49 1 163 1 55 1 54 1 27 1 362 2 28 1 79 1 8 2 100 1 35 1 340 1 146 2 185 1 349 1 351 1 19 1 45 1 155 1 327 2 70 1 
12 1 277 1 125 1 
12 1 277 1 243 1 
207 1 277 3 172 1 125 2 358 1 243 1 
207 1 277 2 172 1 125 1 164 1 243 1 
207 2 277 2 172 1 125 1 243 1 
92 1 228 1 49 1 210 1 333 1 261 2 53 1 54 1 264 1 59 1 28 5 234 1 174 4 32 1 175 1 123 1 100 1 339 1 179 1 302 1 15 1 368 3 150 2 224 1 349 5 200 2 324 1 308 2 353 1 354 2 187 1 188 3 
92 3 228 3 71 1 73 1 230 1 210 3 333 3 261 6 53 2 54 4 264 1 59 1 28 9 234 1 194 1 174 7 175 3 123 1 319 1 179 6 271 1 302 2 273 1 15 2 368 8 150 6 349 9 200 6 324 2 353 3 354 5 187 2 188 9 377 5 253 5 
92 1 228 1 23 1 286 1 210 1 333 1 261 2 53 1 54 1 362 1 28 3 174 2 338 1 123 1 175 1 8 1 339 1 341 1 302 1 271 1 146 1 15 1 368 3 150 2 224 1 349 3 324 1 200 2 308 1 352 1 353 1 354 2 89 1 187 1 188 3 327 1 255 1 
92 2 228 2 286 1 333 2 53 1 54 2 194 1 338 1 8 1 339 1 341 1 302 1 146 1 15 1 150 4 349 4 200 4 308 2 352 1 354 3 353 2 255 1 23 1 73 1 210 2 261 4 362 1 28 4 174 3 175 2 123 1 319 1 271 1 368 5 224 1 324 1 89 1 187 1 188 6 327 1 
122 1 336 1 280 1 
336 1 76 1 
88 1 
93 1 336 1 
93 1 122 2 336 3 171 1 250 1 130 1 
93 1 336 1 250 1 
336 1 7 1 
301 1 159 1 258 1 210 1 333 1 83 3 291 1 85 7 248 2 5 1 313 1 119 4 120 1 168 1 249 3 169 1 69 2 
301 1 159 1 258 1 210 1 333 1 83 3 291 1 85 7 248 2 5 1 313 1 119 4 120 1 168 1 249 3 169 1 69 2 
301 1 159 1 258 1 210 1 333 1 83 3 291 1 85 7 248 2 5 1 313 1 119 4 120 1 168 1 249 3 325 1 169 1 69 2 
92 3 228 3 159 1 258 1 113 1 333 4 210 4 291 2 138 1 294 1 5 2 313 2 119 16 120 1 168 2 169 5 214 4 297 1 34 1 301 1 343 1 320 1 83 15 85 31 149 1 304 1 248 5 249 10 353 3 69 3 157 3 279 1 189 2 206 1 
159 1 210 1 333 1 291 1 294 1 119 5 313 1 5 1 120 1 168 1 169 1 34 2 301 1 343 2 320 2 83 4 85 9 149 2 246 1 86 1 248 3 249 4 69 2 189 4 
47 2 191 1 161 1 209 1 288 1 260 1 24 1 115 1 75 1 358 1 192 1 361 2 334 1 193 1 317 1 243 1 142 1 300 1 12 1 245 1 125 1 223 1 305 1 323 1 247 1 371 1 225 1 376 1 277 2 278 1 
47 3 191 1 161 1 209 1 288 1 260 1 24 1 358 1 115 1 192 1 361 3 334 1 193 1 335 1 60 1 317 1 243 1 300 2 12 1 245 1 125 1 223 1 305 1 323 1 371 1 225 1 376 1 277 2 278 1 158 1 
47 2 191 1 161 1 209 1 260 1 24 1 115 1 358 1 192 1 361 2 334 1 193 1 335 1 243 1 300 2 12 1 245 1 125 1 223 1 305 1 371 1 225 1 277 2 278 1 158 1 
20 1 47 1 93 1 191 2 161 1 288 1 115 2 192 2 3 1 305 2 40 1 361 1 334 1 306 1 371 1 60 1 78 1 225 1 201 1 203 1 336 1 376 1 278 1 
47 1 191 1 161 1 288 1 260 1 24 1 115 1 75 1 358 1 192 1 361 1 334 1 335 1 317 1 243 1 12 1 125 1 223 1 305 1 323 1 247 1 371 1 225 1 376 1 277 2 278 1 
91 1 
93 1 48 1 1 1 330 1 292 1 3 1 334 1 58 1 234 1 336 1 8 1 298 2 62 1 196 1 303 1 302 1 66 1 15 1 104 1 306 1 349 3 200 2 354 3 23 1 161 1 116 1 165 1 264 1 362 1 28 3 78 2 266 1 173 1 175 1 123 2 318 1 268 1 179 2 36 1 219 1 368 2 369 1 371 2 324 1 225 2 226 1 187 1 89 1 188 1 128 1 278 2 
23 1 292 1 264 1 362 1 58 1 28 3 266 1 173 1 123 2 8 1 318 1 298 2 268 1 62 1 196 1 179 2 36 1 219 1 84 1 349 3 309 1 226 1 354 2 89 1 
23 1 292 1 264 1 362 1 58 1 28 3 266 1 173 1 123 3 8 1 318 1 298 3 268 1 62 1 179 1 196 1 36 1 219 1 349 3 309 1 226 1 354 3 89 1 127 1 
23 1 292 1 264 1 362 1 58 1 28 3 364 1 266 1 173 1 123 3 8 1 318 1 298 3 268 1 62 1 196 1 179 2 36 1 219 1 84 1 349 3 309 1 226 1 354 3 89 1 127 1 
48 2 23 1 330 2 160 1 292 1 264 3 4 2 362 1 58 1 121 1 28 5 167 1 234 1 364 4 266 1 173 1 175 2 123 8 318 1 8 1 298 6 268 1 62 1 196 1 179 7 64 1 36 1 219 1 303 2 302 1 84 4 15 1 368 1 104 1 369 1 349 5 200 1 309 1 226 1 354 8 187 1 89 1 127 4 355 1 
48 1 23 1 330 1 292 1 165 1 58 1 362 1 28 2 234 1 173 1 266 1 175 1 123 2 318 1 8 1 298 2 268 1 62 1 196 1 36 1 219 1 303 1 302 1 15 1 368 1 104 1 369 1 349 2 200 1 226 1 354 3 187 1 89 1 188 1 
48 2 23 1 330 2 160 1 292 1 264 2 4 2 362 1 58 1 28 4 121 1 364 2 234 1 266 1 173 1 175 2 123 5 8 1 318 1 298 4 268 1 62 1 179 4 196 1 64 1 36 1 219 1 303 2 302 1 84 2 15 1 368 1 104 1 369 1 349 4 200 1 226 1 354 5 89 1 187 1 127 2 
48 2 23 1 330 2 160 1 292 1 264 2 4 2 362 1 58 1 28 4 121 1 364 2 234 1 266 1 173 1 175 2 123 5 8 1 318 1 298 4 268 1 62 1 179 4 196 1 64 1 36 1 219 1 303 2 302 1 84 2 15 1 368 1 104 1 369 1 349 4 200 1 226 1 354 5 89 1 187 1 127 2 
48 2 23 1 330 2 292 1 264 2 362 1 58 1 77 2 28 4 364 2 234 1 296 1 266 1 173 1 123 5 8 1 318 1 298 4 268 1 62 1 179 4 196 1 64 1 184 1 36 1 219 1 302 1 84 2 15 1 368 1 104 1 349 4 200 1 375 2 226 1 354 5 89 1 187 1 127 2 188 2 252 1 
48 2 23 1 330 2 160 1 292 1 264 2 4 2 362 1 58 1 121 1 28 4 234 1 364 3 266 1 173 1 175 2 123 6 8 1 318 1 298 5 268 1 62 1 196 1 179 5 64 1 36 1 219 1 303 2 302 1 84 3 15 1 368 1 104 1 369 1 349 4 200 1 226 1 354 6 187 1 89 1 127 3 355 1 
48 2 23 1 330 2 160 1 292 1 264 2 4 2 362 1 58 1 121 1 28 4 234 1 364 3 266 1 173 1 175 2 123 6 8 1 318 1 298 5 268 1 62 1 196 1 179 5 64 1 36 1 219 1 303 2 302 1 84 3 15 1 368 1 104 1 369 1 349 4 200 1 226 1 354 6 187 1 89 1 127 3 355 1 
48 2 330 2 292 1 58 1 234 1 298 4 8 1 62 1 196 1 302 1 15 1 104 1 349 4 200 1 354 5 252 1 23 1 264 2 165 1 362 1 28 4 77 2 364 2 266 1 173 1 123 5 318 1 268 1 179 4 219 1 36 1 84 2 368 1 375 2 226 1 89 1 187 1 188 2 127 2 
159 1 333 1 210 1 117 1 313 1 5 1 119 3 120 1 6 1 34 1 35 2 301 1 343 1 320 1 344 1 83 3 85 6 149 1 41 1 248 2 249 2 69 1 227 1 310 1 280 1 189 2 
92 2 228 2 95 1 231 1 333 2 210 1 138 1 117 2 119 8 169 1 6 11 214 3 34 2 35 1 343 2 320 2 144 1 83 6 220 1 85 14 149 2 126 1 248 1 41 4 249 2 276 1 353 1 227 1 310 11 157 3 46 1 189 4 206 1 
93 1 23 2 332 1 161 1 231 1 96 1 117 1 334 1 119 1 362 1 78 1 314 1 336 1 8 2 124 1 299 1 34 1 35 1 143 1 320 1 343 1 83 1 102 1 220 1 146 1 198 1 85 2 367 1 149 1 41 1 371 1 225 1 276 1 250 1 227 1 327 1 278 1 189 2 
92 2 93 2 228 2 231 1 333 3 96 2 97 1 5 1 139 1 334 2 335 1 6 7 336 2 8 3 242 1 301 1 343 3 146 1 102 2 198 1 149 3 248 4 67 2 249 8 353 2 69 1 250 2 310 7 106 2 23 3 159 1 161 2 210 3 117 3 313 1 119 10 120 1 362 1 78 1 166 2 265 2 169 4 34 3 124 2 35 2 320 3 83 10 220 1 85 20 367 1 222 2 41 7 371 3 225 3 276 1 327 1 227 3 278 3 189 6 
109 1 93 2 23 1 285 1 161 2 231 1 117 2 3 1 334 2 119 1 362 1 335 1 78 2 315 1 31 1 336 3 240 1 8 1 142 1 34 2 182 2 343 2 320 2 37 1 344 1 83 1 146 1 198 1 85 2 149 2 152 1 306 1 371 8 225 8 276 1 327 1 227 2 278 7 189 4 
92 1 228 1 23 1 333 1 210 1 117 1 57 1 119 1 362 1 6 1 338 1 8 1 34 1 343 1 320 1 83 2 346 1 220 1 146 1 85 3 149 1 248 1 41 1 249 1 353 1 327 1 227 1 310 1 189 2 
34 1 228 1 320 1 343 1 344 1 333 1 85 2 117 1 149 1 41 1 119 2 249 1 169 1 6 1 227 1 310 1 216 1 189 2 
34 1 320 1 343 1 65 1 344 1 210 1 83 2 85 2 117 1 149 1 248 1 41 1 249 1 6 1 353 1 227 1 310 1 189 2 
92 1 228 1 333 1 210 1 117 1 119 2 169 1 6 2 34 1 343 1 320 1 344 1 83 2 85 4 149 1 41 2 248 1 249 2 353 1 227 1 310 2 189 2 
34 1 228 1 285 1 320 1 343 1 333 1 85 2 117 1 149 1 41 1 119 2 249 1 169 1 6 1 227 1 310 1 216 1 189 2 
34 1 285 1 320 1 343 1 65 1 210 1 83 2 85 2 117 1 149 1 248 1 41 1 249 1 6 1 353 1 227 1 310 1 189 2 
92 1 228 1 285 1 333 1 210 1 117 1 119 2 169 1 6 2 34 1 343 1 320 1 83 2 85 4 149 1 41 2 248 1 249 2 353 1 227 1 310 2 189 2 
92 1 34 1 228 1 320 1 343 1 210 1 333 1 83 2 85 4 117 1 149 1 248 1 41 2 119 2 249 2 169 1 6 2 353 1 227 1 310 2 189 2 
93 1 23 1 161 1 231 1 96 1 117 1 119 1 334 1 78 1 336 1 8 1 124 1 34 1 35 1 320 1 343 1 83 1 102 1 85 2 149 1 371 1 67 1 225 1 276 1 250 1 227 1 278 1 189 2 
93 1 23 1 161 1 231 1 262 1 52 1 96 1 117 1 119 1 334 1 78 1 336 1 8 1 34 1 35 1 320 1 343 1 83 1 85 2 38 1 149 1 371 1 225 1 276 1 250 1 227 1 278 1 189 2 
92 1 228 1 333 1 210 1 117 1 119 2 169 1 6 2 34 1 343 1 320 1 83 2 220 1 85 4 149 1 41 2 248 1 249 2 353 1 227 1 310 2 189 2 
92 1 228 1 93 1 23 1 161 1 210 1 333 1 96 1 117 1 119 2 334 1 169 1 265 1 6 2 336 1 8 1 142 1 124 1 34 1 320 1 343 1 83 2 102 1 85 4 149 1 248 1 41 2 371 1 67 1 249 2 225 1 353 1 250 1 227 1 310 2 278 1 189 2 
92 1 228 1 23 1 210 1 74 1 333 1 117 1 119 2 362 1 169 1 6 1 338 1 8 1 34 1 343 1 320 1 83 1 346 1 220 1 146 1 85 3 149 1 41 1 249 1 353 1 327 1 227 1 310 1 189 2 
92 2 228 2 22 1 162 2 333 2 210 1 138 1 119 7 169 1 237 1 214 2 34 2 343 2 320 2 321 1 83 6 85 13 14 1 149 2 246 1 248 1 87 1 249 2 353 1 90 1 157 1 189 4 282 1 206 1 
92 2 228 2 22 1 162 2 333 2 210 1 138 1 119 7 169 1 237 1 214 2 34 2 343 2 320 2 321 1 83 6 85 13 14 1 149 2 246 1 248 1 87 1 249 2 353 1 90 1 157 1 189 4 282 1 206 1 
92 7 228 7 22 1 159 1 162 4 333 8 210 8 312 1 138 2 294 1 26 1 5 1 313 1 119 27 120 1 169 6 195 1 214 4 11 1 34 2 301 1 343 2 320 2 321 1 83 25 85 52 14 1 149 2 246 1 126 2 248 6 17 1 87 1 249 12 353 7 69 1 90 1 157 4 189 4 282 1 190 1 206 2 
92 2 228 2 22 1 162 1 333 2 210 2 138 1 119 6 169 1 237 1 214 2 34 2 343 2 320 2 83 7 85 13 14 1 149 2 246 1 248 1 105 1 87 1 249 2 353 2 90 1 157 1 189 4 282 1 206 1 
92 3 228 3 22 2 162 4 210 2 333 3 312 1 294 2 26 1 119 14 169 2 195 1 214 2 11 1 34 3 343 3 320 3 321 1 83 12 85 26 14 2 149 3 246 1 248 1 17 1 249 3 87 1 353 2 90 1 157 2 189 6 282 1 190 1 206 2 
208 1 27 1 363 1 79 1 19 1 45 1 145 1 141 1 55 1 256 1 
351 1 185 1 
284 1 208 1 27 1 132 1 79 1 19 1 45 1 129 1 55 1 
108 1 208 1 342 1 218 1 134 1 163 2 25 1 55 1 349 1 27 1 28 1 363 1 19 1 79 1 354 1 45 1 141 1 256 1 
108 1 208 1 342 1 218 1 134 1 163 2 25 1 55 1 349 1 27 1 28 1 363 1 19 1 79 1 354 1 45 1 141 1 256 1 
108 1 208 1 342 1 218 1 134 1 163 2 25 1 55 1 349 1 27 1 28 1 363 1 19 1 79 1 354 1 45 1 141 1 256 1 
257 1 205 1 114 1 
257 1 205 1 114 1 
372 1 213 1 
372 1 213 1 205 1 
340 1 70 1 
208 1 23 2 49 1 134 1 163 1 25 1 55 1 54 1 27 1 362 2 28 1 79 1 174 1 8 2 100 1 35 1 340 1 146 2 185 1 349 1 374 1 351 1 19 1 45 1 155 1 327 2 70 1 
257 1 114 1 
372 1 213 1 205 1 
93 1 109 1 23 2 161 1 231 1 293 1 117 1 334 1 119 1 362 2 336 1 239 1 240 1 8 2 34 1 182 2 320 1 343 1 345 1 83 1 220 1 85 2 149 1 371 2 225 2 275 1 276 1 154 1 227 1 278 2 189 2 
142 1 81 1 12 1 161 1 50 1 24 1 125 1 358 1 115 1 223 1 334 1 371 2 335 1 225 2 277 2 235 1 317 1 278 2 243 1 
12 1 161 1 24 1 125 1 358 1 115 1 148 1 223 1 334 1 371 1 335 1 225 1 277 2 235 1 317 1 278 1 243 1 
93 1 161 1 50 1 115 1 3 1 40 1 334 1 306 1 371 1 78 1 225 1 336 1 156 1 278 1 
81 1 12 1 161 1 50 1 24 1 125 1 358 1 115 1 223 1 334 1 371 1 335 1 225 1 277 2 235 1 317 1 278 1 243 1 
136 1 
200 1 331 1 354 1 137 1 123 1 280 1 368 1 
302 1 303 1 15 1 368 1 369 1 200 1 234 1 354 1 187 1 188 1 175 1 
93 1 161 2 302 1 287 1 15 1 368 1 76 1 334 1 371 1 324 1 78 1 225 1 234 1 30 1 336 2 171 1 250 1 187 1 278 1 
92 1 228 1 333 1 210 1 261 4 312 1 360 1 264 1 26 1 28 1 234 2 195 1 214 1 175 3 123 1 11 1 179 1 63 1 302 2 15 2 368 5 150 4 349 1 17 1 200 3 354 4 353 1 187 2 188 6 157 1 206 1 
23 1 286 1 159 1 160 1 333 2 210 1 360 2 5 1 313 1 362 1 28 1 234 1 338 1 8 1 269 1 341 1 302 1 146 1 15 1 368 2 349 1 153 1 200 2 352 1 89 1 187 1 327 1 255 1 
331 1 302 1 137 1 15 1 368 1 200 1 234 1 354 1 187 1 123 1 
92 1 228 1 333 1 210 1 261 2 368 2 150 2 200 2 354 1 353 1 188 3 175 1 
349 1 28 1 179 1 354 1 123 1 264 1 
93 1 1 1 161 1 51 1 359 1 264 2 3 1 334 1 78 2 28 3 234 1 336 1 179 4 271 1 302 2 272 2 66 1 15 2 368 2 306 1 371 4 349 3 324 2 200 2 225 4 187 2 128 2 278 4 107 1 
93 1 23 3 231 1 161 1 96 1 117 1 334 1 362 2 78 1 336 1 238 1 338 2 8 3 34 1 124 1 35 1 343 1 320 1 83 1 146 2 102 1 85 1 149 1 371 1 67 1 225 1 250 1 327 2 227 1 278 1 189 2 255 1 
302 1 261 2 15 1 368 1 150 2 200 2 324 1 234 1 354 4 69 1 187 1 188 4 128 1 175 2 123 2 
208 1 79 1 135 1 
208 1 295 1 79 1 141 1 70 1 
208 1 79 1 135 1 
208 1 79 1 135 1 
208 1 229 1 79 1 
208 1 229 1 79 1 
208 1 229 1 79 1 
208 1 79 1 
27 1 19 1 
159 1 210 1 333 1 312 1 119 4 313 1 5 1 120 1 214 1 34 1 301 1 343 1 320 1 83 4 85 8 149 1 246 1 248 2 249 2 69 1 157 1 189 2 206 1 
92 1 228 1 159 1 210 1 333 2 312 1 263 1 138 1 5 1 313 1 119 6 120 1 169 1 214 2 34 2 301 1 343 2 320 2 83 5 85 11 149 2 246 1 248 2 249 3 69 1 157 1 189 4 206 1 
92 2 228 2 159 1 333 3 210 3 312 1 263 1 26 1 294 1 5 1 313 1 119 9 120 1 169 1 195 1 214 1 34 3 11 1 301 1 343 3 320 3 83 10 85 19 149 3 246 1 248 3 17 1 249 4 353 2 69 1 157 1 189 6 206 1 
92 2 228 2 159 1 333 3 210 2 312 1 263 1 294 1 26 1 5 1 313 1 119 10 120 1 169 2 195 1 214 1 34 3 11 1 301 1 343 3 320 3 83 7 85 17 149 3 246 1 248 3 17 1 249 5 353 1 69 1 157 1 189 6 206 1 
159 1 210 1 333 1 312 1 119 4 313 1 5 1 120 1 214 1 34 1 301 1 343 1 320 1 83 4 85 8 149 1 246 1 248 2 249 2 69 1 157 1 189 2 206 1 
92 2 228 2 333 2 210 2 312 1 26 1 119 6 169 1 195 1 214 1 34 1 11 1 343 1 320 1 83 6 85 12 149 1 246 1 248 1 17 1 249 2 353 2 157 1 189 2 206 1 
92 2 228 2 159 1 333 3 210 2 312 1 263 1 26 1 294 2 5 1 313 1 119 10 120 1 169 2 195 1 214 1 11 1 34 4 301 1 343 4 320 4 83 8 85 18 149 4 246 1 248 3 17 1 249 5 353 1 69 1 157 1 189 8 206 1 
92 3 228 3 333 3 210 2 312 1 26 1 294 2 119 9 169 3 237 1 195 1 214 1 11 1 34 4 343 4 320 4 83 7 85 16 149 4 246 1 248 3 17 1 249 6 353 2 157 1 189 8 206 1 
301 2 159 1 210 1 333 1 83 4 85 7 313 3 5 3 248 3 119 3 120 1 249 6 169 3 
92 2 228 2 159 1 333 3 210 2 312 1 26 1 294 2 5 1 313 1 119 10 120 1 169 1 237 1 195 1 214 1 11 1 34 4 301 1 343 4 320 4 83 8 85 18 149 4 246 1 248 3 17 1 249 4 353 1 69 1 157 1 189 8 206 1 
34 2 301 1 159 1 320 2 343 2 210 1 333 1 83 4 85 8 149 2 294 1 119 4 248 2 313 1 5 1 120 1 249 3 169 1 69 1 189 4 
301 1 159 1 333 1 210 1 83 3 85 6 313 1 5 1 248 2 119 3 120 1 249 2 69 1 280 1 
92 1 34 1 228 1 320 1 343 1 210 1 333 1 83 2 85 4 263 1 149 1 248 1 119 2 249 2 169 1 353 1 189 2 
92 1 228 1 210 1 333 1 83 4 85 7 138 1 248 1 119 3 249 2 169 1 353 1 214 2 157 1 206 1 
92 2 228 2 159 1 333 3 210 3 138 1 294 2 5 2 313 2 119 11 120 1 169 4 214 2 34 2 301 1 320 2 343 2 144 1 83 12 85 23 221 1 149 2 248 5 126 1 249 9 353 2 69 1 157 2 189 4 
83 1 214 1 85 1 
119 1 85 1 157 1 
92 1 34 1 228 1 343 1 320 1 333 1 210 1 83 3 85 6 263 1 149 1 119 3 248 2 166 1 249 3 169 1 353 1 189 2 
92 2 228 2 333 2 210 2 312 1 26 1 119 6 169 1 195 1 214 1 34 1 11 1 343 1 320 1 83 6 85 12 149 1 246 1 248 1 17 1 249 2 353 2 157 1 189 2 206 1 
159 1 333 1 210 1 83 3 85 6 119 3 313 1 5 1 248 1 249 2 169 1 
34 1 301 1 320 1 343 1 83 2 85 3 221 1 294 1 149 1 119 1 248 1 5 1 313 1 120 1 249 2 169 1 189 2 
34 1 343 1 320 1 159 1 333 2 210 2 83 5 85 10 149 1 246 1 313 2 5 2 248 3 119 5 249 5 169 2 189 2 269 1 
34 1 228 1 320 1 343 1 333 1 85 2 149 1 246 1 119 2 249 1 169 1 189 2 
92 1 34 1 228 1 320 1 343 1 210 1 333 1 83 2 85 4 149 1 246 1 248 1 119 2 249 2 169 1 353 1 189 2 
34 3 320 3 343 3 83 2 85 3 221 1 294 1 149 3 246 1 313 1 5 1 248 1 119 1 249 2 169 1 237 1 189 6 
92 3 228 3 159 2 113 1 333 5 210 5 263 1 138 1 294 2 5 3 313 3 119 16 120 1 169 5 237 1 214 4 297 1 34 5 301 1 343 5 320 5 83 18 85 34 221 1 149 5 246 1 248 7 249 12 353 3 69 1 157 3 279 1 189 10 206 1 
42 1 362 1 58 1 35 1 23 1 8 1 99 1 
178 1 35 1 23 1 181 1 94 1 42 1 58 1 362 1 350 1 61 1 99 1 8 1 
334 1 306 1 93 1 371 1 78 1 225 1 161 1 336 1 278 1 280 1 3 1 
93 1 35 1 23 2 161 1 146 1 102 1 198 1 96 1 334 1 362 1 371 1 78 1 225 1 336 1 250 1 327 1 278 1 8 2 
93 2 23 2 2 1 161 1 96 1 334 1 362 2 336 3 7 1 8 2 268 1 35 1 272 1 102 1 146 2 198 1 371 1 225 1 226 1 250 2 89 1 327 1 278 1 
93 2 23 2 2 1 161 1 96 1 334 1 362 2 336 3 7 1 8 2 268 1 35 1 180 1 272 1 146 2 198 1 38 1 371 2 225 2 226 1 250 2 89 1 327 1 278 2 
0 1 93 1 2 1 161 1 76 1 334 1 28 2 78 1 122 1 336 4 123 1 7 1 179 1 180 1 219 1 272 1 371 3 349 2 225 3 326 1 354 1 250 1 278 3 
93 1 179 1 180 1 2 1 219 1 161 1 272 1 356 1 76 1 334 1 349 2 371 3 78 1 28 2 225 3 122 1 336 4 354 1 250 1 123 1 278 3 7 1 
334 1 371 1 225 1 315 1 161 1 278 1 
142 1 21 1 93 2 182 1 161 3 37 1 147 1 152 1 334 2 371 7 335 1 78 2 225 7 315 1 31 1 336 3 171 1 250 1 240 1 278 6 241 1 
93 1 333 1 96 1 334 1 5 1 6 1 336 1 8 2 142 1 301 1 343 2 345 1 102 1 146 1 198 1 149 2 248 2 67 1 249 2 250 1 69 1 310 1 23 2 159 1 161 1 210 1 117 2 313 1 119 3 362 1 120 1 265 1 124 1 34 2 35 2 320 2 83 3 220 1 85 6 222 1 41 1 371 1 225 1 327 1 227 2 278 1 189 4 
331 1 112 1 137 1 356 1 264 1 76 1 78 1 28 3 234 2 122 1 336 2 174 1 123 1 179 2 219 1 302 2 199 1 15 2 368 1 371 1 349 3 200 1 225 1 204 1 354 1 187 2 278 1 107 1 
142 1 93 1 287 1 161 2 334 1 371 2 225 2 122 1 315 1 336 2 171 1 250 1 278 2 
142 1 93 1 180 1 161 1 3 1 306 1 334 1 371 4 78 1 225 4 336 1 251 1 278 4 
93 1 161 2 272 1 147 1 97 1 334 1 371 2 225 2 336 1 316 1 250 1 278 2 241 1 9 1 
334 1 371 1 78 1 225 1 12 1 277 1 161 1 24 1 278 1 243 1 
334 1 142 1 93 1 371 2 335 1 225 2 161 1 336 1 240 1 278 2 293 1 
142 1 93 2 161 2 272 1 37 1 3 1 306 1 152 1 334 2 371 5 78 1 225 5 336 3 251 1 278 4 240 1 
142 1 93 2 161 2 272 1 37 1 366 1 3 1 306 1 334 2 371 5 78 1 225 5 336 3 251 1 278 4 240 1 
93 1 35 1 23 2 161 1 146 1 198 1 96 1 38 1 334 1 362 1 371 1 78 1 225 1 336 1 250 1 327 1 278 1 8 2 
21 1 93 1 161 2 272 1 147 1 334 1 371 1 225 1 336 1 171 1 250 1 278 1 241 1 
362 1 23 1 270 1 275 1 244 1 239 1 154 1 103 1 8 1 
307 1 103 1 274 1 
35 1 270 1 244 1 103 1 347 1 
35 1 270 2 219 1 244 2 292 1 103 1 274 1 347 2 307 1 349 2 28 2 337 1 354 1 226 1 89 1 174 1 123 1 328 1 268 1 
193 1 209 1 245 1 280 1 
47 1 193 1 376 1 209 1 288 1 245 1 361 1 
192 1 305 1 361 1 
47 3 311 1 177 2 259 1 288 1 209 1 245 1 361 3 247 1 193 1 376 1 365 1 
47 2 193 1 300 1 376 1 209 1 288 1 245 1 254 1 361 2 
47 1 247 1 29 1 12 1 277 1 376 1 288 1 125 1 245 1 329 1 361 1 
47 1 247 1 193 1 376 1 288 1 245 1 361 1 
47 1 247 1 193 2 376 1 209 1 288 1 361 1 
47 2 247 1 193 1 72 1 376 2 288 2 245 1 281 1 101 1 361 2 
47 3 300 2 209 1 288 1 245 2 361 3 247 1 370 1 373 1 193 1 202 1 376 1 329 1 
47 2 300 1 12 1 209 1 288 1 13 1 245 1 125 1 358 1 361 2 247 1 193 1 277 2 376 1 243 1 
47 4 300 2 209 1 288 2 245 2 361 4 247 1 370 1 193 1 376 2 80 1 254 1 329 1 
47 1 247 1 193 1 376 1 209 1 288 1 245 1 361 1 
311 1 47 4 177 1 131 1 300 2 209 2 288 1 245 3 361 4 370 1 193 2 365 1 376 1 329 1 
47 2 10 1 300 1 288 1 209 1 245 1 289 1 361 2 247 1 193 1 18 1 376 1 
47 3 311 2 177 2 288 1 209 1 245 1 39 1 361 3 247 1 193 1 365 1 376 1 
183 1 236 2 68 1 245 2 
348 1 47 1 247 1 376 1 288 1 361 1 
47 2 247 1 373 1 193 1 300 1 376 1 209 1 288 1 245 1 361 2 
170 1 
47 1 247 1 193 1 376 1 209 1 288 1 245 1 361 1 
47 3 177 1 300 1 288 1 209 1 245 1 361 3 247 1 373 1 193 1 376 1 
370 1 131 1 245 1 329 1 
193 1 245 1 

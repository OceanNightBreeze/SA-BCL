#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 9 23 5 236 1 102 1 286 2 262 1 105 4 179 1 154 9 29 1 341 1 79 1 225 6 84 1 247 2 368 1 190 3 212 1 303 1 119 1 275 2 194 2 356 2 373 2 127 1 217 1 48 1 310 2 
358 9 23 5 236 1 102 1 286 2 262 1 105 4 179 1 154 9 29 1 341 1 79 1 225 6 84 1 247 2 368 1 190 3 212 1 303 1 119 1 275 2 194 2 356 2 373 2 127 1 217 1 48 1 310 2 
358 10 23 6 236 1 102 1 286 2 262 1 105 5 179 1 154 10 29 1 341 1 79 1 225 7 84 1 247 2 368 1 190 4 212 1 303 1 119 1 275 2 194 2 356 2 373 2 127 1 217 1 48 1 310 2 
358 7 23 4 236 1 102 1 286 2 262 1 105 3 179 1 154 7 29 1 341 1 79 1 225 4 84 1 247 2 368 1 190 2 303 1 119 1 275 2 194 2 356 1 373 2 127 1 217 1 48 1 310 2 
358 4 23 3 236 1 247 1 102 1 368 1 190 1 212 1 105 2 275 1 154 4 194 1 356 2 373 1 225 3 217 1 48 1 310 1 
358 2 23 1 247 1 286 1 368 1 163 1 354 1 179 1 275 1 154 2 373 1 226 1 127 1 217 1 48 1 310 1 
358 3 23 2 247 2 286 1 368 1 262 1 190 1 105 1 275 2 154 3 225 1 217 1 48 1 
358 9 23 5 236 1 101 1 102 1 286 1 262 1 105 4 154 9 29 1 225 7 84 1 247 2 368 1 190 3 212 1 275 2 194 1 61 1 356 2 373 1 217 1 48 1 310 1 
358 9 23 5 236 1 101 1 102 1 286 1 262 1 105 4 154 9 29 1 225 7 84 1 247 2 368 1 190 3 212 1 275 2 194 1 61 1 356 2 373 1 217 1 48 1 310 1 
206 1 254 1 165 1 
11 1 219 2 254 1 
10 2 1 2 188 1 309 2 20 2 88 2 131 2 16 1 
98 1 1 2 2 1 100 1 72 1 263 1 131 2 26 1 317 1 54 1 159 1 296 2 10 3 204 1 244 2 346 1 188 1 348 1 86 1 88 2 89 1 87 1 91 1 370 1 16 1 371 1 166 1 276 1 59 1 374 2 376 2 234 1 309 3 20 2 196 1 97 2 128 1 
10 1 40 1 1 1 174 1 309 1 20 1 88 1 131 1 266 1 16 1 
10 1 258 1 297 1 330 1 88 1 208 1 165 1 167 1 125 1 254 1 309 1 216 1 169 1 266 1 
10 1 258 1 1 1 330 1 88 1 208 2 131 1 165 1 167 1 254 1 20 1 309 1 216 1 169 2 266 1 
62 1 307 1 46 1 169 1 208 1 
0 1 254 1 307 1 158 1 46 1 169 2 208 2 165 1 
46 1 169 1 208 1 
10 1 1 1 174 1 208 1 88 1 131 1 210 1 16 1 40 1 307 1 20 1 309 1 169 1 266 1 
254 1 
155 1 254 1 307 1 158 1 46 1 169 2 208 2 165 1 
268 1 228 1 56 1 25 1 130 1 208 5 189 2 165 1 352 1 60 1 18 2 185 2 254 1 80 1 372 1 307 2 158 1 169 5 46 2 
188 1 206 1 
10 2 187 1 1 1 188 2 88 2 131 1 309 2 20 1 112 1 
264 1 144 1 273 1 
10 1 244 1 98 1 188 1 348 1 283 1 89 1 91 1 263 1 166 1 371 1 309 1 196 1 234 1 97 1 296 1 
10 2 244 1 98 1 348 1 273 1 88 1 89 1 91 1 263 1 131 1 371 1 166 1 234 1 196 1 357 1 20 1 309 2 97 1 47 1 296 1 
10 3 1 1 188 1 309 3 20 3 88 3 47 1 131 3 
10 1 40 1 309 1 20 1 88 1 131 1 266 1 
10 1 1 1 187 1 309 1 20 1 88 1 112 1 131 1 266 1 
258 1 98 1 1 2 2 1 330 1 72 1 263 1 131 3 73 1 317 1 54 1 159 1 266 1 296 1 10 4 204 1 244 1 187 1 188 1 348 1 86 1 161 1 87 1 88 3 208 1 89 1 91 1 370 1 16 1 371 1 166 1 167 1 374 1 376 2 234 1 196 1 216 1 309 4 20 3 357 1 169 1 97 1 47 1 128 1 
10 2 188 1 125 1 202 1 309 2 20 1 88 2 131 1 47 1 
10 3 258 1 1 1 187 1 330 1 208 1 88 3 131 3 73 1 167 1 254 1 35 1 357 1 20 3 309 3 216 1 169 1 47 2 266 1 
10 2 187 1 1 1 88 2 273 1 131 2 144 1 20 2 309 2 47 1 
10 1 244 1 98 1 188 1 348 1 89 1 91 1 263 1 166 1 371 1 309 1 196 1 234 1 97 1 296 1 
10 1 244 1 98 1 188 1 298 1 89 1 263 1 166 1 371 1 214 1 309 1 196 1 234 1 97 1 296 1 
69 1 2 1 222 1 332 1 261 1 72 2 264 2 134 1 77 1 317 1 319 1 342 1 159 1 204 1 346 2 366 1 85 1 86 1 273 2 144 2 374 4 376 2 65 1 128 1 
10 1 330 1 309 1 20 1 88 1 321 1 131 1 266 1 
10 5 245 1 1 1 187 1 188 1 125 1 202 1 357 1 309 5 20 4 88 5 131 4 47 2 257 1 
10 2 40 1 309 2 20 2 88 2 321 1 131 2 266 1 
360 1 200 1 
360 1 200 1 
267 1 288 1 
267 1 288 1 
267 1 288 1 
360 1 200 1 138 1 
267 1 360 2 338 1 200 2 325 1 288 1 
360 1 39 1 200 1 
360 1 39 1 200 1 
360 1 39 1 200 1 
133 1 360 1 200 1 
133 1 360 1 200 1 
133 1 360 1 200 1 
9 2 114 3 313 1 335 2 208 2 360 2 338 1 231 2 28 1 75 1 304 2 200 2 183 1 292 1 233 1 254 1 169 2 64 2 295 1 
10 2 9 1 188 1 115 1 114 1 300 1 88 2 208 1 131 2 15 1 150 1 360 1 231 1 304 1 183 1 200 1 213 1 81 1 309 2 20 2 138 1 169 1 21 1 64 1 
194 1 373 1 310 1 
373 1 163 1 310 1 
5 1 194 2 78 1 373 3 163 1 302 1 
205 1 5 1 194 1 373 2 163 1 302 1 
194 1 5 1 373 2 163 1 302 2 
172 1 219 3 331 1 260 1 71 2 333 1 107 1 134 1 185 1 33 2 158 1 111 2 342 1 268 3 11 1 366 1 85 1 208 5 189 1 15 1 165 1 195 1 60 2 18 1 213 1 95 1 254 2 372 1 307 4 19 1 46 1 169 5 21 1 
172 1 219 3 331 1 25 1 3 3 260 1 71 2 107 1 134 1 340 1 185 2 33 2 158 1 342 1 268 3 11 1 366 1 85 1 208 7 189 2 211 1 165 1 42 1 60 2 213 2 18 2 62 3 254 3 307 5 19 1 372 1 46 4 169 7 235 1 
172 1 331 1 219 4 25 1 260 1 333 1 71 2 151 1 107 1 134 1 185 1 33 2 111 1 342 1 268 3 11 2 366 1 85 1 208 3 189 1 165 1 60 2 18 1 213 1 95 1 254 3 307 2 169 3 
25 1 333 1 208 1 189 1 211 1 18 1 185 1 95 1 169 1 
13 1 206 1 263 1 
263 1 178 1 
146 1 
371 1 263 1 
371 1 132 1 13 2 232 1 234 1 263 3 
371 1 234 1 263 1 
337 1 263 1 
346 4 69 2 85 1 238 1 252 1 312 1 104 1 148 1 72 3 359 1 17 1 134 1 45 2 361 1 374 7 319 3 203 1 
346 4 69 2 85 1 238 1 252 1 312 1 104 1 148 1 72 3 359 1 17 1 134 1 45 2 361 1 374 7 319 3 203 1 
346 4 69 2 85 1 238 1 252 1 312 1 104 1 148 1 72 3 359 1 17 1 134 1 45 2 361 1 136 1 374 7 319 3 203 1 
172 3 69 5 238 1 312 1 239 1 104 1 148 2 72 15 359 2 180 1 134 4 317 1 361 5 362 1 319 10 342 3 320 1 203 2 55 1 204 1 36 3 346 16 366 3 85 4 86 1 252 2 38 4 141 1 17 1 41 1 45 3 374 31 376 2 128 1 
69 3 238 1 312 1 285 1 104 1 148 1 72 4 287 1 359 1 180 1 134 1 317 2 361 1 319 4 203 1 204 2 346 5 85 1 86 2 252 1 45 2 374 9 376 4 128 2 
358 2 23 1 98 1 286 1 290 1 154 2 291 1 316 1 78 1 110 1 225 1 296 1 244 1 345 1 247 1 12 1 57 1 116 1 368 1 163 1 166 1 275 1 194 1 373 2 63 1 97 1 217 1 48 1 310 1 67 1 
358 3 23 1 98 1 286 1 290 1 154 3 78 1 316 1 363 1 110 1 225 2 296 1 244 1 345 1 247 1 57 1 116 1 368 1 163 1 166 1 275 1 194 1 308 1 373 2 63 1 97 1 217 1 310 1 218 1 67 1 
358 2 23 1 98 1 286 1 290 1 154 2 316 1 78 1 225 2 296 1 244 1 345 1 116 1 368 1 163 1 166 1 194 1 308 1 373 2 63 1 97 1 217 1 218 1 67 1 310 1 
358 1 22 1 98 1 286 2 336 1 263 1 290 2 154 1 363 1 139 1 296 1 244 1 247 1 250 1 349 1 116 2 89 1 166 1 371 1 275 1 355 1 63 2 97 1 
358 1 98 1 286 1 290 1 154 1 316 1 78 1 110 1 296 1 244 1 345 1 247 1 12 1 57 1 116 1 163 1 166 1 275 1 194 1 373 2 63 1 97 1 48 1 310 1 218 1 67 1 
278 1 
98 1 330 1 334 2 240 2 152 1 289 1 339 1 158 3 157 1 296 2 343 1 10 1 244 2 11 2 297 1 299 1 349 1 207 2 208 5 165 1 166 1 167 1 123 1 355 1 60 2 18 1 125 1 254 2 309 1 216 1 169 5 66 1 258 1 219 2 220 1 260 1 263 1 182 1 315 1 135 2 185 1 266 1 268 2 89 2 88 1 367 1 189 1 93 4 371 1 193 2 326 2 372 1 46 6 97 2 377 2 
258 1 10 1 330 1 297 1 220 1 208 3 88 1 93 2 167 1 155 1 315 1 339 1 135 1 125 1 158 1 309 1 216 1 46 2 169 3 266 1 343 1 66 1 
258 1 330 1 220 1 339 1 315 1 155 1 158 1 343 1 266 1 10 1 297 1 88 1 208 3 165 1 93 3 167 1 193 1 125 1 254 1 216 1 309 1 46 1 169 3 66 1 
258 1 330 1 220 1 155 1 339 1 315 1 135 1 158 1 343 1 266 1 10 1 297 1 88 1 208 3 165 1 93 3 167 1 193 1 125 1 254 1 216 1 309 1 169 3 46 2 377 1 66 1 
330 1 334 2 240 2 152 1 155 1 339 1 201 1 158 3 343 1 10 1 11 2 297 1 58 1 207 2 208 5 165 5 167 1 123 1 60 1 253 1 306 1 18 1 125 1 254 5 216 1 309 1 169 5 66 1 258 1 220 1 315 1 135 4 185 1 266 1 268 1 88 1 189 1 93 6 193 4 277 1 326 2 372 1 46 7 377 4 
258 1 219 2 330 1 220 1 334 2 240 2 152 1 289 1 339 1 315 1 135 2 185 1 158 2 343 1 266 1 10 1 268 1 11 2 297 1 207 2 208 4 88 1 189 1 165 1 93 4 167 1 193 2 326 2 123 1 60 1 18 1 125 1 254 2 372 1 309 1 216 1 46 4 169 4 377 2 66 1 
258 1 330 1 220 1 334 2 240 2 152 1 339 1 315 1 135 2 185 1 158 2 343 1 266 1 10 1 268 1 11 2 297 1 207 2 58 1 88 1 208 4 189 1 165 1 93 4 167 1 193 2 326 2 277 1 123 1 60 1 306 1 18 1 125 1 254 1 372 1 216 1 309 1 46 4 169 4 377 2 66 1 
258 1 330 1 220 1 334 2 240 2 152 1 339 1 315 1 135 2 185 1 158 2 343 1 266 1 10 1 268 1 11 2 297 1 207 2 58 1 88 1 208 4 189 1 165 1 93 4 167 1 193 2 326 2 277 1 123 1 60 1 306 1 18 1 125 1 254 1 372 1 216 1 309 1 46 4 169 4 377 2 66 1 
258 1 219 2 330 1 220 1 334 2 149 1 152 1 6 2 339 1 315 1 135 2 185 1 158 2 343 1 266 1 10 1 268 1 297 1 58 1 88 1 208 4 189 1 165 1 92 1 353 2 93 4 167 1 193 2 326 2 60 1 18 1 125 1 254 1 372 1 216 1 309 1 46 4 169 4 377 2 255 1 66 1 
258 1 330 1 220 1 334 2 240 2 152 1 339 1 315 1 185 1 135 3 158 2 343 1 266 1 10 1 268 1 11 2 297 1 207 2 58 1 88 1 208 4 189 1 165 1 93 5 167 1 326 2 277 1 193 3 123 1 60 1 18 1 253 1 306 1 125 1 254 1 372 1 216 1 309 1 169 4 46 5 377 3 66 1 
258 1 330 1 220 1 334 2 240 2 152 1 339 1 315 1 185 1 135 3 158 2 343 1 266 1 10 1 268 1 11 2 297 1 207 2 58 1 88 1 208 4 189 1 165 1 93 5 167 1 326 2 277 1 193 3 123 1 60 1 18 1 253 1 306 1 125 1 254 1 372 1 216 1 309 1 169 4 46 5 377 3 66 1 
258 1 219 2 330 1 220 1 334 2 149 1 152 1 289 1 6 2 339 1 315 1 135 2 185 1 158 2 343 1 266 1 10 1 268 1 297 1 208 4 88 1 189 1 165 1 353 2 93 4 167 1 193 2 326 2 60 1 18 1 125 1 254 1 372 1 309 1 216 1 46 4 169 4 377 2 66 1 
69 2 2 1 238 1 312 1 261 1 104 1 148 1 72 3 359 1 264 1 134 1 317 1 319 2 159 1 204 1 346 3 85 1 188 2 206 1 86 1 273 1 144 1 45 1 374 6 376 2 128 1 
172 2 69 1 2 1 100 1 147 1 72 6 264 11 76 1 134 2 317 2 361 1 54 1 319 2 342 1 159 2 204 2 36 3 346 8 366 2 188 1 85 1 86 2 38 3 273 11 162 1 141 1 41 1 144 4 280 1 374 14 96 1 376 4 128 2 
2 1 100 1 131 1 72 1 52 1 108 1 317 1 54 1 8 1 159 1 266 1 10 1 204 1 346 1 188 1 86 1 88 1 162 1 327 1 144 1 374 2 309 1 20 1 357 1 376 2 47 1 128 1 
98 2 238 1 2 3 100 1 104 1 103 2 148 1 54 1 293 2 342 2 159 3 296 1 10 3 244 1 204 3 346 10 348 2 350 1 162 1 166 2 357 1 20 1 309 3 128 3 170 2 172 2 69 4 173 2 312 1 72 10 131 1 263 2 359 1 264 7 181 1 134 3 317 3 361 1 319 5 366 2 188 2 85 3 86 3 89 1 88 1 87 2 273 7 91 2 371 2 144 7 45 1 374 20 376 6 196 2 234 2 97 1 47 1 
98 2 70 1 237 1 2 2 100 1 261 1 131 1 263 3 72 1 241 1 30 1 291 1 317 2 54 1 159 2 227 1 296 8 10 1 244 7 204 2 346 1 86 2 349 1 88 1 89 2 274 1 166 2 371 2 59 2 355 1 328 1 374 2 309 1 20 1 376 4 97 8 47 1 128 2 218 1 
172 1 69 1 1 1 2 1 131 1 72 2 264 1 134 1 317 1 319 1 342 1 159 1 10 1 204 1 366 1 346 1 187 1 85 1 86 1 273 1 88 1 162 1 144 1 374 3 376 2 20 1 309 1 128 1 171 1 
204 1 366 1 346 2 2 1 86 1 332 1 261 1 273 1 264 1 134 1 144 1 317 1 361 1 374 2 376 2 319 1 159 1 128 1 
204 1 69 1 2 1 85 1 86 1 261 1 273 1 72 2 264 1 144 1 317 1 374 2 376 2 319 1 342 1 159 1 128 1 65 1 
172 1 69 1 2 1 261 1 72 2 264 2 134 1 317 1 361 1 319 2 342 1 159 1 204 1 346 2 366 1 85 1 86 1 273 2 144 2 374 4 376 2 128 1 
204 1 366 1 346 2 2 1 86 1 332 1 273 1 264 1 30 1 134 1 144 1 317 1 361 1 374 2 376 2 319 1 159 1 128 1 
204 1 69 1 2 1 85 1 86 1 273 1 72 2 264 1 30 1 144 1 317 1 374 2 376 2 319 1 342 1 159 1 128 1 65 1 
172 1 69 1 2 1 72 2 264 2 30 1 134 1 317 1 361 1 319 2 342 1 159 1 204 1 346 2 366 1 85 1 86 1 273 2 144 2 374 4 376 2 128 1 
172 1 69 1 2 1 72 2 264 2 134 1 317 1 361 1 319 2 342 1 159 1 204 1 346 2 366 1 85 1 86 1 273 2 144 2 374 4 376 2 128 1 
98 1 2 1 100 1 263 1 72 1 317 1 54 1 159 1 296 1 10 1 244 1 204 1 346 1 188 1 348 1 86 1 87 1 89 1 91 1 371 1 166 1 374 2 234 1 196 1 309 1 376 2 97 1 128 1 
98 1 2 1 100 1 263 1 72 1 317 1 54 1 159 1 296 1 10 1 244 1 204 1 346 1 188 1 298 1 86 1 89 1 371 1 166 1 374 2 214 1 234 1 196 1 215 1 309 1 376 2 97 1 128 1 
172 1 69 1 2 1 72 2 264 2 134 1 317 1 361 1 319 2 342 1 159 1 204 1 346 2 366 1 85 1 86 1 273 2 162 1 144 2 374 4 376 2 128 1 
98 1 172 1 69 1 2 1 72 2 263 1 264 2 291 1 134 1 317 1 361 1 319 2 342 1 159 1 296 1 10 1 244 1 204 1 346 2 366 1 85 1 348 1 86 1 273 2 87 1 91 1 166 1 371 1 144 2 374 4 234 1 196 1 309 1 376 2 97 1 170 1 128 1 
172 1 1 1 2 1 72 1 131 1 264 1 134 1 317 1 361 1 319 1 342 1 159 1 10 1 204 1 366 1 346 2 187 1 85 1 86 1 88 1 273 1 162 1 144 1 374 3 376 2 20 1 309 1 197 1 128 1 
68 1 172 1 69 1 145 1 176 1 72 5 287 1 134 1 317 2 361 1 319 2 342 1 204 2 36 1 346 4 366 1 85 1 86 2 323 1 324 1 38 2 141 1 41 1 124 1 143 1 374 9 375 1 376 4 128 2 
68 2 172 2 49 1 69 1 145 3 284 1 72 9 177 1 287 1 180 2 134 2 317 3 361 1 319 2 365 1 342 1 204 3 36 2 346 11 366 2 85 1 86 3 323 1 251 1 324 1 38 2 351 1 41 2 279 1 124 1 143 2 374 20 376 6 128 3 
68 1 172 1 69 1 145 1 176 1 72 5 287 1 134 1 317 2 361 1 319 2 342 1 204 2 36 1 346 4 366 1 85 1 86 2 323 1 324 1 38 2 141 1 41 1 279 1 124 1 143 1 374 9 376 4 128 2 
68 1 172 1 69 1 145 1 176 1 72 5 287 1 134 1 317 2 361 1 319 2 342 1 204 2 36 1 346 4 366 1 85 1 86 2 323 1 324 1 38 2 141 1 41 1 279 1 124 1 143 1 374 9 376 4 128 2 
68 1 172 6 49 1 69 6 238 1 145 3 284 1 312 1 104 1 148 1 72 22 177 1 287 1 359 1 180 1 134 7 317 2 361 6 319 12 365 1 342 6 204 2 36 4 346 24 366 6 85 7 86 2 251 1 323 1 324 1 38 4 351 1 141 2 41 2 279 1 124 1 143 1 45 1 374 46 96 2 376 4 128 2 
360 1 9 1 338 1 231 1 28 1 304 1 200 1 233 1 64 1 256 1 
300 1 138 1 
360 1 9 1 231 1 304 1 200 1 282 1 140 1 64 1 27 1 
9 1 114 2 335 1 208 1 360 1 338 1 231 1 28 1 75 1 304 1 183 1 200 1 292 1 233 1 254 1 169 1 64 1 295 1 
9 1 114 2 335 1 208 1 360 1 338 1 231 1 28 1 75 1 304 1 183 1 200 1 292 1 233 1 254 1 169 1 64 1 295 1 
9 1 114 2 335 1 208 1 360 1 338 1 231 1 28 1 75 1 304 1 183 1 200 1 292 1 233 1 254 1 169 1 64 1 295 1 
39 1 311 1 325 1 
39 1 311 1 325 1 
133 1 44 1 
133 1 44 1 325 1 
150 1 81 1 
335 1 131 2 360 1 150 1 200 1 81 1 138 1 295 1 10 2 9 1 37 1 188 1 114 1 115 1 300 1 208 1 88 2 15 1 231 1 304 1 213 1 307 1 309 2 20 2 169 1 21 1 64 1 
39 1 311 1 
133 1 44 1 325 1 
98 1 70 1 2 1 100 1 314 1 263 1 72 1 242 1 32 1 156 1 317 1 54 1 159 1 296 2 10 2 204 1 244 2 346 1 86 1 88 2 162 1 166 1 371 1 122 1 59 2 328 1 374 2 309 2 376 2 97 2 128 1 
244 2 98 1 345 1 57 1 175 1 163 1 369 1 166 1 194 1 291 1 78 1 373 2 63 1 97 2 310 1 218 1 296 2 344 1 67 1 
244 1 345 1 98 1 57 1 175 1 90 1 163 1 166 1 194 1 78 1 373 2 63 1 97 1 310 1 218 1 296 1 67 1 
22 1 244 1 98 1 349 1 89 1 263 1 369 1 166 1 371 1 355 1 109 1 63 1 97 1 296 1 
244 1 345 1 98 1 57 1 175 1 163 1 369 1 166 1 194 1 78 1 373 2 63 1 97 1 310 1 218 1 296 1 344 1 67 1 
249 1 
268 1 228 1 60 1 206 1 254 1 130 1 165 1 
219 1 240 1 185 1 158 1 268 1 11 1 207 1 208 1 189 1 165 1 123 1 60 1 18 1 254 2 372 1 46 1 169 1 
172 1 98 1 219 6 129 1 260 1 71 3 263 3 178 2 107 1 265 1 134 1 185 2 33 3 293 1 158 1 342 1 243 1 296 1 244 1 268 4 366 1 11 3 246 1 85 1 347 1 208 1 89 1 189 2 371 1 166 2 192 1 142 1 60 3 232 1 18 2 254 3 372 2 234 1 169 1 46 1 97 1 
172 2 49 1 219 6 260 1 71 5 177 1 151 1 107 2 134 2 185 2 33 5 83 1 158 1 365 1 342 2 268 8 36 1 11 3 366 2 85 2 251 1 38 1 351 1 208 1 367 1 189 2 165 2 41 1 60 5 18 2 254 5 372 2 126 1 169 1 46 1 
1 1 238 1 259 1 174 1 148 1 131 1 359 1 151 1 107 2 134 2 185 1 266 1 10 1 268 2 85 1 208 1 88 1 189 1 210 1 16 1 40 1 277 1 60 2 18 1 372 1 309 1 20 1 169 1 
228 1 268 1 130 1 189 1 165 1 60 1 18 1 185 1 254 1 372 1 
268 2 172 1 366 1 11 2 219 4 85 1 71 2 151 1 107 1 134 1 60 2 33 2 254 2 342 1 
254 1 158 1 169 1 208 1 46 1 165 1 
98 1 25 1 260 2 263 1 223 1 182 1 185 2 318 1 158 2 296 4 244 4 268 2 271 1 270 2 299 1 349 1 89 2 208 3 189 2 367 2 166 1 371 1 355 1 60 2 18 2 372 1 46 4 169 3 97 4 
98 1 1 2 2 1 72 1 131 2 263 1 317 1 54 1 159 1 296 1 10 3 204 1 244 1 188 1 348 1 86 1 89 1 88 2 87 1 91 1 370 1 16 1 166 1 371 1 374 1 376 2 309 3 20 2 196 1 234 1 97 1 128 1 
268 1 11 2 219 4 260 1 71 2 189 1 367 1 165 2 60 2 18 1 185 1 45 1 33 2 254 4 372 1 
150 1 28 1 304 1 364 1 64 1 
304 1 209 1 64 1 
304 1 209 1 64 1 
304 1 209 1 64 1 
304 1 64 1 94 1 
304 1 64 1 94 1 
304 1 64 1 94 1 
304 1 64 1 
360 1 200 1 
204 2 346 4 69 2 85 1 238 1 86 2 312 1 104 1 148 1 72 4 359 1 180 1 134 1 45 1 317 2 361 1 374 8 376 4 319 3 128 2 
346 3 69 2 85 1 238 1 134 1 206 1 45 1 374 6 312 1 319 2 104 1 148 1 72 3 359 1 
204 1 172 1 366 1 346 2 69 1 322 1 85 1 86 1 72 2 134 1 317 1 361 1 374 4 376 2 319 2 342 1 128 1 
36 1 346 3 172 1 366 1 69 1 85 1 38 2 72 4 141 1 41 1 134 1 361 1 374 7 319 2 342 1 
172 2 69 5 238 1 312 1 104 1 148 2 72 12 359 2 180 2 134 3 317 2 361 4 319 9 342 2 36 2 204 2 366 2 346 11 85 3 86 2 38 2 141 1 168 1 45 1 280 1 374 23 96 1 376 4 128 2 
374 1 38 1 72 1 
36 1 346 1 374 1 
204 1 172 1 366 1 346 3 322 1 69 2 85 1 86 1 72 3 134 1 317 1 361 2 374 6 376 2 293 1 319 4 342 1 128 1 
172 2 69 1 49 1 72 6 287 1 177 1 134 2 317 1 361 1 319 2 365 1 342 2 36 1 204 1 346 6 366 2 85 2 86 1 251 1 38 1 351 1 41 1 374 12 376 2 128 1 
346 3 69 1 238 1 85 1 148 1 72 3 359 1 134 1 361 1 374 6 319 2 
204 1 346 1 69 1 86 1 312 1 104 1 148 1 72 2 359 1 180 1 168 1 317 1 361 1 374 3 376 2 319 2 128 1 
204 1 346 5 69 3 238 1 85 2 259 1 86 1 148 2 72 5 287 1 359 2 134 2 317 1 361 2 374 10 376 2 319 5 128 1 
204 1 366 1 346 2 86 1 287 1 134 1 317 1 361 1 374 2 376 2 319 1 128 1 
204 1 172 1 366 1 346 2 69 1 85 1 86 1 72 2 287 1 134 1 317 1 361 1 374 4 376 2 319 2 342 1 128 1 
204 3 346 1 69 1 86 3 148 1 176 1 72 2 287 1 359 1 180 1 168 1 317 3 361 1 374 3 376 6 319 2 128 3 
172 3 69 7 238 2 312 1 104 1 148 3 72 18 176 1 287 1 359 3 180 2 134 5 317 5 362 1 361 5 319 12 320 1 342 3 55 1 204 5 36 3 346 16 366 3 322 1 85 5 86 5 38 4 141 1 41 1 168 1 45 1 374 34 376 10 128 5 
69 2 238 1 312 1 104 1 148 1 72 4 287 1 359 1 134 1 317 1 319 2 36 1 204 1 346 4 85 1 86 1 38 1 351 1 41 1 45 1 374 8 376 2 128 1 
172 1 69 2 238 1 312 1 104 1 148 1 72 5 287 1 359 1 134 2 317 2 361 1 319 3 204 2 36 1 346 6 366 1 322 1 85 1 86 2 38 2 351 1 141 1 41 1 45 1 374 11 376 4 128 2 
172 2 49 1 69 3 238 1 312 1 104 1 148 1 72 10 287 1 177 1 359 1 180 1 134 3 317 3 361 1 319 4 365 1 342 2 36 1 204 3 346 9 366 2 322 1 85 3 86 3 251 1 38 1 351 1 41 1 45 1 374 19 376 6 128 3 
172 2 69 3 49 1 238 1 312 1 104 1 148 1 72 7 287 1 177 1 359 1 180 1 134 3 317 3 361 2 319 5 365 1 342 1 36 1 204 3 346 10 366 2 322 1 85 2 86 3 251 1 38 1 351 1 41 1 45 1 374 17 376 6 128 3 
69 2 238 1 312 1 104 1 148 1 72 4 287 1 359 1 134 1 317 1 319 2 36 1 204 1 346 4 85 1 86 1 38 1 351 1 41 1 45 1 374 8 376 2 128 1 
172 2 69 1 49 1 72 6 287 1 177 1 134 2 317 1 361 1 319 2 365 1 342 2 36 1 204 1 346 6 366 2 85 2 86 1 251 1 38 1 351 1 41 1 374 12 376 2 128 1 
172 2 49 1 69 3 238 1 312 1 104 1 148 1 72 8 177 1 287 1 359 1 180 2 134 3 317 4 361 2 319 5 365 1 342 1 204 4 36 1 346 10 366 2 322 1 85 2 86 4 251 1 38 1 351 1 41 1 45 1 374 18 376 8 128 4 
172 3 49 1 69 3 72 7 176 1 177 1 287 1 180 2 134 3 317 4 361 3 319 6 365 1 342 2 204 4 36 1 346 9 366 3 85 2 86 4 251 1 38 1 351 1 41 1 374 16 376 8 128 4 
346 3 69 3 85 1 238 1 312 2 104 1 148 3 72 4 359 3 134 1 361 3 374 7 319 6 
172 2 49 1 69 3 238 1 312 1 104 1 148 1 72 8 176 1 177 1 287 1 359 1 180 2 134 3 317 4 361 1 319 4 365 1 342 1 204 4 36 1 346 10 366 2 85 2 86 4 251 1 38 1 351 1 41 1 45 1 374 18 376 8 128 4 
10 1 99 1 188 1 125 1 202 1 309 1 88 1 
10 1 229 1 99 1 188 1 51 1 88 1 106 1 125 1 137 1 202 1 309 1 294 1 
166 1 371 1 244 1 98 1 355 1 206 1 349 1 89 1 97 1 263 1 296 1 
10 2 244 1 98 1 188 1 88 1 89 1 91 1 263 1 131 1 371 1 166 1 234 1 196 1 20 1 309 2 97 1 47 1 296 1 
258 1 98 1 330 1 199 1 131 1 263 3 337 1 296 1 266 1 10 2 244 1 270 1 188 1 88 2 91 1 166 1 371 2 309 2 20 2 196 1 234 2 97 1 47 1 
258 1 98 1 330 1 199 1 131 1 263 3 337 1 296 2 266 1 10 2 244 2 270 1 160 1 188 1 88 2 166 1 371 2 214 1 309 2 20 2 196 1 234 2 97 2 47 1 
1 1 174 1 263 1 131 1 178 1 7 1 266 1 296 1 10 1 244 1 270 1 208 1 88 1 165 1 210 1 16 1 40 1 254 1 20 1 309 1 169 1 97 1 
1 1 129 1 174 1 263 1 131 1 178 1 266 1 296 1 10 1 244 1 270 1 208 1 88 1 165 1 210 1 16 1 40 1 254 1 20 1 309 1 169 1 97 1 
166 1 241 1 244 1 98 1 97 1 296 1 
244 6 98 2 70 1 237 1 50 1 89 2 263 3 274 1 241 1 371 2 166 3 121 1 59 1 291 1 232 1 234 1 97 7 218 1 227 1 296 7 186 1 
98 1 69 2 238 1 2 2 312 1 104 1 103 1 148 1 72 3 263 1 131 1 359 1 264 1 291 1 134 1 156 1 317 2 319 2 159 2 296 1 10 2 204 2 244 1 346 3 188 2 85 1 348 1 86 2 273 1 88 1 87 1 162 1 91 1 371 1 166 1 144 1 45 1 374 6 234 1 196 1 309 2 20 1 376 4 97 1 47 1 128 2 170 1 
1 1 238 1 148 1 151 1 107 2 158 1 296 1 10 1 244 1 246 1 208 2 165 2 210 1 16 1 60 5 18 2 254 2 307 1 20 1 309 1 169 2 259 1 129 1 130 1 174 1 263 1 131 1 178 1 359 1 265 1 134 2 185 2 318 1 266 1 228 1 268 4 85 2 89 1 88 1 189 2 142 1 40 1 372 2 46 1 97 1 
244 2 98 1 347 1 13 1 263 2 241 1 371 1 166 2 291 1 232 1 234 1 97 2 296 2 
244 4 98 1 160 1 349 1 89 1 263 1 74 1 166 1 371 1 291 1 355 1 97 4 296 4 
244 2 98 1 270 1 50 1 14 1 263 1 371 1 166 2 53 1 234 1 97 2 296 2 329 1 186 1 
166 1 244 1 98 1 345 1 373 1 89 1 97 1 163 1 310 1 296 1 
244 2 98 1 70 1 263 1 371 1 166 1 242 1 291 1 97 2 296 2 218 1 
244 4 98 2 270 1 70 1 349 1 89 1 263 3 274 1 74 1 371 2 166 2 355 1 291 1 97 5 296 5 227 1 
244 4 98 2 270 1 70 1 349 1 89 1 263 3 74 1 371 2 166 2 355 1 291 1 82 1 97 5 296 5 227 1 
10 2 244 1 98 1 188 1 88 1 89 1 263 1 131 1 371 1 166 1 214 1 234 1 196 1 20 1 309 2 97 1 47 1 296 1 
244 1 98 1 270 1 50 1 263 1 371 1 166 2 121 1 232 1 234 1 97 1 296 1 186 1 
188 1 272 1 221 1 34 1 4 1 
258 1 24 1 188 1 330 1 221 2 272 2 208 2 4 2 165 1 73 1 167 1 31 1 254 1 34 1 307 1 216 1 169 2 266 1 113 1 
10 1 221 1 314 1 88 1 4 1 122 1 32 1 34 1 309 1 
24 1 31 1 34 1 
23 1 206 1 368 1 217 1 
358 1 23 1 275 1 154 1 247 1 368 1 217 1 
290 1 154 1 286 1 
358 3 23 1 247 1 117 1 301 1 191 1 368 1 275 1 179 2 154 3 48 1 217 1 
358 2 23 1 275 1 154 2 247 1 356 1 225 1 368 1 217 1 
358 1 23 1 275 1 236 1 194 1 154 1 247 1 373 1 105 1 48 1 310 1 
358 1 23 1 275 1 154 1 247 1 217 1 48 1 
358 1 275 1 154 1 247 1 368 1 217 2 48 1 
358 2 23 1 198 1 269 1 247 2 230 1 275 2 154 2 217 1 48 1 
358 3 84 1 23 2 247 1 368 1 190 1 105 1 275 1 154 3 29 1 225 2 217 1 48 1 
358 2 23 1 247 1 248 1 368 1 163 1 275 1 154 2 194 1 78 1 373 2 225 1 217 1 48 1 310 1 
358 4 23 2 247 2 368 1 190 1 212 1 105 1 275 2 154 4 356 1 225 2 217 1 48 1 
358 1 23 1 275 1 154 1 247 1 368 1 217 1 48 1 
358 4 23 3 247 1 117 1 301 1 368 2 190 1 105 1 179 1 275 1 154 4 305 1 225 2 217 2 
358 2 23 1 247 1 101 1 368 1 164 1 120 1 275 1 154 2 225 1 217 1 48 1 
358 3 23 1 247 1 117 1 301 2 368 1 275 1 179 2 154 3 184 1 48 1 217 1 
224 1 153 1 23 2 43 2 
358 1 275 1 154 1 247 1 281 1 48 1 
84 1 358 2 23 1 275 1 154 2 247 1 225 1 368 1 217 1 48 1 
118 1 
358 1 23 1 275 1 154 1 247 1 368 1 217 1 48 1 
84 1 358 3 23 1 179 1 275 1 154 3 247 1 225 1 368 1 217 1 48 1 
23 1 305 1 190 1 105 1 
23 1 217 1 

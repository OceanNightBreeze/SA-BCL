#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
324 1 258 1 192 1 282 1 286 2 285 2 261 1 33 9 11 1 361 3 12 1 292 1 265 1 205 9 43 2 230 1 248 1 179 5 274 2 302 6 110 1 49 1 303 1 24 2 138 2 236 4 376 2 305 1 
324 1 258 1 192 1 282 1 285 2 261 1 286 2 33 9 11 1 361 3 12 1 292 1 265 1 205 9 43 2 230 1 248 1 179 5 274 2 302 6 110 1 49 1 24 2 303 1 138 2 236 4 376 2 305 1 
324 1 258 1 192 1 282 1 285 2 261 1 286 2 33 10 11 1 361 4 12 1 292 1 265 1 205 10 43 2 230 1 248 1 179 6 274 2 302 7 110 1 49 1 24 2 303 1 138 2 236 5 376 2 305 1 
324 1 192 1 282 1 285 2 261 1 286 1 33 7 11 1 361 2 12 1 292 1 265 1 205 7 43 2 230 1 248 1 179 4 274 2 302 4 110 1 49 1 24 2 303 1 138 2 236 3 376 2 305 1 
324 1 258 1 205 4 43 1 230 1 282 1 286 2 179 3 274 1 302 3 33 4 361 1 49 1 24 1 138 1 236 2 376 1 265 1 
297 1 192 1 337 1 205 2 43 1 282 1 285 1 179 1 274 1 33 2 49 1 12 1 333 1 138 1 376 1 265 1 
205 3 43 2 282 1 261 1 285 1 179 2 302 1 33 3 361 1 49 1 138 2 236 1 265 1 
324 1 27 1 258 1 282 1 285 1 261 1 286 2 33 9 361 3 292 1 265 1 203 1 205 9 43 2 230 1 179 5 302 7 274 1 49 1 24 1 236 4 138 2 305 1 376 1 
324 1 27 1 258 1 282 1 285 1 261 1 286 2 33 9 361 3 292 1 265 1 203 1 205 9 43 2 230 1 179 5 302 7 274 1 49 1 24 1 236 4 138 2 305 1 376 1 
152 1 195 1 335 1 
152 1 332 2 172 1 
151 2 345 2 113 2 312 2 126 1 58 1 278 2 364 2 
139 1 0 1 120 1 256 1 58 1 284 1 328 1 283 1 170 2 32 1 171 1 242 1 10 1 125 1 85 1 86 2 312 3 126 1 364 2 268 1 151 3 67 1 70 1 18 1 207 2 369 1 23 1 345 2 93 2 113 2 47 1 136 1 373 1 186 1 95 1 348 2 278 2 
151 1 80 1 345 1 158 1 113 1 126 1 312 1 243 1 278 1 364 1 
151 1 152 1 155 1 341 1 180 1 135 1 344 1 158 1 113 1 322 1 312 1 36 1 335 1 37 1 
151 1 152 1 155 1 341 2 180 1 345 1 135 1 344 1 158 1 113 1 312 1 278 1 335 1 37 2 364 1 
39 1 100 1 341 1 271 1 37 1 
152 1 100 1 234 1 341 2 255 1 271 1 335 1 37 2 
100 1 341 1 37 1 
80 1 151 1 341 1 300 1 271 1 158 1 345 1 113 1 126 1 312 1 243 1 278 1 37 1 364 1 
152 1 
78 1 152 1 100 1 341 2 255 1 271 1 335 1 37 2 
269 1 152 1 100 2 154 1 71 2 341 5 219 2 271 2 178 1 157 1 321 1 61 1 183 2 73 1 184 1 255 1 335 1 216 1 37 5 
268 1 0 1 151 2 283 1 22 1 288 1 242 1 125 1 345 1 93 1 85 1 47 1 113 1 186 1 86 1 312 2 50 1 95 1 348 1 364 1 
58 1 195 1 
151 2 194 1 58 1 158 1 345 1 113 2 312 2 35 1 278 1 77 1 364 1 
228 1 48 1 50 1 
268 1 0 1 151 1 58 1 283 1 223 1 242 1 125 1 93 1 47 1 85 1 186 1 86 1 312 1 348 1 95 1 
151 3 58 1 194 1 288 1 158 1 345 3 113 3 312 3 278 1 364 3 
80 1 151 1 158 1 345 1 113 1 312 1 364 1 
151 1 345 1 158 1 113 1 312 1 35 1 278 1 77 1 364 1 
139 1 0 1 256 1 58 1 283 1 328 1 288 1 170 2 8 1 171 1 242 1 10 1 125 1 85 1 86 1 312 4 126 1 35 1 37 1 364 3 268 1 151 4 155 1 70 1 18 1 341 1 207 1 22 1 180 1 369 1 23 1 135 1 345 3 344 1 158 1 93 1 47 1 113 3 373 1 186 1 95 1 348 1 187 1 278 2 
41 1 151 2 345 1 113 2 312 2 58 1 36 1 364 1 288 1 
129 1 151 3 152 1 155 1 341 1 22 1 288 2 180 1 8 1 158 1 345 3 135 1 344 1 113 3 312 3 35 1 278 1 37 1 364 3 
228 1 151 2 288 1 345 2 113 2 312 2 50 1 35 1 278 1 364 2 
268 1 0 1 151 1 58 1 283 1 242 1 125 1 93 1 47 1 85 1 186 1 86 1 312 1 348 1 95 1 
268 1 151 1 58 1 283 1 287 1 242 1 93 1 47 1 85 1 186 1 86 1 312 1 348 1 95 1 25 1 
326 1 141 1 353 1 256 1 59 1 359 1 170 2 171 1 10 2 313 1 173 1 228 2 106 1 18 1 175 1 207 4 249 1 369 1 23 1 48 2 136 2 373 1 50 2 116 1 
60 1 151 1 158 1 344 1 345 1 113 1 312 1 364 1 
151 2 194 1 58 1 288 1 158 1 345 2 113 2 312 2 35 1 278 1 364 2 
60 1 80 1 151 2 158 1 345 2 113 2 312 2 364 2 
371 1 354 1 
371 1 354 1 
46 1 20 1 
46 1 20 1 
46 1 20 1 
193 1 371 1 354 1 
336 1 371 1 354 1 
46 1 327 1 371 2 354 2 20 1 314 1 
193 1 371 1 354 1 
193 1 371 1 354 1 
371 1 354 1 52 1 
371 1 354 1 52 1 
371 1 354 1 52 1 
149 2 200 1 16 1 152 1 68 3 327 1 164 1 339 2 354 2 341 2 6 1 360 2 31 2 212 1 371 2 235 1 75 2 188 1 37 2 
1 1 55 1 149 1 151 2 336 1 318 1 68 1 339 1 341 1 354 1 239 1 355 1 58 1 360 1 345 2 253 1 94 1 113 2 371 1 235 1 312 2 75 1 37 1 364 2 
274 1 24 1 376 1 
274 1 297 1 376 1 
119 1 325 1 274 3 297 1 24 2 294 1 
119 1 274 2 297 1 24 1 294 1 124 1 
119 1 274 2 297 1 24 1 294 2 
55 1 326 1 141 1 238 1 100 1 219 1 167 1 59 1 30 1 241 1 332 3 362 2 172 1 37 5 335 1 266 1 269 2 152 2 318 1 154 1 108 2 71 1 341 5 175 1 271 4 368 1 251 2 157 3 183 1 94 1 255 1 306 1 
326 3 141 3 238 3 100 6 219 2 122 1 222 1 59 3 30 1 225 1 332 9 13 1 172 3 37 9 335 1 266 2 269 6 39 5 318 4 152 5 154 1 108 6 71 2 341 9 21 1 175 3 271 7 368 2 250 1 251 6 92 5 157 8 183 2 73 1 255 1 
326 1 141 1 238 1 219 1 167 1 59 1 332 4 362 1 172 2 335 1 37 3 266 1 269 2 152 3 318 1 71 1 108 2 341 3 175 1 271 2 368 1 251 2 157 3 183 1 73 1 306 1 
326 2 141 2 238 2 219 1 167 1 222 1 59 2 332 7 362 2 172 3 335 1 37 4 266 1 269 4 152 4 318 2 108 4 71 1 341 4 21 1 175 2 271 3 368 1 250 1 251 4 157 5 183 1 73 1 306 1 
242 1 104 1 195 1 
242 1 53 1 
19 1 
242 1 186 1 
242 3 257 1 104 2 186 1 95 1 209 1 
242 1 186 1 95 1 
103 1 242 1 
326 1 316 1 161 1 202 1 106 2 72 1 340 1 132 1 175 1 301 2 207 7 81 1 177 1 10 3 136 4 197 1 313 3 
326 1 316 1 161 1 202 1 106 2 72 1 340 1 132 1 175 1 301 2 207 7 81 1 177 1 10 3 136 4 197 1 313 3 
326 1 316 1 161 1 202 1 106 2 72 1 340 1 132 1 175 1 301 2 207 7 81 1 177 1 10 3 45 1 136 4 197 1 313 3 
140 1 56 1 256 1 307 1 123 1 81 1 170 2 171 1 10 3 197 2 313 2 202 1 106 1 299 1 72 1 340 1 132 1 207 6 301 1 369 1 112 1 136 3 373 1 114 1 
326 1 256 2 161 1 307 1 81 1 170 4 171 2 10 4 197 1 313 4 316 1 202 1 106 3 72 1 132 1 175 1 207 9 301 2 177 1 211 1 369 2 109 1 373 2 136 5 
325 1 28 1 282 1 357 1 283 1 145 1 285 1 289 1 33 2 83 1 84 1 86 1 265 1 315 1 297 1 205 2 43 1 91 1 179 1 302 1 274 2 181 1 370 1 93 1 47 1 49 1 24 1 348 1 138 1 376 1 
325 1 28 1 283 1 285 1 289 1 33 3 83 1 84 1 86 1 147 1 265 1 315 1 297 1 205 3 89 1 43 1 342 1 91 1 179 1 302 2 274 2 181 1 370 1 93 1 47 1 49 1 24 1 348 1 138 1 376 1 
325 1 28 1 283 1 285 1 289 1 33 2 83 1 84 1 86 1 147 1 265 1 297 1 205 2 342 1 179 1 302 2 274 2 181 1 370 1 93 1 47 1 49 1 24 1 348 1 376 1 
268 1 28 2 162 1 99 1 89 1 205 1 43 1 285 2 133 1 289 2 169 1 33 1 93 1 84 2 86 1 348 1 138 1 
325 1 297 1 28 1 205 1 43 1 282 1 283 1 91 1 357 1 285 1 274 2 289 1 370 1 181 1 33 1 83 1 93 1 84 1 47 1 24 1 147 1 86 1 348 1 138 1 376 1 315 1 
7 1 
279 2 142 1 189 1 281 2 191 2 100 6 5 1 283 1 242 1 332 2 335 1 151 1 152 2 17 1 154 1 155 1 71 1 341 5 156 2 157 2 344 1 158 1 254 1 113 1 255 3 348 2 118 1 351 1 352 1 165 2 219 1 260 1 82 1 224 2 309 1 310 1 86 2 312 1 172 2 128 1 36 1 37 5 268 2 366 4 269 2 44 2 368 1 180 1 183 1 135 1 93 2 47 1 186 1 322 1 276 1 
78 1 100 2 82 1 312 1 36 1 128 1 37 3 366 2 151 1 17 1 155 1 341 3 156 1 180 1 135 1 344 1 158 1 113 1 254 1 322 1 255 1 276 1 
78 1 281 1 100 1 82 1 312 1 36 1 128 1 37 3 335 1 366 3 151 1 17 1 152 1 155 1 341 3 180 1 135 1 344 1 158 1 113 1 254 1 322 1 255 1 276 1 
78 1 281 1 100 2 82 1 312 1 36 1 128 1 37 3 335 1 366 3 151 1 17 1 152 1 155 1 341 3 156 1 44 1 180 1 135 1 344 1 158 1 113 1 254 1 322 1 255 1 276 1 
279 2 281 4 100 7 191 2 335 5 150 1 201 1 151 1 17 1 152 5 155 1 154 1 71 1 341 5 156 4 157 1 158 1 344 1 254 1 113 1 74 1 255 3 78 1 351 1 79 1 352 1 165 2 219 1 82 1 224 2 312 1 128 1 36 1 172 2 37 5 366 6 87 1 269 1 44 4 180 1 135 1 183 1 322 1 276 1 
279 2 281 2 191 2 100 4 332 2 335 1 151 1 17 1 152 2 155 1 154 1 71 1 341 4 156 2 157 1 158 1 344 1 113 1 254 1 255 2 351 1 352 1 165 2 219 1 82 1 224 2 310 1 312 1 36 1 128 1 172 2 37 4 366 4 269 1 44 2 180 1 135 1 183 1 322 1 276 1 
279 2 79 1 351 1 352 1 281 2 100 4 191 2 165 2 219 1 82 1 224 2 312 1 172 2 36 1 128 1 335 1 37 4 366 4 269 1 150 1 151 1 152 1 17 1 155 1 154 1 71 1 341 4 156 2 44 2 180 1 157 1 183 1 135 1 344 1 158 1 113 1 254 1 322 1 74 1 255 2 276 1 
279 2 79 1 351 1 352 1 281 2 100 4 191 2 165 2 219 1 82 1 224 2 312 1 172 2 36 1 128 1 335 1 37 4 366 4 269 1 150 1 151 1 152 1 17 1 155 1 154 1 71 1 341 4 156 2 44 2 180 1 157 1 183 1 135 1 344 1 158 1 113 1 254 1 322 1 74 1 255 2 276 1 
79 1 352 1 281 2 100 4 191 2 165 2 219 1 144 2 240 2 82 1 330 1 332 2 312 1 36 1 128 1 335 1 37 4 366 4 269 1 151 1 152 1 17 1 204 1 155 1 154 1 71 1 341 4 156 2 44 2 180 1 157 1 183 1 135 1 344 1 158 1 113 1 254 1 322 1 255 2 276 1 350 1 
279 2 79 1 351 1 352 1 281 3 191 2 100 5 165 2 219 1 82 1 224 2 312 1 172 2 36 1 128 1 335 1 37 4 366 5 269 1 150 1 201 1 151 1 152 1 17 1 154 1 155 1 71 1 341 4 156 3 44 3 180 1 157 1 183 1 135 1 344 1 158 1 113 1 254 1 322 1 74 1 255 2 276 1 
279 2 79 1 351 1 352 1 281 3 191 2 100 5 165 2 219 1 82 1 224 2 312 1 172 2 36 1 128 1 335 1 37 4 366 5 269 1 150 1 201 1 151 1 152 1 17 1 154 1 155 1 71 1 341 4 156 3 44 3 180 1 157 1 183 1 135 1 344 1 158 1 113 1 254 1 322 1 74 1 255 2 276 1 
352 1 281 2 100 4 191 2 165 2 219 1 144 2 240 2 82 1 310 1 332 2 312 1 128 1 36 1 335 1 37 4 366 4 269 1 151 1 152 1 17 1 154 1 155 1 204 1 71 1 341 4 156 2 44 2 180 1 157 1 183 1 135 1 344 1 158 1 254 1 113 1 322 1 255 2 276 1 
326 1 161 1 256 1 195 1 58 2 81 1 359 1 170 2 171 1 10 3 313 2 228 1 316 1 106 2 18 1 132 1 175 1 207 6 301 1 177 1 369 1 23 1 48 1 373 1 136 3 50 1 
139 1 56 1 256 2 123 1 194 1 58 1 170 4 171 2 10 3 293 1 365 1 38 1 18 2 207 4 272 1 369 2 23 1 158 1 48 3 373 2 136 1 50 3 114 1 
0 1 139 1 256 1 120 1 58 1 283 1 223 1 288 1 170 2 242 1 171 1 125 1 10 1 85 1 86 1 312 2 293 1 198 1 364 1 268 1 228 1 151 2 18 1 207 2 22 1 273 1 369 1 23 1 345 1 93 1 47 1 113 1 186 1 373 1 372 1 136 1 95 1 348 1 
326 3 139 1 0 2 141 2 238 2 58 2 328 2 283 2 288 1 59 2 146 1 329 1 242 2 62 2 10 10 147 1 293 1 15 2 151 3 69 2 106 4 18 3 72 4 301 1 207 20 22 1 23 3 345 1 113 1 348 3 161 1 120 1 256 3 356 2 81 1 170 6 171 3 125 2 85 2 86 3 312 3 313 8 364 1 268 1 316 1 228 7 132 1 175 3 177 1 369 3 93 3 47 2 48 7 373 3 186 2 136 10 95 2 50 7 277 1 
117 1 139 1 256 2 120 1 5 1 260 1 283 1 145 1 288 1 359 1 170 4 32 1 242 1 171 2 10 1 86 3 312 1 364 1 268 1 151 1 18 2 131 1 206 1 207 2 369 2 23 2 345 1 93 3 113 1 47 1 373 2 136 1 186 1 348 3 
326 1 141 1 256 1 238 1 218 1 59 1 170 2 171 1 10 2 312 1 35 1 293 1 313 1 364 1 228 1 151 1 106 1 18 1 175 1 207 3 369 1 23 1 345 1 48 1 113 1 373 1 136 1 50 1 278 1 
141 1 228 1 256 1 18 1 72 1 207 2 175 1 359 1 369 1 170 2 23 1 171 1 48 1 373 1 136 2 50 1 313 1 173 1 
326 1 228 1 256 1 353 1 106 1 18 1 207 2 59 1 359 1 369 1 170 2 23 1 171 1 10 2 48 1 373 1 50 1 313 1 
326 1 141 1 256 1 238 1 59 1 359 1 170 2 171 1 10 2 313 2 228 2 106 1 18 1 72 1 175 1 207 4 369 1 23 1 48 2 136 2 373 1 50 2 
141 1 228 1 256 1 18 1 72 1 206 1 207 2 175 1 369 1 170 2 23 1 171 1 48 1 373 1 136 2 50 1 313 1 173 1 
326 1 228 1 256 1 353 1 106 1 18 1 206 1 207 2 59 1 369 1 170 2 23 1 171 1 10 2 48 1 373 1 50 1 313 1 
326 1 141 1 256 1 238 1 59 1 170 2 171 1 10 2 313 2 228 2 106 1 18 1 72 1 206 1 175 1 207 4 369 1 23 1 48 2 136 2 373 1 50 2 
326 1 141 1 256 1 238 1 59 1 170 2 171 1 10 2 313 2 228 2 106 1 18 1 72 1 207 4 175 1 369 1 23 1 48 2 136 2 373 1 50 2 
0 1 139 1 120 1 256 1 58 1 283 1 328 1 170 2 242 1 171 1 125 1 10 1 85 1 86 1 312 1 268 1 151 1 18 1 207 2 369 1 23 1 93 1 47 1 136 1 186 1 373 1 95 1 348 1 
139 1 120 1 256 1 101 1 58 1 283 1 287 1 170 2 242 1 171 1 10 1 85 1 86 1 312 1 268 1 151 1 18 1 207 2 369 1 23 1 93 1 47 1 136 1 186 1 373 1 95 1 348 1 25 1 
326 1 141 1 256 1 238 1 59 1 170 2 171 1 10 2 293 1 313 2 228 2 106 1 18 1 72 1 175 1 207 4 369 1 23 1 48 2 136 2 373 1 50 2 
326 1 0 1 141 1 256 1 238 1 356 1 283 1 328 1 145 1 59 1 170 2 242 1 171 1 10 2 125 1 85 1 86 1 312 1 313 2 228 2 151 1 106 1 18 1 72 1 207 4 175 1 369 1 23 1 93 1 48 2 47 1 136 2 186 1 373 1 50 2 95 1 348 1 
326 1 141 1 256 1 238 1 220 1 59 1 170 2 171 1 10 1 312 1 35 1 293 1 313 1 364 1 228 1 151 1 18 1 72 1 175 1 207 3 369 1 23 1 345 1 113 1 48 1 373 1 136 2 50 1 278 1 
326 4 140 3 56 3 141 3 161 1 256 4 307 2 238 3 121 1 57 1 123 3 81 1 59 3 262 1 290 1 170 8 171 4 10 18 363 1 311 1 334 1 313 7 296 1 316 1 88 1 106 3 229 4 72 4 132 1 301 1 207 37 175 4 176 1 177 1 210 2 182 1 369 4 232 1 109 1 137 1 373 4 136 19 
326 4 140 2 56 2 141 3 161 1 256 4 307 2 238 3 121 1 57 1 123 2 81 1 59 3 262 1 290 1 170 8 171 4 10 17 363 1 311 1 334 1 313 5 296 1 316 1 88 1 106 2 229 4 72 3 132 1 301 1 207 35 175 4 176 1 177 1 210 1 182 1 369 4 109 1 137 1 373 4 136 18 
326 3 140 2 56 2 141 3 256 3 307 2 238 3 121 1 57 1 123 2 59 3 262 1 290 1 170 6 171 3 10 14 363 1 311 1 334 1 313 6 296 1 88 1 106 3 229 4 72 3 207 28 175 3 176 1 210 1 182 1 369 3 109 1 373 3 136 14 
326 4 140 2 56 2 141 3 161 1 256 4 307 2 238 3 121 1 57 1 123 2 81 1 59 3 262 1 290 1 170 8 171 4 10 16 363 1 334 1 313 6 296 1 316 1 88 1 106 3 229 3 72 3 132 1 301 1 207 33 175 4 176 1 177 1 210 1 182 1 369 4 109 1 137 1 373 4 136 17 96 1 
326 2 140 2 56 2 141 3 256 3 307 2 238 3 121 1 57 1 123 2 59 2 262 2 290 1 170 6 171 3 10 12 363 1 311 1 334 1 313 4 296 1 88 1 106 2 229 4 72 2 207 26 175 3 176 1 210 2 182 1 369 3 109 1 373 3 136 14 
149 1 200 1 168 1 360 1 212 1 327 1 339 1 371 1 354 1 75 1 
336 1 239 1 
149 1 360 1 317 1 245 1 339 1 371 1 354 1 75 1 226 1 
149 1 200 1 152 1 68 2 327 1 164 1 339 1 341 1 354 1 6 1 360 1 31 1 212 1 371 1 235 1 75 1 188 1 37 1 
149 1 200 1 152 1 68 2 327 1 164 1 339 1 341 1 354 1 6 1 360 1 31 1 212 1 371 1 235 1 75 1 188 1 37 1 
149 1 200 1 152 1 68 2 327 1 164 1 339 1 341 1 354 1 6 1 360 1 31 1 212 1 371 1 235 1 75 1 188 1 37 1 
193 1 349 1 314 1 
193 1 349 1 314 1 
52 1 51 1 
52 1 51 1 314 1 
1 1 253 1 
55 1 1 1 164 1 354 1 239 1 355 1 58 1 360 1 31 1 312 2 264 1 37 1 364 2 149 1 151 2 68 1 318 1 336 1 339 1 341 1 271 1 345 2 253 1 371 1 94 1 113 2 75 1 
193 1 349 1 
52 1 51 1 314 1 
139 1 256 1 120 1 283 1 9 1 170 2 32 2 242 1 171 1 10 1 86 2 312 2 127 1 14 1 293 1 151 2 18 1 131 1 320 1 207 2 275 1 369 1 23 1 93 2 47 1 113 2 186 1 373 1 136 1 348 2 304 1 
325 1 297 1 190 1 28 1 283 1 145 1 274 2 181 1 370 1 93 2 47 1 24 1 147 1 86 2 348 2 376 1 375 1 199 1 315 1 
325 1 297 1 190 1 28 1 208 1 283 1 274 2 181 1 370 1 93 1 47 1 24 1 147 1 86 1 348 1 376 1 315 1 
268 1 169 1 28 1 93 1 159 1 86 1 348 1 375 1 
325 1 297 1 190 1 28 1 283 1 274 2 181 1 370 1 93 1 47 1 24 1 147 1 86 1 348 1 376 1 375 1 199 1 315 1 
76 1 
178 1 269 1 157 1 152 1 195 1 335 1 216 1 
351 1 279 1 100 1 219 1 224 1 332 1 172 1 37 1 335 1 269 1 152 2 154 1 71 1 341 1 157 1 183 1 255 1 
326 2 141 2 238 2 100 5 283 3 145 1 102 2 59 2 103 2 242 10 332 12 104 2 335 2 105 2 15 2 152 8 154 4 298 2 155 2 71 4 246 1 108 6 341 5 251 6 157 9 255 3 348 3 216 1 217 2 118 1 257 1 163 1 219 4 221 2 29 2 86 3 227 1 172 6 37 5 268 1 269 8 130 2 175 2 368 2 178 1 183 4 93 3 47 4 186 3 374 2 95 3 323 1 53 3 98 1 
118 1 140 1 326 2 56 1 141 2 26 1 238 2 100 1 57 1 4 1 219 2 123 1 221 1 102 2 59 2 290 1 332 6 172 3 37 1 335 2 296 1 269 5 152 5 88 1 154 2 108 5 71 2 341 1 175 2 176 1 368 1 251 5 157 8 183 2 255 1 
326 1 2 1 80 1 219 1 221 1 81 1 102 2 312 1 126 1 243 1 37 1 364 1 269 2 316 1 151 1 154 1 71 1 341 1 132 1 175 2 300 1 157 2 158 1 183 1 345 1 113 1 74 1 278 1 
269 1 152 1 154 1 71 1 219 1 178 1 157 1 183 1 216 1 335 1 
326 2 141 2 269 5 15 1 238 2 152 5 108 5 221 1 175 2 102 2 59 2 251 5 157 5 332 10 172 5 
152 1 100 1 341 1 255 1 335 1 37 1 
118 2 142 1 189 1 163 1 100 4 219 2 5 1 260 1 283 1 242 1 86 4 37 3 268 2 269 2 154 1 71 2 341 3 368 2 157 2 183 2 93 4 346 1 73 1 47 1 186 1 255 2 348 4 237 1 323 2 
139 1 0 1 256 1 58 1 328 1 283 1 170 2 242 1 171 1 10 1 125 1 85 1 86 1 312 3 126 1 364 2 268 1 151 3 70 1 18 1 207 1 369 1 23 1 345 2 93 1 113 2 47 1 373 1 186 1 348 1 95 1 278 2 
118 1 269 2 152 4 154 1 108 2 71 1 219 1 301 1 368 1 251 2 157 1 183 1 332 4 172 2 335 2 
149 1 107 1 339 1 
149 1 200 1 253 1 339 1 319 1 
149 1 107 1 339 1 
149 1 107 1 339 1 
149 1 339 1 347 1 
149 1 339 1 347 1 
149 1 339 1 347 1 
149 1 339 1 
371 1 354 1 
140 1 326 4 2 1 56 1 141 2 161 1 256 2 307 1 238 2 57 1 123 1 81 2 59 1 290 1 170 4 171 2 10 10 313 9 296 1 316 2 88 1 106 5 72 4 132 2 301 1 207 24 175 5 176 1 177 1 369 2 109 1 373 2 136 14 
140 1 326 2 56 1 141 2 161 1 256 3 307 1 238 2 57 1 123 1 81 1 59 1 290 1 170 6 171 3 10 7 148 1 313 4 296 1 316 1 88 1 106 3 72 1 132 1 301 1 207 17 175 3 176 1 177 1 369 3 109 1 373 3 136 10 
140 1 326 3 56 1 141 2 161 1 256 3 238 2 307 1 57 1 123 1 81 1 59 2 290 1 170 6 171 3 10 10 148 1 313 4 296 1 316 1 88 1 106 3 72 1 132 1 301 1 207 19 175 3 176 1 177 1 369 3 109 1 373 3 136 9 
140 1 326 2 56 1 141 2 161 1 256 3 307 1 238 2 57 1 123 1 81 1 59 1 290 1 170 6 171 3 10 7 148 1 313 5 296 1 316 1 88 1 106 3 72 2 132 1 301 1 207 17 175 3 176 1 177 1 369 3 109 1 373 3 136 10 
140 1 326 4 2 1 56 1 141 2 161 1 256 2 307 1 238 2 57 1 123 1 81 2 59 1 290 1 170 4 171 2 10 10 313 9 296 1 316 2 88 1 106 5 72 4 132 2 301 1 207 24 175 5 176 1 177 1 369 2 109 1 373 2 136 14 
140 1 326 2 56 1 141 2 256 1 238 2 57 1 123 1 59 2 290 1 170 2 171 1 10 6 313 2 296 1 88 1 106 1 72 1 207 12 175 2 176 1 369 1 109 1 373 1 136 6 
140 1 326 2 56 1 141 2 161 1 256 4 238 2 307 2 57 1 123 1 81 1 59 1 290 1 170 8 171 4 10 8 148 1 313 5 296 1 316 1 88 1 106 3 72 2 132 1 301 1 207 18 175 3 176 1 177 1 369 4 109 1 373 4 136 10 
140 1 326 2 56 1 141 3 256 4 238 3 307 2 57 1 123 1 59 2 290 1 170 8 171 4 10 7 313 6 296 1 88 1 106 3 72 3 207 16 175 3 176 1 369 4 109 1 373 4 137 1 136 9 
326 1 161 2 316 1 106 3 72 3 132 3 207 7 175 1 81 3 177 1 10 4 136 3 313 6 
140 1 326 2 56 1 141 2 161 1 256 4 238 2 307 2 57 1 123 1 81 1 59 1 290 1 170 8 171 4 10 8 313 4 296 1 316 1 88 1 106 3 72 1 132 1 301 1 207 18 175 3 176 1 177 1 369 4 109 1 373 4 137 1 136 10 
326 1 316 1 256 2 161 1 307 1 106 2 72 1 132 1 301 1 175 1 207 8 81 1 177 1 369 2 170 4 171 2 10 4 136 4 373 2 313 3 
326 1 161 1 316 1 106 2 132 1 301 1 175 1 207 6 195 1 81 1 177 1 10 3 136 3 313 2 
326 1 141 1 256 1 238 1 106 1 72 1 175 1 207 4 59 1 369 1 170 2 171 1 10 2 373 1 136 2 313 2 148 1 
140 1 56 1 10 1 136 1 123 1 207 2 
326 2 2 1 56 1 256 1 161 1 307 1 123 1 81 2 170 2 171 1 10 8 313 6 365 1 316 1 106 3 72 3 132 2 175 2 207 15 177 1 369 1 136 7 373 1 114 1 
56 1 10 1 207 1 
136 1 123 1 207 1 
326 1 141 1 256 1 15 1 238 1 106 2 72 1 207 6 175 1 59 1 369 1 170 2 171 1 10 3 373 1 136 3 148 1 313 3 
140 1 326 2 56 1 141 2 256 1 238 2 57 1 123 1 59 2 290 1 170 2 171 1 10 6 313 2 296 1 88 1 106 1 72 1 207 12 175 2 176 1 369 1 109 1 373 1 136 6 
326 1 316 1 106 1 72 1 132 1 175 1 207 6 81 1 10 3 136 3 313 2 
161 1 256 1 307 1 106 1 72 1 132 1 207 3 81 1 177 1 369 1 170 2 171 1 10 2 136 1 373 1 114 1 313 2 
326 2 2 1 256 1 316 1 106 3 72 2 132 2 207 10 175 2 81 2 369 1 170 2 171 1 10 5 109 1 373 1 136 5 313 5 
141 1 256 1 72 1 175 1 207 2 369 1 170 2 171 1 109 1 373 1 136 2 313 1 
326 1 141 1 256 1 238 1 106 1 72 1 175 1 207 4 59 1 369 1 170 2 171 1 10 2 109 1 373 1 136 2 313 2 
256 3 307 1 106 1 72 1 132 1 207 3 81 1 369 3 170 6 171 3 10 2 109 1 137 1 373 3 136 1 114 1 313 2 
326 2 140 1 2 1 56 1 256 4 161 1 307 1 123 1 81 2 170 8 171 4 10 8 313 6 148 1 316 1 106 3 299 1 72 3 132 2 175 2 207 15 177 1 369 4 109 1 137 1 373 4 136 7 114 1 
151 1 41 1 113 1 65 1 312 1 58 1 36 1 
41 1 151 1 153 1 143 1 166 1 247 1 58 1 233 1 113 1 65 1 312 1 36 1 
268 1 242 1 93 1 47 1 186 1 5 1 86 1 260 1 348 1 283 1 195 1 
268 1 151 2 58 1 283 1 288 1 242 1 345 1 125 1 93 1 85 1 47 1 113 1 186 1 86 1 312 2 95 1 348 1 364 1 
58 1 283 1 288 1 103 1 242 3 125 1 85 1 86 1 312 2 364 2 151 2 180 1 345 1 344 1 158 1 93 1 113 2 47 1 186 2 374 1 348 1 95 2 323 1 
58 1 283 1 287 1 288 1 103 1 242 3 85 1 86 2 312 2 364 2 151 2 338 1 180 1 345 1 344 1 158 1 93 2 113 2 47 1 186 2 374 1 348 2 95 2 323 1 
268 1 244 1 152 1 100 1 155 1 338 1 341 2 283 1 103 1 242 4 252 1 93 3 47 1 186 1 104 1 86 3 374 1 95 1 348 3 335 1 37 2 323 1 53 1 
268 1 152 1 100 1 155 1 338 1 341 2 283 1 29 1 103 1 242 4 93 3 47 1 186 1 104 1 86 3 374 1 95 1 348 3 335 1 37 2 323 1 53 1 
93 1 47 1 86 1 263 1 348 1 283 1 
117 1 268 1 257 1 283 1 145 1 242 1 93 2 47 2 186 1 214 1 86 2 348 2 95 1 54 1 295 1 
0 1 326 1 328 1 283 1 58 2 145 1 288 1 242 1 10 3 14 1 293 1 151 2 69 1 106 2 18 2 207 6 301 1 23 2 345 1 113 1 348 1 256 2 161 1 356 1 81 1 170 4 171 2 125 1 85 1 86 1 312 2 313 2 364 1 228 1 316 1 132 1 175 1 177 1 369 2 93 1 47 1 48 1 373 2 186 1 136 3 95 1 50 1 
163 1 100 2 219 2 29 1 242 2 104 1 86 1 335 1 37 3 268 1 269 1 105 1 152 1 154 2 298 1 155 1 71 2 341 3 271 1 178 1 157 1 183 2 93 1 255 1 348 1 216 1 53 1 217 1 
257 1 283 1 145 1 242 2 93 2 47 2 104 1 186 1 86 2 263 1 348 2 95 1 227 1 
268 1 338 1 5 1 260 1 283 1 145 1 134 1 242 1 93 4 47 1 186 1 86 4 348 4 
40 1 283 1 63 1 242 1 93 2 47 2 186 1 214 1 86 2 348 2 95 1 277 1 323 1 54 1 
268 1 274 1 370 1 297 1 93 1 47 1 86 1 348 1 283 1 376 1 
283 1 145 1 242 1 93 2 47 1 186 1 86 2 147 1 348 2 127 1 304 1 
268 1 280 1 5 1 260 1 283 2 145 1 134 1 242 3 93 5 213 1 47 2 186 2 86 4 348 5 127 1 323 1 
268 1 280 1 5 1 260 1 283 2 145 1 134 1 242 3 196 1 93 5 47 2 186 2 86 4 348 5 127 1 323 1 
268 1 151 2 58 1 283 1 287 1 288 1 242 1 345 1 93 1 85 1 47 1 113 1 186 1 86 1 312 2 95 1 348 1 364 1 
257 1 283 1 242 1 93 1 47 2 186 1 214 1 86 1 348 1 95 1 323 1 54 1 295 1 
270 1 151 1 367 1 320 1 358 1 275 1 9 1 113 1 312 1 
270 1 3 1 343 1 
270 1 367 1 185 1 58 1 358 1 
270 1 152 1 155 1 3 1 367 2 341 2 58 1 271 1 343 1 358 2 180 1 8 1 158 1 344 1 135 1 34 1 185 2 335 1 37 2 
179 1 49 1 195 1 265 1 
179 1 33 1 205 1 49 1 43 1 138 1 265 1 
289 1 205 1 285 1 
205 3 43 1 282 1 308 1 179 1 291 1 33 3 331 1 12 2 49 1 138 1 265 1 
179 1 302 1 33 2 205 2 49 1 43 1 138 1 286 1 265 1 
324 1 205 1 43 1 282 1 179 1 274 1 33 1 24 1 138 1 236 1 376 1 
179 1 33 1 205 1 49 1 43 1 282 1 138 1 
33 1 205 1 49 2 43 1 282 1 138 1 265 1 
205 2 43 2 174 1 231 1 282 1 179 1 33 2 49 1 160 1 138 2 
205 3 43 1 282 1 179 2 302 2 33 3 361 1 49 1 292 1 138 1 236 1 305 1 265 1 
325 1 297 1 205 2 43 1 259 1 282 1 179 1 274 2 302 1 33 2 49 1 24 1 138 1 376 1 265 1 
258 1 205 4 43 2 282 1 286 1 179 2 302 2 33 4 361 1 49 1 138 2 236 1 265 1 
179 1 33 1 205 1 49 1 43 1 282 1 138 1 265 1 
205 4 43 1 90 1 308 1 179 3 302 2 33 4 331 1 361 1 12 1 49 2 138 1 236 1 265 2 
267 1 27 1 42 1 205 2 43 1 282 1 179 1 302 1 33 2 49 1 138 1 265 1 
179 1 33 3 331 1 205 3 49 1 12 2 43 1 115 1 282 1 138 1 308 2 265 1 
179 2 66 1 111 1 97 2 
33 1 205 1 43 1 282 1 138 1 215 1 
179 1 302 1 33 2 205 2 49 1 43 1 292 1 282 1 138 1 265 1 
64 1 
179 1 33 1 205 1 49 1 43 1 282 1 138 1 265 1 
205 3 43 1 282 1 179 1 302 1 33 3 12 1 49 1 292 1 138 1 265 1 
179 1 361 1 90 1 236 1 
179 1 49 1 

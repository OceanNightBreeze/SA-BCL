#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (199,313) (202,210) (202,210) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 245 176 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (199,313) (199,313) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (199,313) (202,210) (202,210) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (199,313) (202,210) (202,210) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (199,313) (202,210) (202,210) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 245 176 110 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
207 2 75 2 349 2 77 1 48 1 18 4 211 3 186 1 266 1 291 6 53 1 125 1 248 2 130 1 153 2 297 1 63 2 107 1 272 1 334 1 154 1 337 2 203 1 299 9 281 5 177 9 114 1 205 1 
207 2 75 2 349 2 77 1 48 1 18 4 211 3 186 1 266 1 291 6 53 1 125 1 248 2 130 1 153 2 297 1 63 2 107 1 272 1 334 1 154 1 337 2 203 1 299 9 281 5 177 9 114 1 205 1 
207 2 75 2 349 2 77 1 48 1 18 5 211 4 186 1 266 1 291 7 53 1 125 1 248 2 130 1 153 2 297 1 63 2 107 1 272 1 334 1 154 1 337 2 203 1 299 10 281 6 177 10 114 1 205 1 
207 2 75 2 349 2 77 1 48 1 18 3 211 2 186 1 266 1 291 4 53 1 125 1 248 2 153 2 297 1 63 2 107 1 272 1 334 1 154 1 337 1 203 1 299 7 281 4 177 7 114 1 205 1 
248 1 75 1 130 1 349 1 153 1 297 1 18 2 63 1 107 1 211 1 186 1 334 1 337 2 266 1 299 4 291 3 281 3 177 4 
318 1 75 1 207 1 349 1 153 1 77 1 297 1 63 1 107 1 334 1 109 1 281 1 299 2 70 1 125 1 177 2 
75 2 207 1 153 2 297 1 18 1 107 1 211 1 334 1 154 1 299 3 281 2 291 1 177 3 
207 1 75 2 349 1 48 1 18 4 211 3 186 1 266 1 291 7 248 1 130 1 153 2 297 1 63 1 107 1 334 1 154 1 337 2 299 9 281 5 113 1 316 1 177 9 205 1 
207 1 75 2 349 1 48 1 18 4 211 3 186 1 266 1 291 7 248 1 130 1 153 2 297 1 63 1 107 1 334 1 154 1 337 2 299 9 281 5 113 1 316 1 177 9 205 1 
182 1 308 1 157 1 
124 1 
137 2 214 2 184 2 327 2 209 2 256 1 174 2 136 1 
137 2 319 1 350 1 184 2 141 1 209 2 79 2 285 1 351 1 21 1 22 2 214 3 191 1 327 3 242 1 358 1 54 2 330 1 7 1 34 1 360 1 64 2 174 2 278 1 280 1 40 1 43 2 44 1 343 1 363 1 253 1 46 1 233 1 256 1 347 1 206 1 136 1 
137 1 184 1 209 1 36 1 174 1 214 1 232 1 327 1 57 1 136 1 
137 1 182 1 184 1 209 1 305 1 3 1 121 1 308 1 214 2 189 1 25 1 327 2 57 2 174 2 36 1 90 1 156 1 232 1 254 1 300 1 136 1 
137 2 182 1 184 2 209 2 305 1 3 1 36 1 174 2 121 2 90 2 308 1 214 2 189 1 232 1 327 2 300 1 254 1 57 2 136 1 
344 1 198 1 121 1 37 1 90 1 
182 1 60 1 68 1 344 1 198 1 121 2 90 2 308 1 
198 1 121 1 90 1 
137 1 184 1 209 1 121 1 36 1 174 1 90 1 214 1 344 1 232 1 327 1 300 1 57 1 136 1 
182 1 
182 1 60 1 344 1 198 1 121 2 155 1 90 2 308 1 
182 1 60 1 29 2 17 1 304 1 19 1 198 2 121 5 90 5 339 1 340 1 308 1 279 1 326 2 344 2 52 1 55 1 270 1 161 2 
256 1 157 1 
137 1 184 1 209 1 174 2 323 1 175 1 214 2 327 2 256 2 
69 1 163 1 273 1 
319 1 359 1 64 1 285 1 351 1 278 1 21 1 22 1 214 1 44 1 253 1 327 1 54 1 256 1 7 1 206 1 
319 1 184 1 209 1 64 1 108 1 285 1 174 1 273 1 351 1 21 1 278 1 22 1 50 1 214 2 44 1 253 1 327 2 54 1 7 1 206 1 
137 1 50 1 214 3 184 3 327 3 209 3 256 1 174 3 
214 1 184 1 232 1 327 1 209 1 57 1 174 1 
137 1 184 1 209 1 174 1 323 1 175 1 214 1 327 1 57 1 
137 2 319 1 350 1 184 3 141 1 209 3 305 1 79 2 3 1 285 1 121 1 351 1 323 1 21 1 22 1 144 1 50 1 214 4 189 1 191 1 327 4 242 1 358 1 54 1 7 1 57 1 34 1 64 1 108 1 174 3 275 1 278 1 90 1 40 1 43 1 44 1 343 1 253 1 46 1 254 1 256 1 347 1 206 1 136 1 
50 1 214 2 229 1 184 1 25 1 327 2 209 1 256 1 174 2 
137 1 182 1 184 3 209 3 305 1 3 1 108 1 121 1 174 3 323 1 90 1 50 2 135 1 144 1 214 3 189 1 327 3 254 1 57 1 
137 1 214 1 184 1 327 1 209 1 174 1 273 1 323 1 
319 1 64 1 285 1 351 1 278 1 21 1 22 1 214 1 44 1 253 1 327 1 54 1 256 1 7 1 206 1 
319 1 64 1 285 1 286 1 351 1 21 1 22 1 214 1 44 1 253 1 327 1 54 1 256 1 317 1 206 1 
132 1 350 1 141 1 96 1 34 1 79 2 163 1 273 1 99 1 225 1 40 1 341 1 69 1 43 2 324 1 343 2 191 1 358 1 293 1 
1 1 184 1 209 1 174 1 214 1 189 1 327 1 57 1 
137 1 131 1 184 4 209 4 108 1 174 5 323 1 50 2 214 5 111 1 229 1 25 1 327 5 256 1 
214 1 184 1 232 1 327 1 209 1 57 1 174 1 
123 1 
123 1 
140 1 311 1 
140 1 311 1 
140 1 311 1 
123 1 
123 1 
123 1 
123 2 140 1 311 1 
123 1 
123 1 
123 1 
123 1 
182 1 139 2 183 2 10 1 210 1 313 1 121 2 263 2 202 1 90 2 123 2 158 2 289 1 24 1 366 2 
139 1 10 1 183 1 184 1 209 1 121 1 174 1 263 1 287 1 90 1 123 1 325 1 214 1 158 1 102 1 327 1 176 1 245 1 366 1 
248 1 349 1 63 1 
349 1 70 1 63 1 
248 2 296 1 349 3 70 1 106 1 122 1 
248 1 296 1 349 2 2 1 70 1 122 1 
248 1 296 1 349 2 70 1 122 2 
16 1 182 2 304 2 262 1 121 5 306 2 287 1 99 1 308 1 124 3 325 1 326 1 166 1 145 1 290 1 267 1 52 3 102 1 268 1 60 1 195 1 29 1 198 1 338 2 90 5 225 1 279 1 228 2 344 4 255 1 73 1 161 1 
16 3 182 5 348 1 304 6 262 3 121 9 99 3 308 1 124 9 326 2 166 3 290 2 102 4 267 1 52 8 87 1 169 1 60 1 195 3 29 2 222 5 173 1 198 6 37 5 339 1 338 6 90 9 225 3 279 1 228 6 344 7 71 1 255 2 302 1 161 2 
16 1 182 3 304 2 121 3 262 1 306 1 308 1 99 1 124 4 326 1 145 1 290 1 166 1 52 3 102 1 268 1 195 2 29 1 90 3 339 1 338 2 225 1 228 2 344 2 255 1 161 1 
16 2 182 4 304 4 121 4 262 2 306 2 308 1 99 2 124 7 326 1 145 1 290 1 166 2 52 5 102 2 268 1 87 1 195 3 29 1 173 1 338 4 90 4 339 1 225 2 228 4 344 3 255 1 302 1 161 1 
44 1 197 1 157 1 
44 1 35 1 
5 1 
44 1 351 1 
294 1 44 3 197 2 167 1 253 1 351 1 
44 1 253 1 351 1 
44 1 142 1 
16 1 9 1 96 2 134 1 298 1 201 1 352 1 225 1 280 4 43 7 343 3 241 1 6 1 93 2 293 3 151 1 220 1 
16 1 9 1 96 2 134 1 298 1 201 1 352 1 225 1 280 4 43 7 343 3 241 1 6 1 93 2 293 3 151 1 220 1 
16 1 9 1 96 2 134 1 298 1 201 1 352 1 225 1 280 4 43 7 343 3 241 1 6 1 93 2 293 3 85 1 151 1 220 1 
16 4 350 1 141 1 96 5 79 2 262 3 352 1 354 4 99 3 241 1 166 3 191 1 6 2 148 1 358 1 293 10 127 1 151 2 220 1 9 1 310 1 196 3 223 1 224 1 134 2 298 5 201 2 280 16 225 4 251 1 43 31 343 15 93 3 284 1 
16 1 321 1 350 2 141 2 96 3 79 4 191 2 241 1 6 1 358 2 293 4 127 1 193 1 151 1 220 1 9 1 134 1 298 1 201 1 225 1 280 5 43 9 343 4 93 2 
75 1 207 1 349 2 21 1 22 1 83 1 291 1 356 1 54 1 27 1 103 1 248 1 249 1 153 1 133 1 297 1 63 1 64 1 106 1 107 1 334 1 39 1 45 1 160 1 281 1 299 2 70 1 13 1 177 2 206 1 
75 1 207 1 349 2 21 1 22 1 83 1 291 2 54 1 27 1 150 1 103 1 248 1 249 1 104 1 153 1 133 1 297 1 63 1 64 1 106 1 107 1 45 1 160 1 204 1 281 1 299 3 70 1 13 1 177 3 206 1 
207 1 349 2 21 1 22 1 291 2 54 1 27 1 150 1 103 1 248 1 249 1 104 1 133 1 297 1 64 1 63 1 106 1 107 1 160 1 281 1 299 2 70 1 13 1 177 2 206 1 
319 1 207 2 75 1 249 2 153 1 133 2 260 1 64 1 351 1 97 1 80 1 21 1 187 1 22 1 44 1 204 1 299 1 365 1 54 1 13 2 177 1 332 1 206 1 
75 1 207 1 349 2 21 1 22 1 83 1 356 1 54 1 27 1 103 1 248 1 249 1 104 1 153 1 133 1 63 1 64 1 106 1 334 1 45 1 160 1 299 1 70 1 13 1 177 1 206 1 
20 1 
319 2 235 2 182 1 238 2 97 1 101 1 326 1 52 2 54 2 244 1 332 1 246 1 59 2 60 3 250 2 195 2 64 2 198 6 252 1 255 1 345 2 206 1 258 2 161 1 304 2 121 4 351 1 265 2 21 1 22 2 124 2 23 1 86 1 29 1 171 2 274 1 277 1 90 4 279 1 314 1 44 1 230 1 92 1 282 1 
60 1 171 1 23 1 230 1 86 1 198 2 244 1 121 2 246 1 155 1 90 2 
23 1 230 1 238 1 86 1 244 1 121 1 246 1 90 1 59 1 
60 1 171 1 238 1 198 2 121 2 265 1 155 1 90 2 23 1 230 1 86 1 244 1 246 1 59 1 
235 2 137 1 182 2 184 1 238 3 326 1 327 1 52 1 57 1 244 1 246 1 59 3 60 3 250 2 195 2 198 7 155 1 300 1 345 2 115 1 258 2 161 1 304 1 209 1 121 4 264 1 265 4 308 2 214 1 23 1 357 1 86 1 29 1 171 4 174 1 36 1 274 1 90 4 279 1 42 1 230 1 232 1 282 1 180 1 136 1 
235 2 182 1 304 1 238 2 121 3 265 2 308 1 124 2 101 1 23 1 326 1 52 1 86 1 244 1 246 1 59 2 60 2 171 2 29 1 250 2 195 2 198 4 274 1 90 3 279 1 230 1 282 1 345 2 258 2 161 1 
235 2 182 1 304 1 238 2 121 3 264 1 265 2 308 1 23 1 326 1 52 1 357 1 86 1 244 1 246 1 59 2 60 2 171 2 195 2 29 1 250 2 198 4 274 1 90 3 279 1 230 1 282 1 345 2 115 1 258 2 161 1 
235 2 182 1 304 1 238 2 121 3 264 1 265 2 308 1 23 1 326 1 52 1 357 1 86 1 244 1 246 1 59 2 60 2 171 2 195 2 29 1 250 2 198 4 274 1 90 3 279 1 230 1 282 1 345 2 115 1 258 2 161 1 
182 1 304 1 238 2 121 3 212 1 265 2 308 1 124 2 23 1 326 1 52 1 357 1 86 1 244 1 246 1 129 2 59 2 60 2 171 2 29 1 250 2 31 2 105 1 198 4 274 1 90 3 279 1 12 1 230 1 258 2 161 1 
235 2 182 1 304 1 238 3 121 3 264 1 265 3 308 1 23 1 326 1 357 1 52 1 86 1 244 1 246 1 59 3 60 2 195 2 250 2 171 3 29 1 198 5 274 1 90 3 279 1 42 1 230 1 282 1 345 2 115 1 258 2 161 1 
235 2 182 1 304 1 238 3 121 3 264 1 265 3 308 1 23 1 326 1 357 1 52 1 86 1 244 1 246 1 59 3 60 2 195 2 250 2 171 3 29 1 198 5 274 1 90 3 279 1 42 1 230 1 282 1 345 2 115 1 258 2 161 1 
304 1 121 1 212 1 124 1 23 1 326 1 101 1 52 1 86 1 244 1 246 1 29 1 250 1 31 1 274 1 90 1 279 1 230 1 258 1 161 1 
16 1 9 1 132 1 350 1 141 1 96 2 34 1 134 2 79 2 201 2 225 1 280 2 157 1 40 1 43 5 343 3 191 1 241 1 358 1 293 2 256 2 220 1 
16 3 350 2 141 2 261 1 79 4 163 12 262 3 354 4 191 2 166 3 148 2 358 2 149 1 329 1 293 3 247 1 88 1 310 1 196 3 34 2 298 3 273 12 280 10 40 1 43 15 69 12 343 5 233 1 256 1 347 1 
184 1 350 1 141 1 209 1 237 1 79 2 163 1 50 1 214 1 191 1 327 1 358 1 88 1 34 1 108 1 174 1 38 1 280 1 40 1 43 2 343 1 233 1 347 1 
319 1 184 1 141 2 96 1 285 1 50 1 191 2 327 2 54 1 293 3 7 1 64 1 108 1 298 2 200 1 69 2 343 2 253 1 347 1 206 1 16 1 117 1 350 2 209 1 79 4 163 2 262 1 351 1 21 1 22 1 164 1 214 2 166 1 168 1 358 2 88 1 34 2 174 1 273 2 278 1 280 3 40 2 43 5 44 1 46 1 181 1 
319 1 64 1 54 1 307 1 22 1 
137 1 16 1 184 1 350 1 141 1 96 1 209 1 79 2 163 1 262 1 323 1 99 1 100 1 214 1 191 1 166 1 327 1 358 1 293 1 88 1 34 1 174 1 273 1 280 1 225 1 40 1 69 1 43 3 343 2 
16 1 132 1 350 1 141 1 34 1 79 2 298 1 163 1 273 1 280 2 40 1 69 1 43 2 191 1 166 1 112 1 358 1 293 1 
132 1 350 1 141 1 96 1 34 1 79 2 163 1 273 1 99 1 225 1 40 1 69 1 43 2 324 1 191 1 343 2 358 1 293 1 
16 1 132 1 350 1 141 1 96 1 34 1 79 2 298 1 163 2 262 1 273 2 225 1 99 1 280 2 40 1 69 2 43 4 343 2 191 1 166 1 358 1 293 2 
307 1 
307 1 
307 1 
16 1 350 1 141 1 34 1 79 2 298 1 163 1 262 1 273 1 280 2 40 1 69 1 43 2 191 1 166 1 358 1 293 1 
319 1 350 1 141 1 79 2 285 1 351 1 21 1 22 1 214 1 191 1 327 1 54 1 358 1 7 1 64 1 34 1 278 1 280 1 40 1 43 2 44 1 343 1 253 1 46 1 233 1 256 1 206 1 347 1 
319 1 350 1 141 1 79 2 285 1 351 1 286 1 21 1 22 1 214 1 191 1 327 1 54 1 358 1 64 1 34 1 280 1 40 1 43 2 44 1 343 1 253 1 301 1 233 1 256 1 206 1 317 1 347 1 
88 1 16 1 350 1 141 1 34 1 79 2 298 1 163 1 262 1 273 1 280 2 40 1 69 1 43 2 191 1 166 1 358 1 293 1 
16 1 117 1 350 1 141 1 79 2 163 1 285 1 262 1 351 1 21 1 22 1 214 1 166 1 191 1 327 1 54 1 358 1 293 1 7 1 64 1 34 1 298 1 273 1 278 1 280 2 39 1 40 1 69 1 43 2 44 1 253 1 46 1 206 1 
137 1 16 1 184 1 350 1 141 1 209 1 162 1 79 2 262 1 163 1 323 1 214 1 191 1 166 1 327 1 358 1 293 1 88 1 34 1 298 1 174 1 273 1 280 2 40 1 43 2 69 1 
16 3 350 2 141 2 259 2 96 3 120 1 79 4 262 3 354 2 99 3 191 2 166 3 148 1 358 2 293 6 193 1 194 1 58 1 310 1 196 1 335 1 298 3 336 1 280 9 225 3 342 2 67 1 43 19 343 10 72 1 
16 3 350 3 141 3 259 1 185 1 96 2 79 6 262 3 354 2 99 2 191 3 166 3 358 3 127 2 293 4 193 1 217 1 194 2 58 1 310 2 196 2 61 1 298 2 336 1 225 2 280 14 342 4 67 2 43 26 343 12 231 1 72 1 15 1 47 1 
16 5 350 3 141 3 259 1 185 1 96 4 120 1 79 6 262 4 354 4 99 4 241 1 191 3 166 4 148 1 358 3 127 1 293 8 193 1 217 1 194 1 58 1 220 1 9 1 295 1 310 3 61 1 196 3 134 1 298 4 201 1 336 1 280 20 225 5 342 4 67 2 43 41 343 21 231 1 93 1 72 1 15 1 47 1 
16 5 350 4 141 4 259 1 185 1 96 4 120 1 79 8 262 4 354 4 99 3 241 1 191 4 166 4 148 1 358 4 127 2 293 7 193 1 217 1 194 1 58 1 220 1 9 1 295 1 310 3 61 1 196 3 134 1 298 3 201 1 336 1 280 20 225 4 342 4 67 2 43 38 343 18 231 1 93 1 72 1 15 1 47 1 
16 8 350 2 141 2 259 1 185 1 96 7 79 4 262 7 354 4 99 7 241 1 191 2 166 7 148 2 358 2 127 1 293 14 193 1 217 1 194 1 247 2 58 1 220 1 9 1 310 2 61 1 196 4 134 1 298 7 201 1 336 1 280 27 225 8 342 4 67 1 43 52 343 25 231 1 93 1 72 1 15 1 47 1 
123 1 158 1 183 1 313 1 199 1 366 1 263 1 
245 1 
123 1 158 1 183 1 312 1 366 1 263 1 
182 1 139 2 10 1 183 1 210 1 313 1 121 1 263 1 202 1 90 1 123 1 158 1 289 1 24 1 366 1 
182 1 139 2 10 1 183 1 210 1 313 1 121 1 263 1 202 1 90 1 123 1 158 1 289 1 24 1 366 1 
182 1 139 2 10 1 183 1 210 1 313 1 121 1 263 1 202 1 90 1 123 1 158 1 289 1 24 1 366 1 
119 1 
119 1 
236 1 
236 1 
346 1 276 1 
139 1 183 1 121 1 263 1 287 1 90 1 123 1 325 1 158 1 110 1 289 1 24 1 344 1 102 1 176 1 245 1 366 1 
119 1 
236 1 
350 1 141 1 79 2 351 1 21 1 22 2 214 2 191 1 327 2 54 2 358 1 215 1 331 1 88 1 170 1 64 2 34 1 172 1 174 2 280 1 40 1 41 1 43 2 44 1 343 1 363 2 315 1 94 1 233 1 206 1 347 1 
248 1 320 1 349 2 104 1 133 1 63 1 64 2 106 1 21 1 22 2 39 1 45 1 70 1 292 1 54 2 27 1 103 1 206 1 303 1 
248 1 221 1 349 2 104 1 133 1 63 1 64 1 106 1 21 1 22 1 45 1 70 1 292 1 54 1 27 1 103 1 206 1 
319 1 320 1 133 1 260 1 64 1 271 1 351 1 97 1 21 1 22 1 44 1 54 1 332 1 206 1 
248 1 320 1 349 2 104 1 133 1 63 1 64 1 106 1 21 1 22 1 45 1 70 1 292 1 54 1 27 1 103 1 206 1 303 1 
333 1 
182 1 52 1 304 1 19 1 308 1 270 1 157 1 
235 1 182 1 304 1 121 1 308 1 124 1 326 1 52 1 60 1 195 1 29 1 198 1 90 1 279 1 282 1 345 1 161 1 
16 1 319 1 208 1 95 1 304 3 3 1 262 1 121 2 351 1 21 1 22 1 124 2 326 2 166 1 167 1 26 1 84 1 52 2 54 1 128 1 60 1 29 2 197 1 64 1 35 2 198 2 338 2 90 2 279 2 362 1 228 2 44 4 253 1 255 1 257 1 181 1 206 2 161 2 
16 2 304 4 185 1 262 2 354 1 99 2 124 3 326 1 166 2 52 6 217 1 310 1 29 1 196 1 61 1 338 5 279 1 225 2 228 5 231 1 15 1 161 1 
16 2 137 1 184 1 304 2 209 1 121 1 214 1 326 1 327 1 52 2 56 1 57 1 220 1 29 1 134 1 36 1 174 1 201 1 90 1 279 1 225 1 91 2 232 1 300 1 14 1 115 1 161 1 136 1 
182 1 29 1 304 1 19 1 279 1 308 1 326 1 52 1 161 1 270 1 
16 1 182 2 195 2 304 2 262 1 338 2 99 1 225 1 124 4 228 2 166 1 52 2 
182 1 60 1 198 1 121 1 90 1 308 1 
319 2 304 2 121 3 351 2 239 1 97 1 21 2 22 4 213 1 165 1 326 2 52 2 126 1 54 4 218 1 332 1 219 1 60 2 29 2 64 4 198 4 65 2 277 1 339 1 90 3 279 1 252 2 44 2 253 1 92 1 255 2 178 1 206 3 161 2 
319 1 137 2 350 1 184 2 141 1 209 2 79 2 285 1 351 1 21 1 22 1 214 3 191 1 327 3 242 1 358 1 54 1 7 1 64 1 34 1 174 2 278 1 40 1 43 1 44 1 343 1 46 1 253 1 256 1 347 1 206 1 136 1 
182 1 29 1 304 1 279 1 308 1 124 1 252 1 228 1 326 1 52 1 255 1 161 1 
158 1 190 1 263 1 
158 1 190 1 263 1 
158 1 322 1 283 1 263 1 276 1 
158 1 190 1 263 1 
288 1 158 1 263 1 
288 1 158 1 263 1 
288 1 158 1 263 1 
158 1 263 1 
123 1 
16 1 9 1 350 2 141 2 96 2 79 4 134 1 298 1 201 1 225 1 280 4 43 8 343 4 191 2 241 1 93 1 358 2 293 3 127 1 220 1 
16 1 9 1 96 2 134 1 201 1 157 1 280 3 225 1 43 6 343 3 241 1 93 1 293 2 220 1 
16 1 350 1 141 1 96 1 79 2 262 1 298 1 225 1 99 1 280 2 43 4 343 2 191 1 166 1 358 1 293 2 116 1 
16 1 310 1 196 1 96 1 262 1 298 1 354 2 225 1 99 1 280 3 43 7 343 4 166 1 148 1 293 2 
16 3 350 2 141 2 96 5 261 1 79 4 262 2 354 2 99 2 241 1 166 2 191 2 148 1 358 2 328 1 293 9 127 2 247 1 220 1 9 1 196 2 134 2 298 4 201 2 280 11 225 3 43 23 343 12 93 1 
43 1 343 1 354 1 
43 1 196 1 280 1 
16 1 350 1 141 1 96 2 79 2 262 1 298 1 280 3 99 1 225 1 43 6 191 1 343 3 166 1 358 1 293 3 116 1 181 1 
16 2 350 1 141 1 96 1 185 1 79 2 262 2 354 1 99 2 191 1 166 2 358 1 293 2 193 1 217 1 310 1 196 1 61 1 298 1 280 6 225 2 43 12 343 6 231 1 15 1 
16 1 96 1 134 1 298 1 201 1 280 3 225 1 43 6 343 3 293 2 220 1 
9 1 350 1 141 1 96 1 134 1 79 2 298 1 201 1 280 1 43 3 343 2 191 1 241 1 328 1 358 1 293 2 127 1 
16 2 350 1 141 1 96 3 79 2 134 2 298 2 201 2 280 5 225 2 43 10 191 1 343 5 358 1 56 1 293 5 193 1 220 1 
16 1 350 1 141 1 79 2 298 1 280 2 43 2 191 1 166 1 358 1 293 1 193 1 
16 1 350 1 141 1 96 1 79 2 262 1 298 1 225 1 99 1 280 2 43 4 343 2 191 1 166 1 358 1 293 2 193 1 
350 3 141 3 96 1 120 1 79 6 134 1 298 1 201 1 280 1 43 3 343 2 191 3 328 1 358 3 127 1 293 2 193 1 
16 5 350 5 141 5 96 7 120 1 79 10 262 3 354 4 99 3 241 1 191 5 166 3 148 1 328 1 358 5 127 2 293 12 193 1 220 2 9 1 310 1 196 3 223 1 134 3 298 5 201 3 251 1 280 16 225 5 43 34 343 18 93 1 116 1 284 1 
16 1 350 1 141 1 96 2 79 2 354 1 191 1 241 1 358 1 293 2 193 1 220 1 9 1 310 1 196 1 134 1 201 1 225 1 280 4 43 8 343 4 231 1 93 1 
16 2 350 2 141 2 96 2 79 4 262 1 354 2 241 1 191 2 166 1 148 1 358 2 293 3 193 1 220 1 9 1 310 1 196 1 134 1 298 1 201 1 225 1 280 6 43 11 343 5 231 1 93 1 116 1 
16 3 350 3 141 3 185 1 96 3 79 6 262 2 354 1 99 2 241 1 191 3 166 2 358 3 293 4 127 1 193 1 217 1 220 1 9 1 310 1 196 1 61 1 134 1 298 1 201 1 280 9 225 3 43 19 343 10 231 1 93 1 116 1 15 1 
16 3 350 3 141 3 96 3 185 1 79 6 262 2 354 1 99 1 241 1 191 3 166 2 358 3 127 1 293 5 193 1 217 1 220 1 9 1 310 1 196 1 61 1 134 1 298 2 201 1 280 10 225 2 43 17 343 7 231 1 93 1 116 1 15 1 
16 1 350 1 141 1 96 2 79 2 354 1 191 1 241 1 358 1 293 2 193 1 220 1 9 1 310 1 196 1 134 1 201 1 225 1 280 4 43 8 343 4 231 1 93 1 
16 2 350 1 141 1 96 1 185 1 79 2 262 2 354 1 99 2 191 1 166 2 358 1 293 2 193 1 217 1 310 1 196 1 61 1 298 1 280 6 225 2 43 12 343 6 231 1 15 1 
16 3 350 4 141 4 185 1 96 3 79 8 262 2 354 1 99 1 241 1 191 4 166 2 358 4 293 5 127 2 193 1 217 1 220 1 9 1 310 1 196 1 61 1 134 1 298 2 201 1 280 10 225 2 43 18 343 8 231 1 93 1 116 1 15 1 
16 3 350 4 141 4 185 1 96 3 120 1 79 8 262 3 354 1 99 2 191 4 166 3 358 4 293 6 127 2 193 1 217 1 310 1 196 1 61 1 298 3 280 9 225 2 43 16 343 7 231 1 15 1 
16 1 9 2 96 3 134 3 298 3 201 3 225 1 280 3 43 7 343 4 241 1 293 6 220 1 
16 3 350 4 141 4 185 1 96 3 120 1 79 8 262 2 354 1 99 1 241 1 191 4 166 2 358 4 293 4 127 2 193 1 217 1 220 1 9 1 310 1 196 1 61 1 134 1 298 1 201 1 280 10 225 2 43 18 343 8 231 1 93 1 15 1 
214 1 229 1 62 1 25 1 327 1 256 1 174 1 
0 1 30 1 62 1 33 1 174 1 226 1 214 1 229 1 364 1 25 1 327 1 256 1 
319 1 44 1 64 1 54 1 351 1 332 1 97 1 206 1 21 1 157 1 22 1 
319 1 184 1 209 1 64 1 285 1 174 1 351 1 21 1 22 1 50 1 214 2 44 1 253 1 327 2 54 1 256 1 7 1 206 1 
184 1 209 2 142 1 305 1 285 1 351 2 21 1 22 1 50 1 214 2 189 1 327 2 54 1 7 1 57 1 64 1 65 1 174 2 44 3 253 2 256 1 179 1 206 1 
184 1 209 2 142 1 305 1 285 1 286 1 351 2 21 1 22 2 50 1 214 2 355 1 189 1 327 2 54 2 57 1 64 2 65 1 174 2 44 3 253 2 256 1 179 1 206 1 
319 1 138 1 182 1 76 1 142 1 3 1 121 2 351 1 21 1 22 3 308 1 355 1 54 3 197 1 35 1 64 3 198 1 65 1 90 2 44 4 253 1 179 1 206 1 
319 1 182 1 197 1 142 1 64 3 35 1 3 1 198 1 121 2 65 1 351 1 90 2 21 1 308 1 22 3 355 1 44 4 253 1 54 3 179 1 128 1 206 1 
49 1 64 1 54 1 206 1 21 1 22 1 
319 2 104 1 49 1 64 7 351 2 21 2 39 1 22 6 159 1 165 1 44 3 363 1 146 1 167 1 253 1 147 1 54 7 126 1 331 1 8 1 206 3 
16 1 117 1 184 1 350 2 141 2 96 2 209 1 79 4 285 1 351 1 21 1 22 1 50 1 214 2 241 1 191 2 168 1 327 2 358 2 54 1 293 2 7 1 220 1 88 1 9 1 34 2 172 1 64 1 134 2 174 1 201 2 278 1 225 1 280 2 39 1 40 2 43 5 44 1 343 3 253 1 46 1 256 2 206 1 
319 1 182 1 95 1 304 1 19 1 3 1 121 3 239 1 308 1 22 1 326 2 52 1 54 1 128 1 270 1 60 1 29 2 197 1 64 1 35 1 198 2 90 3 279 2 362 1 44 2 344 1 257 1 161 2 
197 1 49 1 64 2 351 1 21 1 39 1 22 2 44 2 167 1 253 1 26 1 54 2 206 2 
319 1 64 4 97 1 351 1 11 1 21 1 22 4 39 1 355 1 44 1 54 4 332 1 206 1 
64 2 65 1 351 1 21 1 22 2 165 1 44 1 253 1 54 2 126 1 243 1 218 1 219 1 206 2 
319 1 349 1 70 1 63 1 64 1 54 1 27 1 206 1 21 1 22 1 
104 1 64 2 351 1 21 1 39 1 22 2 44 1 54 2 94 1 331 1 206 1 
319 1 64 5 65 1 97 1 351 2 11 1 21 2 22 4 39 1 44 3 159 1 147 1 54 5 331 1 332 1 206 2 
319 1 32 1 64 5 65 1 97 1 351 2 11 1 21 2 22 4 39 1 44 3 159 1 54 5 331 1 332 1 206 2 
319 1 184 1 209 1 64 1 285 1 174 1 351 1 286 1 21 1 22 1 50 1 214 2 44 1 253 1 327 2 54 1 256 1 206 1 
64 1 65 1 351 1 21 1 22 1 165 1 44 1 146 1 167 1 253 1 54 1 126 1 206 2 
174 1 81 1 227 1 41 1 214 1 315 1 327 1 215 1 234 1 
28 1 118 1 234 1 
227 1 81 1 78 1 256 1 234 1 
137 1 182 1 118 1 184 1 78 1 209 1 305 1 3 1 121 2 308 1 144 1 81 1 214 1 189 1 327 1 57 2 28 1 174 1 36 1 90 2 227 1 344 1 232 1 254 1 300 1 74 1 234 1 136 1 
281 1 297 1 107 1 157 1 
75 1 153 1 281 1 299 1 297 1 107 1 177 1 
207 1 249 1 299 1 
75 1 152 1 153 1 297 1 107 1 334 1 353 1 361 1 281 1 299 3 125 2 177 3 
75 1 153 1 281 1 291 1 299 2 297 1 107 1 177 2 337 1 
248 1 75 1 349 1 153 1 18 1 63 1 334 1 266 1 299 1 281 1 177 1 
75 1 153 1 281 1 299 1 107 1 177 1 334 1 
75 1 153 1 299 1 297 1 107 2 177 1 334 1 
75 2 153 2 107 1 334 1 98 1 51 1 281 1 299 2 177 2 309 1 
75 1 153 1 48 1 297 1 18 1 107 1 211 1 334 1 299 3 291 2 281 2 177 3 205 1 
248 1 75 1 349 2 153 1 297 1 63 1 106 1 107 1 334 1 281 1 299 2 291 1 70 1 177 2 269 1 
75 2 130 1 153 2 297 1 18 1 107 1 211 1 334 1 337 1 299 4 291 2 281 2 177 4 
75 1 153 1 281 1 299 1 297 1 107 1 177 1 334 1 
152 1 75 1 153 1 297 2 18 1 107 2 211 1 361 1 291 2 299 4 281 3 125 1 216 1 177 4 
75 1 153 1 297 1 107 1 334 1 66 1 281 1 299 2 291 1 192 1 177 2 316 1 
75 1 152 2 153 1 89 1 297 1 107 1 334 1 361 1 281 1 299 3 125 2 177 3 
188 1 82 2 281 2 143 1 
75 1 153 1 299 1 177 1 334 1 240 1 
75 1 48 1 153 1 281 1 291 1 299 2 297 1 107 1 177 2 334 1 
4 1 
75 1 153 1 281 1 299 1 297 1 107 1 177 1 334 1 
75 1 153 1 48 1 297 1 107 1 334 1 291 1 299 3 281 1 125 1 177 3 
281 1 18 1 211 1 216 1 
281 1 107 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (58,290) 267 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (58,290) 267 266 235 (58,290) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 115 (6,21,181) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (58,290) 267 119 142 44 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (58,290) 267 278 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (58,290) 267 266 265 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (58,290) 267 241 307 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (58,290) 267 266 235 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (58,290) 267 241 265 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (58,290) 267 241 307 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (58,290) 267 266 235 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (58,290) 267 241 265 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (58,290) 267 241 265 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (58,290) 267 241 265 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (58,290) 267 241 265 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (58,290) 267 241 265 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (58,290) 267 344 (223,224) (223,224) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 1 105 1 268 1 33 2 107 2 195 1 75 9 249 1 131 1 81 9 162 3 38 5 37 1 291 1 7 1 345 2 89 1 114 1 11 4 48 1 18 1 259 2 263 2 98 1 330 2 332 6 124 1 189 2 
126 1 105 1 268 1 107 2 195 1 33 2 75 9 249 1 131 1 81 9 162 3 38 5 37 1 291 1 7 1 345 2 89 1 114 1 11 4 48 1 18 1 259 2 263 2 98 1 330 2 332 6 124 1 189 2 
126 1 105 1 268 1 107 2 195 1 33 2 75 10 249 1 131 1 81 10 162 4 38 6 37 1 291 1 7 1 345 2 89 1 114 1 11 5 48 1 18 1 259 2 263 2 98 1 330 2 332 7 124 1 189 2 
126 1 105 1 268 1 107 2 195 1 33 1 75 7 249 1 131 1 81 7 162 2 38 4 37 1 291 1 345 2 89 1 114 1 11 3 48 1 18 1 259 2 263 2 98 1 330 2 332 4 124 1 189 2 
114 1 126 1 11 2 105 1 268 1 195 1 33 2 107 1 75 4 259 1 263 1 330 1 81 4 162 1 38 3 332 3 7 1 345 1 
114 1 296 1 232 1 105 1 268 1 75 2 131 1 259 1 263 1 330 1 81 2 38 1 291 1 345 1 86 1 189 1 
89 1 114 1 11 1 105 1 268 1 75 3 263 2 330 2 81 3 162 1 38 2 332 1 189 1 
89 1 114 1 126 1 311 1 11 4 105 1 268 1 15 1 107 1 33 2 195 1 75 9 259 1 263 2 330 2 81 9 37 1 38 5 162 3 332 7 7 1 345 1 124 1 189 1 
89 1 114 1 126 1 311 1 11 4 105 1 268 1 15 1 107 1 33 2 195 1 75 9 259 1 263 2 330 2 81 9 37 1 38 5 162 3 332 7 7 1 345 1 124 1 189 1 
96 1 152 1 194 1 
96 1 66 2 99 1 
125 2 4 2 57 1 343 1 314 2 205 2 239 2 303 2 
125 3 57 1 30 1 106 1 336 1 337 1 314 3 110 1 317 2 111 1 199 2 173 1 4 2 253 1 62 1 320 1 321 1 343 1 84 1 323 1 364 1 230 1 272 2 201 1 326 2 371 1 91 1 92 1 205 2 239 2 303 2 49 1 120 1 329 2 146 1 211 1 53 1 
125 1 4 1 297 1 358 1 343 1 116 1 314 1 205 1 239 1 303 1 
280 1 125 1 216 1 194 1 358 1 314 1 239 1 96 1 172 1 250 1 97 1 374 1 200 1 23 1 
280 1 125 1 216 2 194 1 358 1 205 1 314 1 239 1 303 1 96 1 172 2 250 1 4 1 374 1 200 1 
172 1 340 1 216 1 226 1 112 1 
96 1 74 1 172 2 340 1 216 2 226 1 194 1 179 1 
172 1 340 1 216 1 
167 1 125 1 216 1 297 1 358 1 116 1 205 1 314 1 239 1 303 1 172 1 4 1 226 1 343 1 
96 1 
96 1 172 2 340 1 153 1 216 2 226 1 194 1 179 1 
102 1 103 1 216 5 194 1 179 1 301 1 163 2 238 1 96 1 172 5 19 1 183 1 340 2 341 2 35 1 226 2 39 1 165 2 174 1 
152 1 57 1 
125 2 57 2 314 2 338 1 205 1 239 2 303 1 4 1 71 1 
267 1 58 1 
125 1 283 1 57 1 30 1 92 1 337 1 314 1 317 1 199 1 329 1 62 1 146 1 321 1 84 1 323 1 230 1 
125 2 136 1 30 1 58 1 92 1 337 1 314 2 239 1 303 1 317 1 77 1 199 1 4 1 62 1 329 1 146 1 321 1 84 1 323 1 230 1 
125 3 77 1 4 3 57 1 205 1 314 3 239 3 303 3 
125 1 4 1 358 1 116 1 314 1 239 1 303 1 
125 1 4 1 71 1 358 1 314 1 205 1 338 1 239 1 303 1 
280 1 125 4 216 1 57 1 30 1 106 1 358 1 336 1 337 1 338 1 314 4 172 1 317 1 111 1 250 1 77 1 199 1 270 1 173 1 4 3 253 1 62 1 320 1 321 1 200 1 84 1 343 1 323 1 364 1 230 1 272 2 326 1 177 1 136 1 371 1 91 1 92 1 205 2 239 3 303 3 374 1 120 1 329 1 146 1 
125 2 77 1 154 1 4 1 57 1 23 1 314 2 239 2 303 1 
280 1 125 3 169 1 216 1 136 1 177 1 358 1 205 1 338 1 314 3 239 3 303 3 96 1 172 1 250 1 77 2 374 1 4 3 200 1 
125 2 58 1 338 1 205 1 314 2 239 2 303 2 77 1 61 1 4 2 
125 1 57 1 30 1 92 1 337 1 314 1 317 1 199 1 329 1 62 1 146 1 321 1 84 1 323 1 230 1 
125 1 0 1 57 1 30 1 92 1 337 1 314 1 317 1 199 1 329 1 62 1 36 1 321 1 84 1 230 1 
272 2 267 1 266 1 326 2 235 1 371 1 58 1 336 1 111 1 173 1 253 1 120 1 51 1 121 1 320 2 290 1 
125 1 4 1 358 1 200 1 293 1 314 1 239 1 303 1 
125 4 12 1 136 1 57 1 299 1 358 1 314 4 338 1 205 1 239 4 303 4 77 2 4 4 319 1 
125 2 4 2 358 1 293 1 116 1 314 2 239 2 303 2 
269 1 181 1 
269 1 181 1 
269 1 115 1 6 1 181 1 
269 1 115 1 6 1 181 1 
115 1 6 1 
269 1 257 1 181 1 
269 1 115 1 6 1 181 1 
269 1 21 1 181 1 
269 1 257 1 181 1 
269 1 257 1 181 1 
359 1 269 1 181 1 
359 1 269 1 181 1 
359 1 269 1 181 1 
87 2 216 2 157 1 234 2 158 2 245 1 68 1 181 2 96 1 141 3 269 2 172 2 316 1 143 1 164 2 63 1 210 1 149 1 354 2 
125 2 156 1 55 1 216 1 57 1 218 1 314 2 269 1 172 1 316 1 198 1 4 2 292 1 87 1 347 1 10 1 234 1 239 2 303 2 181 1 141 1 164 1 21 1 354 1 
259 1 345 1 107 1 
259 1 345 1 86 1 
259 3 209 1 107 2 242 1 334 1 86 1 
259 2 261 1 209 1 107 1 334 1 86 1 
259 2 209 2 107 1 334 1 86 1 
212 2 265 1 102 1 266 1 216 5 194 1 172 5 340 1 251 1 198 1 60 1 341 1 362 1 34 2 226 4 289 1 292 1 273 1 66 3 10 1 348 1 179 1 163 1 301 3 238 2 96 2 241 1 121 1 99 1 150 2 165 1 100 1 
212 6 265 3 102 1 266 3 103 1 281 1 216 9 244 1 194 1 286 1 315 5 172 9 340 6 198 4 60 3 341 2 226 7 289 1 112 5 254 1 273 2 66 9 179 1 163 2 301 8 238 6 94 1 96 5 241 3 121 3 99 3 187 1 150 6 165 2 100 2 
212 2 265 1 266 1 103 1 216 3 194 1 172 3 251 1 198 1 362 1 341 1 60 1 34 1 226 2 273 1 66 4 163 1 301 3 238 2 96 3 241 1 121 1 99 2 165 1 150 2 100 1 
212 4 265 2 266 2 103 1 216 4 194 1 244 1 286 1 172 4 251 1 198 2 341 1 362 1 60 2 34 2 226 3 273 1 66 7 163 1 301 5 238 4 96 4 241 2 121 2 99 3 187 1 150 4 165 1 100 1 
152 1 324 1 230 1 
230 1 248 1 
328 1 
92 1 230 1 
20 1 104 1 92 1 321 1 324 2 230 3 
92 1 321 1 230 1 
333 1 230 1 
190 1 43 1 8 1 326 7 31 3 79 1 160 1 60 1 223 1 224 1 121 1 320 3 227 2 308 1 344 2 211 4 277 1 
190 1 43 1 8 1 326 7 31 3 79 1 160 1 60 1 223 1 224 1 121 1 320 3 227 2 308 1 344 2 211 4 277 1 
190 1 43 1 8 1 326 7 46 1 31 3 79 1 160 1 60 1 223 1 224 1 121 1 320 3 227 2 308 1 344 2 211 4 277 1 
190 2 168 3 265 3 266 3 243 1 336 1 31 10 108 1 160 1 79 5 223 1 60 4 173 1 224 1 320 15 227 5 344 3 272 2 43 2 8 2 176 1 326 31 274 1 371 1 119 4 207 1 241 3 120 1 121 4 147 1 148 1 308 2 211 16 277 1 
190 1 336 2 31 4 79 1 60 1 223 1 173 2 224 1 320 4 227 3 344 2 272 4 43 1 8 1 176 1 326 9 371 2 69 1 120 2 121 1 211 5 308 1 277 1 264 1 
105 1 312 1 268 1 337 1 107 1 75 2 317 1 199 1 81 2 38 1 84 1 40 1 345 1 365 1 86 1 367 1 366 1 114 1 300 1 16 1 139 1 259 2 263 1 329 1 330 1 332 1 309 1 101 1 242 1 189 1 
26 1 105 1 312 1 268 1 337 1 107 1 75 3 317 1 199 1 81 3 38 1 84 1 40 1 345 1 365 1 86 1 366 1 300 1 16 1 139 1 304 1 351 1 259 2 263 1 329 1 330 1 332 2 309 1 242 1 189 1 
26 1 105 1 312 1 268 1 337 1 107 1 75 2 317 1 199 1 81 2 38 1 84 1 40 1 345 1 365 1 86 1 300 1 139 1 351 1 259 2 329 1 332 2 309 1 242 1 189 1 
214 1 357 1 192 1 30 1 300 2 92 1 337 1 247 1 139 2 118 1 304 1 75 1 317 1 132 1 199 1 263 1 329 1 330 1 81 1 84 1 309 2 230 1 189 2 
26 1 312 1 337 1 107 1 75 1 317 1 199 1 81 1 84 1 40 1 345 1 365 1 86 1 366 1 114 1 300 1 16 1 139 1 259 2 263 1 329 1 330 1 309 1 101 1 242 1 189 1 
305 1 
102 1 280 1 192 1 193 1 194 1 337 1 340 6 250 1 252 2 199 2 341 1 342 1 5 2 200 1 346 2 66 2 301 2 163 1 117 1 206 1 262 4 165 1 23 1 123 1 125 1 357 1 216 5 29 1 30 2 313 1 358 1 314 1 219 1 76 2 172 5 317 2 222 2 322 1 84 1 230 1 134 1 92 1 179 3 238 2 239 1 96 2 140 2 275 1 97 1 374 1 329 2 99 2 375 2 100 1 188 1 
280 1 125 1 153 1 216 3 29 1 313 1 358 1 314 1 219 1 172 3 250 1 340 2 322 1 200 1 179 1 239 1 206 1 140 1 97 1 374 1 262 2 23 1 
280 1 125 1 153 1 216 3 29 1 194 1 313 1 358 1 314 1 219 1 172 3 340 1 250 1 5 1 322 1 200 1 179 1 239 1 206 1 96 1 97 1 374 1 262 3 23 1 
280 1 125 1 153 1 216 3 29 1 194 1 313 1 358 1 314 1 219 1 172 3 250 1 340 2 222 1 5 1 322 1 200 1 179 1 239 1 206 1 140 1 96 1 97 1 374 1 262 3 23 1 
280 1 102 1 153 1 194 5 250 1 340 7 252 2 341 1 5 4 200 1 346 2 163 1 301 1 117 1 206 1 262 6 165 1 23 1 24 1 123 1 125 1 29 1 216 5 358 1 313 1 314 1 219 1 76 2 172 5 222 4 78 1 322 1 368 1 233 1 179 3 238 1 239 1 95 1 140 4 96 5 97 1 374 1 99 2 375 2 
280 1 102 1 194 1 250 1 340 4 252 2 341 1 5 2 200 1 346 2 66 2 163 1 301 1 117 1 206 1 262 4 165 1 23 1 123 1 125 1 29 1 216 4 358 1 313 1 314 1 219 1 76 2 172 4 222 2 322 1 179 2 238 1 239 1 140 2 96 2 97 1 374 1 99 2 375 2 188 1 
280 1 102 1 125 1 216 4 29 1 194 1 313 1 358 1 314 1 219 1 76 2 172 4 340 4 250 1 222 2 252 2 78 1 341 1 5 2 322 1 200 1 346 2 368 1 233 1 179 2 301 1 163 1 238 1 117 1 239 1 96 1 140 2 206 1 97 1 374 1 262 4 99 2 165 1 375 2 23 1 123 1 
280 1 102 1 125 1 216 4 29 1 194 1 313 1 358 1 314 1 219 1 76 2 172 4 340 4 250 1 222 2 252 2 78 1 341 1 5 2 322 1 200 1 346 2 368 1 233 1 179 2 301 1 163 1 238 1 117 1 239 1 96 1 140 2 206 1 97 1 374 1 262 4 99 2 165 1 375 2 23 1 123 1 
280 1 102 1 125 1 216 4 29 1 194 1 313 1 358 1 314 1 219 1 76 2 172 4 340 4 250 1 222 2 318 2 341 1 5 2 322 1 200 1 88 1 66 2 368 1 179 2 138 2 301 1 163 1 238 1 117 1 239 1 96 1 140 2 206 1 182 1 97 1 374 1 262 4 184 1 165 1 375 2 23 1 
102 1 280 1 125 1 216 4 29 1 194 1 313 1 358 1 314 1 219 1 76 2 172 4 250 1 340 5 252 2 78 1 222 3 341 1 5 3 322 1 200 1 346 2 368 1 233 1 179 2 301 1 163 1 238 1 117 1 239 1 96 1 206 1 140 3 97 1 374 1 262 5 99 2 165 1 375 2 23 1 123 1 24 1 
102 1 280 1 125 1 216 4 29 1 194 1 313 1 358 1 314 1 219 1 76 2 172 4 250 1 340 5 252 2 78 1 222 3 341 1 5 3 322 1 200 1 346 2 368 1 233 1 179 2 301 1 163 1 238 1 117 1 239 1 96 1 206 1 140 3 97 1 374 1 262 5 99 2 165 1 375 2 23 1 123 1 24 1 
280 1 102 1 194 1 250 1 340 4 341 1 5 2 200 1 66 2 163 1 301 1 117 1 206 1 262 4 165 1 23 1 125 1 29 1 216 4 358 1 313 1 314 1 219 1 76 2 172 4 222 2 318 2 322 1 179 2 138 2 238 1 239 1 140 2 96 1 182 1 97 1 374 1 375 2 188 1 
267 1 152 1 57 2 58 1 336 1 31 2 111 1 223 1 60 1 173 1 224 1 253 1 320 3 227 2 344 1 272 2 8 1 326 6 371 1 120 1 51 1 121 1 308 1 211 3 277 1 
272 2 267 1 44 1 326 1 298 1 371 1 58 1 336 1 111 1 142 1 119 1 173 1 253 1 120 1 320 1 
125 2 356 1 283 1 57 1 30 1 106 1 336 1 337 1 314 2 317 1 111 1 199 1 77 1 61 1 173 1 4 1 62 1 253 1 320 1 321 1 84 1 323 1 230 1 272 2 201 1 326 2 298 1 136 1 371 1 92 1 239 1 303 1 306 1 329 1 120 1 146 1 122 1 211 1 
267 1 125 2 30 1 58 1 106 1 336 2 337 1 314 2 317 1 111 2 77 1 199 1 173 2 4 1 62 1 253 2 161 1 320 2 321 1 84 1 323 1 230 1 272 4 326 2 298 1 136 1 91 1 371 2 92 1 236 1 239 1 303 1 352 1 120 2 329 1 146 1 151 1 278 1 
26 1 125 1 192 1 357 1 30 2 106 1 336 2 337 2 314 1 130 1 110 2 159 1 317 8 111 2 77 1 199 8 4 1 173 2 253 2 320 1 84 2 230 3 367 1 272 4 42 1 201 1 326 2 371 2 92 2 180 1 239 1 93 1 240 1 303 1 145 1 329 7 120 2 51 1 211 1 
265 1 267 1 125 1 266 1 58 1 336 1 338 1 314 1 3 1 111 1 60 1 4 1 173 1 253 1 320 2 272 2 326 3 298 1 371 1 205 1 239 1 303 1 241 1 120 1 121 1 211 1 
272 2 267 1 326 2 371 1 58 1 336 1 111 1 60 1 173 1 241 1 253 1 120 1 51 1 307 1 211 2 
272 2 267 1 266 1 326 2 235 1 371 1 58 1 336 1 111 1 173 1 253 1 120 1 51 1 121 1 320 2 
272 2 265 1 267 1 326 2 371 1 58 1 336 1 111 1 60 1 173 1 241 1 253 1 120 1 51 1 211 2 
272 2 267 1 326 2 371 1 58 1 336 1 93 1 111 1 60 1 173 1 241 1 253 1 120 1 307 1 211 2 
272 2 267 1 266 1 326 2 235 1 371 1 58 1 336 1 93 1 111 1 173 1 253 1 120 1 121 1 320 2 
272 2 265 1 267 1 326 2 371 1 58 1 336 1 93 1 111 1 60 1 173 1 241 1 253 1 120 1 211 2 
272 2 265 1 267 1 326 2 371 1 58 1 336 1 111 1 60 1 173 1 241 1 253 1 120 1 211 2 
125 1 57 1 30 1 106 1 336 1 337 1 314 1 317 1 111 1 199 1 173 1 62 1 253 1 320 1 321 1 84 1 323 1 230 1 272 2 201 1 326 2 91 1 371 1 92 1 329 1 120 1 146 1 211 1 
0 1 125 1 57 1 30 1 106 1 336 1 337 1 314 1 317 1 197 1 111 1 199 1 173 1 62 1 253 1 36 1 320 1 321 1 84 1 230 1 272 2 201 1 326 2 371 1 92 1 329 1 120 1 211 1 
272 2 265 1 267 1 326 2 298 1 371 1 58 1 336 1 111 1 60 1 173 1 241 1 253 1 120 1 211 2 
265 1 267 1 125 1 58 1 336 1 337 1 314 1 317 1 111 1 199 1 60 1 173 1 62 1 253 1 321 1 84 1 323 1 230 1 367 1 272 2 326 2 91 1 371 1 92 1 241 1 352 1 329 1 120 1 146 1 211 2 
272 2 265 1 267 1 125 1 326 2 298 1 371 1 58 1 336 1 314 1 338 1 205 1 239 1 303 1 111 1 60 1 241 1 373 1 173 1 4 1 253 1 120 1 211 2 
279 1 168 1 265 3 266 3 56 1 336 2 31 6 360 1 220 1 221 1 79 3 60 3 173 2 320 10 227 3 272 4 231 1 326 19 274 1 371 2 203 2 119 2 241 3 120 2 121 3 331 1 148 1 211 9 376 2 264 1 
168 2 265 3 266 2 56 1 336 3 246 1 170 1 31 4 220 2 221 1 79 2 60 3 173 3 320 12 227 2 363 1 272 6 231 2 176 2 326 26 371 3 203 1 350 1 119 2 241 3 120 3 72 1 121 2 331 1 148 2 211 14 376 4 264 1 25 1 
168 3 265 4 266 4 56 1 336 3 246 1 170 1 31 8 360 1 220 2 221 1 79 4 223 1 60 5 173 3 224 1 320 21 363 1 227 4 344 1 272 6 8 1 231 1 176 1 326 41 135 1 274 1 371 3 203 1 350 1 119 4 241 4 120 3 72 1 121 5 331 1 148 3 308 1 211 20 277 1 376 4 264 1 25 1 
168 3 265 4 266 3 56 1 336 4 246 1 170 1 31 7 360 1 220 2 221 1 79 3 223 1 60 5 173 4 224 1 320 18 363 1 227 4 344 1 272 8 8 1 231 1 176 2 326 38 135 1 274 1 371 4 203 1 350 1 119 4 241 4 120 4 72 1 121 4 331 1 148 3 308 1 211 20 277 1 376 4 264 1 25 1 
168 4 265 7 266 7 56 1 336 2 246 1 170 1 31 14 220 1 221 1 79 7 223 1 60 8 173 2 224 1 320 25 363 1 227 7 344 1 272 4 8 1 231 1 176 1 326 52 274 2 371 2 203 1 350 1 119 4 241 7 120 2 72 1 121 8 331 1 185 2 148 2 308 1 211 27 277 1 376 4 264 1 25 1 
109 1 269 1 87 1 164 1 234 1 210 1 245 1 149 1 354 1 181 1 
347 1 21 1 
269 1 87 1 164 1 208 1 353 1 234 1 354 1 166 1 181 1 
87 1 216 1 234 1 158 1 245 1 68 1 181 1 96 1 141 2 316 1 172 1 269 1 143 1 164 1 63 1 210 1 149 1 354 1 
87 1 216 1 234 1 158 1 245 1 68 1 181 1 96 1 141 2 316 1 172 1 269 1 143 1 164 1 63 1 210 1 149 1 354 1 
87 1 216 1 234 1 158 1 245 1 68 1 181 1 96 1 141 2 316 1 172 1 269 1 143 1 164 1 63 1 210 1 149 1 354 1 
1 1 155 1 257 1 
1 1 155 1 257 1 
359 1 85 1 
359 1 1 1 85 1 
55 1 218 1 
125 2 156 1 55 1 216 1 57 1 158 1 218 1 314 2 172 1 269 1 198 1 4 2 63 1 226 1 292 1 87 1 295 1 347 1 10 1 234 1 239 2 181 1 303 2 141 1 164 1 21 1 354 1 
155 1 257 1 
359 1 1 1 85 1 
125 2 282 1 217 1 106 1 336 1 337 1 314 2 2 1 110 2 317 2 111 1 199 2 173 1 253 1 320 1 84 1 229 1 230 1 272 2 42 1 201 1 326 2 298 1 371 1 92 1 239 2 17 1 145 1 120 1 329 2 211 1 
367 1 366 1 26 1 9 1 370 1 312 1 337 1 107 1 139 1 317 2 199 2 287 1 259 2 329 2 84 1 40 1 345 1 242 1 86 1 
366 1 26 1 9 1 312 1 285 1 337 1 107 1 139 1 317 1 199 1 259 2 329 1 84 1 40 1 345 1 242 1 86 1 
370 1 192 1 357 1 30 1 92 1 337 1 139 1 118 1 317 1 199 1 329 1 84 1 230 1 255 1 
366 1 26 1 9 1 370 1 312 1 337 1 107 1 139 1 317 1 199 1 287 1 259 2 329 1 84 1 40 1 345 1 242 1 86 1 
302 1 
96 1 152 1 35 1 194 1 39 1 301 1 238 1 
102 1 216 1 194 1 172 1 340 1 252 1 341 1 346 1 66 1 179 1 301 1 163 1 238 1 96 2 99 1 165 1 123 1 
102 1 325 1 30 1 92 1 337 2 163 1 248 1 317 1 20 1 199 1 341 1 329 1 321 1 186 1 84 1 165 1 230 2 
212 5 102 2 168 1 265 2 266 2 216 1 194 2 246 1 170 1 129 1 172 1 340 1 341 2 60 2 363 1 66 6 67 1 137 2 179 1 301 8 163 2 238 5 96 5 350 1 275 1 119 1 260 1 241 2 72 1 99 3 121 2 148 1 150 5 165 2 100 1 
167 1 102 1 125 1 216 1 358 1 314 1 172 1 78 1 341 1 60 2 4 1 343 1 8 1 67 1 297 1 45 1 137 2 163 1 301 2 116 1 238 2 205 1 239 1 303 1 121 1 308 1 165 1 277 1 
102 1 194 1 163 1 301 1 238 1 96 1 341 1 35 1 39 1 165 1 
212 5 265 2 66 10 266 2 67 1 137 2 301 5 238 5 96 5 60 2 241 2 99 5 121 2 150 5 278 1 
96 1 172 1 340 1 216 1 194 1 179 1 
191 1 102 1 103 1 192 1 357 1 216 3 30 2 337 3 128 1 317 4 172 3 340 4 199 4 342 1 341 2 271 2 321 1 84 2 230 2 294 1 134 1 113 1 202 1 13 1 92 2 179 2 163 2 301 2 238 2 275 2 144 1 329 4 165 2 100 2 
125 3 57 1 30 1 106 1 336 1 337 1 314 3 317 1 111 1 199 1 173 1 4 2 62 1 253 1 320 1 321 1 343 1 84 1 323 1 364 1 230 1 272 2 326 1 371 1 91 1 92 1 205 2 239 2 303 2 329 1 120 1 146 1 
212 2 102 1 66 4 194 2 163 1 301 1 238 2 96 4 275 1 341 1 99 2 344 1 150 2 165 1 100 1 
80 1 234 1 354 1 
234 1 210 1 218 1 47 1 354 1 
80 1 234 1 354 1 
80 1 234 1 354 1 
288 1 234 1 354 1 
288 1 234 1 354 1 
288 1 234 1 354 1 
234 1 354 1 
269 1 181 1 
272 4 8 1 176 1 326 8 371 2 336 2 31 3 79 1 60 1 223 1 173 2 120 2 224 1 121 1 320 4 227 2 344 1 211 4 308 1 277 1 
8 1 152 1 326 6 31 2 223 1 60 1 224 1 121 1 320 3 227 2 344 1 308 1 211 3 277 1 
272 2 265 1 266 1 326 4 372 1 371 1 336 1 31 2 79 1 60 1 173 1 241 1 120 1 121 1 320 2 227 1 211 2 
168 1 265 1 266 1 326 7 274 1 31 2 119 2 79 1 60 1 241 1 121 1 320 4 227 1 148 1 211 3 
265 2 168 2 266 2 336 2 31 9 79 4 223 1 60 3 173 2 224 1 320 12 227 5 344 1 272 4 8 2 176 2 326 23 274 1 371 2 119 2 142 1 50 1 241 2 120 2 121 3 185 1 308 2 211 11 277 1 
119 1 326 1 320 1 
168 1 326 1 211 1 
272 2 265 1 266 1 326 6 371 1 372 1 336 1 31 3 79 1 60 1 173 1 241 1 120 1 121 1 320 3 227 2 211 3 278 1 
168 1 265 2 266 2 336 1 170 1 246 1 31 2 79 1 60 2 173 1 320 6 363 1 227 1 272 2 326 12 371 1 350 1 119 1 241 2 120 1 121 2 72 1 148 1 211 6 264 1 
8 1 326 6 31 2 79 1 60 1 121 1 320 3 227 1 211 3 308 1 277 1 
272 2 8 1 176 1 326 3 371 1 336 1 31 2 50 1 79 1 223 1 173 1 224 1 120 1 320 2 227 1 211 1 308 1 
272 2 8 2 326 10 45 1 371 1 336 1 31 5 79 2 60 2 173 1 120 1 121 2 320 5 227 3 308 2 211 5 277 1 264 1 
272 2 326 2 371 1 336 1 31 1 79 1 60 1 173 1 241 1 120 1 211 2 264 1 
272 2 265 1 266 1 326 4 371 1 336 1 31 2 79 1 60 1 173 1 241 1 120 1 121 1 320 2 227 1 211 2 264 1 
272 6 8 1 176 1 326 3 371 3 336 3 31 2 360 1 50 1 79 1 173 3 120 3 320 2 227 1 308 1 211 1 264 1 
168 3 265 3 266 3 336 5 31 12 108 1 360 1 79 5 223 1 60 5 173 5 224 1 320 18 227 7 344 1 272 10 8 3 176 2 326 34 274 1 372 1 371 5 50 1 119 4 207 1 241 3 120 5 121 5 147 1 148 1 308 3 211 16 277 2 264 1 
168 1 336 1 31 2 60 1 223 1 173 1 224 1 320 4 363 1 227 2 344 1 272 2 8 1 326 8 371 1 119 1 120 1 121 1 148 1 211 4 308 1 277 1 264 1 
168 1 265 1 336 2 31 3 79 1 223 1 60 2 173 2 224 1 320 5 227 2 363 1 344 1 272 4 8 1 326 11 274 1 371 2 372 1 119 2 241 1 120 2 121 1 148 1 308 1 211 6 277 1 264 1 
168 1 265 2 266 2 336 3 170 1 246 1 31 4 79 1 223 1 60 3 173 3 224 1 320 10 363 1 227 3 344 1 272 6 8 1 176 1 326 19 372 1 371 3 350 1 119 1 241 2 120 3 72 1 121 3 148 1 308 1 211 9 277 1 264 1 
168 1 265 2 266 1 336 3 170 1 246 1 31 5 79 2 223 1 60 3 173 3 224 1 320 7 363 1 227 3 344 1 272 6 8 1 176 1 326 17 372 1 371 3 350 1 119 1 241 2 120 3 121 2 72 1 148 1 308 1 211 10 277 1 264 1 
168 1 336 1 31 2 60 1 223 1 173 1 224 1 320 4 363 1 227 2 344 1 272 2 8 1 326 8 371 1 119 1 120 1 121 1 148 1 211 4 308 1 277 1 264 1 
168 1 265 2 266 2 336 1 170 1 246 1 31 2 79 1 60 2 173 1 320 6 363 1 227 1 272 2 326 12 371 1 350 1 119 1 241 2 120 1 121 2 72 1 148 1 211 6 264 1 
168 1 265 2 266 1 336 4 246 1 170 1 31 5 79 2 223 1 60 3 173 4 224 1 320 8 363 1 227 3 344 1 272 8 8 1 176 2 326 18 372 1 371 4 350 1 119 1 241 2 120 4 72 1 121 2 148 1 308 1 211 10 277 1 264 1 
168 1 265 3 266 2 336 4 246 1 170 1 31 6 360 1 79 3 60 3 173 4 320 7 363 1 227 3 272 8 176 2 326 16 371 4 350 1 119 1 241 3 120 4 72 1 121 2 148 1 211 9 264 1 
8 3 326 7 31 6 79 3 223 1 60 1 224 2 121 1 320 4 227 3 308 3 211 3 277 1 
168 1 265 2 266 1 336 4 246 1 170 1 31 4 360 1 79 1 223 1 60 3 173 4 224 1 320 8 363 1 227 3 344 1 272 8 8 1 176 2 326 18 371 4 350 1 119 1 241 2 120 4 72 1 121 2 148 1 308 1 211 10 277 1 264 1 
125 1 154 1 215 1 57 1 314 1 23 1 239 1 
125 1 369 1 154 1 215 1 57 1 178 1 314 1 239 1 133 1 361 1 225 1 23 1 
317 1 152 1 199 1 357 1 192 1 329 1 30 1 92 1 84 1 337 1 230 1 
125 2 57 1 30 1 92 1 337 1 314 2 239 1 303 1 317 1 77 1 199 1 4 1 62 1 329 1 146 1 321 1 84 1 230 1 
280 1 125 2 57 1 358 1 92 2 337 1 314 2 239 2 303 2 317 1 77 1 199 1 4 1 271 1 62 1 329 1 146 1 82 1 200 1 321 2 84 1 333 1 230 3 
213 1 280 1 125 2 57 1 358 1 92 2 337 1 314 2 239 2 303 2 317 2 77 1 199 2 4 1 271 1 62 1 329 2 36 1 82 1 200 1 321 2 84 1 333 1 230 3 
167 1 125 1 216 1 194 1 358 1 314 1 248 1 339 1 317 1 172 1 199 1 271 1 4 1 343 1 230 1 297 1 116 1 205 1 239 1 303 1 96 1 329 1 
213 1 216 2 30 1 194 1 92 1 337 1 248 1 96 1 196 1 172 2 317 3 340 1 199 3 374 1 271 1 329 3 321 1 82 1 84 1 333 1 324 1 230 4 
317 1 159 1 199 1 329 1 84 1 337 1 
367 1 191 1 26 1 113 1 30 2 92 2 256 1 337 3 180 1 240 1 110 1 130 1 159 1 317 7 20 1 199 7 145 1 329 6 321 1 84 2 230 3 
267 1 125 2 57 2 58 1 336 2 337 1 31 2 314 2 2 1 317 1 111 2 77 1 199 1 60 1 223 1 173 2 4 1 224 1 62 1 253 2 320 3 161 1 227 2 321 1 344 1 84 1 323 1 230 1 272 4 367 1 8 1 326 6 298 1 371 2 91 1 92 1 239 1 303 1 120 2 329 1 352 1 121 1 146 1 211 3 308 1 277 1 
102 2 216 3 30 1 194 1 32 1 248 1 196 1 172 3 317 1 340 2 199 1 341 2 35 1 226 1 39 1 324 1 41 1 230 2 202 1 179 1 301 1 163 2 238 1 96 1 258 1 374 1 329 1 165 2 
367 1 20 1 317 2 159 1 325 1 199 2 329 2 92 1 321 1 84 1 337 2 324 1 230 2 
213 1 367 1 192 1 357 1 30 1 92 1 337 1 317 4 199 4 329 4 83 1 84 1 230 1 
191 1 294 1 113 1 92 1 337 2 128 1 317 2 199 2 271 1 329 2 321 1 228 1 84 1 230 1 
317 1 199 1 259 1 329 1 30 1 312 1 84 1 337 1 345 1 86 1 
367 1 26 1 92 1 337 1 17 1 317 2 199 2 145 1 329 2 84 1 230 1 
367 1 357 1 192 1 30 1 92 2 337 2 180 1 130 1 317 5 199 5 145 1 271 1 329 4 83 1 84 2 230 3 
367 1 357 1 192 1 30 1 92 2 337 2 130 1 317 5 199 5 145 1 271 1 329 4 83 1 84 2 355 1 230 3 
125 2 57 1 30 1 92 1 337 1 314 2 239 1 303 1 317 1 77 1 199 1 4 1 62 1 329 1 36 1 321 1 84 1 230 1 
191 1 113 1 92 1 256 1 337 2 317 1 20 1 199 1 271 1 329 1 321 1 84 1 230 1 
73 1 276 1 57 1 52 1 204 1 
73 1 280 1 216 2 57 1 177 1 194 1 358 1 327 1 204 2 96 1 172 2 276 2 250 1 59 1 374 1 226 1 200 1 52 2 22 1 
73 1 125 1 282 1 217 1 52 1 229 1 204 1 314 1 239 1 
73 1 59 1 327 1 
152 1 38 1 105 1 268 1 
75 1 263 1 81 1 330 1 38 1 105 1 268 1 
81 1 300 1 189 1 
114 1 14 1 105 1 268 1 75 3 131 2 263 1 70 1 330 1 81 3 38 1 175 1 
75 2 263 1 81 2 330 1 38 1 105 1 268 1 332 1 33 1 
114 1 126 1 11 1 107 1 75 1 259 1 263 1 330 1 81 1 38 1 345 1 
75 1 114 1 263 1 81 1 330 1 38 1 105 1 
75 1 114 1 263 1 81 1 330 1 105 2 268 1 
65 1 310 1 114 1 105 1 284 1 75 2 263 2 330 2 81 2 38 1 
114 1 11 1 105 1 268 1 75 3 263 1 330 1 81 3 37 1 162 1 38 2 332 2 124 1 
114 1 28 1 105 1 268 1 107 1 75 2 259 2 263 1 330 1 81 2 38 1 332 1 345 1 242 1 86 1 
114 1 11 1 105 1 268 1 33 1 75 4 263 2 330 2 81 4 162 1 38 2 332 2 7 1 
75 1 114 1 263 1 81 1 330 1 38 1 105 1 268 1 
11 1 14 1 90 1 105 2 268 2 75 4 131 1 263 1 81 4 330 1 162 1 38 3 332 2 175 1 
335 1 114 1 105 1 268 1 15 1 349 1 75 2 263 1 330 1 81 2 38 1 332 1 
114 1 127 1 14 2 105 1 268 1 75 3 131 2 263 1 330 1 81 3 38 1 175 1 
27 1 54 2 38 2 171 1 
75 1 114 1 263 1 81 1 330 1 64 1 
75 2 114 1 263 1 81 2 330 1 38 1 105 1 37 1 268 1 332 1 
237 1 
75 1 114 1 263 1 81 1 330 1 38 1 105 1 268 1 
75 3 131 1 114 1 263 1 81 3 330 1 37 1 38 1 105 1 268 1 332 1 
11 1 90 1 38 1 162 1 
38 1 105 1 

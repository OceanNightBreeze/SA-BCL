#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 103 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 266 54 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 266 (114,326) 376 341 (277,340) 202 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 219 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 219 18 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 103 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 266 (161,335) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 266 (114,326) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 266 (114,326) 376 341 (277,340) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 266 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
309 2 33 2 17 1 105 1 215 2 53 1 192 1 321 1 205 3 148 1 59 3 285 1 225 1 
309 2 174 2 199 1 153 1 179 1 105 6 342 2 321 1 205 9 181 1 323 1 33 5 14 1 349 2 117 1 17 4 215 2 53 1 192 3 121 1 148 1 59 9 334 1 63 1 263 2 225 2 285 1 151 1 
309 2 174 2 199 1 153 1 179 1 105 6 342 2 321 1 205 9 181 1 323 1 33 5 14 1 349 2 117 1 17 4 215 2 53 1 192 3 121 1 148 1 59 9 334 1 63 1 263 2 225 2 285 1 151 1 
309 2 174 2 199 1 153 1 179 1 105 7 342 2 321 1 205 10 181 1 323 1 33 6 14 1 349 2 117 1 17 5 215 2 53 1 192 4 121 1 148 1 59 10 334 1 63 1 263 2 225 2 285 1 151 1 
309 2 174 1 199 1 153 1 179 1 105 4 342 2 321 1 205 7 181 1 323 1 33 4 14 1 349 2 117 1 17 3 215 2 53 1 192 2 148 1 59 7 334 1 63 1 263 2 225 2 285 1 151 1 
309 1 33 3 174 2 349 1 105 3 179 1 17 2 215 1 342 1 192 1 53 1 321 1 205 4 121 1 148 1 59 4 263 1 151 1 
309 1 33 1 14 1 215 1 342 1 53 1 321 1 181 1 205 2 169 1 207 1 148 1 59 2 263 1 47 1 225 1 
309 2 33 5 174 2 349 1 153 1 189 1 179 1 105 7 17 4 215 2 342 1 53 1 192 3 321 1 205 9 121 1 148 1 59 9 334 1 60 1 263 1 151 1 285 1 225 1 
309 2 33 5 174 2 349 1 153 1 189 1 179 1 105 7 17 4 215 2 342 1 53 1 192 3 321 1 205 9 121 1 148 1 59 9 334 1 60 1 263 1 151 1 285 1 225 1 
183 1 256 1 164 1 267 1 177 1 118 1 26 1 229 1 270 1 93 1 194 1 9 1 76 1 296 1 
249 1 
93 2 194 1 367 1 72 1 28 1 149 1 118 2 249 1 
265 1 367 2 83 1 143 1 185 1 129 1 28 1 118 5 315 1 193 1 93 5 243 2 194 2 72 1 332 2 198 1 337 1 365 2 249 1 
103 1 28 1 249 1 
135 1 42 2 249 1 
256 2 183 2 329 1 164 2 177 2 267 2 9 1 229 2 
250 1 338 1 173 1 287 1 177 3 267 3 229 2 292 1 269 1 271 1 360 1 9 1 110 2 158 1 46 1 114 1 256 2 183 2 163 1 84 1 164 2 142 1 211 1 187 2 188 2 145 1 352 1 278 1 329 1 330 1 197 1 123 1 21 1 22 1 306 2 62 1 65 2 
256 1 183 1 164 1 177 1 267 1 9 1 229 1 26 1 296 1 270 1 
164 1 166 1 267 1 177 1 50 1 28 1 118 1 371 1 93 1 372 1 98 1 223 1 249 1 296 1 
183 1 256 1 164 1 267 1 177 1 50 1 28 1 229 1 118 2 371 1 93 2 372 1 223 1 249 1 296 1 
93 1 194 1 367 1 118 1 356 1 
93 2 194 1 367 1 72 1 2 1 28 1 118 2 249 1 
93 1 367 1 118 1 
366 1 81 1 183 1 256 1 164 2 267 2 177 2 229 1 329 2 
155 1 68 1 218 1 
114 1 142 1 211 1 177 1 267 1 188 1 145 1 269 1 329 1 19 1 330 1 110 1 123 1 62 1 65 1 46 1 
329 1 103 1 
114 1 256 1 164 1 142 1 211 1 267 2 177 2 68 1 229 1 188 1 145 1 269 1 330 1 108 1 123 1 111 1 110 1 62 1 46 1 65 1 
183 1 256 3 329 1 164 3 108 1 177 3 267 3 229 3 
256 1 164 1 177 1 267 1 229 1 296 1 270 1 
366 1 81 1 256 1 183 1 164 1 177 1 267 1 229 1 296 1 
250 1 339 1 177 4 267 4 229 3 292 1 269 1 271 1 360 1 108 1 111 1 9 1 110 1 46 1 296 1 114 1 81 1 163 1 183 2 256 3 84 1 142 1 164 3 211 1 187 2 50 1 118 1 188 1 145 1 371 1 93 1 352 1 278 1 329 1 372 1 330 1 197 1 123 1 21 1 306 1 97 1 62 1 223 1 65 1 
256 1 329 1 164 2 177 2 267 2 108 1 229 1 98 1 70 1 
81 1 183 1 256 3 339 1 164 3 267 3 177 3 50 1 240 1 118 1 229 3 371 1 93 1 372 1 108 2 111 1 223 1 249 1 296 1 
81 1 183 1 256 2 164 2 267 2 177 2 68 1 229 2 155 1 108 1 
114 1 142 1 211 1 177 1 267 1 188 1 145 1 269 1 329 1 330 1 110 1 123 1 62 1 65 1 46 1 
161 1 211 1 177 1 267 1 188 1 145 1 269 1 329 1 330 1 110 1 123 1 39 1 62 1 65 1 46 1 
250 1 287 2 68 2 271 1 206 1 231 1 155 2 272 1 360 2 322 1 160 1 84 1 187 2 190 1 92 1 352 1 278 1 56 1 218 2 21 1 336 1 306 4 
256 1 140 1 164 1 50 1 177 1 267 1 229 1 296 1 
81 1 256 4 183 1 164 5 267 5 177 5 229 4 70 1 328 1 29 1 329 1 108 2 111 1 98 1 
256 2 140 1 164 2 177 2 267 2 229 2 296 1 270 1 
180 1 132 1 79 1 
132 2 102 1 86 1 302 1 318 1 79 2 
132 1 79 1 
132 1 79 1 
102 1 86 1 
102 1 86 1 
102 1 86 1 
132 1 288 1 79 1 
132 1 288 1 79 1 
132 1 288 1 79 1 
132 1 57 1 79 1 
132 1 57 1 79 1 
132 1 57 1 79 1 
152 1 115 3 13 1 358 2 35 2 251 1 178 1 276 2 118 2 302 1 93 2 132 2 147 2 232 1 45 2 40 1 32 1 249 1 79 2 
358 1 251 1 267 2 177 2 229 2 253 1 180 1 132 1 107 1 109 1 45 1 235 1 79 1 256 2 115 1 164 2 348 1 35 1 276 1 118 1 52 1 93 1 329 1 373 1 
207 1 349 1 182 1 154 2 263 2 
349 1 342 1 263 1 
207 1 342 1 263 1 
207 1 349 2 182 1 131 1 154 1 263 3 
207 1 239 1 349 1 182 1 154 1 263 2 
265 2 42 3 28 1 317 1 344 2 206 1 231 1 72 1 107 1 109 1 135 1 365 1 160 1 367 1 238 2 83 3 348 1 258 1 241 1 118 5 190 1 242 2 243 1 93 5 194 4 217 1 96 1 332 1 337 1 221 1 264 1 249 2 
42 3 344 2 206 1 107 2 9 1 296 1 160 1 256 1 164 1 118 6 261 1 217 1 356 3 307 3 221 1 265 2 125 1 267 1 177 1 229 1 26 1 28 1 317 1 270 1 231 1 72 1 233 1 135 1 76 1 365 1 183 1 367 4 83 3 241 1 190 1 242 2 93 6 243 1 194 5 332 1 337 1 249 3 
265 2 42 4 28 1 317 1 344 2 206 1 231 1 107 1 135 2 365 1 160 1 83 3 238 1 143 1 118 3 190 1 242 2 243 1 93 3 194 2 217 1 96 1 332 1 221 1 249 3 264 1 
265 4 42 7 28 1 317 1 344 4 206 2 231 2 107 2 134 1 135 3 365 1 160 2 83 5 238 2 143 1 118 4 190 2 242 4 243 1 93 4 244 1 194 3 217 2 96 1 171 1 332 1 221 1 249 4 264 1 
300 1 
266 1 103 1 
184 1 145 1 
145 1 269 1 
266 1 289 1 123 1 145 1 269 1 54 1 
123 1 145 1 269 1 
175 1 145 1 
160 1 139 1 299 1 287 4 104 1 351 2 91 2 206 1 208 3 360 3 295 1 136 1 8 1 38 1 248 1 306 7 236 1 138 1 
250 2 287 19 130 1 104 1 316 1 206 5 271 2 208 8 231 4 360 18 295 1 136 2 157 1 364 1 236 2 137 1 138 5 160 5 139 1 324 2 299 1 84 2 369 4 187 4 301 4 168 1 190 4 351 3 91 3 217 4 122 1 38 2 333 1 21 2 248 2 306 37 
250 2 287 5 104 1 206 1 271 2 208 4 360 4 295 1 136 1 236 1 138 1 160 1 274 1 324 1 84 2 299 1 49 1 187 4 351 3 91 2 38 1 21 2 248 1 306 9 
160 1 139 1 299 1 287 4 104 1 351 2 91 2 206 1 208 3 360 3 295 1 136 1 38 1 248 1 306 7 236 1 138 1 
160 1 139 1 299 1 287 4 104 1 351 2 91 2 206 1 208 3 360 3 295 1 136 1 38 1 248 1 306 7 236 1 138 1 
309 1 67 1 227 1 24 1 290 1 69 1 268 1 269 2 71 2 205 1 44 1 110 1 162 1 325 1 211 1 188 1 215 1 145 2 89 1 146 2 20 2 330 2 354 1 123 1 59 1 282 1 62 1 224 1 65 1 225 2 
309 1 297 1 141 1 211 1 186 1 349 1 131 1 188 1 350 1 36 1 215 1 342 1 53 1 146 1 71 1 205 1 207 1 20 1 330 1 331 1 59 1 110 1 113 1 263 2 225 1 65 1 
309 1 131 1 105 1 342 1 321 1 71 1 205 2 207 1 110 1 113 1 297 1 33 1 141 1 211 1 349 1 188 1 350 1 215 1 36 1 53 1 146 1 20 1 330 1 148 1 247 1 331 1 59 2 263 2 65 1 225 1 
309 1 131 1 105 2 201 1 342 1 321 1 71 1 205 3 207 1 110 1 113 1 33 1 141 1 211 1 186 1 349 1 188 1 350 1 215 1 36 1 146 1 20 1 330 1 148 1 331 1 59 3 282 1 263 2 65 1 225 1 
131 1 105 2 201 1 342 1 321 1 71 1 205 2 207 1 110 1 113 1 33 1 211 1 186 1 349 1 188 1 36 1 146 1 20 1 330 1 148 1 331 1 59 2 263 2 225 1 65 1 
293 1 
265 1 67 1 313 1 290 1 268 1 269 2 106 1 72 1 110 2 365 1 255 1 367 2 83 1 325 1 211 1 188 2 118 2 145 2 243 1 93 2 330 2 354 1 123 1 332 1 337 1 62 2 221 1 224 1 65 2 
310 1 177 1 267 1 7 1 72 1 112 1 237 1 296 1 82 1 367 2 164 1 166 1 50 1 259 1 118 3 371 1 93 3 372 1 196 2 149 1 98 1 223 1 
310 1 177 1 267 1 28 1 7 1 72 1 237 1 296 1 82 1 367 1 164 1 166 1 50 1 259 1 118 3 371 1 93 3 372 1 196 3 172 1 149 1 98 1 223 1 249 1 
310 1 177 1 267 1 28 1 7 1 72 1 112 1 237 1 296 1 82 1 367 2 164 1 166 1 50 1 259 1 118 3 371 1 216 1 93 3 372 1 196 3 172 1 149 1 98 1 223 1 249 1 
4 1 6 2 7 1 112 4 296 1 347 1 12 2 164 1 50 1 166 1 213 2 259 1 118 5 216 4 172 4 222 1 223 1 265 1 310 1 226 2 177 1 267 1 28 5 359 1 72 3 135 2 237 1 74 1 365 1 82 1 367 7 83 1 87 1 371 1 93 5 243 1 279 1 372 1 196 6 332 1 149 1 337 1 98 1 249 5 
42 2 6 2 7 1 112 2 296 1 12 2 164 1 50 1 166 1 213 2 259 1 118 4 216 2 172 2 220 1 223 1 265 1 310 1 226 2 177 1 267 1 28 1 359 1 72 2 135 2 237 1 365 1 82 1 367 4 83 1 371 1 93 4 243 1 279 1 372 1 196 4 332 1 337 1 98 1 249 2 
265 1 310 1 226 2 177 1 267 1 4 1 28 1 6 2 359 1 7 1 72 2 135 2 112 2 237 1 365 1 296 1 12 2 347 1 82 1 367 4 83 1 164 1 166 1 50 1 213 2 87 1 259 1 118 4 371 1 216 2 93 4 243 1 279 1 372 1 172 2 196 4 332 1 337 1 98 1 223 1 249 1 
265 1 310 1 226 2 177 1 267 1 4 1 28 1 6 2 359 1 7 1 72 2 135 2 112 2 237 1 365 1 296 1 12 2 347 1 82 1 367 4 83 1 164 1 166 1 50 1 213 2 87 1 259 1 118 4 371 1 216 2 93 4 243 1 279 1 372 1 172 2 196 4 332 1 337 1 98 1 223 1 249 1 
265 1 310 1 177 1 267 1 42 2 28 1 6 2 319 1 7 1 72 2 112 2 237 1 365 1 296 1 80 2 82 1 367 4 83 1 164 1 166 1 50 1 213 2 87 1 259 1 118 4 88 1 371 1 119 1 216 2 303 2 93 4 243 1 279 1 372 1 172 2 196 4 332 1 337 1 98 1 223 1 249 1 
265 1 310 1 226 2 177 1 267 1 4 1 28 1 6 2 359 1 7 1 72 2 135 2 112 3 237 1 74 1 365 1 296 1 12 2 347 1 82 1 367 5 83 1 164 1 166 1 50 1 213 2 87 1 259 1 118 4 371 1 216 3 243 1 93 4 279 1 372 1 332 1 196 5 172 3 337 1 98 1 223 1 249 1 
265 1 310 1 226 2 177 1 267 1 4 1 28 1 6 2 359 1 7 1 72 2 135 2 112 3 237 1 74 1 365 1 296 1 12 2 347 1 82 1 367 5 83 1 164 1 166 1 50 1 213 2 87 1 259 1 118 4 371 1 216 3 243 1 93 4 279 1 372 1 332 1 196 5 172 3 337 1 98 1 223 1 249 1 
265 1 310 1 267 1 177 1 42 2 28 1 6 2 319 1 7 1 72 2 112 2 237 1 365 1 296 1 80 2 82 1 367 4 83 1 164 1 166 1 50 1 213 2 259 1 118 4 371 1 216 2 303 2 243 1 93 4 279 1 372 1 172 2 332 1 196 4 220 1 337 1 98 1 223 1 249 1 
250 1 312 1 173 1 67 1 287 1 290 1 268 1 269 2 271 1 43 1 360 1 110 2 158 1 84 1 325 1 211 1 187 2 188 2 145 2 352 1 278 1 330 2 354 1 123 1 197 1 21 1 306 2 62 1 224 1 65 2 
250 1 66 1 287 1 267 1 177 1 68 1 229 1 271 1 206 1 155 1 231 1 360 2 81 1 160 1 256 1 183 1 84 1 164 1 187 2 190 1 352 1 278 1 217 1 218 1 21 1 306 3 64 1 
250 1 287 3 68 1 103 1 104 1 271 1 206 1 155 1 208 2 360 3 295 1 160 1 299 1 84 1 187 2 351 2 91 1 352 1 278 1 56 1 329 2 38 1 218 1 21 1 248 1 306 6 
250 2 173 1 311 1 287 8 68 11 130 1 316 1 271 2 206 2 208 1 155 4 231 1 360 6 75 1 138 1 160 1 84 2 369 3 187 4 301 3 190 2 260 1 352 2 278 1 329 1 217 2 122 1 197 1 218 11 21 2 306 14 64 1 
250 1 286 1 173 1 287 1 177 2 267 2 229 1 269 1 271 1 155 1 360 1 133 1 108 1 110 1 111 1 46 1 114 1 256 1 142 1 84 1 164 1 211 1 187 2 188 1 145 1 90 1 352 1 278 1 329 1 19 1 330 1 123 1 197 1 21 1 306 2 62 1 64 1 65 1 
250 3 340 2 287 10 104 1 252 1 206 3 155 7 208 6 295 1 108 1 110 3 111 1 46 2 160 3 114 2 256 1 163 2 299 1 164 1 211 2 15 2 351 2 55 2 352 3 120 1 217 2 123 2 218 7 21 3 306 20 62 1 64 1 65 3 173 1 267 3 177 3 25 1 68 7 229 1 269 2 271 3 231 2 360 10 362 2 138 4 84 3 142 2 186 1 187 6 188 3 190 2 145 2 91 1 278 3 329 2 330 2 38 1 197 1 248 1 
250 1 84 1 287 2 187 2 68 1 190 1 56 1 278 1 352 1 271 1 206 1 208 1 155 1 272 1 218 1 21 1 306 2 138 1 
160 1 250 1 84 1 187 2 68 1 92 1 56 1 278 1 352 1 271 1 155 1 231 1 360 2 218 1 21 1 306 2 
160 1 250 1 84 1 287 2 187 2 68 2 190 1 56 1 278 1 352 1 271 1 206 1 231 1 208 1 155 2 360 2 217 1 218 2 21 1 306 4 138 1 
250 1 312 1 84 1 287 2 187 2 68 1 190 1 278 1 352 1 271 1 206 1 208 1 155 1 272 1 218 1 21 1 306 2 138 1 
160 1 250 1 312 1 84 1 187 2 68 1 92 1 278 1 352 1 271 1 155 1 231 1 360 2 218 1 21 1 306 2 
160 1 250 1 312 1 84 1 287 2 187 2 68 2 190 1 278 1 352 1 271 1 206 1 231 1 155 2 360 2 217 1 218 2 21 1 306 4 
160 1 250 1 84 1 287 2 187 2 68 2 190 1 278 1 352 1 271 1 206 1 231 1 208 1 155 2 360 2 217 1 218 2 21 1 306 4 138 1 
250 1 173 1 287 1 267 1 177 1 269 1 271 1 360 1 110 1 46 1 114 1 163 1 142 1 84 1 211 1 187 2 188 1 145 1 278 1 352 1 329 1 330 1 123 1 197 1 21 1 306 2 62 1 65 1 
250 1 173 1 287 1 267 1 177 1 269 1 271 1 360 1 110 1 46 1 161 1 84 1 211 1 187 2 167 1 188 1 145 1 278 1 352 1 329 1 330 1 123 1 197 1 21 1 39 1 306 2 62 1 65 1 
160 1 250 1 84 1 287 2 187 2 68 2 190 1 278 1 352 1 271 1 206 1 231 1 208 1 155 2 360 2 217 1 218 2 21 1 306 4 64 1 138 1 
250 1 287 2 267 1 177 1 68 2 269 1 206 1 271 1 231 1 208 1 155 2 360 2 110 1 138 1 46 1 160 1 114 1 163 1 142 1 84 1 211 1 187 2 188 1 190 1 145 1 55 1 278 1 352 1 330 1 217 1 247 1 218 2 123 1 21 1 306 4 65 1 
250 1 287 2 267 1 177 1 68 1 229 1 271 1 206 1 231 1 208 1 155 1 360 1 138 1 160 1 81 1 256 1 183 1 275 1 84 1 164 1 187 2 190 1 352 1 278 1 217 1 218 1 21 1 306 3 64 1 
250 4 100 1 287 30 104 1 206 9 208 11 295 1 156 1 11 1 160 8 299 1 212 1 48 1 301 4 16 1 351 2 58 4 217 8 122 2 21 4 305 1 306 57 176 1 130 2 316 2 271 4 231 7 360 27 73 1 138 9 274 1 324 2 84 4 369 4 187 8 190 8 191 1 91 1 245 1 195 1 281 1 38 1 248 1 284 2 
250 3 287 14 176 2 316 2 271 3 206 3 208 3 231 2 360 12 73 1 11 1 138 2 160 2 324 2 274 1 84 3 212 1 369 2 48 1 187 6 301 2 16 2 190 3 191 1 351 1 245 1 195 1 58 4 217 3 281 1 21 3 305 1 284 1 306 26 
250 4 100 1 287 33 104 2 206 9 208 12 295 2 11 1 160 9 299 2 212 1 48 1 301 5 16 2 351 3 58 4 217 7 122 2 21 4 305 1 306 64 176 1 130 2 316 3 271 4 231 7 360 31 73 1 138 9 274 1 324 2 84 4 369 5 187 8 190 7 191 1 91 2 95 1 245 1 195 1 281 1 38 2 248 2 284 1 
250 4 100 1 287 28 104 1 206 8 208 9 295 1 11 1 160 7 299 1 212 1 48 1 301 4 16 1 351 2 58 4 217 7 122 2 21 4 305 1 306 53 176 1 130 2 316 2 271 4 231 6 360 25 73 1 138 7 274 1 324 2 84 4 369 4 187 8 190 7 191 1 91 1 245 1 195 1 281 1 38 1 248 1 284 1 
250 2 287 27 176 1 130 2 104 1 316 2 271 2 206 8 208 8 231 7 360 25 295 1 73 1 11 1 138 7 160 8 324 1 274 1 299 1 84 2 212 1 48 1 369 4 187 4 301 4 16 1 190 7 351 1 191 1 91 1 245 1 195 1 58 4 217 7 122 2 281 1 38 1 305 1 21 2 248 1 284 1 306 52 
132 1 358 1 35 1 178 1 276 1 283 1 45 1 302 1 32 1 79 1 
180 1 52 1 
132 1 358 1 85 1 3 1 35 1 276 1 45 1 370 1 79 1 
152 1 115 2 13 1 358 1 251 1 35 1 178 1 276 1 118 1 302 1 93 1 132 1 147 1 45 1 40 1 32 1 249 1 79 1 
152 1 115 2 13 1 358 1 251 1 35 1 178 1 276 1 118 1 302 1 93 1 132 1 147 1 45 1 40 1 32 1 249 1 79 1 
152 1 115 2 13 1 358 1 251 1 35 1 178 1 276 1 118 1 302 1 93 1 132 1 147 1 45 1 40 1 32 1 249 1 79 1 
288 1 291 1 318 1 
288 1 291 1 318 1 
57 1 61 1 
57 1 318 1 61 1 
373 1 235 1 
358 1 177 2 267 2 229 2 253 1 180 1 132 1 107 1 109 1 45 1 235 1 79 1 256 2 13 1 209 1 115 1 164 2 348 1 35 1 276 1 118 1 52 1 93 1 147 1 194 1 329 1 373 1 
288 1 291 1 
57 1 318 1 61 1 
250 1 1 1 173 1 287 1 177 2 267 2 5 1 269 1 343 1 271 1 43 1 360 1 110 2 10 1 77 1 158 2 84 1 164 2 211 1 187 2 188 2 145 1 352 1 278 1 246 1 330 1 197 1 21 1 306 2 64 1 65 2 
67 1 227 1 290 1 69 1 268 1 269 2 110 1 31 1 325 1 211 1 188 1 145 2 146 1 330 2 354 1 123 1 62 1 262 1 65 1 224 1 
141 1 211 1 34 1 186 1 349 1 131 1 188 1 36 1 342 1 146 1 207 1 330 1 331 1 37 1 110 1 263 2 31 1 65 1 
141 1 211 1 34 1 186 1 349 1 131 1 188 2 36 1 342 1 146 1 207 1 330 1 247 1 331 1 37 1 110 2 263 2 31 1 65 2 
141 1 211 1 186 1 349 1 131 1 188 1 36 1 342 1 146 1 207 1 330 1 331 1 37 1 110 1 150 1 263 2 65 1 
357 1 
265 1 83 1 28 1 315 1 243 1 332 1 198 1 337 1 365 1 249 1 
265 5 160 2 83 5 42 10 27 1 190 2 242 5 344 5 206 2 231 2 362 1 217 2 135 5 249 5 
93 1 367 1 72 1 28 1 118 1 249 1 
265 1 67 1 313 1 290 1 268 1 269 2 106 1 72 1 294 1 110 2 365 1 255 1 367 2 83 1 325 1 211 1 188 2 118 1 145 2 243 1 93 1 330 2 354 1 123 1 332 1 337 1 62 2 221 1 224 1 65 2 
265 1 83 1 103 1 28 1 315 1 198 1 249 1 
265 1 226 1 42 1 28 1 359 1 72 1 135 1 365 1 12 1 367 1 83 1 118 1 243 1 93 1 332 1 337 1 249 2 
266 1 289 1 341 1 202 1 269 1 110 1 365 1 159 1 367 1 326 1 83 1 211 1 184 2 188 1 145 3 277 1 243 1 330 2 332 1 123 1 337 1 62 1 221 1 376 1 65 1 
265 5 42 6 27 1 28 2 316 1 344 5 206 2 231 2 72 1 273 1 135 3 73 1 365 2 255 1 160 2 367 1 83 8 210 1 369 1 48 1 301 1 118 1 190 2 191 1 242 5 93 1 243 2 245 1 353 2 217 2 332 2 305 1 337 2 221 1 249 5 
265 2 101 1 177 1 267 1 4 1 27 1 26 1 229 1 270 1 206 2 295 1 9 1 76 1 365 1 296 1 160 1 183 1 256 1 83 2 164 1 118 1 243 1 93 1 353 2 38 1 332 1 248 1 337 1 
250 1 177 3 267 3 229 2 292 1 269 1 271 1 360 1 110 1 9 1 46 1 114 1 256 2 183 2 163 1 164 2 142 1 84 1 211 1 187 2 188 1 145 1 278 1 352 1 329 1 330 1 197 1 123 1 21 1 306 1 62 1 65 1 
265 2 255 1 83 1 42 4 28 2 242 2 344 2 91 1 243 1 135 2 332 1 337 1 221 1 365 1 249 4 
345 1 35 1 178 1 45 1 235 1 
280 1 35 1 45 1 
280 1 35 1 45 1 
280 1 35 1 45 1 
35 1 228 1 45 1 
35 1 228 1 45 1 
35 1 228 1 45 1 
35 1 45 1 
132 1 79 1 
160 2 274 1 250 1 84 1 101 1 287 5 187 2 351 3 271 1 206 2 208 5 360 5 295 1 38 2 21 1 248 2 306 10 138 2 
274 1 250 1 84 1 287 2 187 2 190 1 271 1 206 1 208 1 21 1 306 2 138 1 
160 1 274 1 250 1 84 1 287 2 187 2 190 1 271 1 206 1 231 1 208 1 360 2 217 1 21 1 306 4 138 1 
324 1 274 1 100 1 250 3 84 3 287 1 187 6 351 1 271 3 208 2 360 2 333 1 38 1 21 3 248 1 306 3 138 1 
100 1 250 5 287 20 130 1 104 1 316 1 271 5 206 6 208 11 231 4 360 21 295 2 157 1 364 1 138 7 160 6 324 2 274 1 299 1 84 5 369 4 257 1 187 10 301 4 168 1 190 4 351 4 91 1 217 4 122 1 38 3 333 1 21 5 248 3 306 41 
160 1 324 1 250 2 84 2 299 1 287 4 187 4 104 1 351 2 91 1 206 1 271 2 208 3 360 4 295 1 38 1 21 2 248 1 306 8 138 1 
160 1 299 1 287 3 103 1 104 1 351 2 91 1 206 1 208 2 360 3 295 1 38 1 248 1 306 6 
160 1 250 1 84 1 287 2 257 1 187 2 190 1 271 1 206 1 231 1 360 2 217 1 21 1 306 4 
160 2 287 6 369 2 130 1 301 2 316 1 190 2 206 2 231 2 208 2 360 6 217 2 122 1 306 12 138 2 
250 2 101 1 287 14 130 1 104 1 206 4 271 2 208 10 231 2 360 16 295 2 75 1 138 5 160 4 324 2 299 1 84 2 369 2 187 4 301 2 190 2 351 5 91 1 217 2 122 1 38 4 333 1 21 2 248 4 306 30 
360 1 369 1 306 1 
287 1 301 1 306 1 
160 1 250 1 84 1 287 3 187 2 257 1 190 1 271 1 206 1 208 1 231 1 360 3 362 1 217 1 21 1 306 6 138 1 
250 1 287 6 316 1 271 1 206 2 231 2 208 1 360 6 73 1 138 1 160 2 274 1 84 1 369 1 48 1 187 2 301 1 190 2 191 1 245 1 217 2 305 1 21 1 306 12 
160 1 287 3 351 1 206 1 208 2 360 3 295 1 38 1 248 1 306 6 138 1 
324 1 250 1 84 1 299 1 287 1 187 2 104 1 351 1 271 1 208 2 360 2 38 1 333 1 21 1 248 1 306 3 138 1 
250 2 287 7 316 1 271 2 206 2 231 1 208 1 360 4 73 1 138 1 160 1 324 1 274 1 84 2 369 1 48 1 187 4 301 1 190 2 191 1 245 1 217 2 305 1 21 2 306 11 
250 3 287 9 316 1 271 3 206 3 208 2 231 1 360 5 73 1 138 2 160 1 324 1 274 1 84 3 369 2 48 1 187 6 257 1 301 1 190 3 191 1 245 1 217 3 122 1 305 1 21 3 306 14 
250 3 287 9 104 1 316 1 271 3 206 3 231 2 208 4 360 10 295 1 73 1 138 1 160 3 274 1 324 1 299 1 84 3 369 1 48 1 257 1 187 6 301 1 190 2 351 3 191 1 91 1 245 1 217 2 38 1 305 1 21 3 248 1 306 19 
250 3 287 10 104 1 316 1 271 3 206 3 231 1 208 4 360 7 295 1 73 1 138 2 160 2 324 1 274 1 299 1 84 3 369 1 48 1 257 1 187 6 301 1 190 2 351 2 191 1 91 1 245 1 217 2 38 1 305 1 21 3 248 1 306 17 
250 2 287 7 316 1 271 2 206 2 231 1 208 1 360 4 73 1 138 1 160 1 324 1 274 1 84 2 369 1 48 1 187 4 301 1 190 2 191 1 245 1 217 2 305 1 21 2 306 11 
250 1 287 6 316 1 271 1 206 2 231 2 208 1 360 6 73 1 138 1 160 2 274 1 84 1 369 1 48 1 187 2 301 1 190 2 191 1 245 1 217 2 305 1 21 1 306 12 
250 4 287 10 104 1 316 1 271 4 206 3 231 1 208 5 360 8 295 1 73 1 138 2 160 2 274 1 324 2 299 1 84 4 369 1 48 1 257 1 187 8 301 1 190 2 191 1 351 3 91 1 245 1 217 2 38 1 305 1 21 4 248 1 306 18 
250 3 100 1 287 7 316 1 271 3 206 2 208 2 231 1 360 4 73 1 138 2 160 1 324 1 274 1 84 3 369 1 48 1 187 6 301 1 190 2 191 1 245 1 217 2 305 1 21 3 306 11 
160 1 299 1 287 3 104 2 351 3 206 1 208 6 360 4 295 1 38 3 248 3 306 7 138 3 
250 4 100 1 287 10 104 1 316 1 271 4 206 3 231 1 208 4 360 8 295 1 73 1 138 1 160 2 274 1 324 2 299 1 84 4 369 1 48 1 187 8 301 1 190 2 191 1 351 3 91 1 245 1 217 2 38 1 305 1 21 4 248 1 306 18 
219 1 
204 1 18 1 374 1 144 1 128 1 219 1 
325 1 67 1 211 1 290 1 188 2 268 1 145 2 269 2 330 2 247 1 354 1 123 1 110 2 62 1 224 1 65 2 
67 1 211 1 25 1 188 2 268 1 145 1 269 1 330 2 354 1 363 1 110 2 123 1 65 2 224 1 
207 1 330 1 211 1 110 1 188 1 36 1 62 1 342 1 263 1 65 1 
211 1 186 1 188 2 145 1 269 1 246 1 330 1 247 1 110 2 10 1 65 2 
67 1 126 1 290 1 268 1 269 3 110 2 325 1 211 2 188 3 145 4 170 1 246 1 330 3 247 1 354 1 123 1 62 1 65 3 224 1 
67 1 126 1 290 1 314 1 268 1 269 3 110 2 325 1 211 2 188 3 145 4 246 1 330 3 247 1 354 1 123 1 62 1 65 3 224 1 
325 1 290 1 103 1 110 1 188 1 62 1 145 1 269 1 65 1 
114 1 256 1 164 1 211 1 267 2 177 2 229 1 188 1 145 1 269 1 329 1 330 1 108 1 123 1 110 1 62 1 46 1 65 1 
114 1 256 1 164 2 175 1 211 1 50 1 267 2 177 2 229 2 188 1 145 3 269 2 329 1 361 1 330 1 108 1 363 1 123 2 110 1 223 1 296 1 46 1 65 1 
161 1 256 1 164 2 175 1 211 1 50 1 267 2 177 2 214 1 229 2 188 2 145 3 269 2 329 1 361 1 330 1 108 1 363 1 123 2 110 2 223 1 296 1 46 1 65 2 
93 1 367 1 266 1 184 1 363 1 110 1 335 1 188 1 118 1 145 1 65 1 
93 1 367 1 266 1 326 1 184 1 363 1 110 1 188 1 118 1 145 1 65 1 
23 1 330 1 211 1 110 1 188 1 65 1 
23 1 67 1 211 2 126 1 186 1 289 1 188 7 200 1 268 1 145 3 269 2 203 1 170 1 246 1 330 3 247 1 110 6 123 1 62 2 158 1 65 7 
250 2 340 1 287 3 104 1 206 1 155 1 208 2 108 1 295 1 110 1 46 1 114 1 160 1 163 1 256 1 164 1 299 1 211 1 351 2 55 1 352 2 123 1 218 1 21 2 306 6 64 1 65 1 267 2 177 2 68 1 229 1 269 1 271 2 360 3 77 1 142 1 84 2 187 4 188 1 145 1 91 1 278 2 329 2 330 1 247 1 38 1 248 1 
367 1 266 1 326 1 184 1 341 1 118 1 188 1 145 1 277 1 93 1 243 1 194 1 294 1 332 1 110 1 337 1 62 1 376 1 365 1 65 1 
266 1 23 1 211 1 289 1 188 1 145 1 269 1 330 2 110 1 123 1 65 1 159 1 
161 1 256 1 164 1 211 1 267 2 177 2 229 1 188 1 145 1 269 1 329 1 330 1 108 1 123 1 110 1 62 1 46 1 65 1 
67 1 211 1 289 1 188 1 200 1 268 1 145 1 269 1 330 2 363 1 110 1 123 1 65 1 
298 1 329 1 116 1 41 1 78 1 
298 2 339 1 116 1 127 1 50 1 28 1 327 1 118 2 371 1 93 2 194 1 329 1 372 1 346 1 41 2 223 1 249 1 296 1 78 2 
1 1 164 1 116 1 267 1 177 1 5 1 343 1 41 1 78 1 
127 1 116 1 346 1 
321 1 309 1 205 1 33 1 148 1 59 1 215 1 53 1 
309 1 33 3 51 1 105 2 17 1 215 1 192 1 321 2 181 1 205 4 304 1 148 2 59 4 308 1 
321 1 124 1 309 1 205 2 33 1 368 1 148 1 59 2 189 1 105 1 215 1 53 1 
321 1 309 1 181 2 94 1 205 3 33 1 148 1 59 3 51 1 215 1 53 1 308 2 
254 1 33 2 30 2 230 1 
309 1 205 1 375 1 59 1 215 1 53 1 
321 1 309 1 205 2 33 1 148 1 59 2 153 1 105 1 215 1 53 1 
0 1 
321 1 309 1 205 1 33 1 148 1 59 1 215 1 53 1 
321 1 33 1 148 1 103 1 
321 1 309 1 205 1 33 1 148 1 59 1 215 1 
71 1 205 1 225 1 
321 1 309 1 181 2 205 3 33 1 165 1 148 1 59 3 51 1 215 1 53 1 308 1 
321 1 309 1 205 2 33 1 174 1 148 1 59 2 105 1 215 1 
309 1 205 1 33 1 349 1 59 1 17 1 179 1 215 1 342 1 263 1 53 1 
309 1 205 1 33 1 148 1 59 1 215 1 53 1 
321 1 309 1 205 1 148 2 59 1 215 1 53 1 
309 2 33 1 215 2 53 1 320 1 205 2 148 1 59 2 234 1 355 1 
309 1 33 2 153 1 105 2 17 1 215 1 53 1 192 1 321 1 205 3 148 1 59 3 334 1 
309 1 99 1 33 1 349 1 131 1 105 1 215 1 342 1 53 1 321 1 205 2 207 1 148 1 59 2 263 2 
309 2 33 2 174 1 105 2 17 1 215 2 53 1 192 1 321 1 205 4 121 1 148 1 59 4 
321 1 309 1 181 1 205 3 33 1 148 1 59 3 153 1 105 1 215 1 53 1 
304 1 33 1 17 1 192 1 
33 1 148 1 

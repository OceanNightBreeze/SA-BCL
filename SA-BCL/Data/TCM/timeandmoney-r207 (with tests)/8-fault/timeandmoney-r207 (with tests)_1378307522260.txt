#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (69,90) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 142 141 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 31 7 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 159 170 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 309 159 170 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 309 159 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 159 170 192 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 159 170 192 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (32,363) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (69,90) 328 240 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 235 21 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 142 141 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (69,90) 328 314 (145,347) (145,347) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
155 1 156 2 36 1 251 1 177 1 178 2 200 2 92 6 11 2 181 1 167 2 182 2 233 1 365 3 298 9 302 1 143 2 349 1 325 9 121 1 25 1 376 1 55 1 73 1 76 4 78 1 81 1 336 5 
155 1 156 2 36 1 251 1 177 1 178 2 200 2 92 6 11 2 181 1 167 2 182 2 233 1 365 3 298 9 302 1 143 2 349 1 325 9 121 1 25 1 376 1 55 1 73 1 76 4 78 1 81 1 336 5 
155 1 156 2 36 1 251 1 177 1 178 2 200 2 92 7 11 2 181 1 167 2 182 2 233 1 365 4 298 10 302 1 143 2 349 1 325 10 121 1 25 1 376 1 55 1 73 1 76 5 78 1 81 1 336 6 
155 1 156 2 36 1 251 1 177 1 178 1 200 2 92 4 11 2 181 1 167 2 182 2 233 1 365 2 298 7 302 1 143 2 349 1 325 7 121 1 25 1 376 1 73 1 76 3 78 1 81 1 336 4 
365 1 298 4 302 1 143 1 156 1 325 4 36 1 177 1 178 2 200 1 55 1 92 3 11 1 182 1 76 2 233 1 78 1 336 3 
298 2 58 1 156 1 155 1 325 2 36 1 177 1 340 1 200 1 93 1 11 1 182 1 167 1 233 1 336 1 81 1 
365 1 298 3 349 1 156 2 325 3 36 1 177 1 92 1 11 2 167 1 76 1 233 1 336 2 
83 1 269 1 156 2 36 1 177 1 178 2 200 1 92 7 11 2 167 1 182 1 233 1 365 3 298 9 302 1 143 1 349 1 325 9 121 1 55 1 73 1 76 4 78 1 336 5 
83 1 269 1 156 2 36 1 177 1 178 2 200 1 92 7 11 2 167 1 182 1 233 1 365 3 298 9 302 1 143 1 349 1 325 9 121 1 55 1 73 1 76 4 78 1 336 5 
374 1 176 1 297 1 
374 1 88 1 13 2 
184 2 165 2 210 2 147 2 37 1 327 2 296 1 161 2 
264 1 153 1 358 1 128 1 270 1 130 1 37 1 227 1 108 1 41 1 161 2 277 2 292 1 44 1 165 2 294 1 296 1 322 1 184 2 366 2 210 2 147 2 305 1 50 1 239 2 54 2 327 2 216 2 241 1 331 1 243 1 351 1 126 1 
184 1 331 1 165 1 210 1 147 1 4 1 327 1 296 1 364 1 161 1 
60 1 255 1 209 1 147 1 158 1 272 1 132 1 327 1 161 1 374 1 341 1 112 1 331 1 297 1 
184 1 60 1 255 2 210 1 147 1 158 1 272 1 132 1 327 1 161 1 374 1 341 2 331 1 165 1 297 1 
248 1 341 1 255 1 284 1 57 1 
248 1 184 1 99 1 255 1 210 1 147 1 256 1 4 1 327 1 161 1 260 1 374 1 341 1 331 1 165 1 57 1 296 1 364 1 297 1 
248 1 341 1 255 1 
184 1 99 1 255 1 210 1 147 1 4 1 327 1 161 1 341 1 331 1 165 1 57 1 296 1 364 1 
374 1 
248 1 184 1 99 1 324 1 255 1 210 1 147 1 4 1 327 1 161 1 260 1 374 1 341 1 331 1 165 1 57 1 296 1 364 1 297 1 
248 2 249 2 268 2 0 1 271 1 197 2 4 1 161 1 318 2 341 4 344 1 115 1 165 1 113 1 231 1 16 2 65 1 296 1 364 1 297 2 49 1 184 1 99 1 255 4 304 5 210 1 147 1 369 1 327 1 260 1 374 2 72 2 331 1 313 1 75 1 79 4 57 2 263 1 
176 1 37 1 
184 1 210 1 147 2 37 1 327 2 258 1 161 2 331 1 292 1 165 1 245 1 
90 1 363 1 328 1 
264 1 305 1 50 1 37 1 308 1 54 1 216 1 277 1 331 1 292 1 
184 1 264 1 210 1 147 1 305 1 50 1 133 1 54 1 327 1 216 1 161 1 277 1 90 1 56 1 
184 4 210 4 147 5 37 1 289 1 133 1 327 5 161 5 112 1 165 1 201 1 56 2 245 1 352 1 
184 2 331 1 210 2 146 1 147 2 327 2 364 1 161 2 
184 3 165 1 56 1 210 3 147 3 37 1 327 3 161 3 
184 1 331 1 210 1 147 1 327 1 364 1 161 1 
184 1 210 1 147 1 327 1 161 1 258 1 331 1 165 1 245 1 
264 1 153 1 60 1 358 1 128 1 158 1 37 1 272 1 227 1 133 1 132 1 41 1 161 3 277 1 341 1 44 1 345 1 165 2 294 1 296 1 184 3 366 2 255 1 210 3 147 3 50 1 305 1 239 1 54 1 215 1 327 3 216 1 241 1 331 1 243 1 126 1 56 1 245 1 
184 1 112 1 201 1 210 1 56 1 147 2 37 1 327 2 161 2 
184 3 255 1 60 1 210 3 147 3 158 1 272 1 133 1 132 1 327 3 161 3 374 1 341 1 190 1 331 1 345 1 165 1 56 2 245 1 
184 2 210 2 147 2 327 2 161 2 90 1 165 1 56 1 245 1 363 1 
264 1 305 1 50 1 37 1 54 1 216 1 277 1 331 1 292 1 
20 1 225 1 37 1 305 1 257 1 54 1 327 1 216 1 161 1 85 1 277 1 103 1 136 1 311 1 67 1 
32 1 222 1 268 1 128 1 358 2 130 2 227 1 109 1 41 1 90 2 44 1 16 1 363 2 299 1 366 2 69 1 239 4 328 2 149 1 310 1 102 1 241 1 242 1 243 1 
184 1 331 1 210 1 147 1 146 1 132 1 327 1 161 1 
329 1 191 1 
329 1 191 1 
280 1 252 1 
280 1 252 1 
280 1 252 1 
329 1 191 1 186 1 
329 1 191 1 237 1 
329 2 191 2 119 1 105 1 280 1 252 1 
329 1 191 1 186 1 
329 1 191 1 186 1 
329 1 333 1 191 1 
329 1 333 1 191 1 
329 1 333 1 191 1 
265 1 356 1 37 1 40 1 161 2 360 1 341 1 12 1 203 1 348 1 184 2 255 1 210 2 147 2 237 1 306 1 172 1 213 1 122 1 327 2 329 1 191 1 220 1 29 1 
348 1 354 1 265 2 255 2 119 1 35 1 326 1 274 1 275 1 360 2 101 2 134 1 374 1 341 2 329 2 191 2 12 2 29 2 203 3 
200 1 143 1 182 1 
340 1 200 1 182 1 
162 1 340 1 143 2 59 1 182 3 107 1 
199 1 162 1 340 1 59 1 182 1 371 1 
162 2 340 1 143 1 59 1 182 2 
248 1 287 1 249 1 268 1 316 1 40 1 318 1 341 4 344 1 95 1 13 1 16 1 297 1 299 1 98 1 97 1 255 4 304 1 212 1 172 1 283 1 171 2 148 1 260 1 374 1 102 1 72 1 27 1 220 1 79 3 57 4 
248 6 287 1 249 2 268 3 106 1 318 2 88 3 341 8 179 5 163 1 344 1 16 3 13 9 297 1 299 3 300 1 98 6 255 8 304 6 100 1 23 1 212 2 283 6 370 1 148 2 260 1 374 5 102 3 72 2 27 3 220 4 284 5 79 8 57 7 263 1 
249 1 268 1 318 1 88 2 341 3 95 1 16 1 13 4 297 1 299 1 97 1 98 2 255 3 304 2 212 1 171 1 283 2 148 1 374 3 102 1 72 1 27 1 220 1 79 3 57 2 263 1 
249 1 268 2 318 1 88 3 341 4 163 1 95 1 16 2 13 7 297 1 299 2 98 4 97 1 255 4 304 4 23 1 212 1 283 4 171 2 370 1 148 1 374 4 102 2 72 1 27 2 220 2 79 5 57 3 263 1 
185 1 176 1 67 1 
235 1 67 1 
359 1 
225 1 67 1 85 1 
229 1 67 1 
225 1 67 1 
185 2 225 1 3 1 30 1 67 3 85 1 
49 1 222 2 268 1 145 1 358 3 369 1 130 4 239 7 307 1 42 1 149 3 113 1 347 1 16 1 320 1 314 2 278 1 
49 1 222 2 268 1 145 1 358 3 369 1 130 4 239 7 307 1 42 1 149 3 113 1 347 1 16 1 320 1 314 2 278 1 
49 1 222 2 268 1 145 1 339 1 358 3 369 1 130 4 239 7 307 1 42 1 149 3 113 1 347 1 16 1 320 1 314 2 278 1 
222 5 268 4 358 15 128 1 129 1 130 16 227 1 63 1 41 1 42 2 110 1 113 1 139 1 347 1 16 4 320 5 278 2 49 2 299 3 366 2 145 1 120 1 369 2 307 1 52 4 239 31 149 10 102 3 27 3 350 1 243 1 335 1 194 3 314 3 
49 1 222 3 366 4 33 1 268 1 145 1 358 4 128 2 369 1 130 5 227 2 239 9 42 1 41 2 149 4 113 1 243 2 139 1 347 1 140 1 16 1 320 1 314 2 278 1 
338 1 355 1 156 1 36 1 177 1 107 1 277 1 5 1 340 1 200 1 135 1 92 1 136 1 11 1 167 1 182 2 233 1 19 1 169 1 323 1 298 2 143 1 325 2 257 1 54 1 216 1 189 1 26 1 336 1 193 1 
338 1 156 1 315 1 36 1 107 1 277 1 5 1 340 1 200 1 135 1 92 2 136 1 11 1 167 1 182 2 233 1 19 1 169 1 323 1 298 3 143 1 325 3 257 1 54 1 216 1 189 1 26 1 330 1 261 1 336 1 
36 1 107 1 277 1 5 1 340 1 135 1 200 1 92 2 136 1 167 1 182 2 233 1 169 1 323 1 298 2 143 1 325 2 257 1 54 1 216 1 189 1 26 1 330 1 261 1 336 1 
286 1 266 1 225 2 156 1 315 1 226 1 64 1 85 1 277 1 342 1 136 2 10 1 11 1 167 2 14 1 117 1 169 2 67 2 323 2 298 1 236 1 325 1 51 1 305 1 257 1 54 1 216 1 124 1 189 2 377 1 
338 1 355 1 156 1 177 1 107 1 277 1 5 1 340 1 200 1 135 1 136 1 11 1 167 1 182 2 19 1 169 1 323 1 298 1 143 1 325 1 257 1 54 1 216 1 189 1 26 1 330 1 
375 1 
248 2 142 1 249 1 255 1 304 1 212 1 305 1 54 1 216 1 260 1 277 1 318 1 341 1 72 1 91 1 344 1 79 1 141 1 
175 1 118 1 248 2 324 1 255 1 131 1 86 1 260 1 341 1 205 1 31 1 
118 1 175 1 341 1 196 1 255 1 202 1 131 1 205 1 86 1 
175 1 118 1 248 2 324 1 196 1 255 1 131 1 86 1 260 1 341 1 7 1 202 1 205 1 31 1 
248 1 260 1 341 1 324 1 255 1 
248 2 175 1 196 1 249 1 267 2 131 1 1 2 86 1 87 1 318 1 7 1 341 1 88 1 344 1 202 1 293 1 13 1 205 1 118 1 255 1 304 1 53 1 309 1 260 1 72 1 79 1 262 2 31 1 
248 2 175 1 196 1 249 1 267 2 131 1 1 2 159 1 86 1 87 1 318 1 7 1 88 1 341 1 344 1 202 1 205 1 118 1 170 1 255 1 304 1 53 1 309 1 260 1 72 1 150 1 262 2 79 1 31 1 
248 2 175 1 249 1 267 1 131 1 1 1 159 1 86 1 87 1 318 1 7 1 88 1 341 1 344 1 205 1 118 1 170 1 255 1 304 1 53 1 309 1 260 1 72 1 150 1 262 1 79 1 31 1 
248 2 175 1 249 1 267 1 131 1 1 1 159 1 86 1 318 1 7 1 341 1 344 1 164 1 13 1 45 1 204 1 205 1 234 1 118 1 255 1 304 1 309 1 260 1 72 1 77 1 79 1 31 1 
248 3 175 1 196 2 249 1 267 2 1 2 131 1 159 1 86 1 87 1 318 1 88 1 7 2 341 1 344 1 202 2 205 1 118 1 170 1 255 1 304 1 309 1 53 1 260 1 72 1 150 1 192 1 262 2 79 1 31 2 
248 3 175 1 196 2 249 1 267 2 1 2 131 1 159 1 86 1 87 1 318 1 88 1 7 2 341 1 344 1 202 2 205 1 118 1 170 1 255 1 304 1 309 1 53 1 260 1 72 1 150 1 192 1 262 2 79 1 31 2 
248 2 175 1 196 1 249 1 267 2 131 1 1 2 86 1 318 1 7 1 341 1 344 1 202 1 293 1 45 1 13 1 205 1 234 2 118 1 255 1 304 1 309 1 260 1 72 1 77 1 79 1 31 1 
222 2 268 1 128 1 358 3 176 1 130 3 37 2 227 1 41 1 90 1 44 1 113 1 347 1 16 1 363 1 49 1 366 2 145 1 369 1 239 6 328 1 149 2 241 1 242 1 243 1 314 1 
222 1 268 2 358 6 128 2 37 1 130 8 227 2 108 1 160 1 41 2 90 11 44 1 180 1 16 1 320 1 295 1 363 4 299 2 366 4 120 1 52 3 239 14 328 11 149 2 373 1 241 2 102 1 27 2 243 2 126 1 104 1 335 1 194 3 
223 1 264 1 128 1 358 1 61 1 37 1 130 1 227 1 133 1 108 1 41 1 161 1 277 1 44 1 295 1 363 1 47 1 184 1 366 2 210 1 147 1 50 1 305 1 308 1 239 2 54 1 216 1 327 1 241 1 243 1 56 1 126 1 
222 1 264 1 268 1 153 1 128 2 358 4 130 3 227 2 133 1 41 2 161 1 277 1 90 3 44 2 9 1 16 1 295 1 363 3 299 1 184 1 366 4 210 1 147 1 50 1 305 1 239 7 54 1 327 1 216 1 328 3 240 1 149 1 102 1 241 2 27 1 74 1 243 2 56 1 126 1 285 1 152 1 
225 2 128 1 358 1 130 1 226 1 227 1 108 1 64 1 291 1 85 1 41 1 277 2 136 2 230 1 44 1 10 1 117 1 67 2 366 2 51 1 305 1 257 1 239 2 54 2 216 2 124 1 241 1 243 1 351 1 126 1 
222 1 268 1 128 1 358 2 130 1 227 1 41 1 161 1 90 1 44 1 165 1 16 1 295 1 363 1 184 1 299 1 366 2 210 1 147 1 239 3 327 1 328 1 188 1 149 1 241 1 102 1 27 1 243 1 245 1 
299 1 366 2 268 1 128 1 130 2 227 1 239 2 328 1 41 1 149 1 310 1 241 1 90 1 242 1 44 1 243 1 320 1 363 1 
222 1 366 2 128 1 358 2 227 1 239 2 109 1 328 1 41 1 149 1 241 1 102 1 90 1 242 1 44 1 243 1 16 1 363 1 
299 1 222 1 366 2 268 1 358 2 128 1 130 2 227 1 239 4 328 2 41 1 149 2 102 1 241 1 90 2 27 1 242 1 44 1 243 1 16 1 320 1 363 2 
299 1 366 2 268 1 128 1 130 2 227 1 239 2 328 1 41 1 149 1 310 1 241 1 90 1 230 1 44 1 243 1 320 1 363 1 
222 1 366 2 128 1 358 2 227 1 239 2 109 1 328 1 41 1 149 1 241 1 102 1 90 1 230 1 44 1 243 1 16 1 363 1 
299 1 222 1 366 2 268 1 358 2 128 1 130 2 227 1 239 4 328 2 41 1 149 2 102 1 241 1 90 2 27 1 230 1 44 1 243 1 16 1 320 1 363 2 
299 1 222 1 366 2 268 1 358 2 128 1 130 2 227 1 239 4 328 2 41 1 149 2 102 1 241 1 90 2 27 1 44 1 243 1 16 1 320 1 363 2 
264 1 153 1 128 1 358 1 130 1 37 1 227 1 108 1 41 1 277 1 44 1 292 1 366 2 50 1 305 1 239 2 54 1 216 1 241 1 331 1 243 1 126 1 
225 1 128 1 358 1 130 1 37 1 227 1 108 1 85 1 161 1 41 1 277 1 136 1 44 1 67 1 366 2 20 1 305 1 257 1 239 2 54 1 216 1 327 1 241 1 103 1 219 1 311 1 243 1 126 1 
299 1 222 1 366 2 268 1 358 2 128 1 130 2 227 1 239 4 328 2 41 1 149 2 102 1 241 1 90 2 27 1 44 1 243 1 16 1 320 1 295 1 363 2 
222 1 264 1 153 1 268 1 128 1 358 2 130 1 227 1 41 1 277 1 90 1 44 1 16 1 363 1 299 1 366 2 50 1 239 3 54 1 216 1 328 1 149 1 241 1 102 1 27 1 74 1 243 1 193 1 
268 1 358 1 128 1 130 2 227 1 41 1 161 1 90 1 44 1 165 1 16 1 320 1 295 1 66 1 363 1 184 1 299 1 366 2 210 1 147 1 239 3 327 1 328 1 149 1 102 1 241 1 27 1 243 1 245 1 
127 1 222 4 33 1 268 5 128 3 358 21 290 2 130 20 227 3 39 1 41 3 6 1 113 1 114 1 139 1 347 1 232 1 168 1 16 5 320 4 183 1 49 1 299 4 366 6 145 1 211 1 120 3 369 1 52 4 239 41 70 1 71 1 149 8 218 1 102 4 27 4 173 4 243 3 334 1 335 1 314 1 194 3 195 1 
127 1 222 4 33 1 268 5 128 4 358 18 290 2 130 20 227 4 39 1 41 4 6 1 113 1 114 1 139 2 347 1 232 1 168 1 16 4 320 3 183 1 49 1 299 4 366 8 145 1 211 1 120 3 369 1 52 4 239 38 70 1 71 1 149 7 218 1 102 3 27 4 173 4 243 4 334 1 335 1 314 1 194 3 195 1 
127 1 222 7 33 1 268 8 128 2 358 25 290 1 130 27 227 2 39 1 41 2 113 1 114 1 139 1 180 2 347 1 232 1 168 1 16 8 320 7 49 1 299 7 366 4 145 1 211 1 120 2 369 1 52 4 239 52 70 1 71 1 149 14 218 1 102 7 27 7 173 4 243 2 334 1 335 2 314 1 194 4 195 1 
222 3 33 1 268 3 128 2 358 10 290 1 130 9 227 2 39 1 41 2 138 1 114 1 16 3 320 3 183 1 299 3 366 4 211 1 120 1 52 2 239 19 149 6 218 1 102 3 27 3 173 2 243 2 335 1 194 1 195 2 
127 1 222 2 33 1 268 3 358 12 128 3 290 2 130 14 227 3 39 2 41 3 114 1 139 2 232 1 168 1 16 2 320 2 299 3 366 6 211 1 120 2 239 26 52 2 70 1 149 4 71 1 218 1 102 2 27 3 173 4 243 3 334 1 194 2 195 1 
360 1 134 1 329 1 265 1 191 1 303 1 119 1 12 1 35 1 29 1 
237 1 213 1 
360 1 28 1 329 1 265 1 191 1 125 1 12 1 29 1 48 1 
186 1 228 1 
333 1 105 1 62 1 
348 1 265 1 255 1 119 1 35 1 326 1 274 1 275 1 360 1 101 1 134 1 374 1 341 1 329 1 191 1 12 1 29 1 203 2 
348 1 265 1 255 1 119 1 35 1 326 1 274 1 275 1 360 1 101 1 134 1 374 1 341 1 329 1 191 1 12 1 29 1 203 2 
348 1 265 1 255 1 119 1 35 1 326 1 274 1 275 1 360 1 101 1 134 1 374 1 341 1 329 1 191 1 12 1 29 1 203 2 
105 1 186 1 228 1 
105 1 186 1 228 1 
333 1 62 1 
333 1 105 1 62 1 
356 1 122 1 
265 1 356 1 37 1 274 1 40 1 161 2 360 1 341 1 12 1 203 1 184 2 255 1 368 1 210 2 147 2 237 1 306 1 172 1 213 1 122 1 327 2 101 1 329 1 191 1 220 1 29 1 57 1 
225 1 128 1 358 1 130 1 227 1 108 1 291 1 161 2 41 1 277 2 136 1 44 1 295 1 67 1 206 1 301 1 366 2 367 1 147 2 257 1 239 2 54 2 216 2 327 2 241 1 312 1 243 1 351 2 244 1 126 1 246 1 
143 1 157 1 257 1 107 1 54 2 216 2 277 2 5 1 340 1 361 1 200 1 135 1 136 1 330 1 332 1 182 2 19 1 169 1 193 1 
143 1 157 1 257 1 107 1 54 1 216 1 277 1 5 1 340 1 200 1 135 1 330 1 136 1 221 1 182 2 19 1 169 1 
34 1 225 2 226 1 64 1 85 1 277 1 342 1 136 2 10 1 14 1 117 1 169 1 67 2 305 1 51 1 257 1 54 1 216 1 124 1 332 1 
143 1 157 1 257 1 107 1 54 1 216 1 277 1 5 1 340 1 361 1 200 1 135 1 136 1 330 1 332 1 182 2 19 1 169 1 
276 1 
374 1 304 1 231 1 271 1 176 1 79 1 297 1 
248 1 249 1 304 1 53 1 260 1 374 1 87 1 318 1 72 1 88 1 344 1 13 1 79 1 262 1 297 1 
235 1 249 1 225 1 21 1 22 1 305 1 257 1 3 1 54 1 216 1 85 1 277 1 318 1 72 1 136 1 344 1 67 1 
248 1 249 2 197 2 4 1 161 1 344 2 115 1 165 1 16 2 13 6 296 1 297 2 299 2 304 5 120 1 210 1 212 1 70 1 71 1 260 1 72 2 27 2 79 8 127 1 268 2 38 1 318 2 88 3 91 1 232 1 364 1 184 1 98 5 99 1 281 1 147 1 283 5 52 1 327 1 374 5 102 2 331 1 334 1 194 1 
249 1 268 2 197 2 4 1 161 1 318 1 341 1 344 1 115 1 113 1 165 1 16 1 65 1 296 1 364 1 49 1 184 1 99 1 255 1 304 2 210 1 369 1 147 1 327 1 72 1 150 1 331 1 79 2 
249 1 304 1 271 1 318 1 374 1 72 1 344 1 231 1 79 1 297 1 
299 2 98 5 268 2 304 5 197 2 283 5 240 1 374 5 88 5 102 2 27 2 115 1 13 10 16 2 79 5 
248 1 184 1 99 1 210 1 147 1 4 1 327 1 161 1 260 1 374 1 331 1 165 1 296 1 364 1 297 1 
248 2 353 1 142 1 249 1 304 1 212 1 305 1 54 1 216 1 260 1 277 1 318 1 72 1 91 1 344 1 79 1 141 1 
264 1 153 1 128 1 358 1 37 1 227 1 161 2 41 1 277 1 44 1 165 2 294 1 296 1 184 2 366 2 210 2 147 2 305 1 50 1 239 1 54 1 216 1 327 2 241 1 243 1 126 1 
98 2 249 1 304 2 212 1 283 2 318 1 374 4 88 2 72 1 91 1 344 1 13 4 79 1 314 1 297 2 
208 1 265 1 29 1 
134 1 343 1 356 1 265 1 29 1 
208 1 265 1 29 1 
208 1 265 1 29 1 
265 1 29 1 17 1 
265 1 29 1 17 1 
265 1 29 1 17 1 
265 1 29 1 
329 1 191 1 
222 2 33 1 268 1 358 4 128 1 130 4 227 1 41 1 113 1 347 1 16 1 49 1 366 2 145 1 120 1 369 1 239 8 52 1 71 1 149 2 243 1 314 1 194 1 
222 2 33 1 268 2 358 5 128 2 130 6 227 2 41 2 113 1 347 1 16 1 320 1 49 1 299 1 366 4 144 1 145 1 120 1 369 1 239 11 52 2 71 1 149 3 27 1 243 2 335 1 314 1 194 1 
127 1 222 3 33 1 268 3 358 10 128 3 130 9 227 3 41 3 113 1 139 1 347 1 232 1 16 3 320 1 49 1 299 2 366 6 144 1 145 1 120 1 369 1 239 19 52 1 70 1 71 1 149 4 102 2 27 2 243 3 334 1 314 1 194 1 
127 1 222 3 33 1 268 3 358 7 128 3 130 10 227 3 41 3 113 1 139 1 347 1 232 1 16 2 320 2 49 1 299 2 366 6 144 1 145 1 120 1 369 1 239 17 52 1 70 1 71 1 149 5 102 1 27 2 243 3 334 1 314 1 194 1 
222 2 33 1 268 1 358 4 128 1 130 4 227 1 41 1 113 1 347 1 16 1 49 1 366 2 145 1 120 1 369 1 239 8 52 1 71 1 149 2 243 1 314 1 194 1 
127 1 222 1 33 1 268 2 358 6 128 1 130 6 227 1 41 1 232 1 16 2 320 1 299 2 366 2 120 1 239 12 52 1 70 1 71 1 149 2 102 2 27 2 243 1 334 1 194 1 
127 1 222 3 33 1 268 3 358 8 128 4 130 10 227 4 41 4 113 1 139 2 347 1 232 1 16 2 320 2 49 1 299 2 366 8 144 1 145 1 120 1 369 1 239 18 52 1 70 1 71 1 149 5 102 1 27 2 243 4 334 1 314 1 194 1 
127 1 222 3 33 1 268 3 358 7 128 4 130 9 227 4 41 4 139 2 232 1 16 2 320 3 183 1 299 3 366 8 120 1 239 16 52 1 70 1 71 1 149 6 102 2 27 3 243 4 334 1 194 1 
49 3 222 3 268 1 145 2 358 4 369 3 130 3 239 7 149 6 113 1 347 1 16 1 320 3 
127 1 222 3 33 1 268 3 358 8 128 4 130 10 227 4 41 4 113 1 139 2 347 1 232 1 16 2 320 1 183 1 49 1 299 2 366 8 145 1 120 1 369 1 239 18 52 1 70 1 71 1 149 4 102 1 27 2 243 4 334 1 314 1 194 1 
49 1 222 2 366 4 268 1 145 1 358 4 128 2 369 1 130 4 227 2 239 8 41 2 149 3 113 1 243 2 139 1 347 1 16 1 320 1 314 1 
149 2 49 1 222 2 268 1 113 1 145 1 358 3 369 1 347 1 176 1 16 1 130 3 239 6 314 1 
299 1 222 1 366 2 144 1 268 1 358 2 128 1 130 2 227 1 239 4 41 1 149 2 102 1 27 1 243 1 16 1 320 1 
299 1 222 1 268 1 120 1 358 4 130 3 52 2 239 7 149 2 102 1 27 1 16 1 320 1 335 1 194 1 
222 5 268 3 358 12 128 2 130 11 227 2 41 2 113 1 8 1 180 1 139 2 347 1 16 3 320 4 49 2 299 2 366 4 145 1 369 2 239 23 52 2 149 9 373 1 102 2 27 2 243 2 335 1 314 1 194 2 
358 1 239 1 52 1 
130 1 239 1 194 1 
299 1 366 2 222 2 144 1 268 1 128 1 358 3 130 3 227 1 239 6 41 1 240 1 149 3 102 1 27 1 243 1 16 1 320 1 
127 1 222 1 33 1 268 2 358 6 128 1 130 6 227 1 41 1 232 1 16 2 320 1 299 2 366 2 120 1 239 12 52 1 70 1 71 1 149 2 102 2 27 2 243 1 334 1 194 1 
49 1 222 1 268 1 358 3 369 1 130 3 239 6 149 2 113 1 16 1 320 1 
49 1 222 1 366 2 145 1 358 2 128 1 369 1 130 1 227 1 239 3 41 1 149 2 8 1 243 1 139 1 347 1 320 1 
49 2 366 2 222 3 33 1 268 2 128 1 358 5 369 2 130 5 227 1 239 10 41 1 149 5 243 1 113 1 16 2 65 1 320 2 
299 1 366 2 33 1 268 1 128 1 130 2 227 1 239 2 41 1 149 1 243 1 320 1 
299 1 222 1 366 2 33 1 268 1 358 2 128 1 130 2 227 1 239 4 41 1 149 2 102 1 27 1 243 1 16 1 320 1 
49 1 366 6 222 1 33 1 358 2 128 3 369 1 130 1 227 3 239 3 41 3 149 2 8 1 243 3 139 1 320 1 183 1 
222 7 33 1 268 5 358 18 128 5 129 1 130 16 63 1 227 5 110 1 41 5 113 2 8 1 139 2 347 1 16 5 320 5 183 1 49 3 299 3 366 10 144 1 145 1 120 1 369 3 52 4 239 34 149 12 102 3 27 3 243 5 335 1 314 1 194 3 
111 1 112 1 201 1 147 1 37 1 327 1 161 1 
337 1 147 1 37 1 214 1 327 1 161 1 111 1 112 1 201 1 96 1 80 1 18 1 
277 1 124 1 225 1 176 1 226 1 305 1 54 1 67 1 216 1 
184 1 264 1 210 1 147 1 37 1 305 1 54 1 327 1 216 1 161 1 277 1 331 1 292 1 56 1 
184 1 264 1 210 1 147 1 37 1 54 1 327 1 216 1 161 1 277 1 331 1 292 1 56 1 321 1 
225 2 250 1 158 1 37 1 132 1 161 2 85 2 277 2 229 1 136 1 346 1 321 1 67 3 184 1 210 2 147 2 257 1 54 2 216 2 327 2 103 1 311 1 331 1 56 1 
235 1 248 1 255 2 185 1 225 1 250 1 305 1 272 1 257 1 54 3 216 3 85 1 229 1 277 3 374 1 341 2 136 1 346 1 46 1 68 1 321 1 67 4 297 1 
235 1 248 1 255 2 185 1 225 1 357 1 250 1 305 1 272 1 257 1 54 3 216 3 85 1 229 1 277 3 374 1 341 2 136 1 346 1 321 1 67 4 297 1 
277 1 136 1 84 1 257 1 54 1 216 1 
224 1 225 2 367 1 84 1 238 1 51 1 305 2 257 2 3 1 54 7 64 1 216 7 85 1 277 6 123 1 330 1 136 3 351 1 319 1 193 1 67 3 
222 1 264 1 268 1 153 1 358 2 128 2 37 2 130 3 227 2 41 2 161 1 277 1 90 1 44 2 113 1 347 1 16 1 295 1 49 1 184 1 366 4 145 1 210 1 369 1 147 1 50 1 239 5 54 1 327 1 216 1 328 1 149 1 241 2 243 2 74 1 244 1 56 1 314 1 193 1 152 1 
248 2 249 2 197 2 4 1 161 1 341 2 344 2 115 1 113 1 165 1 116 1 16 2 65 1 67 2 296 1 297 2 255 2 304 5 210 1 305 1 216 1 260 1 72 2 79 4 353 1 268 2 357 1 271 1 272 1 277 1 318 2 231 1 364 1 235 1 49 1 184 1 279 1 99 1 185 1 369 1 147 1 54 1 327 1 374 2 331 1 57 1 247 1 
185 1 225 1 359 1 22 1 84 1 257 1 3 1 54 1 216 1 85 1 277 1 136 1 67 1 
225 2 51 1 305 1 226 1 257 1 64 1 54 2 216 2 85 1 277 2 124 1 136 2 10 1 117 1 193 1 67 2 
225 1 51 1 257 1 54 2 64 1 216 2 187 1 85 1 277 2 136 2 10 1 117 1 321 1 67 1 
277 1 340 1 200 1 135 1 136 1 182 1 305 1 257 1 54 1 216 1 
277 2 301 1 136 1 330 1 225 1 367 1 257 1 54 2 67 1 216 2 193 1 
225 3 226 1 64 1 85 1 277 2 136 3 319 1 10 1 117 1 67 4 367 1 238 1 305 1 51 1 257 2 54 3 216 3 124 1 193 1 
225 3 226 1 64 1 85 1 277 2 136 3 319 1 10 1 362 1 117 1 67 4 367 1 305 1 51 1 257 2 54 3 216 3 124 1 193 1 
184 1 225 1 210 1 147 1 37 1 305 1 257 1 54 1 327 2 216 1 85 1 161 2 277 1 103 1 311 1 136 1 56 1 67 1 
225 1 51 1 257 1 3 1 54 1 64 1 216 1 85 1 277 1 123 1 136 2 321 1 67 1 
207 1 288 1 137 1 37 1 174 1 
207 2 288 1 255 2 60 1 158 1 37 1 272 1 273 1 132 1 217 1 374 1 341 2 331 1 345 1 137 2 94 1 57 1 174 2 297 1 
206 1 207 1 288 1 147 1 327 1 161 1 312 1 246 1 174 1 
288 1 94 1 273 1 
176 1 36 1 233 1 336 1 
298 1 156 1 11 1 325 1 36 1 233 1 336 1 
298 1 167 1 323 1 
298 3 156 1 325 3 177 1 36 1 317 1 259 1 43 1 11 1 233 1 336 1 81 2 
298 2 92 1 156 1 11 1 325 2 36 1 233 1 336 1 178 1 
298 1 200 1 302 1 143 1 156 1 11 1 325 1 182 1 76 1 177 1 336 1 
298 1 156 1 11 1 325 1 36 1 177 1 336 1 
298 1 156 1 11 1 325 1 36 2 177 1 233 1 
298 2 82 1 154 1 156 2 325 2 36 1 177 1 89 1 11 2 336 1 
365 1 298 3 156 1 325 3 36 1 177 1 121 1 92 2 73 1 11 1 76 1 233 1 336 2 
298 2 143 1 156 1 325 2 36 1 177 1 107 1 340 1 200 1 92 1 166 1 11 1 182 2 233 1 336 1 
365 1 298 4 156 2 325 4 36 1 177 1 178 1 55 1 92 2 11 2 76 1 233 1 336 2 
298 1 156 1 11 1 325 1 36 1 177 1 233 1 336 1 
365 1 298 4 254 1 156 1 325 4 36 2 259 1 43 1 92 2 11 1 76 1 233 2 81 1 336 3 
298 2 83 1 156 1 325 2 36 1 177 1 282 1 24 1 92 1 11 1 233 1 336 1 
298 3 156 1 325 3 177 1 36 1 198 1 259 1 43 2 11 1 233 1 336 1 81 2 
151 1 15 2 372 1 336 2 
298 1 156 1 11 1 325 1 177 1 2 1 
298 2 92 1 73 1 156 1 11 1 325 2 36 1 177 1 233 1 336 1 
253 1 
298 1 156 1 11 1 325 1 36 1 177 1 233 1 336 1 
298 3 92 1 73 1 156 1 11 1 325 3 36 1 177 1 233 1 336 1 81 1 
365 1 254 1 76 1 336 1 
36 1 336 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (274,352) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 93 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 275 195 218 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 275 94 218 30 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 275 195 312 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 275 195 218 30 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 275 94 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 275 94 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
16 1 155 2 174 1 158 1 157 2 224 1 334 9 3 1 308 1 228 2 58 5 119 2 139 1 36 1 76 1 82 2 266 3 351 1 211 1 292 1 240 2 68 9 187 1 374 1 190 4 189 1 109 2 172 6 
16 1 155 2 174 1 158 1 157 2 224 1 334 9 3 1 308 1 228 2 58 5 119 2 139 1 36 1 76 1 82 2 266 3 351 1 211 1 292 1 240 2 68 9 187 1 374 1 190 4 189 1 109 2 172 6 
16 1 155 2 174 1 158 1 157 2 224 1 334 10 3 1 308 1 228 2 58 6 119 2 139 1 36 1 76 1 82 2 266 4 351 1 211 1 292 1 240 2 68 10 187 1 374 1 190 5 189 1 109 2 172 7 
16 1 155 2 174 1 158 1 157 2 224 1 334 7 3 1 308 1 228 2 58 4 119 1 36 1 76 1 82 2 266 2 351 1 211 1 292 1 240 2 68 7 187 1 374 1 190 3 189 1 109 2 172 4 
16 1 155 1 158 1 157 1 36 1 334 4 76 1 228 1 82 1 58 3 266 1 351 1 240 1 68 4 119 2 139 1 190 2 172 3 
16 1 155 1 158 1 123 1 157 1 334 2 308 1 228 1 58 1 211 1 351 1 240 1 162 1 68 2 297 1 109 1 
16 1 155 2 158 1 334 3 58 2 266 1 351 1 292 1 240 2 68 3 190 1 109 1 172 1 
16 1 155 2 158 1 157 1 334 9 228 1 58 5 119 2 139 1 34 1 36 1 76 1 82 1 266 3 292 1 351 1 240 2 68 9 187 1 190 4 189 1 109 1 172 7 271 1 
16 1 155 2 158 1 157 1 334 9 228 1 58 5 119 2 139 1 34 1 36 1 76 1 82 1 266 3 292 1 351 1 240 2 68 9 187 1 190 4 189 1 109 1 172 7 271 1 
188 1 200 1 93 1 
293 1 47 2 188 1 
66 2 332 1 90 2 360 2 179 2 39 2 75 2 366 1 
86 1 333 1 332 1 194 1 51 1 0 1 113 1 90 3 360 2 92 1 2 1 23 1 27 1 59 1 202 1 137 1 179 3 73 1 258 2 7 2 341 1 366 1 262 1 207 1 182 1 321 1 39 2 75 2 128 2 325 1 130 1 186 1 66 2 328 2 372 2 210 1 353 1 
332 1 88 1 90 1 360 1 75 1 39 1 26 1 66 1 179 1 152 1 
88 1 305 1 332 1 90 2 249 1 360 2 363 1 26 2 200 1 138 1 179 2 98 1 102 1 144 1 75 1 39 1 83 1 66 1 67 1 188 1 152 1 
305 2 102 1 90 1 360 1 249 1 144 2 75 1 39 1 26 1 200 1 66 1 67 1 179 1 98 1 188 1 
81 1 305 1 18 1 144 1 48 1 
81 1 185 1 305 2 144 2 46 1 48 1 188 1 200 1 
81 1 305 1 144 1 
88 1 305 1 332 1 90 1 360 1 144 1 75 1 39 1 363 1 26 1 66 1 179 1 48 1 152 1 
188 1 
81 1 305 2 144 2 46 1 48 1 188 1 200 1 368 1 
141 1 33 1 305 5 144 5 115 2 145 1 77 1 22 1 338 1 200 1 146 2 81 2 238 2 132 1 46 1 48 2 122 1 188 1 367 1 
86 1 0 1 90 2 182 1 92 1 320 1 360 1 2 1 39 1 362 1 23 1 130 1 66 1 328 1 372 1 59 1 352 1 73 1 179 2 7 1 
366 1 93 1 
90 2 250 1 360 2 75 1 39 1 26 1 66 1 179 2 164 1 245 1 366 1 
369 1 352 1 24 1 
86 1 331 1 0 1 90 1 92 1 182 1 2 1 23 1 130 1 328 1 372 1 59 1 179 1 73 1 7 1 366 1 
90 3 360 3 250 1 75 1 39 3 362 1 26 1 66 3 179 3 366 1 
66 1 88 1 90 1 360 1 179 1 39 1 26 1 
90 1 360 1 75 1 39 1 26 1 66 1 179 1 164 1 245 1 
86 1 305 1 332 1 194 1 51 1 0 1 90 4 92 1 360 3 249 1 159 1 2 1 362 1 23 1 26 1 59 1 202 1 137 1 73 1 179 4 258 1 7 1 98 1 366 1 282 1 102 1 207 1 182 1 320 1 321 1 144 1 75 2 39 3 128 2 325 1 130 1 186 1 66 3 328 1 372 1 210 1 67 1 353 1 245 1 
90 2 250 1 360 2 39 1 362 1 26 1 66 1 83 1 340 1 179 2 366 1 
305 1 102 1 90 3 249 1 320 1 360 3 144 1 143 1 75 1 39 3 362 2 26 1 66 3 67 1 179 3 98 1 188 1 245 1 282 1 
369 1 90 2 360 2 75 1 39 2 362 1 66 2 352 1 179 2 245 1 
86 1 0 1 90 1 92 1 182 1 2 1 23 1 130 1 328 1 372 1 59 1 179 1 73 1 7 1 366 1 
86 1 0 1 90 1 92 1 182 1 2 1 23 1 127 1 328 1 372 1 179 1 73 1 7 1 260 1 366 1 
274 1 298 1 
66 1 67 1 90 1 360 1 179 1 39 1 26 1 339 1 
90 2 250 1 360 2 39 2 75 1 362 1 26 1 66 2 179 2 245 1 366 1 
66 2 88 1 90 2 360 2 179 2 39 2 339 1 26 1 
364 1 370 1 
364 1 370 1 
256 1 135 1 
256 1 135 1 
256 1 135 1 
364 1 370 1 9 1 
364 1 370 1 8 1 
364 2 205 1 370 2 269 1 256 1 135 1 
364 1 370 1 9 1 
364 1 370 1 9 1 
364 1 370 1 344 1 
364 1 370 1 344 1 
364 1 370 1 344 1 
156 1 219 2 305 2 54 1 264 2 251 1 144 2 323 1 310 2 364 2 370 2 239 2 44 1 269 1 259 1 299 1 188 1 180 2 214 3 
219 1 305 1 54 1 90 2 360 2 117 1 364 1 179 2 366 1 180 1 317 1 8 1 264 1 144 1 10 1 39 2 80 1 370 1 66 2 239 1 171 1 243 1 69 1 214 1 
228 1 82 1 157 1 
228 1 157 1 297 1 
228 3 82 2 177 1 297 1 272 1 100 1 
228 2 82 1 177 1 52 1 297 1 272 1 
228 2 82 1 177 1 297 1 272 2 
305 5 55 1 115 1 117 1 338 2 200 1 56 2 178 1 120 1 367 1 283 1 141 3 206 1 63 1 343 1 265 1 144 5 40 1 290 2 146 1 80 1 81 1 371 1 238 1 293 1 171 1 149 2 373 1 47 3 46 1 48 4 188 2 
88 1 305 2 332 1 90 1 18 1 359 1 360 1 363 1 26 1 200 1 179 1 144 2 75 1 39 1 81 1 66 1 48 2 300 1 213 1 188 1 152 1 
305 3 55 1 115 1 117 1 338 2 200 1 56 1 178 1 120 1 283 1 33 1 141 3 206 1 343 1 265 1 144 3 290 2 146 1 371 1 238 1 293 2 373 1 149 2 47 4 48 2 188 3 
305 4 55 2 115 1 117 2 25 1 338 4 200 1 56 2 178 1 120 2 283 1 33 1 141 5 206 2 343 2 265 1 144 4 208 1 290 4 146 1 371 1 238 1 293 3 149 4 373 2 47 7 48 3 191 1 188 4 
209 1 0 1 93 1 
0 1 196 1 
342 1 
0 1 2 1 
209 2 0 3 182 1 2 1 85 1 233 1 
0 1 182 1 2 1 
0 1 175 1 
206 1 234 1 220 1 113 4 64 2 55 1 335 1 345 1 126 3 346 2 116 1 147 1 137 3 258 7 270 1 62 1 192 1 
206 1 234 1 220 1 113 4 64 2 55 1 335 1 345 1 126 3 346 2 116 1 147 1 137 3 258 7 270 1 62 1 192 1 
206 1 234 1 220 1 113 4 64 2 55 1 335 1 345 1 126 3 346 2 116 1 326 1 147 1 137 3 258 7 270 1 62 1 192 1 
220 1 194 1 51 1 113 16 335 2 55 4 116 1 275 1 316 1 137 15 120 3 258 31 62 2 318 1 206 4 234 1 319 1 64 3 343 3 183 4 345 1 126 10 41 1 346 5 128 2 325 1 169 1 147 2 107 1 186 1 373 3 270 2 134 3 192 5 
194 2 51 2 220 1 113 5 55 1 335 1 199 1 137 4 258 9 62 1 206 1 234 1 64 2 345 1 126 4 346 3 128 4 325 2 169 1 147 1 186 2 148 1 270 1 192 1 
16 1 155 1 158 1 157 1 248 1 53 1 92 1 334 2 114 1 276 1 228 2 58 1 203 1 73 1 7 1 204 1 99 1 100 1 42 1 82 1 372 1 328 1 351 1 267 1 240 1 68 2 297 1 71 1 172 1 109 1 
16 1 155 1 158 1 157 1 92 1 334 3 114 1 276 1 228 2 58 1 203 1 73 1 7 1 204 1 100 1 99 1 42 1 11 1 327 1 170 1 82 1 372 1 328 1 267 1 240 1 68 3 297 1 71 1 109 1 172 2 
16 1 158 1 157 1 92 1 334 2 114 1 276 1 228 2 58 1 203 1 73 1 7 1 204 1 100 1 42 1 11 1 327 1 82 1 372 1 328 1 68 2 297 1 71 1 109 1 172 2 
155 1 0 1 92 1 20 1 334 1 2 1 23 1 289 1 42 2 170 1 313 1 328 1 372 1 240 1 212 1 203 2 68 1 73 1 7 1 354 1 151 1 71 2 109 2 
155 1 157 1 53 1 92 1 334 1 114 1 276 1 228 2 203 1 73 1 7 1 204 1 99 1 100 1 42 1 11 1 82 1 372 1 328 1 351 1 267 1 240 1 68 1 297 1 71 1 109 1 
311 1 
0 1 90 1 273 1 92 1 2 1 337 2 225 1 338 2 227 1 138 1 179 1 7 2 98 1 141 2 102 1 144 5 288 2 146 1 238 1 67 1 293 2 296 1 354 1 188 2 154 1 110 2 305 5 360 1 249 1 115 1 361 2 23 2 26 1 200 1 118 1 28 1 315 4 73 1 257 1 367 1 124 1 38 2 265 1 322 1 78 1 168 2 129 2 81 6 43 1 328 2 372 2 83 1 212 1 47 2 46 3 
154 1 305 3 90 1 360 1 249 1 361 1 26 1 227 1 118 1 315 2 138 1 179 1 257 1 98 1 368 1 102 1 144 3 43 1 81 2 83 1 67 1 46 1 
154 1 110 1 305 2 102 1 90 1 249 1 360 1 144 2 26 1 227 1 118 1 43 1 315 3 83 1 67 1 138 1 257 1 179 1 98 1 
154 1 110 1 305 3 90 1 360 1 249 1 361 1 26 1 227 1 118 1 315 3 138 1 179 1 257 1 98 1 368 1 102 1 144 3 168 1 43 1 81 2 83 1 67 1 46 1 
88 1 332 1 90 2 223 1 337 2 338 1 227 1 138 1 179 2 98 1 141 1 102 1 144 5 288 2 146 1 66 1 238 1 67 1 293 2 188 1 152 1 153 1 154 1 17 1 110 3 305 5 249 1 360 2 115 1 363 1 361 4 306 1 26 2 200 1 118 1 28 1 315 5 257 1 165 1 368 1 367 1 38 2 39 1 75 1 78 1 168 4 129 2 43 1 81 7 83 1 46 3 
154 1 110 2 305 4 90 1 360 1 249 1 115 1 361 2 337 2 225 1 338 1 26 1 200 1 227 1 118 1 28 1 315 4 138 1 257 1 179 1 98 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 2 129 2 146 1 81 4 43 1 238 1 83 1 67 1 293 2 46 2 47 2 188 2 
154 1 110 2 305 4 90 1 360 1 249 1 115 1 361 2 306 1 337 2 338 1 26 1 200 1 227 1 118 1 28 1 315 4 138 1 179 1 257 1 98 1 165 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 2 129 2 146 1 81 4 43 1 83 1 238 1 67 1 293 2 46 2 188 1 153 1 
154 1 110 2 305 4 90 1 360 1 249 1 115 1 361 2 306 1 337 2 338 1 26 1 200 1 227 1 118 1 28 1 315 4 138 1 179 1 257 1 98 1 165 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 2 129 2 146 1 81 4 43 1 83 1 238 1 67 1 293 2 46 2 188 1 153 1 
215 2 154 1 110 2 305 4 90 1 360 1 249 1 115 1 361 2 338 1 26 1 200 1 227 1 96 2 118 1 315 4 138 1 179 1 257 1 98 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 2 348 1 146 1 291 1 81 4 43 1 83 1 238 1 67 1 108 1 46 2 47 2 188 1 153 1 
154 1 110 3 305 4 90 1 360 1 249 1 115 1 223 1 361 3 306 1 337 2 338 1 26 1 200 1 227 1 118 1 28 1 315 5 138 1 179 1 257 1 98 1 165 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 3 129 2 146 1 43 1 81 5 238 1 83 1 67 1 293 2 46 2 188 1 153 1 
154 1 110 3 305 4 90 1 360 1 249 1 115 1 223 1 361 3 306 1 337 2 338 1 26 1 200 1 227 1 118 1 28 1 315 5 138 1 179 1 257 1 98 1 165 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 3 129 2 146 1 43 1 81 5 238 1 83 1 67 1 293 2 46 2 188 1 153 1 
215 2 154 1 110 2 305 4 90 1 360 1 249 1 115 1 361 2 225 1 338 1 26 1 200 1 227 1 96 2 118 1 315 4 138 1 257 1 179 1 98 1 367 1 141 1 102 1 38 2 144 4 288 2 78 1 168 2 146 1 81 4 43 1 238 1 83 1 67 1 108 1 46 2 47 2 188 1 
298 1 93 1 
357 1 333 1 194 2 51 2 113 8 55 1 24 11 275 1 202 1 137 6 120 1 258 14 366 1 369 4 166 1 206 2 103 1 207 1 343 2 183 3 126 2 346 1 41 1 128 4 325 2 186 2 329 1 14 1 352 11 373 2 353 2 134 3 192 1 
86 1 247 1 331 1 333 1 0 1 51 1 194 1 90 2 113 1 92 1 360 1 2 1 23 1 362 1 59 1 202 1 137 1 6 1 73 1 179 2 29 1 7 1 258 2 366 1 369 1 182 1 320 1 207 1 39 1 128 2 325 1 130 1 372 1 328 1 186 1 66 1 329 1 353 1 
86 2 333 1 220 1 51 3 0 2 90 3 92 2 335 1 55 3 2 2 59 2 137 10 179 3 7 3 234 1 64 1 182 2 343 2 345 1 286 2 346 4 11 1 13 1 66 1 186 3 352 7 353 3 192 4 194 3 113 10 360 1 197 1 23 1 362 1 24 7 202 3 120 2 73 2 121 2 258 20 366 2 369 7 206 3 167 2 263 2 207 1 320 1 39 1 126 8 128 6 325 3 130 2 372 3 328 3 329 1 210 2 268 1 373 2 270 1 
89 1 333 1 248 1 0 3 194 1 51 1 90 1 113 1 360 1 92 2 2 2 362 1 23 2 254 1 202 1 137 1 179 1 73 2 7 7 258 2 341 2 32 1 284 1 207 1 106 1 39 1 11 1 128 2 325 1 66 1 372 8 328 8 186 1 212 1 353 1 330 1 298 1 354 1 355 1 
194 1 51 1 90 1 113 1 360 1 55 1 24 1 202 1 137 2 120 1 179 1 258 3 369 1 206 1 343 1 75 1 39 1 126 1 346 1 128 2 325 1 66 1 186 1 329 1 352 1 133 1 373 1 353 1 245 1 
298 1 
298 1 
298 1 
369 1 206 1 89 1 51 1 194 1 113 2 343 1 126 1 24 1 128 2 325 1 186 1 352 1 202 1 15 1 258 2 353 1 192 1 
369 1 89 1 51 1 194 1 222 1 55 1 126 1 346 1 24 1 128 2 325 1 186 1 352 1 202 1 137 2 120 1 258 2 353 1 
89 1 194 1 51 1 113 2 55 1 24 2 202 1 137 2 120 1 258 4 369 2 206 1 343 1 126 2 346 1 128 2 325 1 186 1 352 2 373 1 353 1 192 1 
194 1 51 1 113 2 55 1 24 2 202 1 137 2 120 1 258 4 369 2 206 1 343 1 126 2 346 1 128 2 325 1 186 1 352 2 373 1 353 1 192 1 
86 1 333 1 0 1 51 1 194 1 113 1 90 1 92 1 2 1 23 1 59 1 202 1 137 1 73 1 179 1 258 2 7 1 366 1 182 1 207 1 128 2 325 1 130 1 372 1 328 1 186 1 210 1 353 1 
86 1 333 1 0 1 51 1 194 1 113 1 90 1 92 1 2 1 23 1 202 1 61 1 137 1 73 1 179 1 258 2 7 1 260 1 366 1 182 1 207 1 127 1 128 2 325 1 372 1 328 1 186 1 353 1 
194 1 51 1 113 2 55 1 24 2 202 1 137 2 120 1 258 4 369 2 206 1 343 1 126 2 346 1 128 2 325 1 186 1 329 1 352 2 373 1 353 1 192 1 
86 1 248 1 0 1 51 1 194 1 113 2 90 1 92 1 55 1 2 1 24 2 59 1 202 1 137 2 120 1 73 1 179 1 258 4 7 1 369 2 206 1 167 1 343 1 182 1 126 2 346 1 128 2 325 1 130 1 372 1 328 1 186 1 210 1 352 2 373 1 353 1 192 1 
194 1 51 1 90 1 113 2 360 1 55 1 24 1 202 1 137 1 120 1 179 1 258 3 369 1 206 1 343 1 75 1 39 1 126 1 128 2 325 1 184 1 66 1 186 1 329 1 352 1 373 1 353 1 192 1 245 1 
136 2 218 1 194 2 51 2 113 9 195 1 55 3 252 1 275 1 137 10 120 3 30 1 258 19 181 1 206 3 343 3 183 2 285 2 126 6 346 3 41 1 128 4 325 2 186 2 148 1 350 1 294 1 373 3 134 1 192 3 
218 2 51 1 194 1 113 2 195 2 183 1 285 1 252 1 128 2 275 1 325 1 148 1 186 1 137 2 258 4 30 1 134 1 
136 1 218 1 194 2 51 2 113 10 195 2 55 2 252 1 275 3 312 1 94 1 137 11 120 2 30 1 258 21 206 2 343 2 183 4 285 3 126 3 346 1 41 1 128 4 325 2 186 2 148 1 350 1 294 1 373 2 134 3 192 2 
136 1 218 1 194 2 51 2 113 8 195 2 55 2 252 1 275 2 312 1 137 9 120 2 30 1 258 17 206 2 343 2 183 3 285 2 126 4 346 2 41 1 128 4 325 2 186 2 148 1 350 1 294 1 373 2 134 2 192 2 
218 1 194 1 51 1 220 1 113 5 195 1 55 1 335 1 252 1 275 1 137 4 30 1 258 9 206 1 234 1 64 1 183 1 285 1 345 1 126 1 346 1 128 2 325 1 186 1 148 1 270 1 134 1 
364 1 370 1 131 1 219 1 239 1 44 1 269 1 264 1 259 1 180 1 
8 1 69 1 
364 1 370 1 35 1 84 1 219 1 239 1 97 1 264 1 180 1 
156 1 305 1 219 1 54 1 264 1 251 1 144 1 323 1 310 1 364 1 370 1 239 1 44 1 269 1 259 1 188 1 180 1 214 2 
156 1 305 1 219 1 54 1 264 1 251 1 144 1 323 1 310 1 364 1 370 1 239 1 44 1 269 1 259 1 188 1 180 1 214 2 
156 1 305 1 219 1 54 1 264 1 251 1 144 1 323 1 310 1 364 1 370 1 239 1 44 1 269 1 259 1 188 1 180 1 214 2 
205 1 9 1 161 1 
205 1 9 1 161 1 
217 1 344 1 
217 1 205 1 344 1 
10 1 317 1 
305 1 219 1 358 1 90 2 251 1 360 2 117 1 310 1 364 1 179 2 366 1 180 1 317 1 8 1 264 1 144 1 10 1 39 2 80 1 370 1 66 2 239 1 171 1 48 1 243 1 69 1 214 1 
9 1 161 1 
217 1 205 1 344 1 
333 1 0 1 51 1 194 1 90 2 113 1 92 1 360 2 2 1 176 1 226 1 254 1 202 1 137 1 73 1 179 2 258 2 7 2 341 2 207 1 106 1 324 1 128 2 325 1 372 2 328 2 186 1 329 1 150 1 353 1 356 1 
157 1 248 1 104 1 92 1 114 1 11 1 228 2 82 1 328 2 372 2 237 1 267 1 230 1 203 1 297 1 73 1 7 2 204 1 100 1 
157 1 92 1 114 1 11 1 228 2 82 1 328 1 372 1 267 1 230 1 203 1 297 1 73 1 7 1 281 1 204 1 100 1 
0 1 92 1 2 1 23 1 313 1 328 1 372 1 237 1 212 1 203 1 73 1 7 1 354 1 70 1 
157 1 104 1 92 1 114 1 11 1 228 2 82 1 328 1 372 1 237 1 267 1 230 1 203 1 297 1 73 1 7 1 204 1 100 1 
231 1 
141 1 132 1 145 1 188 1 338 1 200 1 93 1 
305 1 115 1 337 1 338 1 200 1 28 1 367 1 141 1 144 1 146 1 129 1 81 1 238 1 293 1 47 1 46 1 188 2 
50 1 0 4 92 2 91 1 55 1 2 1 338 3 278 1 7 1 141 4 182 1 343 1 144 2 290 3 146 2 238 2 293 3 149 3 188 3 193 1 305 2 111 1 112 1 249 1 115 2 196 2 23 1 120 1 73 1 74 1 367 2 206 1 263 1 265 1 81 2 209 1 328 1 372 1 373 1 46 1 47 6 85 1 
115 1 55 2 338 4 275 1 94 1 279 1 120 2 31 1 367 1 141 6 206 2 37 1 343 2 183 1 290 5 146 1 238 1 293 3 149 5 373 2 47 6 134 1 188 3 173 1 
88 1 305 1 332 1 220 1 90 1 360 1 221 2 335 1 115 1 55 1 336 1 363 1 338 2 26 1 179 1 232 1 165 1 367 1 141 2 206 2 144 1 75 1 39 1 146 1 238 1 66 1 270 1 152 1 
141 1 115 1 145 1 338 1 146 1 200 1 238 1 132 1 188 1 367 1 
141 2 206 1 343 1 55 1 338 2 290 2 293 2 373 1 149 2 120 1 47 4 188 2 
81 1 305 1 144 1 46 1 188 1 200 1 
303 1 305 3 0 1 92 1 115 2 2 1 23 2 338 2 229 2 73 1 7 4 367 1 33 1 141 2 124 2 265 2 125 1 322 1 144 3 146 2 81 4 238 2 372 4 328 4 212 1 296 1 45 1 46 2 354 1 
86 1 332 1 194 1 0 1 51 1 90 3 360 2 92 1 2 1 23 1 59 1 202 1 137 1 179 3 73 1 258 1 7 1 366 1 207 1 321 1 182 1 39 2 75 2 128 2 325 1 130 1 186 1 372 1 328 1 66 2 210 1 353 1 
141 1 124 1 265 1 115 1 338 1 290 1 146 1 200 1 238 1 293 1 47 2 188 2 367 1 
236 1 219 1 180 1 
219 1 10 1 259 1 307 1 180 1 
236 1 219 1 180 1 
236 1 219 1 180 1 
314 1 219 1 180 1 
314 1 219 1 180 1 
314 1 219 1 180 1 
219 1 180 1 
364 1 370 1 
206 1 234 1 220 1 51 2 194 2 113 4 64 1 55 1 335 1 345 1 126 3 346 2 128 4 325 2 169 1 186 2 137 4 258 8 270 1 192 1 
206 1 234 1 220 1 113 3 64 1 335 1 55 1 345 1 126 2 346 2 93 1 137 3 258 6 270 1 
206 1 51 1 194 1 113 2 343 1 55 1 126 2 346 1 128 2 325 1 95 1 186 1 137 2 373 1 120 1 258 4 192 1 
113 1 137 1 183 1 258 2 134 1 275 1 
357 1 220 1 51 1 194 1 113 9 335 1 55 3 137 9 120 2 258 18 206 3 234 1 64 1 343 2 183 2 345 1 126 4 41 1 346 3 128 2 169 1 325 1 186 1 14 1 373 2 270 1 134 2 192 1 
137 1 183 1 258 1 
113 1 258 1 134 1 
206 1 194 1 51 1 263 1 113 3 343 1 55 1 126 3 346 2 128 2 325 1 95 1 186 1 137 3 373 1 120 1 258 6 192 1 
194 2 51 2 113 6 55 2 275 1 94 1 279 1 137 7 120 2 258 13 31 1 206 2 37 1 343 2 183 1 126 3 346 2 128 4 325 2 169 1 186 2 148 1 373 2 134 1 192 1 173 1 
206 1 220 1 113 3 55 1 335 1 126 2 346 1 137 3 258 6 270 1 192 1 
234 1 51 1 194 1 113 1 335 1 345 1 126 2 346 1 65 1 128 2 169 1 325 1 186 1 137 2 258 3 270 1 192 1 
206 2 194 1 51 1 220 1 113 5 335 2 55 2 336 1 126 5 346 3 128 2 325 1 186 1 148 1 137 5 258 10 270 2 192 2 
206 1 51 1 194 1 113 2 343 1 126 1 128 2 325 1 148 1 186 1 258 2 192 1 
206 1 51 1 194 1 113 2 343 1 55 1 126 2 346 1 128 2 325 1 148 1 186 1 137 2 373 1 120 1 258 4 192 1 
51 3 194 3 113 1 335 1 126 2 346 1 65 1 128 6 169 1 325 3 148 1 186 3 350 1 137 2 258 3 270 1 192 1 
220 2 194 5 51 5 113 16 335 3 55 5 275 1 95 1 316 1 137 18 120 3 258 34 206 5 234 1 319 1 64 1 343 3 183 4 345 1 126 12 41 1 346 7 65 1 128 10 169 2 325 5 107 1 186 5 148 1 350 1 373 3 270 3 134 3 192 5 
194 1 51 1 220 1 113 4 55 1 335 1 275 1 94 1 137 4 258 8 206 1 234 1 64 1 183 1 345 1 126 2 346 2 128 2 325 1 186 1 148 1 270 1 134 1 
220 1 194 2 51 2 113 6 55 1 335 1 275 1 94 1 95 1 137 5 258 11 206 2 234 1 64 1 343 1 183 2 345 1 126 3 346 2 41 1 128 4 325 2 148 1 186 2 373 1 270 1 134 1 192 1 
94 1 186 1 148 1 194 1 51 1 113 1 137 1 183 1 258 2 134 1 128 2 275 1 325 1 
194 4 51 4 113 7 55 1 275 1 95 1 94 1 279 1 137 5 120 1 258 12 31 1 206 2 37 1 343 2 183 1 126 3 346 2 128 8 325 4 169 2 186 4 148 1 373 2 134 1 192 1 173 1 
194 1 51 1 220 1 113 4 55 1 335 1 275 1 94 1 137 4 258 8 206 1 234 1 64 1 183 1 345 1 126 2 346 2 128 2 325 1 186 1 148 1 270 1 134 1 
94 1 186 1 148 1 194 1 51 1 113 1 137 1 183 1 258 2 134 1 128 2 275 1 325 1 
194 3 51 3 113 7 55 1 275 1 94 1 95 1 279 1 137 4 120 1 258 11 31 1 206 2 37 1 343 2 183 1 126 1 128 6 169 1 325 3 186 3 148 1 373 2 134 1 192 1 173 1 
194 3 51 3 113 7 55 1 275 1 94 1 279 1 137 4 120 1 258 11 31 1 206 2 37 1 343 2 183 1 126 3 346 1 128 6 169 1 325 3 148 1 186 3 350 1 373 2 134 1 192 2 173 1 
206 1 234 1 220 1 113 3 55 1 335 3 345 2 126 6 346 3 137 4 258 7 270 3 192 3 
194 3 51 3 113 7 55 1 275 1 94 1 279 1 137 4 120 1 258 11 31 1 206 2 37 1 343 2 183 1 126 1 128 6 169 1 325 3 148 1 186 3 350 1 373 2 134 1 192 1 173 1 
246 1 90 1 360 1 250 1 26 1 83 1 340 1 179 1 366 1 
216 1 246 1 90 1 250 1 360 1 26 1 253 1 277 1 349 1 83 1 340 1 179 1 140 1 366 1 
372 1 328 1 0 1 212 1 92 1 73 1 2 1 7 1 23 1 354 1 93 1 
86 1 0 1 90 2 182 1 92 1 360 1 2 1 39 1 362 1 23 1 130 1 66 1 328 1 372 1 179 2 73 1 7 1 366 1 
86 1 0 3 90 2 175 1 182 2 92 1 360 2 2 2 39 2 362 1 26 1 130 1 57 1 66 1 328 1 372 1 67 1 229 1 179 2 73 1 7 1 98 1 366 1 
86 1 87 1 0 3 90 2 175 1 182 2 92 1 360 2 2 2 39 2 362 1 26 1 57 1 66 1 328 2 372 2 67 1 229 1 179 2 73 1 7 2 98 1 260 1 366 1 
87 1 305 2 0 4 105 1 249 1 175 1 182 1 92 1 144 2 2 1 196 1 23 1 200 1 309 1 57 1 81 1 209 1 328 3 372 3 229 1 73 1 7 3 188 1 
87 1 305 2 111 1 0 4 249 1 175 1 182 1 92 1 144 2 2 1 196 1 23 1 200 1 57 1 81 1 209 1 328 3 372 3 229 1 73 1 7 3 188 1 
372 1 328 1 92 1 73 1 7 1 355 1 
32 1 284 1 248 1 0 3 1 1 182 1 92 3 21 1 2 2 23 2 11 1 254 1 328 7 372 7 73 2 7 6 341 1 330 1 85 1 280 1 355 1 
86 1 51 2 0 1 220 1 90 2 92 1 335 1 55 1 2 1 59 1 137 3 179 2 7 1 234 1 182 1 64 1 345 1 286 1 346 2 66 1 186 2 352 1 150 1 353 2 248 1 194 2 113 3 360 1 362 1 24 1 202 2 73 1 258 6 366 2 369 1 206 1 167 1 39 1 126 2 128 4 325 2 130 1 372 1 328 1 210 1 329 1 270 1 
303 1 305 3 111 1 0 2 112 1 249 1 115 2 196 1 23 1 338 1 200 1 278 1 7 1 74 1 367 2 141 1 144 3 145 1 146 2 81 2 209 1 328 1 238 2 372 1 132 1 46 1 48 1 188 1 
50 1 248 1 0 2 182 1 92 2 2 1 209 1 328 2 372 2 73 1 7 2 85 1 355 1 
87 1 248 1 0 1 92 1 2 1 23 1 328 4 372 4 212 1 72 1 73 1 7 4 354 1 
0 1 182 1 92 2 21 1 2 1 12 1 13 1 4 1 328 2 372 2 229 1 73 1 7 2 280 1 
228 1 372 1 328 1 157 1 92 1 297 1 73 1 114 1 7 1 23 1 
254 1 372 2 328 2 0 1 248 1 92 1 73 1 2 1 7 2 324 1 11 1 
284 1 248 1 0 3 92 2 2 2 23 1 254 1 328 5 372 5 229 1 212 1 72 1 73 2 7 4 354 1 330 1 
284 1 248 1 0 3 92 2 2 2 23 1 254 1 328 5 372 5 255 1 229 1 212 1 72 1 73 2 7 4 354 1 
86 1 0 1 90 2 182 1 92 1 360 1 2 1 39 1 362 1 23 1 66 1 328 1 372 1 179 2 73 1 7 1 260 1 366 1 
0 1 1 1 182 1 92 2 21 1 2 1 328 1 372 1 229 1 73 1 7 1 85 1 280 1 
60 1 90 1 360 1 179 1 176 1 347 1 198 1 356 1 226 1 
201 1 60 1 244 1 
60 1 241 1 347 1 198 1 366 1 
305 2 102 1 249 1 144 2 287 1 198 2 347 2 26 1 200 1 67 1 201 1 60 1 241 2 98 1 48 1 188 1 244 1 366 1 282 1 
16 1 58 1 158 1 93 1 
16 1 155 1 58 1 158 1 240 1 68 1 334 1 
68 1 71 1 109 1 
16 1 155 1 58 1 304 1 211 2 351 1 158 1 240 1 19 1 68 3 334 3 79 1 
16 1 155 1 58 1 158 1 240 1 68 2 119 1 334 2 172 1 
228 1 82 1 155 1 58 1 351 1 157 1 240 1 36 1 68 1 334 1 190 1 
16 1 155 1 58 1 351 1 240 1 68 1 334 1 
16 2 155 1 351 1 158 1 240 1 68 1 334 1 
16 1 235 1 155 2 58 1 351 1 240 2 68 2 242 1 334 2 160 1 
16 1 155 1 158 1 334 3 58 2 266 1 351 1 240 1 68 3 187 1 189 1 190 1 172 2 
16 1 155 1 158 1 157 1 334 2 228 2 82 1 58 1 351 1 240 1 68 2 297 1 49 1 100 1 172 1 
16 1 155 2 158 1 334 4 58 2 266 1 351 1 240 2 68 4 119 1 139 1 190 1 172 2 
16 1 155 1 58 1 351 1 158 1 240 1 68 1 334 1 
16 2 101 1 155 1 158 2 19 1 334 4 79 1 58 3 266 1 211 1 240 1 68 4 190 1 172 2 
16 1 155 1 158 1 334 2 58 1 351 1 240 1 68 2 365 1 261 1 271 1 172 1 
16 1 155 1 158 1 19 1 334 3 79 2 58 1 351 1 211 2 240 1 68 3 295 1 
301 1 58 2 302 1 142 2 
155 1 5 1 351 1 240 1 68 1 334 1 
16 1 155 1 58 1 351 1 158 1 240 1 68 2 334 2 189 1 172 1 
163 1 
16 1 155 1 58 1 351 1 158 1 240 1 68 1 334 1 
16 1 155 1 58 1 211 1 351 1 158 1 240 1 68 3 334 3 189 1 172 1 
101 1 58 1 266 1 190 1 
16 1 58 1 

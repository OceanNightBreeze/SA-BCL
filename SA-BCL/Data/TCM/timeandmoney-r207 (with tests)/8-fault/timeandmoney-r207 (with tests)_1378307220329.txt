#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 355 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 321 209 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 321 209 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 311 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 154 3 155 1 216 2 28 2 333 1 50 1 83 1 305 2 34 1 281 1 140 4 185 2 324 9 59 1 326 1 309 9 93 1 151 6 21 1 173 1 172 2 212 2 313 5 96 1 100 1 25 1 101 2 
194 1 154 3 155 1 216 2 28 2 333 1 50 1 83 1 305 2 34 1 281 1 140 4 185 2 324 9 59 1 326 1 309 9 93 1 151 6 21 1 173 1 172 2 212 2 313 5 96 1 100 1 25 1 101 2 
194 1 154 4 155 1 216 2 28 2 333 1 50 1 83 1 305 2 34 1 281 1 140 5 185 2 324 10 59 1 326 1 309 10 93 1 151 7 21 1 173 1 172 2 212 2 313 6 96 1 100 1 25 1 101 2 
154 2 155 1 216 2 28 2 333 1 50 1 83 1 305 2 34 1 281 1 140 3 185 1 324 7 59 1 326 1 309 7 93 1 151 4 21 1 173 1 172 2 212 2 313 4 96 1 100 1 25 1 101 2 
185 2 154 1 194 1 324 4 155 1 216 1 28 1 326 1 333 1 309 4 151 3 21 1 172 1 212 1 305 1 313 3 100 1 140 2 
324 2 203 1 28 1 59 1 333 1 309 2 21 1 172 1 211 1 313 1 212 1 305 1 96 1 100 1 125 1 101 1 
324 3 154 1 333 1 309 3 93 1 151 1 21 1 212 2 305 2 313 2 100 1 140 1 101 1 
154 3 194 1 155 1 216 1 28 1 333 1 50 1 305 2 9 1 140 4 185 2 324 9 205 1 326 1 309 9 93 1 151 7 21 1 172 1 212 2 313 5 100 1 25 1 101 1 
154 3 194 1 155 1 216 1 28 1 333 1 50 1 305 2 9 1 140 4 185 2 324 9 205 1 326 1 309 9 93 1 151 7 21 1 172 1 212 2 313 5 100 1 25 1 101 1 
251 1 242 1 167 1 
167 1 286 2 371 1 
336 2 95 1 204 2 175 2 16 2 86 2 366 2 133 1 
299 1 27 2 300 1 72 1 106 1 29 2 334 1 196 1 361 1 181 1 52 1 133 1 336 2 135 2 338 1 5 1 32 1 252 1 254 1 365 1 86 3 366 2 40 1 41 1 204 2 208 2 206 1 149 1 16 3 263 1 95 1 120 2 175 2 294 1 176 1 177 1 271 1 
204 1 75 1 16 1 133 1 336 1 189 1 35 1 175 1 366 1 86 1 
11 1 242 1 71 1 58 1 167 1 204 1 16 1 301 1 189 1 197 1 18 1 22 1 122 1 86 1 
11 1 242 1 71 2 58 1 167 1 204 1 16 1 197 2 336 1 189 1 22 1 122 1 175 1 366 1 86 1 
197 1 71 1 46 1 60 1 227 1 
197 2 242 1 71 2 46 1 138 1 167 1 169 1 60 1 
197 1 71 1 60 1 
71 1 204 1 75 1 16 1 133 1 189 1 197 1 336 1 46 1 35 1 175 1 236 1 366 1 86 1 
167 1 
197 2 242 1 71 2 46 1 167 1 169 1 60 1 102 1 
128 2 273 1 193 1 242 1 186 1 71 5 167 1 260 2 169 1 146 2 60 2 51 1 15 1 197 5 82 1 6 1 46 2 37 1 368 1 
27 1 72 1 106 1 204 1 206 1 208 1 30 1 149 1 16 2 263 1 135 1 338 1 32 1 33 1 235 1 252 1 254 1 175 1 366 1 86 2 
95 1 251 1 
204 2 16 2 189 1 336 1 64 1 20 1 95 1 341 1 175 1 86 2 366 1 
33 1 360 1 317 1 
27 1 106 1 72 1 208 1 206 1 149 1 16 1 263 1 135 1 338 1 95 1 32 1 252 1 254 1 86 1 214 1 
204 2 30 1 16 2 189 1 336 1 64 1 20 1 95 1 175 2 366 2 86 2 
189 1 121 1 204 2 75 1 175 2 16 2 86 2 366 2 
204 3 30 1 16 3 336 1 189 1 64 1 95 1 175 3 366 3 86 3 
189 1 204 1 75 1 175 1 16 1 86 1 366 1 
204 1 16 1 336 1 189 1 20 1 341 1 175 1 366 1 86 1 
71 1 299 1 27 1 300 1 72 1 106 1 29 2 30 1 196 1 361 1 181 1 133 1 336 2 197 1 135 1 338 1 5 1 32 1 252 1 254 1 40 1 86 4 366 3 11 1 58 1 204 3 206 1 208 1 149 1 16 4 263 1 189 1 95 1 20 1 44 1 22 1 120 1 235 1 122 1 99 1 175 3 294 1 177 1 271 1 
18 1 95 1 304 1 204 2 30 1 175 1 16 2 86 2 366 1 
103 1 11 1 71 1 58 1 167 1 204 3 30 2 16 3 336 1 197 1 189 1 20 1 22 1 235 1 122 1 99 1 175 3 366 3 86 3 
204 2 30 1 360 1 16 2 336 1 20 1 33 1 175 2 366 2 86 2 
27 1 106 1 72 1 208 1 206 1 149 1 16 1 263 1 135 1 338 1 95 1 32 1 252 1 254 1 86 1 
228 1 296 1 27 1 106 1 72 1 208 1 149 1 16 1 135 1 338 1 95 1 32 1 252 1 254 1 86 1 
298 1 1 1 275 1 299 1 300 1 29 2 196 1 360 2 361 1 279 1 52 2 5 2 33 2 108 1 284 1 42 1 373 1 120 4 126 1 329 1 270 1 294 1 271 1 317 2 
189 1 122 1 204 1 121 1 175 1 16 1 86 1 366 1 
357 1 278 1 
357 1 278 1 
70 1 163 1 
70 1 163 1 
70 1 163 1 
374 1 357 1 278 1 
222 1 357 1 278 1 
70 1 163 1 57 1 357 2 278 2 76 1 
374 1 357 1 278 1 
374 1 357 1 278 1 
357 1 278 1 288 1 
357 1 278 1 288 1 
357 1 278 1 288 1 
238 1 239 1 48 1 71 1 357 1 180 1 278 1 131 1 219 1 363 1 197 1 134 1 222 1 225 1 366 2 86 2 204 2 16 2 189 1 64 1 95 1 233 1 352 1 174 1 24 1 175 2 
239 2 238 3 71 2 57 1 357 2 167 1 277 1 2 1 131 2 278 2 180 2 3 2 80 1 250 1 197 2 78 1 225 2 352 1 8 1 
172 1 216 1 28 1 
172 1 203 1 28 1 
172 3 216 2 203 1 207 1 261 1 367 1 
172 2 216 1 89 1 203 1 261 1 367 1 
172 2 216 1 203 1 261 1 367 2 
128 1 273 1 129 1 242 1 71 5 218 1 219 1 246 1 51 2 279 1 132 1 197 5 160 2 37 3 284 1 13 1 260 1 167 2 169 1 286 3 146 1 60 1 371 1 42 1 233 1 119 2 152 2 66 1 46 4 24 1 270 1 192 1 
128 2 273 1 319 1 129 3 274 1 242 1 71 9 355 1 218 2 51 6 279 3 132 2 197 9 6 1 109 5 160 6 37 8 227 5 284 3 13 1 90 1 167 5 260 2 169 1 286 9 60 6 146 2 371 3 42 3 43 1 119 6 46 7 67 1 24 4 270 3 
128 1 129 1 242 1 71 3 218 1 75 1 246 1 51 2 279 1 133 1 132 1 336 1 197 3 6 1 35 1 37 3 160 2 86 1 366 1 284 1 204 1 167 3 260 1 146 1 286 4 371 2 16 1 42 1 189 1 152 1 119 2 46 2 66 1 24 1 175 1 270 1 236 1 
128 1 129 1 71 2 355 1 218 1 246 1 51 2 279 1 132 1 197 2 6 1 160 2 37 3 284 1 167 2 260 1 286 4 146 1 371 2 42 1 119 2 152 1 66 1 46 1 24 1 270 1 
251 1 344 1 149 1 
149 1 232 1 
17 1 
72 1 106 1 149 1 
149 1 318 1 
72 1 149 1 
344 2 72 1 106 1 123 1 149 3 62 1 
1 3 307 1 114 1 166 2 49 1 42 1 52 4 337 1 81 1 118 1 351 1 5 3 45 1 120 7 126 2 270 1 127 1 
1 3 307 1 114 1 166 2 49 1 42 1 52 4 337 1 81 1 118 1 351 1 5 3 45 1 120 7 126 2 270 1 127 1 
1 3 307 1 114 1 166 2 49 1 42 1 52 4 337 1 81 1 118 1 351 1 5 3 45 1 120 7 126 2 38 1 270 1 127 1 
272 1 129 3 354 1 1 10 299 1 49 1 300 1 29 2 279 3 361 1 52 16 337 1 81 2 5 15 223 1 339 1 280 3 284 3 307 1 325 1 166 3 114 5 42 4 328 1 118 2 351 2 45 1 120 31 293 4 126 5 47 1 270 4 294 1 127 2 
1 4 299 2 300 2 29 4 359 1 361 2 52 5 337 1 81 1 5 4 339 1 307 1 166 2 114 1 42 1 118 1 266 1 351 1 45 1 120 9 126 3 270 1 294 2 127 1 
216 1 27 1 28 1 333 1 245 1 248 1 135 1 32 1 53 1 305 1 254 1 10 1 324 2 203 1 208 1 207 1 309 2 348 1 171 1 151 1 21 1 172 2 313 1 212 1 23 1 316 1 100 1 330 1 101 1 153 1 
216 1 27 1 28 1 333 1 248 1 135 1 32 1 53 1 305 1 110 1 254 1 282 1 10 1 324 3 144 1 203 1 207 1 208 1 309 3 348 1 171 1 151 2 21 1 172 2 313 1 212 1 23 1 316 1 330 1 101 1 
27 1 216 1 28 1 333 1 248 1 135 1 32 1 53 1 110 1 254 1 282 1 10 1 324 2 203 1 208 1 207 1 309 2 171 1 151 2 21 1 172 2 313 1 23 1 316 1 101 1 
324 1 144 1 27 1 208 1 309 1 79 1 135 1 338 1 212 1 305 1 53 2 23 2 316 2 269 1 182 1 101 2 178 1 
216 1 27 1 28 1 245 1 248 1 135 1 32 1 53 1 305 1 110 1 254 1 10 1 324 1 203 1 208 1 207 1 309 1 348 1 171 1 172 2 212 1 23 1 316 1 100 1 330 1 101 1 
362 1 
104 2 242 1 51 2 249 1 301 1 197 5 338 2 54 1 340 1 159 1 254 1 258 2 11 1 201 1 164 2 58 1 167 2 115 1 260 1 204 1 208 2 116 1 169 3 60 6 16 1 349 2 350 1 18 1 22 1 122 1 268 1 128 1 273 1 71 5 356 1 27 2 72 1 217 4 220 1 221 2 132 1 135 2 224 2 32 1 37 2 139 1 86 1 322 2 88 1 286 2 146 1 371 2 149 1 94 1 189 1 
104 1 71 3 217 2 301 1 197 3 340 1 159 1 86 1 11 1 88 1 58 1 204 1 116 1 169 1 60 2 16 1 94 1 189 1 18 1 22 1 122 1 102 1 
242 1 71 3 217 3 301 1 197 3 340 1 159 1 86 1 322 1 11 1 88 1 58 1 204 1 167 1 116 1 169 1 60 1 16 1 94 1 189 1 18 1 22 1 122 1 102 1 
104 1 242 1 71 3 217 3 301 1 197 3 224 1 340 1 159 1 86 1 322 1 11 1 88 1 58 1 204 1 167 1 116 1 169 1 60 2 16 1 94 1 189 1 18 1 22 1 122 1 102 1 
104 4 242 5 51 1 301 1 197 5 340 1 54 1 159 1 161 1 162 1 258 2 11 1 164 2 58 1 204 1 167 5 260 1 116 1 169 3 168 1 60 7 16 1 349 2 18 1 22 1 122 1 128 1 273 1 71 5 356 1 217 6 221 2 224 4 37 1 364 1 86 1 322 4 88 1 285 1 146 1 371 2 94 1 189 1 102 1 
104 2 242 1 51 1 301 1 197 4 340 1 54 1 159 1 258 2 11 1 164 2 201 1 58 1 204 1 260 1 167 2 116 1 169 2 60 4 16 1 349 2 18 1 22 1 122 1 128 1 273 1 71 4 356 1 217 4 221 2 224 2 37 1 86 1 322 2 88 1 146 1 286 2 371 2 94 1 189 1 
128 1 273 1 104 2 242 1 71 4 356 1 217 4 51 1 221 2 301 1 197 4 224 2 54 1 340 1 37 1 159 1 364 1 86 1 162 1 322 2 258 2 11 1 88 1 164 2 58 1 167 1 260 1 204 1 116 1 169 2 168 1 60 4 146 1 371 2 16 1 349 2 94 1 189 1 18 1 22 1 122 1 
128 1 273 1 104 2 242 1 71 4 356 1 217 4 51 1 221 2 301 1 197 4 224 2 54 1 340 1 37 1 159 1 364 1 86 1 162 1 322 2 258 2 11 1 88 1 164 2 58 1 167 1 260 1 204 1 116 1 169 2 168 1 60 4 146 1 371 2 16 1 349 2 94 1 189 1 18 1 22 1 122 1 
128 1 273 1 104 2 242 1 71 4 217 4 335 1 51 1 221 2 301 1 197 4 224 2 54 1 340 1 37 1 159 1 364 1 142 2 86 1 322 2 323 1 11 1 88 1 58 1 167 1 260 1 204 1 230 1 116 1 169 2 60 4 61 2 286 2 146 1 16 1 349 2 94 1 189 1 18 1 22 1 122 1 
128 1 273 1 104 3 242 1 71 4 356 1 217 5 51 1 221 2 301 1 197 4 224 3 54 1 340 1 37 1 159 1 364 1 86 1 162 1 322 3 258 2 11 1 88 1 164 2 285 1 58 1 167 1 260 1 204 1 116 1 169 2 168 1 146 1 60 5 371 2 16 1 349 2 94 1 189 1 18 1 22 1 122 1 
128 1 273 1 104 3 242 1 71 4 356 1 217 5 51 1 221 2 301 1 197 4 224 3 54 1 340 1 37 1 159 1 364 1 86 1 162 1 322 3 258 2 11 1 88 1 164 2 285 1 58 1 167 1 260 1 204 1 116 1 169 2 168 1 146 1 60 5 371 2 16 1 349 2 94 1 189 1 18 1 22 1 122 1 
128 1 273 1 104 2 242 1 71 4 217 4 335 1 51 1 221 2 301 1 197 4 224 2 54 1 340 1 37 1 159 1 142 2 86 1 322 2 11 1 88 1 201 1 58 1 167 1 260 1 204 1 116 1 169 2 60 4 61 2 286 2 146 1 16 1 349 2 94 1 189 1 18 1 22 1 122 1 
298 1 1 2 299 1 300 1 29 2 360 1 196 1 361 1 52 3 337 1 251 1 5 3 33 1 307 1 166 1 42 1 351 1 95 2 45 1 120 6 126 2 270 1 294 1 271 1 127 1 317 1 
129 2 297 1 354 1 1 2 299 2 300 2 29 4 196 2 360 4 361 2 279 2 52 8 5 6 33 11 280 3 87 1 284 1 114 1 264 1 42 1 328 1 95 1 234 1 120 14 292 1 293 3 126 1 270 2 294 2 176 1 177 1 271 1 317 11 
27 1 299 1 72 1 106 1 300 1 30 1 29 2 360 1 196 1 361 1 52 1 135 1 338 1 32 1 5 1 252 1 36 1 254 1 86 2 366 1 184 1 204 1 206 1 208 1 149 1 16 2 263 1 264 1 267 1 95 1 235 1 120 2 175 1 294 1 214 1 271 1 177 1 176 1 
332 1 1 8 299 3 300 3 106 2 157 1 196 3 52 10 337 1 338 1 5 10 252 2 110 1 254 2 256 2 307 1 166 1 204 1 114 4 208 3 206 2 16 3 264 1 263 2 351 1 265 2 65 2 120 20 126 4 175 1 270 3 127 1 176 1 177 1 271 3 317 7 129 2 27 3 72 2 29 6 30 1 360 7 361 3 279 2 77 2 135 3 85 1 32 2 33 7 366 1 86 3 40 2 284 2 149 2 42 3 95 2 45 1 235 1 294 3 
298 1 27 7 299 2 300 2 72 2 30 1 29 4 196 2 220 1 361 2 31 1 52 1 135 8 338 2 226 1 32 2 5 1 110 1 254 2 139 1 86 1 366 1 283 1 369 1 41 2 204 1 208 8 149 3 16 1 290 1 120 2 175 1 237 1 294 2 69 1 153 1 271 2 176 1 177 1 
129 1 1 1 299 1 300 1 195 1 29 2 360 1 196 1 361 1 279 1 52 1 336 1 5 2 33 1 366 1 86 1 284 1 204 1 16 1 264 1 42 1 20 1 120 3 126 1 175 1 270 1 294 1 317 1 271 1 
298 1 1 1 275 1 299 1 114 1 300 1 29 2 360 1 196 1 361 1 279 1 52 2 33 1 120 2 270 1 294 1 317 1 271 1 
284 1 298 1 1 1 299 1 300 1 29 2 360 1 196 1 361 1 42 1 5 2 33 1 120 2 126 1 329 1 294 1 317 1 271 1 
129 1 298 1 1 2 299 1 300 1 29 2 196 1 360 2 279 1 361 1 52 2 5 2 33 2 284 1 114 1 42 1 120 4 126 1 270 1 294 1 271 1 317 2 
1 1 275 1 299 1 114 1 300 1 29 2 360 1 196 1 361 1 279 1 52 2 33 1 290 1 120 2 270 1 294 1 317 1 271 1 
284 1 1 1 299 1 300 1 29 2 360 1 196 1 361 1 42 1 5 2 33 1 290 1 120 2 126 1 329 1 294 1 317 1 271 1 
129 1 1 2 299 1 300 1 29 2 196 1 360 2 279 1 361 1 52 2 5 2 33 2 284 1 114 1 42 1 290 1 120 4 126 1 270 1 294 1 271 1 317 2 
284 1 129 1 1 2 299 1 114 1 300 1 29 2 360 2 196 1 361 1 279 1 42 1 52 2 5 2 33 2 120 4 126 1 270 1 294 1 317 2 271 1 
27 1 299 1 72 1 106 1 300 1 29 2 196 1 361 1 52 1 135 1 338 1 32 1 5 1 252 1 254 1 40 1 86 1 206 1 208 1 149 1 16 1 263 1 95 1 120 2 294 1 176 1 271 1 177 1 
296 1 130 1 27 1 299 1 72 1 106 1 300 1 29 2 196 1 361 1 52 1 135 1 338 1 32 1 5 1 252 1 254 1 86 1 228 1 208 1 149 1 16 1 95 1 120 2 294 1 176 1 271 1 177 1 
129 1 1 2 299 1 300 1 29 2 196 1 360 2 279 1 361 1 52 2 5 2 33 2 284 1 114 1 264 1 42 1 120 4 126 1 270 1 294 1 271 1 317 2 
129 1 1 2 27 1 299 1 106 1 72 1 300 1 29 2 360 2 196 1 279 1 361 1 52 2 135 1 5 2 32 1 33 2 252 1 254 1 40 1 86 1 284 1 114 1 206 1 208 1 149 1 16 1 42 1 263 1 65 1 120 4 126 1 270 1 294 1 317 2 153 1 271 1 
129 1 1 1 299 1 300 1 29 2 196 1 360 1 361 1 279 1 52 2 336 1 5 1 33 1 366 1 86 1 284 1 370 1 114 1 204 1 16 1 42 1 264 1 20 1 120 3 175 1 270 1 294 1 271 1 317 1 
243 1 1 7 299 3 300 3 156 1 52 20 198 1 337 1 5 21 339 1 307 1 114 4 166 1 117 1 209 1 262 4 351 1 120 41 126 3 270 5 127 1 179 1 129 4 353 1 354 1 74 1 29 6 359 1 279 4 361 3 280 3 321 1 39 2 141 1 284 4 148 1 150 1 42 5 327 1 328 3 45 1 293 4 294 3 
243 1 1 7 299 4 156 1 300 4 52 20 198 1 337 1 5 18 339 2 307 1 114 3 166 1 117 1 209 1 262 4 351 1 120 38 126 4 270 5 127 1 179 1 129 4 353 1 354 1 74 1 29 8 359 1 279 4 361 4 280 3 321 1 39 2 141 1 284 3 148 1 150 1 42 4 327 1 328 3 45 1 293 4 294 4 
179 1 129 6 353 1 243 1 354 2 1 12 299 2 300 2 29 4 359 1 361 2 279 6 52 23 337 1 198 1 339 1 5 21 280 4 321 1 39 1 141 1 87 2 284 6 307 1 166 1 114 6 148 1 117 1 209 1 262 2 150 1 327 1 42 7 328 2 351 1 45 1 120 44 293 4 126 6 270 7 294 2 127 1 
129 3 354 1 1 6 299 2 300 2 74 1 29 4 359 1 361 2 279 3 52 9 5 10 280 1 321 2 39 1 141 1 284 3 114 3 145 1 117 1 209 1 262 2 150 1 42 3 328 1 120 19 293 2 126 3 270 3 294 2 
179 1 129 3 353 1 243 1 1 3 299 3 300 3 29 6 359 1 361 3 279 3 52 14 198 1 339 2 5 12 280 2 321 1 39 2 141 1 284 2 114 2 148 1 117 2 209 1 262 4 150 1 42 2 327 1 328 2 120 26 293 2 126 1 270 3 294 3 
80 1 250 1 239 1 225 1 57 1 357 1 180 1 278 1 131 1 63 1 
222 1 48 1 
239 1 225 1 358 1 357 1 92 1 188 1 180 1 278 1 131 1 
240 1 374 1 
244 1 288 1 76 1 
239 1 238 2 71 1 57 1 357 1 167 1 277 1 2 1 131 1 278 1 180 1 3 1 80 1 250 1 197 1 78 1 225 1 352 1 
239 1 238 2 71 1 57 1 357 1 167 1 277 1 2 1 131 1 278 1 180 1 3 1 80 1 250 1 197 1 78 1 225 1 352 1 
239 1 238 2 71 1 57 1 357 1 167 1 277 1 2 1 131 1 278 1 180 1 3 1 80 1 250 1 197 1 78 1 225 1 352 1 
240 1 374 1 76 1 
240 1 374 1 76 1 
244 1 288 1 
244 1 288 1 76 1 
174 1 363 1 
239 1 238 1 48 1 71 1 357 1 180 1 278 1 131 1 219 1 3 1 363 1 78 1 197 1 134 1 222 1 225 1 86 2 366 2 204 2 147 1 16 2 189 1 64 1 95 1 233 1 46 1 174 1 24 1 175 2 
295 1 276 1 299 1 27 2 72 1 300 1 29 2 196 1 361 1 52 1 135 2 302 1 32 1 5 1 254 1 86 2 369 1 55 1 41 2 204 2 208 2 149 1 16 2 264 1 120 2 314 1 294 1 69 1 271 1 176 1 177 1 
216 1 203 1 27 2 202 1 28 1 207 1 208 2 248 1 171 1 135 2 172 2 32 1 316 1 110 1 97 1 254 1 124 1 330 1 153 1 
216 1 203 1 27 1 28 1 207 1 208 1 248 1 171 1 135 1 172 2 32 1 372 1 316 1 110 1 97 1 254 1 330 1 
135 1 338 1 202 1 27 1 316 1 208 1 306 1 182 1 
216 1 203 1 27 1 202 1 28 1 207 1 208 1 248 1 171 1 135 1 172 2 32 1 316 1 110 1 97 1 254 1 124 1 330 1 
342 1 
251 1 242 1 186 1 167 1 37 1 51 1 15 1 
128 1 273 1 258 1 242 1 71 1 164 1 356 1 167 2 260 1 169 1 60 1 286 1 146 1 51 1 371 1 197 1 37 1 
128 1 273 1 113 1 27 1 72 1 106 1 260 1 208 1 146 1 149 2 62 1 232 1 135 1 311 1 338 1 32 1 254 2 
128 2 179 1 273 2 129 2 353 1 242 1 243 1 71 1 51 4 279 2 197 1 198 1 280 1 160 5 37 7 284 2 260 2 167 4 169 1 347 1 60 1 286 6 146 2 371 3 327 1 42 2 328 1 119 5 210 1 293 1 270 2 
128 1 273 1 26 1 71 1 75 1 51 2 133 1 197 1 337 1 336 1 35 1 37 2 183 1 86 1 366 1 260 1 204 1 347 2 168 1 146 1 16 1 42 1 189 1 351 1 270 2 175 1 236 1 127 1 
128 1 273 1 186 1 242 1 260 1 167 1 146 1 15 1 51 1 37 1 
129 2 284 2 167 5 347 2 286 10 51 5 371 5 279 2 42 2 119 5 160 5 37 5 256 1 270 2 183 1 
197 1 242 1 71 1 167 1 169 1 60 1 
128 2 273 1 71 3 27 4 72 1 51 2 220 1 249 1 132 2 197 3 135 4 338 2 6 1 32 1 37 2 254 1 139 1 165 1 231 1 260 2 115 2 208 4 169 2 146 2 60 4 149 1 170 1 291 2 268 1 
299 1 27 1 300 1 106 1 72 1 29 2 196 1 181 1 361 1 133 1 336 2 135 1 338 1 5 1 32 1 252 1 254 1 86 3 366 2 40 1 204 2 208 1 206 1 149 1 16 3 263 1 95 1 120 1 175 2 294 1 177 1 271 1 
128 1 273 1 242 2 166 1 260 1 167 4 115 1 286 4 146 1 371 2 51 2 132 1 119 2 160 2 37 1 
225 1 56 1 180 1 
225 1 180 1 363 1 
225 1 56 1 180 1 
225 1 56 1 180 1 
331 1 225 1 180 1 
331 1 225 1 180 1 
331 1 225 1 180 1 
225 1 180 1 
357 1 278 1 
1 2 299 1 300 1 29 2 359 1 361 1 52 4 198 1 337 1 5 4 280 1 307 1 166 1 42 1 328 1 351 1 45 1 120 8 293 1 126 2 270 1 294 1 127 1 
129 1 354 1 1 3 299 2 300 2 29 4 359 1 247 1 361 2 279 1 52 6 337 1 198 1 5 5 280 1 307 1 166 1 114 1 42 1 328 1 351 1 45 1 120 11 293 2 126 2 270 2 294 2 127 1 
179 1 129 2 353 1 243 1 1 2 299 3 300 3 29 6 247 1 359 1 361 3 279 2 52 6 198 1 5 7 339 1 280 1 284 2 114 1 327 1 42 2 328 1 120 13 293 1 126 1 270 2 294 3 
179 1 129 2 353 1 243 1 1 2 299 3 300 3 29 6 247 1 359 1 361 3 279 2 52 7 198 1 339 1 5 4 280 1 284 1 114 1 327 1 42 1 328 1 120 11 293 1 126 1 270 2 294 3 
1 2 299 1 300 1 29 2 359 1 361 1 52 4 198 1 337 1 5 4 280 1 307 1 166 1 42 1 328 1 351 1 45 1 120 8 293 1 126 2 270 1 294 1 127 1 
179 1 129 2 353 1 243 1 1 2 299 1 300 1 29 2 359 1 361 1 279 2 52 6 198 1 5 6 280 1 284 2 114 1 327 1 42 2 328 1 120 12 293 1 126 1 270 2 294 1 
179 1 129 2 353 1 243 1 1 2 299 4 300 4 29 8 247 1 359 1 361 4 279 2 52 7 198 1 5 5 339 2 280 1 284 1 114 1 327 1 42 1 328 1 120 12 293 1 126 1 270 2 294 4 
179 1 129 2 353 1 243 1 1 4 299 4 300 4 74 1 29 8 359 1 361 4 279 2 52 7 198 1 5 5 339 2 280 1 284 1 114 2 327 1 42 1 328 1 120 12 293 1 126 2 270 2 294 4 
1 6 307 1 114 3 42 1 52 3 337 1 351 3 5 4 45 2 120 7 126 3 270 1 127 3 
179 1 129 2 353 1 243 1 1 2 299 4 300 4 74 1 29 8 359 1 361 4 279 2 52 7 198 1 5 5 339 2 280 1 284 1 114 1 327 1 42 1 328 1 120 12 293 1 126 1 270 2 294 4 
1 3 299 2 307 1 166 1 114 1 300 2 29 4 361 2 42 1 52 4 337 1 351 1 5 4 339 1 45 1 120 8 126 2 270 1 294 2 127 1 
337 1 351 1 251 1 5 3 45 1 120 6 1 2 307 1 166 1 126 2 270 1 127 1 42 1 52 3 
284 1 129 1 1 2 299 1 300 1 114 1 29 2 247 1 361 1 279 1 42 1 52 2 5 2 120 4 126 1 270 1 294 1 
284 1 129 1 354 1 1 2 114 1 279 1 42 1 52 3 328 1 5 4 280 1 120 7 293 2 126 1 270 1 
129 2 354 1 297 1 1 9 299 2 300 2 29 4 279 2 361 2 52 11 337 1 5 12 339 2 280 2 284 2 87 1 307 1 166 1 114 4 42 3 351 2 45 1 120 23 213 1 293 2 126 5 270 3 294 2 127 2 
5 1 120 1 293 1 
280 1 120 1 52 1 
129 1 284 1 1 3 299 1 300 1 114 1 29 2 247 1 361 1 279 1 52 3 42 1 5 3 120 6 126 2 256 1 270 1 294 1 
179 1 129 2 353 1 243 1 1 2 299 1 300 1 29 2 359 1 361 1 279 2 52 6 198 1 5 6 280 1 284 2 114 1 327 1 42 2 328 1 120 12 293 1 126 1 270 2 294 1 
1 2 114 1 52 3 42 1 337 1 351 1 5 3 120 6 126 1 270 1 127 1 
1 2 299 1 307 1 114 1 300 1 29 2 361 1 52 1 351 1 5 2 339 1 45 1 213 1 120 3 126 1 294 1 127 1 
26 1 1 5 299 1 300 1 114 2 29 2 359 1 361 1 52 5 42 2 337 1 351 2 5 5 120 10 126 3 270 2 294 1 127 2 
1 1 299 1 300 1 114 1 29 2 359 1 361 1 279 1 52 2 120 2 270 1 294 1 
284 1 129 1 1 2 299 1 300 1 114 1 29 2 359 1 361 1 279 1 42 1 52 2 5 2 120 4 126 1 270 1 294 1 
1 2 299 3 300 3 114 1 74 1 29 6 359 1 361 3 52 1 351 1 339 1 5 2 213 1 120 3 126 1 294 3 127 1 
129 3 354 1 1 12 299 5 300 5 74 1 29 10 247 1 359 1 361 5 279 3 52 16 337 2 339 2 223 1 5 18 280 3 284 3 307 1 166 1 325 1 114 5 42 5 328 1 351 3 45 1 213 1 120 34 293 4 47 1 126 7 270 5 294 5 127 3 
18 1 95 1 304 1 204 1 105 1 16 1 86 1 
241 1 143 1 14 1 105 1 204 1 320 1 16 1 107 1 18 1 95 1 304 1 86 1 
135 1 338 1 251 1 32 1 27 1 72 1 208 1 254 1 139 1 149 1 220 1 
27 1 72 1 106 1 204 1 208 1 206 1 30 1 149 1 16 2 135 1 338 1 95 1 32 1 252 1 254 1 175 1 366 1 86 2 
27 1 106 2 72 2 30 1 135 1 32 1 7 1 252 1 254 1 86 2 366 1 11 1 204 2 206 1 208 1 149 3 16 2 189 1 95 1 291 1 122 1 175 2 318 1 
27 2 106 2 72 2 30 1 135 2 32 1 7 1 199 1 252 1 254 1 86 2 366 1 228 1 11 1 204 2 208 2 149 3 16 2 189 1 95 1 291 1 122 1 175 2 318 1 
242 1 71 2 27 3 73 1 106 1 72 1 197 2 135 3 338 1 32 1 7 1 199 1 254 1 344 1 167 1 208 3 60 1 149 4 232 1 289 1 22 1 291 1 318 1 
242 1 71 2 344 1 27 3 167 1 72 1 106 1 208 3 60 1 149 4 232 1 197 2 135 3 338 1 32 1 22 1 7 1 199 1 291 1 254 1 68 1 318 1 
135 1 32 1 27 1 208 1 254 1 237 1 
259 1 41 1 27 6 106 1 72 2 208 7 62 1 149 3 31 1 310 1 135 7 338 2 226 1 32 2 191 1 110 1 254 3 237 1 69 1 153 1 283 1 
295 1 1 2 299 2 300 2 106 1 196 2 52 3 337 1 5 3 252 1 254 1 307 1 204 1 166 1 206 1 208 1 16 2 263 1 264 1 351 1 65 1 120 6 126 2 175 1 270 1 271 2 127 1 317 1 27 1 72 1 29 4 30 1 360 1 361 2 77 1 135 1 32 1 33 1 40 1 366 1 86 2 149 1 42 1 95 2 45 1 294 2 153 1 
128 2 273 2 242 1 71 3 27 1 51 1 197 3 135 1 338 1 84 1 137 1 37 1 186 1 344 1 165 1 167 1 260 2 208 1 169 1 146 2 60 2 15 1 287 1 149 2 232 1 22 1 46 1 68 1 
344 1 113 1 27 2 106 1 72 1 208 2 62 1 149 2 135 2 32 1 254 2 237 1 153 1 
27 4 308 1 72 1 208 4 220 1 149 1 135 4 338 1 32 1 199 1 254 1 139 1 153 1 
0 1 27 2 106 1 72 1 208 2 157 1 149 1 310 1 135 2 303 1 32 1 291 1 191 1 254 2 
135 1 338 1 172 1 32 1 203 1 27 1 28 1 208 1 254 1 248 1 
135 2 32 1 314 1 27 2 72 1 110 1 208 2 254 1 149 1 69 1 153 1 
27 4 308 1 72 2 208 5 220 1 149 3 31 1 135 5 338 1 32 2 291 1 139 1 254 2 153 1 69 1 283 1 
257 1 27 4 308 1 72 2 208 5 220 1 149 3 31 1 135 5 338 1 32 2 291 1 139 1 254 2 153 1 69 1 
228 1 27 1 72 1 106 1 204 1 208 1 30 1 149 1 16 2 135 1 338 1 95 1 32 1 252 1 254 1 175 1 366 1 86 2 
259 1 27 1 106 1 72 1 208 1 62 1 149 1 310 1 135 1 32 1 191 1 291 1 254 2 
12 1 55 1 276 1 204 1 91 2 16 1 189 1 64 1 302 1 95 1 312 1 86 1 
242 1 71 2 276 1 75 1 133 1 336 1 197 2 302 1 35 1 253 1 255 1 366 1 86 2 11 1 12 1 55 1 58 1 167 1 204 2 91 2 16 2 189 2 312 1 22 1 46 1 122 1 98 1 99 1 175 1 236 1 
12 1 312 1 
91 1 98 1 253 1 
251 1 21 1 313 1 333 1 
324 1 21 1 313 1 305 1 212 1 333 1 309 1 
324 1 23 1 101 1 
229 1 324 3 343 1 187 1 59 2 333 1 309 3 21 1 313 1 212 1 305 1 100 1 
151 1 185 1 324 2 21 1 313 1 305 1 212 1 333 1 309 2 
324 1 155 1 216 1 28 1 309 1 172 1 212 1 305 1 313 1 100 1 140 1 
324 1 313 1 305 1 212 1 333 1 100 1 309 1 
324 1 21 1 305 1 212 1 333 2 100 1 309 1 
324 2 333 1 309 2 4 1 313 1 212 2 305 2 315 1 100 1 111 1 
324 3 154 1 333 1 50 1 309 3 151 2 21 1 212 1 305 1 313 2 100 1 25 1 140 1 
324 2 203 1 216 1 28 1 207 1 333 1 158 1 309 2 151 1 21 1 172 2 313 1 212 1 305 1 100 1 
185 1 324 4 194 1 154 1 333 1 309 4 151 2 21 1 212 2 305 2 313 2 100 1 140 1 
324 1 21 1 313 1 305 1 212 1 333 1 100 1 309 1 
229 1 324 4 154 1 187 1 59 1 333 2 309 4 151 2 21 2 212 1 305 1 313 3 140 1 200 1 
324 2 205 1 333 1 309 2 151 1 136 1 190 1 21 1 313 1 212 1 305 1 100 1 
229 1 324 3 187 2 346 1 59 2 333 1 309 3 21 1 313 1 212 1 305 1 100 1 
19 1 313 1 345 1 
112 1 324 1 305 1 212 1 100 1 309 1 
151 1 324 2 21 1 313 1 305 1 212 1 333 1 100 1 50 1 309 2 
215 1 
324 1 21 1 313 1 305 1 212 1 333 1 100 1 309 1 
151 1 324 3 21 1 313 1 305 1 212 1 59 1 333 1 100 1 50 1 309 3 
154 1 313 1 140 1 200 1 
313 1 333 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 343 183 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 211 370 128 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 211 370 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 211 370 128 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 211 370 128 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 211 370 128 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 343 183 62 349 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 46 267 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 265 1 2 1 23 9 299 2 78 4 52 1 306 2 361 1 217 1 122 2 233 6 341 1 126 1 236 1 9 2 281 1 11 1 90 1 132 1 136 9 158 1 345 3 318 2 184 2 319 1 241 2 39 5 
71 1 265 1 2 1 23 9 299 2 78 4 52 1 306 2 361 1 217 1 233 6 122 2 341 1 126 1 236 1 9 2 281 1 11 1 90 1 132 1 136 9 158 1 345 3 318 2 184 2 319 1 241 2 39 5 
71 1 265 1 2 1 23 10 299 2 78 5 52 1 306 2 361 1 217 1 233 7 122 2 341 1 126 1 236 1 9 2 281 1 11 1 90 1 132 1 136 10 158 1 345 4 318 2 184 2 319 1 241 2 39 6 
71 1 265 1 2 1 23 7 299 2 78 3 52 1 306 2 361 1 217 1 233 4 122 1 341 1 126 1 236 1 9 2 281 1 11 1 132 1 136 7 158 1 345 2 318 2 184 2 319 1 241 2 39 4 
122 2 233 3 341 1 9 1 281 1 2 1 90 1 136 4 23 4 158 1 345 1 184 1 318 1 78 2 241 1 52 1 39 3 306 1 
126 1 341 1 152 1 9 1 281 1 180 1 136 2 23 2 299 1 318 1 184 1 319 1 241 1 215 1 39 1 52 1 
233 1 341 1 236 1 9 2 281 1 136 3 23 3 299 1 345 1 78 1 241 2 52 1 39 2 
265 1 2 1 23 9 248 1 299 1 78 4 52 1 306 1 217 1 233 7 122 2 236 1 341 1 9 2 281 1 131 1 90 1 136 9 158 1 345 3 318 1 184 1 241 2 39 5 
265 1 2 1 23 9 248 1 299 1 78 4 52 1 306 1 217 1 233 7 122 2 236 1 341 1 9 2 281 1 131 1 90 1 136 9 158 1 345 3 318 1 184 1 241 2 39 5 
116 1 163 1 200 1 
200 1 337 2 323 1 
264 2 187 2 223 1 369 2 127 1 293 2 373 2 169 2 
70 1 264 2 187 3 110 1 73 2 293 2 111 1 112 1 22 1 169 2 296 1 146 1 191 1 115 1 26 1 333 1 4 1 360 1 276 2 54 1 127 1 6 2 308 1 282 1 220 1 135 1 134 2 222 1 159 1 240 1 223 1 369 2 225 1 351 2 373 3 201 1 322 1 
264 1 187 1 141 1 369 1 127 1 266 1 293 1 373 1 186 1 169 1 
41 1 187 1 142 1 177 1 331 1 169 1 258 1 116 1 371 1 200 1 373 1 273 1 263 1 186 1 
264 1 187 1 142 1 177 1 293 1 169 1 258 1 369 1 116 1 371 1 200 1 373 1 263 2 273 2 186 1 
86 1 193 1 137 1 263 1 273 1 
85 1 277 1 86 1 137 1 116 1 200 1 263 2 273 2 
86 1 263 1 273 1 
264 1 352 1 187 1 141 1 127 1 266 1 293 1 169 1 137 1 369 1 373 1 273 1 263 1 186 1 
200 1 
85 1 24 1 86 1 137 1 116 1 200 1 263 2 273 2 
105 1 85 1 0 1 86 2 254 1 329 1 153 1 269 1 316 2 356 1 137 2 114 2 116 1 286 1 200 1 320 1 104 2 273 5 263 5 
223 1 163 1 
264 1 187 2 89 1 293 1 169 2 221 1 369 1 223 2 373 2 
284 1 214 1 245 1 
187 1 6 1 73 1 112 1 220 1 134 1 146 1 222 1 159 1 191 1 332 1 223 1 26 1 373 1 4 1 201 1 
264 1 187 2 6 1 167 1 73 1 112 1 220 1 133 1 169 1 134 1 146 1 222 1 191 1 159 1 369 1 26 1 214 1 373 2 4 1 201 1 
264 4 187 5 56 1 167 2 293 1 331 1 133 1 169 5 221 1 369 4 223 1 83 1 117 1 373 5 
264 2 187 2 141 1 369 2 250 1 373 2 186 1 169 2 
264 3 187 3 223 1 369 3 167 1 293 1 373 3 169 3 
264 1 187 1 141 1 369 1 373 1 186 1 169 1 
264 1 187 1 369 1 89 1 293 1 373 1 186 1 169 1 221 1 
264 3 187 4 142 1 110 1 167 1 73 1 293 2 111 1 112 1 22 1 169 3 296 1 146 1 191 1 26 1 333 1 4 1 273 1 276 1 54 1 176 1 127 1 6 1 363 1 177 1 308 1 282 1 220 1 133 1 221 1 134 1 258 1 222 1 159 1 240 1 223 1 369 3 225 1 371 1 351 2 373 4 263 1 201 1 186 1 
264 1 187 2 223 1 369 1 56 1 167 1 331 1 373 2 169 2 
264 3 187 3 142 1 177 1 363 1 167 2 293 1 133 1 221 1 169 3 258 1 369 3 161 1 371 1 200 1 373 3 263 1 273 1 186 1 
264 2 187 2 167 1 293 1 221 1 169 2 369 2 214 1 373 2 245 1 
187 1 6 1 73 1 112 1 220 1 134 1 146 1 222 1 159 1 191 1 223 1 26 1 373 1 4 1 201 1 
187 1 6 1 73 1 112 1 178 1 220 1 134 1 146 1 222 1 191 1 223 1 348 1 373 1 4 1 201 1 
70 1 289 1 294 1 111 1 168 1 296 1 297 1 302 1 333 1 214 1 28 1 174 1 276 3 55 1 87 1 343 1 308 1 282 1 32 1 284 1 240 2 225 1 351 2 245 1 
264 1 187 1 369 1 142 1 250 1 373 1 186 1 169 1 
100 1 365 1 
100 1 365 1 
207 1 260 1 
207 1 260 1 
207 1 260 1 
100 1 271 1 365 1 
100 1 271 1 365 1 
106 1 100 1 365 1 
48 1 100 2 207 1 260 1 365 2 238 1 
100 1 271 1 365 1 
100 1 365 1 45 1 
100 1 365 1 45 1 
100 1 365 1 45 1 
69 1 264 2 106 1 187 2 107 1 72 1 169 2 273 1 339 1 192 1 100 1 219 1 342 1 10 1 365 1 285 1 223 1 369 2 93 1 224 1 199 1 242 1 373 2 263 1 
150 1 69 2 100 2 219 2 107 2 279 1 42 1 365 2 48 1 285 1 367 1 93 2 199 3 226 1 200 1 273 2 263 2 338 1 232 2 
184 1 318 1 306 1 
184 1 318 1 215 1 
318 3 98 1 164 1 227 1 215 1 306 2 
318 2 98 1 164 1 243 1 215 1 306 1 
318 2 98 1 164 2 215 1 306 1 
105 1 19 1 327 2 72 1 294 1 96 1 356 3 114 1 116 1 302 1 336 1 337 1 118 1 273 5 120 1 5 1 85 1 86 1 254 1 87 1 342 1 343 1 366 1 183 1 316 1 137 4 224 1 372 1 104 1 200 1 263 5 
105 3 19 2 353 1 294 3 96 3 356 8 114 2 116 1 302 3 249 1 81 1 252 1 337 3 273 9 120 1 5 2 85 1 86 6 193 5 254 1 87 3 342 4 343 3 366 3 183 3 316 2 137 7 347 1 162 5 320 1 200 2 104 2 263 9 140 1 
105 1 19 1 327 1 294 1 356 3 96 1 114 1 116 1 302 1 336 1 337 2 118 1 273 3 5 1 342 1 87 1 343 1 366 1 183 1 316 1 137 2 200 2 104 1 320 1 263 3 323 1 
105 2 19 1 353 1 327 2 294 2 96 2 356 5 114 1 116 1 302 2 252 1 336 1 337 3 273 4 118 1 5 1 87 2 342 2 343 2 366 2 183 2 316 1 137 3 347 1 200 2 104 1 320 1 263 4 323 1 
222 1 163 1 311 1 
222 1 97 1 
165 1 
222 1 191 1 201 1 
222 1 156 1 
222 1 201 1 
222 3 191 1 256 1 311 2 303 1 201 1 
70 3 276 4 234 1 55 2 290 1 43 1 8 1 294 1 354 1 59 2 46 1 170 1 240 1 212 1 28 3 321 1 
70 3 276 4 234 1 55 2 290 1 43 1 8 1 294 1 354 1 59 2 46 1 170 1 240 1 212 1 28 3 321 1 
70 3 276 4 234 1 55 2 290 1 43 1 8 1 294 1 354 1 59 2 46 1 170 1 240 1 102 1 212 1 28 3 321 1 
70 12 290 1 205 1 43 2 294 4 111 1 354 2 46 1 209 4 170 2 75 1 301 1 302 3 333 1 212 1 28 6 234 1 276 25 124 1 55 4 87 3 8 2 343 3 308 1 282 1 154 1 59 3 183 3 259 1 240 13 196 1 64 3 351 2 321 2 
70 4 290 1 43 1 294 1 111 2 354 1 46 1 170 1 333 2 28 4 119 1 362 1 276 6 234 1 55 3 8 1 308 2 282 2 59 2 259 1 240 2 351 4 321 1 
73 1 145 1 23 2 74 1 146 1 298 1 299 1 251 1 215 1 274 1 52 1 306 1 30 1 233 1 121 1 341 1 6 1 7 1 9 1 281 1 220 1 134 1 136 2 315 1 184 1 318 2 195 1 241 1 227 1 39 1 
73 1 145 1 113 1 23 3 74 1 146 1 298 1 299 1 251 1 215 1 274 1 52 1 306 1 233 2 121 1 6 1 7 1 9 1 237 1 281 1 220 1 134 1 136 3 315 1 184 1 318 2 350 1 241 1 227 1 39 1 
73 1 145 1 113 1 23 2 74 1 146 1 299 1 251 1 215 1 274 1 52 1 306 1 233 2 6 1 7 1 237 1 281 1 220 1 134 1 136 2 315 1 318 2 184 1 227 1 39 1 
204 1 230 1 73 1 112 1 145 2 23 1 146 1 299 2 251 2 274 2 6 1 9 1 220 1 33 1 134 1 12 1 136 1 222 1 350 1 241 1 18 1 201 1 324 1 
73 1 145 1 23 1 74 1 146 1 298 1 299 1 251 1 215 1 274 1 306 1 121 1 341 1 6 1 7 1 9 1 237 1 220 1 134 1 136 1 315 1 184 1 318 2 195 1 241 1 227 1 
287 1 
41 1 187 1 230 1 143 1 142 1 331 1 47 2 146 1 95 1 149 1 334 1 99 4 337 2 273 5 101 1 6 2 13 1 200 2 104 1 201 1 18 1 246 2 105 2 19 1 108 2 73 2 247 1 112 2 169 1 300 2 76 2 356 2 114 1 116 1 359 1 213 2 85 3 86 6 254 1 177 1 130 1 220 1 134 2 258 1 316 1 222 1 317 1 37 1 261 2 371 1 373 1 263 5 228 1 186 1 323 2 
41 1 85 1 86 2 187 1 108 1 142 1 177 1 130 1 331 1 169 1 258 1 24 1 37 1 359 1 99 2 334 1 371 1 373 1 228 1 273 3 263 3 186 1 
41 1 187 1 142 1 331 1 169 1 24 1 116 1 359 1 334 1 99 3 273 3 85 1 86 1 177 1 130 1 258 1 37 1 261 1 371 1 373 1 200 1 263 3 228 1 186 1 
41 1 85 1 86 2 187 1 108 1 142 1 177 1 130 1 331 1 169 1 258 1 24 1 37 1 116 1 359 1 261 1 99 3 334 1 213 1 371 1 200 1 373 1 228 1 273 3 263 3 186 1 
41 1 187 1 142 1 331 1 268 1 47 2 99 6 334 1 149 1 273 5 101 1 200 5 104 1 246 2 105 1 108 4 169 1 24 1 300 2 356 1 76 2 114 1 116 5 359 1 213 4 85 3 86 7 254 1 177 1 130 1 310 1 313 1 179 1 34 1 258 1 316 1 37 1 261 4 371 1 373 1 228 1 263 5 186 1 323 2 
41 1 187 1 142 1 331 1 47 2 95 1 99 4 334 1 149 1 337 2 273 4 101 1 104 1 200 2 246 2 105 1 108 2 169 1 300 2 356 1 76 2 114 1 116 1 359 1 213 2 85 2 86 4 254 1 177 1 130 1 258 1 316 1 37 1 261 2 371 1 373 1 228 1 263 4 186 1 323 2 
105 1 41 1 187 1 108 2 142 1 331 1 169 1 47 2 300 2 76 2 356 1 114 1 116 1 359 1 149 1 334 1 99 4 213 2 273 4 85 2 86 4 101 1 254 1 177 1 130 1 313 1 179 1 34 1 258 1 316 1 37 1 261 2 371 1 200 1 373 1 104 1 263 4 228 1 186 1 323 2 246 2 
105 1 41 1 187 1 108 2 142 1 331 1 169 1 47 2 300 2 76 2 356 1 114 1 116 1 359 1 149 1 334 1 99 4 213 2 273 4 85 2 86 4 101 1 254 1 177 1 130 1 313 1 179 1 34 1 258 1 316 1 37 1 261 2 371 1 200 1 373 1 104 1 263 4 228 1 186 1 323 2 246 2 
41 1 187 1 142 1 177 1 130 1 309 1 331 1 169 1 258 1 37 1 359 1 99 2 334 1 14 1 371 1 373 1 228 1 273 2 263 2 186 1 
105 1 41 1 187 1 108 3 142 1 331 1 169 1 47 2 300 2 76 2 356 1 114 1 116 1 359 1 149 1 334 1 99 5 213 3 273 4 85 2 86 5 101 1 254 1 177 1 130 1 313 1 310 1 179 1 34 1 258 1 316 1 37 1 261 3 371 1 200 1 104 1 373 1 263 4 228 1 186 1 323 2 246 2 
105 1 41 1 187 1 108 3 142 1 331 1 169 1 47 2 300 2 76 2 356 1 114 1 116 1 359 1 149 1 334 1 99 5 213 3 273 4 85 2 86 5 101 1 254 1 177 1 130 1 313 1 310 1 179 1 34 1 258 1 316 1 37 1 261 3 371 1 200 1 104 1 373 1 263 4 228 1 186 1 323 2 246 2 
105 1 41 1 187 1 108 2 142 1 331 1 169 1 95 1 76 2 356 1 114 1 116 1 359 1 149 1 334 1 99 4 213 2 335 2 337 2 273 4 85 2 86 4 254 1 177 1 130 1 258 1 316 1 91 2 37 1 92 1 261 2 371 1 200 1 104 1 373 1 263 4 228 1 186 1 246 2 
276 3 70 2 234 1 55 2 290 1 43 1 8 1 308 1 282 1 294 1 111 1 59 1 46 1 296 1 284 1 297 1 240 1 223 1 333 1 163 1 225 1 214 1 351 2 28 2 245 1 
70 4 205 1 111 1 294 2 296 1 209 2 333 1 302 2 214 7 28 1 31 1 276 10 123 1 55 1 87 2 343 2 364 1 308 1 282 1 183 2 284 7 240 6 36 1 160 1 64 2 225 1 351 2 245 1 
264 1 70 1 187 2 166 1 73 1 208 1 167 1 112 1 111 1 22 1 169 1 296 1 146 1 191 1 332 1 26 1 333 1 4 1 276 2 6 1 308 1 282 1 220 1 133 1 134 1 135 1 181 1 222 1 159 1 240 1 223 1 369 1 160 1 225 1 351 2 373 2 201 1 245 1 
264 1 187 3 43 1 46 1 146 2 191 2 333 3 4 2 234 1 276 15 54 2 55 4 6 1 8 1 343 2 282 3 59 1 344 2 283 1 284 5 159 2 240 8 346 2 160 1 351 6 201 2 245 5 70 7 290 1 73 1 167 1 112 1 111 3 294 3 22 1 169 1 296 3 358 1 26 2 302 2 214 5 28 4 304 2 307 2 87 2 308 3 133 1 220 2 135 1 134 1 183 2 222 2 223 1 369 1 225 3 373 3 
264 1 70 1 94 1 187 1 189 1 230 1 206 1 292 1 167 1 73 7 112 2 111 2 22 1 169 1 296 2 146 2 297 1 25 1 333 2 30 1 275 1 360 2 276 2 6 8 237 1 308 2 282 2 220 2 257 1 134 8 135 1 222 3 240 1 369 1 225 2 351 4 373 1 18 1 201 2 
276 2 70 2 264 1 187 1 343 1 280 1 308 1 282 1 293 1 294 1 111 1 169 1 221 1 296 1 183 1 369 1 160 1 333 1 225 1 351 2 373 1 
276 1 70 1 343 1 308 1 282 1 111 1 32 1 294 1 296 1 297 1 333 1 225 1 351 2 
276 2 55 1 87 1 308 1 282 1 111 1 296 1 284 1 297 1 240 2 333 1 302 1 225 1 214 1 351 2 28 1 245 1 174 1 
276 3 70 1 55 1 87 1 343 1 308 1 282 1 111 1 294 1 296 1 183 1 284 1 297 1 240 2 302 1 333 1 225 1 214 1 351 2 28 1 245 1 
276 1 70 1 343 1 308 1 282 1 111 1 32 1 294 1 296 1 333 1 225 1 351 2 275 1 
276 2 55 1 87 1 308 1 282 1 111 1 296 1 284 1 240 2 333 1 302 1 225 1 214 1 351 2 28 1 245 1 174 1 275 1 
276 3 70 1 55 1 87 1 343 1 308 1 282 1 111 1 294 1 296 1 183 1 284 1 240 2 302 1 333 1 225 1 214 1 351 2 28 1 245 1 275 1 
70 1 276 3 55 1 87 1 343 1 308 1 282 1 111 1 294 1 296 1 183 1 284 1 240 2 302 1 333 1 225 1 214 1 351 2 28 1 245 1 
70 1 187 1 73 1 112 1 111 1 22 1 296 1 146 1 191 1 26 1 333 1 4 1 276 2 54 1 6 1 308 1 282 1 220 1 135 1 134 1 222 1 159 1 240 1 223 1 225 1 351 2 373 1 201 1 
70 1 187 1 73 1 112 1 111 1 355 1 22 1 296 1 146 1 191 1 333 1 4 1 276 2 6 1 308 1 282 1 220 1 178 1 135 1 134 1 222 1 240 1 223 1 348 1 225 1 351 2 373 1 201 1 
276 3 70 1 55 1 87 1 343 1 308 1 282 1 111 1 294 1 296 1 183 1 284 1 240 2 160 1 302 1 333 1 225 1 214 1 351 2 28 1 245 1 
70 1 187 1 73 1 294 1 111 1 296 1 146 1 191 1 26 1 302 1 333 1 214 1 28 1 4 1 30 1 276 3 54 1 55 1 87 1 6 1 343 1 308 1 282 1 220 1 134 1 183 1 284 1 222 1 159 1 240 2 346 1 225 1 351 2 373 1 245 1 201 1 
264 1 70 1 187 1 293 1 111 1 294 1 169 1 296 1 333 1 302 1 276 2 87 1 343 1 308 1 282 1 221 1 183 1 60 1 240 1 369 1 160 1 225 1 351 2 373 1 
70 1 276 2 88 1 129 1 128 1 308 1 282 1 111 1 240 1 211 1 370 1 333 1 351 2 119 1 
70 1 276 2 88 1 129 1 128 1 308 1 282 1 111 1 240 1 211 2 370 2 333 1 351 2 119 1 
70 1 276 2 88 1 129 1 128 1 308 1 282 1 111 1 240 1 211 1 370 1 333 1 351 2 119 1 
70 1 276 2 88 1 129 1 128 1 308 1 282 1 111 1 240 1 211 1 370 1 333 1 351 2 119 1 
70 1 276 2 88 1 129 1 128 1 308 1 282 1 111 1 240 1 211 1 370 1 333 1 351 2 119 1 
150 1 48 1 69 1 100 1 194 1 219 1 107 1 279 1 93 1 365 1 
106 1 339 1 
69 1 100 1 219 1 278 1 107 1 255 1 93 1 365 1 312 1 
271 1 27 1 
229 1 45 1 238 1 
150 1 69 1 100 1 219 1 107 1 279 1 42 1 365 1 48 1 285 1 367 1 93 1 199 2 200 1 273 1 263 1 338 1 232 1 
150 1 69 1 100 1 219 1 107 1 279 1 42 1 365 1 48 1 285 1 367 1 93 1 199 2 200 1 273 1 263 1 338 1 232 1 
150 1 69 1 100 1 219 1 107 1 279 1 42 1 365 1 48 1 285 1 367 1 93 1 199 2 200 1 273 1 263 1 338 1 232 1 
271 1 27 1 238 1 
271 1 27 1 238 1 
229 1 45 1 
229 1 45 1 238 1 
192 1 10 1 
69 1 264 2 106 1 187 2 107 1 72 1 169 2 147 1 273 1 339 1 232 1 192 1 100 1 219 1 342 1 10 1 365 1 367 1 137 1 223 1 369 2 93 1 224 1 199 1 242 1 373 2 263 1 
70 1 1 1 94 1 187 2 21 1 73 2 111 1 22 1 169 2 296 1 146 1 333 1 216 1 360 2 276 2 175 1 6 2 308 1 282 1 220 1 257 1 134 2 135 1 222 1 240 1 160 1 225 1 351 2 373 2 67 1 201 1 
121 1 6 2 237 1 73 2 231 1 220 1 134 2 146 1 74 1 315 1 184 1 318 2 198 1 138 1 251 1 227 1 215 1 306 1 30 1 
121 1 6 1 237 1 73 1 231 1 220 1 134 1 74 1 315 1 146 1 184 1 318 2 185 1 251 1 227 1 215 1 306 1 
326 1 230 1 6 1 73 1 112 1 220 1 134 1 12 1 146 1 222 1 138 1 251 1 201 1 18 1 
121 1 6 1 237 1 73 1 231 1 220 1 134 1 74 1 315 1 146 1 184 1 318 2 198 1 138 1 251 1 227 1 215 1 306 1 
84 1 
105 1 269 1 356 1 116 1 163 1 286 1 200 1 
105 1 47 1 300 1 356 1 114 1 116 1 337 1 273 1 85 1 86 1 101 1 254 1 316 1 104 1 200 2 263 1 323 1 
330 2 144 1 146 1 191 1 96 4 97 3 51 1 337 8 273 5 6 1 57 2 343 2 13 1 103 2 197 2 104 3 200 5 201 1 105 5 19 2 291 2 73 1 112 1 294 2 356 8 77 1 114 3 116 1 302 2 304 2 85 3 86 5 254 3 87 2 177 2 256 1 311 2 220 2 134 1 366 4 182 2 183 2 222 6 316 3 263 5 323 4 
105 3 124 1 254 1 343 1 294 1 366 3 239 1 183 1 316 1 209 1 356 2 96 3 114 1 62 1 64 1 349 1 200 2 104 1 337 4 323 2 
105 2 254 1 43 1 8 1 267 1 294 1 313 1 46 1 316 1 356 2 114 1 302 1 197 1 104 1 273 1 263 1 
105 1 254 1 269 1 316 1 356 1 114 1 116 1 286 1 104 1 200 1 
105 1 87 1 343 1 294 1 366 1 183 1 356 2 96 1 302 1 197 1 337 2 200 1 323 1 
85 1 86 1 116 1 200 1 263 1 273 1 
288 1 105 2 19 2 20 1 230 1 143 1 247 1 73 4 112 2 3 2 146 1 356 2 114 2 273 3 85 2 86 4 254 1 6 4 220 1 134 4 222 1 316 2 61 1 13 2 320 1 104 2 263 3 201 1 18 1 
264 2 187 3 110 1 73 1 293 2 111 1 112 1 22 1 169 2 296 1 146 1 191 1 26 1 333 1 4 1 276 1 54 1 127 1 6 1 308 1 282 1 220 1 134 1 222 1 159 1 240 1 223 1 369 2 225 1 351 2 373 3 201 1 
105 2 19 1 254 1 59 1 366 2 316 1 96 2 356 1 114 1 13 1 116 2 337 4 104 1 200 4 323 2 
69 1 219 1 66 1 
69 1 219 1 66 1 
150 1 192 1 69 1 219 1 262 1 
69 1 219 1 66 1 
69 1 253 1 219 1 
69 1 253 1 219 1 
69 1 253 1 219 1 
69 1 219 1 
100 1 365 1 
276 5 70 3 234 1 55 2 290 1 43 1 8 1 308 2 282 2 294 1 111 2 59 1 46 1 259 1 240 2 333 2 351 4 28 3 321 1 
234 1 70 2 276 3 55 2 290 1 43 1 8 1 294 1 59 1 46 1 240 1 163 1 28 2 
70 1 276 3 55 1 328 1 87 1 343 1 308 1 282 1 111 1 294 1 183 1 240 2 302 1 333 1 351 2 28 1 
276 6 70 2 124 1 55 1 205 1 87 1 343 1 294 1 183 1 209 2 240 4 64 1 302 1 28 1 
70 8 290 1 205 1 43 2 294 3 111 2 46 1 209 2 302 2 333 2 28 7 53 1 234 1 276 18 31 1 55 5 87 2 8 2 343 2 364 1 308 2 282 2 59 1 183 2 259 2 240 10 64 2 351 4 321 2 
276 1 209 1 240 1 
276 1 70 1 64 1 
276 5 70 2 55 2 328 1 87 1 343 1 308 1 282 1 111 1 294 1 183 1 240 3 333 1 302 1 351 2 28 2 304 1 
70 4 111 1 294 2 209 1 80 1 333 1 302 2 28 1 119 1 276 10 124 1 55 1 87 2 343 2 308 1 282 1 239 1 314 1 183 2 240 6 62 1 64 1 349 1 351 2 
276 1 70 1 294 1 46 1 
53 1 70 1 276 3 234 1 55 1 290 1 43 1 8 1 308 1 282 1 111 1 259 1 240 2 333 1 351 2 28 2 321 1 
70 2 276 4 55 2 43 1 8 1 267 1 294 2 46 1 240 2 302 1 28 3 321 1 
70 1 276 1 343 1 308 1 282 1 111 1 294 1 333 1 351 2 119 1 
70 1 276 3 55 1 87 1 343 1 308 1 282 1 111 1 294 1 183 1 240 2 302 1 333 1 351 2 28 1 119 1 
53 1 276 3 70 1 55 1 43 1 8 1 308 3 282 3 111 3 259 1 240 2 333 3 351 6 28 2 321 1 119 1 202 1 
70 11 290 1 328 1 205 1 43 2 111 5 294 5 46 2 209 4 75 1 301 1 333 5 302 3 28 6 119 1 53 1 234 1 276 25 124 1 55 4 87 3 8 2 343 3 308 5 282 5 59 1 183 3 259 2 240 14 196 1 64 3 351 10 321 2 202 1 
70 3 290 1 43 1 294 1 111 1 46 1 209 1 333 1 28 2 119 1 276 5 234 1 124 1 55 2 8 1 308 1 282 1 59 1 240 2 64 1 349 1 351 2 
70 7 328 1 205 1 111 2 294 4 209 2 80 1 333 2 302 4 28 3 119 1 276 18 124 1 55 3 87 4 343 4 308 2 364 1 282 2 314 1 239 1 183 4 240 11 62 1 64 2 349 1 351 4 
70 6 290 1 328 1 43 1 111 3 294 3 46 1 209 1 80 1 333 3 302 2 28 3 119 1 234 1 276 14 124 1 55 3 87 2 8 1 343 2 308 3 282 3 59 1 314 1 239 1 183 2 259 1 240 8 62 1 64 1 349 1 351 6 
70 4 328 1 111 2 294 2 209 1 80 1 333 2 302 2 28 1 119 1 276 10 124 1 55 1 87 2 343 2 308 2 282 2 239 1 314 1 183 2 240 6 62 1 64 1 349 1 351 4 
70 3 290 1 43 1 294 1 111 1 46 1 209 1 333 1 28 2 119 1 276 5 234 1 124 1 55 2 8 1 308 1 282 1 59 1 240 2 64 1 349 1 351 2 
70 4 111 1 294 2 209 1 80 1 333 1 302 2 28 1 119 1 276 10 124 1 55 1 87 2 343 2 308 1 282 1 239 1 314 1 183 2 240 6 62 1 64 1 349 1 351 2 
70 4 328 1 111 3 294 2 209 1 80 1 333 3 302 2 28 1 119 1 276 11 124 1 55 1 87 2 343 2 308 3 282 3 314 1 239 1 183 2 259 1 240 7 62 1 64 1 349 1 351 6 
70 4 111 3 294 2 209 1 80 1 333 3 302 2 28 2 119 1 276 11 124 1 55 2 87 2 343 2 308 3 282 3 314 1 239 1 183 2 259 1 240 7 62 1 64 1 349 1 351 6 202 1 
276 6 234 1 70 4 55 4 290 1 43 2 8 2 267 1 294 3 59 1 46 2 240 2 302 1 28 7 321 3 
70 4 111 3 294 2 209 1 80 1 333 3 302 2 28 1 119 1 276 11 124 1 55 1 87 2 343 2 308 3 282 3 314 1 239 1 183 2 259 1 240 7 62 1 64 1 349 1 351 6 202 1 
187 1 223 1 56 1 373 1 331 1 139 1 169 1 
203 1 325 1 187 1 235 1 56 1 295 1 331 1 155 1 169 1 223 1 139 1 373 1 
146 1 222 1 230 1 6 1 163 1 73 1 112 1 220 1 201 1 18 1 134 1 
264 1 187 2 6 1 167 1 73 1 112 1 220 1 169 1 134 1 146 1 222 1 191 1 159 1 223 1 369 1 373 2 4 1 201 1 
264 2 187 2 142 1 73 1 167 1 169 2 146 1 3 1 191 2 50 1 4 1 6 1 220 1 134 1 258 1 222 3 156 1 159 1 223 1 369 1 373 2 201 2 186 1 
264 2 187 2 142 1 73 2 167 1 169 2 146 1 3 1 191 2 50 1 4 1 6 2 220 1 134 2 258 1 222 3 156 1 223 1 369 1 63 1 348 1 373 2 201 2 186 1 
73 3 112 1 146 1 3 1 49 1 191 1 97 1 50 1 116 1 82 1 273 2 86 1 6 3 177 1 311 1 220 1 134 3 222 4 156 1 63 1 200 1 263 2 201 1 
86 1 6 3 177 1 57 1 73 3 112 1 311 1 220 1 134 3 3 1 146 1 156 1 222 4 191 1 97 1 63 1 116 1 50 1 200 1 273 2 263 2 201 1 
146 1 189 1 6 1 73 1 220 1 134 1 
189 1 206 1 6 7 292 1 237 1 73 6 256 1 112 2 220 3 257 1 134 7 146 2 222 3 191 1 270 1 25 1 65 1 172 1 201 2 360 1 30 1 
70 2 264 1 187 2 290 1 43 1 167 1 73 1 294 1 111 2 46 1 169 1 296 2 146 1 191 1 26 1 333 2 214 1 28 2 4 1 30 1 276 3 234 1 175 1 54 1 55 2 6 1 8 1 308 2 282 2 59 1 344 1 220 1 134 1 284 1 222 1 159 1 240 1 223 1 369 1 346 1 160 1 225 2 351 4 373 2 245 1 201 1 
105 1 20 1 73 1 330 1 112 1 269 1 356 1 114 2 97 1 116 1 273 3 85 1 86 2 254 2 6 1 57 1 177 1 311 1 134 1 182 1 316 2 222 2 137 1 103 1 286 1 200 1 104 2 263 3 
146 1 222 2 191 1 189 1 6 2 51 1 73 2 256 1 311 1 220 2 201 1 134 2 30 1 
230 1 6 4 73 4 112 1 220 1 134 4 146 1 222 1 63 1 16 1 18 1 201 1 30 1 
6 2 190 1 73 2 220 2 134 2 3 1 146 1 222 1 191 1 270 1 357 1 65 1 272 1 201 1 
146 1 315 1 184 1 318 1 6 1 73 1 112 1 215 1 220 1 134 1 
146 1 222 1 1 1 6 2 237 1 73 2 220 1 201 1 257 1 134 2 30 1 
230 1 6 5 206 1 73 4 112 1 220 2 134 5 257 1 3 1 146 2 222 3 25 1 16 1 18 1 201 2 30 1 
230 1 6 5 73 4 112 1 220 2 134 5 257 1 3 1 146 2 222 3 25 1 16 1 18 1 173 1 201 2 30 1 
264 1 187 2 6 1 167 1 73 1 112 1 220 1 169 1 134 1 146 1 222 1 191 1 223 1 369 1 348 1 373 2 4 1 201 1 
6 1 73 1 256 1 220 2 134 1 3 1 146 1 222 1 191 1 270 1 65 1 172 1 201 1 
151 1 223 1 79 1 38 1 305 1 
151 2 125 1 188 1 109 1 142 1 177 1 363 1 258 1 137 1 223 1 79 2 116 1 371 1 200 1 38 1 273 2 263 2 186 1 305 2 
151 1 187 1 21 1 169 1 38 1 373 1 67 1 305 1 216 1 
125 1 109 1 38 1 
163 1 281 1 39 1 52 1 
23 1 136 1 9 1 241 1 281 1 39 1 52 1 
23 1 299 1 145 1 
341 1 126 2 9 1 281 1 136 3 23 3 157 1 368 1 241 1 29 1 39 1 52 1 
23 2 136 2 233 1 122 1 9 1 241 1 281 1 39 1 52 1 
23 1 136 1 158 1 184 1 318 1 78 1 341 1 9 1 241 1 306 1 39 1 
23 1 136 1 341 1 9 1 241 1 39 1 52 1 
23 1 136 1 341 1 9 1 241 1 281 1 52 2 
340 1 341 1 9 2 136 2 23 2 171 1 241 2 244 1 39 1 52 1 
217 1 233 2 265 1 341 1 9 1 281 1 136 3 23 3 345 1 78 1 241 1 52 1 39 2 
233 1 341 1 9 1 281 1 136 2 23 2 318 2 184 1 241 1 17 1 227 1 215 1 39 1 52 1 306 1 
122 1 233 2 341 1 9 2 281 1 90 1 136 4 23 4 345 1 78 1 241 2 52 1 39 2 
23 1 136 1 341 1 9 1 241 1 281 1 39 1 52 1 
233 2 126 1 9 1 281 2 136 4 23 4 157 1 345 1 78 1 368 1 241 1 68 1 52 2 39 3 
233 1 341 1 9 1 281 1 136 2 23 2 248 1 148 1 241 1 15 1 39 1 52 1 
341 1 126 2 9 1 281 1 136 3 23 3 157 1 368 2 241 1 39 1 40 1 52 1 
218 1 44 1 58 2 39 2 
23 1 136 1 35 1 341 1 9 1 241 1 
217 1 23 2 136 2 233 1 341 1 9 1 241 1 281 1 39 1 52 1 
210 1 
23 1 136 1 341 1 9 1 241 1 281 1 39 1 52 1 
217 1 23 3 136 3 233 1 126 1 341 1 9 1 241 1 281 1 39 1 52 1 
345 1 78 1 68 1 39 1 
39 1 52 1 

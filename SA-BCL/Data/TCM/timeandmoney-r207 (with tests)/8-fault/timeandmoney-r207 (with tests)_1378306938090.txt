#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (27,220,241,338) (27,220,241,338) (4,238,250,376) 97 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (27,220,241,338) (27,220,241,338) (4,238,250,376) 97 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 33 322 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 33 322 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (27,220,241,338) (27,220,241,338) (4,238,250,376) (4,238,250,376) (4,238,250,376) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 2 0 2 3 3 319 1 219 2 162 1 220 6 199 1 348 1 52 1 167 2 166 4 169 1 171 5 32 1 13 9 368 1 176 2 228 1 38 2 121 1 282 1 238 1 187 1 240 1 241 2 104 1 338 9 
0 2 27 2 3 3 319 1 219 2 162 1 220 6 199 1 348 1 52 1 167 2 166 4 169 1 171 5 32 1 13 9 368 1 176 2 228 1 38 2 121 1 282 1 238 1 187 1 240 1 241 2 104 1 338 9 
0 2 27 2 3 4 319 1 219 2 162 1 220 7 199 1 348 1 52 1 167 2 166 5 169 1 171 6 32 1 13 10 368 1 176 2 228 1 38 2 121 1 282 1 238 1 187 1 240 1 241 2 104 1 338 10 
0 2 27 2 3 2 319 1 219 2 162 1 220 4 199 1 348 1 52 1 167 2 166 3 169 1 171 4 32 1 13 7 368 1 176 1 38 2 121 1 282 1 238 1 187 1 240 1 241 2 104 1 338 7 
13 4 368 1 27 1 0 1 176 2 228 1 38 1 3 1 319 1 220 3 238 1 241 1 167 1 166 2 169 1 104 1 338 4 171 3 
222 1 245 1 13 2 368 1 27 1 38 1 219 1 348 1 240 1 241 1 153 1 167 1 169 1 104 1 171 1 338 2 
13 3 368 1 27 2 3 1 282 1 219 1 220 1 241 2 166 1 169 1 104 1 338 3 171 2 
220 1 13 1 27 1 250 1 97 1 241 1 104 1 338 2 
220 1 13 1 27 1 250 1 97 1 241 1 104 1 338 2 
43 1 343 1 299 1 
43 1 247 1 330 2 
284 2 136 1 17 2 163 2 138 2 168 1 355 2 196 2 
339 1 87 1 295 1 296 1 218 2 217 1 360 1 194 1 135 1 196 3 136 1 90 2 274 1 345 1 163 3 200 1 95 1 326 1 138 2 168 1 115 1 349 1 75 1 139 1 78 2 329 2 16 1 350 2 182 1 147 1 184 1 284 2 17 2 60 1 288 1 355 2 267 1 
284 1 136 1 224 1 17 1 108 1 163 1 138 1 355 1 309 1 196 1 
43 1 141 1 224 1 261 1 298 1 120 1 299 1 5 1 196 1 163 1 302 1 138 1 293 1 190 1 
43 1 224 1 261 2 298 2 120 1 299 1 196 1 284 1 17 1 163 1 302 1 138 1 293 1 355 1 190 1 
197 1 193 1 261 1 298 1 331 1 
43 1 197 1 193 1 246 1 261 2 298 2 299 1 22 1 
193 1 261 1 298 1 
224 1 108 1 261 1 298 1 309 1 196 1 136 1 284 1 197 1 17 1 163 1 165 1 138 1 355 1 
43 1 
43 1 197 1 193 1 261 2 298 2 51 1 299 1 22 1 
43 1 127 1 193 2 261 5 298 5 328 1 57 2 263 1 109 1 264 2 299 1 209 1 197 2 7 1 366 1 125 2 242 1 41 1 22 1 
168 1 343 1 
178 1 196 2 284 1 17 1 163 2 40 1 138 2 355 1 168 2 
55 1 276 1 226 1 
139 1 296 1 218 1 217 1 350 1 196 1 182 1 184 1 90 1 345 1 163 1 346 1 288 1 95 1 168 1 75 1 
139 1 296 1 226 1 217 1 218 1 341 1 350 1 182 1 196 2 184 1 284 1 90 1 345 1 163 2 137 1 288 1 95 1 138 1 355 1 75 1 
284 3 17 1 163 3 137 1 138 3 168 1 355 3 196 3 
284 1 224 1 163 1 138 1 355 1 309 1 196 1 
284 1 224 1 17 1 163 1 178 1 40 1 138 1 355 1 196 1 
295 1 296 1 298 1 217 1 218 1 360 1 341 1 135 1 196 4 136 1 90 1 274 1 345 1 163 4 137 1 200 1 95 1 302 1 326 1 138 3 168 1 115 1 349 1 75 1 139 1 224 1 78 2 261 1 329 1 120 1 178 1 16 1 350 1 182 1 147 1 184 1 284 3 17 2 375 1 288 1 289 1 293 1 355 3 190 1 
284 1 141 1 163 2 56 1 137 1 138 2 168 1 355 1 196 2 
43 1 224 1 261 1 298 1 120 1 178 1 341 1 196 3 284 3 17 1 375 1 163 3 333 1 137 2 302 1 138 3 293 1 355 3 190 1 
226 1 178 1 196 2 284 2 17 1 163 2 137 1 276 1 138 2 355 2 
139 1 296 1 218 1 217 1 350 1 196 1 182 1 184 1 90 1 345 1 163 1 288 1 95 1 168 1 75 1 
139 1 296 1 218 1 217 1 350 1 196 1 184 1 90 1 285 1 286 1 345 1 163 1 288 1 95 1 168 1 
87 2 295 1 360 1 133 1 132 1 135 1 255 1 274 1 275 1 276 2 200 1 202 1 115 1 96 1 55 2 78 2 329 4 226 2 58 1 147 2 212 1 294 1 105 1 107 1 
284 1 76 1 224 1 163 1 293 1 138 1 355 1 196 1 
141 1 56 1 178 1 341 1 196 5 284 4 17 1 163 5 137 2 9 1 335 1 138 5 355 4 168 1 
76 1 284 2 224 1 163 2 138 2 355 2 309 1 196 2 
211 1 292 1 
211 1 292 1 
236 1 111 1 
236 1 111 1 
236 1 111 1 
223 1 211 1 292 1 
25 1 211 1 292 1 
236 1 142 1 371 1 211 2 292 2 111 1 
223 1 211 1 292 1 
223 1 211 1 292 1 
100 1 211 1 292 1 
100 1 211 1 292 1 
100 1 211 1 292 1 
128 1 108 1 298 2 134 2 344 1 196 1 136 1 163 1 258 1 165 1 138 1 172 2 224 1 205 2 367 1 261 2 79 1 309 1 284 1 237 1 17 1 310 2 287 1 211 2 292 2 213 1 154 2 355 1 155 1 
25 1 298 1 30 1 134 1 196 2 163 2 324 1 258 1 138 2 168 1 203 1 53 1 172 1 54 1 205 1 261 1 262 1 284 2 310 1 211 1 292 1 154 1 355 2 189 1 
0 1 38 1 167 1 
222 1 38 1 167 1 
222 1 317 1 0 2 229 1 167 3 373 1 
222 1 317 1 0 1 229 1 207 1 167 2 
222 1 317 2 0 1 229 1 167 2 
43 2 127 3 193 1 215 1 247 1 298 5 342 2 133 1 299 1 69 1 254 1 197 4 255 1 7 1 324 1 202 1 203 1 327 1 54 1 261 5 175 2 330 3 57 1 264 1 233 1 186 1 62 2 212 1 125 1 242 2 85 1 42 1 22 1 
43 5 127 8 193 6 298 9 247 3 299 1 133 3 197 7 255 3 257 1 7 1 8 5 202 3 54 4 261 9 57 2 264 2 62 6 212 3 20 1 266 1 22 1 215 3 67 1 109 1 69 2 279 1 327 1 225 1 175 6 330 9 331 5 233 2 185 1 125 2 242 6 85 3 
43 3 127 3 215 1 247 2 298 3 67 1 109 1 342 1 299 1 133 1 69 1 254 1 197 2 255 1 202 1 54 1 261 3 175 2 57 1 330 4 264 1 233 1 62 2 212 1 125 1 242 2 85 1 42 1 
43 4 127 5 215 2 247 3 298 4 67 1 109 1 342 2 299 1 133 2 69 1 254 1 197 3 255 2 279 1 202 2 54 2 225 1 261 4 175 4 330 7 57 1 264 1 233 1 185 1 62 4 212 2 125 1 242 4 85 2 42 1 
345 1 277 1 343 1 
345 1 92 1 
253 1 
345 1 95 1 
184 1 345 2 270 1 277 2 95 1 253 1 358 1 
184 1 345 1 95 1 
23 1 345 1 
87 4 66 1 329 7 98 1 179 1 146 1 58 3 99 1 133 1 147 3 82 2 255 1 275 2 354 1 61 1 337 1 359 1 
87 4 66 1 329 7 98 1 179 1 146 1 58 3 99 1 133 1 147 3 82 2 255 1 275 2 354 1 61 1 337 1 359 1 
87 4 66 1 329 7 98 1 179 1 146 1 58 3 99 1 133 1 147 3 82 2 255 1 275 2 354 1 61 1 303 1 337 1 359 1 
87 16 66 2 360 1 272 1 133 4 135 1 47 1 274 1 255 4 275 5 200 1 325 4 202 3 78 2 329 31 98 2 308 1 179 1 146 1 58 10 99 5 122 1 147 15 82 3 148 1 210 3 353 1 123 1 354 1 61 2 212 3 85 3 337 2 359 1 
87 5 66 1 360 2 133 1 135 2 255 1 274 2 275 3 200 2 78 4 329 9 98 1 58 4 146 1 99 1 82 2 147 4 123 1 354 1 61 1 313 1 291 1 337 1 359 1 
0 1 27 1 218 1 1 1 217 1 251 1 361 1 161 1 90 1 219 1 220 1 31 1 73 1 167 2 169 1 171 1 222 1 173 1 13 2 368 1 38 1 350 1 373 1 332 1 288 1 314 1 241 1 379 1 104 1 338 2 
0 1 27 1 218 1 1 1 217 1 251 1 361 1 161 1 90 1 219 1 220 2 347 1 73 1 167 2 169 1 280 1 171 1 222 1 260 1 13 3 368 1 38 1 350 1 373 1 332 1 288 1 314 1 241 1 379 1 338 3 
0 1 218 1 1 1 217 1 251 1 161 1 219 1 90 1 220 2 73 1 167 2 169 1 280 1 171 1 222 1 260 1 13 2 368 1 38 1 350 1 373 1 288 1 314 1 379 1 338 2 
10 1 139 1 13 1 27 1 217 1 218 1 39 1 252 1 350 1 161 2 219 2 90 1 345 1 102 1 347 1 288 1 164 1 221 1 314 2 95 1 241 1 73 2 338 1 
0 1 27 1 218 1 1 1 217 1 251 1 361 1 161 1 90 1 219 1 31 1 73 1 167 2 280 1 222 1 13 1 38 1 350 1 373 1 332 1 288 1 314 1 241 1 379 1 104 1 338 1 
91 1 
139 1 33 1 193 2 261 2 298 2 57 1 218 1 232 1 350 1 264 1 322 1 90 1 7 1 125 1 242 1 22 1 
193 2 156 1 298 3 216 1 29 1 159 1 196 1 5 1 163 1 51 1 302 1 138 1 114 2 141 1 224 1 261 3 145 1 120 1 311 1 293 1 190 1 22 1 
43 1 224 1 141 1 193 1 261 3 156 1 145 1 298 3 120 1 216 1 29 1 159 1 299 1 5 1 196 1 163 1 51 1 124 1 302 1 293 1 138 1 114 3 190 1 22 1 
224 1 141 1 193 1 261 2 156 1 145 1 298 2 28 1 120 1 216 1 29 1 159 1 5 1 196 1 163 1 311 1 302 1 293 1 138 1 114 2 190 1 
43 1 192 1 127 1 193 7 298 5 247 2 299 1 196 2 5 1 136 1 49 1 7 1 51 1 302 1 138 2 11 1 141 1 261 5 145 1 57 1 264 1 309 1 17 1 311 4 19 1 355 1 356 1 22 3 108 1 156 1 28 4 216 1 29 1 159 1 71 2 163 2 365 1 112 1 165 1 114 4 224 2 117 2 120 1 230 2 181 2 284 1 124 2 293 1 125 1 242 1 190 1 
43 3 127 1 193 2 298 3 247 2 299 1 196 2 5 1 136 1 301 1 7 1 302 1 138 2 141 1 261 3 145 1 57 1 264 1 309 1 17 1 311 1 355 1 356 1 22 1 108 1 156 1 216 1 28 1 29 1 159 1 71 2 163 2 112 1 165 1 114 3 224 2 117 1 120 1 330 2 230 2 181 2 284 1 124 1 293 1 125 1 242 1 190 1 
43 1 192 1 127 1 193 4 298 4 247 2 299 1 5 1 196 2 136 1 49 1 7 1 302 1 138 2 141 1 261 4 145 1 57 1 264 1 309 1 17 1 311 2 19 1 355 1 356 1 22 2 108 1 156 1 216 1 28 2 29 1 159 1 71 2 163 2 112 1 165 1 114 4 224 2 117 2 120 1 230 2 181 2 284 1 124 2 293 1 125 1 242 1 190 1 
43 1 192 1 127 1 193 4 298 4 247 2 299 1 5 1 196 2 136 1 49 1 7 1 302 1 138 2 141 1 261 4 145 1 57 1 264 1 309 1 17 1 311 2 19 1 355 1 356 1 22 2 108 1 156 1 216 1 28 2 29 1 159 1 71 2 163 2 112 1 165 1 114 4 224 2 117 2 120 1 230 2 181 2 284 1 124 2 293 1 125 1 242 1 190 1 
43 1 127 1 193 4 298 4 299 1 5 1 196 2 136 1 7 1 302 1 138 2 141 1 261 4 145 1 57 1 264 1 309 1 17 1 311 2 152 1 19 1 355 1 22 2 108 1 156 1 216 1 28 2 29 1 159 1 71 2 163 2 112 1 165 1 114 4 224 2 116 1 118 2 227 1 120 1 330 2 177 2 181 2 284 1 124 2 293 1 125 1 242 1 190 1 
43 1 192 1 127 1 193 5 298 4 247 2 299 1 5 1 196 2 136 1 49 1 7 1 302 1 138 2 11 1 141 1 261 4 145 1 57 1 264 1 309 1 17 1 311 3 19 1 355 1 356 1 22 2 108 1 156 1 28 3 216 1 29 1 159 1 71 2 163 2 112 1 165 1 114 4 224 2 117 2 120 1 230 2 181 2 284 1 124 2 293 1 125 1 242 1 190 1 
43 1 192 1 127 1 193 5 298 4 247 2 299 1 5 1 196 2 136 1 49 1 7 1 302 1 138 2 11 1 141 1 261 4 145 1 57 1 264 1 309 1 17 1 311 3 19 1 355 1 356 1 22 2 108 1 156 1 28 3 216 1 29 1 159 1 71 2 163 2 112 1 165 1 114 4 224 2 117 2 120 1 230 2 181 2 284 1 124 2 293 1 125 1 242 1 190 1 
43 1 127 1 193 4 298 4 299 1 196 2 5 1 136 1 301 1 7 1 302 1 138 2 141 1 261 4 145 1 57 1 264 1 309 1 17 1 311 2 355 1 22 2 108 1 156 1 216 1 28 2 29 1 159 1 71 2 163 2 112 1 165 1 114 3 224 2 116 1 118 2 120 1 330 2 177 2 181 2 284 1 124 1 293 1 125 1 242 1 190 1 
87 3 295 1 66 1 360 1 343 1 133 1 135 1 274 1 255 1 275 2 276 1 200 1 168 2 115 1 96 1 55 1 78 2 226 1 329 6 58 2 146 1 147 3 82 1 354 1 61 1 359 1 
87 8 295 1 318 1 360 2 133 1 135 2 47 1 363 1 274 2 255 2 275 1 276 4 200 2 325 3 326 1 168 1 305 1 202 2 115 2 55 11 78 4 329 14 226 11 58 2 99 1 147 6 148 1 210 3 312 1 151 1 212 1 85 2 267 1 
87 1 295 1 296 1 217 1 218 1 271 1 2 1 360 1 341 1 135 1 196 2 90 1 274 1 345 1 346 1 163 2 276 1 137 1 200 1 95 1 138 1 326 1 168 1 305 1 115 1 75 1 139 1 14 1 78 2 329 2 350 1 182 1 184 1 284 1 147 1 288 1 355 1 267 1 
87 10 295 3 296 2 341 1 133 3 196 3 135 3 90 3 255 3 345 2 137 1 200 3 95 2 138 1 304 1 305 1 202 2 349 2 139 1 55 7 146 1 58 8 350 3 99 4 147 10 354 1 61 1 150 2 212 2 355 1 267 1 359 1 357 2 66 1 218 3 217 2 360 3 320 2 273 2 274 3 275 4 163 3 276 7 326 1 168 2 280 1 115 3 75 2 78 6 329 20 226 7 281 1 182 2 82 1 283 1 284 1 184 2 288 2 85 2 
87 1 295 2 217 2 218 8 360 2 46 1 195 1 196 1 135 2 6 1 362 1 90 8 274 2 345 3 163 1 137 1 200 2 221 1 95 2 138 1 326 1 280 1 115 2 96 1 139 2 173 1 78 4 369 1 329 2 39 1 350 7 284 1 147 1 60 2 288 2 336 1 355 1 244 1 267 1 
87 1 295 1 360 1 133 1 135 1 196 1 274 1 255 1 275 1 163 1 276 1 200 1 138 1 305 1 202 1 115 1 55 1 78 2 226 1 329 3 178 1 58 1 208 1 284 1 147 2 17 1 212 1 355 1 85 1 
55 1 96 1 87 2 295 1 78 2 226 1 329 2 360 1 58 1 99 1 135 1 274 1 255 1 276 1 200 1 105 1 202 1 115 1 
55 1 96 1 295 1 78 2 226 1 329 2 360 1 58 1 133 1 135 1 147 2 274 1 275 1 276 1 200 1 212 1 294 1 115 1 
87 2 295 1 360 1 133 1 135 1 255 1 274 1 275 1 276 2 200 1 202 1 115 1 96 1 55 2 78 2 329 4 226 2 58 2 99 1 147 2 212 1 85 1 
55 1 87 2 295 1 78 2 226 1 329 2 360 1 58 1 99 1 195 1 135 1 274 1 255 1 276 1 200 1 105 1 202 1 115 1 
55 1 295 1 78 2 226 1 329 2 360 1 58 1 195 1 133 1 135 1 147 2 274 1 275 1 276 1 200 1 212 1 294 1 115 1 
87 2 295 1 360 1 195 1 133 1 135 1 255 1 274 1 275 1 276 2 200 1 202 1 115 1 55 2 78 2 329 4 226 2 58 2 99 1 147 2 212 1 85 1 
87 2 295 1 360 1 133 1 135 1 255 1 274 1 275 1 276 2 200 1 202 1 115 1 55 2 78 2 329 4 226 2 58 2 99 1 147 2 212 1 85 1 
87 1 295 1 296 1 217 1 218 1 360 1 196 1 135 1 90 1 274 1 345 1 163 1 200 1 95 1 326 1 168 1 349 1 115 1 75 1 139 1 78 2 329 2 350 1 182 1 184 1 147 1 288 1 267 1 
87 1 295 1 296 1 217 1 218 1 360 1 196 1 135 1 90 1 274 1 345 1 163 1 200 1 95 1 326 1 168 1 115 1 139 1 78 2 119 1 329 2 350 1 184 1 147 1 286 1 285 1 288 1 267 1 
87 2 295 1 360 1 133 1 135 1 255 1 274 1 275 1 276 2 200 1 202 1 305 1 115 1 55 2 78 2 329 4 226 2 58 2 99 1 147 2 212 1 85 1 
87 2 295 1 296 1 217 1 218 1 360 1 133 1 196 1 135 1 90 1 255 1 274 1 275 1 345 1 163 1 276 2 200 1 95 1 202 1 349 1 115 1 75 1 55 2 173 1 78 2 226 2 329 4 58 2 99 1 350 1 182 1 147 2 184 1 288 1 150 1 212 1 85 1 
87 2 295 1 360 1 323 1 133 1 135 1 196 1 274 1 255 1 163 1 276 1 200 1 138 1 305 1 202 1 115 1 55 1 78 2 329 3 226 1 178 1 58 1 99 1 147 1 284 1 17 1 212 1 355 1 85 1 
87 9 360 2 133 3 135 2 89 2 47 1 274 2 255 3 275 3 200 2 325 2 201 2 202 3 307 1 204 1 12 1 78 4 329 19 58 6 99 3 81 1 147 10 148 1 210 1 291 1 63 1 212 3 315 1 103 1 85 3 
87 14 360 3 158 1 133 2 135 3 89 1 274 3 255 3 275 2 200 3 325 2 93 1 201 4 259 1 202 3 307 1 34 1 204 1 12 1 78 6 329 26 58 4 99 2 180 1 81 2 147 12 148 2 123 2 210 2 291 1 212 2 103 2 85 3 268 1 
87 20 129 1 133 5 135 3 89 1 47 1 255 5 200 3 93 1 201 4 202 4 259 1 12 1 204 1 307 1 58 8 146 1 99 4 147 21 148 3 210 3 354 1 61 1 212 4 63 1 103 2 268 1 359 1 66 1 360 3 158 1 274 3 275 4 325 4 34 1 78 6 329 41 180 1 81 1 82 1 123 1 291 1 85 4 
87 20 129 1 66 1 360 4 158 1 133 4 135 4 89 1 47 1 274 4 255 5 275 4 200 4 93 1 325 4 201 4 259 1 202 4 307 1 34 1 204 1 12 1 78 8 329 38 146 1 58 7 180 1 99 3 81 1 82 1 147 18 148 3 123 2 210 3 354 1 61 1 291 1 63 1 212 3 103 2 85 4 268 1 359 1 
87 27 66 1 360 2 158 1 133 8 135 2 89 1 47 2 274 2 255 8 275 7 200 2 93 1 325 4 201 4 259 1 202 7 307 1 34 1 204 1 12 1 78 4 329 52 146 1 58 14 180 1 99 7 81 1 82 1 147 25 148 2 123 1 210 4 354 1 61 1 312 2 291 1 212 7 103 1 85 7 268 1 359 1 
172 1 24 1 144 1 310 1 371 1 211 1 292 1 154 1 134 1 306 1 
25 1 30 1 
172 1 83 1 310 1 84 1 211 1 292 1 378 1 154 1 134 1 
128 1 108 1 298 1 134 1 344 1 196 1 136 1 163 1 258 1 165 1 138 1 172 1 224 1 205 2 367 1 261 1 79 1 309 1 284 1 237 1 17 1 310 1 287 1 211 1 292 1 213 1 154 1 355 1 155 1 
128 1 108 1 298 1 134 1 344 1 196 1 136 1 163 1 258 1 165 1 138 1 172 1 224 1 205 2 367 1 261 1 79 1 309 1 284 1 237 1 17 1 310 1 287 1 211 1 292 1 213 1 154 1 355 1 155 1 
128 1 108 1 298 1 134 1 344 1 196 1 136 1 163 1 258 1 165 1 138 1 172 1 224 1 205 2 367 1 261 1 79 1 309 1 284 1 237 1 17 1 310 1 287 1 211 1 292 1 213 1 154 1 355 1 155 1 
223 1 142 1 214 1 
223 1 142 1 214 1 
100 1 381 1 
100 1 142 1 381 1 
189 1 53 1 
65 1 25 1 298 1 30 1 134 1 196 2 197 1 163 2 324 1 138 2 168 1 203 1 53 1 172 1 54 1 205 1 367 1 261 1 262 1 284 2 310 1 211 1 292 1 154 1 355 2 155 1 189 1 
223 1 214 1 
100 1 142 1 381 1 
87 1 295 1 217 1 218 2 130 1 360 1 46 1 135 1 196 2 90 2 274 1 345 1 163 2 200 1 95 1 138 2 326 1 305 1 74 1 115 1 174 1 78 2 329 2 80 1 350 2 147 1 265 1 60 2 288 1 244 1 267 1 
222 1 173 1 0 1 217 1 218 2 38 1 251 1 350 2 321 1 300 1 373 1 161 1 90 2 332 1 288 1 379 1 167 2 380 1 280 1 
222 1 0 1 218 1 157 1 217 1 38 1 251 1 350 1 300 1 373 1 161 1 90 1 332 1 288 1 379 1 167 2 280 1 
139 1 217 1 218 1 39 1 252 1 350 1 321 1 161 1 90 1 345 1 288 1 221 1 95 1 278 1 
222 1 0 1 218 1 217 1 38 1 251 1 350 1 321 1 300 1 373 1 161 1 90 1 332 1 288 1 379 1 167 2 380 1 280 1 
64 1 
43 1 127 1 366 1 242 1 343 1 299 1 209 1 
43 2 127 1 193 1 117 1 261 1 298 1 247 1 330 1 57 1 230 1 264 1 299 1 7 1 125 1 242 1 356 1 22 1 
43 7 127 8 193 5 249 1 298 5 247 6 299 1 133 2 90 1 255 2 345 6 7 3 92 3 95 1 202 2 139 1 140 2 261 5 57 3 350 1 264 3 101 2 62 6 212 2 358 1 22 3 357 2 316 1 215 2 67 2 217 1 218 1 70 2 277 2 170 2 113 1 35 2 120 2 175 6 330 12 232 1 233 2 184 1 288 2 125 3 242 7 85 2 
43 5 127 8 193 1 215 2 298 1 247 3 67 1 110 1 158 1 133 2 299 2 255 2 7 2 325 1 93 1 259 1 202 2 261 1 175 5 330 6 57 2 232 1 180 1 264 2 233 1 59 1 148 1 210 1 62 5 212 2 125 2 242 5 85 2 268 1 22 1 
127 2 108 1 215 2 66 1 297 1 298 1 67 1 133 1 196 1 136 1 255 2 49 1 163 1 7 1 165 1 138 1 224 1 261 1 57 1 146 1 264 1 309 1 284 1 17 1 61 1 125 1 242 2 355 1 
43 1 127 1 57 1 264 1 209 1 299 1 7 1 366 1 125 1 242 1 
43 2 127 2 215 1 247 2 175 2 67 1 330 4 133 1 255 1 62 2 212 1 242 2 85 1 202 1 
43 1 193 1 261 1 298 1 299 1 22 1 
139 1 33 1 193 2 261 1 298 1 218 1 57 1 232 1 350 1 264 1 322 1 234 1 90 1 7 1 125 1 242 1 22 1 
295 1 296 1 218 1 217 1 360 1 196 3 135 1 136 1 90 1 274 1 345 1 163 3 200 1 95 1 326 1 138 2 168 1 349 1 115 1 75 1 139 1 78 2 329 1 350 1 16 1 182 1 147 1 284 2 184 1 17 2 288 1 355 2 
43 4 127 1 247 2 175 2 330 4 57 1 232 1 264 1 233 1 299 2 82 1 7 1 62 2 125 1 242 2 
172 1 72 1 154 1 
172 1 24 1 154 1 131 1 53 1 
172 1 72 1 154 1 
172 1 72 1 154 1 
172 1 188 1 154 1 
172 1 188 1 154 1 
172 1 188 1 154 1 
172 1 154 1 
211 1 292 1 
87 4 78 4 66 1 329 8 360 2 146 1 58 3 99 1 133 1 135 2 82 1 147 4 255 1 274 2 123 1 275 2 354 1 200 2 61 1 359 1 
87 3 66 1 329 6 58 2 146 1 343 1 133 1 82 1 147 3 255 1 354 1 275 2 61 1 359 1 
87 2 78 2 329 4 68 1 360 1 58 2 99 1 133 1 135 1 147 2 274 1 255 1 275 1 200 1 212 1 85 1 202 1 
87 3 329 7 58 2 99 1 133 1 147 4 148 1 47 1 210 1 255 1 275 1 325 2 212 1 85 1 202 1 
87 11 66 2 360 2 133 3 135 2 47 1 255 3 363 1 274 2 275 5 200 2 325 2 202 2 78 4 329 23 231 1 146 1 58 9 99 4 82 1 147 12 210 2 123 2 354 1 61 2 312 1 212 2 85 2 359 1 
147 1 329 1 325 1 
87 1 210 1 329 1 
87 3 78 2 329 6 68 1 360 1 58 3 99 1 133 1 135 1 147 3 274 1 255 1 275 2 200 1 212 1 85 1 202 1 357 1 
87 6 360 1 158 1 133 2 135 1 274 1 255 2 275 1 200 1 325 1 93 1 259 1 202 2 78 2 329 12 58 2 99 1 180 1 147 6 148 1 210 1 291 1 212 2 85 2 268 1 
87 3 66 1 329 6 146 1 58 2 99 1 133 1 147 3 255 1 275 1 61 1 
87 1 78 2 66 1 329 3 231 1 360 1 58 2 99 1 135 1 147 2 123 1 274 1 275 1 354 1 61 1 200 1 359 1 
87 5 78 2 297 1 66 2 329 10 360 1 58 5 146 1 99 2 133 2 135 1 147 5 274 1 255 2 275 3 200 1 61 2 291 1 
87 2 78 2 329 2 360 1 58 1 99 1 135 1 274 1 255 1 200 1 291 1 202 1 
87 2 78 2 329 4 360 1 58 2 99 1 133 1 135 1 147 2 274 1 255 1 275 1 200 1 291 1 212 1 85 1 202 1 
87 1 78 6 66 1 329 3 231 1 360 3 58 2 99 1 135 3 147 2 123 1 274 3 275 1 200 3 61 1 291 1 63 1 
87 16 66 3 68 1 360 5 272 1 133 5 135 5 47 1 274 5 255 5 275 7 200 5 325 4 202 3 78 10 329 34 308 1 231 1 146 2 58 12 99 5 82 1 147 18 148 1 123 2 353 1 210 3 354 1 61 3 291 1 63 1 212 3 85 3 359 1 
87 4 66 1 360 1 133 1 135 1 255 1 274 1 275 2 200 1 325 1 78 2 329 8 58 2 146 1 82 1 147 4 148 1 210 1 354 1 61 1 291 1 268 1 359 1 
87 6 66 1 68 1 360 2 133 1 135 2 47 1 274 2 255 2 275 2 200 2 325 2 202 1 78 4 329 11 146 1 58 3 99 1 82 1 147 5 148 1 210 1 354 1 61 1 291 1 85 1 268 1 359 1 
87 9 66 1 68 1 360 3 158 1 133 3 135 3 274 3 255 3 275 3 200 3 325 1 93 1 259 1 202 2 78 6 329 19 146 1 58 4 99 1 180 1 82 1 147 10 148 1 210 1 123 1 354 1 61 1 291 1 212 2 85 2 268 1 359 1 
87 10 66 1 68 1 360 3 158 1 133 2 135 3 274 3 255 3 275 3 200 3 325 1 93 1 259 1 202 2 78 6 329 17 146 1 58 5 99 2 180 1 82 1 147 7 148 1 123 1 210 1 354 1 61 1 291 1 212 1 85 2 268 1 359 1 
87 4 66 1 360 1 133 1 135 1 255 1 274 1 275 2 200 1 325 1 78 2 329 8 58 2 146 1 82 1 147 4 148 1 210 1 354 1 61 1 291 1 268 1 359 1 
87 6 360 1 158 1 133 2 135 1 274 1 255 2 275 1 200 1 325 1 93 1 259 1 202 2 78 2 329 12 58 2 99 1 180 1 147 6 148 1 210 1 291 1 212 2 85 2 268 1 
87 10 66 1 68 1 360 4 158 1 133 2 135 4 274 4 255 3 275 3 200 4 325 1 93 1 259 1 202 2 78 8 329 18 146 1 58 5 99 2 180 1 82 1 147 8 148 1 210 1 123 2 354 1 61 1 291 1 212 1 85 2 268 1 359 1 
87 9 360 4 158 1 133 2 135 4 274 4 255 3 275 3 200 4 325 1 93 1 259 1 202 3 78 8 329 16 58 6 99 3 180 1 147 7 148 1 210 1 123 2 291 1 63 1 212 2 85 3 268 1 
87 3 66 3 329 7 58 6 146 1 99 3 133 1 147 4 255 1 354 2 275 3 61 3 359 1 
87 10 66 1 360 4 158 1 133 2 135 4 274 4 255 3 275 3 200 4 325 1 93 1 259 1 202 2 78 8 329 18 146 1 58 4 99 1 180 1 82 1 147 8 148 1 210 1 123 2 354 1 61 1 291 1 63 1 212 1 85 2 268 1 359 1 
141 1 163 1 56 1 138 1 168 1 196 1 183 1 
77 1 141 1 56 1 160 1 183 1 196 1 149 1 163 1 239 1 138 1 168 1 191 1 
139 1 90 1 345 1 288 1 217 1 218 1 221 1 95 1 39 1 350 1 343 1 
139 1 296 1 218 1 217 1 350 1 196 2 182 1 184 1 284 1 90 1 345 1 163 2 137 1 288 1 95 1 138 1 168 1 355 1 
23 1 296 1 44 1 217 1 218 1 196 2 90 1 345 3 163 2 137 1 95 2 302 1 138 2 168 1 224 1 372 1 350 1 182 1 284 1 184 2 288 1 293 1 355 2 
23 1 296 1 44 1 217 1 218 2 196 2 90 2 345 3 163 2 137 1 95 2 302 1 138 2 168 1 224 1 372 1 350 2 351 1 284 1 184 2 286 1 288 1 293 1 355 2 
23 1 43 1 193 1 298 2 44 1 217 1 218 3 299 1 90 3 345 4 92 1 277 1 95 1 139 1 261 2 120 1 37 1 372 1 350 3 351 1 184 1 288 1 269 1 
139 1 43 1 23 1 193 1 261 2 298 2 120 1 44 1 218 3 217 1 372 1 350 3 299 1 351 1 184 1 90 3 101 1 345 4 92 1 288 1 277 1 95 1 
6 1 90 1 288 1 217 1 218 1 350 1 
139 2 86 1 173 1 26 1 369 1 218 7 217 2 350 6 46 1 6 1 184 1 362 1 90 7 60 1 345 3 288 3 336 1 95 2 280 1 243 1 358 1 
87 3 295 2 296 1 133 1 196 2 135 2 90 1 255 1 345 1 137 1 200 2 95 1 138 1 305 1 349 1 55 1 58 2 146 1 350 1 147 3 354 1 61 1 150 1 355 1 359 1 66 1 218 1 217 1 360 2 320 1 274 2 275 2 163 2 276 1 168 2 74 1 115 2 75 1 173 1 78 4 329 6 226 1 182 1 284 1 184 1 82 1 288 1 
43 1 127 1 193 2 298 3 218 1 299 1 70 1 197 1 90 1 345 2 7 2 366 1 92 1 277 1 170 1 139 1 35 1 261 3 120 1 57 2 350 1 264 2 209 1 234 1 101 1 125 2 242 1 22 1 
173 1 218 2 217 1 350 2 6 1 184 1 90 2 345 2 288 2 277 1 95 1 113 1 358 1 
139 1 173 1 218 4 217 1 39 1 350 4 235 1 351 1 90 4 345 1 288 1 221 1 95 1 
26 1 218 2 206 1 217 1 372 1 350 2 184 1 90 2 48 1 345 1 288 2 95 1 304 1 243 1 
222 1 139 1 90 1 288 1 217 1 218 1 38 1 379 1 167 1 350 1 
173 1 218 2 217 1 350 2 46 1 90 2 265 1 345 1 288 1 95 1 280 1 
139 1 173 1 218 5 217 2 372 1 39 1 350 4 46 1 235 1 90 5 362 1 345 3 288 2 221 1 95 2 336 1 
139 1 173 1 218 5 217 2 372 1 39 1 350 4 46 1 235 1 90 5 345 3 288 2 221 1 95 2 336 1 106 1 
139 1 296 1 218 1 217 1 350 1 196 2 184 1 284 1 90 1 286 1 345 1 163 2 137 1 288 1 95 1 138 1 168 1 355 1 
86 1 26 1 218 1 217 1 372 1 350 1 184 1 90 1 345 1 288 2 95 1 243 1 358 1 
143 1 36 1 174 1 80 1 130 1 196 1 163 1 94 1 138 1 
364 1 94 1 126 1 
36 1 143 1 18 1 94 1 168 1 
43 1 224 1 143 2 36 2 261 2 298 2 120 1 15 1 299 1 197 1 364 1 375 1 18 2 94 1 302 1 293 1 168 1 126 1 190 1 
368 1 169 1 343 1 171 1 
13 1 368 1 27 1 241 1 169 1 171 1 338 1 
219 1 13 1 314 1 
13 3 368 1 248 1 27 1 256 1 377 1 240 2 241 1 104 1 169 1 171 1 338 3 
220 1 13 2 368 1 27 1 176 1 241 1 169 1 171 1 338 2 
13 1 238 1 0 1 27 1 38 1 241 1 167 1 166 1 104 1 171 1 338 1 
13 1 27 1 241 1 169 1 104 1 171 1 338 1 
13 1 368 1 27 1 241 1 169 2 104 1 338 1 
13 2 27 2 45 1 374 1 290 1 241 2 169 1 104 1 171 1 338 2 
32 1 13 3 368 1 27 1 3 1 162 1 220 2 241 1 166 1 169 1 104 1 338 3 171 2 
222 1 13 2 368 1 27 1 0 1 38 1 373 1 352 1 220 1 241 1 167 2 169 1 104 1 171 1 338 2 
13 4 368 1 27 2 176 1 228 1 3 1 220 2 241 2 166 1 169 1 104 1 338 4 171 2 
13 1 368 1 27 1 241 1 169 1 104 1 171 1 338 1 
13 4 368 2 27 1 3 1 256 1 220 2 377 1 334 1 240 1 241 1 166 1 169 2 338 4 171 3 
220 1 376 1 13 1 27 1 250 1 241 1 4 1 104 1 338 2 
13 3 368 1 27 1 256 2 377 1 50 1 240 2 241 1 104 1 169 1 171 1 338 3 
340 1 21 2 88 1 171 2 
198 1 13 1 27 1 241 1 104 1 338 1 
32 1 220 1 13 2 368 1 27 1 241 1 169 1 104 1 171 1 338 2 
370 1 
13 1 368 1 27 1 241 1 169 1 104 1 171 1 338 1 
32 1 220 1 13 3 368 1 27 1 240 1 241 1 169 1 104 1 171 1 338 3 
334 1 3 1 166 1 171 1 
169 1 171 1 

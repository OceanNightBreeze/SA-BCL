#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 289 58 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 238 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
251 2 176 1 317 1 1 1 319 6 53 1 325 1 343 9 361 5 363 1 309 1 41 4 209 2 139 3 277 2 141 2 90 2 311 1 123 1 214 1 283 2 285 1 258 2 242 1 168 1 63 9 195 1 131 1 
251 2 176 1 317 1 1 1 319 6 53 1 325 1 343 9 361 5 363 1 309 1 41 4 209 2 139 3 277 2 141 2 90 2 311 1 123 1 214 1 283 2 285 1 258 2 242 1 168 1 63 9 195 1 131 1 
251 2 176 1 317 1 1 1 319 7 53 1 325 1 343 10 361 6 363 1 309 1 41 5 209 2 139 4 277 2 141 2 90 2 311 1 123 1 214 1 283 2 285 1 258 2 242 1 168 1 63 10 195 1 131 1 
251 2 176 1 317 1 1 1 319 4 53 1 325 1 343 7 361 4 363 1 41 3 209 2 139 2 277 2 141 1 90 2 311 1 123 1 214 1 283 2 285 1 258 2 242 1 168 1 63 7 195 1 131 1 
90 1 251 1 317 1 176 1 214 1 319 3 258 1 325 1 63 4 343 4 361 3 309 1 41 2 139 1 209 1 131 1 277 1 141 2 
91 1 251 1 317 1 214 1 283 1 242 1 258 1 243 1 53 1 254 1 63 2 343 2 361 1 209 1 131 1 277 1 
251 2 317 1 1 1 214 1 283 1 319 1 63 3 343 3 361 2 41 1 209 2 139 1 131 1 
251 2 1 1 317 1 176 1 319 7 7 1 325 1 343 9 361 5 309 1 41 4 139 3 209 2 277 1 141 2 90 1 311 1 214 1 283 1 258 1 168 1 63 9 97 1 131 1 
251 2 1 1 317 1 176 1 319 7 7 1 325 1 343 9 361 5 309 1 41 4 139 3 209 2 277 1 141 2 90 1 311 1 214 1 283 1 258 1 168 1 63 9 97 1 131 1 
238 1 
93 2 61 1 182 1 
279 1 105 2 354 1 341 2 261 2 31 2 38 2 301 2 
178 2 200 1 132 1 105 2 341 3 204 1 253 1 38 2 271 1 57 1 89 1 278 1 369 1 279 1 190 1 19 2 21 1 192 1 167 1 166 1 261 2 65 1 64 1 127 1 47 1 293 1 354 1 100 1 355 2 70 1 198 1 226 1 31 2 247 1 73 2 248 2 301 3 
228 1 105 1 354 1 98 1 341 1 4 1 261 1 31 1 38 1 301 1 
104 1 228 1 121 1 177 1 156 1 59 1 284 1 341 1 182 1 38 1 205 1 221 1 128 1 301 1 
104 2 228 1 121 1 177 1 105 1 156 1 284 1 341 1 261 1 182 1 38 1 205 1 128 2 31 1 301 1 
104 1 122 1 35 1 128 1 37 1 
104 2 122 1 358 1 156 1 128 2 337 1 37 1 182 1 
104 1 122 1 128 1 
104 1 228 1 105 1 341 1 110 1 4 1 37 1 261 1 38 1 98 1 354 1 128 1 31 1 301 1 
182 1 
104 2 40 1 122 1 156 1 128 2 337 1 37 1 182 1 
104 5 228 1 105 1 156 1 77 1 341 1 110 1 4 1 303 1 37 2 157 1 182 1 38 1 116 4 158 1 328 2 305 1 345 2 135 1 213 1 92 2 42 1 122 2 313 1 261 1 95 1 223 1 354 1 98 1 196 1 246 1 128 5 337 1 31 1 130 4 301 1 
238 1 
279 2 340 1 105 1 341 2 3 1 261 1 38 2 31 1 301 2 
250 1 12 1 212 1 
279 1 266 1 178 1 132 1 341 1 21 1 192 1 204 1 65 1 64 1 127 1 271 1 355 1 248 1 301 1 369 1 
250 1 178 1 132 1 341 2 21 1 60 1 192 1 204 1 261 1 38 1 64 1 65 1 127 1 271 1 136 1 355 1 31 1 248 1 369 1 301 2 
279 1 105 1 59 1 341 5 3 1 60 2 261 4 38 5 304 1 187 1 136 1 31 4 368 1 301 5 
228 1 255 1 341 2 4 1 261 2 31 2 38 2 301 2 
279 1 105 1 341 3 60 1 261 3 31 3 38 3 301 3 
228 1 341 1 4 1 261 1 31 1 38 1 301 1 
228 1 340 1 105 1 341 1 3 1 261 1 31 1 38 1 301 1 
104 1 228 1 200 1 177 1 178 1 132 1 105 2 341 4 3 1 204 1 253 1 38 3 205 1 271 1 136 1 89 1 140 1 369 1 278 1 279 1 190 1 121 1 19 1 284 1 21 1 60 1 192 1 167 1 166 1 145 1 261 3 64 1 65 1 127 1 354 1 355 1 128 1 198 1 226 1 31 3 247 1 73 2 248 1 301 4 
279 1 59 1 187 1 341 2 60 1 261 1 31 1 38 2 301 2 
104 1 228 1 177 1 121 1 105 1 284 1 341 3 3 1 60 2 145 1 261 3 182 1 38 3 205 1 263 1 136 1 128 1 31 3 301 3 
250 1 105 1 341 2 3 1 60 1 261 2 38 2 12 1 31 2 301 2 
279 1 178 1 132 1 341 1 21 1 192 1 204 1 65 1 64 1 127 1 271 1 355 1 248 1 301 1 369 1 
279 1 178 1 282 1 132 1 341 1 21 1 192 1 146 1 65 1 64 1 127 1 355 1 248 1 301 1 369 1 
250 2 253 1 115 1 328 1 345 1 85 1 330 1 12 2 88 1 89 1 212 2 190 1 191 1 19 4 167 1 166 1 62 1 293 2 222 1 170 1 198 1 73 2 247 2 153 1 
228 1 121 1 255 1 341 1 261 1 31 1 38 1 301 1 
320 1 24 1 
320 1 24 1 
372 1 117 1 
372 1 117 1 
372 1 117 1 
78 1 320 1 24 1 
320 1 359 1 24 1 
372 1 318 1 117 1 320 2 236 1 24 2 
78 1 320 1 24 1 
78 1 320 1 24 1 
232 1 320 1 24 1 
232 1 320 1 24 1 
232 1 320 1 24 1 
154 1 104 1 230 1 320 1 341 2 359 1 134 1 231 1 38 2 367 1 332 1 16 1 279 1 281 1 312 1 124 1 94 1 261 2 351 1 24 1 336 1 128 1 31 2 301 2 
154 2 104 2 318 1 281 3 124 2 320 2 217 1 134 1 180 2 81 1 182 1 351 2 24 2 336 2 171 1 245 1 128 2 225 1 152 1 
90 1 258 1 277 1 
258 1 277 1 254 1 
90 2 207 1 346 1 356 1 258 3 254 1 
90 1 346 1 356 1 258 2 254 1 174 1 
90 1 346 1 356 2 258 2 254 1 
104 5 302 1 156 1 133 1 231 1 303 1 111 1 37 4 342 1 182 2 116 3 328 1 327 2 345 1 159 1 233 2 367 1 13 2 213 1 42 1 93 3 122 1 312 1 61 1 289 1 25 1 95 1 222 1 128 5 337 1 130 2 153 1 
104 7 77 1 156 1 35 3 133 1 231 2 52 1 303 1 37 5 342 1 182 3 116 3 328 1 327 2 345 1 159 1 13 2 213 1 42 1 93 3 122 4 287 3 61 1 289 1 147 1 95 1 222 1 128 7 299 1 337 1 130 2 153 1 
104 2 25 1 77 1 128 2 111 1 37 1 289 1 
104 1 25 1 77 1 128 1 58 1 111 1 289 1 
238 1 
127 1 160 1 
148 1 
127 1 132 1 192 1 
127 1 181 1 
127 1 132 1 
127 3 132 1 215 1 163 2 137 1 192 1 
74 1 19 7 179 1 259 1 157 1 62 2 326 1 328 1 305 1 345 1 293 4 170 3 223 1 365 1 72 2 247 3 32 1 
74 1 19 7 179 1 259 1 157 1 62 2 326 1 328 1 305 1 345 1 293 4 170 3 223 1 365 1 72 2 247 3 32 1 
74 1 19 7 179 1 259 1 157 1 62 2 326 1 328 1 305 1 345 1 293 4 170 3 223 1 365 1 86 1 72 2 247 3 32 1 
74 1 326 1 344 1 305 1 87 1 190 1 334 1 19 6 240 1 144 1 259 2 260 1 166 1 167 1 169 1 62 1 293 3 223 1 170 2 198 1 72 1 247 3 73 2 32 1 
199 1 179 1 157 1 326 1 328 1 305 1 345 1 206 1 365 1 190 2 19 9 259 1 167 2 166 2 260 1 62 3 293 5 170 4 223 1 198 2 72 2 73 4 247 4 32 1 
251 1 317 1 178 1 319 1 108 1 82 1 254 1 343 2 361 1 306 1 207 1 257 1 209 1 277 1 369 1 90 1 214 1 283 1 335 1 164 1 258 2 290 1 63 2 64 1 67 1 355 1 296 1 131 1 248 1 49 1 
251 1 178 1 50 1 319 2 108 1 254 1 343 3 361 1 306 1 207 1 257 1 209 1 277 1 120 1 369 1 90 1 43 1 214 1 283 1 335 1 258 2 290 1 63 3 64 1 67 1 355 1 296 1 131 1 248 1 49 1 
178 1 50 1 319 2 108 1 254 1 343 2 361 1 306 1 207 1 257 1 277 1 369 1 90 1 43 1 214 1 283 1 258 2 290 1 63 2 64 1 67 1 355 1 131 1 248 1 49 1 
251 1 178 1 132 1 6 1 184 1 343 1 306 2 119 1 257 2 209 1 120 1 369 1 283 2 46 1 350 1 64 1 65 1 63 1 127 1 28 1 355 1 248 1 49 2 
251 1 317 1 178 1 50 1 108 1 254 1 343 1 306 1 207 1 257 1 209 1 277 1 369 1 90 1 283 1 335 1 164 1 258 2 290 1 63 1 64 1 67 1 355 1 296 1 248 1 49 1 
172 1 
104 4 51 1 303 1 5 2 8 1 116 2 119 1 213 1 122 6 17 1 61 2 65 2 64 1 127 1 355 2 128 4 130 2 175 1 75 1 178 2 132 1 133 1 321 2 323 1 80 2 182 1 184 1 364 2 275 1 234 1 369 1 42 1 280 1 44 1 93 2 288 2 194 1 149 2 95 1 101 1 295 2 337 3 248 2 103 2 
104 2 280 1 122 2 51 1 194 1 40 1 364 1 101 1 128 2 234 1 337 1 
104 1 194 1 280 1 51 1 101 1 321 1 234 1 128 1 103 1 
104 2 280 1 122 2 51 1 321 1 40 1 194 1 149 1 364 1 101 1 128 2 234 1 337 1 103 1 
104 4 105 1 51 1 156 2 341 1 107 1 110 1 4 1 303 1 5 2 116 1 213 1 122 7 61 2 261 1 23 1 354 1 128 4 31 1 130 1 173 1 227 1 228 1 75 1 321 3 323 1 80 2 182 2 38 1 40 1 364 4 234 1 42 1 280 1 288 2 194 1 149 4 95 1 98 1 101 1 295 2 337 3 103 3 301 1 249 1 
104 3 175 1 75 1 156 1 51 1 321 2 303 1 323 1 5 2 80 2 182 2 116 1 364 2 234 1 213 1 42 1 280 1 93 2 122 4 288 2 61 2 149 2 194 1 95 1 101 1 295 2 128 3 337 2 130 1 103 2 
104 3 75 1 156 1 51 1 107 1 321 2 303 1 5 2 323 1 80 2 182 1 116 1 364 2 234 1 213 1 42 1 280 1 122 4 288 2 61 2 23 1 149 2 194 1 95 1 101 1 295 2 128 3 337 2 130 1 103 2 249 1 
104 3 75 1 156 1 51 1 107 1 321 2 303 1 5 2 323 1 80 2 182 1 116 1 364 2 234 1 213 1 42 1 280 1 122 4 288 2 61 2 23 1 149 2 194 1 95 1 101 1 295 2 128 3 337 2 130 1 103 2 249 1 
104 3 75 1 156 1 51 1 321 2 303 1 182 1 116 1 364 2 307 1 208 1 366 1 234 1 213 1 42 1 93 2 280 1 122 4 286 2 288 2 149 2 194 1 95 1 315 2 101 1 295 2 128 3 337 2 130 1 103 2 249 1 
104 3 75 1 156 1 51 1 107 1 321 3 303 1 5 2 323 1 80 2 182 1 116 1 364 3 234 1 213 1 42 1 280 1 122 5 288 2 61 2 23 1 149 3 194 1 95 1 101 1 295 2 128 3 337 2 130 1 103 3 173 1 249 1 
104 3 75 1 156 1 51 1 107 1 321 3 303 1 5 2 323 1 80 2 182 1 116 1 364 3 234 1 213 1 42 1 280 1 122 5 288 2 61 2 23 1 149 3 194 1 95 1 101 1 295 2 128 3 337 2 130 1 103 3 173 1 249 1 
104 3 175 1 75 1 156 1 51 1 321 2 303 1 182 1 116 1 364 2 307 1 234 1 213 1 42 1 280 1 93 2 122 4 288 2 286 2 149 2 194 1 95 1 315 2 101 1 295 2 128 3 337 2 130 1 103 2 
238 1 190 1 85 1 198 1 167 1 166 1 73 2 253 1 89 1 
250 8 228 1 202 1 36 1 360 1 253 2 326 1 84 1 328 1 345 2 159 2 87 2 12 3 89 1 212 8 279 1 190 2 334 2 19 11 167 2 166 2 193 1 62 1 373 1 293 6 48 1 222 1 170 2 198 2 226 1 247 5 73 4 153 2 
266 1 178 1 132 1 106 1 341 2 360 1 204 1 253 1 38 1 271 1 136 1 12 1 89 1 369 1 142 1 279 1 190 1 19 2 21 1 60 1 192 1 166 1 167 1 261 1 64 1 65 1 127 1 293 1 355 1 30 1 198 1 70 1 31 1 226 1 73 2 247 1 248 1 301 2 
250 7 200 2 50 1 341 3 204 2 157 1 253 3 305 1 345 3 159 2 11 2 12 7 14 2 212 7 19 20 60 1 21 2 167 3 166 3 261 1 62 4 65 1 64 2 352 1 127 2 26 2 222 2 223 1 170 8 355 3 70 1 72 1 226 1 31 1 73 6 178 3 132 2 179 1 360 1 270 1 38 1 326 4 328 3 271 2 136 1 365 1 329 1 276 2 89 3 369 2 279 2 190 3 192 2 293 10 198 3 247 10 248 3 153 2 301 3 
229 1 0 1 252 1 178 7 50 1 132 2 341 1 253 2 82 1 38 1 184 1 185 1 85 1 119 1 256 1 89 2 369 2 190 2 19 2 60 1 126 1 167 2 166 2 261 1 64 2 65 2 127 3 47 2 293 1 355 8 198 2 70 1 31 1 226 1 73 4 247 1 248 8 357 1 301 1 
250 1 105 1 341 1 3 1 360 1 253 1 38 1 328 1 345 1 159 1 12 1 89 1 212 1 190 1 143 1 19 3 167 1 166 1 261 1 62 1 293 1 222 1 170 1 198 1 31 1 73 2 247 2 153 1 301 1 
250 1 190 1 19 2 166 1 167 1 253 1 326 1 345 1 293 2 85 1 170 1 330 1 12 1 198 1 73 2 89 1 153 1 212 1 
250 1 190 1 19 2 166 1 167 1 253 1 62 1 115 1 328 1 85 1 222 1 170 1 12 1 198 1 73 2 247 2 89 1 212 1 
250 2 253 1 326 1 328 1 345 1 159 1 85 1 12 2 89 1 212 2 190 1 19 4 167 1 166 1 62 1 293 2 222 1 170 2 198 1 73 2 247 2 153 1 
250 1 190 1 19 2 166 1 167 1 253 1 326 1 345 1 293 2 170 1 330 1 12 1 198 1 73 2 357 1 89 1 153 1 212 1 
250 1 190 1 19 2 166 1 167 1 253 1 62 1 115 1 328 1 222 1 170 1 12 1 198 1 73 2 247 2 357 1 89 1 212 1 
250 2 253 1 326 1 328 1 345 1 159 1 12 2 89 1 212 2 190 1 19 4 167 1 166 1 62 1 293 2 222 1 170 2 198 1 73 2 247 2 153 1 357 1 
250 2 253 1 326 1 328 1 345 1 159 1 12 2 89 1 212 2 190 1 19 4 167 1 166 1 62 1 293 2 222 1 170 2 198 1 73 2 247 2 153 1 
200 1 178 1 132 1 341 1 204 1 253 1 271 1 89 1 369 1 279 1 190 1 19 2 21 1 192 1 166 1 167 1 64 1 65 1 127 1 293 1 355 1 70 1 198 1 226 1 73 2 247 1 248 1 301 1 
178 1 132 1 341 1 253 1 183 1 89 1 369 1 279 1 190 1 282 1 19 2 21 1 192 1 166 1 167 1 146 1 64 1 65 1 127 1 293 1 355 1 70 1 198 1 226 1 73 2 247 1 248 1 301 1 
250 2 360 1 253 1 326 1 328 1 345 1 159 1 12 2 89 1 212 2 190 1 19 4 167 1 166 1 62 1 293 2 222 1 170 2 198 1 73 2 247 2 153 1 
250 2 200 1 178 1 132 1 341 1 204 1 253 1 82 1 326 1 328 1 345 1 271 1 159 1 12 2 276 1 89 1 212 2 369 1 190 1 19 4 21 1 192 1 166 1 167 1 62 1 64 1 127 1 293 2 222 1 170 2 355 1 198 1 247 2 73 2 153 1 248 1 301 1 
250 1 105 1 341 1 3 1 360 1 253 1 38 1 326 1 328 1 345 1 159 1 12 1 89 1 212 1 239 1 190 1 19 3 167 1 166 1 261 1 293 2 222 1 170 1 198 1 31 1 247 1 73 2 153 1 301 1 
2 1 76 1 179 1 322 3 157 1 83 1 326 3 114 1 305 1 328 4 118 1 206 1 345 4 159 3 272 1 365 1 87 2 333 1 237 1 211 1 190 4 334 2 19 33 125 1 260 2 167 4 166 4 169 2 62 2 220 1 353 1 293 17 222 3 223 1 170 5 29 1 198 4 72 1 73 8 247 16 153 3 
76 1 322 3 326 1 114 1 328 1 118 2 206 1 345 2 159 2 272 1 87 2 237 1 211 2 190 3 19 20 334 2 165 1 125 1 260 2 167 3 166 3 169 2 62 1 220 1 353 1 293 11 222 1 170 2 29 1 198 3 247 9 73 6 153 2 
2 1 76 1 179 1 322 3 157 1 326 3 114 1 305 1 328 3 118 1 206 1 345 3 159 2 272 1 365 1 87 2 237 1 211 1 190 4 334 2 19 29 165 1 125 1 260 2 167 4 166 4 169 2 62 2 220 1 353 1 293 15 222 2 223 1 170 5 29 1 198 4 72 1 73 8 247 14 153 2 
2 1 76 1 179 1 322 3 157 1 326 3 114 1 305 1 328 3 118 1 206 1 345 3 159 2 272 1 365 1 87 2 237 1 211 1 190 4 334 2 19 29 165 1 125 1 260 2 167 4 166 4 169 2 62 2 220 1 353 1 293 15 222 2 223 1 170 5 29 1 198 4 72 1 73 8 247 14 153 2 
76 1 322 3 326 2 114 1 328 2 118 1 206 1 345 2 159 2 272 1 87 2 237 1 211 1 190 3 334 2 19 22 165 1 125 1 260 2 167 3 166 3 169 2 62 2 220 1 353 1 293 11 222 2 170 4 29 1 198 3 73 6 247 11 153 2 
154 1 336 1 66 1 318 1 124 1 320 1 217 1 225 1 351 1 24 1 
359 1 16 1 
262 1 154 1 336 1 124 1 320 1 268 1 269 1 351 1 24 1 
78 1 102 1 
232 1 314 1 236 1 
104 1 154 1 318 1 281 2 124 1 320 1 217 1 134 1 180 1 182 1 351 1 24 1 336 1 171 1 245 1 128 1 225 1 152 1 
104 1 154 1 318 1 281 2 124 1 320 1 217 1 134 1 180 1 182 1 351 1 24 1 336 1 171 1 245 1 128 1 225 1 152 1 
104 1 154 1 318 1 281 2 124 1 320 1 217 1 134 1 180 1 182 1 351 1 24 1 336 1 171 1 245 1 128 1 225 1 152 1 
78 1 236 1 102 1 
78 1 236 1 102 1 
232 1 314 1 
232 1 314 1 236 1 
230 1 94 1 
104 1 154 1 230 1 320 1 341 2 359 1 180 1 231 1 37 1 38 2 367 1 332 1 16 1 279 1 281 1 312 1 124 1 94 1 261 2 351 1 24 1 336 1 171 1 265 1 128 1 31 2 301 2 
229 1 0 1 33 1 178 2 132 1 34 1 341 2 360 1 324 1 253 1 38 2 362 1 89 1 369 1 190 1 19 2 166 1 167 1 64 1 127 1 47 2 293 1 355 2 298 1 198 1 70 1 226 1 73 2 247 1 248 2 301 2 
90 1 178 2 267 1 50 1 258 2 108 1 254 1 82 1 64 1 67 1 207 1 99 1 355 2 296 1 71 1 277 1 248 2 369 1 49 1 
90 1 178 1 50 1 241 1 258 2 108 1 254 1 64 1 67 1 207 1 99 1 355 1 296 1 277 1 248 1 49 1 369 1 
178 1 132 1 18 1 46 1 184 1 64 1 65 1 127 1 119 1 355 1 71 1 248 1 369 1 49 1 
90 1 178 1 267 1 50 1 258 2 108 1 254 1 64 1 67 1 207 1 99 1 355 1 296 1 71 1 277 1 248 1 49 1 369 1 
109 1 
238 1 
104 1 156 1 303 1 5 1 323 1 80 1 182 2 116 1 213 1 42 1 93 1 122 1 61 1 95 1 128 1 337 1 130 1 
104 5 156 2 303 4 8 1 116 9 345 2 159 2 160 3 55 1 56 2 308 2 163 2 13 6 15 2 14 2 213 4 122 5 349 1 215 1 20 1 218 1 61 6 64 2 65 1 127 6 27 2 222 2 355 2 128 5 316 2 130 8 178 2 177 2 132 1 133 2 182 8 82 1 327 6 328 2 186 1 135 2 369 1 92 2 42 4 93 12 192 1 244 1 95 4 337 3 248 2 153 2 
104 1 76 1 156 1 303 2 182 4 116 7 327 5 328 2 345 2 159 2 13 5 87 1 237 1 92 1 213 2 42 2 93 6 122 1 334 1 125 1 61 3 169 1 95 2 353 1 222 2 29 1 128 1 197 1 337 1 130 4 153 2 
104 1 228 1 105 1 341 1 107 1 110 1 4 1 303 1 157 1 38 1 116 2 305 1 328 1 345 2 135 1 92 2 213 1 42 1 313 1 261 1 95 1 223 1 98 1 354 1 128 1 31 1 130 2 301 1 
213 1 42 1 95 1 303 1 
104 1 122 1 156 1 128 1 337 1 182 1 
104 2 178 2 132 1 77 1 133 1 303 1 184 1 116 1 8 1 55 1 119 1 275 1 369 1 213 1 42 1 17 1 122 2 64 1 65 2 127 1 95 1 355 2 128 2 337 1 130 1 248 2 
178 1 200 1 105 2 132 1 341 3 204 1 253 1 38 2 271 1 89 1 278 1 369 1 279 1 190 1 19 1 21 1 192 1 167 1 166 1 261 2 65 1 64 1 127 1 354 1 355 1 198 1 226 1 31 2 247 1 73 2 248 1 301 3 
213 1 42 1 93 4 156 2 133 1 61 2 303 1 182 4 116 1 8 1 327 2 95 1 13 2 72 1 130 2 
10 1 124 1 351 1 
230 1 124 1 217 1 235 1 351 1 
10 1 124 1 351 1 
10 1 124 1 351 1 
291 1 124 1 351 1 
291 1 124 1 351 1 
291 1 124 1 351 1 
124 1 351 1 
320 1 24 1 
190 2 19 8 179 1 166 2 167 2 260 1 157 1 62 2 326 1 328 1 305 1 345 1 293 4 170 3 223 1 365 1 198 2 72 1 247 4 73 4 
238 1 
190 1 19 4 112 1 166 1 167 1 62 1 326 1 328 1 345 1 159 1 293 2 222 1 170 2 198 1 247 2 73 2 153 1 
293 1 19 2 334 1 87 1 169 1 247 1 
179 1 202 1 157 2 326 4 305 2 328 5 345 5 159 2 365 1 87 2 190 1 313 1 19 25 334 2 260 1 166 1 167 1 193 1 62 4 48 1 293 13 222 2 223 2 170 8 198 1 72 1 247 12 73 2 153 2 
19 1 334 1 247 1 
293 1 19 1 87 1 
190 1 19 6 167 1 166 1 112 1 62 2 326 1 328 1 345 1 159 1 293 3 222 1 170 3 198 1 14 1 73 2 247 3 153 1 
76 1 326 1 328 2 206 1 345 2 159 2 87 1 237 1 190 1 19 12 334 1 125 1 167 1 166 1 169 1 62 1 353 1 293 6 222 2 170 2 29 1 198 1 247 6 73 2 153 2 
19 6 157 1 62 1 326 1 328 1 305 1 345 1 293 3 223 1 170 2 247 3 
190 1 19 3 179 1 240 1 260 1 166 1 167 1 62 1 326 1 305 1 293 1 170 2 223 1 365 1 198 1 247 2 73 2 
190 1 313 1 19 10 167 1 166 1 157 1 62 3 326 2 305 2 328 2 206 1 345 2 293 5 223 2 170 5 198 1 73 2 247 5 
190 1 19 2 166 1 167 1 326 1 206 1 345 1 293 2 170 1 198 1 73 2 153 1 
190 1 19 4 166 1 167 1 62 1 326 1 328 1 206 1 345 1 159 1 293 2 222 1 170 2 198 1 247 2 73 2 153 1 
2 1 190 3 19 3 240 1 260 1 166 3 167 3 62 1 326 1 305 1 206 1 293 1 223 1 170 2 198 3 247 2 73 6 
2 1 179 1 112 1 157 1 326 3 328 2 305 2 345 2 206 1 365 1 87 1 190 4 313 1 334 1 19 15 240 1 144 1 167 4 166 4 260 1 169 1 62 3 293 7 170 6 223 2 198 4 247 8 73 8 
76 1 326 1 328 1 206 1 345 2 159 2 87 1 237 1 190 2 19 11 334 1 125 1 260 1 167 2 166 2 169 1 62 1 353 1 293 7 222 1 170 2 29 1 198 2 247 4 73 4 153 2 
76 1 112 1 326 1 328 1 206 1 345 2 159 2 87 1 237 1 190 3 19 11 334 1 125 1 260 1 167 3 166 3 169 1 62 1 353 1 293 7 222 1 170 2 29 1 198 3 247 4 73 6 153 2 
76 1 112 1 326 1 328 2 206 1 345 2 159 2 87 1 237 1 190 3 19 13 334 1 125 1 167 3 166 3 260 1 169 1 62 1 353 1 293 6 222 2 170 2 29 1 198 3 247 7 73 6 153 2 
76 1 112 1 326 1 328 1 206 1 345 2 159 2 87 1 237 1 190 3 19 11 334 1 125 1 260 1 167 3 166 3 169 1 62 1 353 1 293 7 222 1 170 2 29 1 198 3 247 4 73 6 153 2 
76 1 326 1 328 1 206 1 345 2 159 2 87 1 237 1 190 2 19 11 334 1 125 1 260 1 167 2 166 2 169 1 62 1 353 1 293 7 222 1 170 2 29 1 198 2 247 4 73 4 153 2 
76 1 326 1 328 2 206 1 345 2 159 2 87 1 237 1 190 1 19 12 334 1 125 1 167 1 166 1 169 1 62 1 353 1 293 6 222 2 170 2 29 1 198 1 247 6 73 2 153 2 
76 1 112 1 326 1 328 1 206 1 345 2 159 2 87 1 237 1 190 4 19 12 334 1 125 1 167 4 166 4 260 2 169 1 62 1 353 1 293 7 222 1 170 2 29 1 198 4 247 5 73 8 153 2 
2 1 76 1 326 2 328 1 206 1 345 2 159 2 87 1 237 1 190 4 19 12 334 1 125 1 167 4 166 4 260 2 169 1 62 2 353 1 293 7 222 1 170 4 29 1 198 4 247 5 73 8 153 2 
19 7 179 1 157 1 62 3 326 3 328 1 305 3 345 1 293 3 223 3 170 6 365 2 247 4 
2 1 76 1 326 1 328 1 206 1 345 2 159 2 87 1 237 1 190 4 19 12 334 1 125 1 167 4 166 4 260 2 169 1 62 1 353 1 293 7 222 1 170 2 29 1 198 4 247 5 73 8 153 2 
279 1 59 1 187 1 341 1 129 1 38 1 301 1 
279 1 59 1 201 1 341 1 38 1 9 1 294 1 187 1 129 1 347 1 310 1 301 1 
238 1 178 1 355 1 248 1 65 1 
279 1 178 1 132 1 341 2 21 1 60 1 192 1 261 1 38 1 64 1 65 1 127 1 271 1 355 1 31 1 248 1 301 2 369 1 
228 1 178 1 132 2 341 2 181 1 38 2 205 1 271 1 369 1 279 1 121 1 60 1 21 1 192 2 261 2 64 1 127 3 292 1 150 1 355 1 31 1 248 1 301 2 
228 1 178 2 132 2 341 2 181 1 38 2 205 1 188 1 369 1 279 1 121 1 60 1 21 1 192 2 261 2 146 1 64 1 127 3 292 1 150 1 355 2 31 1 248 2 301 2 
104 2 178 3 177 1 132 1 156 1 181 1 182 1 160 1 188 1 163 1 369 1 122 1 192 1 22 1 219 1 64 1 65 1 127 4 292 1 150 1 355 3 128 2 248 3 
104 2 177 1 178 3 122 1 132 1 156 1 192 1 181 1 182 1 65 1 64 1 127 4 292 1 160 1 188 1 150 1 355 3 163 1 128 2 15 1 248 3 369 1 
178 1 185 1 355 1 248 1 64 1 369 1 
339 1 0 1 155 1 252 1 178 6 50 1 132 2 215 1 126 1 192 1 82 1 113 1 65 2 64 3 47 1 127 3 185 1 256 1 355 7 248 7 369 2 
250 1 200 1 341 2 204 1 157 1 253 2 305 1 345 1 12 1 212 1 19 6 60 1 21 1 167 2 166 2 261 1 62 2 64 1 127 1 26 1 223 1 170 2 355 1 31 1 72 1 73 4 178 1 132 1 179 1 360 1 82 1 38 1 328 1 271 1 362 1 365 1 276 1 89 2 369 1 279 2 190 2 192 1 293 3 198 2 247 3 248 1 301 2 
104 3 178 1 177 1 156 1 303 2 37 1 182 1 116 1 160 1 55 1 56 1 163 1 15 1 213 2 42 2 122 2 218 1 244 1 65 1 127 2 95 2 27 1 355 1 128 3 337 1 316 1 130 1 248 1 
178 1 132 1 215 1 20 1 192 1 148 1 64 2 127 2 185 1 163 1 355 1 248 1 369 1 
178 4 132 1 82 1 184 1 64 1 65 1 127 1 188 1 119 1 355 4 274 1 248 4 369 1 
339 1 178 2 132 1 192 1 270 1 113 1 64 2 127 1 292 1 355 2 297 1 331 1 248 2 369 1 
178 1 355 1 258 1 108 1 277 1 254 1 248 1 64 1 369 1 65 1 
127 1 0 1 178 2 132 1 50 1 355 2 324 1 248 2 82 1 64 1 369 1 
0 1 178 4 252 1 132 2 126 1 184 1 82 1 65 1 64 2 127 3 292 1 119 1 355 5 274 1 248 5 369 2 
0 1 178 4 252 1 132 2 79 1 184 1 82 1 65 1 64 2 127 3 292 1 119 1 355 5 274 1 248 5 369 2 
279 1 178 1 132 1 341 2 21 1 60 1 192 1 261 1 146 1 38 1 64 1 65 1 127 1 355 1 31 1 248 1 301 2 369 1 
339 1 155 1 178 1 132 1 215 1 192 1 113 1 64 2 127 1 292 1 355 1 248 1 369 1 
39 1 279 1 370 1 203 1 371 1 
104 2 279 1 228 1 189 1 370 2 177 1 121 1 156 1 284 1 216 1 203 2 371 2 37 1 145 1 182 1 205 1 39 1 96 1 128 2 
39 1 33 1 34 1 341 1 203 1 298 1 371 1 38 1 301 1 
39 1 189 1 96 1 
238 1 
343 1 251 1 361 1 214 1 209 1 131 1 63 1 
283 1 257 1 63 1 
251 1 317 1 214 1 242 2 63 3 343 3 361 1 54 1 161 1 264 1 209 1 131 1 
343 2 251 1 361 1 214 1 319 1 209 1 131 1 141 1 63 2 
90 1 251 1 317 1 176 1 258 1 63 1 343 1 361 1 41 1 209 1 277 1 
343 1 251 1 317 1 361 1 209 1 131 1 63 1 
343 1 251 1 317 1 214 1 209 1 131 2 63 1 
348 1 251 2 317 1 63 2 343 2 361 1 68 1 374 1 209 2 131 1 
251 1 311 1 317 1 214 1 319 2 168 1 63 3 343 3 361 2 41 1 209 1 139 1 131 1 
90 1 251 1 317 1 214 1 319 1 258 2 254 1 63 2 343 2 361 1 207 1 138 1 209 1 131 1 277 1 
251 2 317 1 214 1 319 2 63 4 343 4 361 2 309 1 41 1 209 2 139 1 131 1 141 1 
343 1 251 1 317 1 361 1 214 1 209 1 131 1 63 1 
251 1 214 2 319 2 242 1 63 4 343 4 361 3 161 1 273 1 264 1 41 1 209 1 139 1 131 2 
251 1 317 1 45 1 214 1 319 1 7 1 63 2 343 2 361 1 209 1 338 1 131 1 
251 1 317 1 214 1 242 2 63 3 343 3 361 1 161 2 264 1 162 1 209 1 131 1 
361 2 224 1 69 2 210 1 
343 1 251 1 317 1 300 1 209 1 63 1 
343 2 251 1 317 1 361 1 214 1 319 1 168 1 209 1 131 1 63 2 
151 1 
343 1 251 1 317 1 361 1 214 1 209 1 131 1 63 1 
343 3 251 1 317 1 361 1 214 1 319 1 242 1 168 1 209 1 131 1 63 3 
361 1 273 1 41 1 139 1 
361 1 131 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 343 (235,237) (235,237) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 343 (235,237) (235,237) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 343 (235,237) (235,237) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 343 (235,237) (235,237) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 343 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 343 28 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 343 28 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 275 (76,169,255) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (58,311,351) (58,311,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (58,311,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (58,311,351) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (2,68) (2,68) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (58,311,351) (58,311,351) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 48 322 174 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 48 322 174 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 9 271 2 90 1 119 1 203 2 188 1 332 1 124 2 304 1 5 4 229 2 334 4 129 1 36 1 154 9 364 1 235 1 237 1 317 2 17 2 265 1 343 1 109 6 183 3 114 2 25 1 
44 9 271 2 90 1 119 1 203 2 188 1 332 1 124 2 304 1 5 4 334 4 229 2 129 1 36 1 154 9 364 1 235 1 237 1 317 2 17 2 265 1 343 1 109 6 183 3 114 2 25 1 
44 9 271 2 90 1 119 1 203 2 188 1 332 1 124 2 304 1 5 4 334 4 229 2 129 1 36 1 154 9 364 1 235 1 237 1 317 2 17 2 265 1 343 1 109 6 183 3 114 2 25 1 
44 7 271 2 90 1 119 1 203 2 188 1 332 1 124 2 5 3 334 3 229 1 129 1 36 1 154 7 364 1 235 1 237 1 317 2 17 2 265 1 343 1 109 4 183 2 114 2 25 1 
271 1 44 4 203 1 17 1 343 1 124 1 304 1 109 3 5 2 229 2 334 2 183 1 129 1 114 1 25 1 154 4 
364 1 283 1 329 1 271 1 44 2 317 1 203 1 297 1 138 1 299 1 265 1 124 1 334 1 114 1 25 1 154 2 
283 1 271 2 44 3 119 1 317 1 297 1 109 1 5 1 334 2 183 1 114 2 25 1 154 3 
28 1 271 2 44 9 119 1 317 1 203 1 17 1 332 1 343 1 124 1 304 1 109 7 5 4 229 2 334 4 129 1 183 3 114 2 36 1 25 1 154 9 291 1 
28 1 271 2 44 9 119 1 317 1 203 1 17 1 332 1 343 1 124 1 304 1 109 7 5 4 229 2 334 4 129 1 183 3 114 2 36 1 25 1 154 9 291 1 
344 1 240 1 160 1 
87 1 344 1 165 2 
225 2 357 2 88 2 153 2 267 2 37 1 246 2 379 1 
86 1 201 1 117 1 328 1 88 3 146 1 219 2 225 3 357 2 303 2 358 1 153 2 96 1 97 1 128 1 309 2 257 2 368 1 191 1 192 1 37 1 315 1 262 1 318 1 81 1 14 2 61 1 321 1 84 1 267 2 62 1 112 1 143 1 378 1 200 1 246 2 379 1 
88 1 71 1 355 1 357 1 225 1 267 1 153 1 244 1 246 1 379 1 
292 1 0 1 88 1 160 1 195 1 32 1 355 1 373 1 105 1 344 1 225 1 164 1 63 1 246 1 
101 1 292 1 0 1 88 2 71 1 160 1 32 1 355 2 105 2 373 1 344 1 357 2 225 2 267 2 153 2 244 1 63 2 246 2 379 1 
105 1 361 1 111 1 63 1 307 1 
105 2 344 1 361 1 198 1 63 2 177 1 160 1 307 1 
105 1 63 1 307 1 
101 1 88 1 71 1 355 1 105 1 357 1 225 1 361 1 267 1 153 1 244 1 63 1 246 1 379 1 
344 1 
105 2 344 1 361 1 353 1 63 2 177 1 160 1 307 1 
156 1 365 1 145 1 59 1 158 2 352 1 177 1 160 1 212 1 204 1 105 5 344 1 276 1 361 2 217 2 53 1 63 5 245 2 307 2 
240 1 37 1 
284 1 88 2 37 1 250 1 355 1 225 2 357 1 267 1 153 1 99 1 246 2 
310 1 260 1 295 1 
201 1 117 1 328 1 88 1 192 1 37 1 45 1 318 1 81 1 14 1 61 1 225 1 128 1 378 1 309 1 257 1 
201 1 117 1 328 1 88 2 192 1 295 1 81 1 134 1 318 1 14 1 61 1 224 1 225 2 267 1 153 1 128 1 378 1 246 1 309 1 257 1 
88 5 37 1 250 1 134 1 355 1 51 1 224 2 225 5 357 1 267 4 153 4 164 1 126 1 199 1 99 1 246 5 
225 1 88 1 153 1 267 1 71 1 246 1 355 1 
88 2 37 1 355 1 224 1 225 2 267 2 153 2 99 1 246 2 
225 1 88 1 153 1 267 1 71 1 246 1 355 1 
284 1 88 1 250 1 355 1 357 1 225 1 267 1 153 1 246 1 
201 1 117 1 328 1 292 1 0 1 88 4 146 1 219 2 30 1 250 1 32 1 355 1 224 1 357 2 225 4 303 1 153 3 97 1 128 1 309 1 257 1 368 1 192 1 37 1 315 1 262 1 102 1 81 1 318 1 134 1 14 1 61 1 321 1 373 1 105 1 84 1 267 3 62 1 112 1 63 1 378 1 200 1 246 3 379 1 
88 2 37 1 355 1 224 1 51 1 225 2 267 1 153 1 164 1 99 1 246 2 
292 1 0 1 88 3 250 1 30 1 134 1 32 1 355 1 105 1 373 1 224 2 357 1 344 1 225 3 267 3 153 3 63 1 269 1 246 3 
310 1 224 1 225 2 357 1 88 2 153 2 267 2 250 1 295 1 246 2 
201 1 117 1 328 1 88 1 192 1 37 1 318 1 81 1 14 1 61 1 225 1 128 1 378 1 309 1 257 1 
281 1 201 1 117 1 328 1 88 1 314 1 192 1 37 1 81 1 14 1 225 1 128 1 378 1 309 1 257 1 
86 2 67 1 219 2 147 1 146 2 295 2 148 1 150 1 223 1 303 4 97 1 310 2 282 1 259 1 315 1 260 2 262 1 321 1 84 1 215 1 376 1 141 1 62 1 290 1 
0 1 88 1 13 1 355 1 225 1 267 1 153 1 246 1 
330 1 255 1 
330 1 255 1 
275 1 169 1 
275 1 169 1 
275 1 330 1 255 1 169 1 
330 1 255 1 194 1 
275 1 330 1 255 1 169 1 
330 1 255 1 76 1 
330 1 255 1 194 1 
330 1 255 1 194 1 
327 1 330 1 255 1 
327 1 330 1 255 1 
327 1 330 1 255 1 
325 1 88 2 37 1 330 1 60 1 70 1 263 1 137 1 296 1 105 1 106 1 374 1 225 2 190 1 267 2 153 2 255 1 63 1 76 1 211 1 337 1 34 1 246 2 65 1 
270 1 330 2 60 2 213 1 137 3 47 1 296 2 49 2 105 2 239 1 374 2 344 1 123 1 190 2 255 2 63 2 56 1 33 1 65 1 
17 1 124 1 203 1 
299 1 124 1 203 1 
17 2 299 1 209 1 277 1 289 1 203 3 
17 1 299 1 274 1 209 1 277 1 203 2 
17 1 299 1 209 2 277 1 203 2 
87 1 88 1 46 2 225 1 153 1 54 1 230 1 156 3 282 1 101 1 158 1 59 2 160 1 105 5 344 2 108 1 196 2 244 1 165 3 63 5 245 1 290 1 246 1 118 2 67 1 167 1 71 1 355 1 357 1 361 4 211 1 308 1 307 1 177 1 212 1 376 1 267 1 140 1 217 1 379 1 
87 1 88 1 46 2 94 2 225 1 153 1 54 1 230 1 156 3 282 1 101 1 234 1 11 1 158 1 59 2 160 1 105 5 344 2 196 2 111 2 244 1 165 3 63 5 245 1 290 1 246 1 67 1 167 1 71 1 355 1 357 1 361 4 211 1 307 3 177 1 212 1 376 1 267 1 140 1 217 1 379 1 
87 1 118 1 88 1 67 1 352 1 167 1 46 2 71 1 355 1 225 1 357 1 153 1 361 2 211 1 308 1 230 1 156 3 282 1 101 1 158 1 59 2 160 1 105 3 376 1 344 2 267 1 108 1 140 1 196 2 217 1 244 1 165 3 63 3 245 1 290 1 246 1 379 1 
87 3 88 1 46 4 225 1 153 1 230 1 282 2 156 5 101 1 59 4 158 1 160 1 105 4 344 4 108 1 196 4 165 7 244 1 63 4 245 1 290 2 348 1 246 1 118 2 67 2 167 1 352 1 71 1 355 1 206 1 252 1 357 1 361 3 211 2 308 1 376 2 140 2 267 1 217 1 379 1 
178 1 240 1 128 1 
128 1 221 1 
66 1 
117 1 128 1 378 1 
236 1 128 1 
128 1 378 1 
178 2 117 1 128 3 377 1 378 1 222 1 
86 4 131 1 132 1 67 1 259 2 133 1 186 1 146 3 150 3 376 1 266 1 163 1 303 7 95 1 288 2 170 1 184 1 
86 4 131 1 132 1 67 1 259 2 133 1 186 1 146 3 150 3 376 1 266 1 163 1 303 7 95 1 288 2 170 1 184 1 
86 4 131 1 132 1 293 1 67 1 259 2 133 1 186 1 146 3 150 3 376 1 266 1 163 1 303 7 95 1 288 2 170 1 184 1 
86 16 67 4 186 1 219 2 146 15 50 1 150 10 303 31 95 2 170 1 305 1 127 1 231 1 131 1 282 3 132 2 259 5 341 1 133 5 315 1 262 1 176 1 321 1 84 1 376 4 287 4 163 2 266 2 140 3 288 3 242 1 166 3 290 3 184 1 
86 5 67 1 219 4 146 4 150 4 303 9 95 1 170 1 231 1 339 1 131 1 132 1 259 3 133 1 315 2 262 2 321 2 84 2 376 1 163 1 266 1 288 2 347 1 184 1 
311 1 44 1 271 1 316 1 261 1 58 1 317 1 14 1 114 1 309 1 25 1 257 1 154 1 
311 1 26 1 271 1 44 2 316 1 317 1 14 1 371 1 109 1 114 1 309 1 154 2 363 1 257 1 
44 1 109 1 351 1 316 1 317 1 14 1 309 1 371 1 257 1 363 1 154 1 
26 1 328 1 68 1 271 1 44 1 89 1 316 2 2 1 317 2 14 1 114 1 309 1 154 1 257 1 
311 1 44 1 271 1 316 1 58 1 317 1 14 1 114 1 309 1 25 1 257 1 363 1 154 1 
10 1 
87 2 328 2 0 1 88 1 220 1 225 1 226 1 333 4 6 1 7 1 156 2 193 2 192 1 59 2 158 1 160 1 14 2 195 1 105 5 344 2 197 1 164 1 165 2 346 1 63 5 245 1 23 1 246 1 201 1 292 1 27 1 167 1 249 1 120 2 32 1 355 1 298 2 301 1 128 1 130 1 172 2 307 6 309 2 257 2 177 3 135 2 136 2 212 1 372 1 373 1 375 2 217 1 182 1 378 1 42 1 
292 1 0 1 88 1 353 1 249 1 32 1 355 1 225 1 333 2 6 1 7 1 130 1 172 1 307 2 177 1 195 1 105 3 373 1 164 1 63 3 42 1 246 1 
292 1 0 1 88 1 353 1 249 1 32 1 355 1 225 1 333 3 6 1 7 1 130 1 307 1 177 1 160 1 195 1 105 3 373 1 375 1 344 1 164 1 63 3 42 1 246 1 
292 1 0 1 88 1 353 1 249 1 32 1 355 1 225 1 333 3 6 1 7 1 130 1 172 1 307 2 177 1 160 1 135 1 195 1 105 3 373 1 375 1 344 1 164 1 63 3 42 1 246 1 
87 2 0 1 88 1 225 1 333 6 6 1 7 1 156 1 193 2 158 1 59 1 160 5 195 1 105 5 344 5 164 1 63 5 245 1 23 1 246 1 292 1 353 1 354 1 249 1 120 2 32 1 355 1 208 1 298 2 130 1 172 4 307 7 306 1 35 1 175 1 177 3 135 4 212 1 136 2 372 1 373 1 375 4 217 1 42 1 
87 2 292 1 0 1 88 1 249 1 220 1 120 2 32 1 355 1 298 2 225 1 333 4 6 1 7 1 130 1 172 2 307 4 156 1 193 2 59 1 158 1 177 2 160 1 135 2 136 2 212 1 195 1 372 1 105 4 373 1 375 2 344 2 217 1 164 1 165 2 63 4 245 1 23 1 42 1 246 1 
87 2 292 1 0 1 88 1 249 1 120 2 32 1 355 1 298 2 208 1 225 1 333 4 6 1 7 1 130 1 172 2 307 4 35 1 156 1 193 2 175 1 59 1 158 1 177 2 160 1 135 2 136 2 212 1 195 1 372 1 105 4 373 1 375 2 344 1 164 1 217 1 63 4 23 1 245 1 42 1 246 1 
87 2 292 1 0 1 88 1 249 1 120 2 32 1 355 1 298 2 208 1 225 1 333 4 6 1 7 1 130 1 172 2 307 4 35 1 156 1 193 2 175 1 59 1 158 1 177 2 160 1 135 2 136 2 212 1 195 1 372 1 105 4 373 1 375 2 344 1 164 1 217 1 63 4 23 1 245 1 42 1 246 1 
292 1 0 1 88 1 29 1 249 1 120 2 32 1 355 1 208 1 225 1 333 4 6 1 7 1 130 1 172 2 307 4 8 1 78 2 156 1 313 1 367 2 59 1 158 1 177 2 160 1 135 2 136 2 212 1 195 1 372 1 105 4 373 1 375 2 344 1 164 1 217 1 165 2 63 4 245 1 42 1 246 1 
87 2 292 1 0 1 88 1 249 1 120 2 32 1 355 1 298 2 208 1 225 1 333 5 6 1 7 1 130 1 306 1 172 3 307 5 35 1 156 1 193 2 175 1 59 1 158 1 177 2 160 1 136 2 212 1 135 3 195 1 372 1 105 4 373 1 375 3 344 1 217 1 164 1 63 4 23 1 245 1 42 1 246 1 
87 2 292 1 0 1 88 1 249 1 120 2 32 1 355 1 298 2 208 1 225 1 333 5 6 1 7 1 130 1 306 1 172 3 307 5 35 1 156 1 193 2 175 1 59 1 158 1 177 2 160 1 136 2 212 1 135 3 195 1 372 1 105 4 373 1 375 3 344 1 217 1 164 1 63 4 23 1 245 1 42 1 246 1 
292 1 0 1 88 1 249 1 220 1 120 2 32 1 355 1 225 1 333 4 6 1 7 1 130 1 172 2 307 4 78 2 156 1 313 1 367 2 59 1 158 1 177 2 160 1 135 2 136 2 212 1 195 1 372 1 105 4 373 1 375 2 344 1 217 1 164 1 165 2 63 4 245 1 42 1 246 1 
86 3 67 1 219 2 147 1 146 3 295 1 150 2 303 6 95 1 170 1 97 1 310 1 131 1 132 1 259 2 315 1 37 2 260 1 262 1 321 1 84 1 240 1 376 1 62 1 288 1 184 1 
321 1 84 1 157 1 62 1 315 1 219 2 97 1 369 1 262 1 
86 1 201 1 117 1 328 1 88 2 45 1 219 2 146 1 224 1 225 2 153 1 303 2 97 1 128 1 309 1 257 1 310 1 79 1 192 1 191 1 37 1 369 1 315 1 262 1 81 1 318 1 103 1 134 1 14 1 61 1 321 1 84 1 267 1 62 1 112 1 378 1 246 1 218 1 
86 10 328 1 88 3 146 10 219 6 1 2 150 8 224 1 225 3 153 1 95 1 97 3 335 2 278 2 282 2 191 1 192 2 342 2 286 1 14 3 61 2 16 1 288 1 62 3 112 1 290 2 246 1 201 2 117 2 67 3 295 7 303 20 170 1 128 2 309 3 363 1 257 3 131 1 310 7 132 1 259 4 368 2 133 4 37 2 315 3 369 1 260 7 262 3 134 1 318 2 81 2 321 3 83 1 84 3 376 3 267 1 140 2 378 2 184 1 
326 1 86 1 201 2 328 2 88 1 147 1 219 4 146 1 69 1 48 1 205 1 224 1 225 1 153 1 303 2 358 1 226 1 227 1 97 2 128 3 309 6 363 1 257 6 174 1 192 2 191 1 315 2 261 1 262 2 14 5 321 2 84 2 322 1 267 1 62 2 112 1 346 1 378 2 246 1 
86 1 88 1 67 1 219 2 146 2 250 1 295 1 150 1 357 1 225 1 153 1 303 3 97 1 98 1 310 1 282 1 259 1 260 1 315 1 369 1 262 1 321 1 84 1 376 1 267 1 140 1 62 1 290 1 246 1 
310 1 86 2 282 1 67 1 133 1 260 1 147 1 219 2 315 1 262 1 295 1 148 1 321 1 150 1 84 1 303 2 62 1 97 1 
310 1 259 1 260 1 147 1 219 2 315 1 146 2 262 1 295 1 321 1 150 1 84 1 376 1 303 2 141 1 62 1 97 1 290 1 
86 2 67 1 219 2 147 1 146 2 295 2 150 2 303 4 97 1 310 2 282 1 259 1 133 1 315 1 260 2 262 1 321 1 84 1 376 1 140 1 62 1 290 1 
310 1 86 2 282 1 67 1 133 1 260 1 219 2 315 1 262 1 295 1 148 1 205 1 321 1 150 1 84 1 303 2 62 1 97 1 
310 1 259 1 260 1 219 2 315 1 146 2 262 1 295 1 205 1 321 1 150 1 84 1 376 1 303 2 141 1 62 1 97 1 290 1 
86 2 67 1 219 2 146 2 295 2 205 1 150 2 303 4 97 1 310 2 282 1 259 1 133 1 315 1 260 2 262 1 321 1 84 1 376 1 140 1 62 1 290 1 
86 2 67 1 219 2 146 2 295 2 150 2 303 4 97 1 310 2 282 1 259 1 133 1 315 1 260 2 262 1 321 1 84 1 376 1 140 1 62 1 290 1 
86 1 201 1 117 1 328 1 88 1 219 2 146 1 225 1 303 2 97 1 128 1 309 1 257 1 368 1 191 1 192 1 37 1 315 1 262 1 81 1 318 1 14 1 61 1 321 1 84 1 62 1 112 1 378 1 
86 1 201 1 117 1 328 1 88 1 219 2 146 1 225 1 303 2 97 1 128 1 309 1 257 1 281 1 314 1 191 1 192 1 37 1 315 1 262 1 81 1 14 1 321 1 84 1 162 1 62 1 112 1 378 1 
86 2 67 1 219 2 146 2 295 2 150 2 303 4 97 1 310 2 282 1 259 1 133 1 315 1 369 1 260 2 262 1 321 1 84 1 376 1 140 1 62 1 290 1 
86 2 201 1 117 1 88 1 67 1 146 2 219 2 295 2 150 2 225 1 303 4 97 1 128 1 278 1 309 1 257 1 310 2 282 1 259 1 368 1 133 1 192 1 260 2 315 1 261 1 262 1 81 1 318 1 14 1 61 1 321 1 84 1 376 1 140 1 62 1 378 1 290 1 
86 2 88 1 67 1 146 1 219 2 250 1 295 1 150 1 357 1 225 1 153 1 303 3 97 1 280 1 310 1 282 1 133 1 315 1 369 1 260 1 262 1 321 1 84 1 376 1 267 1 140 1 62 1 290 1 246 1 
86 9 67 3 219 4 146 10 272 1 168 1 331 1 150 6 151 1 121 1 303 19 127 1 282 3 259 3 341 1 133 3 315 2 262 2 238 1 161 2 321 2 84 2 376 3 287 2 140 3 21 2 113 1 347 1 166 1 290 3 
86 14 185 1 67 3 146 12 219 6 92 1 168 2 187 1 4 1 150 4 331 1 121 2 303 26 127 2 336 1 231 2 282 3 259 2 133 2 315 3 262 3 104 1 238 1 161 1 321 3 84 3 376 2 287 2 140 3 21 4 113 1 347 1 166 2 290 2 
86 20 185 1 67 5 92 1 219 6 146 21 168 2 187 1 4 1 149 1 331 1 150 8 151 1 121 1 303 41 95 1 170 1 127 3 336 1 231 1 131 1 282 4 132 1 259 4 341 1 133 4 315 3 262 3 104 1 238 1 161 1 321 3 84 3 376 5 287 4 140 4 288 1 21 4 113 1 347 1 166 3 290 4 184 1 
86 20 185 1 67 5 92 1 219 8 146 18 168 2 187 1 4 1 149 1 331 1 150 7 151 1 121 1 303 38 95 1 170 1 127 3 336 1 231 2 131 1 282 4 132 1 259 4 341 1 133 3 315 4 262 4 104 1 238 1 161 1 321 4 84 4 376 4 287 4 140 4 288 1 21 4 113 1 347 1 166 3 290 3 184 1 
86 27 185 1 67 8 92 1 219 4 146 25 168 1 187 1 4 1 356 2 331 1 150 14 121 1 303 52 95 1 170 1 127 2 336 1 231 1 131 1 282 7 132 1 259 7 341 2 133 7 315 2 262 2 104 1 238 1 161 1 321 2 84 2 376 8 287 4 140 7 288 1 21 4 113 1 347 1 166 4 290 7 184 1 
270 1 239 1 179 1 374 1 190 1 330 1 255 1 60 1 213 1 296 1 
325 1 76 1 
18 1 374 1 190 1 294 1 330 1 255 1 60 1 232 1 296 1 
180 1 194 1 
327 1 125 1 319 1 
270 1 330 1 60 1 213 1 137 2 47 1 296 1 49 1 105 1 239 1 374 1 344 1 123 1 190 1 255 1 63 1 56 1 65 1 
270 1 330 1 60 1 213 1 137 2 47 1 296 1 49 1 105 1 239 1 374 1 344 1 123 1 190 1 255 1 63 1 56 1 65 1 
270 1 330 1 60 1 213 1 137 2 47 1 296 1 49 1 105 1 239 1 374 1 344 1 123 1 190 1 255 1 63 1 56 1 65 1 
180 1 319 1 194 1 
180 1 319 1 194 1 
327 1 125 1 
327 1 125 1 319 1 
337 1 34 1 
325 1 88 2 330 1 70 1 49 1 296 1 225 2 190 1 361 1 153 2 55 1 255 1 56 1 76 1 211 1 337 1 34 1 37 1 60 1 263 1 137 1 105 1 106 1 374 1 267 2 63 1 246 2 
326 1 86 1 201 1 88 2 219 2 146 1 31 1 48 1 122 1 225 2 303 2 358 2 97 1 128 1 74 1 309 2 257 2 258 1 192 1 191 1 369 1 315 1 262 1 14 2 82 1 321 1 84 1 62 1 112 1 378 1 246 2 
201 1 285 1 192 1 144 1 261 1 14 2 203 2 214 1 17 1 299 1 302 1 124 1 243 1 142 1 22 1 289 1 309 2 363 1 257 2 
201 1 144 1 192 1 14 1 203 2 214 1 17 1 299 1 302 1 124 1 228 1 243 1 142 1 289 1 309 1 363 1 257 1 
201 1 328 1 192 1 14 1 93 1 226 1 142 1 346 1 128 1 22 1 57 1 378 1 309 1 257 1 
201 1 285 1 144 1 192 1 14 1 203 2 214 1 17 1 299 1 302 1 124 1 243 1 142 1 22 1 289 1 309 1 363 1 257 1 
189 1 
156 1 365 1 344 1 240 1 276 1 59 1 160 1 
87 1 298 1 307 1 156 1 193 1 59 1 158 1 177 1 160 1 212 1 105 1 344 2 217 1 165 1 63 1 23 1 245 1 
324 2 87 6 328 1 46 6 221 3 222 1 152 2 276 1 52 2 156 9 282 2 236 2 192 3 158 4 59 8 159 1 342 2 160 2 14 3 105 5 344 8 196 6 20 1 165 12 63 5 245 4 349 1 290 2 350 2 201 4 117 3 67 2 167 2 32 2 300 2 360 1 171 1 128 10 307 5 309 3 257 3 77 2 173 2 365 1 261 1 370 2 177 3 212 4 178 2 376 2 140 2 217 4 182 1 378 3 
87 3 67 2 92 1 167 1 46 5 187 1 4 1 52 1 127 1 336 1 307 1 156 8 282 2 158 2 59 5 370 2 177 1 160 2 104 1 212 2 105 1 344 5 376 2 196 5 287 1 140 2 217 2 241 1 268 1 182 1 165 6 63 1 245 2 166 1 290 2 
88 1 67 2 71 1 355 1 225 1 357 1 52 1 153 1 95 1 170 1 35 1 156 2 101 1 132 1 158 1 59 2 370 2 212 1 105 1 39 1 376 1 267 1 217 1 244 1 63 1 245 1 246 1 379 1 
365 1 156 1 158 1 59 1 160 1 212 1 344 1 276 1 217 1 245 1 
282 2 87 5 156 5 67 2 59 5 342 1 46 5 370 2 344 5 376 2 52 1 140 2 196 5 165 10 290 2 
105 1 344 1 63 1 177 1 160 1 307 1 
201 1 328 2 352 1 167 2 301 1 360 2 226 1 128 1 338 1 307 4 309 4 257 4 156 2 192 1 158 2 59 2 159 1 177 2 212 1 14 4 105 3 197 1 217 2 182 2 346 1 63 3 245 2 378 1 323 1 
201 1 117 1 328 1 88 3 146 1 219 2 225 3 357 2 303 1 153 2 97 1 128 1 309 1 257 1 368 1 192 1 37 1 315 1 262 1 318 1 81 1 14 1 61 1 321 1 84 1 267 2 62 1 112 1 378 1 200 1 246 2 379 1 
87 2 156 1 59 2 158 1 46 2 167 1 160 2 212 1 344 4 196 2 288 1 217 1 165 4 182 1 245 1 
207 1 190 1 60 1 
270 1 312 1 190 1 60 1 34 1 
207 1 190 1 60 1 
207 1 190 1 60 1 
190 1 60 1 279 1 
190 1 60 1 279 1 
190 1 60 1 279 1 
190 1 60 1 
330 1 255 1 
86 4 131 1 132 1 67 1 259 2 133 1 146 4 219 4 315 2 262 2 321 2 150 3 84 2 376 1 303 8 288 1 95 1 170 1 231 1 184 1 
131 1 86 3 132 1 259 2 67 1 146 3 150 2 240 1 376 1 303 6 288 1 95 1 170 1 184 1 
86 2 282 1 259 1 67 1 133 1 146 2 219 2 315 1 262 1 321 1 150 2 84 1 376 1 140 1 303 4 362 1 290 1 
86 3 282 1 259 1 67 1 341 1 133 1 146 4 150 2 376 1 287 2 303 7 140 1 127 1 166 1 290 1 
86 11 67 3 146 12 219 4 273 1 150 9 356 1 303 23 95 2 170 1 231 2 131 1 100 1 282 2 132 2 259 5 133 4 341 1 315 2 262 2 321 2 84 2 376 3 140 2 287 2 288 1 166 2 290 2 184 1 
303 1 287 1 146 1 
86 1 303 1 166 1 
86 3 282 1 67 1 259 2 133 1 315 1 219 2 146 3 262 1 342 1 321 1 150 3 84 1 376 1 303 6 140 1 362 1 290 1 
86 6 67 2 146 6 219 2 92 1 187 1 4 1 150 2 303 12 127 1 336 1 282 2 259 1 133 1 315 1 262 1 104 1 321 1 84 1 376 2 287 1 140 2 347 1 166 1 290 2 
86 3 132 1 67 1 259 1 133 1 146 3 150 2 376 1 303 6 95 1 170 1 
86 1 100 1 131 1 132 1 259 1 133 1 146 2 219 2 315 1 262 1 321 1 150 2 84 1 303 3 95 1 231 1 184 1 
86 5 132 2 259 3 67 2 133 2 315 1 219 2 146 5 262 1 321 1 150 5 84 1 39 1 376 2 303 10 95 2 170 1 347 1 
86 2 282 1 67 1 133 1 219 2 315 1 262 1 321 1 150 1 84 1 303 2 347 1 
86 2 282 1 259 1 67 1 133 1 146 2 219 2 315 1 262 1 321 1 150 2 84 1 376 1 140 1 303 4 347 1 290 1 
100 1 86 1 132 1 259 1 133 1 146 2 219 6 315 3 262 3 321 3 150 2 151 1 84 3 303 3 95 1 347 1 231 1 
86 16 67 5 146 18 219 10 50 1 150 12 151 1 303 34 95 3 170 2 127 1 362 1 231 2 131 1 100 1 282 3 132 3 259 7 341 1 133 5 315 5 262 5 176 1 321 5 84 5 376 5 287 4 140 3 288 1 242 1 347 1 166 3 290 3 184 1 
86 4 67 1 146 4 219 2 150 2 303 8 95 1 170 1 127 1 131 1 132 1 259 2 315 1 262 1 104 1 321 1 84 1 376 1 287 1 288 1 347 1 166 1 184 1 
86 6 67 2 146 5 219 4 150 3 303 11 95 1 170 1 127 1 362 1 131 1 282 1 132 1 259 2 341 1 133 1 315 2 262 2 104 1 321 2 84 2 376 1 287 2 140 1 288 1 347 1 166 1 184 1 
86 9 67 3 146 10 219 6 92 1 187 1 4 1 150 4 303 19 95 1 170 1 127 1 362 1 336 1 231 1 131 1 282 2 132 1 259 3 133 1 315 3 262 3 104 1 321 3 84 3 376 3 287 1 140 2 288 1 347 1 166 1 290 2 184 1 
86 10 67 3 146 7 219 6 92 1 187 1 4 1 150 5 303 17 95 1 170 1 127 1 362 1 336 1 231 1 131 1 282 2 132 1 259 3 133 2 315 3 262 3 104 1 321 3 84 3 376 2 287 1 140 2 288 1 347 1 166 1 290 1 184 1 
86 4 67 1 146 4 219 2 150 2 303 8 95 1 170 1 127 1 131 1 132 1 259 2 315 1 262 1 104 1 321 1 84 1 376 1 287 1 288 1 347 1 166 1 184 1 
86 6 67 2 146 6 219 2 92 1 187 1 4 1 150 2 303 12 127 1 336 1 282 2 259 1 133 1 315 1 262 1 104 1 321 1 84 1 376 2 287 1 140 2 347 1 166 1 290 2 
86 10 67 3 146 8 219 8 92 1 187 1 4 1 150 5 303 18 95 1 170 1 127 1 362 1 336 1 231 2 131 1 282 2 132 1 259 3 133 2 315 4 262 4 104 1 321 4 84 4 376 2 287 1 140 2 288 1 347 1 166 1 290 1 184 1 
86 9 67 3 146 7 219 8 92 1 187 1 4 1 150 6 151 1 303 16 127 1 336 1 231 2 282 3 259 3 133 3 315 4 262 4 104 1 321 4 84 4 376 2 287 1 140 3 347 1 166 1 290 2 
131 1 86 3 132 3 259 3 67 1 133 3 146 4 150 6 376 1 303 7 95 3 170 1 184 2 
86 10 67 3 146 8 219 8 92 1 187 1 4 1 150 4 151 1 303 18 95 1 170 1 127 1 336 1 231 2 131 1 282 2 132 1 259 3 133 1 315 4 262 4 104 1 321 4 84 4 376 2 287 1 140 2 288 1 347 1 166 1 290 1 184 1 
51 1 225 1 88 1 164 1 37 1 248 1 246 1 
88 1 80 1 340 1 37 1 248 1 251 1 15 1 51 1 225 1 164 1 246 1 115 1 
201 1 328 1 240 1 226 1 192 1 346 1 128 1 378 1 14 1 309 1 257 1 
201 1 117 1 328 1 88 2 192 1 37 1 81 1 14 1 61 1 224 1 225 2 267 1 153 1 128 1 378 1 246 1 309 1 257 1 
201 1 117 2 0 1 88 2 355 2 300 1 224 1 225 2 360 1 153 2 99 1 128 3 309 1 257 1 236 1 192 1 37 1 81 1 14 1 61 1 373 1 267 1 378 2 246 2 
201 1 117 2 0 1 88 2 355 2 300 1 224 1 225 2 360 1 153 2 99 1 128 3 309 1 257 1 281 1 236 1 192 1 37 1 81 1 14 1 373 1 267 1 378 2 246 2 
201 1 117 1 328 1 221 1 32 1 300 1 360 1 359 1 128 4 307 1 309 3 233 1 257 3 236 1 192 1 160 1 14 3 178 1 105 2 19 1 344 1 63 2 378 1 
201 1 117 1 328 1 236 1 192 1 160 1 14 3 32 1 221 1 178 1 105 2 300 1 19 1 344 1 360 1 63 2 128 4 378 1 307 1 309 3 257 3 77 1 
69 1 
155 1 201 3 117 1 174 1 328 2 366 1 192 2 261 1 12 1 69 1 14 4 48 1 222 1 322 1 227 1 128 3 378 2 309 5 363 1 257 5 
86 3 88 2 219 4 146 3 150 2 224 1 225 2 153 1 95 1 97 2 335 1 278 1 192 1 14 1 61 1 62 2 288 1 246 1 201 1 117 1 67 1 295 1 303 6 170 1 128 1 309 1 257 1 310 1 131 1 258 1 132 1 368 1 259 2 315 2 369 1 37 2 260 1 261 1 262 2 318 1 81 1 321 2 84 2 376 1 267 1 378 1 184 1 
324 1 328 1 221 1 32 1 152 1 276 1 361 1 128 2 307 2 309 1 257 1 77 1 156 1 365 1 59 1 158 2 159 1 177 1 160 1 14 1 212 2 178 1 105 3 344 1 217 2 63 3 245 2 350 1 
69 1 
201 1 43 1 328 1 192 1 261 1 14 4 19 1 226 1 346 1 128 1 378 1 309 4 257 4 
116 1 155 1 201 2 117 1 192 1 12 1 286 1 14 2 360 1 107 1 128 1 378 1 309 2 257 2 
201 1 299 1 328 1 302 1 124 1 192 1 14 1 203 1 309 1 257 1 
201 1 192 1 261 1 31 1 14 2 48 1 128 1 378 1 309 2 257 2 363 1 
201 2 43 1 328 1 192 2 261 1 14 4 48 1 322 1 360 1 226 1 227 1 346 1 128 3 378 2 309 5 257 5 
201 2 43 1 328 1 192 2 261 1 14 4 48 1 38 1 360 1 226 1 227 1 346 1 128 3 378 2 309 5 257 5 
281 1 201 1 117 1 328 1 88 2 192 1 37 1 81 1 14 1 224 1 225 2 267 1 153 1 128 1 378 1 246 1 309 1 257 1 
155 1 201 2 117 1 366 1 192 1 12 1 14 1 222 1 360 1 128 1 378 1 309 1 257 1 
253 1 40 1 110 1 37 1 210 1 
292 1 0 1 88 1 3 1 30 1 71 1 32 1 355 2 253 1 225 1 357 1 153 1 361 1 210 1 9 1 101 1 160 1 105 2 373 1 216 1 344 1 267 1 40 1 110 1 244 1 63 2 246 1 379 1 
88 1 82 1 253 1 122 1 225 1 40 1 110 1 74 1 246 1 
9 1 216 1 110 1 
283 1 240 1 334 1 297 1 
283 1 44 1 271 1 334 1 114 1 297 1 154 1 
317 1 24 1 154 1 
283 1 265 2 44 3 271 1 334 1 41 1 256 1 114 1 264 1 25 1 297 1 154 3 
283 1 109 1 44 2 271 1 334 1 229 1 114 1 297 1 154 2 
271 1 44 1 203 1 17 1 124 1 5 1 334 1 129 1 114 1 25 1 154 1 
44 1 271 1 334 1 114 1 25 1 297 1 154 1 
283 1 44 1 271 1 114 1 25 1 297 2 154 1 
247 1 271 2 44 2 202 1 297 1 345 1 334 1 114 2 25 1 154 2 
283 1 271 1 44 3 297 1 332 1 109 2 5 1 334 2 183 1 114 1 25 1 36 1 154 3 
283 1 271 1 44 2 203 2 297 1 17 1 299 1 124 1 109 1 334 1 289 1 114 1 25 1 154 2 85 1 
283 1 271 2 44 4 297 1 304 1 109 2 5 1 229 1 334 2 183 1 114 2 25 1 154 4 
283 1 44 1 271 1 334 1 114 1 25 1 297 1 154 1 
283 2 44 4 271 1 264 1 297 2 265 1 109 2 181 1 5 1 334 3 41 1 183 1 114 1 154 4 
283 1 271 1 44 2 297 1 254 1 109 1 73 1 334 1 114 1 25 1 154 2 291 1 
283 1 265 2 139 1 44 3 271 1 334 1 41 1 114 1 264 2 25 1 297 1 154 3 
91 1 334 2 75 1 64 2 
72 1 44 1 271 1 114 1 25 1 154 1 
283 1 332 1 109 1 44 2 271 1 334 1 114 1 25 1 297 1 154 2 
320 1 
283 1 44 1 271 1 334 1 114 1 25 1 297 1 154 1 
283 1 271 1 44 3 297 1 265 1 332 1 109 1 334 1 114 1 25 1 154 3 
181 1 5 1 334 1 183 1 
334 1 297 1 

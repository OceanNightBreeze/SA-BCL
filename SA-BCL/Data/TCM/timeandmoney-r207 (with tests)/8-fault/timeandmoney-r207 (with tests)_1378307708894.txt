#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 188 (212,239) (212,239) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 188 (212,239) (212,239) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 188 (212,239) (212,239) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 188 (212,239) (212,239) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (86,339) 213 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (86,339) 246 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (86,339) 246 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (86,339) 213 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 14 219 305 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 311 108 32 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 311 108 32 299 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
9 2 26 2 324 1 227 1 252 1 97 1 237 1 101 3 151 1 152 1 348 2 179 1 337 3 
9 1 237 1 101 1 368 1 151 1 188 1 348 1 41 1 239 1 337 1 212 1 
9 1 237 1 101 1 368 1 151 1 188 1 348 1 41 1 239 1 337 1 212 1 
9 1 237 1 101 1 368 1 151 1 188 1 348 1 41 1 239 1 337 1 212 1 
9 1 237 1 101 1 368 1 151 1 188 1 348 1 41 1 239 1 337 1 212 1 
9 1 26 1 324 1 227 1 97 1 146 1 145 1 214 1 90 1 237 1 250 1 101 2 275 1 348 1 179 1 351 1 337 2 
26 1 9 1 36 1 227 1 109 1 41 1 235 1 69 1 90 1 237 1 101 2 151 1 348 1 179 1 351 1 337 2 
26 3 324 5 245 1 97 3 146 1 145 1 331 1 33 1 250 1 101 7 151 1 152 2 179 1 337 7 9 2 227 1 252 1 190 1 214 1 90 1 237 1 275 1 348 2 351 1 
26 3 324 5 245 1 97 3 146 1 145 1 331 1 33 1 250 1 101 7 151 1 152 2 179 1 337 7 9 2 227 1 252 1 190 1 214 1 90 1 237 1 275 1 348 2 351 1 
141 1 27 1 98 1 202 1 67 1 134 1 165 1 31 1 175 1 223 1 276 1 102 1 20 1 104 1 
94 1 
82 1 31 2 175 2 16 1 223 1 295 1 94 1 291 1 
115 2 82 1 228 1 282 1 325 1 295 1 85 1 76 1 31 5 126 1 175 5 223 2 205 2 334 1 131 1 34 1 94 1 8 2 291 2 
82 1 177 1 94 1 
256 1 94 1 80 2 
30 1 276 2 102 2 20 2 67 1 134 2 104 2 165 2 
242 1 306 1 3 1 118 1 99 1 264 1 142 2 30 1 332 1 288 1 333 1 224 2 102 2 178 1 62 1 35 1 365 2 104 3 293 1 132 1 226 1 107 1 67 1 12 1 110 1 134 3 165 2 193 1 15 1 138 1 322 2 276 2 46 1 48 1 20 2 217 2 22 1 
141 1 27 1 276 1 102 1 202 1 20 1 67 1 134 1 104 1 165 1 
243 1 82 1 202 1 134 1 165 1 29 1 311 1 31 1 124 1 70 1 175 1 362 1 94 1 104 1 
243 1 82 1 202 1 134 1 165 1 29 1 31 2 124 1 175 2 70 1 276 1 102 1 20 1 94 1 104 1 
173 1 31 1 175 1 223 1 291 1 
82 1 31 2 312 1 175 2 223 1 295 1 94 1 291 1 
31 1 175 1 291 1 
134 2 266 1 165 2 30 2 100 1 276 1 102 1 20 1 104 2 
366 1 215 1 255 1 
132 1 3 1 40 1 142 1 134 1 30 1 15 1 193 1 332 1 138 1 322 1 333 1 224 1 46 1 178 1 104 1 
30 1 177 1 
156 1 132 1 307 1 3 1 142 1 134 2 165 1 193 1 15 1 332 1 138 1 333 1 322 1 224 1 215 1 102 1 178 1 46 1 20 1 104 2 
156 1 96 1 307 2 108 1 134 5 165 5 30 1 311 1 321 1 100 1 276 1 102 4 20 4 104 5 
141 1 309 1 102 2 202 1 20 2 134 2 104 2 165 2 
30 1 307 1 276 1 102 3 20 3 134 3 104 3 165 3 
141 1 102 1 202 1 20 1 134 1 104 1 165 1 
100 1 276 1 102 1 202 1 20 1 134 1 266 1 104 1 165 1 
243 1 307 1 3 1 118 1 264 1 202 1 142 1 29 1 30 1 31 1 332 1 124 1 100 1 175 1 333 1 224 1 102 3 178 1 35 1 365 2 104 4 156 1 293 1 132 1 226 1 107 1 12 1 67 1 110 1 134 4 165 3 193 1 15 1 259 1 138 1 70 1 322 1 276 2 46 1 48 1 20 3 217 1 22 1 95 1 
30 1 311 1 307 1 102 1 108 1 20 1 134 2 104 2 165 2 
156 1 243 1 307 2 202 1 248 1 134 3 29 1 165 3 31 1 100 1 259 1 124 1 175 1 70 1 276 1 102 3 20 3 94 1 104 3 
100 1 307 1 276 1 215 1 102 2 255 1 20 2 134 2 104 2 165 2 
132 1 3 1 142 1 134 1 30 1 15 1 193 1 332 1 138 1 322 1 333 1 224 1 46 1 178 1 104 1 
132 1 3 1 142 1 134 1 30 1 15 1 193 1 332 1 361 1 138 1 322 1 333 1 224 1 278 1 104 1 
54 1 116 1 118 1 200 1 5 1 99 2 264 1 365 2 35 2 154 1 366 2 180 1 293 1 226 1 270 1 161 1 255 2 369 1 110 1 89 1 169 1 215 2 48 1 217 4 
70 1 102 1 309 1 202 1 20 1 134 1 104 1 165 1 
137 2 339 1 74 1 86 1 302 1 196 2 
234 1 137 1 196 1 
137 1 196 1 
137 1 196 1 
74 1 302 1 
74 1 302 1 
74 1 302 1 
137 1 216 1 196 1 
137 1 216 1 196 1 
137 1 216 1 196 1 
137 1 139 1 196 1 
137 1 139 1 196 1 
137 1 139 1 196 1 
357 1 358 1 28 1 30 1 123 1 31 1 175 1 102 2 78 1 104 2 157 1 185 1 66 1 340 1 134 2 165 2 234 1 257 1 137 1 371 1 44 1 71 1 20 2 196 1 
339 1 262 1 358 2 28 2 247 1 283 1 66 2 343 1 137 2 257 3 31 2 175 2 113 2 44 2 71 1 196 2 79 1 94 1 153 1 
145 1 329 1 69 1 90 2 174 2 
145 1 90 1 351 1 
69 1 90 1 351 1 
329 1 145 2 69 1 90 3 174 1 360 1 
329 1 145 1 69 1 90 2 174 1 335 1 
54 1 115 1 116 1 5 1 143 2 58 2 330 1 31 5 175 5 127 1 149 1 223 4 60 1 205 1 334 2 78 1 131 1 336 1 8 1 80 3 291 1 157 1 158 2 82 1 228 3 185 1 295 1 256 1 13 1 374 1 169 1 94 2 
54 3 115 2 173 5 116 3 57 1 5 3 143 6 76 1 58 6 31 9 175 9 127 1 149 2 223 7 60 3 205 2 334 6 78 4 131 1 8 2 80 9 291 6 10 1 82 1 228 8 295 1 256 3 13 2 166 1 169 3 377 1 195 1 172 5 94 5 279 1 
115 1 54 1 116 1 5 1 143 2 76 1 58 2 330 1 31 3 175 3 149 1 223 2 60 1 205 1 78 1 334 2 8 1 80 4 82 1 158 1 228 3 256 2 13 1 374 1 169 1 94 3 
115 1 54 2 116 2 57 1 5 2 143 4 58 4 76 1 330 1 31 4 175 4 149 1 223 3 60 2 205 1 78 2 334 4 8 1 80 7 82 1 158 2 228 5 256 3 13 1 166 1 374 1 169 2 195 1 94 4 
241 1 
138 1 177 1 133 1 
138 1 328 1 
193 1 138 1 3 1 
138 1 300 1 
138 1 3 1 
193 1 138 3 3 1 133 2 342 1 24 1 
54 1 180 2 72 1 116 1 187 1 55 1 38 1 367 1 369 3 284 1 286 1 99 4 267 1 148 2 150 1 304 1 217 7 35 3 
54 4 72 1 116 4 55 5 284 1 75 1 5 3 264 1 99 16 286 2 219 1 310 1 267 2 148 3 150 1 60 3 365 2 35 15 268 1 180 5 226 1 187 1 367 2 160 1 369 10 110 1 14 3 297 1 236 4 169 3 114 1 304 2 48 1 217 31 
54 1 72 1 116 1 355 1 55 1 264 2 99 5 286 1 267 1 148 2 150 1 365 4 35 4 268 1 180 3 226 2 187 1 367 1 369 4 110 2 168 1 48 2 304 1 217 9 
54 1 180 2 72 1 116 1 187 1 55 1 367 1 369 3 284 1 286 1 99 4 267 1 148 2 150 1 304 1 217 7 35 3 
54 1 180 2 72 1 116 1 187 1 55 1 367 1 369 3 284 1 286 1 99 4 267 1 148 2 150 1 304 1 217 7 35 3 
3 1 201 1 142 1 332 1 333 1 224 1 101 1 151 2 337 1 9 1 182 2 132 1 253 1 189 2 318 1 192 1 138 1 91 2 322 1 348 1 21 1 23 1 261 1 
9 1 269 1 132 1 182 1 4 1 189 1 142 1 319 1 164 1 360 1 220 1 145 1 69 1 43 1 90 2 222 1 237 1 333 1 322 1 91 1 101 1 224 1 151 1 348 1 351 1 337 1 
26 1 324 1 4 1 142 1 360 1 220 1 145 1 125 1 222 1 333 1 224 1 101 2 151 1 179 1 337 2 9 1 269 1 182 1 132 1 227 1 189 1 319 1 43 1 69 1 90 2 237 1 91 1 322 1 348 1 351 1 
26 1 324 2 4 1 142 1 360 1 220 1 145 1 333 1 224 1 101 3 151 1 179 1 337 3 9 1 269 1 182 1 132 1 227 1 189 1 232 1 164 1 319 1 43 1 69 1 90 2 91 1 322 1 348 1 351 1 261 1 
26 1 324 2 132 1 182 1 227 1 4 1 189 1 232 1 142 1 319 1 164 1 360 1 220 1 145 1 69 1 90 2 333 1 322 1 91 1 101 2 224 1 151 1 179 1 351 1 337 2 
197 1 
243 1 3 1 56 2 142 2 202 1 59 1 332 2 287 1 149 1 333 1 205 1 334 2 8 1 291 6 104 1 105 1 253 1 208 2 295 3 256 2 341 4 211 2 165 1 70 1 260 1 21 1 115 1 73 2 29 1 31 5 311 1 124 1 175 5 362 1 128 1 224 2 363 2 131 1 80 2 82 1 132 1 228 2 186 1 317 1 134 1 135 2 370 1 87 2 138 1 322 2 376 1 92 1 94 2 49 1 240 1 
243 1 202 1 29 1 59 1 311 1 287 1 31 3 124 1 175 3 362 1 104 1 291 2 295 1 341 2 134 1 165 1 370 1 87 1 70 1 16 1 92 1 240 1 
243 1 202 1 29 1 59 1 311 1 287 1 31 3 124 1 175 3 362 1 291 1 104 1 82 1 208 1 295 1 341 3 134 1 165 1 370 1 70 1 16 1 92 1 94 1 240 1 
243 1 202 1 29 1 59 1 311 1 287 1 31 3 124 1 175 3 362 1 363 1 104 1 291 2 82 1 208 1 295 1 341 3 134 1 165 1 370 1 87 1 70 1 16 1 92 1 94 1 240 1 
243 1 56 2 202 1 59 1 287 1 205 1 334 1 8 1 104 1 291 7 208 4 295 3 341 6 256 2 165 1 211 2 70 1 16 1 346 1 170 1 115 1 73 2 29 1 31 5 311 1 124 1 175 5 362 1 128 1 363 4 131 1 82 5 228 1 134 1 370 1 136 1 135 2 87 4 274 1 376 1 92 1 94 5 50 1 240 1 
243 1 56 2 202 1 59 1 287 1 205 1 334 1 8 1 104 1 291 4 105 1 208 2 295 2 341 4 256 2 165 1 211 2 70 1 115 1 73 2 29 1 311 1 31 4 124 1 175 4 128 1 362 1 363 2 131 1 80 2 82 1 228 1 134 1 370 1 135 2 87 2 376 1 92 1 94 2 240 1 
243 1 115 1 73 2 56 2 202 1 29 1 59 1 311 1 287 1 31 4 124 1 175 4 128 1 362 1 363 2 205 1 334 1 131 1 8 1 291 4 104 1 82 1 228 1 208 2 295 2 256 2 341 4 134 1 211 2 165 1 135 2 370 1 87 2 274 1 70 1 376 1 92 1 170 1 94 1 50 1 240 1 
243 1 115 1 73 2 56 2 202 1 29 1 59 1 311 1 287 1 31 4 124 1 175 4 128 1 362 1 363 2 205 1 334 1 131 1 8 1 291 4 104 1 82 1 228 1 208 2 295 2 256 2 341 4 134 1 211 2 165 1 135 2 370 1 87 2 274 1 70 1 376 1 92 1 170 1 94 1 50 1 240 1 
25 1 198 1 243 1 115 1 56 2 202 1 29 1 59 1 311 1 287 1 31 4 124 1 175 4 362 1 363 2 205 1 334 1 131 1 8 1 291 4 80 2 104 1 82 1 228 1 208 2 295 2 341 4 134 1 165 1 68 2 135 2 370 1 87 2 273 1 274 1 70 1 376 1 92 1 277 2 94 1 240 1 
115 1 243 1 73 2 56 2 202 1 29 1 59 1 311 1 287 1 31 4 124 1 175 4 128 1 362 1 363 3 205 1 334 1 131 1 8 1 104 1 291 5 82 1 228 1 208 3 295 2 256 2 341 5 134 1 211 2 165 1 135 2 370 1 136 1 87 3 274 1 70 1 376 1 92 1 170 1 94 1 50 1 240 1 
115 1 243 1 73 2 56 2 202 1 29 1 59 1 311 1 287 1 31 4 124 1 175 4 128 1 362 1 363 3 205 1 334 1 131 1 8 1 104 1 291 5 82 1 228 1 208 3 295 2 256 2 341 5 134 1 211 2 165 1 135 2 370 1 136 1 87 3 274 1 70 1 376 1 92 1 170 1 94 1 50 1 240 1 
198 1 243 1 56 2 202 1 59 1 287 1 205 1 334 1 8 1 104 1 291 4 105 1 208 2 295 2 341 4 165 1 68 2 70 1 115 1 29 1 311 1 31 4 124 1 175 4 362 1 363 2 131 1 80 2 82 1 228 1 134 1 370 1 135 2 87 2 376 1 92 1 277 2 94 1 240 1 
307 1 3 2 118 2 326 1 142 7 264 2 99 1 332 2 125 1 288 1 333 2 224 8 102 1 315 1 62 2 104 1 365 4 35 1 154 1 293 2 132 2 226 2 183 1 253 1 271 1 164 1 134 1 110 2 165 1 42 1 138 3 322 8 238 1 48 2 20 1 21 1 323 1 217 2 22 1 
54 1 116 1 118 1 120 1 5 1 264 1 99 1 100 1 60 1 102 1 103 1 365 2 104 1 35 2 180 1 366 1 293 1 226 1 369 1 255 1 110 1 134 1 165 1 169 1 276 1 215 1 48 1 20 1 217 3 
54 1 72 1 116 1 118 1 264 1 99 3 30 2 148 1 150 1 177 1 365 2 35 3 154 1 180 2 366 1 293 1 226 1 187 1 367 1 255 1 369 2 110 1 215 1 48 1 304 1 217 6 
54 2 116 1 55 1 118 1 120 1 5 1 264 2 99 8 219 1 30 1 310 1 288 1 60 2 314 1 64 1 35 6 365 4 155 1 180 1 366 11 293 2 226 2 369 2 255 4 110 2 14 3 236 3 169 2 215 11 18 1 48 2 22 1 217 14 
307 1 3 1 118 1 120 1 142 1 264 1 99 1 30 1 332 1 288 1 333 1 224 1 102 1 178 1 104 2 365 2 35 1 292 1 156 1 293 1 132 1 226 1 40 1 255 1 231 1 134 2 110 1 165 1 193 1 15 1 138 1 322 1 46 1 48 1 20 1 22 1 217 2 352 1 
51 1 54 3 3 2 55 4 5 2 142 3 99 10 332 1 148 1 288 1 150 1 249 2 333 2 60 2 102 1 61 2 7 1 104 3 156 1 293 3 65 2 255 7 12 2 164 1 110 3 165 1 15 2 169 2 215 7 304 1 20 1 22 1 217 20 72 1 116 3 307 1 118 3 119 2 120 1 264 3 265 1 30 2 224 3 178 2 35 10 365 6 180 4 366 7 132 2 226 3 187 1 367 1 369 8 134 3 193 2 138 2 322 3 46 2 48 3 
154 1 366 1 54 1 293 1 226 1 55 1 118 1 369 1 255 1 264 1 99 2 110 1 89 1 169 1 215 1 48 1 217 2 365 2 
154 1 180 1 366 1 293 1 226 1 116 1 118 1 161 1 369 1 255 1 5 1 264 1 110 1 215 1 48 1 217 2 365 2 35 2 
54 1 116 1 55 1 118 1 5 1 99 2 264 1 60 1 365 2 35 2 154 1 366 2 180 1 293 1 226 1 255 2 369 2 110 1 169 1 215 2 48 1 217 4 
366 1 54 1 293 1 226 1 55 1 118 1 369 1 255 1 264 1 99 2 110 1 89 1 169 1 215 1 48 1 217 2 323 1 365 2 
180 1 366 1 293 1 226 1 116 1 118 1 161 1 369 1 255 1 5 1 264 1 110 1 215 1 48 1 217 2 323 1 365 2 35 2 
54 1 116 1 55 1 118 1 5 1 99 2 264 1 60 1 365 2 35 2 366 2 180 1 293 1 226 1 255 2 369 2 110 1 169 1 215 2 48 1 323 1 217 4 
54 1 116 1 55 1 118 1 5 1 99 2 264 1 60 1 365 2 35 2 366 2 180 1 293 1 226 1 255 2 369 2 110 1 169 1 215 2 48 1 217 4 
3 1 118 1 99 1 142 1 264 1 30 1 332 1 288 1 333 1 224 1 178 1 104 1 365 2 35 1 293 1 132 1 226 1 12 1 134 1 110 1 193 1 15 1 138 1 322 1 46 1 48 1 217 2 22 1 
3 1 118 1 99 1 142 1 264 1 122 1 30 1 361 1 332 1 288 1 333 1 224 1 104 1 365 2 35 1 293 1 132 1 226 1 134 1 110 1 193 1 15 1 138 1 322 1 48 1 217 2 278 1 22 1 
54 1 116 1 55 1 118 1 120 1 5 1 99 2 264 1 60 1 365 2 35 2 366 2 180 1 293 1 226 1 255 2 369 2 110 1 169 1 215 2 48 1 217 4 
54 1 116 1 55 1 3 1 118 1 5 1 99 2 142 1 264 1 125 1 249 1 333 1 224 1 60 1 178 1 35 2 104 1 365 2 180 1 366 2 293 1 132 1 226 1 369 2 255 2 12 1 134 1 110 1 193 1 15 1 138 1 169 1 322 1 215 2 46 1 48 1 217 4 
54 1 116 1 55 1 118 1 120 1 5 1 264 1 99 2 100 1 60 1 102 1 35 1 365 2 104 1 366 1 293 1 226 1 184 1 369 1 255 1 110 1 134 1 165 1 169 1 276 1 215 1 48 1 20 1 217 3 
54 5 305 1 72 1 116 5 355 1 55 4 308 1 5 4 264 3 99 20 219 3 204 1 310 1 221 4 148 1 150 1 6 1 60 4 77 1 129 1 268 1 365 6 35 21 180 4 226 3 11 1 254 1 229 1 187 1 209 1 367 1 369 8 110 3 272 1 112 2 14 3 236 4 298 1 169 4 304 1 48 3 217 41 353 1 
54 5 305 1 72 1 116 4 355 1 55 3 308 1 5 3 264 4 99 20 219 3 204 1 310 1 221 4 148 1 150 1 6 1 60 4 77 1 129 1 268 2 365 8 35 18 180 4 226 4 11 1 254 1 229 1 187 1 209 1 367 1 369 7 110 4 272 1 112 2 14 3 236 4 298 1 169 4 304 1 48 4 217 38 353 1 
54 8 305 1 72 1 116 8 355 1 55 7 308 1 5 7 264 2 99 27 219 2 310 2 221 4 148 1 150 1 6 1 60 7 77 1 129 1 268 1 64 2 365 4 35 25 180 7 226 2 254 1 229 1 187 1 209 1 367 1 369 14 110 2 272 1 112 1 14 4 236 4 298 1 169 7 304 1 48 2 217 52 353 1 
54 3 116 3 355 1 55 3 308 1 5 3 264 2 99 9 219 1 204 1 310 1 221 2 60 3 77 1 129 1 365 4 35 10 180 3 226 2 209 2 369 6 110 2 272 1 112 1 14 1 236 2 167 1 169 3 48 2 217 19 
54 3 305 1 116 2 355 1 55 2 308 1 5 2 264 3 99 14 219 2 221 4 6 1 60 3 77 2 129 1 268 2 35 12 365 6 180 2 226 3 254 1 229 1 209 1 369 4 110 3 272 1 112 2 14 2 236 2 298 1 169 3 48 3 217 26 353 1 
137 1 339 1 262 1 37 1 44 1 358 1 28 1 247 1 66 1 196 1 
234 1 371 1 
137 1 372 1 44 1 199 1 358 1 347 1 28 1 66 1 196 1 
246 1 216 1 
213 1 86 1 139 1 
339 1 262 1 358 1 28 1 247 1 283 1 66 1 343 1 137 1 257 2 31 1 175 1 113 1 44 1 71 1 196 1 94 1 153 1 
339 1 262 1 358 1 28 1 247 1 283 1 66 1 343 1 137 1 257 2 31 1 175 1 113 1 44 1 71 1 196 1 94 1 153 1 
339 1 262 1 358 1 28 1 247 1 283 1 66 1 343 1 137 1 257 2 31 1 175 1 113 1 44 1 71 1 196 1 94 1 153 1 
246 1 216 1 86 1 
246 1 216 1 86 1 
213 1 139 1 
213 1 86 1 139 1 
357 1 340 1 
52 1 357 1 358 1 28 1 30 1 123 1 31 1 175 1 223 1 102 2 78 1 104 2 153 1 157 1 185 1 66 1 340 1 134 2 165 2 234 1 137 1 257 1 371 1 113 1 44 1 196 1 20 2 
117 1 3 1 118 1 326 1 120 1 264 1 99 1 142 2 144 1 288 1 333 1 224 2 62 2 63 1 104 2 365 2 35 1 293 1 132 1 226 1 159 1 210 1 134 2 110 1 165 2 138 1 322 2 238 1 48 1 217 2 22 1 
132 1 253 1 3 1 189 1 142 1 332 1 138 1 333 1 322 1 224 1 364 1 47 1 21 1 23 1 
281 1 132 1 4 1 189 1 39 1 142 1 164 1 319 1 360 1 145 1 69 1 43 1 90 2 333 1 322 1 224 1 364 1 351 1 
132 1 281 1 4 1 189 1 39 1 142 2 164 1 319 1 360 1 145 1 69 1 43 1 125 1 90 2 333 1 322 2 224 2 364 1 351 1 
281 1 132 1 263 1 4 1 189 1 142 1 164 1 319 1 360 1 145 1 69 1 43 1 90 2 322 1 333 1 224 1 351 1 
233 1 
115 1 82 1 228 1 282 1 126 1 205 1 334 1 131 1 8 1 94 1 
54 2 116 2 228 5 83 1 65 1 256 5 5 2 143 5 58 5 88 2 169 2 60 2 334 5 94 5 80 10 
82 1 31 1 175 1 295 1 94 1 291 1 
115 2 3 1 327 1 142 4 76 1 332 2 31 3 149 2 175 3 176 1 333 1 224 4 205 2 334 2 131 1 8 2 291 4 132 1 228 2 253 1 186 1 295 2 317 1 111 2 138 1 322 4 171 1 21 1 49 2 
82 1 126 1 228 1 282 1 177 1 334 1 94 1 
115 1 73 1 31 1 175 1 128 1 205 1 334 1 131 1 8 1 80 1 291 1 82 1 228 1 295 1 256 1 211 1 94 2 
0 1 115 1 207 1 132 1 3 1 142 1 342 1 328 1 193 1 332 1 138 2 333 2 322 1 224 1 205 1 131 1 8 1 
115 1 305 1 228 1 256 1 143 1 219 1 14 1 58 1 236 1 205 1 334 1 131 1 94 1 8 1 80 2 
115 1 54 2 141 1 116 1 27 1 98 1 202 1 31 1 175 1 205 1 102 1 334 2 131 1 8 1 104 1 251 1 228 2 83 1 187 1 367 1 67 1 134 1 165 1 88 2 276 1 304 1 20 1 50 1 
3 1 118 1 264 1 142 1 30 1 332 1 333 1 224 1 102 2 178 1 35 1 365 2 104 3 293 1 132 1 226 1 107 1 67 1 12 1 110 1 134 3 165 2 15 1 193 1 138 1 322 1 276 2 46 1 48 1 20 2 217 1 22 1 
115 1 82 2 228 1 256 2 143 2 58 2 148 1 149 1 205 1 334 2 131 1 8 1 94 4 49 1 80 4 
262 1 194 1 44 1 357 1 28 1 
44 1 28 1 17 1 
44 1 28 1 17 1 
44 1 28 1 17 1 
44 1 28 1 19 1 
44 1 28 1 19 1 
44 1 28 1 19 1 
44 1 28 1 
137 1 196 1 
54 1 305 1 72 1 116 1 355 1 264 1 99 4 219 1 148 1 150 1 35 4 365 2 180 2 226 1 187 1 367 1 369 2 110 1 14 1 236 1 48 1 304 1 217 8 
54 2 305 1 72 1 116 1 355 1 55 1 264 2 99 6 219 1 310 1 148 1 150 1 60 1 35 5 365 4 180 2 226 2 187 1 367 1 369 3 110 2 14 1 236 2 258 1 169 1 304 1 48 2 217 11 
54 3 305 1 72 1 116 3 355 1 55 1 5 2 264 3 99 9 219 1 148 1 150 1 6 1 60 2 35 10 365 6 268 1 180 3 226 3 229 1 254 1 187 1 367 1 369 4 110 3 14 1 236 1 258 1 298 1 169 2 304 1 48 3 217 19 
54 3 305 1 72 1 116 2 355 1 55 2 5 1 264 3 99 10 219 1 148 1 150 1 6 1 60 2 268 1 35 7 365 6 180 3 226 3 229 1 254 1 187 1 367 1 369 5 110 3 14 1 236 1 258 1 298 1 169 2 304 1 48 3 217 17 
54 1 305 1 72 1 116 1 355 1 264 1 99 4 219 1 148 1 150 1 35 4 365 2 180 2 226 1 187 1 367 1 369 2 110 1 14 1 236 1 48 1 304 1 217 8 
54 2 305 1 116 2 355 1 55 1 5 2 264 1 99 6 219 1 6 1 60 2 35 6 365 2 180 1 226 1 229 1 254 1 369 2 110 1 14 1 236 1 298 1 169 2 48 1 217 12 
54 3 305 1 72 1 116 2 355 1 55 2 5 1 264 4 99 10 219 1 148 1 150 1 6 1 60 2 35 8 365 8 268 2 180 3 226 4 254 1 229 1 187 1 367 1 369 5 110 4 14 1 236 1 298 1 258 1 169 2 304 1 48 4 217 18 
54 3 305 1 116 2 355 1 55 3 5 2 264 4 99 9 219 1 204 1 6 1 60 3 35 7 365 8 268 2 180 3 226 4 254 1 229 1 369 6 110 4 14 1 236 1 298 1 169 3 48 4 217 16 
180 3 54 1 72 1 116 1 55 3 187 1 367 3 369 6 99 3 150 2 304 3 217 7 35 4 
54 3 305 1 72 1 116 2 355 1 55 1 5 1 264 4 99 10 219 1 204 1 148 1 150 1 6 1 60 2 35 8 365 8 268 2 180 3 226 4 254 1 229 1 187 1 367 1 369 4 110 4 14 1 236 1 298 1 169 2 304 1 48 4 217 18 
180 3 54 2 226 1 116 2 355 1 55 2 187 1 367 2 369 5 264 1 99 5 110 1 48 1 304 2 217 10 365 2 251 1 35 5 
54 1 226 1 355 1 55 1 369 1 264 1 99 2 110 1 169 1 48 1 217 2 365 2 
180 1 54 1 116 1 226 1 355 1 55 1 369 2 5 1 264 1 99 2 110 1 169 1 60 1 48 1 217 4 35 2 365 2 
180 1 226 3 355 1 294 1 55 1 367 1 369 2 264 3 99 1 110 3 204 1 48 3 304 1 217 3 268 1 35 2 365 6 
54 5 72 1 116 5 355 1 55 5 5 3 264 5 99 16 219 1 204 1 310 1 148 1 150 1 60 3 268 2 35 18 365 10 180 7 226 5 187 2 294 1 367 3 160 1 369 12 110 5 297 1 14 3 236 4 258 1 169 3 114 1 304 3 48 5 217 34 
54 1 180 2 72 1 116 1 226 2 187 1 55 1 367 1 369 3 99 4 264 2 110 2 148 1 150 1 48 2 304 1 217 8 35 4 365 4 268 1 
180 2 54 1 72 1 116 1 187 1 367 1 369 2 99 3 148 1 150 1 177 1 304 1 217 6 35 3 
180 1 54 1 116 1 226 1 55 1 369 2 5 1 264 1 99 2 110 1 258 1 169 1 60 1 48 1 217 4 35 2 365 2 
180 1 54 1 116 1 55 1 369 2 5 1 99 3 219 1 14 1 236 2 310 1 169 1 60 1 217 7 35 4 
54 3 72 1 116 3 55 4 5 2 99 11 264 2 310 1 148 1 150 1 60 2 314 1 35 12 64 1 268 2 365 4 180 5 226 2 187 1 294 1 367 2 369 9 110 2 14 2 236 2 169 2 304 2 48 2 217 23 
236 1 217 1 35 1 
14 1 99 1 217 1 
54 1 180 2 226 1 116 1 55 1 65 1 369 3 5 1 264 1 99 3 110 1 258 1 169 1 60 1 48 1 217 6 365 2 35 3 
54 2 305 1 116 2 355 1 55 1 5 2 264 1 99 6 219 1 6 1 60 2 35 6 365 2 180 1 226 1 229 1 254 1 369 2 110 1 14 1 236 1 298 1 169 2 48 1 217 12 
54 1 180 1 116 1 187 1 55 1 367 1 369 2 99 3 304 1 217 6 35 3 
180 1 72 1 226 1 55 1 294 1 367 1 369 2 99 1 264 1 110 1 150 1 304 1 48 1 217 3 35 2 268 1 365 2 
311 1 32 1 108 1 
354 1 140 1 311 1 299 1 32 1 84 1 108 1 121 1 
244 1 132 1 253 1 3 1 142 4 332 1 125 1 138 1 45 1 333 1 322 4 224 4 21 1 
1 1 132 1 2 1 3 1 142 1 193 1 138 1 313 1 322 1 333 2 224 1 7 1 290 1 
69 1 332 1 132 1 90 1 333 1 322 1 224 1 351 1 142 1 319 1 
132 1 125 1 138 1 333 1 322 2 3 1 224 2 238 1 142 2 144 1 164 1 
132 2 253 1 3 2 142 4 111 1 332 1 42 1 125 1 138 3 45 1 322 5 333 2 224 5 238 1 21 1 315 1 
81 1 132 2 253 1 3 2 142 4 111 1 332 1 125 1 138 3 45 1 322 5 333 2 224 5 238 1 21 1 315 1 
332 1 132 1 138 1 253 1 333 1 322 1 3 1 224 1 177 1 21 1 142 1 
132 1 307 1 3 1 142 1 134 2 165 1 30 1 193 1 15 1 332 1 138 1 333 1 322 1 224 1 102 1 178 1 20 1 104 2 
243 1 132 1 307 1 3 2 202 1 142 1 134 2 111 1 165 2 30 1 193 2 15 1 70 1 138 3 333 1 322 1 300 1 224 1 130 1 102 2 178 1 20 1 104 2 
243 1 244 1 307 1 3 2 142 2 202 1 30 1 333 1 224 2 102 2 130 1 104 2 132 1 111 1 134 2 165 2 15 1 193 2 138 3 70 1 322 2 300 1 20 1 278 1 
244 1 3 1 142 3 328 1 29 1 31 2 332 1 175 2 333 1 224 3 130 1 291 1 82 1 132 1 316 1 133 1 111 1 193 1 320 1 138 4 322 3 300 1 94 1 
82 1 244 1 132 1 3 1 133 1 142 3 111 1 29 1 328 1 193 1 332 1 31 2 175 2 138 4 333 1 322 3 300 1 224 3 130 1 303 1 94 1 291 1 
132 1 333 1 322 1 224 1 142 1 271 1 
1 1 132 1 2 1 3 1 162 1 142 1 342 1 193 1 332 1 138 1 322 1 333 2 224 1 
54 1 3 1 142 1 99 3 148 1 249 1 150 1 333 1 102 1 61 1 104 2 293 2 159 1 255 1 12 1 110 2 165 1 15 1 215 1 304 1 20 1 217 6 72 1 116 1 307 1 118 2 120 1 264 2 30 2 125 1 224 1 178 1 365 4 35 3 180 2 366 1 132 1 226 2 187 1 367 1 369 2 134 2 193 1 138 1 322 1 46 1 48 2 
115 2 282 1 327 1 142 1 203 1 328 1 29 1 332 1 31 3 126 1 175 3 223 1 224 1 205 2 334 1 131 2 8 2 291 2 181 1 82 1 228 1 295 1 133 1 138 2 344 1 322 1 303 1 94 1 
207 1 132 1 3 1 133 1 271 1 142 2 342 1 193 1 125 1 138 2 322 2 333 2 224 2 
132 1 307 1 3 1 142 1 134 2 165 1 30 1 193 1 15 1 332 1 138 1 333 1 322 1 224 1 102 1 20 1 278 1 104 2 
1 1 132 1 2 1 3 1 162 1 142 1 342 1 111 1 193 1 138 1 322 1 333 2 224 1 
30 1 373 1 375 1 93 1 285 1 
243 1 82 1 202 1 285 2 29 1 30 1 373 1 31 2 147 1 259 1 124 1 70 1 175 2 223 1 375 2 93 2 350 1 94 1 225 1 
117 1 210 1 134 1 165 1 373 1 375 1 93 1 63 1 104 1 
373 1 147 1 225 1 
26 1 9 1 227 1 237 1 101 1 348 1 179 1 337 1 
9 1 26 3 324 2 227 2 356 1 97 1 235 1 289 1 250 1 101 4 152 1 348 1 179 2 337 4 
26 1 9 1 324 1 227 1 190 1 237 1 101 2 348 1 349 1 179 1 337 2 206 1 
26 1 9 1 227 1 356 2 296 1 235 2 289 1 237 1 101 3 348 1 179 1 337 3 
26 2 280 1 301 1 163 2 
9 1 237 1 101 1 348 1 337 1 218 1 
26 1 9 1 324 1 227 1 237 1 33 1 101 2 348 1 179 1 337 2 
53 1 
26 1 9 1 227 1 237 1 101 1 348 1 179 1 337 1 
26 1 227 1 177 1 179 1 
26 1 9 1 227 1 101 1 348 1 179 1 337 1 
182 1 151 1 337 1 
26 1 9 1 227 1 356 1 230 1 235 2 237 1 289 1 101 3 348 1 179 1 337 3 
26 1 9 1 324 1 146 1 227 1 101 2 348 1 179 1 337 2 
26 1 9 1 145 1 214 1 90 1 237 1 101 1 97 1 348 1 351 1 337 1 
26 1 9 1 227 1 237 1 101 1 348 1 337 1 
9 1 227 2 237 1 101 1 348 1 179 1 337 1 
26 1 9 2 227 1 106 1 359 1 237 1 101 2 348 2 337 2 338 1 
9 1 26 2 324 2 227 1 245 1 97 1 237 1 33 1 101 3 152 1 348 1 179 1 337 3 
26 1 9 1 324 1 227 1 191 1 360 1 145 1 69 1 90 2 237 1 101 2 348 1 179 1 351 1 337 2 
26 2 9 2 324 2 146 1 227 1 237 1 345 1 101 4 97 1 152 1 348 2 179 1 337 4 
26 1 235 1 9 1 324 1 227 1 237 1 33 1 101 3 348 1 179 1 337 3 
26 1 250 1 97 1 152 1 
26 1 227 1 

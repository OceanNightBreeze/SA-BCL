#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) 232 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) 232 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) (218,256) (218,256) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) (218,256) (218,256) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) (218,256) (218,256) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (160,203) (218,256) (218,256) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 155 (1,318,322) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 155 284 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 155 284 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 155 (1,318,322) 137 215 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 291 310 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 155 284 60 59 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 155 284 60 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
4 1 94 1 87 1 50 1 101 1 203 1 
4 2 94 2 87 1 50 1 175 1 101 1 111 1 203 1 232 1 
4 2 94 2 87 1 50 1 175 1 101 1 111 1 203 1 232 1 
218 1 87 1 160 1 86 1 282 1 309 1 99 1 4 2 94 2 315 1 50 1 95 1 101 1 256 1 319 1 203 1 
218 1 87 1 160 1 86 1 282 1 309 1 99 1 4 2 94 2 315 1 50 1 95 1 101 1 256 1 319 1 203 1 
218 1 87 1 160 1 86 1 282 1 309 1 99 1 4 2 94 2 315 1 50 1 95 1 101 1 256 1 319 1 203 1 
218 1 87 1 160 1 86 1 282 1 309 1 99 1 4 2 94 2 315 1 50 1 95 1 101 1 256 1 319 1 203 1 
271 1 142 1 87 1 86 1 175 3 327 1 229 3 99 1 4 4 94 4 109 2 50 1 289 1 80 1 95 1 101 1 341 2 233 1 
43 1 87 1 282 1 309 1 229 1 99 1 4 2 94 2 50 1 266 1 80 1 101 1 95 1 319 1 332 1 233 1 
11 1 236 1 170 1 22 1 113 1 264 1 180 1 182 1 339 1 202 1 8 1 214 1 158 1 322 1 
47 1 
84 1 47 1 20 1 236 2 290 1 182 1 205 1 322 2 
280 2 84 2 236 5 302 1 103 1 262 2 221 2 181 1 182 2 197 1 47 1 252 1 243 1 290 1 82 1 168 1 205 1 322 5 216 1 
21 1 171 1 170 2 250 2 113 3 173 1 129 1 114 1 74 1 176 2 180 3 76 1 115 2 153 1 186 1 185 1 27 1 8 2 259 1 158 2 214 2 14 1 90 1 264 1 326 1 222 1 240 1 36 2 38 1 306 1 40 1 68 1 331 1 128 1 140 2 167 1 141 1 
11 1 170 1 339 1 113 1 264 1 180 1 8 1 202 1 158 1 214 1 
1 1 155 1 
11 1 236 2 170 1 136 1 113 1 180 1 47 1 305 1 290 1 318 1 8 1 214 1 158 1 119 1 322 2 
84 1 236 1 348 1 182 1 322 1 
84 1 47 1 236 2 290 1 178 1 182 1 205 1 322 2 
84 1 236 1 322 1 
47 1 290 1 71 1 
47 1 274 2 257 1 
170 2 113 2 129 1 264 1 180 2 8 2 158 2 214 2 
11 1 170 1 113 2 129 1 148 1 180 2 24 1 8 2 231 1 214 1 158 1 
39 1 345 1 320 1 
14 1 113 1 129 1 261 1 176 1 180 1 36 1 38 1 306 1 115 1 40 1 68 1 185 1 331 1 259 1 141 1 
14 1 170 1 113 2 176 1 180 2 241 1 36 1 38 1 306 1 115 1 39 1 40 1 68 1 357 1 185 1 331 1 8 1 259 1 158 1 141 1 
71 1 129 1 
170 3 357 1 113 3 129 1 180 3 8 3 214 1 158 3 
11 1 170 1 339 1 113 1 180 1 8 1 158 1 
11 1 170 1 113 1 148 1 180 1 8 1 214 1 158 1 231 1 
21 1 171 1 170 3 250 1 113 4 173 1 129 1 114 1 176 1 148 1 180 4 115 1 153 1 318 1 185 1 27 1 8 3 259 1 214 2 158 3 119 1 322 1 11 1 14 1 236 1 136 1 90 1 264 1 240 1 241 1 36 1 38 1 306 1 63 1 305 1 40 1 68 1 357 1 331 1 128 1 140 2 167 1 42 1 141 1 
170 1 155 1 113 1 357 1 284 1 180 1 8 1 158 1 
11 1 236 1 170 3 136 1 113 3 148 1 180 3 241 1 47 1 305 1 63 1 318 1 357 2 7 1 8 3 214 1 158 3 322 1 119 1 
170 2 113 2 148 1 180 2 39 1 357 1 8 2 320 1 214 1 158 2 
14 1 113 1 129 1 176 1 180 1 36 1 38 1 306 1 115 1 40 1 68 1 185 1 331 1 259 1 141 1 
14 1 113 1 129 1 176 1 180 1 105 1 36 1 306 1 115 1 40 1 68 1 331 1 127 1 259 1 141 1 
21 2 171 1 275 1 172 1 250 2 345 1 122 1 114 1 240 1 124 1 210 1 39 1 298 1 27 1 128 1 140 2 167 1 320 1 83 1 
11 1 170 1 113 1 91 1 180 1 8 1 158 1 119 1 
170 4 113 4 129 1 284 1 148 1 180 4 241 1 116 1 353 1 155 1 357 2 8 4 158 4 214 1 
11 1 170 2 339 1 113 2 91 1 180 2 8 2 158 2 
146 1 336 1 165 1 
277 1 224 1 146 2 89 1 228 1 165 2 
146 1 165 1 
146 1 165 1 
224 1 89 1 
224 1 89 1 
224 1 89 1 
30 1 146 1 165 1 
30 1 146 1 165 1 
30 1 146 1 165 1 
146 1 67 1 165 1 
146 1 67 1 165 1 
146 1 67 1 165 1 
270 1 146 1 170 2 113 2 336 1 129 1 180 2 100 1 54 1 8 2 9 1 158 2 159 1 213 1 157 1 322 1 236 1 192 1 104 1 165 1 92 1 349 1 329 1 200 1 
270 1 146 2 236 2 325 2 104 2 228 1 165 2 209 1 47 1 108 1 183 1 198 1 200 2 54 2 201 1 9 3 56 1 159 2 322 2 
86 1 220 2 266 1 69 1 99 2 
86 1 95 1 99 1 
266 1 95 1 99 1 
86 2 220 1 266 1 69 1 359 1 99 3 
350 1 86 1 220 1 266 1 69 1 99 2 
44 1 274 3 275 1 2 1 182 4 100 1 210 1 252 1 47 2 49 2 299 1 82 2 257 1 118 1 322 5 10 1 280 1 84 1 85 2 344 1 192 1 236 5 88 1 262 1 237 1 221 1 92 1 62 1 65 2 290 1 243 3 205 1 
44 3 274 9 275 3 2 3 177 1 182 7 100 4 210 3 47 5 252 1 151 1 297 1 49 6 26 1 5 5 299 2 82 6 257 3 322 9 10 3 84 6 280 2 344 2 302 1 236 9 262 2 237 1 221 2 348 5 65 6 290 1 243 8 112 1 247 1 205 1 
44 1 274 4 275 1 2 1 182 2 100 1 210 1 47 3 49 2 299 1 82 2 257 2 322 3 280 1 85 1 10 1 344 1 236 3 302 1 88 1 262 1 221 1 62 1 290 1 243 3 65 2 
44 2 274 7 275 2 2 2 182 3 100 2 210 2 47 4 151 1 297 1 49 4 26 1 299 1 82 4 257 3 322 4 280 1 85 2 10 2 344 1 236 4 302 1 88 1 262 1 221 1 62 1 290 1 65 4 243 5 
98 1 
71 1 331 1 107 1 
331 1 141 1 
227 1 98 1 23 1 107 2 68 1 331 3 141 1 
291 1 331 1 
68 1 331 1 141 1 
206 1 331 1 
10 1 143 1 308 1 169 1 21 3 275 1 172 2 250 7 174 1 122 3 75 1 351 1 296 2 184 1 330 1 66 1 186 4 96 1 
308 1 143 5 44 3 21 15 275 4 250 31 172 5 174 1 2 3 114 1 147 4 75 2 251 1 296 3 210 3 211 1 230 1 184 1 186 16 27 1 10 4 13 1 122 10 240 1 351 2 41 1 330 2 66 2 126 1 96 1 140 2 167 1 358 1 97 3 
10 1 308 1 143 1 21 4 275 1 172 3 250 9 174 1 122 4 114 2 75 1 240 2 251 1 61 1 351 1 296 2 184 1 330 1 66 1 186 5 27 2 268 1 140 4 167 2 
10 1 143 1 308 1 21 3 275 1 172 2 250 7 174 1 122 3 75 1 351 1 296 2 184 1 330 1 66 1 186 4 96 1 
10 1 143 1 308 1 21 3 275 1 172 2 250 7 174 1 122 3 75 1 351 1 296 2 184 1 330 1 66 1 186 4 96 1 
307 1 309 2 176 1 338 1 295 1 4 1 115 1 50 1 259 1 279 1 217 2 87 1 36 1 306 1 94 1 40 1 138 1 267 1 331 1 246 2 166 1 333 2 141 1 
309 1 176 1 130 1 99 2 4 1 115 1 50 1 101 1 217 1 86 1 87 1 281 1 121 1 304 1 36 1 306 1 94 1 225 1 328 1 40 1 266 1 95 1 226 1 246 1 333 1 359 1 
335 1 309 1 175 1 176 1 130 1 229 1 99 2 4 2 115 1 50 1 80 1 101 1 233 1 217 1 86 1 87 1 281 1 121 1 36 1 306 1 94 2 225 1 328 1 40 1 266 1 95 1 226 1 246 1 333 1 359 1 
309 1 175 2 176 1 130 1 229 1 99 2 4 3 115 1 50 1 117 1 80 1 233 1 217 1 86 1 87 1 281 1 121 1 304 1 36 1 306 1 94 3 328 1 40 1 267 1 266 1 95 1 226 1 246 1 333 1 359 1 
309 1 175 2 176 1 229 1 99 2 4 2 115 1 117 1 80 1 233 1 217 1 86 1 121 1 304 1 36 1 306 1 94 2 328 1 40 1 266 1 95 1 226 1 246 1 333 1 359 1 
52 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
280 1 1 1 236 1 262 1 137 1 221 1 252 1 155 1 53 1 245 1 322 1 215 1 
1 1 176 2 295 1 252 1 314 1 115 2 155 1 53 1 82 1 259 2 215 1 322 2 280 1 84 2 344 1 236 2 303 1 262 1 137 1 221 1 238 1 36 2 306 1 40 1 243 1 331 1 245 1 166 1 205 1 141 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
84 1 1 1 20 1 236 2 155 1 53 1 137 1 245 1 215 1 205 1 322 2 
280 1 1 1 236 1 262 1 137 1 221 1 252 1 155 1 53 1 245 1 322 1 215 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
1 1 236 1 155 1 53 1 137 1 245 1 215 1 322 1 
335 1 21 1 170 1 171 2 250 2 113 1 176 7 114 2 180 1 295 1 25 1 115 8 78 1 186 1 27 2 8 1 259 2 158 1 235 1 58 1 219 1 90 1 347 1 304 1 326 2 222 1 240 2 36 8 124 1 306 2 40 2 356 1 357 1 331 3 128 2 166 1 140 4 167 2 141 2 
44 1 21 2 171 1 170 1 275 1 172 1 250 3 113 1 2 1 114 1 148 1 179 1 180 1 210 1 186 1 27 1 8 1 320 1 158 1 214 1 10 1 120 1 345 1 122 1 240 1 39 1 128 1 140 2 167 1 
21 1 145 1 171 1 170 1 250 2 113 2 129 1 176 1 114 1 294 1 179 1 180 2 115 1 185 1 186 1 27 1 8 1 259 1 320 1 158 1 323 1 14 1 261 1 90 1 222 1 240 1 36 1 241 1 38 1 306 1 40 1 68 1 357 1 331 1 128 1 140 2 167 1 141 1 
44 1 170 1 171 2 172 1 2 1 176 1 179 1 180 2 185 1 186 3 8 1 55 1 320 2 10 1 14 1 240 2 241 1 288 1 18 1 68 1 331 1 140 4 141 1 143 2 21 2 250 5 113 2 114 2 149 1 115 1 153 1 27 2 259 1 158 1 345 2 122 3 90 1 37 1 36 1 38 1 306 1 39 2 40 1 357 1 128 2 167 2 
308 1 21 3 171 1 275 1 71 1 172 2 250 6 174 1 114 1 129 2 296 1 184 1 186 3 27 1 320 1 10 1 345 1 122 2 240 1 124 1 351 1 39 1 330 1 128 1 140 2 167 1 
143 2 44 3 21 5 171 2 250 15 2 3 129 1 114 2 147 4 179 1 278 1 131 1 186 10 27 2 342 1 320 3 10 3 13 1 345 12 122 2 90 1 285 1 222 1 240 2 39 12 41 2 128 1 140 4 167 2 97 3 
10 1 143 1 171 1 250 2 345 1 2 1 122 1 114 1 240 1 124 1 39 1 186 2 27 1 128 1 140 2 167 1 29 1 320 1 
21 2 171 1 275 1 172 1 250 2 345 1 122 1 114 1 240 1 124 1 210 1 39 1 298 1 27 1 128 1 140 2 167 1 320 1 
143 1 44 1 21 2 171 1 275 1 250 4 172 1 2 1 114 1 210 1 186 2 27 1 320 2 10 1 345 2 122 2 240 1 124 1 39 2 128 1 140 2 167 1 
10 1 143 1 58 1 171 1 250 2 345 1 2 1 122 1 114 1 240 1 39 1 186 2 27 1 128 1 140 2 167 1 29 1 320 1 
58 1 21 2 171 1 275 1 172 1 250 2 345 1 122 1 114 1 240 1 210 1 39 1 298 1 27 1 128 1 140 2 167 1 320 1 
10 1 143 1 58 1 44 1 171 1 250 2 345 1 2 1 122 1 114 1 240 1 39 1 186 2 27 1 128 1 140 2 167 1 320 1 
10 1 143 1 44 1 171 1 250 2 345 1 2 1 122 1 114 1 240 1 39 1 186 2 27 1 128 1 140 2 167 1 320 1 
21 1 171 1 250 2 113 1 129 1 176 1 114 1 180 1 115 1 153 1 186 1 185 1 27 1 259 1 14 1 90 1 222 1 240 1 36 1 38 1 306 1 40 1 68 1 331 1 128 1 140 2 167 1 141 1 
21 1 171 1 250 2 113 1 129 1 176 1 114 1 180 1 115 1 186 1 27 1 259 1 14 1 283 1 90 1 222 1 105 1 240 1 36 1 306 1 40 1 68 1 331 1 127 1 128 1 140 2 167 1 141 1 
10 1 143 1 44 1 171 1 250 2 345 1 2 1 122 1 114 1 179 1 240 1 39 1 186 2 27 1 128 1 140 2 167 1 320 1 
143 1 335 1 44 1 171 1 250 2 2 1 113 1 176 1 114 1 149 1 180 1 115 1 153 1 186 2 185 1 27 1 320 1 10 1 14 1 345 1 122 1 240 1 36 1 38 1 306 1 39 1 40 1 68 1 331 1 128 1 140 2 167 1 141 1 
143 1 44 1 171 1 170 1 250 2 113 1 2 1 114 1 148 1 179 1 180 1 186 2 27 1 8 1 158 1 214 1 132 1 320 1 10 1 345 1 122 1 240 1 39 1 128 1 140 2 167 1 
143 3 44 3 21 10 275 3 172 3 250 19 2 3 114 2 147 2 208 1 313 1 210 3 253 2 340 2 186 9 27 2 10 3 13 1 191 1 193 1 33 1 122 6 240 2 61 1 223 1 242 1 41 1 140 4 167 2 97 1 
143 2 44 3 21 12 275 2 172 2 250 26 72 1 2 3 114 3 147 2 313 1 251 2 210 2 253 1 340 4 156 1 186 14 27 3 133 1 10 3 13 2 260 1 191 2 193 2 122 4 164 1 240 3 61 1 223 1 242 1 269 1 140 6 167 3 97 2 
308 1 143 4 44 4 21 21 275 5 72 1 172 4 250 41 174 1 2 4 114 3 147 4 208 1 313 1 251 1 296 1 210 4 184 1 253 1 340 4 156 1 186 20 27 3 133 1 10 5 13 3 260 1 191 2 193 1 164 1 122 8 240 3 61 1 351 1 223 1 242 1 41 1 330 1 199 1 269 1 140 6 167 3 97 3 
308 1 143 3 44 4 21 18 275 4 72 1 172 4 250 38 174 1 2 4 114 4 147 4 208 1 313 1 251 2 296 1 210 3 184 1 253 1 340 4 156 1 186 20 27 4 133 1 10 5 13 3 260 1 191 2 193 1 164 1 122 7 240 4 61 1 351 1 223 1 242 1 41 1 330 1 199 1 269 1 140 8 167 4 97 3 
308 1 143 7 44 7 21 25 275 8 72 1 172 7 250 52 174 1 2 7 114 2 147 4 313 1 251 1 296 1 210 7 131 2 184 1 253 1 340 4 156 1 186 27 27 2 133 1 10 8 13 2 260 1 191 1 193 1 164 1 122 14 240 2 61 1 351 1 223 1 242 1 41 2 330 1 269 1 140 4 167 2 97 4 
146 1 198 1 104 1 19 1 228 1 54 1 200 1 165 1 56 1 159 1 
329 1 336 1 
135 1 125 1 146 1 104 1 54 1 200 1 165 1 196 1 159 1 
30 1 187 1 
277 1 67 1 239 1 
270 1 146 1 236 1 325 1 104 1 228 1 165 1 47 1 108 1 183 1 198 1 200 1 54 1 201 1 9 2 56 1 159 1 322 1 
270 1 146 1 236 1 325 1 104 1 228 1 165 1 47 1 108 1 183 1 198 1 200 1 54 1 201 1 9 2 56 1 159 1 322 1 
270 1 146 1 236 1 325 1 104 1 228 1 165 1 47 1 108 1 183 1 198 1 200 1 54 1 201 1 9 2 56 1 159 1 322 1 
30 1 277 1 187 1 
30 1 277 1 187 1 
67 1 239 1 
277 1 67 1 239 1 
157 1 349 1 
146 1 170 2 113 2 336 1 129 1 180 2 182 1 100 1 54 1 8 2 189 1 9 1 159 1 213 1 157 1 158 2 322 1 236 1 192 1 325 1 104 1 165 1 92 1 349 1 329 1 200 1 201 1 
0 1 21 1 171 1 250 2 113 2 114 1 176 2 179 1 180 2 115 2 78 1 79 1 186 1 27 1 8 2 343 1 190 1 219 1 90 1 326 2 222 1 240 1 36 2 306 1 352 1 40 1 331 1 128 1 140 2 167 1 141 1 
176 1 295 1 36 1 306 1 115 1 40 1 110 1 51 1 138 1 331 1 166 1 259 1 333 1 141 1 
86 1 281 1 324 1 121 1 176 1 34 1 304 1 99 2 36 1 306 1 115 1 328 1 40 1 110 1 266 1 95 1 333 1 359 1 
335 1 86 1 281 1 324 1 121 1 176 2 34 1 304 1 99 2 36 2 306 1 115 2 328 1 40 1 110 1 266 1 95 1 333 1 359 1 
86 1 281 1 121 1 15 1 176 1 34 1 304 1 99 2 36 1 306 1 115 1 328 1 40 1 266 1 95 1 333 1 359 1 
204 1 
280 1 103 1 262 1 221 1 197 1 252 1 47 1 290 1 243 1 82 1 
10 2 44 2 274 10 275 2 73 1 2 2 346 2 47 5 210 2 288 1 49 5 65 5 243 5 82 5 257 5 
84 1 47 1 236 1 290 1 322 1 205 1 
337 2 176 4 295 1 314 1 252 1 115 4 301 1 82 2 259 2 57 1 322 3 280 2 84 4 344 2 302 1 236 3 303 2 262 2 221 2 238 1 36 4 306 1 40 1 243 2 331 1 244 1 166 1 141 1 205 2 
84 1 280 1 144 1 274 1 236 1 262 1 221 1 47 2 252 1 290 1 243 1 212 1 6 1 82 1 257 1 322 1 205 1 
280 1 227 1 310 1 176 1 262 1 221 1 93 1 36 1 252 1 306 1 115 1 40 2 291 1 68 1 331 1 259 1 141 1 
44 2 274 6 275 2 72 1 73 1 2 2 147 1 252 2 47 5 210 2 49 5 82 5 257 3 258 1 133 1 322 1 84 1 280 2 10 2 13 1 344 1 260 1 236 1 303 1 164 1 262 2 346 2 221 2 354 1 65 5 243 8 290 2 269 1 205 1 97 1 
275 1 170 1 22 1 73 1 113 1 174 1 180 1 252 1 339 1 82 2 8 1 214 1 158 1 321 1 322 1 11 1 234 1 280 1 10 2 236 1 262 1 346 2 221 1 264 1 351 1 243 2 330 1 202 1 
197 1 47 1 243 1 290 1 103 1 71 1 82 1 
21 1 170 2 171 1 250 1 113 3 173 1 129 1 114 1 176 1 180 3 115 1 153 1 185 1 27 1 8 2 259 1 158 2 214 2 14 1 90 1 264 1 240 1 36 1 38 1 306 1 40 1 68 1 331 1 128 1 140 2 167 1 141 1 
280 1 274 4 344 1 303 1 262 1 221 1 296 1 252 1 47 4 49 2 65 2 243 1 290 2 82 2 257 2 
104 1 54 1 276 1 56 1 157 1 
292 1 104 1 54 1 
292 1 104 1 54 1 
292 1 104 1 54 1 
355 1 104 1 54 1 
355 1 104 1 54 1 
355 1 104 1 54 1 
104 1 54 1 
146 1 165 1 
234 1 10 2 143 2 21 5 275 2 172 3 250 10 174 1 114 1 122 5 240 1 61 1 351 2 330 2 186 5 27 1 140 2 167 1 
10 1 143 1 250 2 2 1 114 1 122 1 240 1 61 1 186 2 27 1 140 2 167 1 
10 1 143 1 44 1 21 2 275 1 172 1 250 4 2 1 122 2 114 1 240 1 61 1 210 1 186 2 27 1 140 2 167 1 
143 1 21 2 250 3 172 1 114 3 122 2 263 1 208 1 240 3 251 1 61 1 351 1 330 1 186 1 27 3 140 6 167 3 
308 1 143 5 44 3 21 18 275 5 250 34 172 7 174 2 2 3 114 5 147 4 208 1 251 2 296 1 210 3 211 1 230 1 184 1 186 16 27 5 28 1 10 5 13 1 122 12 263 1 240 5 61 1 351 3 41 1 330 3 140 10 358 1 167 5 97 3 
308 1 21 4 275 1 250 8 72 1 172 2 174 1 114 1 147 1 296 1 184 1 186 4 27 1 10 1 13 1 122 2 240 1 61 1 351 1 330 1 140 2 167 1 97 1 
308 1 143 1 44 1 21 5 275 1 172 2 250 11 72 1 174 1 2 1 114 2 147 2 296 1 184 1 186 6 27 2 28 1 10 2 13 1 122 3 240 2 61 1 351 1 41 1 330 1 140 4 167 2 97 1 
308 1 143 1 44 2 21 10 275 3 250 19 72 1 172 3 174 1 2 2 114 3 147 1 251 1 296 1 210 2 184 1 186 9 27 3 28 1 133 1 10 3 13 1 260 1 164 1 122 4 240 3 61 1 351 1 330 1 140 6 269 1 167 3 97 1 
308 1 143 2 44 2 21 7 275 2 250 17 72 1 172 3 174 1 2 2 114 3 147 1 251 1 296 1 210 1 184 1 186 10 27 3 28 1 133 1 10 3 13 1 260 1 164 1 122 5 240 3 61 1 351 1 330 1 140 6 269 1 167 3 97 1 
308 1 21 4 275 1 250 8 72 1 172 2 174 1 114 1 147 1 296 1 184 1 186 4 27 1 10 1 13 1 122 2 240 1 61 1 351 1 330 1 140 2 167 1 97 1 
143 1 44 2 21 6 275 2 250 12 72 1 172 1 2 2 114 1 147 1 210 2 186 6 27 1 133 1 10 2 13 1 260 1 164 1 122 2 240 1 61 1 140 2 269 1 167 1 97 1 
308 1 143 2 44 2 21 8 275 2 250 18 72 1 172 3 174 1 2 2 114 4 147 1 251 2 296 1 210 1 184 1 186 10 27 4 28 1 133 1 10 3 13 1 260 1 164 1 122 5 240 4 61 1 351 1 330 1 269 1 140 8 167 4 97 1 
143 3 44 3 21 7 275 2 250 16 72 1 172 3 2 3 114 4 147 1 208 1 251 2 210 2 186 9 27 4 133 1 10 3 13 1 260 1 164 1 122 6 240 4 61 1 269 1 140 8 167 4 97 1 
10 1 308 2 143 3 21 4 275 1 250 7 172 3 174 1 122 6 351 3 184 1 330 3 186 3 
308 1 143 1 44 2 21 8 275 2 250 18 72 1 172 3 174 1 2 2 114 4 147 1 208 1 251 2 296 1 210 1 184 1 186 10 27 4 133 1 10 3 13 1 260 1 164 1 122 4 240 4 61 1 351 1 330 1 269 1 140 8 167 4 97 1 
10 1 143 1 308 1 21 4 275 1 250 8 172 2 174 1 122 3 114 2 240 2 251 1 296 1 351 1 184 1 330 1 186 4 27 2 140 4 167 2 
10 1 308 1 21 3 275 1 71 1 172 2 250 6 174 1 122 2 296 1 351 1 184 1 330 1 186 3 
10 1 143 1 44 1 21 2 275 1 172 1 250 4 2 1 122 2 114 1 240 1 210 1 186 2 27 1 28 1 140 2 167 1 
10 1 13 1 143 1 44 1 21 4 275 1 172 1 250 7 2 1 122 2 147 2 210 1 41 1 186 3 97 1 
308 1 143 4 44 2 21 12 275 3 250 23 172 5 174 1 2 2 114 2 147 2 251 2 296 1 210 2 131 1 184 1 186 11 27 2 10 3 122 9 263 1 285 1 240 2 351 2 41 1 330 2 140 4 167 2 97 2 
21 1 250 1 147 1 
250 1 186 1 97 1 
10 1 143 1 44 1 21 3 275 1 250 6 172 2 2 1 114 1 122 3 240 1 210 1 288 1 186 3 27 1 28 1 140 2 167 1 
143 1 44 2 21 6 275 2 250 12 72 1 172 1 2 2 114 1 147 1 210 2 186 6 27 1 133 1 10 2 13 1 260 1 164 1 122 2 240 1 61 1 140 2 269 1 167 1 97 1 
10 1 143 1 351 1 21 3 275 1 172 1 330 1 250 6 174 1 122 2 186 3 
143 1 308 1 21 2 172 1 250 3 122 2 114 1 263 1 240 1 251 1 351 1 184 1 330 1 186 1 27 1 140 2 167 1 
161 1 207 1 59 1 249 1 155 1 284 1 293 1 60 1 
155 1 284 1 60 1 
335 1 176 4 194 1 287 1 295 1 36 4 306 1 115 4 40 1 331 1 166 1 259 1 141 1 
12 1 337 1 176 2 36 2 306 1 115 2 152 1 40 2 255 1 68 1 81 1 139 1 331 1 141 1 
36 1 306 1 115 1 328 1 40 1 266 1 95 1 176 1 259 1 99 1 
335 1 176 2 304 1 36 2 306 1 115 2 40 1 78 1 79 1 331 1 141 1 
335 1 235 1 337 1 176 4 287 1 295 1 36 5 306 2 115 5 40 2 78 1 356 1 331 3 166 1 259 1 141 2 
335 1 337 1 176 4 287 1 295 1 35 1 36 5 306 2 115 5 40 2 78 1 356 1 331 3 166 1 259 1 141 2 
14 1 170 1 113 2 129 1 176 1 180 2 36 1 38 1 306 1 115 1 40 1 68 1 357 1 331 1 8 1 259 1 158 1 141 1 
206 1 170 2 113 2 129 1 176 1 337 1 180 2 77 1 115 1 8 2 158 1 119 1 11 1 14 1 136 1 36 1 38 1 306 1 40 1 357 1 68 2 331 3 141 2 
206 1 170 2 113 2 129 1 176 2 337 1 180 2 77 1 115 2 8 2 158 1 119 1 11 1 14 1 136 1 194 1 105 1 36 2 306 1 40 1 357 1 68 2 331 3 141 2 
206 1 84 1 236 2 337 1 176 3 194 1 107 1 36 3 47 1 305 1 77 1 306 1 115 3 290 1 316 1 40 1 291 1 68 1 331 4 259 1 141 1 322 2 334 1 
206 1 84 1 236 2 337 1 176 3 194 1 107 1 36 3 47 1 305 1 77 1 306 1 115 3 290 1 40 1 254 1 291 1 68 1 331 4 259 1 141 1 322 2 
36 1 306 1 115 1 40 1 176 1 347 1 
235 1 335 1 227 1 176 6 347 1 304 1 326 1 36 7 25 1 306 2 115 7 64 1 152 1 40 3 78 1 356 1 255 1 68 1 331 3 259 2 141 2 
308 1 170 1 171 2 275 1 172 2 174 1 176 1 129 2 179 1 180 2 184 1 185 1 186 3 8 1 320 1 10 1 190 1 14 1 240 2 330 1 18 1 68 1 331 1 140 4 141 1 335 1 21 3 250 6 113 2 114 2 149 1 296 1 115 1 153 1 27 2 158 1 345 1 122 2 36 1 38 1 351 1 306 1 39 1 40 1 357 1 128 2 167 2 
273 1 176 1 150 1 182 1 47 1 252 2 115 1 254 1 82 1 259 1 322 3 134 1 280 2 84 2 236 3 103 1 262 2 221 2 107 1 197 1 36 1 305 1 243 1 290 1 291 1 244 1 331 2 205 1 
36 1 306 1 115 1 40 1 71 1 176 1 331 1 166 1 259 1 295 1 141 1 
14 1 170 1 113 2 129 1 176 1 180 2 105 1 36 1 306 1 115 1 40 1 68 1 357 1 331 1 8 1 259 1 158 1 141 1 
227 1 337 1 176 1 36 1 306 1 115 1 64 1 152 1 40 2 255 1 68 1 331 1 141 1 
98 1 227 1 176 1 347 1 93 1 107 1 36 1 306 1 115 1 40 2 68 1 331 1 141 1 
0 1 352 1 317 1 113 1 17 1 180 1 8 1 46 1 343 1 
123 1 317 1 45 1 
317 1 129 1 286 1 17 1 46 1 
11 1 236 2 136 1 312 1 129 1 17 2 286 2 45 1 182 1 46 2 123 1 47 1 305 1 63 1 290 1 317 1 318 1 119 1 322 2 
4 1 94 1 87 1 50 1 80 1 101 1 229 1 233 1 
272 1 32 1 87 1 175 2 327 1 229 3 3 1 4 4 94 4 50 1 80 2 341 1 319 1 233 2 
87 1 175 1 229 1 106 1 4 2 48 1 94 2 50 1 80 1 101 1 111 1 233 1 
272 2 32 1 87 1 16 1 229 1 4 3 94 3 50 1 101 1 80 1 319 2 233 1 
102 1 311 2 229 2 70 1 
4 1 94 1 87 1 50 1 163 1 101 1 
4 2 94 2 87 1 265 1 50 1 175 1 80 1 101 1 229 1 233 1 
248 1 
4 1 94 1 87 1 50 1 80 1 101 1 229 1 233 1 
4 1 94 1 87 1 50 1 80 1 229 1 233 1 
217 1 94 1 309 1 
4 3 272 1 32 1 94 3 87 1 50 1 300 1 80 1 101 1 319 2 229 1 233 1 
4 2 94 2 87 1 109 1 50 1 175 1 80 1 229 1 233 1 
4 1 86 1 94 1 87 1 289 1 50 1 95 1 341 1 101 1 229 1 99 1 
4 1 94 1 87 1 50 1 80 1 101 1 229 1 
4 1 94 1 87 1 50 1 80 2 101 1 233 1 
87 2 162 1 195 1 229 1 4 2 94 2 50 2 80 1 101 1 188 1 
87 1 175 2 327 1 229 2 4 3 94 3 265 1 50 1 154 1 80 1 101 1 341 1 233 1 
31 1 87 1 86 1 175 1 229 1 99 2 4 2 94 2 50 1 266 1 80 1 101 1 95 1 233 1 359 1 
271 1 87 2 175 2 327 1 229 2 4 4 94 4 109 1 50 2 80 1 101 1 341 1 233 1 
71 1 80 1 229 1 233 1 
4 3 94 3 87 1 265 1 50 1 175 1 80 1 101 1 319 1 229 1 233 1 
3 1 341 1 229 1 327 1 
80 1 229 1 

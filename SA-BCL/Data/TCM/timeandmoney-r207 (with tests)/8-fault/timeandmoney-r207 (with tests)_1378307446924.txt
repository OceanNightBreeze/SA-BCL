#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 126 (255,326) (255,326) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 126 (255,326) (255,326) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 126 (255,326) (255,326) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 126 (255,326) (255,326) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 220 199 334 239 170 186 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (357,363) 172 220 199 334 325 305 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 220 199 334 239 31 146 214 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 220 199 334 239 31 146 214 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 220 199 334 239 31 146 214 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 220 199 334 239 31 146 214 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 173 318 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 220 199 334 239 170 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 220 199 334 239 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 220 199 334 325 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 220 199 334 239 78 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 173 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 246 1 352 1 126 1 326 1 12 1 255 1 52 1 219 1 136 1 331 1 
101 1 246 1 352 1 126 1 326 1 12 1 255 1 52 1 219 1 136 1 331 1 
101 1 246 1 352 1 126 1 326 1 12 1 255 1 52 1 219 1 136 1 331 1 
101 1 246 1 352 1 126 1 326 1 12 1 255 1 52 1 219 1 136 1 331 1 
246 4 293 1 88 1 136 1 182 1 222 3 331 4 12 1 50 1 321 1 151 1 208 1 96 2 160 2 52 1 243 3 141 1 201 1 
246 2 86 1 101 1 88 1 136 1 222 1 182 1 331 2 12 1 50 1 93 1 15 1 52 1 219 1 201 1 372 1 
246 3 101 1 88 1 136 2 115 1 222 2 331 3 12 2 50 1 321 1 160 1 52 1 243 1 
246 9 293 1 88 1 136 2 115 1 222 5 182 1 249 1 50 1 321 3 160 4 96 2 208 1 210 1 52 1 141 1 101 1 355 1 331 9 288 1 12 2 151 1 243 7 201 1 
246 9 293 1 88 1 136 2 115 1 222 5 182 1 249 1 50 1 321 3 160 4 96 2 208 1 210 1 52 1 141 1 101 1 355 1 331 9 288 1 12 2 151 1 243 7 201 1 
28 1 314 1 165 2 105 1 286 1 248 1 194 1 150 1 82 2 83 5 307 2 61 1 297 2 109 1 368 1 98 1 338 5 154 1 162 2 
82 1 307 1 83 2 61 1 314 1 338 2 154 1 70 1 
180 1 48 1 67 1 145 1 158 1 360 1 82 1 320 1 83 1 5 1 291 1 338 1 111 1 143 1 
61 1 
61 1 356 1 154 1 
61 1 204 1 205 2 
360 1 87 1 291 2 67 2 145 2 111 2 158 2 143 2 
87 1 134 2 67 2 89 1 68 1 183 1 251 1 158 2 117 2 73 1 97 1 346 2 51 1 227 1 349 1 190 1 6 1 350 1 143 2 328 2 145 3 215 1 332 1 284 1 287 1 359 1 81 1 360 1 197 1 128 1 291 3 265 1 153 2 312 1 130 1 111 2 64 1 
360 1 5 1 180 1 48 1 291 1 67 1 145 1 111 1 158 1 143 1 
247 1 100 1 180 1 67 1 145 1 296 1 83 1 61 1 367 1 291 1 338 1 154 1 132 1 203 1 
100 1 296 1 83 2 61 1 180 1 291 1 67 1 338 2 145 1 154 1 132 1 111 1 203 1 158 1 143 1 
82 1 307 1 83 1 193 1 338 1 
82 1 307 1 83 2 61 1 24 1 314 1 338 2 154 1 
307 1 83 1 338 1 
87 1 134 1 145 1 148 1 284 1 359 1 117 1 346 1 128 1 51 1 291 1 227 1 130 1 190 1 6 1 64 1 
87 2 67 2 145 2 158 1 291 2 39 1 174 1 111 1 143 1 
172 1 200 1 357 1 
87 1 356 1 
134 1 67 1 145 2 357 1 284 1 158 1 359 1 117 1 346 1 128 1 51 1 227 1 291 2 258 1 130 1 6 1 190 1 370 1 64 1 143 1 
87 1 77 1 67 5 145 5 250 1 158 4 121 1 367 1 291 5 39 1 258 1 370 2 111 1 143 4 
5 1 180 1 291 2 67 2 145 2 176 1 158 2 143 2 
87 1 291 3 67 3 145 3 370 1 111 1 158 3 143 3 
5 1 180 1 291 1 67 1 145 1 158 1 143 1 
180 1 291 1 67 1 39 1 145 1 174 1 111 1 158 1 143 1 
87 1 134 1 343 1 180 1 67 3 89 1 158 3 117 1 296 1 73 1 97 1 346 1 51 1 227 1 258 1 6 1 190 1 349 1 350 1 301 1 143 3 100 1 328 1 145 4 332 1 284 1 287 1 359 1 81 1 360 1 83 1 197 1 128 1 39 1 291 4 338 1 153 2 312 1 130 1 132 1 370 1 64 1 111 2 203 1 
87 1 77 1 367 1 291 2 67 2 145 2 370 1 158 1 143 1 
100 1 343 1 180 1 67 3 145 3 158 3 296 1 83 1 61 1 365 1 39 1 291 3 338 1 258 1 132 1 370 2 111 1 143 3 203 1 
67 2 145 2 357 1 158 2 39 1 291 2 200 1 370 1 111 1 143 2 
87 1 134 1 145 1 284 1 359 1 117 1 346 1 51 1 128 1 291 1 227 1 130 1 190 1 6 1 64 1 
87 1 134 1 79 1 145 1 284 1 359 1 117 1 346 1 51 1 128 1 291 1 130 1 6 1 371 1 64 1 
0 1 137 1 89 1 252 1 207 1 73 1 300 1 348 1 350 1 328 4 215 2 357 2 332 2 287 1 81 1 363 1 14 1 196 1 197 1 172 2 153 2 200 2 44 1 220 1 
180 1 291 1 67 1 145 1 176 1 132 1 158 1 143 1 
315 1 178 1 
315 1 178 1 
217 1 254 1 
217 1 254 1 
217 1 254 1 
315 1 178 1 276 1 
315 1 178 1 276 1 
315 1 178 1 276 1 
315 1 295 1 178 1 
315 1 295 1 178 1 
315 1 295 1 178 1 
164 1 315 1 178 1 
217 1 362 1 254 1 315 2 57 1 178 2 
270 1 87 1 135 1 315 1 317 1 67 2 158 2 299 1 143 2 55 1 164 1 145 2 235 1 304 1 333 1 306 1 60 1 83 1 290 1 291 2 309 1 338 1 178 1 266 1 
55 2 135 2 103 1 315 2 317 2 124 1 235 3 116 1 289 1 333 2 195 2 362 1 83 2 61 1 338 2 178 2 110 1 266 1 191 1 
86 1 293 1 69 1 182 2 63 2 
293 1 201 1 182 1 
86 1 201 1 182 1 
86 1 293 2 47 1 69 1 182 3 63 1 
86 1 293 1 37 1 69 1 182 2 63 1 
314 1 48 1 180 1 319 2 320 1 5 1 187 1 8 1 143 1 145 1 286 3 194 2 61 2 290 1 14 1 196 1 109 1 291 1 338 5 199 1 154 1 111 1 204 1 67 1 205 3 158 1 297 1 209 1 348 1 27 2 162 1 30 1 165 1 303 1 360 1 127 2 82 4 83 5 307 1 220 1 
314 1 48 1 180 1 319 2 320 1 5 1 8 1 143 1 193 2 58 1 145 1 236 1 237 2 286 3 194 2 196 1 61 2 290 1 14 1 291 1 109 1 338 5 199 1 154 1 111 1 204 1 67 1 205 3 158 1 297 1 209 1 348 1 162 1 165 1 303 1 360 1 127 2 82 4 83 5 307 3 220 1 
204 1 180 1 48 1 67 1 319 2 205 3 158 1 320 1 5 1 297 1 187 1 348 1 27 1 8 1 143 1 162 1 28 1 30 1 165 1 303 1 145 1 286 3 194 2 360 1 127 2 82 2 83 3 196 1 61 2 290 1 14 1 291 1 338 3 199 1 154 1 111 1 220 1 
180 1 48 1 273 1 319 4 320 1 5 1 187 1 8 1 143 1 145 1 286 5 194 4 108 1 14 2 290 2 61 4 196 2 291 1 338 4 199 2 154 1 111 1 204 3 67 1 205 7 158 1 297 1 211 1 27 2 348 2 162 1 28 1 30 1 165 1 303 1 360 1 127 4 82 3 83 4 220 2 
310 1 
113 1 128 1 356 1 
128 1 275 1 
128 1 51 1 130 1 
345 1 128 1 
128 1 130 1 
113 2 128 3 51 1 26 1 130 1 340 1 
0 3 354 1 316 1 328 7 144 2 147 1 215 4 234 1 332 3 252 2 336 1 84 1 14 1 16 1 348 1 40 1 76 1 142 1 
294 1 328 5 144 1 279 1 215 4 234 2 332 1 239 1 334 1 14 1 170 1 186 1 199 1 142 1 220 1 
0 4 316 1 89 2 252 3 73 2 348 1 76 1 142 1 354 1 29 1 328 9 144 2 215 5 147 1 234 1 332 4 287 2 168 1 84 1 14 1 38 1 197 2 16 1 153 4 
0 3 354 1 316 1 328 7 144 2 147 1 215 4 234 1 332 3 252 2 84 1 14 1 16 1 348 1 40 1 76 1 142 1 
0 3 354 1 316 1 328 7 144 2 147 1 215 4 234 1 332 3 252 2 84 1 14 1 16 1 348 1 40 1 76 1 142 1 
101 2 246 1 134 1 271 1 20 1 221 1 233 1 136 1 331 1 284 1 285 2 261 1 359 1 117 1 344 1 12 1 346 1 128 1 311 2 130 1 177 2 64 1 46 1 
246 2 86 1 293 1 134 1 47 1 157 1 88 1 136 1 222 1 182 2 117 1 50 1 92 1 346 1 52 1 229 1 101 1 331 2 285 1 284 1 358 1 12 1 364 1 366 1 243 1 201 1 311 1 177 1 369 1 64 1 
246 3 1 1 86 1 293 1 134 1 19 1 47 1 157 1 88 1 136 1 222 1 182 2 117 1 50 1 346 1 229 1 101 1 331 3 285 1 284 1 261 1 358 1 12 1 366 1 243 2 201 1 311 1 177 1 369 1 64 1 
246 2 1 1 86 1 293 1 134 1 19 1 47 1 157 1 88 1 222 1 182 2 117 1 50 1 346 1 101 1 331 2 285 1 284 1 366 1 243 2 311 1 201 1 177 1 369 1 64 1 
246 1 86 1 293 1 134 1 19 1 47 1 157 1 136 1 182 2 117 1 92 1 346 1 52 1 229 1 101 1 331 1 285 1 284 1 358 1 12 1 366 1 201 1 311 1 177 1 369 1 64 1 
223 1 
134 2 3 1 271 1 314 3 180 1 274 1 224 1 225 1 322 2 8 1 54 1 100 1 232 2 145 1 330 1 106 2 284 1 11 2 286 2 194 2 240 1 61 2 198 4 109 1 291 1 338 5 154 1 64 1 203 1 247 1 204 2 21 2 67 1 205 2 117 2 72 1 296 1 346 2 297 1 347 1 162 1 353 1 213 2 165 1 166 2 359 2 36 1 307 6 83 5 367 1 128 1 130 1 132 1 179 1 46 1 
247 1 3 1 314 1 180 1 67 1 70 1 225 1 224 1 296 1 347 1 100 1 145 1 106 1 83 3 307 2 367 1 198 2 291 1 338 3 132 1 179 1 203 1 
247 1 3 1 314 1 180 1 67 1 70 1 225 1 224 1 296 1 347 1 100 1 145 1 166 1 307 1 83 3 61 1 367 1 198 3 291 1 338 3 154 1 132 1 179 1 203 1 
247 1 3 1 314 1 180 1 67 1 70 1 225 1 224 1 296 1 347 1 100 1 213 1 145 1 106 1 166 1 83 3 307 2 61 1 367 1 198 3 291 1 338 3 154 1 132 1 179 1 203 1 
3 1 314 3 48 1 180 2 224 1 225 1 320 1 5 1 322 2 143 1 100 1 9 1 232 2 145 2 10 1 330 1 106 4 286 1 11 2 194 1 240 1 61 1 198 4 291 2 109 1 338 5 292 1 154 1 111 1 203 1 247 1 204 2 67 2 21 2 70 1 158 1 296 1 297 1 347 1 162 1 213 4 165 1 166 2 360 1 262 1 83 5 307 7 367 1 313 1 132 1 179 1 
3 1 314 2 180 1 224 1 225 1 322 2 54 1 100 1 232 2 145 1 330 1 106 2 286 1 11 2 194 1 240 1 61 2 198 4 291 1 109 1 338 4 154 1 203 1 247 1 204 2 67 1 21 2 205 2 296 1 297 1 347 1 162 1 213 2 165 1 166 2 83 4 307 4 367 1 132 1 179 1 
247 1 3 1 204 2 314 2 180 1 21 2 67 1 225 1 224 1 296 1 297 1 347 1 322 2 162 1 100 1 213 2 9 1 232 2 165 1 145 1 330 1 166 2 106 2 11 2 286 1 194 1 240 1 307 4 83 4 61 1 367 1 198 4 291 1 109 1 338 4 292 1 313 1 154 1 132 1 179 1 203 1 
247 1 3 1 204 2 314 2 180 1 21 2 67 1 225 1 224 1 296 1 297 1 347 1 322 2 162 1 100 1 213 2 9 1 232 2 165 1 145 1 330 1 166 2 106 2 11 2 286 1 194 1 240 1 307 4 83 4 61 1 367 1 198 4 291 1 109 1 338 4 292 1 313 1 154 1 132 1 179 1 203 1 
247 1 3 1 314 2 180 1 67 1 23 1 205 2 225 1 224 1 296 1 297 1 347 1 322 2 161 2 230 1 162 1 100 1 213 2 9 1 232 2 165 1 145 1 166 2 106 2 286 1 194 1 240 1 307 4 83 4 61 1 367 1 198 4 291 1 109 1 338 4 339 2 42 1 154 1 132 1 179 1 203 1 
3 1 314 2 48 1 180 2 224 1 225 1 320 1 5 1 322 2 143 1 100 1 9 1 232 2 145 2 10 1 330 1 106 3 286 1 11 2 194 1 240 1 61 1 198 5 291 2 109 1 338 4 292 1 154 1 111 1 203 1 247 1 204 2 67 2 21 2 158 1 296 1 297 1 347 1 162 1 213 3 165 1 166 3 360 1 307 5 83 4 367 1 313 1 132 1 179 1 
3 1 314 2 48 1 180 2 224 1 225 1 320 1 5 1 322 2 143 1 100 1 9 1 232 2 145 2 10 1 330 1 106 3 286 1 11 2 194 1 240 1 61 1 198 5 291 2 109 1 338 4 292 1 154 1 111 1 203 1 247 1 204 2 67 2 21 2 158 1 296 1 297 1 347 1 162 1 213 3 165 1 166 3 360 1 307 5 83 4 367 1 313 1 132 1 179 1 
3 1 314 2 180 1 224 1 225 1 322 2 230 1 54 1 100 1 232 2 145 1 106 2 286 1 194 1 240 1 61 1 198 4 291 1 109 1 338 4 339 2 154 1 203 1 247 1 67 1 205 2 296 1 297 1 347 1 161 2 162 1 213 2 165 1 166 2 83 4 307 4 367 1 132 1 179 1 
0 2 87 2 354 1 328 6 144 1 356 1 215 3 147 1 89 1 357 1 332 3 287 1 252 2 81 1 84 1 14 1 73 1 197 1 16 1 172 1 300 1 348 1 153 2 200 1 76 1 350 1 
294 1 328 4 279 1 215 3 89 1 357 4 332 1 287 1 305 1 334 1 81 1 14 1 73 1 197 1 172 4 199 1 129 1 153 2 325 1 350 1 220 1 
87 1 134 1 67 1 89 1 117 1 158 1 346 1 73 1 51 1 227 1 228 1 258 1 189 1 6 1 190 1 350 1 143 1 328 2 145 2 215 1 148 1 284 1 332 1 287 1 359 1 81 1 197 1 128 1 291 2 264 1 129 1 153 2 265 1 200 1 312 1 130 1 370 1 64 1 
0 8 87 2 134 3 316 4 89 3 4 1 95 2 51 2 227 2 190 2 6 2 143 1 278 2 328 20 144 1 145 3 147 1 332 10 283 1 284 2 287 3 62 2 14 3 196 2 197 3 16 1 291 3 153 6 199 2 200 7 64 2 19 1 67 1 117 3 158 1 118 1 252 4 346 3 73 3 348 3 258 1 349 2 76 1 350 3 354 1 215 10 357 7 359 1 81 3 84 1 308 2 128 2 172 7 265 1 129 1 312 1 130 2 370 1 220 2 
0 1 316 1 328 2 137 1 89 1 215 2 357 1 287 1 81 1 73 1 14 1 197 1 172 1 300 1 153 2 200 1 350 1 220 1 
0 1 328 2 89 1 357 1 332 2 287 1 252 1 81 1 73 1 196 1 197 1 172 1 300 1 153 2 348 1 200 1 350 1 44 1 
0 2 316 1 89 1 252 1 73 1 300 1 348 1 350 1 328 4 215 2 357 2 332 2 287 1 81 1 14 1 196 1 197 1 172 2 199 1 153 2 200 2 220 1 
0 1 316 1 328 2 123 1 137 1 89 1 215 2 357 1 287 1 81 1 73 1 14 1 197 1 172 1 153 2 200 1 350 1 220 1 
0 1 328 2 123 1 89 1 357 1 332 2 287 1 252 1 81 1 73 1 196 1 197 1 172 1 153 2 348 1 200 1 350 1 44 1 
0 2 316 1 89 1 252 1 73 1 348 1 350 1 123 1 328 4 215 2 357 2 332 2 287 1 81 1 14 1 196 1 197 1 172 2 199 1 153 2 200 2 220 1 
0 2 316 1 89 1 252 1 73 1 348 1 350 1 328 4 215 2 357 2 332 2 287 1 81 1 14 1 196 1 197 1 172 2 199 1 153 2 200 2 220 1 
87 1 134 1 89 1 117 1 346 1 73 1 51 1 227 1 6 1 190 1 349 1 350 1 328 2 145 1 215 1 284 1 332 1 287 1 359 1 81 1 197 1 128 1 291 1 265 1 153 2 312 1 130 1 64 1 
87 1 134 1 342 1 89 1 117 1 346 1 73 1 51 1 6 1 350 1 328 2 79 1 145 1 215 1 284 1 332 1 287 1 359 1 81 1 197 1 128 1 291 1 265 1 153 2 312 1 130 1 64 1 371 1 
0 2 316 1 89 1 252 1 73 1 348 1 350 1 328 4 215 2 357 2 332 2 287 1 81 1 14 1 196 1 197 1 172 2 199 1 153 2 129 1 200 2 220 1 
0 2 134 1 316 1 89 1 117 1 252 1 95 1 346 1 73 1 51 1 227 1 348 1 6 1 190 1 349 1 350 1 328 4 145 1 215 2 357 2 332 2 284 1 287 1 81 1 364 1 196 1 14 1 197 1 128 1 172 2 291 1 153 2 199 1 200 2 130 1 64 1 220 1 
0 1 316 1 67 1 89 1 158 1 73 1 348 1 350 1 143 1 328 3 145 1 215 2 357 1 332 1 287 1 81 1 196 1 14 1 197 1 39 1 291 1 172 1 153 2 129 1 199 1 200 1 43 1 111 1 220 1 
19 1 134 8 271 1 67 1 89 2 138 1 184 1 185 1 158 1 117 7 251 2 346 8 73 2 300 1 324 1 350 2 143 1 123 1 328 2 145 1 215 1 284 2 332 1 287 2 359 2 81 2 364 1 197 2 128 3 291 1 153 4 265 1 312 1 130 2 155 1 370 1 202 1 64 2 46 1 
0 1 67 1 89 1 158 1 252 1 73 1 348 1 350 1 143 1 328 3 281 1 145 1 215 1 357 1 332 2 287 1 81 1 14 1 196 1 197 1 172 1 39 1 291 1 153 2 129 1 199 1 200 1 111 1 220 1 
122 1 294 1 328 6 29 1 214 1 280 1 279 1 31 1 215 4 89 2 146 1 332 2 287 2 239 1 334 1 335 1 14 1 73 2 197 2 199 1 153 4 220 1 
0 4 294 2 316 2 89 3 252 2 73 3 25 1 348 2 74 1 122 4 260 1 29 1 328 26 214 1 78 1 279 2 31 2 146 2 215 14 34 1 332 12 287 3 238 1 239 2 361 1 335 1 168 2 14 3 196 2 242 1 197 3 153 6 199 3 220 3 
122 1 294 1 328 6 29 1 214 1 280 1 279 1 31 1 215 4 89 2 146 1 332 2 287 2 239 1 334 1 335 1 14 1 73 2 197 2 199 1 153 4 220 1 
122 1 294 1 328 6 29 1 214 1 280 1 279 1 31 1 215 4 89 2 146 1 332 2 287 2 239 1 334 1 335 1 14 1 73 2 197 2 199 1 153 4 220 1 
0 1 294 1 89 1 252 1 73 1 348 1 76 1 122 1 354 1 29 1 328 11 214 1 144 1 279 1 31 1 147 1 146 1 215 7 332 4 287 1 239 1 334 1 335 1 84 1 14 2 197 1 16 1 153 2 199 1 220 1 
55 1 362 1 135 1 315 1 317 1 124 1 178 1 267 1 116 1 333 1 
231 1 276 1 
57 1 295 1 167 1 
55 1 135 1 103 1 315 1 317 1 124 1 235 2 116 1 289 1 333 1 195 1 362 1 83 1 61 1 338 1 178 1 110 1 266 1 
55 1 135 1 103 1 315 1 317 1 124 1 235 2 116 1 289 1 333 1 195 1 362 1 83 1 61 1 338 1 178 1 110 1 266 1 
55 1 135 1 103 1 315 1 317 1 124 1 235 2 116 1 289 1 333 1 195 1 362 1 83 1 61 1 338 1 178 1 110 1 266 1 
231 1 57 1 276 1 
231 1 57 1 276 1 
295 1 167 1 
57 1 295 1 167 1 
60 1 299 1 
270 1 87 1 135 1 315 1 317 1 67 2 158 2 299 1 143 2 55 1 164 1 103 1 329 1 145 2 235 1 304 1 333 1 306 1 195 1 60 1 82 1 83 1 290 1 291 2 309 1 338 1 178 1 
164 1 309 1 
55 1 2 1 135 1 315 1 171 1 317 1 59 1 178 1 333 1 
134 2 67 2 89 1 185 1 251 2 117 2 159 1 346 2 73 1 188 1 350 1 53 1 328 2 145 2 215 1 284 1 332 1 287 1 81 1 197 1 218 1 337 1 128 1 291 2 129 1 153 2 265 1 312 1 130 1 155 1 64 1 
134 1 271 1 233 1 284 1 359 1 117 1 346 1 128 1 41 1 130 1 177 1 64 1 133 1 46 1 
86 1 17 1 293 1 19 1 134 2 47 1 157 1 182 2 284 1 117 2 139 1 364 1 346 2 366 1 201 1 229 1 177 1 64 1 133 1 
86 1 293 1 19 1 134 1 47 1 156 1 157 1 182 2 284 1 117 1 139 1 346 1 366 1 201 1 229 1 177 1 64 1 
86 1 17 1 293 1 19 1 134 1 47 1 157 1 182 2 284 1 117 1 139 1 346 1 366 1 201 1 229 1 177 1 64 1 133 1 
216 1 
165 1 248 1 286 1 194 1 61 1 297 1 109 1 98 1 154 1 162 1 
18 1 204 5 282 2 319 5 286 5 194 5 205 10 127 5 14 2 61 5 196 2 308 1 199 2 348 2 220 2 
61 1 98 1 356 1 154 1 286 1 248 1 194 1 
204 1 314 1 21 1 205 1 297 1 162 1 165 1 330 1 286 1 11 1 194 1 307 1 83 1 61 2 109 1 338 1 154 1 
134 1 346 1 297 1 165 1 109 1 173 1 284 1 318 1 64 1 117 1 359 1 162 1 
18 1 294 1 204 3 314 1 319 5 205 6 297 2 348 2 74 1 8 1 259 1 162 2 353 1 212 1 260 1 78 1 165 2 279 1 282 2 286 8 194 5 238 1 239 1 361 1 127 5 83 1 307 1 61 5 14 2 196 2 109 2 338 1 199 2 154 2 220 2 
18 1 180 1 48 1 67 1 158 1 320 1 5 1 297 1 348 1 76 1 162 1 143 1 192 1 165 1 145 1 147 1 282 2 286 2 194 2 360 1 84 1 83 1 14 2 291 1 109 1 338 1 292 1 111 1 
87 1 134 1 67 2 89 1 117 1 158 2 73 1 346 1 97 1 51 1 227 1 349 1 190 1 6 1 350 1 143 2 328 1 145 3 332 1 284 1 287 1 359 1 360 1 81 1 197 1 128 1 291 3 153 2 312 1 130 1 111 2 64 1 
353 1 204 2 165 1 144 1 319 2 286 1 205 4 194 2 127 2 61 4 297 1 109 1 154 2 8 1 162 1 
83 1 307 1 61 1 314 1 338 1 154 1 
134 4 314 2 271 1 274 1 117 4 72 1 119 1 346 4 297 2 99 2 8 2 162 2 28 1 353 2 104 1 165 2 284 1 286 2 194 2 359 2 307 4 83 3 128 1 109 1 338 3 130 1 64 1 112 1 46 1 
135 1 245 1 333 1 
135 1 245 1 333 1 
135 1 245 1 333 1 
120 1 135 1 333 1 
120 1 135 1 333 1 
120 1 135 1 333 1 
135 1 333 1 
315 1 178 1 
135 1 299 1 124 1 140 1 333 1 
0 5 192 1 29 1 316 2 328 10 89 1 147 2 215 5 332 5 287 1 252 3 84 2 73 1 14 2 197 1 153 2 348 2 76 1 
0 1 29 1 328 2 316 1 89 1 215 2 287 1 73 1 14 1 197 1 153 2 220 1 
0 2 29 1 328 4 316 1 89 1 215 2 332 2 287 1 252 1 196 1 73 1 14 1 197 1 348 1 153 2 199 1 220 1 
0 2 328 3 29 1 316 1 280 1 89 3 147 1 215 1 332 2 287 3 252 1 168 1 84 1 169 1 73 3 197 3 153 6 
0 5 294 3 316 2 272 1 89 4 252 3 73 4 348 3 76 1 351 1 354 1 29 1 328 24 144 1 279 3 280 1 147 1 215 13 332 11 287 4 239 1 334 1 168 1 84 1 14 4 196 2 197 4 16 1 170 1 152 1 153 8 199 3 220 3 
0 3 354 1 328 8 316 1 144 1 215 4 89 2 147 1 332 4 287 2 252 2 168 1 84 1 14 1 73 2 197 2 16 1 348 1 153 4 76 1 
0 2 252 2 84 1 354 1 14 1 328 6 16 1 144 1 356 1 348 1 215 3 147 1 332 3 76 1 
0 2 328 4 316 1 89 1 215 2 332 2 287 1 252 1 196 1 73 1 14 1 197 1 152 1 348 1 153 2 199 1 220 1 
334 1 294 1 14 1 328 4 279 1 199 1 215 3 332 1 220 1 239 1 
334 1 294 1 14 1 328 4 279 1 199 1 215 3 332 1 325 1 220 1 
328 1 279 1 332 1 
294 1 328 1 215 1 
0 3 328 6 316 1 89 1 215 3 332 3 287 1 252 2 73 1 14 1 196 1 197 1 308 1 152 1 153 2 199 1 348 1 220 1 
0 2 294 1 316 1 89 1 252 1 73 1 348 2 74 1 328 12 29 1 260 1 78 1 279 1 215 6 332 6 287 1 238 1 239 1 361 1 14 2 196 2 197 1 153 2 199 2 220 2 
0 2 328 6 316 1 215 3 147 1 332 3 252 1 84 1 14 1 348 1 76 1 
0 2 354 1 316 1 328 3 215 1 147 1 89 1 332 2 287 1 252 1 168 1 84 1 169 1 73 1 197 1 16 1 153 2 
0 2 294 1 89 1 252 2 73 1 348 1 76 1 354 1 328 8 29 1 78 1 144 1 279 1 215 4 147 1 332 4 287 1 239 1 84 1 14 1 197 1 16 1 153 2 
294 1 29 1 328 4 78 1 279 1 215 3 89 2 332 1 287 2 239 1 334 1 14 1 73 2 197 2 152 1 199 1 153 4 220 1 
0 4 294 1 316 1 89 3 252 3 73 3 348 3 74 1 76 1 354 1 260 1 328 19 29 1 78 1 144 1 279 1 147 1 215 9 332 10 287 3 238 1 239 1 361 1 168 1 84 1 14 3 196 2 197 3 16 1 152 1 153 6 199 2 220 2 
0 5 294 1 316 2 89 3 252 3 73 3 348 2 74 1 76 1 354 1 328 17 29 1 260 1 78 1 144 1 279 1 147 1 215 10 332 7 287 3 238 1 239 1 361 1 168 1 84 1 14 3 196 1 197 3 16 1 152 1 153 6 199 2 220 2 
0 2 294 1 89 1 252 2 73 1 348 1 76 1 354 1 328 8 29 1 78 1 144 1 279 1 215 4 147 1 332 4 287 1 239 1 84 1 14 1 197 1 16 1 153 2 
0 2 294 1 316 1 89 1 252 1 73 1 348 2 74 1 328 12 29 1 260 1 78 1 279 1 215 6 332 6 287 1 238 1 239 1 361 1 14 2 196 2 197 1 153 2 199 2 220 2 
0 5 294 1 316 2 89 4 252 3 73 4 348 2 74 1 76 1 354 1 260 1 328 18 29 1 78 1 144 1 279 1 147 1 215 10 332 8 287 4 238 1 239 1 361 1 168 2 84 1 14 3 196 1 197 4 16 1 152 1 153 8 199 2 220 2 
0 6 294 1 316 3 89 4 252 3 73 4 348 2 74 1 260 1 328 16 29 1 78 1 279 1 280 1 215 9 332 7 287 4 238 1 239 1 361 1 168 2 14 3 196 2 197 4 153 8 199 3 220 3 
0 6 354 1 328 7 316 3 147 3 215 3 332 4 252 3 84 3 14 1 16 2 348 1 76 1 
0 4 294 1 316 1 89 4 252 3 73 4 348 2 74 1 76 1 354 1 260 1 328 18 29 1 78 1 144 1 279 1 280 1 147 1 215 10 332 8 287 4 238 1 239 1 361 1 168 2 84 1 14 3 196 1 197 4 16 1 153 8 199 2 220 2 
87 1 77 1 367 1 66 1 291 1 67 1 145 1 
87 1 77 1 66 1 67 1 145 1 107 1 367 1 298 1 263 1 291 1 131 1 341 1 
163 1 134 4 114 1 271 1 284 1 359 1 117 4 364 1 346 4 128 1 130 1 64 1 46 1 
134 2 4 1 284 1 117 2 253 1 346 2 51 1 128 1 257 1 256 1 244 1 99 1 130 1 64 2 
86 1 134 1 346 1 157 1 201 1 182 1 284 1 64 1 117 1 359 1 
159 1 364 1 19 1 134 2 346 2 128 1 130 1 284 1 64 1 185 1 117 2 
134 1 346 1 271 1 128 1 356 1 130 1 284 1 64 1 46 1 117 1 359 1 
87 1 134 1 67 1 145 2 284 1 158 1 359 1 117 1 346 1 128 1 51 1 291 2 227 1 130 1 6 1 370 1 64 1 143 1 
87 1 134 1 65 1 180 1 67 2 117 1 158 2 345 1 346 1 51 2 227 1 99 1 6 1 143 1 145 2 284 1 128 3 291 2 130 2 132 1 370 1 64 1 203 1 
87 1 134 2 65 1 114 1 180 1 67 2 117 2 158 2 345 1 346 2 51 2 99 1 6 1 143 1 145 2 284 1 128 3 291 2 130 2 132 1 370 1 371 1 64 1 203 1 
113 1 65 1 134 3 114 1 33 1 275 1 284 1 359 1 117 3 296 1 345 1 83 2 307 1 61 1 346 3 51 1 128 4 338 2 99 1 154 1 130 1 64 1 269 1 
113 1 65 1 134 3 302 1 114 1 275 1 284 1 359 1 117 3 296 1 345 1 83 2 307 1 61 1 346 3 51 1 128 4 338 2 99 1 154 1 130 1 64 1 
134 1 346 1 284 1 64 1 184 1 117 1 
19 1 134 7 138 1 284 2 184 1 251 1 185 1 359 2 117 6 364 1 241 1 253 1 346 7 51 1 128 3 257 1 324 1 130 2 340 1 202 1 64 3 
0 2 87 2 134 1 67 1 89 2 158 1 117 1 252 2 95 1 73 2 346 1 51 1 227 1 348 1 188 1 6 1 349 1 190 1 76 1 350 2 143 1 354 1 278 1 328 6 144 1 145 2 215 3 147 1 357 1 332 3 284 1 287 2 81 2 364 1 84 1 14 1 197 2 16 1 128 1 172 1 291 2 129 1 153 4 200 1 130 1 370 1 64 1 
113 1 134 1 314 1 275 1 248 1 90 1 117 1 119 1 296 1 346 1 297 2 98 1 162 2 327 1 302 1 165 2 32 1 286 1 194 1 359 1 82 1 83 3 307 2 61 1 128 2 109 2 338 3 154 1 
134 1 346 1 173 1 284 1 64 1 184 1 117 1 
87 1 134 1 67 1 145 2 284 1 158 1 359 1 117 1 346 1 128 1 51 1 291 2 130 1 6 1 370 1 64 1 371 1 143 1 
134 1 284 1 117 1 241 1 253 1 346 1 51 1 128 1 257 1 99 1 130 1 340 1 64 2 
163 1 134 5 271 1 138 1 284 2 359 1 117 4 185 1 364 1 346 5 128 3 99 1 324 1 130 2 64 2 46 1 
163 1 134 5 271 1 138 1 284 2 359 1 117 4 185 1 364 1 346 5 128 3 99 1 323 1 130 2 64 2 46 1 
91 1 226 1 218 1 337 1 291 1 67 1 145 1 53 1 268 1 
56 1 226 1 75 1 
91 1 226 1 87 1 149 1 268 1 
100 1 56 1 87 1 343 1 180 1 149 2 91 2 226 1 206 1 296 1 82 1 83 2 61 1 338 2 154 1 132 1 75 1 203 1 268 2 
246 1 12 1 50 1 88 1 52 1 136 1 222 1 331 1 
246 4 88 2 136 1 222 3 331 4 80 1 12 1 50 2 13 1 321 1 160 1 243 2 175 1 372 1 
246 2 88 1 136 1 222 1 331 2 288 1 71 1 12 1 50 1 94 1 52 1 243 1 
246 3 88 1 136 1 222 1 331 3 80 1 35 1 12 1 50 1 52 1 175 2 372 2 
22 1 222 1 7 1 
246 1 12 1 52 1 136 1 331 1 125 1 
246 2 12 1 50 1 355 1 88 1 52 1 243 1 136 1 222 1 331 2 
181 1 
50 1 88 1 356 1 222 1 
246 1 12 1 50 1 88 1 136 1 222 1 331 1 
101 1 331 1 285 1 
246 3 88 1 136 1 222 1 331 3 80 1 12 1 50 1 85 1 52 1 175 1 372 2 
246 2 12 1 50 1 96 1 88 1 243 1 136 1 222 1 331 2 
246 1 293 1 12 1 160 1 52 1 136 1 141 1 201 1 182 1 222 1 331 1 
246 1 12 1 50 1 52 1 136 1 222 1 331 1 
246 1 12 1 50 2 88 1 52 1 136 1 331 1 
246 2 102 1 136 2 222 1 331 2 12 2 50 1 52 1 277 1 45 1 
246 3 355 1 88 1 136 1 222 2 331 3 249 1 12 1 50 1 321 1 160 1 52 1 243 2 
86 1 246 2 293 1 47 1 88 1 136 1 222 1 182 2 49 1 331 2 12 1 50 1 52 1 243 1 201 1 
246 4 88 1 136 2 222 2 331 4 12 2 50 1 321 1 208 1 96 1 160 1 52 1 243 2 
246 1 12 1 50 1 88 1 52 1 136 1 222 1 331 1 
246 3 355 1 88 1 136 1 222 1 331 3 12 1 50 1 52 1 243 1 372 1 
13 1 321 1 160 1 222 1 
50 1 222 1 

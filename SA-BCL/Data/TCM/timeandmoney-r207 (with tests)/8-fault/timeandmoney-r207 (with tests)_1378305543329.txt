#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (9,65,196,276,312) (120,281) (120,281) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (29,39,83,333) (29,39,83,333) (113,132,170,330) 215 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (29,39,83,333) (29,39,83,333) (113,132,170,330) 215 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 280 224 188 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 280 224 188 180 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 280 224 188 (146,250) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 280 224 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 234 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 234 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 234 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 234 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 280 44 177 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 280 224 188 (146,250) (146,250) 179 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 280 224 188 180 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 280 318 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 280 318 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 280 318 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 280 318 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 280 318 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (29,39,83,333) (29,39,83,333) (113,132,170,330) (113,132,170,330) (113,132,170,330) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
145 1 193 1 289 5 83 6 39 9 157 1 9 1 88 2 160 4 296 1 298 2 299 2 165 2 16 2 58 3 96 1 314 1 97 1 319 1 183 1 182 9 29 2 101 1 75 1 330 1 142 1 333 2 237 1 
145 1 193 1 289 5 83 6 39 9 157 1 9 1 88 2 160 4 296 1 298 2 299 2 165 2 16 2 58 3 96 1 314 1 97 1 319 1 183 1 182 9 29 2 101 1 75 1 330 1 142 1 333 2 237 1 
145 1 193 1 289 6 83 7 39 10 157 1 9 1 88 2 160 5 296 1 298 2 299 2 165 2 16 2 58 4 96 1 314 1 97 1 319 1 183 1 182 10 29 2 101 1 75 1 330 1 142 1 333 2 237 1 
145 1 193 1 289 4 83 4 39 7 9 1 88 2 160 3 296 1 298 2 299 2 165 2 16 1 58 2 96 1 314 1 97 1 319 1 183 1 182 7 29 2 101 1 75 1 330 1 142 1 333 2 237 1 
16 2 83 3 289 3 58 1 39 4 96 1 97 1 157 1 182 4 160 2 88 1 296 1 29 1 299 1 165 1 75 1 330 1 333 1 
145 1 9 1 78 1 182 1 29 1 298 1 120 1 165 1 281 1 39 1 75 1 333 1 
289 2 83 1 39 3 58 1 96 1 314 1 182 3 160 1 296 1 29 2 298 1 75 1 333 2 
182 1 29 1 83 1 132 1 39 2 75 1 215 1 333 1 
182 1 29 1 83 1 132 1 39 2 75 1 215 1 333 1 
247 1 216 1 27 1 
151 1 24 2 216 1 
224 1 280 1 188 1 
180 1 224 1 280 1 188 1 
250 1 224 1 280 1 188 1 
242 1 226 1 311 1 153 1 176 1 23 1 292 1 27 1 64 1 114 1 257 1 186 1 328 1 216 1 
224 1 280 1 
48 1 70 1 226 1 292 1 304 1 
11 1 70 1 226 2 288 1 292 2 304 1 216 1 27 1 
70 1 226 1 292 1 
250 1 146 1 224 1 226 1 280 1 188 1 292 1 304 1 
216 1 
70 1 226 2 288 1 152 1 292 2 304 1 216 1 27 1 
125 1 240 1 195 2 226 5 267 1 110 1 288 1 292 5 27 1 273 1 229 2 254 1 12 2 70 2 163 1 327 1 304 2 216 1 285 1 
68 1 102 1 
68 1 102 1 
127 1 66 1 
127 1 66 1 
127 1 66 1 
68 1 2 1 102 1 
209 1 68 1 102 1 
253 1 127 1 66 1 225 1 68 2 102 2 
68 1 2 1 102 1 
68 1 2 1 102 1 
217 1 68 1 102 1 
217 1 68 1 102 1 
217 1 68 1 102 1 
62 1 147 1 93 1 54 1 68 1 130 1 102 1 226 1 280 1 5 1 292 1 
146 1 147 2 93 2 224 1 130 1 54 2 199 1 226 2 200 1 5 2 292 2 250 1 62 2 68 2 102 2 71 1 280 1 188 1 234 1 
88 1 299 1 165 1 
78 1 299 1 165 1 
78 1 88 2 165 3 51 1 248 1 26 1 
78 1 88 1 31 1 165 2 248 1 26 1 
78 1 88 1 165 2 248 1 26 2 
195 1 240 3 151 1 288 1 81 2 85 1 292 5 112 1 12 1 49 1 50 1 52 1 260 1 304 4 305 1 216 2 92 2 125 2 53 1 226 5 313 1 24 3 27 1 229 1 321 2 231 1 70 1 139 1 327 1 106 1 76 1 141 1 
195 2 240 8 79 1 151 3 288 1 85 3 7 1 292 9 204 1 249 1 12 2 48 5 50 3 52 3 260 2 304 7 305 2 216 5 92 6 125 6 17 1 226 9 59 1 313 3 24 9 27 1 273 1 229 2 321 6 320 5 70 6 139 4 327 1 106 1 76 3 
195 1 240 3 151 2 81 1 85 1 292 3 112 1 12 1 50 1 260 1 52 1 304 2 305 1 216 3 125 2 92 2 226 3 313 1 24 4 27 1 229 1 273 1 321 2 139 1 141 1 76 1 
195 1 240 5 151 3 81 2 85 2 7 1 292 4 112 1 12 1 50 2 260 1 52 2 305 1 304 3 216 4 92 4 125 4 17 1 226 4 313 2 24 7 59 1 27 1 229 1 273 1 321 4 139 2 141 1 76 2 
252 1 30 1 268 1 174 1 42 1 
230 1 252 1 
208 1 252 1 247 1 
252 1 184 1 
8 1 
252 1 42 1 
208 2 137 1 252 3 18 1 30 1 42 1 
287 2 34 1 309 1 198 1 85 1 86 1 272 1 316 1 45 3 99 3 275 4 10 7 159 1 279 1 50 1 329 1 235 2 
287 2 34 1 309 1 198 1 85 1 86 1 272 1 316 1 45 3 99 3 275 4 10 7 159 1 279 1 50 1 329 1 235 2 
287 2 219 1 34 1 309 1 198 1 85 1 86 1 272 1 316 1 45 3 99 3 275 4 10 7 159 1 279 1 50 1 329 1 235 2 
287 2 149 2 197 4 4 1 85 3 86 1 45 12 158 4 10 23 159 4 89 1 212 1 52 3 50 3 124 1 307 2 309 1 131 1 313 3 95 2 270 1 98 2 316 1 99 6 275 11 277 3 278 1 279 1 329 2 76 3 235 1 191 2 
287 3 149 2 34 1 197 4 198 1 85 1 45 4 10 9 159 1 256 1 50 1 307 2 309 1 94 1 95 2 98 2 272 1 316 1 99 4 275 5 279 1 329 1 235 2 191 1 
286 1 194 2 78 1 289 1 83 1 245 1 246 2 39 2 40 1 88 1 296 1 117 1 13 1 299 1 298 1 165 2 213 1 51 1 169 1 55 1 134 2 57 1 96 1 182 2 28 1 29 1 100 1 75 1 233 1 333 1 284 1 
194 1 78 1 35 1 289 1 3 1 83 2 245 1 246 1 39 3 40 1 88 1 296 1 117 1 13 1 299 1 298 1 165 2 51 1 169 1 55 1 134 1 57 1 96 1 28 1 182 3 29 1 100 1 189 1 333 1 284 1 
194 1 78 1 289 1 3 1 83 2 246 1 39 2 40 1 88 1 296 1 13 1 298 1 299 1 165 2 51 1 169 1 55 1 134 1 57 1 96 1 28 1 182 2 100 1 189 1 284 1 
126 1 263 1 194 1 35 1 55 2 82 1 134 1 246 1 39 1 203 1 42 1 40 2 252 1 323 1 182 1 47 1 28 2 100 1 29 1 13 1 298 2 144 1 333 1 
194 1 78 1 3 1 245 1 246 1 39 1 40 1 88 1 117 1 13 1 299 1 298 1 165 2 213 1 51 1 169 1 55 1 134 1 57 1 28 1 182 1 29 1 100 1 75 1 333 1 284 1 
205 1 
238 1 240 2 242 1 151 2 153 1 246 2 155 2 87 1 252 1 12 1 13 1 257 1 164 1 15 2 264 2 266 1 176 1 23 1 24 2 27 1 178 1 100 1 186 1 32 4 105 1 33 1 192 1 194 2 195 1 288 3 202 1 291 2 42 1 292 5 207 2 114 1 47 2 306 2 305 1 216 2 126 1 125 2 218 1 128 2 226 5 311 1 134 2 229 1 64 1 323 1 70 6 327 1 140 1 328 1 236 1 
242 1 152 1 288 1 153 1 292 3 207 1 114 1 257 1 266 1 226 3 311 1 23 1 176 1 64 1 178 1 70 2 186 1 32 2 140 1 105 1 328 1 33 1 
242 1 152 1 288 1 153 1 292 3 291 1 114 1 257 1 216 1 266 1 226 3 311 1 23 1 176 1 27 1 64 1 178 1 70 1 186 1 32 3 140 1 105 1 328 1 33 1 
242 1 288 1 152 1 153 1 292 3 291 1 155 1 207 1 114 1 257 1 216 1 266 1 226 3 311 1 23 1 176 1 27 1 64 1 178 1 70 2 186 1 32 3 140 1 105 1 328 1 33 1 
146 1 240 1 242 1 151 2 152 1 153 1 155 4 250 1 12 1 257 1 15 2 264 2 266 1 176 1 23 1 27 1 178 1 32 4 186 1 187 1 280 1 104 1 188 1 105 1 33 1 195 1 288 3 111 1 292 5 291 2 43 1 207 4 114 1 306 2 216 1 125 1 218 1 128 2 224 1 226 5 311 1 229 1 64 1 70 7 140 1 327 1 328 1 236 1 332 1 
146 1 240 1 242 1 151 2 153 1 155 2 250 1 87 1 12 1 257 1 15 2 264 2 266 1 23 1 176 1 24 2 27 1 178 1 32 4 186 1 280 1 188 1 105 1 33 1 195 1 288 2 292 4 291 2 207 2 114 1 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 4 327 1 140 1 328 1 236 1 
146 1 240 1 242 1 151 2 153 1 155 2 250 1 12 1 257 1 15 2 264 2 266 1 176 1 23 1 27 1 178 1 32 4 186 1 280 1 104 1 188 1 105 1 33 1 195 1 111 1 288 2 292 4 291 2 207 2 114 1 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 4 327 1 140 1 328 1 236 1 332 1 
146 1 240 1 242 1 151 2 153 1 155 2 250 1 12 1 257 1 15 2 264 2 266 1 176 1 23 1 27 1 178 1 32 4 186 1 280 1 104 1 188 1 105 1 33 1 195 1 111 1 288 2 292 4 291 2 207 2 114 1 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 4 327 1 140 1 328 1 236 1 332 1 
146 1 240 1 1 2 242 1 153 1 155 2 250 1 12 1 257 1 266 1 176 1 23 1 24 2 27 1 178 1 32 4 186 1 280 1 188 1 105 1 33 1 195 1 288 2 292 4 291 2 207 2 114 1 295 1 211 2 121 1 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 4 327 1 140 1 74 1 328 1 332 1 
146 1 240 1 242 1 151 2 153 1 155 3 250 1 12 1 257 1 15 2 264 2 266 1 176 1 23 1 27 1 178 1 187 1 32 5 186 1 280 1 104 1 188 1 105 1 33 1 195 1 111 1 288 2 291 3 292 4 207 3 114 1 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 5 140 1 327 1 328 1 236 1 332 1 
146 1 240 1 242 1 151 2 153 1 155 3 250 1 12 1 257 1 15 2 264 2 266 1 176 1 23 1 27 1 178 1 187 1 32 5 186 1 280 1 104 1 188 1 105 1 33 1 195 1 111 1 288 2 291 3 292 4 207 3 114 1 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 5 140 1 327 1 328 1 236 1 332 1 
146 1 240 1 1 2 242 1 153 1 155 2 250 1 87 1 12 1 257 1 266 1 23 1 176 1 24 2 27 1 178 1 32 4 186 1 280 1 188 1 105 1 33 1 195 1 288 2 292 4 291 2 207 2 114 1 295 1 211 2 306 2 216 1 125 1 218 1 128 2 224 1 226 4 311 1 229 1 64 1 70 4 327 1 140 1 328 1 
287 4 149 4 197 8 36 1 37 1 85 7 156 2 45 21 158 5 10 46 251 1 159 6 300 1 256 1 212 2 166 1 52 7 50 5 122 2 302 1 168 1 222 1 307 4 223 1 95 4 313 5 315 1 270 3 60 1 98 4 99 10 63 4 275 25 277 5 232 1 76 7 191 2 77 1 
287 2 149 4 197 8 36 1 37 1 85 4 156 1 45 17 158 3 10 33 251 1 159 3 300 1 256 1 212 1 166 1 52 4 50 4 302 1 168 1 222 1 307 4 223 1 95 4 313 4 270 2 60 1 98 4 99 5 63 4 275 16 277 2 232 1 76 4 191 2 77 1 
287 8 34 1 149 3 198 1 197 6 36 1 37 1 85 8 156 1 45 27 158 4 10 54 251 1 159 6 300 1 256 1 212 2 166 1 52 7 50 8 122 2 302 1 168 1 222 1 307 3 309 1 223 1 95 3 313 7 270 2 272 1 60 1 98 3 99 14 63 4 275 27 277 4 279 1 76 7 235 1 191 2 77 1 
287 3 149 4 197 8 36 1 37 1 85 4 156 1 45 16 158 3 10 31 251 1 159 3 300 1 256 1 212 1 166 1 52 4 50 4 302 1 168 1 222 1 307 4 95 4 313 4 270 2 60 1 98 4 99 6 63 3 275 15 277 2 232 1 76 4 191 2 283 1 77 1 
287 4 149 3 197 6 36 1 37 2 85 7 156 2 45 22 10 46 158 4 251 1 159 4 300 1 256 1 212 2 166 1 52 7 50 6 122 2 302 1 168 1 222 1 307 3 223 1 95 3 313 6 270 2 60 1 98 3 99 8 63 4 275 24 277 4 76 7 191 2 77 1 
2 1 118 1 
217 1 253 1 123 1 
62 1 147 1 93 1 225 1 68 1 102 1 14 1 161 1 5 1 282 1 
220 1 209 1 
0 1 62 1 147 1 93 1 210 1 68 1 102 1 162 1 5 1 
146 1 147 1 93 1 224 1 130 1 54 2 199 1 226 1 200 1 5 1 292 1 250 1 62 1 68 1 102 1 71 1 280 1 188 1 234 1 
146 1 147 1 93 1 224 1 130 1 54 2 199 1 226 1 200 1 5 1 292 1 250 1 62 1 68 1 102 1 71 1 280 1 188 1 234 1 
146 1 147 1 93 1 224 1 130 1 54 2 199 1 226 1 200 1 5 1 292 1 250 1 62 1 68 1 102 1 71 1 280 1 188 1 234 1 
253 1 2 1 118 1 
253 1 2 1 118 1 
217 1 123 1 
217 1 253 1 123 1 
148 1 243 1 
220 1 147 1 148 1 93 1 54 1 226 1 243 1 200 1 5 1 292 1 44 1 177 1 62 1 209 1 231 1 68 1 49 1 102 1 139 1 71 1 280 1 304 1 
194 2 149 1 197 2 153 2 246 2 201 1 42 1 41 1 45 1 294 1 10 2 252 1 114 2 116 1 13 1 255 1 214 1 307 1 311 2 133 1 134 2 175 1 22 1 95 1 98 1 317 1 61 1 322 1 275 1 100 1 233 2 
194 2 286 1 78 1 169 1 55 1 3 1 245 1 134 2 246 2 290 1 57 1 181 1 88 1 100 1 13 1 299 1 165 2 103 1 51 1 
194 1 78 1 169 1 55 1 3 1 245 1 134 1 246 1 57 1 88 1 100 1 13 1 299 1 165 2 326 1 103 1 51 1 
263 1 126 1 194 1 55 1 134 1 246 1 290 1 42 1 293 1 252 1 47 1 323 1 100 1 13 1 
194 1 78 1 169 1 55 1 3 1 245 1 134 1 246 1 290 1 57 1 181 1 88 1 100 1 13 1 299 1 165 2 103 1 51 1 
324 1 
125 1 240 1 254 1 163 1 247 1 216 1 27 1 
240 1 195 1 151 1 288 1 292 1 12 1 15 1 216 2 125 1 264 1 226 1 24 1 27 1 229 1 70 1 327 1 236 1 
238 1 240 9 151 6 244 1 246 3 85 2 252 10 254 1 12 4 13 4 163 1 261 2 91 2 167 1 92 6 18 1 172 2 20 1 21 2 24 12 27 2 184 3 100 3 30 3 185 2 286 1 194 3 195 4 108 2 288 3 42 3 292 5 208 2 47 1 115 2 301 1 52 2 50 2 305 2 216 8 125 8 129 2 226 5 56 2 134 3 313 2 136 1 229 4 230 2 321 6 70 5 327 4 328 2 76 2 
238 1 240 13 195 2 151 5 288 1 85 4 292 1 158 2 115 1 12 2 300 1 212 1 166 1 52 4 50 4 261 3 122 1 305 1 216 7 92 8 125 8 222 1 226 1 173 1 24 10 313 4 270 1 60 1 27 2 229 2 321 8 67 1 277 2 70 1 327 2 76 4 77 1 
125 1 146 1 240 2 195 1 309 1 224 1 226 1 111 1 85 1 292 1 272 1 250 1 229 1 179 1 12 1 279 1 280 1 327 1 188 1 50 1 261 2 
125 1 195 1 240 1 27 1 229 1 254 1 12 1 163 1 327 1 216 1 
125 5 92 5 240 5 172 1 151 5 85 2 24 10 313 2 321 5 115 1 52 2 76 2 50 2 261 2 216 5 
226 1 70 1 288 1 292 1 216 1 27 1 
238 2 194 4 195 2 240 2 288 2 246 4 6 1 202 1 42 1 292 3 252 1 12 2 47 2 13 1 164 1 305 2 167 2 125 2 126 1 19 1 226 3 134 4 136 1 273 1 229 2 323 1 100 1 70 4 327 1 
180 1 224 1 280 1 188 1 
92 2 125 2 238 1 195 1 240 1 151 2 24 4 27 2 229 1 321 2 12 1 327 1 235 1 305 1 216 4 
62 1 93 1 259 1 
62 1 93 1 14 1 243 1 154 1 
62 1 93 1 259 1 
62 1 93 1 259 1 
62 1 221 1 93 1 
62 1 221 1 93 1 
62 1 221 1 93 1 
62 1 93 1 
68 1 102 1 
287 5 34 1 149 2 198 1 197 4 85 5 45 10 10 24 158 1 159 4 300 1 256 1 166 1 52 2 50 4 307 2 222 1 309 2 95 2 313 1 270 1 272 2 98 2 60 1 99 9 179 1 275 14 277 1 279 2 76 2 235 1 191 1 77 1 
287 2 34 1 149 2 198 1 197 4 150 1 85 2 45 5 10 11 158 2 159 1 300 1 256 1 212 1 50 1 52 1 307 2 309 1 95 2 270 1 272 1 98 2 99 3 275 6 277 1 279 1 76 1 235 1 
287 4 34 1 149 3 198 1 150 1 197 6 85 5 45 15 10 29 158 2 159 2 300 1 256 1 212 1 166 1 52 4 50 5 122 1 222 1 307 3 309 1 95 3 313 4 270 1 272 1 98 3 60 1 99 6 275 14 277 2 279 1 76 4 235 1 191 1 77 1 
287 4 34 1 149 3 198 1 150 1 197 6 85 5 45 12 10 27 158 2 159 3 300 1 256 1 212 1 166 1 52 4 50 4 122 1 222 1 307 3 309 1 95 3 313 3 270 1 272 1 98 3 60 1 99 7 275 15 277 2 279 1 76 4 235 1 191 1 77 1 
287 5 34 1 149 2 198 1 197 4 85 5 45 10 10 24 158 1 159 4 300 1 256 1 166 1 52 2 50 4 307 2 222 1 309 2 95 2 313 1 270 1 272 2 98 2 60 1 99 9 179 1 275 14 277 1 279 2 76 2 235 1 191 1 77 1 
287 2 149 1 197 2 85 4 45 11 10 22 158 2 159 2 300 1 256 1 212 1 166 1 52 4 50 4 122 1 222 1 307 1 95 1 313 4 270 1 98 1 60 1 99 4 275 11 277 2 76 4 77 1 
287 4 34 1 149 4 198 1 150 1 197 8 85 5 45 13 10 28 158 2 159 3 300 1 256 1 212 1 166 1 52 4 50 4 122 1 222 1 307 4 309 1 95 4 313 3 270 1 272 1 60 1 98 4 99 7 275 15 277 2 279 1 76 4 235 1 191 2 77 1 
287 1 149 2 197 4 85 1 45 4 10 7 158 2 300 1 256 1 212 1 52 1 50 1 307 2 95 2 313 1 270 1 98 2 99 1 275 3 277 1 232 1 76 1 
287 3 34 2 309 3 198 1 85 1 272 1 45 4 99 6 10 7 275 3 159 3 279 3 50 1 
287 1 149 2 197 4 85 1 45 4 10 7 158 2 300 1 256 1 212 1 52 1 50 1 307 2 95 2 313 1 270 1 98 2 99 1 275 3 277 1 232 1 76 1 
287 2 307 2 149 2 34 1 309 1 197 4 198 1 85 1 95 2 272 1 98 2 45 4 99 3 10 8 275 4 159 1 279 1 50 1 235 1 191 1 
287 2 34 1 309 1 198 1 85 1 247 1 272 1 45 3 99 2 275 3 10 6 279 1 50 1 235 1 
287 1 307 1 149 1 150 1 197 2 85 1 313 1 95 1 98 1 45 2 99 2 275 2 10 4 159 1 50 1 52 1 76 1 
287 1 85 2 313 2 270 1 99 2 45 6 158 2 10 12 275 6 159 1 277 2 212 1 52 2 76 2 50 2 122 1 
287 5 34 1 149 2 198 1 197 4 85 3 45 12 10 23 158 2 159 4 89 1 212 1 52 2 50 3 122 1 307 2 309 2 313 2 95 2 272 1 271 1 98 2 99 9 275 11 277 2 279 2 76 2 235 1 191 2 
45 1 10 1 158 1 
10 1 275 1 277 1 
287 2 307 1 149 1 197 2 150 1 172 1 85 1 95 1 313 1 98 1 45 3 99 3 10 6 275 3 159 1 52 1 76 1 50 1 
287 2 149 1 197 2 85 4 45 11 10 22 158 2 159 2 300 1 256 1 212 1 166 1 52 4 50 4 122 1 222 1 307 1 95 1 313 4 270 1 98 1 60 1 99 4 275 11 277 2 76 4 77 1 
287 1 309 1 85 1 272 1 45 3 99 2 275 3 10 6 159 1 279 1 50 1 
287 1 307 1 34 1 149 1 309 1 197 2 198 1 95 1 98 1 99 2 45 2 275 1 10 3 159 1 89 1 279 1 191 1 
287 3 307 1 149 1 309 2 197 2 85 2 95 1 98 1 272 1 99 5 45 5 179 1 275 5 10 10 159 2 256 1 279 2 50 2 
307 1 149 1 197 2 85 1 95 1 98 1 99 1 275 2 10 2 159 1 256 1 76 1 
287 1 307 1 149 1 197 2 85 1 313 1 95 1 98 1 45 2 99 2 275 2 10 4 159 1 256 1 50 1 52 1 76 1 
287 1 307 3 149 3 309 1 197 6 95 3 98 3 45 2 99 2 10 3 275 1 159 1 89 1 256 1 279 1 232 1 191 1 
287 3 149 4 34 1 150 1 197 8 198 1 4 1 85 2 45 8 158 1 10 15 159 3 89 1 256 1 50 2 307 4 309 2 95 4 270 1 272 1 98 4 99 6 179 1 275 7 277 1 279 2 232 1 191 1 
114 1 311 1 72 1 153 1 23 1 107 1 303 1 
109 1 311 1 153 1 38 1 84 1 135 1 23 1 227 1 114 1 72 1 107 1 303 1 
280 1 318 1 
194 1 18 1 134 1 246 1 42 1 206 1 252 1 100 1 30 1 13 2 119 1 73 1 167 1 
126 1 194 1 252 1 323 1 47 1 100 1 13 1 246 1 134 1 42 1 247 1 
280 1 318 1 
280 1 318 1 
280 1 318 1 
194 3 310 1 226 2 56 1 134 3 246 3 42 1 292 2 27 1 228 1 230 1 208 1 252 4 47 1 184 1 100 1 30 1 13 1 70 1 325 1 328 1 216 1 167 1 
194 3 129 1 226 2 56 1 134 3 246 3 42 1 292 2 27 1 230 1 208 1 252 4 47 1 184 1 100 1 30 1 13 1 70 1 325 1 328 1 216 1 167 1 
194 1 100 1 13 1 246 1 134 1 269 1 
286 1 194 6 241 1 18 1 3 1 133 1 269 1 134 7 246 7 42 2 206 1 252 3 46 1 47 2 100 2 30 1 13 3 119 1 258 1 73 1 233 1 
280 1 318 1 
194 1 240 1 195 2 108 1 288 1 246 1 292 3 208 1 252 2 254 1 47 1 12 2 163 1 91 1 304 1 216 1 125 1 129 1 226 3 134 1 136 1 27 1 229 2 184 1 70 2 185 1 327 2 328 1 
286 1 194 2 18 1 20 1 269 1 134 2 246 2 42 1 208 1 252 2 100 1 30 1 13 2 
126 1 194 4 286 1 80 1 134 4 246 4 42 1 252 1 47 1 323 1 100 1 13 1 325 1 
194 2 134 2 246 2 42 1 206 1 252 1 100 1 297 1 30 1 13 2 119 1 90 1 331 1 167 1 
194 1 78 1 47 1 100 1 13 1 299 1 165 1 57 1 246 1 134 1 
286 1 194 2 3 1 133 1 134 2 246 2 42 1 61 1 252 1 100 1 13 1 
126 1 194 4 286 1 241 1 80 1 133 1 134 5 246 5 42 2 252 3 323 1 47 1 46 1 100 2 13 2 167 1 
126 1 194 4 286 1 80 1 133 1 134 5 246 5 42 2 274 1 252 3 323 1 47 1 46 1 100 2 13 2 167 1 
296 1 289 1 96 1 247 1 
182 1 296 1 29 1 289 1 39 1 96 1 333 1 
28 1 182 1 298 1 
196 1 289 1 312 1 39 3 96 1 9 2 65 1 182 3 29 1 296 1 75 1 333 1 
16 1 182 2 296 1 29 1 289 1 83 1 39 2 96 1 333 1 
88 1 160 1 182 1 29 1 299 1 165 1 289 1 39 1 75 1 330 1 333 1 
182 1 29 1 289 1 39 1 75 1 96 1 333 1 
182 1 296 1 29 1 39 1 75 1 96 2 333 1 
308 1 289 1 39 2 96 1 25 1 182 2 29 2 75 1 143 1 333 2 
83 2 289 2 39 3 58 1 96 1 319 1 182 3 160 1 296 1 29 1 75 1 333 1 237 1 
78 1 289 1 83 1 39 2 96 1 182 2 88 1 296 1 29 1 299 1 165 2 75 1 51 1 333 1 262 1 
16 1 83 2 289 2 39 4 58 1 96 1 157 1 182 4 160 1 296 1 29 2 75 1 333 2 
182 1 296 1 29 1 289 1 39 1 75 1 96 1 333 1 
196 1 171 1 83 2 289 3 312 1 39 4 58 1 96 2 9 1 182 4 160 1 296 2 29 1 333 1 
170 1 182 1 29 1 83 1 132 1 39 2 75 1 113 1 333 1 
196 1 289 1 312 2 39 3 96 1 9 2 182 3 276 1 29 1 296 1 75 1 333 1 
239 2 138 1 69 1 289 2 
182 1 29 1 39 1 75 1 190 1 333 1 
319 1 182 2 296 1 29 1 289 1 83 1 39 2 75 1 96 1 333 1 
265 1 
182 1 296 1 29 1 289 1 39 1 75 1 96 1 333 1 
83 1 289 1 39 3 96 1 9 1 319 1 182 3 29 1 296 1 75 1 333 1 
160 1 171 1 289 1 58 1 
289 1 96 1 

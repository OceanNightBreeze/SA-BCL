#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) (43,155) (43,155) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) (43,155) (43,155) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) (43,155) (43,155) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) (43,155) (43,155) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) 89 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (78,257) 89 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 272 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (112,125) 258 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (112,125) 258 236 65 (112,125) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (243,284) (243,284) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 203 108 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 195 6 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 52 106 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 207 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 207 220 141 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 207 220 141 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 207 220 48 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 52 106 312 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 52 106 312 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 207 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 272 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (112,125) 258 119 12 230 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 98 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (112,125) 258 236 82 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (112,125) 258 290 273 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (112,125) 258 236 65 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (112,125) 258 290 82 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (112,125) 258 290 273 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (112,125) 258 236 65 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (112,125) 258 290 82 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (112,125) 258 290 82 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (112,125) 258 290 82 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (112,125) 258 290 82 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (112,125) 258 290 82 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (243,284) (243,284) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (243,284) (243,284) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (243,284) (243,284) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 36 275 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 272 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 165 (99,329) 271 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 219 97 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (170,299) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (4,127) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (179,332) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (112,125) 258 260 (58,81) (58,81) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 134 1 257 1 294 1 8 1 175 1 155 1 43 1 79 1 78 1 265 1 269 2 144 2 57 1 314 1 336 1 
2 1 134 1 257 1 294 1 8 1 175 1 155 1 43 1 79 1 78 1 265 1 269 2 144 2 57 1 314 1 336 1 
2 1 134 1 257 1 294 1 8 1 175 1 155 1 43 1 79 1 78 1 265 1 269 2 144 2 57 1 314 1 336 1 
2 1 134 1 257 1 294 1 8 1 175 1 155 1 43 1 79 1 78 1 265 1 269 2 144 2 57 1 314 1 336 1 
0 2 184 1 294 1 8 1 175 1 278 1 77 1 79 1 244 3 269 4 287 1 56 2 247 3 144 4 288 1 59 1 314 1 336 1 
134 1 294 1 8 1 70 1 175 1 77 1 79 1 198 1 265 1 309 1 269 2 247 1 144 2 57 1 288 1 336 1 
257 1 294 1 8 1 269 1 144 1 336 1 
244 1 257 1 294 1 152 1 8 1 269 2 144 2 89 1 336 1 
244 1 257 1 294 1 152 1 8 1 269 2 144 2 89 1 336 1 
272 1 
263 1 158 1 115 1 128 1 200 1 9 1 85 1 143 1 276 1 131 1 109 1 251 1 
263 1 328 1 158 1 128 2 200 1 37 1 9 2 85 1 143 1 30 1 131 1 109 1 251 1 
148 1 128 1 9 1 
148 1 128 1 9 1 
128 1 9 1 
148 1 128 1 9 1 
148 1 128 1 9 1 
148 1 226 1 92 1 128 2 9 2 181 1 26 1 
40 1 272 1 
66 1 37 1 40 1 263 2 328 1 330 1 158 2 105 1 85 2 30 1 109 1 
112 1 258 1 
166 1 169 1 232 2 40 1 72 1 239 1 302 1 263 1 76 1 102 1 159 1 22 1 179 1 163 1 85 1 27 1 228 2 87 1 31 2 
166 1 112 1 232 1 37 1 239 1 302 1 223 1 263 2 102 1 158 1 159 1 22 1 331 1 179 1 163 1 85 2 27 1 228 1 30 1 31 1 
328 1 263 3 158 3 37 3 85 3 40 1 30 3 223 1 
263 1 158 1 196 1 37 1 85 1 30 1 109 1 
37 1 328 1 263 1 158 1 330 1 105 1 85 1 30 1 109 1 
37 2 9 1 223 1 263 2 328 1 158 2 128 1 331 1 23 1 105 1 200 1 85 2 25 1 143 1 30 2 131 1 109 1 251 1 
263 2 158 2 115 1 37 1 85 2 40 1 30 1 96 1 223 1 
37 1 9 1 223 1 263 1 327 1 158 1 128 1 331 1 23 1 200 1 85 1 143 1 30 1 131 1 109 1 251 1 
263 2 328 1 112 1 158 2 105 1 37 2 85 2 30 2 182 1 223 1 
166 1 232 1 40 1 302 1 239 1 263 1 102 1 159 1 22 1 163 1 179 1 85 1 228 1 27 1 31 1 
166 1 232 1 186 1 40 1 302 1 239 1 263 1 102 1 159 1 22 1 127 1 85 1 228 1 27 1 31 1 
65 1 112 1 316 1 258 1 236 1 7 1 277 2 18 2 125 1 266 1 227 1 49 1 24 1 54 2 130 1 335 1 
263 1 158 1 37 1 85 1 30 1 75 1 109 1 251 1 
115 1 37 4 11 1 40 1 96 1 223 2 263 5 328 1 158 5 331 1 105 1 85 5 30 4 62 1 
263 2 158 2 196 1 37 2 85 2 30 2 75 1 109 1 
311 1 333 1 
311 1 333 1 
3 1 132 1 
3 1 132 1 
3 1 132 1 
126 1 311 1 333 1 
305 1 311 1 333 1 
3 1 225 1 311 2 333 2 16 1 132 1 
126 1 311 1 333 1 
126 1 311 1 333 1 
100 1 311 1 333 1 
100 1 311 1 333 1 
100 1 311 1 333 1 
91 1 34 1 292 2 9 2 295 2 188 2 243 1 123 2 128 2 284 1 50 1 201 2 333 2 311 2 
292 1 36 1 37 1 9 1 295 1 188 1 263 1 158 1 123 1 128 1 50 1 85 1 201 1 333 1 311 1 30 1 
79 1 175 1 314 1 
79 1 70 1 175 1 
187 1 70 1 175 3 249 1 324 1 314 2 
187 1 70 1 175 2 249 1 238 1 314 1 
187 1 70 1 175 2 249 2 314 1 
148 1 128 1 217 1 9 1 
64 1 148 2 128 2 9 2 296 1 183 1 
280 1 148 1 245 1 226 1 234 1 92 1 128 2 9 2 181 1 26 1 203 1 218 1 
234 1 92 1 9 1 280 1 245 1 226 1 128 1 26 1 181 1 203 1 108 1 218 1 
291 1 159 1 272 1 
159 1 177 1 
310 1 
102 1 159 1 
291 2 166 1 102 1 159 3 55 1 315 1 
166 1 102 1 159 1 
274 1 159 1 
5 1 317 3 233 2 173 4 7 1 260 2 320 1 191 1 18 7 81 1 161 1 21 1 178 1 54 3 58 1 60 1 204 1 
5 1 317 3 233 2 173 4 7 1 260 2 320 1 191 1 18 7 81 1 161 1 21 1 178 1 54 3 58 1 60 1 204 1 
5 1 317 3 233 2 173 4 7 1 260 2 320 1 191 1 18 7 81 1 161 1 21 1 212 1 178 1 54 3 58 1 60 1 204 1 
219 1 5 1 7 4 260 3 119 4 222 1 190 3 191 4 18 31 122 1 81 1 21 2 82 3 161 5 197 1 162 1 227 1 24 1 130 1 204 2 317 10 233 5 173 16 236 3 320 1 277 2 210 1 178 2 49 1 54 15 58 1 60 2 290 3 146 1 
317 4 233 3 173 5 7 1 260 2 320 1 222 1 277 4 191 1 18 9 81 1 140 1 21 1 161 1 227 2 178 1 49 2 24 2 54 4 130 2 58 1 60 1 204 1 334 1 
255 1 256 1 294 1 150 1 8 1 70 1 297 1 298 1 303 1 302 1 77 1 194 1 79 1 228 1 269 2 27 1 31 1 314 1 133 1 33 1 232 1 175 2 324 1 244 1 247 1 144 2 57 1 288 1 336 1 63 1 
255 1 294 1 150 1 185 1 8 1 70 1 297 1 298 1 303 1 302 1 77 1 194 1 79 1 160 1 228 1 269 3 27 1 31 1 314 1 33 1 232 1 175 2 95 1 324 1 244 2 247 1 144 3 57 1 288 1 63 1 
255 1 185 1 70 1 298 1 303 1 302 1 77 1 194 1 79 1 160 1 228 1 269 2 27 1 31 1 314 1 33 1 232 1 175 2 324 1 244 2 247 1 57 1 144 2 288 1 63 1 
255 2 149 1 294 1 8 1 298 2 302 1 193 1 194 2 20 1 159 1 22 1 228 1 269 1 27 1 31 1 232 1 38 1 95 1 325 1 102 1 144 1 57 2 250 1 
133 1 33 1 232 1 255 1 150 1 294 1 185 1 8 1 70 1 175 2 297 1 298 1 324 1 302 1 303 1 194 1 79 1 27 1 269 1 228 1 57 1 144 1 31 1 314 1 63 1 336 1 
281 1 
280 1 195 1 232 1 22 1 226 1 6 1 92 1 128 1 9 1 228 1 181 1 29 1 31 1 218 1 
115 1 9 2 276 1 139 1 121 1 263 1 158 1 128 2 200 1 84 1 85 1 52 1 143 1 270 1 131 1 202 1 109 1 251 1 
115 1 9 2 39 1 276 1 139 1 121 1 263 1 158 1 128 2 200 1 84 1 85 1 143 1 270 1 202 1 131 1 109 1 251 1 
115 1 9 2 276 1 139 1 121 1 263 1 158 1 128 2 200 1 84 1 85 1 52 1 106 1 143 1 270 1 202 1 131 1 109 1 251 1 
128 1 9 1 
115 1 69 1 9 2 121 1 263 1 158 1 226 1 128 2 200 1 84 1 85 1 270 1 29 1 202 1 131 1 206 1 92 1 174 1 207 1 276 1 139 1 280 1 47 1 246 1 181 1 143 1 251 1 109 1 
220 1 115 1 69 1 9 2 157 1 263 1 121 1 158 1 226 1 128 2 200 1 85 1 84 1 270 1 29 1 131 1 202 1 206 1 92 1 174 1 207 1 276 1 280 1 139 1 141 1 47 1 246 1 181 1 143 1 251 1 109 1 
220 1 115 1 69 1 9 2 157 1 263 1 121 1 158 1 226 1 128 2 200 1 85 1 84 1 270 1 29 1 131 1 202 1 206 1 92 1 174 1 207 1 276 1 280 1 139 1 141 1 47 1 246 1 181 1 143 1 251 1 109 1 
220 1 253 1 115 1 69 1 9 2 263 1 121 1 158 1 226 1 128 2 200 1 85 1 84 1 267 1 270 1 29 1 88 1 131 1 202 1 206 1 92 1 207 1 276 1 280 1 139 1 47 1 48 1 181 1 143 1 251 1 109 1 
115 1 9 2 276 1 139 1 121 1 263 1 158 1 128 2 200 1 84 1 85 1 52 1 106 1 143 1 270 1 202 1 131 1 312 1 109 1 251 1 
115 1 9 2 276 1 139 1 121 1 263 1 158 1 128 2 200 1 84 1 85 1 52 1 106 1 143 1 270 1 202 1 131 1 312 1 109 1 251 1 
253 1 115 1 69 1 9 2 121 1 263 1 158 1 226 1 128 2 200 1 84 1 85 1 270 1 29 1 88 1 202 1 131 1 206 1 92 1 207 1 276 1 280 1 139 1 47 1 181 1 143 1 251 1 109 1 
112 1 7 1 258 1 260 1 191 1 18 6 81 1 21 1 227 1 266 1 24 1 130 1 272 1 316 1 233 2 317 2 173 3 320 1 40 2 277 2 49 1 54 3 58 1 60 1 335 1 
112 1 316 1 258 1 12 1 277 2 119 1 18 1 266 1 227 1 49 1 24 1 130 1 54 1 248 1 230 1 
147 1 10 1 302 1 223 1 18 2 263 2 76 1 158 1 159 1 22 1 227 1 266 1 163 1 24 1 85 2 27 1 228 1 130 1 30 1 31 1 166 1 232 1 316 1 173 1 37 1 40 1 277 2 239 1 102 1 331 1 179 1 49 1 54 1 248 1 145 1 182 1 61 1 252 1 
18 1 223 1 263 1 158 1 22 1 227 1 266 1 24 1 85 1 228 1 130 1 30 1 31 1 316 1 232 1 37 1 277 2 98 1 331 1 49 1 54 1 248 1 145 1 
110 1 149 1 256 1 185 1 72 2 13 1 262 1 223 1 302 2 192 1 18 2 263 1 158 1 304 1 159 3 20 1 22 2 227 2 266 2 24 2 85 1 27 2 228 8 130 2 30 1 31 7 232 8 316 2 173 1 37 1 321 1 277 4 240 1 102 2 49 2 54 1 145 1 335 1 252 1 
112 1 258 1 7 1 191 1 18 3 263 1 158 1 82 1 227 1 266 1 306 1 24 1 85 1 130 1 30 1 316 1 173 1 37 1 236 1 277 2 328 1 105 1 49 1 54 2 248 1 290 1 
112 1 316 1 173 2 258 1 277 2 191 1 18 2 266 1 227 1 49 1 24 1 130 1 273 1 290 1 335 1 
65 1 112 1 316 1 258 1 236 1 7 1 277 2 18 2 266 1 227 1 49 1 24 1 130 1 54 2 335 1 
112 1 316 1 173 2 258 1 277 2 191 1 18 2 82 1 266 1 227 1 49 1 24 1 130 1 290 1 335 1 
112 1 316 1 173 2 258 1 277 2 191 1 18 2 192 1 266 1 227 1 49 1 24 1 130 1 273 1 290 1 
65 1 112 1 316 1 258 1 236 1 7 1 277 2 18 2 192 1 266 1 227 1 49 1 24 1 130 1 54 2 
112 1 316 1 173 2 258 1 277 2 191 1 18 2 192 1 82 1 266 1 227 1 49 1 24 1 130 1 290 1 
112 1 316 1 173 2 258 1 277 2 191 1 18 2 82 1 266 1 227 1 49 1 24 1 130 1 290 1 
151 1 18 2 302 1 263 1 159 1 22 1 266 1 227 1 163 1 24 1 85 1 27 1 228 1 130 1 31 1 166 1 232 1 316 1 173 1 40 1 277 2 239 1 102 1 179 1 49 1 54 1 145 1 252 1 
186 1 18 2 302 1 263 1 159 1 127 1 22 1 266 1 227 1 24 1 85 1 27 1 228 1 130 1 31 1 166 1 232 1 316 1 173 1 40 1 277 2 239 1 44 1 102 1 49 1 54 1 145 1 252 1 
112 1 316 1 173 2 258 1 277 2 191 1 18 2 82 1 266 1 227 1 49 1 24 1 130 1 248 1 290 1 
112 1 256 1 258 1 151 1 191 1 18 2 302 1 263 1 159 1 82 1 266 1 227 1 163 1 24 1 85 1 27 1 228 1 130 1 31 1 166 1 232 1 316 1 173 2 277 2 239 1 102 1 213 1 179 1 49 1 290 1 
112 1 316 1 173 2 258 1 37 1 73 1 277 2 191 1 18 2 263 1 328 1 158 1 82 1 266 1 227 1 105 1 49 1 24 1 85 1 130 1 30 1 248 1 290 1 
219 3 221 4 113 1 7 5 260 1 153 1 261 1 222 1 119 4 190 3 14 1 191 5 18 41 122 1 81 1 21 1 82 4 161 4 227 3 83 1 24 3 268 1 130 3 167 2 135 1 233 4 317 8 173 20 94 1 93 1 236 4 320 1 277 6 42 1 97 1 140 1 216 1 285 1 49 3 54 21 58 1 60 1 290 4 
219 3 221 4 113 1 7 4 260 1 153 1 261 1 222 2 119 4 190 3 14 1 191 5 18 38 122 1 81 1 21 1 82 4 161 3 227 4 83 1 24 4 268 1 130 4 167 2 135 1 233 4 317 7 173 20 94 1 93 1 236 3 320 1 277 8 42 1 97 1 140 1 216 1 285 1 49 4 54 18 58 1 60 1 290 4 
219 2 221 4 113 1 7 8 260 1 153 1 261 1 222 1 119 4 190 4 191 8 18 52 122 2 81 1 21 1 82 7 161 7 227 2 83 1 24 2 268 1 130 2 167 1 135 1 233 7 317 14 173 27 94 1 93 1 236 7 320 1 277 4 97 1 101 2 140 1 216 1 285 1 49 2 54 25 58 1 60 1 290 7 
219 1 221 2 7 3 119 2 190 1 191 3 17 1 18 19 122 1 82 3 161 3 227 2 83 2 24 2 130 2 167 1 233 3 317 6 173 9 94 1 93 1 236 3 277 4 42 1 140 1 216 1 285 1 49 2 54 10 290 3 
219 2 221 4 113 1 7 2 153 1 261 1 222 2 119 2 190 2 191 3 18 26 161 2 82 3 227 3 83 1 24 3 268 1 130 3 167 2 135 1 317 4 233 2 173 14 94 1 93 1 236 2 277 6 97 1 140 1 216 1 285 2 49 3 54 12 290 3 
46 1 103 1 292 1 259 1 201 1 295 1 311 1 333 1 188 1 16 1 
305 1 74 1 
231 1 292 1 319 1 201 1 295 1 71 1 311 1 333 1 188 1 
91 1 34 1 292 1 9 1 295 1 188 1 243 1 123 2 128 1 284 1 50 1 201 1 333 1 311 1 
91 1 34 1 292 1 9 1 295 1 188 1 243 1 123 2 128 1 284 1 50 1 201 1 333 1 311 1 
91 1 34 1 292 1 9 1 295 1 188 1 243 1 123 2 128 1 284 1 50 1 201 1 333 1 311 1 
126 1 225 1 318 1 
126 1 225 1 318 1 
100 1 293 1 
100 1 225 1 293 1 
1 1 90 1 
148 1 123 1 34 1 91 1 275 1 128 1 292 1 36 1 9 1 201 1 295 1 311 1 333 1 188 1 
126 1 318 1 
100 1 225 1 293 1 
72 2 13 1 262 1 302 1 18 2 263 2 80 1 158 2 159 1 227 1 266 1 24 1 85 2 27 1 228 2 130 1 31 2 32 1 232 2 316 1 35 1 173 1 137 1 277 2 279 1 102 1 49 1 54 1 248 1 145 1 252 1 
232 2 256 1 68 1 185 1 70 1 175 2 41 1 297 1 298 1 324 1 302 1 303 1 79 1 51 1 27 1 228 2 31 2 314 1 63 1 
232 1 185 1 70 1 175 2 237 1 41 1 297 1 298 1 324 1 303 1 302 1 79 1 228 1 27 1 31 1 314 1 63 1 
232 1 149 1 68 1 298 1 302 1 102 1 159 1 20 1 22 1 27 1 228 1 129 1 31 1 250 1 
232 1 68 1 185 1 70 1 175 2 41 1 297 1 298 1 324 1 302 1 303 1 79 1 51 1 228 1 27 1 31 1 314 1 63 1 
208 1 
206 1 170 1 299 1 272 1 
280 1 206 1 226 1 92 1 246 1 174 1 181 1 29 1 
166 1 232 1 92 1 99 1 302 2 280 1 102 1 177 1 159 2 226 1 22 1 27 1 181 1 228 1 29 1 28 1 31 1 271 1 165 1 315 1 218 1 
280 1 219 1 206 1 226 1 92 1 181 1 29 1 119 1 190 1 97 1 
206 2 92 1 7 1 9 1 154 1 320 1 189 1 191 2 157 1 280 1 211 2 226 1 21 1 128 1 181 1 29 1 60 1 
206 1 226 1 92 1 181 1 29 1 299 1 
280 1 206 1 82 1 7 1 236 1 191 1 290 1 
232 1 22 1 228 1 31 1 
241 1 280 1 206 1 226 1 92 1 181 1 29 1 218 1 
180 1 201 1 295 1 
1 1 254 1 103 1 201 1 295 1 
180 1 201 1 295 1 
180 1 201 1 295 1 
19 1 201 1 295 1 
19 1 201 1 295 1 
19 1 201 1 295 1 
201 1 295 1 
311 1 333 1 
219 1 113 1 7 1 153 1 261 1 222 1 119 1 190 1 191 2 18 11 161 1 82 2 227 2 24 2 268 1 130 2 233 1 317 2 173 7 236 1 277 4 97 1 140 1 49 2 54 4 290 2 
219 1 113 1 7 1 153 1 261 1 222 1 119 2 190 1 191 3 18 14 122 1 82 3 161 2 227 3 24 3 268 1 130 3 233 1 317 3 173 9 236 1 277 6 97 1 140 1 49 3 54 5 53 1 290 3 
219 1 113 1 7 3 260 1 153 1 261 1 119 1 222 1 190 1 191 3 18 19 81 1 21 1 161 1 82 2 227 3 24 3 268 1 130 3 233 3 317 4 173 9 236 2 320 1 277 6 97 1 140 1 49 3 53 1 54 10 58 1 60 1 290 2 
219 1 113 1 7 2 260 1 153 1 261 1 222 1 119 1 190 1 191 3 18 17 81 1 21 1 161 2 82 2 227 3 24 3 268 1 130 3 233 3 317 5 173 10 236 1 320 1 277 6 97 1 140 1 49 3 53 1 54 7 58 1 60 1 290 2 
219 1 113 1 7 1 153 1 261 1 222 1 119 1 190 1 191 2 18 11 161 1 82 2 227 2 24 2 268 1 130 2 233 1 317 2 173 7 236 1 277 4 97 1 140 1 49 2 54 4 290 2 
219 1 113 1 7 2 153 1 261 1 119 1 190 1 191 2 18 12 161 1 82 2 227 1 24 1 268 1 130 1 233 1 317 2 173 6 236 2 277 2 97 1 140 1 49 1 54 6 290 2 
219 1 113 1 7 2 260 1 153 1 261 1 119 1 222 2 190 1 191 3 18 18 81 1 21 1 161 2 82 2 227 4 24 4 268 1 130 4 233 3 317 5 173 10 236 1 320 1 277 8 97 1 140 1 49 4 54 8 53 1 58 1 60 1 290 2 
219 1 113 1 7 2 153 1 261 1 119 1 222 2 190 1 191 3 18 16 161 3 82 3 227 4 24 4 268 1 130 4 233 3 317 6 173 9 236 2 277 8 97 1 42 1 140 1 49 4 54 7 290 3 
233 3 317 6 173 3 7 1 320 1 191 1 18 7 81 1 21 3 161 3 54 4 58 2 60 3 
219 1 113 1 7 2 260 1 153 1 261 1 119 1 222 2 190 1 191 3 18 18 81 1 21 1 161 1 82 2 227 4 24 4 268 1 130 4 233 3 317 4 173 10 236 1 320 1 277 8 97 1 42 1 140 1 49 4 54 8 58 1 60 1 290 2 
317 3 233 2 173 4 7 1 260 1 320 1 277 4 222 1 191 1 18 8 81 1 161 1 21 1 227 2 49 2 24 2 54 4 130 2 58 1 60 1 
233 2 317 2 173 3 7 1 260 1 320 1 191 1 18 6 81 1 21 1 54 3 58 1 60 1 272 1 
233 1 317 2 173 2 7 1 236 1 277 2 191 1 18 4 82 1 161 1 227 1 49 1 24 1 54 2 53 1 130 1 290 1 
219 1 233 1 317 2 173 3 7 1 236 1 119 2 190 1 191 1 18 7 122 1 82 1 161 1 54 4 290 1 
7 3 260 1 12 1 119 2 222 2 190 2 191 3 18 23 122 1 224 1 81 1 21 2 161 4 82 2 227 2 24 2 130 2 317 9 233 5 173 11 236 2 320 1 277 4 101 1 49 2 54 12 58 1 60 2 290 2 
54 1 119 1 18 1 
173 1 190 1 18 1 
317 3 233 2 173 3 236 1 7 1 277 2 191 1 18 6 82 1 161 1 227 1 214 1 24 1 49 1 130 1 53 1 54 3 290 1 
219 1 113 1 7 2 153 1 261 1 119 1 190 1 191 2 18 12 161 1 82 2 227 1 24 1 268 1 130 1 233 1 317 2 173 6 236 2 277 2 97 1 140 1 49 1 54 6 290 2 
233 1 317 2 173 3 7 1 320 1 191 1 18 6 21 1 161 1 54 3 60 1 
317 2 233 1 173 1 222 1 277 2 18 3 224 1 81 1 161 1 21 1 227 1 49 1 24 1 54 2 130 1 58 1 60 1 
233 3 317 5 173 5 7 2 154 1 320 1 277 2 191 2 18 10 140 1 21 2 161 2 227 1 24 1 49 1 130 1 54 5 60 2 
317 1 173 2 277 2 191 1 18 2 140 1 161 1 227 1 49 1 24 1 130 1 290 1 
233 1 317 2 173 2 7 1 236 1 277 2 191 1 18 4 140 1 82 1 161 1 227 1 49 1 24 1 54 2 130 1 290 1 
233 1 317 2 173 1 222 1 277 6 42 1 18 3 224 1 140 1 21 1 161 1 227 3 49 3 24 3 54 2 130 3 60 1 
219 1 7 5 260 1 222 2 119 4 190 3 191 5 18 34 224 1 122 1 81 1 21 3 197 1 82 3 161 5 162 1 227 5 24 5 130 5 317 12 233 7 173 16 236 3 320 2 277 10 42 1 140 1 49 5 54 18 53 1 58 1 60 3 290 3 146 1 
263 1 158 1 115 1 136 1 85 1 40 1 96 1 
168 1 136 1 115 1 118 1 40 1 96 1 300 1 263 1 158 1 104 1 85 1 86 1 
102 1 159 1 149 1 20 1 232 1 22 1 27 1 228 1 31 1 272 1 302 1 
166 1 232 1 37 1 40 1 239 1 302 1 223 1 263 2 102 1 158 1 159 1 22 1 179 1 85 2 228 1 27 1 30 1 31 1 
274 1 166 2 232 1 37 1 40 1 301 1 239 1 302 1 223 1 263 2 102 2 158 2 159 3 215 1 179 1 85 2 228 1 27 1 143 1 30 2 31 1 109 1 251 1 
274 1 166 2 232 2 37 1 40 1 301 1 239 1 302 1 223 1 263 2 102 2 158 2 159 3 127 1 215 1 85 2 228 2 27 1 143 1 30 2 31 2 313 1 109 1 251 1 
4 1 159 1 177 1 232 1 128 1 9 1 228 1 31 1 301 1 
159 1 177 1 232 1 128 1 332 1 9 1 228 1 31 1 301 1 
110 1 232 1 27 1 228 1 31 1 302 1 
110 1 166 1 232 7 256 1 67 1 185 1 321 1 72 1 323 1 262 1 240 1 302 3 102 2 304 1 264 1 159 3 22 2 228 7 27 2 31 6 315 1 
112 1 256 1 258 1 7 1 151 1 260 1 191 1 18 6 302 1 223 1 263 2 81 1 158 1 159 1 21 1 227 2 266 2 24 2 163 1 85 2 27 1 228 1 130 2 30 1 31 1 166 1 32 1 316 2 232 1 317 2 233 2 173 3 37 1 320 1 40 2 277 4 239 1 329 1 102 1 213 1 49 2 179 1 54 3 58 1 248 1 60 1 
148 1 128 1 9 1 
291 1 110 1 166 1 232 2 256 1 302 2 102 1 159 2 228 2 27 1 28 1 31 2 315 1 
205 1 102 1 159 1 149 1 20 1 232 4 256 1 22 1 27 1 228 4 31 4 313 1 302 1 
166 1 232 2 67 1 323 1 301 1 302 2 242 1 176 1 102 1 159 1 142 1 228 2 27 1 31 2 
79 1 232 1 22 1 70 1 27 1 228 1 175 1 31 1 302 1 303 1 
232 2 256 1 35 1 185 1 262 1 302 1 102 1 159 1 228 2 27 1 31 2 
205 1 149 1 232 5 256 1 262 1 301 1 302 2 240 1 102 2 20 1 304 1 159 3 22 1 228 5 27 2 31 4 
205 1 149 1 232 5 256 1 262 1 301 1 302 2 240 1 102 2 20 1 159 3 22 1 228 5 164 1 27 2 31 4 
166 1 232 1 37 1 40 1 239 1 302 1 223 1 263 2 102 1 158 1 159 1 22 1 127 1 85 2 228 1 27 1 30 1 31 1 
166 1 232 1 67 1 323 1 301 1 302 2 102 1 264 1 159 1 228 1 27 1 31 1 315 1 
124 1 308 1 40 1 289 1 156 1 
148 1 9 2 40 1 156 2 326 1 124 2 283 1 128 2 23 1 199 1 200 1 308 1 143 1 131 1 289 2 109 1 251 1 
263 1 279 1 158 1 80 1 308 1 137 1 85 1 289 1 156 1 
283 1 199 1 308 1 
77 1 247 1 288 1 272 1 
77 1 294 1 8 1 269 1 247 1 144 1 288 1 
255 1 269 1 57 1 
120 1 77 1 134 2 294 1 8 1 138 1 269 3 247 1 322 1 144 3 288 1 336 1 
77 1 244 1 294 1 8 1 269 2 247 1 56 1 144 2 288 1 
0 1 184 1 294 1 8 1 175 1 79 1 269 1 247 1 144 1 314 1 336 1 
77 1 294 1 8 1 269 1 247 1 144 1 336 1 
77 2 294 1 8 1 269 1 144 1 288 1 336 1 
172 1 294 2 8 2 209 1 77 1 307 1 269 2 247 1 144 2 336 1 
0 1 171 1 294 1 8 1 116 1 278 1 77 1 244 2 269 3 247 2 144 3 288 1 336 1 
294 1 235 1 8 1 70 1 175 2 324 1 77 1 79 1 244 1 269 2 247 1 144 2 288 1 314 1 336 1 
0 1 294 2 8 2 278 1 77 1 244 2 269 4 56 1 247 2 144 4 288 1 59 1 336 1 
77 1 294 1 8 1 269 1 247 1 144 1 288 1 336 1 
0 1 111 1 134 1 294 1 8 1 138 1 322 1 278 1 77 2 244 2 269 4 247 3 144 4 288 2 
77 1 244 1 45 1 294 1 152 1 8 1 269 2 247 1 144 2 288 1 15 1 336 1 
134 2 294 1 8 1 138 2 322 1 77 1 286 1 269 3 247 1 144 3 288 1 336 1 
114 1 282 1 117 2 247 2 
294 1 8 1 269 1 229 1 144 1 336 1 
77 1 244 1 294 1 116 1 8 1 269 2 247 1 144 2 288 1 336 1 
107 1 
77 1 294 1 8 1 269 1 247 1 144 1 288 1 336 1 
134 1 294 1 8 1 116 1 77 1 244 1 269 3 247 1 144 3 288 1 336 1 
0 1 111 1 247 1 278 1 
77 1 247 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (14,251) (14,251) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (14,251) (14,251) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (14,251) (14,251) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (14,251) (14,251) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 131 79 106 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 131 79 106 154 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 131 79 106 (10,43) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 131 79 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 131 79 106 (10,43) (10,43) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 131 207 280 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 131 79 106 (10,43) (10,43) 149 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 131 79 106 154 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 131 225 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 131 225 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 131 225 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 131 79 106 (10,43) (10,43) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 131 225 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 131 79 106 (10,43) (10,43) 149 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 131 225 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 1 309 1 215 1 14 1 281 1 160 1 185 1 51 1 179 1 188 1 251 1 
236 1 309 1 215 1 14 1 281 1 160 1 185 1 51 1 179 1 188 1 251 1 
236 1 309 1 215 1 14 1 281 1 160 1 185 1 51 1 179 1 188 1 251 1 
236 1 309 1 215 1 14 1 281 1 160 1 185 1 51 1 179 1 188 1 251 1 
147 1 60 1 148 3 269 1 41 3 196 1 3 2 179 4 30 1 8 2 236 4 215 1 12 1 16 1 17 1 51 1 217 1 188 1 
60 1 148 1 270 1 269 1 179 2 7 1 236 2 215 1 12 1 321 1 51 1 185 1 160 1 17 1 188 1 222 1 
60 1 148 2 41 1 196 1 3 1 179 3 236 3 215 2 12 1 116 1 51 1 160 1 188 2 
147 1 60 1 148 5 269 1 41 7 196 3 3 4 30 1 179 9 70 1 8 2 236 9 215 2 12 1 116 1 16 1 17 1 51 1 120 1 160 1 217 1 188 2 325 1 145 1 
147 1 60 1 148 5 269 1 41 7 196 3 3 4 30 1 179 9 70 1 8 2 236 9 215 2 12 1 116 1 16 1 17 1 51 1 120 1 160 1 217 1 188 2 325 1 145 1 
182 1 230 1 282 1 
283 1 
131 1 106 1 79 1 
131 1 106 1 79 1 154 1 
131 1 43 1 106 1 79 1 
308 1 189 1 230 1 100 1 229 1 28 1 298 1 274 1 11 1 319 1 282 1 90 1 323 1 187 1 
131 1 79 1 
189 1 228 1 71 1 13 1 298 1 
189 2 81 1 228 1 13 1 230 1 282 1 298 2 143 1 
189 1 228 1 298 1 
10 1 189 1 13 1 131 1 43 1 106 1 79 1 298 1 
230 1 
189 2 228 1 13 1 230 1 282 1 139 1 298 2 143 1 
202 2 189 5 63 2 228 2 230 1 65 1 101 1 248 1 5 1 295 2 108 1 298 5 209 1 9 1 13 2 282 1 143 1 93 1 167 1 
264 1 255 1 
264 1 255 1 
183 1 216 1 
183 1 216 1 
183 1 216 1 
264 1 23 1 255 1 
264 1 23 1 255 1 
264 1 255 1 86 1 
264 2 190 1 255 2 183 1 216 1 105 1 
264 1 23 1 255 1 
264 1 255 1 166 1 
264 1 255 1 166 1 
264 1 255 1 166 1 
40 1 264 1 189 1 255 1 172 1 305 1 131 1 174 1 180 1 298 1 261 1 
262 1 40 2 264 2 189 2 288 1 190 1 230 1 172 2 206 1 44 1 45 1 174 1 180 2 87 2 298 2 255 2 305 2 91 1 261 3 
269 1 17 1 217 1 
269 1 17 1 7 1 
269 3 258 1 129 1 217 2 324 1 7 1 
269 2 258 1 217 1 324 1 7 1 128 1 
269 2 258 2 217 1 324 1 7 1 
202 1 295 1 297 1 298 5 209 3 9 1 257 2 13 4 142 2 55 1 143 1 93 2 189 5 63 1 228 1 230 2 104 1 110 1 277 1 237 1 279 1 117 1 239 1 282 1 322 1 283 3 34 2 122 1 123 1 77 1 127 1 244 1 
202 2 293 1 84 5 295 2 297 3 298 9 209 8 9 1 253 1 257 6 13 7 142 6 56 1 55 1 143 1 93 6 189 9 63 2 228 6 65 1 230 5 277 3 317 1 279 2 71 5 117 3 322 4 282 1 283 9 123 3 77 3 198 1 127 3 201 1 244 2 
202 1 295 1 297 1 298 3 209 3 13 2 257 2 142 2 93 2 189 3 63 1 230 3 65 1 277 1 237 1 279 1 239 1 117 1 282 1 322 1 34 1 283 4 123 1 77 1 127 2 244 1 
202 1 295 1 297 2 298 4 209 5 257 4 13 3 142 4 56 1 93 4 189 4 63 1 230 4 65 1 277 2 237 1 317 1 279 1 239 1 117 2 282 1 322 2 283 7 34 2 123 2 77 2 127 3 201 1 244 1 
234 1 182 1 150 1 27 1 294 1 
150 1 165 1 
22 1 
150 1 306 1 315 1 
150 1 92 1 
150 1 315 1 
150 3 306 1 259 1 27 2 315 1 38 1 
168 2 97 2 268 7 310 1 152 3 297 1 277 1 113 3 158 1 48 4 318 1 115 1 50 1 186 1 141 1 221 1 54 1 
168 2 97 2 268 7 310 1 152 3 297 1 277 1 113 3 158 1 48 4 318 1 115 1 50 1 186 1 141 1 221 1 54 1 
168 2 97 2 268 7 310 1 152 3 297 1 277 1 113 3 158 1 48 4 318 1 115 1 50 1 186 1 218 1 141 1 221 1 54 1 
168 3 290 1 0 1 175 4 296 3 297 4 252 1 211 1 48 16 135 2 137 1 136 1 50 5 186 1 54 1 221 2 141 2 146 1 263 1 97 5 268 31 310 1 64 1 152 10 277 4 155 1 158 2 113 15 318 2 115 1 159 1 117 3 77 3 123 3 
168 2 263 1 97 3 268 9 310 1 0 2 290 2 64 2 152 4 297 1 277 1 112 1 158 1 113 4 48 5 211 2 135 4 318 1 115 1 50 1 186 1 141 1 221 1 199 1 
41 1 129 1 177 1 178 1 46 1 4 1 249 1 179 2 7 1 215 1 12 1 17 1 51 1 217 1 188 1 94 1 60 1 148 1 24 1 269 2 67 2 68 2 197 1 107 1 233 1 236 2 31 1 73 1 160 1 124 1 162 2 
41 2 129 1 177 1 178 1 46 1 4 1 179 3 7 1 210 1 215 1 214 1 12 1 17 1 217 1 188 1 94 1 60 1 148 1 24 1 269 2 67 1 68 1 107 1 233 1 236 3 31 1 160 1 124 1 162 1 125 1 
94 1 60 1 148 1 269 2 41 2 129 1 68 1 67 1 177 1 4 1 46 1 107 1 179 2 7 1 233 1 210 1 236 2 31 1 12 1 17 1 160 1 217 1 124 1 125 1 162 1 
94 2 98 1 150 1 312 1 68 1 67 1 177 2 4 1 315 1 179 1 29 1 236 1 31 1 214 1 215 1 303 1 160 2 220 1 124 2 188 1 224 1 162 1 327 1 
129 1 177 1 178 1 46 1 4 1 179 1 7 1 215 1 17 1 51 1 217 1 188 1 94 1 24 1 269 2 67 1 68 1 107 1 233 1 236 1 31 1 73 1 160 1 124 1 162 1 125 1 
83 1 
202 1 2 1 4 3 295 1 298 2 209 1 9 1 302 1 306 1 53 1 220 1 143 1 93 1 189 2 265 1 63 1 150 2 228 2 312 1 67 2 68 2 29 2 315 2 31 2 279 1 33 1 119 1 240 1 162 2 
82 1 298 3 11 1 90 1 187 1 139 1 143 1 308 1 19 1 189 3 228 2 100 1 229 1 66 2 28 1 153 1 274 1 156 1 319 1 323 1 241 1 326 1 
82 1 298 3 11 1 90 1 187 1 139 1 143 1 308 1 19 1 189 3 228 1 229 1 100 1 230 1 66 3 28 1 274 1 111 1 156 1 319 1 282 1 323 1 241 1 326 1 
82 1 298 3 11 1 90 1 187 1 139 1 143 1 308 1 19 1 189 3 228 2 229 1 100 1 230 1 66 3 28 1 153 1 232 1 274 1 111 1 156 1 319 1 282 1 323 1 241 1 326 1 
82 1 9 1 11 1 256 1 254 1 90 1 15 2 187 1 93 1 189 5 19 1 96 1 191 1 25 2 100 1 193 1 28 1 274 1 111 4 282 5 127 2 202 1 132 2 295 1 298 5 209 1 139 1 143 3 308 1 63 1 311 2 228 7 229 1 230 5 66 6 153 4 232 4 156 1 319 1 72 1 323 1 78 1 241 1 326 1 
202 1 82 1 132 2 295 1 298 4 209 1 9 1 88 1 11 1 256 1 15 2 90 1 187 1 143 2 93 1 308 1 96 1 19 1 189 4 311 2 63 1 228 4 25 2 230 1 100 1 229 1 66 4 153 2 28 1 232 2 274 1 111 2 156 1 319 1 282 1 283 2 323 1 241 1 127 2 326 1 
202 1 82 1 132 2 295 1 298 4 209 1 9 1 11 1 254 1 256 1 15 2 90 1 187 1 143 2 93 1 308 1 96 1 19 1 189 4 311 2 191 1 63 1 228 4 25 2 230 1 229 1 100 1 66 4 153 2 28 1 232 2 274 1 111 2 156 1 319 1 282 1 323 1 78 1 241 1 127 2 326 1 
202 1 82 1 132 2 295 1 298 4 209 1 9 1 11 1 254 1 256 1 15 2 90 1 187 1 143 2 93 1 308 1 96 1 19 1 189 4 311 2 191 1 63 1 228 4 25 2 230 1 229 1 100 1 66 4 153 2 28 1 232 2 274 1 111 2 156 1 319 1 282 1 323 1 78 1 241 1 127 2 326 1 
202 1 82 1 132 2 133 2 295 1 298 4 209 1 9 1 11 1 254 1 90 1 187 1 143 2 93 1 308 1 96 1 226 1 19 1 189 4 311 2 63 1 228 4 230 1 229 1 100 1 66 4 153 2 28 1 232 2 274 1 111 2 156 1 114 1 319 1 282 1 283 2 323 1 241 1 242 1 126 2 326 1 
202 1 82 1 132 2 295 1 298 4 209 1 9 1 11 1 254 1 256 1 15 2 90 1 187 1 143 2 93 1 308 1 96 1 19 1 189 4 311 2 63 1 191 1 25 2 228 5 230 1 229 1 100 1 66 5 28 1 153 3 232 3 274 1 111 3 156 1 319 1 72 1 282 1 323 1 78 1 241 1 127 2 326 1 
202 1 82 1 132 2 295 1 298 4 209 1 9 1 11 1 254 1 256 1 15 2 90 1 187 1 143 2 93 1 308 1 96 1 19 1 189 4 311 2 63 1 191 1 25 2 228 5 230 1 229 1 100 1 66 5 28 1 153 3 232 3 274 1 111 3 156 1 319 1 72 1 282 1 323 1 78 1 241 1 127 2 326 1 
202 1 82 1 132 1 295 1 298 2 209 1 9 1 88 1 11 1 90 1 187 1 93 1 308 1 96 1 19 1 189 2 226 1 311 1 63 1 100 1 229 1 66 2 28 1 274 1 156 1 319 1 283 1 323 1 241 1 126 1 326 1 
168 1 287 1 246 1 291 1 290 3 0 3 1 1 171 1 175 4 250 2 296 3 297 5 252 3 211 3 48 20 212 1 135 6 304 1 50 4 186 1 144 1 263 1 21 1 97 4 268 41 310 1 64 3 195 1 152 8 69 1 275 1 277 5 112 1 158 1 113 21 318 1 115 1 159 1 117 4 161 1 36 4 77 4 123 4 
168 1 287 1 246 1 291 1 290 4 0 4 1 1 171 1 175 4 250 2 296 3 297 4 252 3 211 4 48 20 212 1 135 8 304 1 50 3 186 1 144 1 263 2 21 1 97 4 268 38 310 1 64 4 195 1 152 7 69 1 275 1 277 5 112 1 158 1 113 18 318 1 115 1 159 1 117 4 161 1 36 4 77 4 123 3 
168 1 287 1 246 1 291 1 290 2 0 2 1 1 171 1 173 2 175 4 250 1 296 4 297 8 252 2 211 2 48 27 212 1 135 4 304 1 50 7 186 1 144 1 263 1 21 1 97 7 268 52 310 1 64 2 152 14 69 1 275 1 277 8 112 1 158 1 113 25 318 1 115 1 159 2 117 7 36 4 77 7 123 7 
246 1 290 2 0 2 175 2 250 1 296 1 297 3 252 1 211 2 48 9 212 1 135 4 50 3 21 2 97 3 268 19 64 2 152 6 69 1 275 1 277 3 112 1 113 10 32 1 159 1 117 3 161 1 36 2 77 3 123 3 
287 1 246 2 290 3 0 3 291 1 1 1 171 1 175 2 250 2 297 2 296 2 252 2 211 3 48 14 212 1 135 6 304 1 50 2 144 1 263 2 21 1 97 2 268 26 64 3 152 4 69 1 275 1 277 3 112 1 113 12 117 3 36 4 77 3 123 2 
40 1 264 1 190 1 255 1 172 1 305 1 206 1 45 1 37 1 180 1 
292 1 86 1 
40 1 20 1 264 1 255 1 172 1 74 1 305 1 18 1 180 1 
23 1 52 1 
138 1 105 1 166 1 
262 1 40 1 189 1 264 1 288 1 190 1 230 1 172 1 206 1 45 1 174 1 180 1 87 1 298 1 255 1 305 1 91 1 261 2 
262 1 40 1 189 1 264 1 288 1 190 1 230 1 172 1 206 1 45 1 174 1 180 1 87 1 298 1 255 1 305 1 91 1 261 2 
262 1 40 1 189 1 264 1 288 1 190 1 230 1 172 1 206 1 45 1 174 1 180 1 87 1 298 1 255 1 305 1 91 1 261 2 
23 1 52 1 105 1 
23 1 52 1 105 1 
138 1 166 1 
138 1 105 1 166 1 
176 1 285 1 
40 1 264 1 189 1 288 1 292 1 172 1 131 1 176 1 86 1 207 1 180 1 87 1 298 1 110 1 280 1 255 1 13 1 322 1 305 1 122 1 285 1 261 1 
0 1 204 1 290 1 205 1 4 1 249 2 211 1 48 1 135 2 59 1 95 1 266 1 62 1 268 2 150 1 100 2 64 1 67 2 68 2 28 2 315 1 276 1 31 1 113 1 238 1 121 1 76 1 323 2 284 1 162 2 245 1 
94 1 61 1 269 2 129 1 68 2 67 2 178 1 197 1 4 1 107 1 7 1 233 1 299 1 31 1 89 1 17 1 217 1 125 1 162 2 
94 1 269 2 129 1 102 1 68 1 67 1 178 1 4 1 107 1 7 1 233 1 31 1 89 1 17 1 217 1 125 1 162 1 
94 1 150 1 312 1 68 1 67 1 4 1 315 1 29 1 208 1 299 1 31 1 220 1 162 1 327 1 
94 1 61 1 269 2 129 1 68 1 67 1 178 1 4 1 107 1 7 1 233 1 299 1 31 1 89 1 17 1 217 1 125 1 162 1 
134 1 
182 1 230 1 282 1 5 1 108 1 209 1 93 1 
202 1 295 1 298 1 209 1 9 1 256 1 15 1 143 1 93 1 189 1 63 1 25 1 228 1 230 1 282 1 283 1 127 1 
202 2 169 1 170 1 4 2 295 2 297 1 298 2 209 4 9 2 257 3 306 1 142 3 57 1 143 1 93 3 307 1 308 1 189 2 63 2 228 2 150 3 230 3 67 1 68 1 29 1 315 1 277 1 278 1 31 1 279 1 117 1 283 6 75 1 123 1 77 1 200 1 127 3 162 1 243 1 38 1 165 2 
202 1 287 1 291 1 1 1 171 1 175 1 295 1 296 1 297 2 209 6 9 1 252 1 257 5 142 5 93 4 144 1 63 1 277 2 117 2 283 3 77 2 123 2 
202 1 189 1 149 1 191 1 63 1 131 1 43 1 151 2 106 1 295 1 297 1 298 1 209 2 277 1 10 1 9 1 158 1 318 1 186 1 79 1 93 1 
202 1 63 1 230 1 295 1 5 1 108 1 209 1 9 1 282 1 93 1 
230 2 297 1 209 2 277 1 257 2 117 1 283 4 77 1 123 1 142 2 127 2 93 2 
189 1 228 1 230 1 282 1 298 1 143 1 
202 1 2 1 4 3 295 1 298 1 209 1 9 1 302 1 306 1 53 1 220 1 143 1 93 1 189 1 265 1 63 1 227 1 150 2 228 2 312 1 67 2 68 2 315 2 29 2 31 2 279 1 33 1 119 1 240 1 162 2 
131 1 106 1 79 1 154 1 
202 1 63 1 230 1 295 1 209 1 9 1 279 1 257 1 282 1 283 1 53 1 93 1 
305 1 180 1 181 1 
305 1 180 1 181 1 
305 1 45 1 176 1 6 1 180 1 
305 1 180 1 181 1 
305 1 314 1 180 1 
305 1 314 1 180 1 
305 1 314 1 180 1 
305 1 180 1 
264 1 255 1 
168 1 290 1 0 1 171 1 175 1 297 1 296 1 252 1 211 1 48 4 135 2 186 1 97 2 268 8 310 1 64 1 152 2 277 1 112 1 113 4 158 1 318 1 115 1 
168 1 290 2 0 2 171 1 175 2 297 1 296 1 252 1 211 2 48 6 135 4 49 1 50 1 186 1 97 2 268 11 310 1 64 2 152 3 277 2 112 1 158 1 113 5 318 1 115 1 159 1 117 1 77 1 
168 1 287 1 290 3 0 3 291 1 1 1 171 1 175 1 296 1 297 3 252 1 211 3 48 9 49 1 135 6 50 1 186 1 144 1 263 1 97 3 268 19 310 1 64 3 152 4 277 3 112 1 158 1 113 10 318 1 115 1 117 2 77 2 123 2 
168 1 287 1 290 3 0 3 291 1 1 1 171 1 175 1 296 1 297 2 252 1 211 3 48 10 49 1 135 6 50 2 186 1 144 1 263 1 97 3 268 17 310 1 64 3 152 5 277 3 112 1 158 1 113 7 318 1 115 1 117 2 77 2 123 1 
168 1 290 1 0 1 171 1 175 1 297 1 296 1 252 1 211 1 48 4 135 2 186 1 97 2 268 8 310 1 64 1 152 2 277 1 112 1 113 4 158 1 318 1 115 1 
287 1 290 1 0 1 291 1 1 1 171 1 175 1 296 1 297 2 252 1 211 1 48 6 135 2 50 1 144 1 97 1 268 12 64 1 152 2 277 2 112 1 113 6 117 2 77 2 123 2 
168 1 287 1 290 4 0 4 291 1 1 1 171 1 175 1 296 1 297 2 252 1 211 4 48 10 49 1 135 8 50 2 186 1 144 1 263 2 97 3 268 18 310 1 64 4 152 5 277 3 112 1 158 1 113 8 318 1 115 1 117 2 77 2 123 1 
287 1 290 4 0 4 291 1 1 1 171 1 175 1 296 1 297 2 252 1 211 4 48 9 135 8 50 3 144 1 263 2 97 3 268 16 64 4 152 6 277 3 112 1 113 7 117 3 161 1 77 3 123 2 
97 3 268 7 310 1 152 6 297 1 277 1 113 4 158 3 48 3 318 3 115 2 50 3 186 1 
168 1 287 1 290 4 0 4 291 1 1 1 171 1 175 1 296 1 297 2 252 1 211 4 48 10 135 8 50 1 186 1 144 1 263 2 97 3 268 18 310 1 64 4 152 4 277 3 112 1 158 1 113 8 318 1 115 1 117 2 161 1 77 2 123 1 
168 1 263 1 97 2 268 8 0 2 290 2 310 1 64 2 152 3 297 1 277 1 113 4 48 4 211 2 158 1 135 4 318 1 115 1 50 1 186 1 
168 1 97 2 268 6 310 1 152 2 297 1 277 1 113 3 182 1 158 1 48 3 318 1 115 1 186 1 
97 1 268 4 0 1 290 1 64 1 152 2 297 1 277 1 113 2 211 1 48 2 49 1 135 2 117 1 50 1 123 1 77 1 
97 1 268 7 175 2 152 2 297 1 296 1 277 1 252 1 113 4 48 3 159 1 117 1 50 1 123 1 77 1 
168 1 0 2 290 2 173 1 175 2 296 2 297 3 48 11 211 2 301 1 213 1 135 4 50 4 186 1 263 2 97 5 268 23 310 1 64 2 152 9 277 3 158 2 113 12 318 2 115 1 117 2 159 1 77 2 123 2 
113 1 268 1 175 1 
48 1 268 1 296 1 
97 2 268 6 290 1 0 1 64 1 152 3 297 1 277 1 211 1 113 3 48 3 135 2 49 1 117 1 50 1 77 1 123 1 57 1 
287 1 290 1 0 1 291 1 1 1 171 1 175 1 296 1 297 2 252 1 211 1 48 6 135 2 50 1 144 1 97 1 268 12 64 1 152 2 277 2 112 1 113 6 117 2 77 2 123 2 
97 1 268 6 152 2 297 1 277 1 48 3 113 3 158 1 318 1 50 1 186 1 
263 1 97 1 268 3 0 1 290 1 310 1 64 1 152 2 48 1 158 1 301 1 113 2 211 1 135 2 318 1 115 1 50 1 
149 1 97 3 268 10 290 1 0 1 64 1 152 5 297 2 277 2 112 1 211 1 158 2 48 5 113 5 135 2 318 2 50 2 186 1 
268 2 0 1 290 1 64 1 152 1 277 1 112 1 211 1 48 2 135 2 117 1 50 1 
97 1 268 4 0 1 290 1 64 1 152 2 297 1 277 1 112 1 113 2 211 1 48 2 135 2 117 1 50 1 123 1 77 1 
263 1 97 1 268 3 0 3 290 3 64 3 152 2 112 1 301 1 113 2 211 3 158 1 48 1 135 6 318 1 50 1 161 1 
168 1 290 5 0 5 175 4 296 3 297 5 252 1 301 1 211 5 48 16 49 1 135 10 137 1 50 5 186 2 146 1 263 2 97 7 268 34 310 1 64 5 152 12 155 1 277 5 112 1 158 3 113 18 318 3 115 1 159 1 117 3 161 1 77 3 123 3 
11 1 247 1 100 1 194 1 323 1 28 1 109 1 
247 1 100 1 85 1 194 1 28 1 109 1 157 1 11 1 184 1 35 1 260 1 323 1 
31 1 182 1 150 1 312 1 67 1 68 1 4 1 220 1 315 1 29 1 162 1 
131 1 225 1 
131 1 225 1 
131 1 225 1 
308 1 189 2 267 1 150 4 228 1 230 1 130 1 68 3 67 3 27 1 4 1 231 1 29 1 315 1 298 2 235 1 31 1 282 1 306 1 286 1 92 1 162 3 165 1 
308 1 189 2 150 1 228 1 230 1 131 1 43 1 68 1 67 1 106 1 231 1 298 2 10 1 282 1 79 1 200 1 162 1 165 1 
31 1 42 1 67 1 68 1 4 1 162 1 
42 1 150 3 272 1 271 1 68 6 67 7 197 1 4 3 249 1 29 2 315 2 300 1 302 1 31 2 320 1 33 1 306 1 121 1 125 1 162 7 38 1 
131 1 225 1 
202 2 170 1 131 1 43 1 5 1 295 2 297 2 298 3 209 4 10 1 9 2 13 1 186 1 143 1 93 3 308 1 189 3 149 1 63 2 227 1 150 1 228 2 230 2 151 2 68 1 67 1 106 1 29 1 108 1 277 1 278 1 158 1 318 1 282 2 79 1 200 1 162 1 243 1 165 1 
42 1 150 2 27 1 68 2 67 2 197 1 4 2 315 1 31 1 306 1 75 1 162 2 38 1 
150 1 312 1 68 4 67 4 197 1 4 1 29 1 315 1 235 1 31 1 220 1 163 1 162 4 
80 1 265 1 150 1 68 2 67 2 231 1 4 2 315 1 302 1 31 1 33 1 119 1 306 1 162 2 
31 1 269 1 17 1 67 1 68 1 4 1 107 1 29 1 7 1 162 1 
150 1 205 1 68 2 67 2 197 1 4 1 315 1 31 1 121 1 162 2 125 1 
150 3 312 1 272 1 68 4 67 5 197 1 231 1 4 2 29 1 315 2 300 1 31 2 121 1 220 1 163 1 162 5 
289 1 150 3 312 1 272 1 68 4 67 5 197 1 231 1 4 2 29 1 315 2 31 2 121 1 220 1 163 1 162 5 
131 1 225 1 
150 1 68 1 67 1 231 1 4 2 315 1 302 1 31 1 320 1 33 1 306 1 162 1 38 1 
60 1 148 1 182 1 12 1 
236 1 60 1 148 1 215 1 12 1 179 1 188 1 
160 1 124 1 179 1 
60 1 148 1 270 2 313 1 179 3 236 3 47 1 215 1 12 1 51 1 223 1 188 1 
236 2 60 1 148 1 215 1 12 1 41 1 179 2 188 1 8 1 
148 1 269 1 3 1 179 1 30 1 236 1 215 1 51 1 17 1 217 1 188 1 
236 1 148 1 215 1 12 1 51 1 179 1 188 1 
236 1 60 1 215 1 12 2 51 1 179 1 188 1 
39 1 236 2 148 1 215 2 203 1 12 1 99 1 51 1 179 2 188 2 
60 1 148 2 41 2 196 1 3 1 179 3 70 1 236 3 215 1 12 1 51 1 188 1 145 1 
60 1 148 1 269 2 41 1 129 1 179 2 7 1 236 2 215 1 12 1 51 1 17 1 219 1 217 1 188 1 
147 1 60 1 148 2 41 2 196 1 3 1 179 4 8 1 236 4 215 2 12 1 51 1 188 2 
236 1 60 1 148 1 215 1 12 1 51 1 179 1 188 1 
60 2 148 3 270 1 41 2 313 1 196 1 3 1 179 4 236 4 47 1 215 1 12 2 188 1 164 1 
316 1 236 2 60 1 148 1 215 1 12 1 41 1 120 1 51 1 140 1 179 2 188 1 
60 1 148 1 270 2 313 2 179 3 236 3 47 1 215 1 12 1 51 1 188 1 58 1 
148 2 26 2 192 1 273 1 
236 1 215 1 103 1 51 1 179 1 188 1 
236 2 60 1 148 1 215 1 12 1 41 1 51 1 179 2 188 1 70 1 
118 1 
236 1 60 1 148 1 215 1 12 1 51 1 179 1 188 1 
60 1 148 1 41 1 270 1 179 3 70 1 236 3 215 1 12 1 51 1 188 1 
148 1 196 1 3 1 164 1 
148 1 12 1 

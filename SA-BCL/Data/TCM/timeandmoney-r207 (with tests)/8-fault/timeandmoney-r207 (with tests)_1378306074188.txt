#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 43 (85,121,322) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 364 225 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 364 225 55 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 364 225 55 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 364 225 55 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
180 2 23 1 154 1 211 1 157 2 297 3 81 1 128 1 326 2 328 1 29 2 31 9 104 1 245 1 134 1 48 1 49 1 140 9 34 1 142 6 258 1 373 1 17 5 290 2 358 1 262 2 339 4 119 2 
180 2 23 1 154 1 211 1 157 2 297 3 81 1 128 1 326 2 328 1 29 2 31 9 104 1 245 1 134 1 48 1 49 1 140 9 34 1 142 6 258 1 373 1 17 5 290 2 358 1 262 2 339 4 119 2 
180 2 23 1 154 1 211 1 157 2 297 4 81 1 128 1 326 2 328 1 29 2 31 10 104 1 245 1 134 1 48 1 49 1 140 10 34 1 142 7 258 1 373 1 17 6 290 2 358 1 262 2 339 5 119 2 
180 2 23 1 154 1 211 1 157 2 297 2 81 1 128 1 326 2 328 1 29 2 31 7 104 1 245 1 134 1 48 1 140 7 34 1 142 4 258 1 373 1 17 4 290 2 358 1 262 1 339 3 119 2 
48 1 49 1 180 1 140 4 154 1 297 1 157 1 142 3 326 1 17 3 29 1 358 1 262 2 31 4 339 2 119 1 245 1 134 1 
48 1 180 1 140 2 157 1 113 1 128 1 258 1 17 1 290 1 29 1 358 1 31 2 119 1 41 1 245 1 149 1 
17 2 290 1 48 1 358 1 339 1 31 3 140 3 297 1 34 1 119 2 157 2 142 1 245 1 
180 1 154 1 297 3 157 2 81 1 326 1 328 1 29 1 31 9 245 1 134 1 48 1 49 1 140 9 34 1 142 7 143 1 17 5 290 1 376 1 358 1 262 2 339 4 119 2 
180 1 154 1 297 3 157 2 81 1 326 1 328 1 29 1 31 9 245 1 134 1 48 1 49 1 140 9 34 1 142 7 143 1 17 5 290 1 376 1 358 1 262 2 339 4 119 2 
20 1 72 1 335 1 
65 1 218 2 20 1 
292 2 136 2 309 2 232 2 56 2 33 1 320 2 190 1 
292 2 0 1 269 1 21 1 44 1 232 3 126 2 237 1 100 1 300 1 84 2 276 1 215 1 7 2 190 1 106 2 282 1 353 1 194 1 70 1 136 2 217 1 309 2 33 1 223 2 287 1 198 1 73 1 313 1 260 1 357 1 378 1 39 1 56 2 320 3 205 1 96 1 
299 1 292 1 136 1 286 1 309 1 232 1 56 1 320 1 63 1 190 1 
309 1 232 1 270 1 153 1 298 1 212 1 335 1 299 1 26 1 20 1 94 1 352 1 69 1 320 1 
292 1 136 1 309 1 232 1 270 1 153 2 298 1 212 1 335 1 299 1 26 2 20 1 56 1 94 1 320 1 
26 1 176 1 263 1 153 1 80 1 
26 2 176 1 325 1 20 1 263 1 153 2 335 1 115 1 
26 1 176 1 153 1 
292 1 136 1 286 1 309 1 232 1 153 1 63 1 299 1 26 1 263 1 56 1 320 1 190 1 123 1 
20 1 
26 2 176 1 325 1 20 1 263 1 294 1 153 2 335 1 
370 2 293 1 176 2 325 1 77 1 152 1 127 1 153 5 350 1 333 1 236 2 335 1 116 1 26 5 20 1 263 2 171 2 58 1 192 1 
72 1 33 1 
292 1 136 1 309 2 232 2 234 1 33 2 56 1 320 2 174 1 
214 1 244 1 207 1 
353 1 0 1 217 1 232 1 126 1 33 1 223 1 287 1 52 1 313 1 39 1 276 1 320 1 205 1 7 1 96 1 
353 1 292 1 0 1 217 1 71 1 13 1 309 1 232 2 126 1 223 1 287 1 313 1 276 1 39 1 56 1 320 2 205 1 7 1 244 1 96 1 
292 3 136 1 13 1 309 3 232 3 56 3 33 1 320 3 
299 1 292 1 286 1 309 1 232 1 56 1 320 1 
299 1 292 1 136 1 309 1 232 1 56 1 234 1 320 1 174 1 
292 3 0 1 269 1 21 1 44 1 232 4 126 1 270 1 153 1 298 1 237 1 212 1 299 1 26 1 84 1 276 1 188 1 7 1 190 1 106 2 282 1 353 1 194 1 70 1 217 1 136 2 71 1 309 3 13 1 33 1 287 1 223 1 198 1 73 1 313 1 314 1 378 1 39 1 56 3 94 1 320 4 205 1 96 1 174 1 
336 1 292 1 309 2 13 1 232 2 56 1 33 1 69 1 320 2 
292 3 136 1 71 1 13 2 309 3 232 3 153 1 270 1 156 1 298 1 212 1 299 1 314 1 26 1 20 1 56 3 94 1 320 3 174 1 
292 2 136 1 13 1 309 2 232 2 214 1 56 2 320 2 244 1 174 1 
353 1 0 1 217 1 232 1 126 1 33 1 223 1 287 1 313 1 39 1 276 1 320 1 205 1 7 1 96 1 
193 1 0 1 217 1 232 1 126 1 33 1 223 1 313 1 39 1 276 1 320 1 205 1 7 1 96 1 122 1 
125 1 269 1 44 1 237 1 300 2 214 2 67 1 84 4 243 1 244 2 106 2 247 1 70 1 138 1 90 1 198 1 288 1 73 2 378 1 317 1 228 1 19 1 76 1 207 2 
299 1 292 1 309 1 50 1 232 1 56 1 270 1 320 1 
292 4 136 1 71 1 248 1 13 2 309 5 232 5 33 1 336 1 101 1 56 4 69 1 320 5 174 1 
299 1 292 2 286 1 309 2 50 1 232 2 56 2 320 2 
144 1 85 1 
144 1 85 1 
43 1 144 1 85 1 322 1 
43 1 144 1 85 1 322 1 
43 1 322 1 
144 1 62 1 85 1 
43 1 144 1 85 1 322 1 
144 1 85 1 121 1 
144 1 62 1 85 1 
144 1 62 1 85 1 
209 1 144 1 85 1 
209 1 144 1 85 1 
209 1 144 1 85 1 
110 1 179 2 1 1 32 1 153 2 221 2 256 1 26 2 168 1 144 2 167 2 46 2 374 1 291 1 85 2 261 2 20 1 242 3 381 1 
292 2 179 1 1 1 232 2 349 1 153 1 26 1 46 1 85 1 242 1 307 1 369 1 10 1 88 1 309 2 139 1 33 1 221 1 312 1 144 1 261 1 56 2 320 2 121 1 
326 1 29 1 180 1 
29 1 180 1 149 1 
326 2 180 3 183 1 64 1 60 1 149 1 
326 1 180 2 183 1 64 1 149 1 257 1 
326 1 180 2 64 1 183 2 149 1 
176 1 344 2 325 1 359 1 77 1 152 2 345 1 349 1 153 5 127 3 236 1 65 1 26 5 67 1 103 2 243 1 307 1 370 1 162 1 218 3 308 2 111 1 35 1 335 1 312 1 288 1 200 1 356 1 20 2 263 4 171 1 76 1 
176 6 325 1 359 2 77 1 152 6 345 3 235 1 153 9 127 8 80 5 236 2 65 3 26 9 67 3 277 1 279 1 303 1 103 6 243 3 370 2 162 1 218 9 308 6 333 1 335 1 312 4 288 3 315 5 200 2 259 1 20 5 263 7 57 1 171 2 76 3 
344 1 359 1 152 2 345 1 153 3 127 3 236 1 65 2 26 3 67 1 103 2 243 1 370 1 308 2 218 4 111 1 333 1 35 1 335 1 312 1 288 1 200 1 20 3 263 2 171 1 76 1 
344 2 359 1 152 4 345 2 235 1 153 4 127 5 236 1 65 3 26 4 67 2 277 1 103 4 303 1 243 2 370 1 218 7 308 4 111 1 333 1 35 1 335 1 312 2 288 2 200 1 20 4 263 3 171 1 76 2 
313 1 284 1 72 1 
313 1 155 1 
15 1 
313 1 0 1 
313 3 0 1 284 2 276 1 310 1 189 1 
313 1 0 1 276 1 
313 1 74 1 
151 1 11 1 271 1 334 2 371 2 73 3 288 1 300 3 117 1 19 4 228 2 84 6 227 1 319 2 380 1 304 1 243 1 
151 1 11 1 271 1 334 2 371 2 73 3 288 1 300 3 117 1 19 4 228 2 84 6 227 1 319 2 380 1 304 1 243 1 
151 1 11 1 271 1 334 2 371 2 73 3 288 1 300 3 117 1 19 4 228 2 84 6 227 1 319 2 380 1 59 1 304 1 243 1 
151 1 267 1 269 1 345 3 271 1 237 1 273 1 300 16 67 3 84 32 130 1 278 1 6 1 304 2 243 4 106 2 195 1 11 2 70 1 51 1 334 3 371 3 16 3 36 4 198 1 73 16 288 4 117 1 227 1 19 11 228 5 380 2 319 6 76 3 
267 1 151 1 269 2 295 1 271 1 237 2 300 4 84 8 304 1 243 1 106 4 11 1 70 2 334 2 371 2 198 2 288 1 73 4 117 1 338 1 228 3 19 4 380 1 319 1 
61 1 347 1 180 2 126 1 157 1 351 1 326 1 239 1 66 1 29 1 31 2 7 1 102 1 280 1 245 1 217 1 48 1 140 2 223 1 222 1 142 1 114 1 37 1 17 1 290 1 39 1 358 1 119 1 60 1 149 1 
61 1 347 1 180 2 126 1 157 1 326 1 238 1 239 1 66 1 29 1 31 3 7 1 102 1 280 1 217 1 48 1 355 1 140 3 223 1 222 1 142 2 53 1 37 1 17 1 290 1 39 1 358 1 119 1 60 1 149 1 
61 1 217 1 48 1 180 2 355 1 126 1 140 2 222 1 223 1 142 2 326 1 238 1 239 1 37 1 17 1 66 1 290 1 29 1 39 1 358 1 31 2 7 1 280 1 60 1 149 1 
0 1 61 2 126 1 157 1 82 1 66 2 31 1 7 1 280 2 305 1 217 1 250 1 140 1 223 1 313 1 53 1 201 1 290 2 39 1 205 1 119 1 120 1 95 1 
61 1 217 1 180 2 347 1 355 1 126 1 140 1 222 1 223 1 157 1 351 1 326 1 239 1 37 1 290 1 66 1 29 1 39 1 31 1 102 1 7 1 119 1 280 1 60 1 149 1 245 1 
14 1 
175 2 0 1 176 6 77 1 126 2 232 1 127 2 2 1 298 1 236 1 82 1 299 1 352 1 7 2 306 1 246 1 249 2 250 1 309 1 253 1 313 1 20 2 94 1 205 2 320 1 206 1 268 1 324 1 325 3 359 1 22 2 152 2 153 5 270 1 212 1 65 2 26 5 25 1 28 2 27 1 68 4 69 1 107 2 370 1 283 1 217 1 218 2 223 2 372 1 335 1 289 2 166 1 377 2 39 1 171 1 
176 2 325 1 232 1 153 3 270 1 294 1 2 1 298 1 212 1 299 1 26 3 25 1 27 1 352 1 68 2 69 1 306 1 309 1 289 1 94 1 320 1 206 1 
176 1 325 1 22 1 232 1 153 3 270 1 294 1 2 1 298 1 212 1 299 1 26 3 25 1 27 1 352 1 68 3 69 1 306 1 309 1 335 1 20 1 94 1 320 1 206 1 
176 2 325 1 22 1 232 1 294 1 153 3 270 1 2 1 298 1 212 1 299 1 26 3 25 1 27 1 352 1 68 3 69 1 306 1 107 1 309 1 335 1 289 1 20 1 94 1 320 1 206 1 
292 1 176 2 325 1 232 2 294 1 153 3 270 1 2 1 63 1 298 1 212 1 184 1 299 2 26 3 25 1 27 1 352 1 68 2 69 1 190 1 306 1 107 1 136 1 286 1 309 2 335 1 289 1 20 1 56 1 94 1 320 2 206 1 123 1 
176 4 175 2 268 1 325 2 22 2 77 1 152 1 232 1 127 1 153 4 270 1 2 1 298 1 236 1 212 1 299 1 65 2 26 4 25 1 28 2 27 1 352 1 68 4 69 1 306 1 107 2 370 1 283 1 249 2 218 2 309 1 335 1 289 2 166 1 377 2 20 2 94 1 171 1 320 1 206 1 
176 4 175 2 268 1 325 2 22 2 77 1 152 1 232 1 127 1 153 4 270 1 2 1 298 1 212 1 236 1 299 1 65 2 26 4 25 1 28 2 27 1 47 1 352 1 68 4 69 1 306 1 107 2 370 1 87 1 249 2 12 1 309 1 335 1 289 2 166 1 377 2 20 1 94 1 171 1 320 1 206 1 
176 4 175 2 268 1 325 2 22 2 77 1 152 1 232 1 127 1 153 4 270 1 2 1 298 1 212 1 236 1 299 1 65 2 26 4 25 1 28 2 27 1 47 1 352 1 68 4 69 1 306 1 107 2 370 1 87 1 249 2 12 1 309 1 335 1 289 2 166 1 377 2 20 1 94 1 171 1 320 1 206 1 
97 2 176 4 175 2 268 1 325 2 22 2 77 1 152 1 232 1 127 1 153 4 270 1 2 1 298 1 212 1 236 1 299 1 26 4 25 1 28 2 27 1 275 2 240 1 352 1 68 4 69 1 306 1 107 2 370 1 218 2 12 1 309 1 335 1 289 2 20 1 94 1 171 1 320 1 206 1 146 1 382 1 
175 2 268 1 176 5 325 2 77 1 22 3 152 1 232 1 127 1 153 4 270 1 2 1 298 1 236 1 212 1 299 1 65 2 26 4 25 1 28 2 27 1 47 1 352 1 68 5 69 1 306 1 107 3 370 1 87 1 249 2 12 1 309 1 335 1 289 3 166 1 377 2 20 1 94 1 171 1 320 1 206 1 124 1 
175 2 268 1 176 5 325 2 77 1 22 3 152 1 232 1 127 1 153 4 270 1 2 1 298 1 236 1 212 1 299 1 65 2 26 4 25 1 28 2 27 1 47 1 352 1 68 5 69 1 306 1 107 3 370 1 87 1 249 2 12 1 309 1 335 1 289 3 166 1 377 2 20 1 94 1 171 1 320 1 206 1 124 1 
97 2 176 4 175 2 268 1 325 2 22 2 77 1 152 1 232 1 127 1 153 4 270 1 2 1 298 1 236 1 212 1 299 1 26 4 25 1 28 2 27 1 275 2 352 1 68 4 69 1 306 1 107 2 370 1 283 1 218 2 309 1 335 1 289 2 20 1 94 1 171 1 320 1 206 1 382 1 
151 1 269 1 70 1 44 1 72 1 33 2 271 1 334 2 237 1 371 2 198 1 73 3 288 1 300 2 117 1 84 5 19 2 228 2 317 1 378 1 243 1 106 2 
269 2 44 2 345 2 237 2 273 1 300 8 67 2 214 4 84 14 215 1 6 1 243 1 244 11 106 4 282 1 70 2 196 1 89 1 33 1 165 1 36 3 16 3 198 2 73 6 288 2 19 2 228 1 378 1 319 1 342 1 76 1 207 11 42 1 
292 1 0 1 269 1 44 1 126 1 232 2 237 1 300 1 214 1 276 1 84 2 215 1 7 1 106 2 353 1 282 1 70 1 217 1 71 1 285 1 309 1 13 1 33 1 287 1 223 1 165 1 198 1 52 1 313 1 73 1 337 1 39 1 378 1 56 1 205 1 321 1 320 2 96 1 
292 1 0 2 44 3 231 1 78 1 345 1 126 1 232 3 237 3 300 6 84 13 7 1 243 2 244 3 353 2 194 2 135 1 13 1 309 1 255 2 198 3 313 2 19 3 56 1 205 1 320 3 147 1 96 2 207 3 151 1 269 3 271 1 214 3 67 1 276 2 215 1 106 6 282 1 70 3 71 1 217 2 33 2 223 1 287 2 334 2 165 1 371 2 73 7 288 2 117 1 378 3 39 2 228 3 229 2 76 1 
292 1 0 2 269 2 44 2 232 1 126 8 237 2 82 1 300 1 327 1 186 1 84 2 215 1 7 7 106 4 282 1 163 1 70 2 217 2 250 1 309 1 13 1 355 1 223 8 91 1 141 1 114 1 198 2 224 1 313 3 73 1 375 1 260 2 317 1 39 2 378 2 56 1 320 1 205 2 
292 1 269 1 44 1 345 1 232 1 237 1 300 1 214 1 67 1 84 3 243 1 244 1 106 2 70 1 136 1 309 1 165 1 198 1 288 1 73 2 19 1 228 1 378 1 56 1 341 1 320 1 76 1 207 1 174 1 
269 1 70 1 44 1 90 1 237 1 198 1 288 1 300 2 214 1 67 1 19 1 84 2 317 1 378 1 319 1 244 1 207 1 106 2 
247 1 269 1 70 1 44 1 237 1 198 1 73 2 214 1 19 1 228 1 84 2 317 1 378 1 243 1 244 1 76 1 207 1 106 2 
269 1 70 1 44 1 345 1 237 1 198 1 73 2 288 1 300 2 214 2 67 1 228 1 19 2 84 4 317 1 378 1 319 1 243 1 76 1 244 2 207 2 106 2 
269 1 70 1 44 1 90 1 237 1 198 1 288 1 300 2 186 1 214 1 67 1 19 1 84 2 378 1 319 1 244 1 207 1 106 2 
247 1 269 1 70 1 44 1 237 1 198 1 73 2 186 1 214 1 19 1 228 1 84 2 378 1 243 1 244 1 76 1 207 1 106 2 
269 1 70 1 44 1 345 1 237 1 198 1 73 2 288 1 300 2 186 1 214 2 67 1 228 1 19 2 84 4 378 1 319 1 243 1 76 1 244 2 207 2 106 2 
269 1 70 1 44 1 345 1 237 1 198 1 73 2 288 1 300 2 214 2 67 1 228 1 19 2 378 1 84 4 319 1 243 1 76 1 244 2 207 2 106 2 
0 1 269 1 44 1 126 1 232 1 237 1 300 1 84 2 276 1 215 1 7 1 106 2 353 1 282 1 194 1 70 1 217 1 33 1 287 1 223 1 198 1 313 1 73 1 39 1 378 1 205 1 320 1 96 1 
0 1 269 1 44 1 126 1 232 1 237 1 300 1 84 2 276 1 215 1 7 1 106 2 193 1 282 1 70 1 217 1 33 1 223 1 198 1 313 1 73 1 39 1 378 1 170 1 205 1 320 1 96 1 122 1 
269 1 70 1 44 1 345 1 165 1 237 1 198 1 73 2 288 1 300 2 214 2 67 1 228 1 19 2 84 4 378 1 319 1 243 1 76 1 244 2 207 2 106 2 
0 1 269 1 44 1 345 1 126 1 232 1 237 1 300 2 214 2 67 1 84 4 276 1 7 1 243 1 244 2 106 2 353 1 194 1 70 1 217 1 287 1 223 1 114 1 198 1 73 2 288 1 313 1 228 1 19 2 39 1 378 1 319 1 229 1 320 1 76 1 207 2 96 1 
292 1 269 1 44 1 345 1 232 1 237 1 300 2 67 1 214 1 84 3 243 1 244 1 106 2 109 1 70 1 136 1 309 1 165 1 198 1 73 1 288 1 19 1 378 1 319 1 56 1 320 1 76 1 207 1 174 1 
178 2 269 2 345 3 295 1 296 2 237 2 273 1 300 9 67 3 84 19 6 1 243 3 9 1 106 4 70 2 220 1 36 2 16 1 199 1 198 2 225 1 73 10 288 3 18 1 228 3 19 6 55 1 319 3 76 3 173 1 
269 1 70 1 178 2 220 1 295 1 16 1 36 1 237 1 364 1 198 1 225 2 73 3 273 1 300 3 18 2 84 6 55 1 106 2 
178 3 269 2 345 2 295 1 296 1 237 2 364 1 273 2 300 9 67 2 84 19 6 1 243 2 106 4 70 2 220 1 112 1 36 3 16 2 199 1 198 2 225 1 73 10 288 2 18 2 228 1 19 3 55 1 319 2 76 2 173 1 
178 3 269 2 345 2 295 1 296 1 237 2 364 1 273 2 300 9 67 2 84 19 6 1 243 2 106 4 70 2 220 1 112 1 36 3 16 2 199 1 198 2 225 1 73 10 288 2 18 2 228 2 19 4 55 1 319 2 76 2 173 1 
151 1 178 2 269 1 345 2 295 1 271 1 237 1 364 1 273 1 300 10 67 2 84 21 6 1 243 3 106 2 70 1 220 1 334 2 371 2 36 2 16 2 198 1 225 1 73 11 288 3 117 1 18 1 228 4 19 6 55 1 319 2 76 2 42 1 
144 1 38 1 46 1 110 1 261 1 179 1 85 1 32 1 221 1 381 1 
121 1 369 1 
144 1 46 1 261 1 179 1 85 1 346 1 301 1 221 1 161 1 
110 1 179 1 1 1 32 1 153 1 221 1 256 1 26 1 144 1 167 1 46 1 374 1 291 1 85 1 261 1 20 1 242 2 381 1 
110 1 179 1 1 1 32 1 153 1 221 1 256 1 26 1 144 1 167 1 46 1 374 1 291 1 85 1 261 1 20 1 242 2 381 1 
110 1 179 1 1 1 32 1 153 1 221 1 256 1 26 1 144 1 167 1 46 1 374 1 291 1 85 1 261 1 20 1 242 2 381 1 
62 1 54 1 281 1 
62 1 54 1 281 1 
209 1 340 1 
209 1 340 1 281 1 
88 1 139 1 
292 2 179 1 232 2 349 1 153 1 26 1 46 1 85 1 242 1 307 1 369 1 10 1 88 1 354 1 309 2 139 1 33 1 221 1 256 1 312 1 167 1 144 1 261 1 263 1 56 2 320 2 121 1 
62 1 54 1 
209 1 340 1 281 1 
0 1 269 1 44 1 126 2 232 2 237 1 300 1 327 1 241 1 158 1 84 2 367 1 215 1 131 1 7 2 106 2 282 1 70 1 217 1 309 2 223 2 165 1 198 1 224 1 313 1 73 1 260 2 39 1 378 1 118 1 320 2 
61 1 217 1 180 2 355 1 347 1 126 2 223 2 222 1 114 1 129 1 92 1 326 1 37 1 29 1 39 1 7 2 132 1 60 1 149 1 
61 1 217 1 180 2 355 1 347 1 126 1 223 1 222 1 129 1 326 1 37 1 29 1 39 1 40 1 7 1 60 1 149 1 
0 1 61 1 217 1 250 1 126 1 223 1 365 1 82 1 313 1 39 1 205 1 7 1 132 1 95 1 
61 1 217 1 180 2 355 1 347 1 126 1 223 1 222 1 129 1 92 1 326 1 37 1 29 1 39 1 7 1 132 1 60 1 149 1 
75 1 
293 1 152 1 20 1 72 1 127 1 350 1 335 1 
176 1 325 1 77 1 152 1 127 1 153 1 236 1 65 1 26 1 370 1 249 1 218 1 335 1 166 1 377 1 20 2 171 1 
293 1 0 2 177 2 176 5 77 4 345 2 181 1 348 2 126 3 127 9 350 1 236 4 189 1 7 3 243 2 135 2 251 2 308 6 253 1 313 7 20 8 205 1 359 2 325 3 360 1 152 8 153 5 155 3 212 2 99 1 26 5 65 6 24 2 67 2 276 2 160 1 329 1 103 6 370 4 330 2 217 3 284 2 331 1 218 12 223 3 114 1 335 2 288 2 169 2 39 2 379 2 171 4 76 2 
176 1 359 1 325 1 77 2 152 5 345 2 153 1 127 8 236 2 24 1 26 1 273 1 65 3 185 1 5 1 67 2 103 5 243 2 105 1 370 2 330 2 218 6 308 5 219 1 253 1 36 1 16 1 335 2 288 2 20 5 203 1 318 1 171 2 264 1 76 2 
292 1 77 1 152 2 232 1 153 1 127 2 271 1 63 1 236 1 299 1 24 1 26 1 368 1 243 1 190 1 370 1 330 2 87 1 136 1 286 1 309 1 334 1 371 1 288 2 56 1 171 1 320 1 123 1 
370 1 293 1 77 1 152 1 127 1 350 1 236 1 335 1 20 1 171 1 
330 2 135 1 152 5 308 5 218 10 345 2 127 5 288 2 24 1 65 5 67 2 20 5 103 5 243 2 76 2 
26 1 176 1 325 1 20 1 153 1 335 1 
0 1 324 1 176 4 359 2 325 2 77 1 210 1 152 2 126 4 127 2 153 3 236 2 82 1 26 3 329 2 7 4 246 1 370 2 217 1 250 1 331 1 252 1 223 4 253 2 333 1 313 1 39 1 171 2 205 2 
292 2 0 1 269 1 21 1 44 1 126 1 232 3 237 1 84 1 276 1 7 1 190 1 106 2 282 1 353 1 194 1 70 1 136 2 217 1 309 2 33 1 223 1 287 1 198 1 73 1 313 1 39 1 378 1 56 2 205 1 320 3 96 1 
370 1 359 1 77 1 308 2 218 4 152 2 127 1 253 1 236 1 335 2 65 2 20 4 171 1 304 1 103 2 
261 1 179 1 323 1 
216 1 88 1 261 1 179 1 381 1 
261 1 179 1 323 1 
261 1 179 1 323 1 
261 1 179 1 191 1 
261 1 179 1 191 1 
261 1 179 1 191 1 
261 1 179 1 
144 1 85 1 
267 1 151 1 269 2 70 2 271 1 334 2 237 2 371 2 198 2 288 1 73 5 300 4 117 1 84 9 19 4 228 2 319 2 243 1 106 4 
151 1 72 1 271 1 334 2 371 2 73 3 288 1 300 2 117 1 228 2 19 2 84 5 243 1 
269 1 70 1 345 1 237 1 198 1 73 2 288 1 83 1 300 2 67 1 228 1 19 2 84 4 319 1 243 1 76 1 106 2 
345 1 36 2 16 1 73 4 288 1 273 1 300 3 67 1 228 1 84 7 19 2 319 1 6 1 243 1 76 1 
151 1 267 2 269 2 345 2 271 1 237 2 300 10 45 1 67 2 84 22 6 1 243 3 106 4 70 2 334 3 371 3 16 2 36 2 198 2 288 3 73 12 117 1 19 9 228 5 319 4 342 1 76 2 42 1 
73 1 84 1 36 1 
300 1 84 1 16 1 
70 1 269 1 135 1 345 1 237 1 198 1 73 3 288 1 83 1 300 3 67 1 84 6 19 3 228 2 319 1 243 1 76 1 106 2 
269 1 345 2 295 1 237 1 273 1 300 6 185 1 5 1 67 2 84 12 243 2 106 2 70 1 219 1 16 1 36 1 198 1 73 6 288 2 228 1 19 2 319 1 318 1 264 1 76 2 
271 1 334 1 371 1 288 1 73 2 300 2 84 4 228 1 19 1 243 1 
151 1 267 1 269 1 70 1 334 1 371 1 237 1 198 1 73 2 300 1 117 1 45 1 19 2 228 1 84 3 319 1 106 2 
73 3 288 1 300 2 84 5 19 2 228 2 368 1 271 1 243 1 334 2 371 2 
269 1 70 1 295 1 237 1 198 1 288 1 300 2 67 1 84 2 19 1 319 1 106 2 
269 1 70 1 345 1 295 1 237 1 198 1 73 2 288 1 300 2 67 1 228 1 19 2 84 4 319 1 243 1 76 1 106 2 
267 1 269 3 70 3 295 1 334 1 237 3 371 1 198 3 73 2 300 1 45 1 84 3 228 1 19 2 319 1 173 1 106 6 
151 1 267 2 269 5 345 3 295 1 271 2 237 5 273 1 83 1 300 16 45 1 67 3 84 35 130 1 278 1 6 1 243 5 106 10 195 1 70 5 334 3 371 3 36 4 16 3 198 5 73 19 288 5 117 1 19 12 228 6 319 6 76 3 173 1 
151 1 269 1 295 1 271 1 237 1 273 1 300 3 5 1 84 7 243 1 106 2 70 1 334 2 16 1 36 1 371 2 198 1 288 1 73 4 117 1 228 2 19 2 
151 1 269 2 345 1 295 1 271 1 237 2 273 1 83 1 300 5 5 1 67 1 84 10 6 1 243 1 106 4 70 2 334 2 371 2 36 2 16 1 198 2 73 5 288 2 117 1 228 2 19 3 319 1 
151 1 267 1 269 3 345 2 295 1 271 1 237 3 83 1 273 1 300 8 185 1 5 1 67 2 84 18 243 3 106 6 70 3 219 1 334 2 371 2 16 1 36 1 198 3 73 10 288 3 117 1 228 3 19 4 319 1 318 1 264 1 76 2 
151 1 267 1 269 3 345 2 295 1 271 1 237 3 83 1 273 1 300 9 185 1 5 1 67 2 84 16 243 2 106 6 70 3 219 1 334 2 371 2 16 1 36 1 198 3 73 7 288 3 117 1 228 3 19 6 319 3 318 1 264 1 76 1 
151 1 269 1 295 1 271 1 237 1 273 1 300 3 5 1 84 7 243 1 106 2 70 1 334 2 16 1 36 1 371 2 198 1 288 1 73 4 117 1 228 2 19 2 
269 1 345 2 295 1 237 1 273 1 300 6 185 1 5 1 67 2 84 12 243 2 106 2 70 1 219 1 16 1 36 1 198 1 73 6 288 2 228 1 19 2 319 1 318 1 264 1 76 2 
151 1 267 2 269 4 345 2 295 1 271 1 237 4 273 1 83 1 300 9 185 1 5 1 67 2 84 17 243 2 106 8 70 4 219 1 334 2 371 2 36 1 16 1 198 4 73 8 288 3 117 1 228 3 19 6 319 3 318 1 264 1 76 1 
267 2 269 4 345 3 295 1 237 4 273 1 300 9 185 1 5 1 67 3 84 16 243 2 106 8 70 4 219 1 36 1 16 1 198 4 73 7 288 3 228 3 19 6 319 3 318 1 264 1 76 2 173 1 
151 2 271 1 334 2 371 2 73 4 288 1 300 3 117 1 84 7 228 2 19 4 319 2 243 1 
151 1 267 2 269 4 345 2 295 1 271 1 237 4 273 1 300 9 185 1 5 1 67 2 84 17 243 2 106 8 70 4 219 1 334 2 371 2 36 1 16 1 198 4 73 8 288 3 117 1 228 3 19 4 319 1 318 1 264 1 76 1 173 1 
336 1 309 1 232 1 33 1 320 1 69 1 204 1 
309 1 232 1 361 1 33 1 98 1 363 1 336 1 30 1 145 1 204 1 69 1 320 1 
313 1 0 1 217 1 250 1 39 1 72 1 126 1 223 1 7 1 205 1 82 1 
292 1 353 1 0 1 217 1 13 1 309 1 232 2 126 1 33 1 223 1 313 1 276 1 39 1 56 1 320 2 205 1 7 1 96 1 
292 1 0 2 126 1 232 2 270 1 99 1 299 2 366 1 276 2 7 1 329 1 353 1 217 1 309 2 13 1 223 1 33 1 313 2 39 1 56 2 94 1 320 2 96 1 
292 1 0 2 126 1 232 2 270 1 99 1 299 2 366 1 276 2 7 1 329 1 193 1 217 1 309 2 13 1 223 1 33 1 313 2 39 1 56 2 94 1 320 2 96 1 
292 1 176 1 0 1 232 1 126 1 153 2 155 1 63 1 3 1 212 1 99 1 299 1 26 2 276 1 7 1 329 1 190 1 136 1 284 1 217 1 286 1 309 1 223 1 335 1 313 3 316 1 39 1 20 1 56 1 320 1 123 1 
292 1 176 1 177 1 0 1 232 1 126 1 153 2 155 1 63 1 212 1 99 1 299 1 26 2 276 1 7 1 329 1 190 1 136 1 284 1 217 1 286 1 309 1 223 1 335 1 313 3 39 1 20 1 56 1 320 1 123 1 
217 1 39 1 126 1 223 1 7 1 141 1 
0 2 163 1 217 3 355 1 126 7 223 7 91 1 141 1 114 1 313 3 327 1 187 1 260 1 375 1 276 1 39 2 265 1 189 1 205 2 7 6 148 1 
292 1 151 1 0 1 269 2 44 2 232 2 126 1 271 1 237 2 300 2 84 5 276 1 7 1 243 1 106 4 353 1 194 1 70 2 217 1 309 1 13 1 33 2 223 1 287 1 334 2 165 1 255 1 371 2 198 2 114 1 73 3 288 1 313 1 117 1 19 2 228 2 39 1 378 2 56 1 229 1 118 1 320 2 96 1 
293 1 177 1 176 2 325 1 77 2 152 1 126 1 348 1 127 1 153 3 155 1 350 1 236 2 212 1 26 3 7 1 370 2 284 1 331 1 251 1 223 1 335 1 313 2 20 1 263 1 379 1 171 2 205 1 
0 1 284 1 217 2 360 1 126 2 223 2 141 1 114 1 313 2 276 1 39 1 189 1 7 2 
0 1 217 1 250 1 126 4 223 4 311 1 114 1 82 1 313 1 39 1 93 1 205 1 7 4 
150 1 0 1 217 2 137 1 79 1 126 2 223 2 313 1 276 1 39 1 265 1 329 1 7 2 148 1 
217 1 29 1 39 1 180 1 126 1 222 1 223 1 7 1 205 1 149 1 
313 1 0 1 327 1 217 1 39 1 355 1 126 2 367 1 223 2 7 2 114 1 
0 2 163 1 250 1 217 2 126 5 223 5 311 1 114 1 82 1 313 3 327 1 375 1 39 2 329 1 205 1 7 4 
0 2 163 1 250 1 217 2 126 5 223 5 272 1 311 1 114 1 82 1 313 3 327 1 39 2 329 1 205 1 7 4 
292 1 193 1 0 1 217 1 13 1 309 1 232 2 126 1 33 1 223 1 313 1 276 1 39 1 56 1 320 2 205 1 7 1 96 1 
0 1 217 2 126 1 223 1 313 1 187 1 276 1 39 1 265 1 189 1 329 1 7 1 148 1 
230 1 309 1 232 1 226 1 241 1 158 1 86 1 131 1 320 1 
86 1 159 1 266 1 
230 1 226 1 202 1 86 1 33 1 
230 2 270 1 153 2 33 1 197 1 298 1 212 1 335 1 299 1 314 1 26 2 226 2 202 2 20 1 94 1 86 1 263 1 159 1 266 1 
17 1 48 1 358 1 72 1 
17 1 48 1 358 1 31 1 140 1 119 1 157 1 
290 1 140 1 280 1 
108 1 48 1 140 3 157 1 258 2 17 1 358 1 31 3 172 1 119 1 133 1 245 1 
17 1 48 1 358 1 262 1 31 2 140 2 119 1 157 1 142 1 
326 1 17 1 29 1 180 1 339 1 31 1 140 1 119 1 157 1 245 1 134 1 
17 1 48 1 31 1 140 1 119 1 157 1 245 1 
48 2 358 1 31 1 140 1 119 1 157 1 245 1 
48 1 332 1 233 1 140 2 254 1 157 2 17 1 31 2 119 2 245 1 
17 2 328 1 48 1 358 1 339 1 31 3 140 3 297 1 81 1 119 1 157 1 142 2 245 1 
48 1 180 2 140 2 157 1 142 1 326 1 17 1 29 1 358 1 31 2 119 1 60 1 149 1 245 1 343 1 
48 1 49 1 140 4 157 2 297 1 142 2 17 2 358 1 262 1 31 4 339 1 119 2 245 1 
17 1 48 1 358 1 31 1 140 1 119 1 157 1 245 1 
108 1 48 2 140 4 157 1 297 1 142 2 258 1 213 1 17 3 358 2 31 4 339 1 119 1 133 1 
48 1 140 2 157 1 142 1 274 1 17 1 376 1 358 1 31 2 302 1 119 1 245 1 
108 2 17 1 48 1 358 1 31 3 140 3 182 1 119 1 157 1 133 1 245 1 258 2 
208 1 17 2 362 1 8 2 
31 1 140 1 119 1 157 1 4 1 245 1 
17 1 328 1 48 1 358 1 31 2 140 2 119 1 157 1 142 1 245 1 
164 1 
17 1 48 1 358 1 31 1 140 1 119 1 157 1 245 1 
48 1 140 3 157 1 142 1 258 1 17 1 328 1 358 1 31 3 119 1 245 1 
213 1 17 1 339 1 297 1 
17 1 48 1 

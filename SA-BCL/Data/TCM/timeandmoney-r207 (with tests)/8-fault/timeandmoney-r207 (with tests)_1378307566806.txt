#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (21,178,220,305,326) (145,250) (145,250) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (21,178,220,305,326) (145,250) (145,250) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (21,178,220,305,326) (145,250) (145,250) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (21,178,220,305,326) (145,250) (145,250) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 1 145 1 326 1 173 1 100 1 101 1 195 1 250 1 88 1 60 1 353 1 66 1 
335 1 60 1 145 1 353 1 326 1 173 1 100 1 101 1 195 1 88 1 66 1 250 1 
335 1 60 1 145 1 353 1 326 1 173 1 100 1 101 1 195 1 88 1 66 1 250 1 
335 1 60 1 145 1 353 1 326 1 173 1 100 1 101 1 195 1 88 1 66 1 250 1 
335 4 115 1 346 3 338 2 292 1 173 1 100 1 101 4 20 1 331 1 353 1 307 1 189 1 354 2 319 1 23 3 61 1 345 1 
335 2 292 1 326 1 173 1 100 1 101 2 238 1 88 1 284 1 353 1 307 1 23 1 319 1 141 1 61 1 66 1 
335 3 115 1 346 1 292 1 173 2 100 1 101 3 265 1 88 1 353 2 307 1 354 1 23 2 
335 9 115 3 338 2 292 1 88 1 161 1 189 1 319 1 345 1 259 1 346 7 323 1 173 2 327 1 100 1 265 1 101 9 331 1 20 1 353 2 307 1 354 4 23 5 61 1 
335 9 115 3 338 2 292 1 88 1 161 1 189 1 319 1 345 1 259 1 346 7 323 1 173 2 327 1 100 1 265 1 101 9 331 1 20 1 353 2 307 1 354 4 23 5 61 1 
260 1 152 1 184 1 
260 1 1 1 333 2 
113 2 59 2 30 2 241 2 27 1 213 2 293 1 209 2 
113 2 30 2 183 2 244 1 313 2 86 1 293 1 51 2 119 1 138 1 318 1 70 1 91 1 13 1 190 1 209 2 15 1 74 1 77 1 213 2 193 1 266 1 303 1 283 1 330 2 216 1 285 1 59 3 241 3 44 1 150 1 151 1 27 1 28 1 131 1 63 2 109 1 
181 1 113 1 59 1 30 1 241 1 242 1 137 1 213 1 293 1 209 1 
113 1 260 1 48 1 264 1 136 1 137 1 184 1 236 1 59 1 121 1 241 1 107 1 26 1 110 1 
113 1 260 1 30 1 264 1 136 2 137 1 213 1 184 1 236 1 59 1 121 1 241 1 107 2 209 1 110 1 
73 1 2 1 107 1 169 1 136 1 
166 1 260 1 73 1 107 2 169 1 136 2 184 1 64 1 
107 1 169 1 136 1 
181 1 113 1 230 1 73 1 30 1 136 1 137 1 213 1 293 1 59 1 241 1 107 1 242 1 209 1 
260 1 
166 1 260 1 41 1 73 1 107 2 169 1 136 2 184 1 
181 1 113 1 30 1 246 1 314 1 201 2 136 5 137 1 293 1 184 2 275 2 120 1 225 1 12 4 343 1 69 1 226 2 209 1 166 1 230 1 260 2 73 2 192 1 169 2 213 1 194 1 349 2 267 2 78 5 59 1 241 1 107 5 242 1 153 2 199 1 46 1 310 1 65 1 
27 1 152 1 
113 2 30 1 213 1 188 1 59 2 241 2 27 2 38 1 209 1 
49 1 289 1 155 1 
39 1 74 1 244 1 183 1 77 1 266 1 330 1 51 1 285 1 318 1 59 1 241 1 151 1 27 1 70 1 13 1 
113 3 59 3 30 3 241 3 27 1 356 1 213 3 209 1 
181 1 113 1 59 1 30 1 241 1 137 1 213 1 
113 1 188 1 59 1 30 1 241 1 137 1 213 1 38 1 209 1 
113 3 30 3 244 1 183 1 313 2 86 1 136 1 137 1 159 1 293 1 51 1 119 1 318 1 188 1 121 1 70 1 13 1 190 1 209 2 15 1 210 1 74 1 77 1 264 1 213 3 266 1 303 1 236 1 330 1 216 1 285 1 59 4 241 4 44 1 150 1 151 1 107 1 27 1 356 1 28 1 63 1 109 1 110 1 223 1 
113 2 59 2 30 1 241 2 27 1 26 1 356 1 213 1 257 1 
210 1 113 3 260 1 30 3 16 1 136 1 264 1 137 1 213 3 236 1 188 1 59 3 121 1 241 3 107 1 356 2 209 1 110 1 223 1 
113 2 30 2 49 1 213 2 188 1 59 2 241 2 356 1 289 1 209 1 
74 1 244 1 183 1 77 1 266 1 330 1 51 1 285 1 318 1 59 1 241 1 151 1 27 1 70 1 13 1 
74 1 244 1 183 1 77 1 266 1 330 1 51 1 318 1 59 1 241 1 24 1 151 1 27 1 70 1 258 1 
313 2 49 2 86 1 201 1 11 1 226 1 190 1 53 1 164 1 95 1 15 2 144 1 97 1 216 1 240 1 44 1 150 1 130 1 131 2 63 4 289 2 109 1 200 1 155 2 
113 1 59 1 30 1 241 1 264 1 137 1 213 1 154 1 
113 1 74 1 30 1 244 1 183 1 77 1 213 1 266 1 330 1 51 1 318 1 285 1 59 2 241 2 151 1 70 1 356 1 13 1 289 1 223 1 
113 5 30 4 116 1 213 4 188 1 59 5 241 5 355 1 26 1 356 2 27 1 257 1 209 1 223 1 
181 1 113 2 59 2 30 2 241 2 137 1 154 1 213 2 
80 1 263 1 
80 1 263 1 
89 1 147 1 
89 1 147 1 
89 1 147 1 
80 1 263 1 25 1 
80 1 263 1 25 1 
80 1 263 1 122 1 
89 1 127 1 80 2 263 2 301 1 147 1 
80 1 263 1 25 1 
80 1 263 1 300 1 
80 1 263 1 300 1 
80 1 263 1 300 1 
167 1 260 1 321 3 127 1 263 2 5 1 136 2 249 2 237 1 52 1 10 2 268 2 80 2 107 2 142 1 344 1 208 2 311 2 111 1 
229 1 113 2 279 1 58 1 321 1 30 2 211 1 263 1 98 1 136 1 213 2 175 1 249 1 10 1 268 1 59 2 241 2 80 1 107 1 27 1 122 1 243 1 111 1 311 1 
319 1 61 1 331 1 
284 1 319 1 61 1 
284 1 112 1 129 1 319 3 185 1 331 2 
284 1 112 1 319 2 185 1 295 1 331 1 
284 1 112 2 319 2 185 1 331 1 
181 1 113 1 1 2 30 1 246 1 201 1 6 1 136 5 137 1 158 1 293 1 117 1 184 1 248 2 275 1 296 2 11 1 12 3 14 2 226 1 209 1 94 1 166 1 123 1 260 2 230 1 73 4 169 1 213 1 175 1 349 1 267 1 350 1 78 2 59 1 241 1 107 5 242 1 153 1 333 2 200 1 
181 1 135 1 1 2 2 2 136 5 6 1 137 1 184 1 275 1 11 1 12 3 14 2 226 1 230 1 59 1 241 1 107 5 242 1 153 1 200 1 333 2 113 1 30 1 246 1 201 1 158 1 293 1 294 2 296 2 71 1 209 1 166 1 260 2 123 1 73 4 169 3 213 1 349 1 175 1 350 1 267 1 78 2 
181 1 113 1 30 1 1 2 136 3 6 1 201 1 137 1 158 1 293 1 184 1 117 1 248 1 275 1 296 2 11 1 225 1 12 3 14 2 226 1 209 1 94 1 230 1 260 2 123 1 73 2 213 1 349 1 175 1 267 1 78 2 59 1 241 1 107 3 242 1 153 1 333 2 200 1 
1 4 314 1 273 1 136 4 6 2 201 2 158 1 184 1 117 1 248 2 275 1 296 4 11 2 225 1 12 5 14 4 226 2 94 1 260 4 261 1 123 1 73 3 18 1 349 1 175 2 267 1 78 4 107 4 153 2 333 4 200 2 
152 1 266 1 339 1 
342 1 266 1 
286 1 
74 1 266 1 
22 1 74 1 151 1 324 1 266 3 339 2 
74 1 151 1 266 1 
179 1 266 1 
15 3 144 2 114 1 201 1 233 1 204 2 240 3 120 1 102 1 104 1 253 1 343 1 226 1 131 4 63 7 310 1 133 1 
15 3 144 2 114 1 201 1 233 1 204 2 240 3 120 1 102 1 104 1 253 1 343 1 226 1 131 4 63 7 310 1 133 1 
15 3 144 2 114 1 201 1 233 1 204 2 160 1 240 3 120 1 102 1 104 1 253 1 343 1 226 1 131 4 63 7 310 1 133 1 
114 1 4 3 313 2 86 1 32 1 6 3 201 4 204 3 120 2 11 3 253 1 254 4 343 2 35 1 226 4 54 1 15 15 144 5 233 2 234 1 328 1 216 1 240 10 102 1 104 5 44 1 150 1 196 1 131 16 63 31 310 1 200 3 133 2 359 1 
114 1 313 4 86 2 201 1 204 2 120 1 341 1 343 1 226 1 15 4 144 3 233 1 216 2 351 1 240 4 102 1 104 1 44 2 150 2 131 5 63 9 310 1 133 1 359 1 
335 2 183 1 290 1 336 1 291 1 292 1 274 1 51 1 88 1 319 2 205 1 70 1 256 1 143 1 37 1 320 1 346 1 77 1 173 1 100 1 101 2 330 1 331 1 284 1 353 1 307 1 129 1 23 1 61 1 332 1 
335 3 183 1 336 1 292 1 7 1 274 1 51 1 88 1 319 2 205 1 70 1 256 1 143 1 37 1 320 1 346 2 77 1 173 1 101 3 330 1 331 1 284 1 353 1 307 1 129 1 23 1 106 1 308 1 61 1 332 1 
335 2 183 1 292 1 7 1 88 1 51 1 319 2 205 1 70 1 256 1 143 1 37 1 320 1 346 2 77 1 101 2 330 1 331 1 284 1 307 1 129 1 23 1 308 1 61 1 332 1 
335 1 74 1 244 1 183 1 77 1 173 1 87 1 203 1 101 1 266 1 118 1 330 1 317 1 88 2 51 1 252 1 353 1 106 1 70 1 332 2 29 1 143 2 37 2 
335 1 183 1 290 1 336 1 274 1 51 1 88 1 319 2 205 1 70 1 256 1 143 1 37 1 320 1 77 1 173 1 100 1 101 1 330 1 331 1 284 1 353 1 129 1 308 1 61 1 332 1 
57 1 
113 1 48 1 183 2 244 2 246 1 136 3 137 1 118 1 51 2 275 1 317 1 121 1 206 1 12 1 70 1 36 1 93 1 55 1 165 1 166 1 123 1 74 1 77 1 169 2 264 1 349 1 266 1 236 1 330 2 267 1 78 1 59 1 241 1 107 3 26 1 358 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
166 1 113 1 48 1 41 1 169 1 264 1 136 3 137 1 236 1 121 1 59 1 241 1 206 1 107 3 26 1 358 1 93 1 110 1 
113 1 48 1 246 1 264 1 136 2 137 1 349 1 236 1 267 1 275 1 121 1 59 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 136 2 264 1 137 1 236 1 59 1 121 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
113 1 48 1 246 1 264 1 136 2 137 1 349 1 236 1 267 1 275 1 121 1 59 1 241 1 206 1 107 2 26 1 358 1 93 1 110 1 
114 1 49 1 313 2 86 1 201 1 204 1 120 1 343 1 190 1 226 1 15 3 144 2 216 1 240 2 102 1 44 1 150 1 152 1 27 2 130 1 131 3 289 1 63 6 109 1 310 1 155 1 
0 1 4 3 313 4 49 4 32 1 86 2 6 2 201 2 33 1 315 1 11 1 254 3 190 2 226 1 15 6 144 1 170 1 174 1 283 1 216 2 240 2 104 1 44 2 150 2 196 1 27 1 28 1 131 8 63 14 289 11 109 1 200 2 155 11 
113 1 85 1 30 1 183 1 244 1 49 1 313 2 86 1 186 1 51 1 318 1 70 1 13 1 190 1 39 1 15 1 74 1 77 1 232 1 174 1 213 1 266 1 330 1 283 1 216 1 285 1 59 2 241 2 44 1 151 1 150 1 27 1 356 1 28 1 131 1 63 2 109 1 223 1 
183 3 313 6 49 7 86 3 6 2 51 3 318 2 11 2 13 2 226 3 190 3 15 10 144 4 283 1 330 3 239 1 285 2 240 8 102 1 59 3 104 4 241 3 150 3 151 2 27 2 28 1 63 20 289 7 109 3 200 2 155 7 113 1 114 1 30 1 244 1 201 3 204 1 120 1 343 1 70 2 163 1 74 2 77 2 174 1 213 1 128 2 303 2 266 2 306 1 216 3 215 2 218 2 44 3 308 1 356 1 131 10 132 2 310 1 223 1 
113 1 30 1 183 7 244 2 313 4 247 1 291 1 86 2 224 1 118 1 51 8 317 1 70 2 34 1 190 2 96 1 15 1 124 1 74 2 77 2 99 1 213 1 193 2 266 3 330 8 283 1 216 2 59 1 241 1 44 2 308 1 150 2 356 1 130 1 28 1 131 1 288 1 63 2 109 2 
113 1 30 1 49 1 313 2 86 1 6 1 201 1 188 1 11 1 190 1 226 1 209 1 15 2 144 1 174 1 213 1 214 1 216 1 240 1 59 1 241 1 44 1 150 1 131 1 289 1 63 3 109 1 200 1 155 1 
97 1 49 1 313 2 86 1 201 1 216 1 240 1 104 1 44 1 150 1 130 1 190 1 131 2 289 1 63 2 109 1 200 1 155 1 
15 2 144 1 49 1 313 2 86 1 216 1 240 1 11 1 44 1 150 1 130 1 190 1 226 1 289 1 63 2 109 1 155 1 164 1 
313 2 49 2 86 1 201 1 6 1 11 1 190 1 226 1 15 2 144 1 216 1 240 2 104 1 44 1 150 1 130 1 131 2 63 4 289 2 200 1 109 1 155 2 
97 1 49 1 313 2 86 1 201 1 216 1 240 1 104 1 44 1 150 1 190 1 131 2 289 1 63 2 109 1 200 1 155 1 96 1 
15 2 144 1 49 1 313 2 86 1 216 1 240 1 11 1 44 1 150 1 190 1 226 1 289 1 63 2 109 1 155 1 96 1 164 1 
313 2 49 2 86 1 201 1 6 1 11 1 190 1 226 1 96 1 15 2 144 1 216 1 240 2 104 1 44 1 150 1 131 2 63 4 289 2 200 1 109 1 155 2 
313 2 49 2 86 1 201 1 6 1 11 1 190 1 226 1 15 2 144 1 216 1 240 2 104 1 44 1 150 1 131 2 63 4 289 2 200 1 109 1 155 2 
183 1 244 1 313 2 86 1 51 1 318 1 70 1 13 1 190 1 15 1 74 1 77 1 303 1 266 1 283 1 330 1 216 1 285 1 59 1 241 1 44 1 151 1 150 1 27 1 28 1 131 1 63 2 109 1 
183 1 244 1 313 2 86 1 51 1 187 1 318 1 70 1 190 1 258 1 15 1 74 1 77 1 266 1 283 1 330 1 216 1 59 1 241 1 44 1 151 1 24 1 150 1 27 1 28 1 131 1 63 2 109 1 
313 2 49 2 86 1 201 1 6 1 11 1 190 1 226 1 15 2 144 1 174 1 216 1 240 2 104 1 44 1 150 1 131 2 63 4 289 2 200 1 109 1 155 2 
183 1 49 2 313 2 291 1 86 1 201 1 6 1 51 1 318 1 11 1 70 1 13 1 226 1 190 1 15 2 144 1 74 1 77 1 303 1 128 1 266 1 330 1 216 1 240 2 285 1 59 1 104 1 241 1 44 1 151 1 150 1 131 2 289 2 63 4 200 1 109 1 155 2 
113 1 30 1 313 2 49 1 86 1 6 1 201 1 188 1 11 1 226 1 190 1 227 1 209 1 15 1 174 1 213 1 216 1 240 1 59 1 104 1 241 1 44 1 150 1 131 2 63 3 289 1 109 1 200 1 155 1 
4 1 313 4 32 1 86 2 68 1 6 3 201 3 11 3 254 2 255 1 226 3 56 2 15 10 144 3 212 1 176 1 148 1 216 2 351 1 240 6 270 1 105 1 104 3 271 2 44 2 150 2 196 1 131 9 63 19 200 3 
4 2 313 6 86 3 32 2 8 1 68 2 6 3 201 3 11 2 254 2 255 1 226 2 72 1 56 1 15 12 144 2 176 1 148 1 216 3 240 4 351 1 269 1 104 2 105 2 271 4 44 3 150 3 131 14 47 1 63 26 83 1 334 1 200 3 359 2 
114 1 4 3 313 6 32 3 86 3 8 1 68 1 6 4 201 5 204 1 120 1 11 4 254 4 162 1 343 1 255 1 226 5 72 1 56 1 15 21 144 4 176 1 148 1 216 3 269 1 351 1 240 8 102 1 270 1 105 2 104 4 271 4 44 3 150 3 196 1 131 20 47 1 63 41 310 1 83 1 334 1 200 4 359 1 
114 1 4 3 313 8 32 3 86 4 8 1 68 1 6 4 201 5 204 1 120 1 11 3 254 4 162 1 343 1 255 1 226 4 72 1 56 1 15 18 144 4 176 1 148 1 216 4 269 1 351 1 240 7 102 1 270 1 105 2 104 3 271 4 44 4 150 4 196 1 131 20 47 1 63 38 310 1 83 1 334 1 200 4 359 2 
114 1 4 4 313 4 32 2 86 2 8 1 68 1 6 7 201 8 315 2 204 1 120 1 11 7 254 4 343 1 255 1 226 8 72 1 56 1 15 25 144 7 176 1 148 1 216 2 269 1 351 1 240 14 102 1 105 1 104 7 271 4 44 2 150 2 196 2 131 27 47 1 63 52 310 1 83 1 334 1 200 7 359 1 
10 1 268 1 167 1 127 1 80 1 263 1 5 1 207 1 249 1 311 1 
98 1 122 1 
10 1 268 1 125 1 149 1 80 1 263 1 180 1 249 1 311 1 
167 1 260 1 321 2 127 1 263 1 5 1 136 1 249 1 237 1 52 1 10 1 268 1 80 1 107 1 344 1 208 1 111 1 311 1 
167 1 260 1 321 2 127 1 263 1 5 1 136 1 249 1 237 1 52 1 10 1 268 1 80 1 107 1 344 1 208 1 111 1 311 1 
167 1 260 1 321 2 127 1 263 1 5 1 136 1 249 1 237 1 52 1 10 1 268 1 80 1 107 1 344 1 208 1 111 1 311 1 
25 1 92 1 301 1 
25 1 92 1 301 1 
340 1 300 1 
340 1 300 1 301 1 
229 1 243 1 
113 2 30 2 136 1 9 1 249 1 10 1 208 1 122 1 229 1 279 1 73 1 321 1 58 1 211 1 263 1 98 1 213 2 175 1 237 1 268 1 59 2 241 2 80 1 107 1 27 1 243 1 311 1 
25 1 92 1 
340 1 300 1 301 1 
113 2 183 2 313 2 86 1 51 2 70 1 34 1 190 1 15 1 168 1 74 1 77 1 17 1 325 1 171 1 174 1 193 2 266 1 330 2 283 1 216 1 59 2 241 2 44 1 150 1 28 1 131 1 288 1 63 2 109 1 84 1 
320 1 183 2 77 1 336 1 291 1 282 1 330 2 331 1 51 2 284 1 251 1 129 1 319 2 308 1 61 1 70 1 287 1 256 1 37 1 
320 1 40 1 183 1 336 1 77 1 330 1 331 1 51 1 284 1 251 1 129 1 319 2 308 1 61 1 70 1 256 1 37 1 
74 1 244 1 183 1 75 1 77 1 203 1 282 1 266 1 330 1 118 1 51 1 317 1 70 1 37 1 
320 1 183 1 336 1 77 1 282 1 330 1 331 1 51 1 284 1 251 1 129 1 319 2 308 1 61 1 70 1 287 1 256 1 37 1 
103 1 
78 1 260 1 12 1 152 1 184 1 46 1 65 1 
1 1 182 1 246 1 136 1 184 1 275 1 12 1 166 1 260 2 348 1 169 1 146 1 349 1 267 1 78 1 107 1 333 1 
1 6 183 1 314 2 136 5 6 2 184 1 275 3 51 1 11 2 12 8 14 6 226 2 324 1 330 1 329 2 236 2 151 1 107 5 153 2 197 1 108 1 333 6 200 2 244 1 246 3 201 2 202 2 339 2 296 6 342 3 70 2 36 1 166 3 123 2 260 7 74 1 126 2 77 1 169 5 349 3 266 6 267 3 78 7 217 2 218 2 272 1 357 2 
1 3 246 2 4 1 314 1 32 1 8 1 136 1 6 2 201 2 184 2 275 2 296 5 11 2 140 1 254 1 12 8 14 5 226 2 36 1 72 1 166 1 123 1 260 5 76 1 169 1 349 2 267 2 78 5 269 1 107 1 153 2 83 1 334 1 333 3 200 2 
181 1 113 1 30 1 246 1 314 1 136 1 201 2 137 1 293 1 275 1 120 1 90 1 343 1 12 2 226 1 209 1 230 1 192 1 213 1 349 1 267 1 78 2 59 1 241 1 107 1 242 1 153 2 310 1 
260 1 246 1 349 1 184 1 267 1 275 1 78 1 12 1 46 1 65 1 
260 2 1 2 314 1 6 1 201 1 78 2 296 2 11 1 12 2 14 2 153 1 226 1 200 1 333 2 
166 1 260 1 107 1 169 1 136 1 184 1 
183 4 244 2 246 1 136 3 118 1 275 2 51 4 317 1 139 1 225 1 276 1 12 2 70 1 36 2 55 1 165 1 166 2 123 2 347 1 74 1 77 1 169 4 302 2 349 2 266 1 330 4 267 2 78 2 107 3 
113 2 30 2 183 1 244 1 313 2 86 1 293 1 51 1 119 1 318 1 70 1 13 1 190 1 209 2 15 1 74 1 77 1 213 2 303 1 266 1 330 1 216 1 285 1 59 3 241 3 44 1 150 1 151 1 27 1 28 1 63 1 109 1 
123 1 260 4 1 2 246 1 204 1 349 1 184 2 267 1 275 1 296 2 78 2 12 1 14 2 36 1 333 2 
268 1 191 1 311 1 
268 1 191 1 311 1 
229 1 268 1 167 1 67 1 311 1 
268 1 191 1 311 1 
268 1 172 1 311 1 
268 1 172 1 311 1 
268 1 172 1 311 1 
268 1 311 1 
80 1 263 1 
15 4 144 2 114 1 313 4 86 2 201 1 204 1 216 2 240 3 120 1 102 1 104 1 44 2 150 2 343 1 226 1 131 4 63 8 310 1 359 1 
15 3 144 2 114 1 201 1 204 1 120 1 240 2 102 1 343 1 152 1 131 3 226 1 63 6 310 1 
15 2 144 1 313 2 86 1 6 1 201 1 42 1 216 1 240 2 11 1 104 1 44 1 150 1 226 1 131 2 63 4 200 1 
15 4 144 1 4 1 32 1 6 1 201 1 240 2 11 1 104 1 254 2 196 1 226 1 131 3 63 7 200 1 
114 1 0 1 4 2 313 4 86 2 201 3 6 2 315 1 204 1 120 2 11 2 254 2 343 2 226 3 15 12 144 5 280 1 216 2 240 9 102 1 104 4 44 2 196 1 150 2 131 11 63 23 310 1 200 2 359 2 
15 1 254 1 63 1 
4 1 131 1 63 1 
15 3 144 2 313 2 86 1 6 1 201 1 42 1 216 1 240 3 11 1 104 1 218 1 44 1 150 1 131 3 226 1 63 6 200 1 
4 1 313 2 32 1 86 1 6 2 201 2 8 1 11 2 254 1 226 2 72 1 15 6 144 1 216 1 351 1 269 1 240 2 104 1 44 1 150 1 131 6 63 12 334 1 200 2 83 1 
15 3 144 1 201 1 120 1 240 2 104 1 343 1 131 3 226 1 63 6 310 1 
15 2 144 1 114 1 280 1 313 2 86 1 216 1 240 2 120 1 102 1 104 1 44 1 343 1 150 1 131 1 63 3 359 1 
15 5 144 3 192 1 313 2 86 1 201 2 216 1 351 1 120 2 240 5 104 2 44 1 150 1 343 2 131 5 226 2 63 10 310 1 
313 2 86 1 201 1 216 1 351 1 240 1 104 1 44 1 150 1 131 2 63 2 200 1 
15 2 144 1 313 2 86 1 6 1 201 1 216 1 240 2 351 1 11 1 104 1 44 1 150 1 226 1 131 2 63 4 200 1 
15 2 144 1 280 1 313 6 86 3 216 3 351 1 120 1 240 2 270 1 104 1 44 3 150 3 343 1 131 1 63 3 359 1 
114 1 4 3 313 10 32 1 86 5 6 3 201 5 204 1 120 3 11 3 254 4 343 3 35 1 226 5 54 1 15 18 144 7 280 1 42 1 234 1 216 5 351 1 240 12 102 1 270 1 104 5 44 5 150 5 196 1 131 16 63 34 310 2 200 3 359 2 
114 1 4 1 313 2 32 1 86 1 201 1 204 1 120 1 254 1 343 1 226 1 15 4 144 2 216 1 351 1 240 2 102 1 44 1 150 1 131 4 63 8 334 1 310 1 
114 1 4 1 313 4 32 1 86 2 6 1 201 2 204 1 120 1 254 2 343 1 226 1 15 5 144 2 42 1 216 2 351 1 240 3 102 1 104 1 44 2 150 2 196 1 131 6 63 11 310 1 334 1 200 1 
114 1 4 1 313 6 32 1 86 3 8 1 6 2 201 3 204 1 120 1 11 2 254 1 343 1 226 3 72 1 15 10 144 3 42 1 216 3 351 1 269 1 240 4 102 1 104 1 44 3 150 3 131 9 63 19 310 1 334 1 200 2 83 1 359 1 
114 1 4 1 313 6 32 1 86 3 6 2 201 3 8 1 204 1 120 1 11 1 254 1 343 1 226 2 72 1 15 7 144 3 42 1 216 3 351 1 269 1 240 5 102 1 104 2 44 3 150 3 131 10 63 17 310 1 334 1 200 2 83 1 359 1 
114 1 4 1 313 2 32 1 86 1 201 1 204 1 120 1 254 1 343 1 226 1 15 4 144 2 216 1 351 1 240 2 102 1 44 1 150 1 131 4 63 8 334 1 310 1 
4 1 313 2 32 1 86 1 6 2 201 2 8 1 11 2 254 1 226 2 72 1 15 6 144 1 216 1 351 1 269 1 240 2 104 1 44 1 150 1 131 6 63 12 334 1 200 2 83 1 
114 1 4 1 313 8 32 1 86 4 8 1 6 2 201 3 204 1 120 1 11 1 254 1 343 1 226 2 72 1 15 8 144 3 42 1 216 4 351 1 269 1 240 5 102 1 104 2 44 4 150 4 131 10 63 18 310 1 83 1 334 1 200 2 359 2 
4 1 313 8 32 1 86 4 8 1 6 3 201 3 11 2 254 1 226 2 72 1 15 7 144 3 216 4 351 1 269 1 240 6 104 3 270 1 44 4 150 4 131 9 63 16 83 1 334 1 200 3 359 2 
15 4 144 3 114 1 201 1 120 3 240 6 102 2 104 3 343 3 226 1 131 3 63 7 310 1 
114 1 4 1 313 8 32 1 86 4 8 1 6 2 201 3 204 1 120 1 11 1 254 1 343 1 226 2 72 1 15 8 144 3 216 4 351 1 269 1 240 4 102 1 104 1 270 1 44 4 150 4 131 10 63 18 310 1 83 1 334 1 200 2 359 2 
113 1 59 1 241 1 27 1 26 1 299 1 257 1 
113 1 262 1 3 1 304 1 59 1 79 1 241 1 81 1 27 1 26 1 299 1 257 1 
74 1 183 1 244 1 77 1 70 1 152 1 266 1 118 1 330 1 317 1 51 1 
113 1 74 1 30 1 244 1 183 1 77 1 213 1 266 1 330 1 51 1 318 1 285 1 59 2 241 2 151 1 27 1 70 1 356 1 
113 2 30 2 183 1 137 1 51 1 318 1 121 1 70 1 74 2 77 1 264 1 213 1 302 1 266 3 330 1 285 1 59 2 241 2 151 2 27 1 356 1 179 1 219 1 
113 2 30 2 183 2 137 1 51 2 297 1 318 1 121 1 70 1 74 2 77 1 264 1 213 1 302 1 266 3 330 2 59 2 241 2 24 1 151 2 27 1 356 1 179 1 219 1 
260 1 74 1 244 1 183 3 281 1 77 1 169 1 136 2 184 1 302 1 266 4 236 1 330 3 339 1 51 3 297 1 342 1 151 1 107 2 70 1 179 1 219 1 222 1 
260 1 74 1 126 1 244 1 183 3 77 1 169 1 136 2 184 1 302 1 266 4 236 1 330 3 339 1 51 3 297 1 342 1 151 1 107 2 70 1 179 1 219 1 
183 1 77 1 70 1 330 1 224 1 51 1 
134 1 124 1 74 2 244 2 183 6 231 1 77 2 247 1 291 1 324 1 99 1 193 1 266 3 224 1 330 7 51 7 308 1 151 1 70 3 34 1 221 1 
183 1 49 1 313 4 86 2 51 1 318 1 13 1 190 2 226 1 15 3 144 2 17 1 330 1 285 1 240 2 59 2 102 1 241 2 150 2 151 1 27 2 63 6 289 1 109 2 155 1 113 1 114 1 30 1 291 1 201 1 204 1 120 1 343 1 70 1 74 1 77 1 174 1 213 1 303 1 128 1 266 1 216 2 44 2 356 1 131 3 132 1 310 1 
183 1 244 1 246 2 136 3 202 1 184 1 339 1 51 1 275 2 342 1 12 1 276 1 166 1 260 1 73 1 126 1 169 2 349 2 266 2 330 1 329 1 236 1 267 2 78 1 107 3 357 1 46 1 65 1 
74 1 183 2 77 1 291 1 324 1 266 2 339 1 224 1 330 2 51 2 151 1 70 2 108 1 
74 1 244 1 183 4 77 1 291 1 316 1 266 1 330 4 118 1 51 4 317 1 297 1 70 1 
134 1 74 1 183 2 77 1 302 1 19 1 266 1 330 2 51 2 151 1 70 2 163 1 221 1 198 1 
284 1 320 1 319 1 183 1 244 1 77 1 61 1 70 1 330 1 51 1 
168 1 74 1 183 2 77 1 291 1 266 1 330 2 51 2 308 1 70 1 34 1 
124 1 74 2 244 1 183 4 77 2 291 1 247 1 316 1 302 1 266 3 118 1 330 5 317 1 51 5 70 2 34 1 
74 2 244 1 183 4 77 2 291 1 247 1 316 1 302 1 266 3 118 1 330 5 317 1 51 5 50 1 70 2 34 1 
113 1 74 1 30 1 244 1 183 1 77 1 213 1 266 1 330 1 51 1 318 1 59 2 241 2 151 1 24 1 27 1 70 1 356 1 
134 1 74 1 183 1 231 1 77 1 324 1 302 1 266 1 330 1 51 1 151 1 70 2 221 1 
113 1 59 1 241 1 31 1 325 1 171 1 157 1 62 1 84 1 
245 1 62 1 235 1 
27 1 31 1 157 1 62 1 228 1 
210 1 260 1 73 1 245 1 31 2 264 1 136 2 137 1 157 2 184 1 236 1 177 1 235 1 121 1 107 2 27 1 62 1 228 2 110 1 
307 1 23 1 152 1 292 1 
335 1 353 1 307 1 23 1 292 1 173 1 101 1 
143 1 101 1 88 1 
335 3 353 1 307 1 23 1 178 1 292 1 326 2 220 1 173 1 100 1 101 3 21 1 
335 2 346 1 353 1 307 1 23 1 338 1 292 1 173 1 101 2 
335 1 173 1 100 1 101 1 331 1 353 1 354 1 23 1 319 1 61 1 345 1 
335 1 353 1 23 1 292 1 173 1 100 1 101 1 
335 1 353 1 307 1 292 2 173 1 100 1 101 1 
335 2 43 1 353 2 23 1 82 1 322 1 292 1 173 2 100 1 101 2 
335 3 346 2 115 1 323 1 292 1 173 1 327 1 100 1 101 3 353 1 307 1 354 1 23 2 
335 2 346 1 292 1 173 1 100 1 101 2 331 1 284 1 353 1 307 1 129 1 23 1 319 2 61 1 45 1 
335 4 346 2 115 1 338 1 292 1 173 2 100 1 101 4 20 1 353 2 307 1 354 1 23 2 
335 1 353 1 307 1 23 1 292 1 173 1 100 1 101 1 
335 4 346 2 115 1 292 2 326 1 173 1 101 4 352 1 353 1 307 2 354 1 23 3 178 1 220 1 
335 2 259 1 346 1 156 1 292 1 173 1 100 1 101 2 353 1 307 1 23 1 278 1 
335 3 353 1 307 1 23 1 178 1 292 1 326 2 220 2 173 1 100 1 101 3 305 1 
298 1 23 2 337 1 309 2 
335 1 353 1 173 1 100 1 101 1 277 1 
335 2 346 1 353 1 307 1 23 1 323 1 292 1 173 1 100 1 101 2 
312 1 
335 1 353 1 307 1 23 1 292 1 173 1 100 1 101 1 
335 3 346 1 323 1 292 1 173 1 326 1 100 1 101 3 353 1 307 1 23 1 
352 1 115 1 354 1 23 1 
23 1 292 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) (156,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) (156,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 207 255 55 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 26 132 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 207 231 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 207 255 55 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 207 231 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 207 255 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 207 81 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (49,84,249,305) (49,84,249,305) (49,84,249,305) 45 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
153 1 137 1 108 1 
23 1 153 1 301 2 
187 1 114 2 221 2 317 1 34 2 289 2 214 2 225 2 
1 1 3 1 87 1 221 2 295 2 225 3 52 1 147 1 187 1 149 1 190 2 230 1 107 1 272 1 235 1 114 2 277 1 200 1 69 1 317 1 164 1 125 1 322 1 203 1 245 1 165 1 128 1 75 1 166 2 285 1 286 1 131 2 211 2 34 3 289 2 214 2 331 1 
114 1 221 1 317 1 99 1 329 1 34 1 121 1 289 1 214 1 225 1 
22 1 182 1 48 1 297 1 298 1 73 1 225 1 34 1 99 1 153 1 232 1 214 1 196 1 137 1 
22 1 114 1 182 2 221 1 48 1 298 2 297 1 225 1 34 1 99 1 153 1 289 1 214 1 196 1 137 1 
219 1 180 1 170 1 182 1 298 1 
219 1 180 1 182 2 153 1 82 1 298 2 137 1 299 1 
219 1 182 1 298 1 
114 1 180 1 182 1 317 1 221 1 121 1 298 1 225 1 191 1 99 1 329 1 34 1 289 1 214 1 
153 1 
219 1 180 1 182 2 153 1 298 2 137 1 299 1 236 1 
0 1 219 2 180 2 275 1 182 5 47 1 93 1 298 5 299 1 303 1 95 1 129 1 267 2 97 1 134 2 98 2 153 1 137 1 250 1 
187 1 108 1 
187 2 114 1 221 1 34 2 289 1 280 1 214 2 225 2 197 1 
30 1 124 1 262 1 
3 1 87 1 277 1 295 1 225 1 203 1 259 1 245 1 75 1 285 1 187 1 131 1 211 1 230 1 34 1 272 1 
3 1 114 1 87 1 277 1 295 1 201 1 225 2 203 1 245 1 75 1 285 1 30 1 131 1 211 1 230 1 34 2 36 1 289 1 214 1 272 1 
114 4 199 1 221 1 7 1 201 2 225 5 130 1 187 1 34 5 232 1 289 4 36 1 214 5 197 1 
114 2 99 1 329 1 34 2 103 1 289 2 214 2 225 2 
187 1 114 3 221 1 34 3 201 1 289 3 214 3 225 3 
114 1 99 1 329 1 34 1 289 1 214 1 225 1 
114 1 221 1 99 1 34 1 280 1 289 1 214 1 225 1 197 1 
3 1 87 1 182 1 221 2 295 1 48 1 297 1 298 1 225 4 52 1 147 1 187 1 190 2 230 1 99 1 196 1 107 1 272 1 235 1 197 1 22 1 114 3 65 1 277 1 117 1 200 1 69 1 317 1 201 1 164 1 125 1 322 1 203 1 245 1 165 1 75 1 166 1 285 1 131 1 211 1 34 4 289 3 36 1 214 3 
187 1 114 1 34 2 232 1 7 1 289 1 201 1 214 2 225 2 
22 1 114 3 65 1 182 1 221 1 48 1 201 2 298 1 297 1 225 3 210 1 99 1 34 3 153 1 36 1 289 3 214 3 196 1 197 1 
114 2 221 1 201 1 124 1 225 2 30 1 34 2 289 2 214 2 197 1 
3 1 87 1 277 1 295 1 225 1 203 1 245 1 75 1 285 1 187 1 131 1 211 1 230 1 34 1 272 1 
43 1 295 1 285 1 187 1 131 1 211 1 99 1 213 1 
50 1 145 1 52 1 262 2 190 2 229 1 107 1 113 1 200 1 69 1 26 1 239 1 163 1 164 1 124 2 322 1 165 1 166 3 30 2 286 2 174 1 291 1 177 1 
22 1 114 1 99 1 34 1 289 1 103 1 214 1 225 1 
14 1 138 1 
14 1 138 1 
181 1 173 1 
181 1 173 1 
181 1 173 1 
14 1 135 1 138 1 
112 1 14 1 138 1 
181 1 14 2 173 1 119 1 138 2 227 1 
14 1 135 1 138 1 
14 1 135 1 138 1 
14 1 104 1 138 1 
14 1 104 1 138 1 
14 1 104 1 138 1 
89 1 182 1 183 1 46 1 256 1 298 1 225 2 187 1 266 1 265 1 309 1 228 1 14 1 312 1 274 1 198 1 112 1 114 2 242 1 34 2 289 2 214 2 138 1 40 1 
90 1 182 2 221 1 185 1 298 2 225 1 266 2 265 2 13 1 228 2 14 2 191 1 99 1 152 1 312 2 17 1 274 1 114 1 67 1 317 1 121 1 329 1 34 1 289 1 214 1 138 2 40 2 251 1 
29 1 296 1 279 1 
29 1 296 1 204 1 
115 1 142 1 296 3 279 2 206 1 204 1 
115 1 142 1 296 2 279 1 270 1 204 1 
115 1 142 2 296 2 279 1 204 1 
140 2 252 1 219 1 180 4 89 1 182 5 46 1 50 1 298 5 145 1 299 1 301 3 261 1 307 2 267 1 97 2 98 1 153 2 313 1 198 1 23 1 276 2 26 1 244 1 129 2 247 1 132 1 80 1 134 1 137 1 250 1 
0 1 140 6 219 6 180 7 182 9 46 4 50 3 298 9 11 1 145 3 299 1 301 9 261 2 53 5 267 2 96 1 269 1 97 6 98 2 153 5 105 1 313 2 18 1 23 3 276 6 26 3 129 5 326 1 170 5 132 3 80 1 134 2 137 1 250 1 
252 1 0 1 140 2 180 2 182 3 46 1 50 1 298 3 145 1 301 4 261 1 307 1 267 1 98 1 97 2 153 3 313 1 23 2 276 2 26 1 244 1 129 2 132 1 134 1 137 1 
140 4 0 1 252 1 180 3 182 4 46 2 50 2 298 4 11 1 145 2 301 7 261 1 307 2 267 1 98 1 97 4 153 4 105 1 313 1 23 3 276 4 26 2 244 1 129 3 326 1 132 2 134 1 137 1 
184 1 108 1 245 1 
102 1 245 1 
154 1 
230 1 203 1 245 1 
321 1 245 1 
230 1 245 1 
136 1 
4 1 116 1 278 1 220 1 118 1 69 3 254 1 239 3 145 1 166 7 246 1 76 1 310 1 229 2 286 4 38 1 139 2 
4 1 116 1 278 1 220 1 118 1 69 3 254 1 239 3 145 1 166 7 246 1 76 1 310 1 229 2 286 4 38 1 139 2 
4 1 116 1 278 1 220 1 118 1 69 3 254 1 239 3 223 1 145 1 166 7 246 1 76 1 310 1 229 2 286 4 38 1 139 2 
4 5 220 1 254 1 143 1 50 3 145 4 52 1 260 1 146 1 263 1 190 2 310 2 229 5 234 1 107 1 116 1 24 1 278 2 118 2 200 1 69 12 26 3 239 10 243 3 283 1 322 1 166 28 246 1 76 2 31 4 286 16 132 3 38 1 139 3 
4 1 220 1 145 1 52 2 190 4 310 1 229 3 107 2 63 1 24 1 116 1 278 1 200 2 118 1 69 4 239 4 322 2 166 9 246 1 76 1 286 5 328 1 139 2 38 1 
45 1 249 1 84 1 305 1 
249 1 84 1 156 1 305 1 
179 1 5 1 294 1 295 1 91 1 296 2 49 2 305 2 264 1 195 1 272 1 120 2 161 1 162 1 279 1 123 1 320 1 70 1 204 1 206 1 75 1 29 1 211 1 131 1 212 1 
249 1 84 1 156 1 305 1 
45 1 249 1 84 1 305 1 
32 1 
219 2 182 3 295 2 48 1 297 1 298 3 225 1 299 1 261 1 267 1 230 1 193 1 99 1 98 1 97 1 232 1 196 1 272 1 22 1 66 1 25 1 240 1 122 1 73 1 205 1 245 1 75 1 285 2 129 1 211 2 131 2 133 1 34 1 134 1 214 1 250 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 219 1 182 3 48 1 240 1 297 1 298 3 299 1 73 1 225 1 193 1 99 1 34 1 232 1 196 1 214 1 218 1 236 1 
22 1 182 2 48 1 240 1 297 1 298 2 225 1 73 1 267 1 193 1 99 1 34 1 134 1 98 1 232 1 196 1 214 1 250 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 298 2 297 1 73 1 225 1 193 1 99 1 34 1 232 1 214 1 196 1 218 1 
22 1 182 2 48 1 240 1 297 1 298 2 225 1 73 1 267 1 193 1 99 1 34 1 134 1 98 1 232 1 196 1 214 1 250 1 218 1 
220 1 145 1 52 1 262 1 187 2 190 2 229 2 107 1 108 1 116 1 278 1 200 1 69 3 239 2 163 1 124 1 164 1 322 1 165 1 166 6 76 1 246 1 30 1 286 3 38 1 139 1 
1 1 4 1 143 1 50 2 145 2 302 1 52 2 226 1 262 11 187 1 190 4 229 1 150 1 233 1 234 1 107 2 200 2 69 5 26 1 239 2 164 1 124 4 125 1 243 3 322 2 74 1 165 2 166 13 30 11 31 3 286 8 132 2 
3 1 1 1 87 1 295 1 225 2 259 1 52 1 148 1 226 1 306 1 187 1 190 2 230 1 272 1 107 1 114 1 277 1 200 1 69 1 201 1 124 1 164 1 125 1 203 1 322 1 245 1 75 1 165 1 285 1 166 2 211 1 131 1 286 1 34 2 289 1 36 1 214 1 86 1 
1 1 3 2 87 2 4 4 5 1 92 2 262 7 187 2 190 6 194 1 100 2 107 3 272 2 114 1 116 1 277 2 278 1 200 3 26 2 201 1 281 2 124 7 125 1 203 2 285 1 30 7 211 3 131 3 286 10 132 2 34 3 36 1 289 1 214 1 139 1 38 1 220 1 295 3 50 2 225 3 145 3 52 3 226 1 308 1 229 4 230 2 235 2 315 1 69 8 239 8 164 3 322 3 245 2 165 3 75 2 166 18 246 1 76 1 327 2 
1 1 141 1 255 1 295 4 225 1 52 2 304 1 190 4 55 1 230 3 56 1 272 2 107 2 273 1 114 1 66 1 200 2 25 1 69 1 163 1 201 1 164 2 125 1 203 1 322 2 207 1 245 3 75 3 165 2 128 1 285 2 166 2 324 1 211 4 131 4 172 1 286 1 34 1 35 1 289 1 214 1 
221 1 50 1 225 1 145 1 52 1 226 1 262 1 190 2 229 1 107 1 197 1 114 1 200 1 26 1 69 1 239 1 124 1 164 1 322 1 165 1 166 2 30 1 286 1 132 1 34 1 289 1 175 1 214 1 
4 1 200 1 239 1 163 1 50 1 124 1 164 1 145 1 322 1 52 1 262 1 165 1 166 2 190 2 30 1 286 2 107 1 177 1 
200 1 26 1 69 1 239 1 163 1 124 1 164 1 322 1 52 1 262 1 165 1 166 1 190 2 229 1 30 1 107 1 291 1 
4 1 200 1 69 1 26 1 239 2 163 1 50 1 124 2 164 1 145 1 322 1 52 1 262 2 165 1 166 3 190 2 229 1 30 2 286 2 132 1 107 1 
4 1 200 1 239 1 50 1 124 1 164 1 145 1 322 1 52 1 262 1 165 1 166 2 190 2 30 1 286 2 56 1 107 1 177 1 
200 1 26 1 69 1 239 1 124 1 164 1 322 1 52 1 262 1 165 1 166 1 190 2 229 1 30 1 56 1 107 1 291 1 
4 1 50 1 145 1 52 1 262 2 190 2 229 1 56 1 107 1 200 1 26 1 69 1 239 2 164 1 124 2 322 1 165 1 166 3 30 2 286 2 132 1 
4 1 200 1 69 1 26 1 239 2 50 1 124 2 164 1 145 1 322 1 52 1 262 2 165 1 166 3 190 2 229 1 30 2 286 2 132 1 107 1 
1 1 3 1 87 1 295 1 225 1 52 1 187 1 190 2 230 1 272 1 107 1 235 1 277 1 200 1 69 1 164 1 125 1 203 1 322 1 245 1 75 1 165 1 166 2 285 1 286 1 211 1 131 1 34 1 
43 1 200 1 69 1 295 1 164 1 125 1 322 1 52 1 165 1 166 1 285 1 187 1 190 2 131 1 211 1 99 1 213 1 107 1 39 1 
4 1 200 1 69 1 26 1 239 2 50 1 124 2 164 1 145 1 322 1 52 1 262 2 226 1 165 1 166 3 190 2 229 1 30 2 286 2 132 1 107 1 
3 1 4 1 87 1 295 1 50 1 145 1 225 1 52 1 262 2 190 2 229 1 230 1 272 1 107 1 235 1 277 1 200 1 69 1 26 1 239 2 124 2 281 1 164 1 203 1 322 1 245 1 75 1 165 1 166 3 324 1 30 2 286 2 211 1 131 1 132 1 34 1 
221 1 50 1 225 1 145 1 52 1 226 1 186 1 262 1 190 2 107 1 197 1 114 1 200 1 69 1 26 1 164 1 124 1 322 1 165 1 166 3 30 1 286 2 132 1 34 1 289 1 214 1 
44 1 4 3 143 1 50 3 10 1 145 3 52 2 190 4 229 3 234 1 314 1 157 1 107 2 200 2 69 7 26 3 239 6 282 2 28 2 243 1 322 2 323 1 166 16 31 2 286 9 248 1 132 3 328 1 290 1 
44 1 4 2 253 1 9 1 50 3 145 3 52 3 268 1 190 6 229 2 234 2 314 1 157 2 107 3 158 1 24 2 200 3 69 10 26 2 239 4 282 4 28 1 243 2 322 3 323 1 166 24 77 1 286 14 31 2 132 3 328 1 290 2 215 1 
44 1 4 4 220 1 253 1 143 1 9 1 50 4 145 5 52 3 189 1 268 1 190 6 229 4 234 3 314 1 157 1 107 3 158 1 116 1 24 1 278 1 200 3 69 17 26 4 239 8 282 4 28 1 243 3 322 3 323 1 166 37 246 1 76 1 77 1 31 4 286 20 248 1 132 4 328 1 290 2 139 1 38 1 215 1 
44 1 4 3 220 1 253 1 143 1 9 1 50 4 145 5 52 4 189 1 268 1 190 8 229 4 234 3 314 1 157 1 107 4 158 1 116 1 24 2 278 1 200 4 69 15 26 3 239 7 282 4 28 1 243 3 322 4 323 1 166 35 246 1 76 1 77 1 31 4 286 20 248 1 132 4 328 1 290 2 139 1 38 1 215 1 
44 1 4 7 220 1 253 1 143 2 9 1 50 7 145 8 302 2 52 2 268 1 190 4 229 7 234 2 314 1 157 1 107 2 158 1 116 1 24 1 278 1 200 2 69 18 26 7 239 14 282 4 28 1 243 4 322 2 323 1 166 45 246 1 76 1 77 1 31 4 286 27 132 7 328 1 290 1 139 1 38 1 215 1 
293 1 266 1 265 1 228 1 14 1 119 1 330 1 312 1 138 1 20 1 
112 1 256 1 
167 1 266 1 265 1 228 1 14 1 8 1 312 1 106 1 138 1 
319 1 135 1 
33 1 104 1 227 1 
90 1 182 1 221 1 185 1 298 1 225 1 266 1 265 1 13 1 228 1 14 1 191 1 99 1 152 1 312 1 17 1 274 1 114 1 67 1 317 1 121 1 329 1 34 1 289 1 214 1 138 1 40 2 251 1 
90 1 182 1 221 1 185 1 298 1 225 1 266 1 265 1 13 1 228 1 14 1 191 1 99 1 152 1 312 1 17 1 274 1 114 1 67 1 317 1 121 1 329 1 34 1 289 1 214 1 138 1 40 2 251 1 
90 1 182 1 221 1 185 1 298 1 225 1 266 1 265 1 13 1 228 1 14 1 191 1 99 1 152 1 312 1 17 1 274 1 114 1 67 1 317 1 121 1 329 1 34 1 289 1 214 1 138 1 40 2 251 1 
319 1 135 1 227 1 
319 1 135 1 227 1 
33 1 104 1 
33 1 104 1 227 1 
183 1 242 1 
180 1 89 1 182 1 183 1 46 1 256 1 298 1 225 2 187 1 266 1 265 1 309 1 228 1 14 1 151 1 312 1 17 1 198 1 112 1 114 2 67 1 242 1 34 2 289 2 214 2 138 1 40 1 
1 1 141 1 295 2 225 2 52 1 304 1 226 1 12 1 190 2 230 2 231 1 272 1 107 1 273 1 160 1 200 1 69 1 164 1 125 1 203 1 322 1 245 2 207 1 127 1 75 2 165 1 128 2 166 2 171 1 211 2 172 1 286 1 131 2 34 2 35 1 214 2 
5 1 294 1 295 2 91 1 296 2 161 1 279 1 300 1 206 1 204 1 75 1 29 1 324 1 78 1 131 2 211 2 58 1 272 1 178 1 
5 1 294 1 295 1 91 1 296 2 161 1 279 1 318 1 206 1 204 1 75 1 29 1 78 1 131 1 211 1 58 1 272 1 
66 1 316 1 294 1 25 1 295 1 245 1 75 1 285 1 131 1 211 1 15 1 230 1 272 1 178 1 
5 1 294 1 295 1 91 1 296 2 161 1 279 1 300 1 206 1 204 1 75 1 29 1 78 1 131 1 211 1 58 1 272 1 178 1 
19 1 
129 1 97 1 153 1 137 1 303 1 108 1 95 1 
2 1 219 1 182 1 298 1 299 1 301 1 267 1 97 1 98 1 153 2 23 1 21 1 129 1 134 1 137 1 85 1 250 1 
182 5 184 2 95 1 261 2 188 2 267 4 98 4 97 8 101 2 102 3 272 3 110 1 23 6 276 6 26 2 202 2 203 3 205 1 129 7 285 1 209 2 131 3 211 3 132 2 288 1 134 4 137 2 41 2 140 6 219 5 295 3 48 2 50 2 298 5 299 3 145 2 301 12 303 1 54 1 230 3 153 8 57 2 62 1 238 2 71 1 321 2 245 10 75 4 324 1 169 1 327 2 83 2 250 4 
140 5 219 1 182 1 253 1 9 1 50 2 298 1 299 1 145 2 301 6 261 1 267 2 268 1 311 1 98 2 97 5 101 1 153 5 234 1 23 3 276 5 26 2 243 1 205 1 129 6 325 1 77 1 31 1 132 2 134 2 137 2 215 1 250 2 41 2 
182 1 221 1 298 1 225 1 145 2 267 1 191 1 99 1 98 1 97 2 101 1 111 1 114 1 278 1 317 1 27 1 121 1 129 2 76 1 246 1 329 1 34 1 134 1 289 1 214 1 250 1 38 1 41 2 
303 1 95 1 129 1 267 1 134 1 98 1 97 1 153 1 137 1 250 1 
140 5 23 5 276 5 26 2 50 2 145 2 301 10 129 3 327 1 132 2 97 5 101 1 153 5 41 2 
219 1 182 1 153 1 298 1 137 1 299 1 
0 1 219 4 182 3 295 4 298 3 299 2 261 2 267 2 230 1 98 2 97 2 272 1 66 1 237 1 25 1 71 2 122 1 205 2 245 1 75 1 285 2 129 2 168 1 211 4 131 4 133 1 288 1 134 2 250 1 
3 1 87 1 295 1 221 2 225 3 52 1 147 1 187 1 190 2 230 1 107 1 272 1 235 1 114 2 277 1 200 1 69 1 317 1 164 1 125 1 322 1 203 1 245 1 75 1 165 1 166 1 285 1 211 1 131 1 34 3 289 2 214 2 
140 2 23 2 276 2 301 4 205 1 261 1 129 1 267 1 97 2 134 1 98 1 153 4 137 2 139 1 250 1 
266 1 312 1 61 1 
266 1 330 1 312 1 242 1 109 1 
266 1 312 1 61 1 
266 1 312 1 61 1 
266 1 312 1 42 1 
266 1 312 1 42 1 
266 1 312 1 42 1 
266 1 312 1 
14 1 138 1 
4 1 24 1 116 1 220 1 278 1 200 2 69 4 239 3 145 1 322 2 52 2 166 8 246 1 76 1 190 4 229 2 286 4 107 2 139 1 38 1 
116 1 220 1 278 1 69 3 239 2 145 1 166 6 76 1 246 1 229 2 286 3 139 1 38 1 108 1 
4 1 200 1 69 1 26 1 239 2 50 1 145 1 322 1 52 1 166 3 190 2 229 1 192 1 286 2 132 1 107 1 
4 1 26 1 69 3 239 2 143 1 50 1 243 1 145 1 166 6 229 1 31 2 286 3 132 1 234 1 
4 4 220 1 143 1 50 2 145 3 302 1 52 2 190 4 229 5 233 1 107 2 116 1 24 2 278 2 200 2 69 10 26 2 239 9 243 2 322 2 208 1 166 21 246 1 76 2 286 11 31 2 132 2 139 1 38 1 
166 1 31 1 69 1 
166 1 286 1 243 1 
4 1 200 1 69 2 26 1 239 3 50 1 145 1 322 1 52 1 166 5 190 2 229 2 192 1 286 3 327 1 132 1 107 1 
4 1 253 1 50 2 9 1 145 2 52 1 190 2 268 1 229 1 234 1 107 1 200 1 69 4 26 2 239 2 243 1 322 1 166 10 77 1 31 1 286 6 132 2 328 1 215 1 
4 1 278 1 69 3 239 2 145 1 166 6 246 1 76 1 229 1 286 3 38 1 
4 1 116 1 24 1 278 1 220 1 200 1 69 2 239 2 322 1 52 1 208 1 166 3 76 1 190 2 229 1 286 1 107 1 
4 2 278 2 200 1 69 5 27 1 239 5 145 2 322 1 52 1 166 10 76 2 246 2 190 2 229 3 286 5 328 1 107 1 38 1 
4 1 200 1 239 1 50 1 145 1 322 1 52 1 166 2 190 2 286 2 328 1 107 1 
4 1 200 1 69 1 26 1 239 2 50 1 145 1 322 1 52 1 166 3 190 2 229 1 286 2 132 1 328 1 107 1 
4 1 24 1 278 1 200 3 69 2 239 2 322 3 52 3 208 1 166 3 76 1 190 6 229 1 286 1 248 1 328 1 107 3 
4 5 220 1 143 1 50 3 145 5 260 1 52 5 146 1 190 10 229 7 192 1 234 1 107 5 116 1 24 2 278 3 200 5 69 15 26 3 239 12 243 3 322 5 283 1 208 1 166 31 246 2 76 3 31 4 286 16 248 1 132 3 328 1 139 1 38 2 
220 1 145 1 52 1 190 2 229 2 234 1 107 1 116 1 278 1 200 1 69 4 239 2 243 1 322 1 166 8 246 1 76 1 31 1 286 4 328 1 139 1 215 1 38 1 
4 1 220 1 143 1 50 1 145 2 52 2 190 4 229 2 192 1 234 1 107 2 116 1 278 1 200 2 69 5 239 3 243 1 322 2 166 11 246 1 76 1 31 2 286 6 132 1 328 1 139 1 38 1 215 1 
4 1 220 1 253 1 50 2 9 1 145 3 52 3 190 6 268 1 229 3 192 1 234 1 107 3 116 1 24 1 278 1 200 3 69 8 26 2 239 4 243 1 322 3 166 17 246 1 76 1 77 1 31 1 286 9 132 2 328 1 139 1 38 1 215 1 
4 2 220 1 253 1 50 2 9 1 145 3 52 3 190 6 268 1 229 3 192 1 234 1 107 3 116 1 24 1 278 1 200 3 69 6 26 1 239 5 243 1 322 3 166 16 246 1 76 1 77 1 31 1 286 10 132 2 328 1 139 1 38 1 215 1 
220 1 145 1 52 1 190 2 229 2 234 1 107 1 116 1 278 1 200 1 69 4 239 2 243 1 322 1 166 8 246 1 76 1 31 1 286 4 328 1 139 1 215 1 38 1 
4 1 253 1 50 2 9 1 145 2 52 1 190 2 268 1 229 1 234 1 107 1 200 1 69 4 26 2 239 2 243 1 322 1 166 10 77 1 31 1 286 6 132 2 328 1 215 1 
4 2 220 1 253 1 9 1 50 2 145 3 52 4 190 8 268 1 229 3 192 1 234 1 107 4 116 1 24 2 278 1 200 4 69 7 26 1 239 5 243 1 322 4 166 17 246 1 76 1 77 1 31 1 286 10 132 2 328 1 139 1 38 1 215 1 
4 3 253 1 9 1 50 3 145 3 52 4 190 8 268 1 229 3 234 1 107 4 24 2 200 4 69 5 26 2 239 6 243 1 322 4 166 14 77 1 31 1 286 9 248 1 132 3 328 1 215 1 
4 3 116 2 220 1 278 3 69 4 239 6 145 1 166 7 246 1 76 3 229 3 286 3 38 1 
4 1 220 1 253 1 9 1 50 2 145 3 52 4 190 8 268 1 229 3 234 1 107 4 116 1 24 2 278 1 200 4 69 7 26 1 239 4 243 1 322 4 166 17 246 1 76 1 77 1 31 1 286 10 248 1 132 2 328 1 139 1 38 1 215 1 
187 1 79 1 34 1 232 1 7 1 214 1 225 1 
88 1 7 1 224 1 72 1 225 1 187 1 79 1 34 1 232 1 155 1 214 1 176 1 
285 1 66 1 211 1 131 1 230 1 25 1 295 1 272 1 108 1 245 1 75 1 
3 1 114 1 277 1 295 1 201 1 225 2 203 1 245 1 75 1 285 1 187 1 131 1 211 1 230 1 34 2 289 1 214 1 272 1 
22 1 3 1 114 2 277 1 295 1 201 1 71 1 321 1 297 1 225 2 203 2 245 3 75 1 209 1 187 1 131 1 211 1 230 2 99 1 34 2 289 1 214 2 272 1 
3 1 295 2 257 1 258 1 297 1 225 2 187 1 230 2 99 1 272 1 22 1 114 2 71 1 201 1 321 1 203 2 245 3 75 1 209 1 211 2 131 2 34 2 289 1 214 2 
219 1 182 2 295 3 257 1 184 1 222 1 48 1 144 1 298 2 230 1 153 1 102 1 272 1 71 1 321 1 203 1 245 4 75 1 209 1 285 1 211 3 131 3 137 1 
219 1 182 2 238 1 295 3 257 1 184 1 48 1 71 1 321 1 298 2 203 1 245 4 75 1 285 1 209 1 131 3 211 3 230 1 153 1 102 1 137 1 272 1 
211 1 131 1 295 1 37 1 272 1 75 1 
141 2 255 1 295 3 203 2 304 1 207 1 245 3 75 4 285 2 324 1 54 1 55 1 131 3 211 3 230 3 35 2 272 2 273 1 216 1 
3 1 87 1 92 1 262 1 187 2 190 4 107 2 272 1 114 1 277 1 116 1 278 1 200 2 201 1 124 1 281 1 203 1 30 1 211 1 131 1 286 3 34 2 289 1 214 1 38 1 139 1 220 1 295 1 225 2 145 1 52 2 226 1 229 2 230 1 235 1 69 3 239 2 164 2 322 2 245 1 165 2 75 1 166 6 76 1 246 1 324 1 171 1 
219 2 180 1 182 3 295 1 184 1 48 1 298 3 299 1 303 1 95 1 267 2 188 1 97 1 98 2 153 1 102 1 238 1 202 1 245 2 129 1 285 1 131 1 211 1 288 1 134 2 83 1 137 1 250 2 
295 2 184 1 203 1 245 2 75 2 324 1 54 1 131 2 211 2 230 1 37 1 272 1 110 1 
66 1 25 1 295 4 257 1 245 1 75 1 285 1 324 1 131 4 211 4 230 1 272 1 217 1 
141 1 295 2 71 1 203 1 304 1 245 1 75 2 131 2 211 2 230 1 194 1 35 1 272 1 273 1 
285 1 29 1 211 1 131 1 295 1 296 1 161 1 272 1 204 1 75 1 
5 1 141 1 295 2 203 1 207 1 245 2 304 1 75 2 324 1 131 2 211 2 230 2 231 1 35 1 272 1 273 1 
141 1 295 2 255 1 203 1 207 1 245 2 304 1 75 2 285 1 324 1 131 2 211 2 230 2 35 1 272 1 273 1 
141 1 295 2 203 1 207 1 245 2 304 1 75 2 285 1 324 1 131 2 211 2 230 2 81 1 35 1 272 1 273 1 
3 1 114 1 295 1 201 1 258 1 225 2 203 1 245 1 75 1 285 1 187 1 131 1 211 1 230 1 34 2 289 1 214 1 272 1 
141 1 295 1 71 1 203 1 245 1 75 2 54 1 131 1 211 1 230 1 35 1 272 1 216 1 
187 1 68 1 241 1 51 1 94 1 
22 1 64 1 180 1 65 1 68 2 182 2 6 1 48 1 241 2 297 1 51 1 298 2 94 2 187 1 99 1 153 1 196 1 137 1 271 1 
160 1 68 1 34 1 241 1 214 1 51 1 225 1 127 1 12 1 
64 1 6 1 51 1 
212 1 162 1 123 1 108 1 
249 1 84 1 305 1 
120 1 320 1 70 1 
45 1 249 1 84 1 305 1 
249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 292 1 
45 1 249 1 84 1 305 1 
45 1 296 1 249 1 84 1 204 1 305 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
120 1 249 1 49 1 84 1 159 1 305 2 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
16 1 162 2 126 2 284 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
60 1 
45 1 249 1 84 1 305 1 
45 1 249 1 84 1 305 1 
287 1 162 1 59 1 159 1 
162 1 123 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (218,332) 342 (156,274) (156,274) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (218,332) 342 (156,274) (156,274) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (218,332) 342 (156,274) (156,274) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (218,332) 342 (156,274) (156,274) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 189 55 4 358 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 141 1 36 1 342 1 112 1 134 1 156 1 47 1 260 1 97 1 274 1 
218 1 141 1 36 1 342 1 112 1 134 1 156 1 47 1 260 1 97 1 274 1 
218 1 141 1 36 1 342 1 112 1 134 1 156 1 47 1 260 1 97 1 274 1 
218 1 141 1 36 1 342 1 112 1 134 1 156 1 47 1 260 1 97 1 274 1 
225 1 36 1 193 1 112 1 97 1 100 1 329 1 45 2 227 3 229 1 141 4 47 4 108 3 26 1 318 1 239 2 354 1 254 1 
338 1 36 1 112 1 345 1 134 1 97 1 260 1 329 1 229 1 364 1 187 1 141 2 47 2 108 1 354 1 254 1 
36 1 112 2 134 1 97 2 227 1 229 1 141 3 47 3 332 1 108 2 318 1 239 1 354 1 
36 1 193 1 97 2 100 1 45 2 63 1 47 9 108 5 354 1 254 1 225 1 112 2 134 1 204 1 329 1 227 7 229 1 141 9 331 1 120 1 332 1 26 1 239 4 318 3 
36 1 193 1 97 2 100 1 45 2 63 1 47 9 108 5 354 1 254 1 225 1 112 2 134 1 204 1 329 1 227 7 229 1 141 9 331 1 120 1 332 1 26 1 239 4 318 3 
359 1 
189 1 
68 1 186 2 74 2 59 2 206 2 199 2 143 1 208 2 
243 1 367 2 74 2 341 1 37 2 59 3 129 1 44 1 149 1 60 1 348 1 131 1 222 1 11 1 199 2 68 1 372 1 200 1 116 2 308 1 374 1 18 2 206 2 207 1 184 1 208 2 139 1 186 3 88 1 235 1 70 1 191 1 143 1 144 2 31 1 32 1 240 1 
244 1 192 1 186 1 74 1 164 1 59 1 206 1 199 1 143 1 208 1 
244 1 35 1 344 1 327 1 202 1 248 1 59 1 206 1 300 1 186 1 90 1 9 1 237 1 317 1 
244 1 74 1 35 1 327 2 202 1 248 1 59 1 206 1 208 1 300 1 186 1 90 1 237 2 317 1 199 1 
231 1 237 1 327 1 75 1 378 1 
237 2 327 2 202 1 75 1 317 1 110 1 19 1 378 1 
237 1 327 1 75 1 
244 1 192 1 74 1 327 1 59 1 206 1 208 1 186 1 234 1 164 1 237 1 143 1 199 1 378 1 
317 1 
237 2 327 2 202 1 75 1 259 1 317 1 19 1 378 1 
83 2 327 5 202 1 271 1 75 2 251 1 183 2 228 2 264 1 312 1 19 1 140 1 23 1 105 1 237 5 106 1 317 1 378 2 146 1 
359 1 
68 2 74 1 201 1 59 2 206 2 208 1 186 2 302 1 199 1 
173 1 249 1 109 1 
68 1 372 1 367 1 200 1 116 1 38 1 59 1 149 1 60 1 348 1 139 1 186 1 88 1 222 1 144 1 31 1 
372 1 367 1 200 1 74 1 116 1 59 2 206 1 149 1 60 1 348 1 139 1 88 1 186 2 222 1 303 1 109 1 199 1 31 1 133 1 144 1 
68 1 186 3 74 3 59 3 206 3 199 3 133 1 208 1 
244 1 192 1 186 1 74 1 59 1 206 1 199 1 
244 1 186 1 74 1 302 1 201 1 59 1 206 1 199 1 208 1 
243 1 244 1 367 1 74 3 35 1 341 1 37 2 195 1 248 1 59 4 129 1 149 1 60 1 348 1 300 1 252 1 302 1 222 1 303 1 11 1 199 3 133 1 68 1 372 1 200 1 327 1 116 1 374 1 18 1 206 3 207 1 208 2 139 1 88 1 186 4 90 1 235 1 237 1 70 1 191 1 143 1 31 1 144 1 240 1 
68 1 186 2 74 1 9 1 296 1 59 2 206 2 199 1 133 1 
244 1 74 3 35 1 126 1 327 1 195 1 248 1 59 3 206 3 208 1 300 1 186 3 90 1 302 1 237 1 303 1 317 1 199 3 133 2 
74 2 249 1 59 2 206 2 208 1 186 2 302 1 109 1 199 2 133 1 
68 1 372 1 367 1 200 1 116 1 59 1 60 1 149 1 348 1 139 1 186 1 88 1 222 1 144 1 31 1 
68 1 372 1 244 1 367 1 200 1 116 1 59 1 149 1 348 1 139 1 186 1 365 1 222 1 166 1 71 1 144 1 31 1 
341 1 37 2 173 2 249 2 44 2 61 1 299 1 78 1 79 1 109 2 353 1 15 1 374 2 285 1 117 1 18 4 207 1 290 1 235 1 25 1 294 1 70 1 191 1 240 1 
244 1 186 1 35 1 74 1 24 1 59 1 206 1 199 1 
68 1 74 4 247 1 296 1 59 5 206 5 208 1 162 1 186 5 9 1 302 1 303 1 199 4 133 2 
244 1 192 1 186 2 24 1 74 2 59 2 206 2 199 2 
236 1 52 1 
236 1 52 1 
219 1 255 1 
219 1 255 1 
219 1 255 1 
371 1 236 1 52 1 
236 1 52 1 96 1 
314 1 219 1 236 2 369 1 52 2 255 1 
371 1 236 1 52 1 
371 1 236 1 52 1 
236 1 52 1 160 1 
236 1 52 1 160 1 
236 1 52 1 160 1 
320 2 171 1 327 2 135 1 357 1 52 2 101 2 311 2 321 1 289 3 314 1 330 2 236 2 267 2 237 2 165 1 317 1 180 1 241 1 
320 1 74 2 96 1 59 2 101 1 273 1 176 1 220 1 305 1 199 2 68 1 327 1 52 1 206 2 311 1 262 1 289 1 186 2 330 1 236 1 237 1 333 1 212 1 241 1 
100 1 329 1 254 1 
364 1 329 1 254 1 
364 1 265 1 368 1 100 2 6 1 254 3 
364 1 265 1 121 1 100 1 6 1 254 2 
364 1 265 2 100 1 6 1 254 2 
192 1 244 1 0 2 98 1 59 1 251 3 61 1 152 1 199 1 154 2 306 2 15 1 202 1 206 1 360 1 20 1 19 1 312 1 208 1 264 2 164 1 317 3 124 2 74 1 75 1 221 1 83 1 327 5 183 1 228 1 186 1 290 1 234 1 237 5 333 1 294 1 190 1 189 4 143 1 378 4 
192 1 244 1 59 1 251 3 61 1 351 1 199 1 154 2 306 2 15 1 202 1 206 1 360 1 208 1 20 1 19 1 312 1 264 2 164 1 317 3 319 1 124 2 74 1 75 3 43 2 221 1 83 1 327 5 183 1 228 1 231 2 186 1 290 1 234 1 237 5 333 1 294 1 190 1 189 4 143 1 378 4 
244 1 192 1 74 1 0 1 59 1 98 1 251 3 61 1 152 1 221 1 199 1 154 2 306 2 83 1 15 1 327 3 202 1 206 1 183 1 360 1 228 1 208 1 264 2 186 1 290 1 234 1 140 1 164 1 237 3 333 1 294 1 317 3 190 1 189 4 143 1 124 2 378 2 
0 1 98 1 251 3 61 1 152 1 221 1 154 2 306 2 83 1 15 1 327 2 183 1 360 1 228 1 264 2 290 1 140 1 237 2 333 1 294 1 317 2 189 4 28 1 190 1 124 2 378 1 
359 1 
123 1 149 1 
363 1 
149 1 139 1 
326 1 270 1 149 3 348 1 56 2 139 1 
149 1 348 1 139 1 
198 1 149 1 
50 1 15 1 374 3 310 1 346 1 18 7 44 4 61 1 299 3 298 1 150 1 362 1 177 1 79 2 279 2 292 1 242 1 
50 1 15 1 374 3 310 1 346 1 18 7 44 4 61 1 299 3 298 1 150 1 362 1 177 1 79 2 279 2 292 1 242 1 
50 1 15 1 374 3 310 1 346 1 18 7 44 4 61 1 299 3 298 1 150 1 362 1 177 1 209 1 79 2 279 2 292 1 242 1 
147 3 341 1 37 2 346 3 99 1 44 17 298 1 61 5 299 13 150 2 7 1 8 1 177 1 79 6 279 1 280 1 10 1 282 1 50 3 15 5 374 17 310 1 261 4 18 34 360 3 69 1 362 1 290 3 235 1 292 7 294 3 191 1 30 1 240 1 242 2 
341 2 37 4 99 1 346 1 44 5 61 1 299 4 150 1 177 1 79 3 279 2 46 1 50 1 15 1 84 1 374 4 18 9 310 1 362 1 235 2 292 1 191 2 240 2 242 1 
367 1 36 1 194 1 368 1 97 1 3 1 100 1 151 1 107 1 47 2 108 1 222 1 354 1 254 2 14 1 182 1 112 1 134 1 116 1 329 1 227 1 229 1 230 1 21 1 313 1 364 1 141 2 211 1 144 1 31 1 
367 1 368 1 194 1 174 1 97 1 3 1 100 1 151 1 107 1 47 3 108 1 222 1 354 1 254 2 14 1 182 1 112 1 115 1 134 1 116 1 329 1 227 2 229 1 230 1 21 1 364 1 141 3 144 1 31 1 33 1 
367 1 194 1 368 1 174 1 100 1 151 1 107 1 47 2 108 1 222 1 354 1 254 2 14 1 182 1 134 1 115 1 116 1 329 1 227 2 229 1 21 1 364 1 141 2 144 1 31 1 
372 1 367 1 112 1 134 2 128 1 116 1 97 1 21 2 233 1 151 2 141 1 197 1 47 1 107 2 144 1 72 1 33 1 
367 1 182 1 14 1 36 1 368 1 194 1 112 1 134 1 115 1 116 1 97 1 3 1 100 1 329 1 230 1 364 1 21 1 151 1 141 1 47 1 107 1 222 1 211 1 31 1 144 1 254 2 
224 1 
244 1 295 1 344 1 57 1 2 1 248 1 59 1 250 1 251 2 149 1 300 1 349 1 253 1 9 1 67 1 306 1 116 2 159 1 206 1 19 1 264 2 312 1 317 1 31 1 125 1 367 2 35 1 75 2 214 2 215 1 222 1 372 2 181 1 83 1 283 1 327 3 284 1 85 1 286 1 137 1 183 1 228 1 139 1 186 1 90 1 237 3 55 1 189 1 190 1 144 2 
244 1 35 1 344 1 57 1 75 2 214 2 248 1 59 1 300 1 349 1 9 1 253 1 327 3 284 1 259 1 206 1 19 1 87 1 186 1 90 1 237 3 125 1 
244 1 35 1 344 1 75 1 57 1 214 3 248 1 59 1 300 1 349 1 9 1 253 1 179 1 327 3 284 1 202 1 259 1 206 1 19 1 186 1 90 1 237 3 317 1 125 1 
244 1 35 1 344 1 57 1 75 2 214 3 248 1 59 1 300 1 349 1 9 1 253 1 179 1 327 3 259 1 284 1 202 1 206 1 19 1 87 1 186 1 90 1 237 3 317 1 29 1 125 1 
244 1 295 1 344 1 57 1 248 1 59 1 4 1 251 1 300 1 349 1 253 1 9 1 306 2 259 1 202 5 206 1 19 3 312 1 264 1 317 5 29 4 167 1 125 1 35 1 75 7 214 6 215 2 324 1 179 4 82 1 181 2 83 1 373 1 327 5 284 1 286 2 183 1 287 2 228 1 87 4 90 1 186 1 237 5 55 1 
244 1 35 1 295 1 344 1 57 1 214 2 248 1 59 1 251 1 215 1 300 1 349 1 253 1 9 1 306 1 181 1 83 1 327 2 284 1 159 1 286 1 183 1 206 1 228 1 264 1 312 1 186 1 90 1 237 2 55 1 317 1 189 1 125 1 
244 1 295 1 35 1 344 1 75 4 57 1 214 4 248 1 4 1 59 1 251 1 215 2 300 1 349 1 9 1 253 1 324 1 179 2 306 2 181 2 83 1 327 4 202 1 284 1 286 2 287 2 206 1 183 1 228 1 19 2 264 1 312 1 87 2 186 1 90 1 237 4 55 1 317 1 29 2 167 1 125 1 
244 1 295 1 35 1 344 1 75 4 57 1 214 4 248 1 4 1 59 1 251 1 215 2 300 1 349 1 9 1 253 1 324 1 179 2 306 2 181 2 83 1 327 4 202 1 284 1 286 2 287 2 206 1 183 1 228 1 19 2 264 1 312 1 87 2 186 1 90 1 237 4 55 1 317 1 29 2 167 1 125 1 
73 1 244 1 35 1 344 1 57 1 214 2 248 1 4 1 59 1 251 1 215 1 300 1 349 1 9 1 253 1 132 1 181 1 83 1 327 2 284 1 358 1 206 1 183 1 118 1 228 1 264 1 312 1 186 1 90 1 237 2 55 1 189 1 125 1 
244 1 295 1 35 1 344 1 57 1 75 5 214 5 248 1 4 1 59 1 251 1 215 2 300 1 349 1 324 1 9 1 253 1 179 3 306 2 181 2 82 1 83 1 327 4 202 1 284 1 286 2 287 2 183 1 206 1 228 1 19 2 264 1 312 1 87 3 186 1 90 1 237 4 55 1 317 1 29 3 167 1 125 1 
244 1 295 1 35 1 344 1 57 1 75 5 214 5 248 1 4 1 59 1 251 1 215 2 300 1 349 1 324 1 9 1 253 1 179 3 306 2 181 2 82 1 83 1 327 4 202 1 284 1 286 2 287 2 183 1 206 1 228 1 19 2 264 1 312 1 87 3 186 1 90 1 237 4 55 1 317 1 29 3 167 1 125 1 
244 1 344 1 57 1 248 1 59 1 251 1 300 1 349 1 9 1 253 1 202 1 159 1 206 1 118 2 312 1 264 1 19 2 317 1 29 2 125 1 35 1 75 4 214 4 215 2 132 1 179 2 49 2 181 2 83 1 327 4 284 1 183 1 228 1 87 2 90 1 186 1 237 4 55 1 189 2 
235 1 341 1 37 2 70 1 359 1 117 1 191 1 207 1 240 1 
339 1 147 3 341 2 37 4 173 11 249 4 44 8 299 2 61 2 276 1 301 1 79 1 280 1 10 1 109 11 11 1 68 1 15 1 258 1 374 6 261 3 18 14 207 1 360 2 290 2 235 2 292 1 70 2 294 1 191 2 377 1 32 1 240 2 
367 1 74 1 341 1 37 2 38 1 249 1 59 2 347 1 44 1 149 1 60 1 348 1 276 1 64 1 222 1 303 1 11 1 199 1 133 1 68 1 372 1 200 1 116 1 16 1 374 1 18 2 206 1 207 1 139 1 88 1 186 2 235 1 70 1 191 1 31 1 144 1 240 1 32 1 
337 2 341 3 346 1 59 3 249 7 60 2 149 2 348 2 61 3 299 8 62 1 103 2 104 2 303 1 109 7 11 1 199 1 68 2 200 2 15 3 115 1 116 3 157 2 205 1 310 1 18 20 206 1 207 3 360 2 362 1 70 3 31 2 32 1 367 3 74 1 37 6 173 7 129 2 44 10 276 1 177 1 79 4 279 1 222 2 133 1 50 1 372 1 374 10 139 2 186 3 88 2 290 2 235 3 292 4 294 2 191 3 144 3 240 3 93 1 
367 7 74 1 341 2 37 4 77 1 59 1 42 1 272 1 44 1 149 3 323 1 222 2 11 1 199 1 133 1 372 2 115 1 283 1 116 8 85 1 374 1 117 1 18 2 206 1 207 2 184 2 139 2 161 1 313 1 186 1 235 2 27 1 70 2 269 1 191 2 31 2 144 8 240 2 32 1 
74 1 341 1 37 2 173 1 95 1 249 1 59 1 44 1 299 1 61 1 276 1 79 1 302 1 109 1 199 1 15 1 374 2 18 3 206 1 207 1 360 1 208 1 186 1 290 1 235 1 70 1 294 1 191 1 240 1 
341 1 37 2 173 1 285 1 249 1 18 2 117 1 207 1 44 2 299 1 61 1 290 1 235 1 292 1 70 1 109 1 191 1 240 1 
341 1 15 1 37 2 173 1 374 2 249 1 18 2 117 1 207 1 299 1 79 1 235 1 70 1 294 1 109 1 191 1 353 1 240 1 
341 1 37 2 173 2 249 2 44 2 61 1 299 2 79 1 109 2 15 1 374 2 117 1 18 4 360 1 207 1 290 1 235 1 292 1 70 1 294 1 191 1 240 1 
341 1 37 2 173 1 285 1 249 1 18 2 272 1 207 1 44 2 299 1 61 1 290 1 235 1 292 1 70 1 109 1 191 1 240 1 
341 1 15 1 37 2 173 1 374 2 249 1 18 2 272 1 207 1 299 1 79 1 235 1 70 1 294 1 109 1 191 1 353 1 240 1 
341 1 37 2 173 2 249 2 44 2 272 1 61 1 299 2 79 1 109 2 15 1 374 2 18 4 360 1 207 1 290 1 235 1 292 1 70 1 294 1 191 1 240 1 
15 1 341 1 37 2 173 2 374 2 249 2 18 4 207 1 360 1 44 2 299 2 61 1 290 1 79 1 235 1 292 1 294 1 70 1 109 2 191 1 240 1 
367 1 341 1 37 2 59 1 129 1 44 1 60 1 149 1 348 1 222 1 11 1 68 1 372 1 200 1 116 1 374 1 18 2 207 1 139 1 88 1 186 1 235 1 70 1 191 1 31 1 144 1 32 1 240 1 
244 1 367 1 341 1 37 2 59 1 149 1 348 1 222 1 11 1 68 1 372 1 200 1 356 1 116 1 374 1 18 1 207 1 139 1 365 1 186 1 235 1 166 1 70 1 71 1 191 1 31 1 144 1 240 1 
341 1 37 2 173 2 249 2 44 2 61 1 299 2 276 1 79 1 109 2 15 1 374 2 18 4 360 1 207 1 290 1 235 1 292 1 70 1 294 1 191 1 240 1 
367 1 341 1 37 2 173 2 249 2 59 1 129 1 44 2 60 1 149 1 299 2 61 1 348 1 79 1 103 1 222 1 109 2 200 1 15 1 116 1 374 2 18 4 207 1 360 1 139 1 313 1 290 1 88 1 186 1 235 1 292 1 294 1 70 1 191 1 31 1 144 1 240 1 
74 1 341 1 37 2 173 1 59 1 249 1 44 2 299 1 61 1 276 1 302 1 109 1 199 1 15 1 374 1 18 3 206 1 207 1 360 1 361 1 208 1 186 1 290 1 235 1 292 1 294 1 70 1 191 1 240 1 
34 1 147 3 341 3 343 1 37 6 1 1 39 1 40 1 346 1 99 1 44 20 322 1 61 5 299 8 102 4 177 1 79 4 279 1 46 1 280 3 281 1 10 1 13 1 50 1 355 1 15 5 113 1 374 21 310 1 261 4 18 41 360 4 362 1 232 1 290 4 235 3 292 4 316 1 188 1 294 4 191 3 145 2 240 3 
34 1 147 3 341 4 343 1 37 8 1 1 39 1 40 1 346 1 99 2 44 20 322 1 61 5 299 7 102 4 177 1 79 4 279 1 46 1 280 3 281 1 10 1 13 1 50 1 355 1 15 4 113 1 374 18 310 1 261 4 18 38 360 4 362 1 232 1 290 4 235 4 292 3 316 1 188 1 294 3 191 4 145 2 240 4 
34 1 147 4 341 2 343 1 37 4 39 1 40 1 346 1 99 1 44 27 322 1 61 8 299 14 102 4 177 1 301 2 79 7 279 1 46 1 280 2 281 1 10 2 13 1 50 1 355 1 15 8 113 1 374 25 310 1 261 4 18 52 360 7 362 1 232 1 290 7 235 2 292 7 188 1 294 7 191 2 145 1 240 2 
147 1 341 2 37 4 1 1 40 1 44 9 322 1 61 3 299 6 102 2 79 3 46 1 280 1 10 1 13 1 355 2 15 3 374 10 261 2 18 19 360 3 290 3 235 2 292 3 188 1 294 3 168 1 191 2 145 1 240 2 
34 1 147 2 341 3 343 1 37 6 39 1 40 1 99 2 44 14 322 1 299 4 61 3 102 4 79 2 46 1 280 2 281 1 13 2 355 1 15 2 113 1 374 12 18 26 261 2 360 3 232 1 290 3 235 3 292 2 188 1 294 2 191 3 145 2 240 3 
314 1 320 1 178 1 330 1 236 1 165 1 52 1 101 1 311 1 321 1 
220 1 96 1 
320 1 330 1 236 1 148 1 52 1 307 1 5 1 101 1 311 1 
320 1 171 1 327 1 135 1 357 1 52 1 101 1 311 1 321 1 289 2 314 1 330 1 236 1 267 1 237 1 165 1 317 1 241 1 
320 1 171 1 327 1 135 1 357 1 52 1 101 1 311 1 321 1 289 2 314 1 330 1 236 1 267 1 237 1 165 1 317 1 241 1 
320 1 171 1 327 1 135 1 357 1 52 1 101 1 311 1 321 1 289 2 314 1 330 1 236 1 267 1 237 1 165 1 317 1 241 1 
371 1 369 1 275 1 
371 1 369 1 275 1 
89 1 160 1 
89 1 369 1 160 1 
273 1 176 1 
320 1 74 2 96 1 59 2 101 1 273 1 176 1 220 1 305 1 199 2 68 1 135 1 327 1 52 1 206 2 311 1 262 1 289 1 186 2 330 1 267 1 236 1 237 1 333 1 212 1 170 1 378 1 
371 1 275 1 
89 1 369 1 160 1 
94 1 367 2 341 1 37 2 59 2 42 1 44 1 149 1 276 1 222 1 153 1 11 1 116 2 17 1 374 1 18 2 206 2 207 1 328 1 184 2 139 1 161 1 186 2 235 1 366 1 70 1 191 1 31 1 144 2 240 1 32 1 
367 2 14 1 182 1 368 1 245 1 115 1 116 2 3 1 100 1 329 1 364 1 21 1 313 1 130 1 222 1 325 1 31 1 144 2 254 2 
367 1 14 1 182 1 368 1 115 1 116 1 3 1 100 1 329 1 364 1 21 1 238 1 222 1 325 1 144 1 31 1 254 2 
21 1 372 1 130 1 367 1 54 1 116 1 144 1 72 1 
367 1 14 1 182 1 368 1 245 1 115 1 116 1 3 1 100 1 329 1 364 1 21 1 130 1 222 1 325 1 31 1 144 1 254 2 
370 1 
359 1 
83 1 295 1 286 1 183 1 251 1 228 1 312 1 264 1 317 1 189 1 306 1 
58 2 2 1 248 2 251 8 149 6 348 1 61 2 65 1 104 2 352 2 154 6 306 6 15 2 116 1 202 1 360 2 312 3 19 3 264 7 123 3 317 7 124 6 31 2 367 1 213 1 75 5 175 2 278 2 48 2 222 1 223 1 372 1 83 3 326 1 327 5 183 3 228 3 139 1 290 2 237 5 293 2 294 2 190 2 189 12 144 1 56 2 
34 1 147 1 343 1 75 1 2 1 251 8 61 2 280 1 281 1 48 2 154 5 306 3 83 2 15 2 113 1 327 1 202 2 261 1 183 2 360 2 228 2 19 1 312 2 264 5 232 1 290 2 291 1 237 1 334 1 294 2 335 1 317 5 190 1 189 6 124 5 
244 1 192 1 74 1 59 1 346 1 251 2 61 2 7 1 324 1 48 2 199 1 50 1 83 1 15 1 327 1 310 1 183 1 206 1 228 1 312 1 264 2 208 1 186 1 234 1 291 1 164 1 237 1 143 1 
83 1 202 1 183 1 251 1 228 1 312 1 264 1 105 1 317 1 146 1 
15 1 251 2 360 1 61 1 264 2 290 1 48 1 294 1 317 2 189 4 124 2 154 2 306 2 
237 1 327 1 202 1 75 1 317 1 19 1 
367 4 75 4 2 2 297 1 251 2 149 1 222 1 67 1 81 1 372 2 83 2 155 2 327 3 283 1 116 4 85 1 137 1 183 2 228 2 312 1 264 2 19 2 139 1 376 1 140 1 237 3 190 2 31 1 144 4 
243 1 367 1 74 2 341 1 37 2 59 3 129 1 60 1 149 1 348 1 222 1 11 1 199 2 68 1 372 1 200 1 116 1 374 1 18 1 206 2 207 1 208 2 139 1 186 3 88 1 235 1 70 1 191 1 143 1 144 1 31 1 240 1 
83 1 202 2 2 1 183 1 251 1 228 1 264 2 312 1 279 1 317 4 189 4 190 1 124 2 154 2 306 2 
330 1 340 1 311 1 
330 1 165 1 53 1 273 1 311 1 
330 1 340 1 311 1 
330 1 340 1 311 1 
111 1 330 1 311 1 
111 1 330 1 311 1 
111 1 330 1 311 1 
330 1 311 1 
236 1 52 1 
147 1 341 1 37 2 346 1 44 4 61 1 299 2 177 1 79 2 279 1 46 1 280 1 50 1 15 1 113 1 374 4 18 8 261 1 310 1 362 1 235 1 191 1 240 1 
147 1 341 2 37 4 346 1 44 6 61 2 299 3 177 1 79 2 279 1 46 1 280 1 10 1 50 1 15 1 113 1 374 5 310 1 18 11 261 2 360 1 362 1 290 1 235 2 292 1 191 2 169 1 240 2 
34 1 147 1 341 3 343 1 37 6 346 1 99 1 44 9 61 3 299 4 177 1 79 3 279 1 46 1 280 1 281 1 50 1 15 3 113 1 374 10 310 1 18 19 261 1 360 2 362 1 232 1 290 2 235 3 292 1 294 2 191 3 169 1 240 3 
34 1 147 1 341 3 343 1 37 6 346 1 99 1 44 10 61 3 299 5 177 1 79 3 279 1 46 1 280 1 281 1 50 1 15 2 113 1 374 7 310 1 18 17 261 1 360 2 362 1 232 1 290 2 235 3 292 2 294 1 191 3 169 1 240 3 
147 1 341 1 37 2 346 1 44 4 61 1 299 2 177 1 79 2 279 1 46 1 280 1 50 1 15 1 113 1 374 4 18 8 261 1 310 1 362 1 235 1 191 1 240 1 
34 1 147 1 341 1 343 1 37 2 44 6 61 2 299 2 79 1 46 1 280 1 281 1 15 2 113 1 374 6 18 12 261 1 360 2 232 1 290 2 235 1 292 1 294 2 191 1 240 1 
34 1 147 1 341 4 343 1 37 8 346 1 99 2 44 10 61 3 299 5 177 1 79 3 279 1 46 1 280 1 281 1 50 1 15 2 113 1 374 8 310 1 18 18 261 1 360 2 362 1 232 1 290 2 235 4 292 2 294 1 191 4 169 1 240 4 
34 1 147 1 341 4 343 1 37 8 1 1 99 2 44 9 61 3 299 6 79 3 46 1 280 1 281 1 15 2 113 1 374 7 18 16 261 1 360 3 232 1 290 3 235 4 292 3 294 2 191 4 240 4 
50 3 15 1 374 4 18 7 346 3 310 1 44 3 299 6 61 1 362 1 177 2 79 3 292 3 
34 1 147 1 341 4 343 1 37 8 1 1 346 1 99 2 44 10 61 3 299 4 177 1 79 3 279 1 46 1 280 1 281 1 50 1 15 2 113 1 374 8 310 1 18 18 261 1 360 2 362 1 232 1 290 2 235 4 292 1 294 1 191 4 240 4 
50 1 15 1 341 2 37 4 374 4 310 1 18 8 99 1 346 1 44 4 61 1 299 3 362 1 177 1 79 2 235 2 279 1 292 1 191 2 240 2 
359 1 
15 1 341 1 37 2 374 2 18 4 360 1 44 2 299 2 61 1 290 1 79 1 235 1 292 1 294 1 191 1 169 1 240 1 
147 1 15 1 374 4 261 2 18 7 44 3 360 1 61 1 299 2 290 1 79 1 280 1 292 1 10 1 294 1 
147 2 339 1 341 2 37 4 346 2 99 2 41 1 44 11 299 9 61 3 177 1 79 5 301 1 279 1 10 1 50 2 15 3 374 12 310 1 18 23 261 2 360 2 362 1 290 2 235 2 292 4 294 2 191 2 240 2 
374 1 18 1 261 1 
147 1 18 1 44 1 
341 1 15 1 37 2 374 3 18 6 360 1 44 3 61 1 299 3 290 1 235 1 79 2 104 1 292 1 294 1 191 1 169 1 240 1 
34 1 147 1 341 1 343 1 37 2 44 6 61 2 299 2 79 1 46 1 280 1 281 1 15 2 113 1 374 6 18 12 261 1 360 2 232 1 290 2 235 1 292 1 294 2 191 1 240 1 
50 1 15 1 374 3 310 1 18 6 346 1 44 3 61 1 299 2 79 1 292 1 
50 1 341 1 37 2 374 2 346 1 41 1 18 3 99 1 44 1 299 2 362 1 177 1 79 1 235 1 292 1 191 1 240 1 
50 2 341 1 15 2 37 2 374 5 346 2 18 10 310 1 44 5 299 5 61 2 7 1 235 1 79 3 46 1 292 2 191 1 240 1 
341 1 37 2 18 2 44 2 61 1 299 1 290 1 235 1 46 1 292 1 191 1 240 1 
15 1 341 1 37 2 374 2 18 4 360 1 44 2 299 2 61 1 290 1 79 1 235 1 46 1 292 1 294 1 191 1 240 1 
50 1 341 3 37 6 1 1 374 2 99 1 41 1 18 3 346 1 44 1 299 2 235 3 79 1 46 1 292 1 191 3 240 3 
147 3 341 5 37 10 1 1 346 3 41 1 99 2 44 16 61 5 299 12 8 1 177 1 79 7 279 1 46 1 280 1 10 1 50 3 15 5 374 18 310 2 261 4 18 34 69 1 360 3 362 1 290 3 235 5 292 5 294 3 30 1 191 5 169 1 240 5 
68 1 244 1 203 1 296 1 59 1 206 1 186 1 9 1 71 1 
68 1 244 1 114 1 203 1 296 1 59 1 206 1 288 1 277 1 186 1 210 1 266 1 9 1 71 1 
372 1 367 1 116 1 359 1 144 1 
68 1 372 1 367 1 200 1 74 1 116 1 59 2 206 1 149 1 348 1 139 1 186 2 88 1 222 1 199 1 31 1 133 1 144 1 
68 1 244 1 367 1 35 1 200 1 74 1 155 1 116 1 59 2 206 2 149 3 348 2 139 2 90 1 186 2 88 1 198 1 222 1 304 1 199 2 31 1 133 1 144 1 
367 1 244 2 74 1 35 1 59 2 149 3 348 2 222 1 198 1 304 1 199 2 133 1 68 1 200 1 155 1 116 1 206 2 139 2 186 2 90 1 166 1 71 1 144 1 31 1 
367 3 75 1 248 1 149 4 348 1 222 1 198 1 304 1 372 1 155 1 256 1 327 2 136 1 116 3 226 1 202 1 139 1 237 2 123 1 317 1 144 3 31 1 56 1 
372 1 367 3 155 1 327 2 136 1 116 3 202 1 58 1 75 1 248 1 149 4 348 1 139 1 237 2 198 1 222 1 304 1 317 1 123 1 31 1 144 3 56 1 
367 1 116 1 222 1 77 1 31 1 144 1 
372 2 367 6 115 1 326 1 116 7 77 1 86 1 184 1 149 3 323 1 348 1 139 2 161 1 313 1 163 1 222 2 27 1 91 1 269 1 144 7 31 3 
94 1 341 2 249 1 59 2 346 1 60 1 149 1 348 1 299 2 61 1 103 1 109 1 199 1 68 2 200 1 15 1 157 1 116 1 310 1 18 6 206 1 207 2 362 1 313 1 70 2 31 1 367 1 74 1 37 4 173 1 129 1 44 3 276 1 177 1 79 2 279 1 222 1 133 1 50 1 374 3 139 1 88 1 186 2 235 2 191 2 144 1 240 2 
367 1 58 1 75 2 248 1 251 1 175 1 149 2 105 1 352 1 372 1 83 2 327 3 116 1 202 1 183 2 228 2 264 1 312 2 19 1 376 1 237 3 293 1 317 1 123 1 144 1 378 1 146 1 56 1 
367 2 326 1 116 2 77 1 149 2 348 1 139 1 313 1 222 1 223 1 144 2 31 2 56 1 
372 1 367 4 283 1 136 1 116 4 85 1 185 1 149 1 139 1 313 1 222 1 31 1 144 4 
367 2 155 1 116 2 76 1 205 1 309 1 149 1 348 1 139 1 163 1 222 1 91 1 144 2 31 2 
364 1 372 1 367 1 182 1 116 1 222 1 329 1 31 1 144 1 254 1 
161 1 313 1 367 2 366 1 115 1 116 2 222 1 31 1 149 1 144 2 139 1 
372 1 367 4 155 1 283 1 116 5 85 1 185 1 149 3 323 1 139 2 313 1 161 1 222 2 269 1 144 5 31 2 
372 1 367 4 155 1 283 1 116 5 85 1 185 1 149 3 323 1 139 2 313 1 161 1 66 1 222 2 144 5 31 2 
367 1 244 1 74 1 59 2 149 1 348 1 222 1 199 1 133 1 372 1 68 1 200 1 116 1 206 1 139 1 186 2 166 1 71 1 144 1 31 1 
367 1 155 1 326 1 116 1 86 1 149 1 348 1 139 1 163 1 222 1 91 1 144 1 31 2 
68 1 350 1 127 1 158 1 268 1 
68 1 244 1 35 1 327 2 127 2 195 1 202 1 158 1 248 1 138 1 300 1 90 1 22 1 350 2 119 1 237 2 317 1 268 2 378 1 
127 1 158 1 17 1 59 1 206 1 328 1 186 1 268 1 153 1 
119 1 158 1 138 1 
359 1 
141 1 112 1 47 1 108 1 97 1 229 1 354 1 
151 1 141 1 134 1 
51 1 187 2 141 3 36 1 112 1 257 1 47 3 108 1 97 1 336 1 229 1 354 1 
141 2 112 1 47 2 108 1 97 1 227 1 45 1 229 1 354 1 
141 1 36 1 112 1 47 1 108 1 26 1 97 1 100 1 329 1 239 1 254 1 
141 1 36 1 112 1 47 1 108 1 97 1 229 1 
141 1 36 1 112 1 47 1 97 1 229 2 354 1 
141 2 36 1 112 2 80 1 47 2 108 1 97 2 196 1 263 1 229 1 
36 1 112 1 97 1 227 2 229 1 63 1 141 3 331 1 47 3 108 2 318 1 239 1 354 1 
36 1 112 1 368 1 97 1 100 1 329 1 227 1 229 1 364 1 141 2 315 1 47 2 108 1 354 1 254 2 
36 1 225 1 112 2 97 2 45 1 227 2 229 1 141 4 47 4 108 2 318 1 239 1 354 1 
141 1 36 1 112 1 47 1 108 1 97 1 229 1 354 1 
112 1 257 1 97 1 227 2 229 2 187 1 141 4 47 4 108 3 142 1 336 1 318 1 239 1 354 2 
36 1 112 1 172 1 97 1 227 1 229 1 141 2 120 1 47 2 108 1 122 1 354 1 
187 2 141 3 36 1 112 1 257 1 47 3 108 1 375 1 97 1 336 2 229 1 354 1 
246 2 108 2 92 1 12 1 
141 1 36 1 112 1 47 1 97 1 216 1 
141 2 36 1 112 1 331 1 47 2 108 1 97 1 227 1 229 1 354 1 
217 1 
141 1 36 1 112 1 47 1 108 1 97 1 229 1 354 1 
36 1 112 1 97 1 227 1 229 1 141 3 187 1 331 1 47 3 108 1 354 1 
108 1 142 1 239 1 318 1 
108 1 229 1 

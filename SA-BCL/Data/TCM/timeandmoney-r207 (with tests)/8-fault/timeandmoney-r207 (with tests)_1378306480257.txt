#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 208 (58,93,289) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) (11,229) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (11,229) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) (11,229) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (36,178,185,217) (36,178,185,217) (36,178,185,217) 73 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 328 110 333 105 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 204 316 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
73 1 270 1 178 1 217 1 36 1 
108 1 306 1 166 1 
297 1 328 2 108 1 
183 2 310 1 308 2 53 2 19 2 323 1 334 2 261 2 
175 1 127 1 130 1 298 1 303 2 6 1 138 1 141 1 182 1 261 3 183 3 12 1 310 1 308 2 53 2 221 1 19 2 188 1 21 1 60 1 275 1 104 1 191 1 26 2 109 1 323 1 195 1 35 1 241 2 205 1 117 1 206 2 332 1 123 1 293 2 334 2 126 1 
183 1 52 1 308 1 53 1 318 1 19 1 323 1 284 1 334 1 261 1 
62 1 252 1 3 1 257 1 108 1 135 1 70 1 113 1 261 1 166 1 183 1 52 1 149 1 19 1 
252 1 3 1 257 2 108 1 135 1 70 1 261 1 166 1 183 1 52 1 53 1 308 1 149 2 19 1 334 1 
257 1 149 1 137 1 251 1 262 1 
257 2 291 1 149 2 108 1 111 1 251 1 166 1 262 1 
257 1 149 1 262 1 
257 1 318 1 239 1 323 1 284 1 261 1 183 1 52 1 53 1 308 1 149 1 19 1 334 1 251 1 
108 1 
0 1 257 2 149 2 108 1 111 1 251 1 166 1 262 1 
211 1 232 1 234 1 257 5 30 2 108 1 47 1 111 1 166 1 263 1 39 1 262 2 149 5 268 2 331 1 248 1 251 2 294 2 274 1 
310 1 306 1 
261 2 184 1 183 2 53 1 308 1 310 2 19 2 150 1 334 1 
219 1 304 1 249 1 
127 1 130 1 191 1 26 1 28 1 6 1 109 1 261 1 183 1 241 1 310 1 206 1 123 1 60 1 126 1 275 1 
183 3 53 1 310 1 308 3 319 1 19 3 334 3 261 3 
183 1 52 1 308 1 19 1 284 1 334 1 261 1 
184 1 183 1 52 1 308 1 53 1 19 1 150 1 334 1 261 1 
127 1 252 1 175 1 130 1 3 1 257 1 303 1 177 1 6 1 135 1 138 1 259 1 182 1 261 4 183 4 52 1 310 1 53 2 308 3 221 1 149 1 150 1 19 3 188 1 21 1 60 1 275 1 191 1 317 1 26 1 319 1 109 1 70 1 323 1 35 1 241 1 205 1 117 1 206 1 332 1 123 1 293 2 334 3 126 1 
183 2 310 1 308 1 319 1 97 1 19 2 113 1 334 1 261 2 
252 1 257 1 2 1 317 1 3 1 177 1 319 2 108 1 135 1 70 1 261 3 183 3 52 1 53 1 308 3 149 1 150 1 19 3 334 3 
183 2 219 1 308 2 53 1 319 1 19 2 150 1 249 1 334 2 261 2 
127 1 130 1 191 1 26 1 6 1 109 1 261 1 183 1 241 1 310 1 206 1 123 1 60 1 126 1 275 1 
127 1 130 1 26 1 6 1 109 1 281 1 215 1 261 1 183 1 241 1 310 1 206 1 123 1 60 1 275 1 
4 1 303 4 304 2 138 1 182 1 264 1 219 2 221 1 188 2 21 1 272 1 233 1 235 1 29 1 238 1 195 2 112 1 34 1 35 1 165 1 326 1 332 1 249 2 293 2 
183 1 52 1 308 1 3 1 19 1 334 1 261 1 273 1 
127 1 130 1 191 1 26 1 177 1 319 1 6 1 109 1 261 2 183 2 241 1 219 1 308 1 206 1 19 1 123 1 60 1 334 1 275 1 126 1 
131 1 177 1 319 2 113 1 261 5 183 5 200 1 308 4 53 1 310 1 97 1 19 5 150 1 334 4 
183 2 52 1 308 2 19 2 284 1 334 2 273 1 261 2 
93 1 118 1 
93 1 118 1 
289 1 208 1 
289 1 208 1 
289 1 208 1 
93 1 118 1 18 1 
93 1 289 1 118 1 208 1 
93 1 118 1 58 1 
93 1 118 1 18 1 
93 1 118 1 18 1 
93 1 118 1 260 1 
93 1 118 1 260 1 
93 1 118 1 260 1 
295 1 157 2 257 2 46 1 108 1 31 2 140 2 48 1 307 1 197 1 170 2 93 2 201 2 118 2 149 2 59 1 152 1 153 1 315 3 
257 1 302 1 46 1 140 1 261 2 183 2 145 1 93 1 310 1 308 2 149 1 19 2 58 1 315 1 157 1 277 1 31 1 69 1 162 1 170 1 118 1 334 2 81 1 209 1 
15 1 224 1 154 1 
224 1 292 1 154 1 
15 2 57 1 246 1 292 1 154 3 89 1 
61 1 15 1 57 1 292 1 154 2 89 1 
15 1 57 1 292 1 154 2 89 2 
297 1 257 5 47 2 216 2 262 1 145 1 223 2 149 5 268 1 271 1 272 1 274 1 235 1 158 1 234 3 29 1 64 1 30 1 278 2 108 2 322 1 69 1 111 1 162 1 166 1 326 1 199 1 328 3 74 1 124 1 294 1 251 4 
257 6 256 3 261 1 262 4 183 1 14 1 19 1 98 1 268 1 271 1 272 1 274 1 29 1 30 1 108 3 111 1 284 1 38 1 199 1 294 1 297 1 47 2 137 3 216 2 52 1 308 1 53 1 149 6 223 2 234 3 235 1 318 1 64 1 322 1 69 2 239 1 323 1 166 1 326 1 328 3 334 1 251 5 
297 2 257 3 47 2 216 2 263 1 149 3 223 2 268 1 271 1 272 1 158 1 234 3 235 1 29 1 64 1 30 1 278 1 108 3 69 1 166 1 326 1 199 1 328 4 74 1 251 2 294 1 
297 3 257 4 47 4 216 4 263 1 95 1 223 4 149 4 268 1 271 1 272 2 158 1 234 5 235 2 29 2 64 1 30 1 278 2 108 4 69 2 166 1 326 2 199 2 202 1 328 7 116 1 74 1 294 1 251 3 
7 1 306 1 60 1 
146 1 60 1 
171 1 
6 1 60 1 
198 1 6 1 7 2 22 1 60 3 275 1 
6 1 60 1 275 1 
311 1 60 1 
276 1 233 3 212 1 235 1 213 1 132 1 29 1 303 7 237 1 139 1 195 4 34 2 164 2 167 1 188 3 102 1 44 1 
276 1 233 3 212 1 235 1 213 1 132 1 29 1 303 7 237 1 139 1 195 4 34 2 164 2 167 1 188 3 102 1 44 1 
276 1 233 3 212 1 235 1 213 1 132 1 29 1 303 7 237 1 280 1 139 1 195 4 34 2 164 2 167 1 188 3 102 1 44 1 
212 1 213 2 132 2 1 1 303 31 138 1 139 5 88 1 10 1 221 1 188 15 21 1 102 2 272 3 23 1 276 1 233 10 235 4 29 4 237 1 321 1 240 1 195 16 34 5 164 3 167 2 40 3 326 3 115 4 199 3 290 1 332 1 293 2 44 1 
45 1 212 1 132 1 1 1 213 1 303 9 138 2 139 1 221 2 188 4 21 2 102 1 233 4 235 1 29 1 237 1 195 5 34 3 164 2 167 1 41 1 332 2 293 4 44 1 
73 1 270 1 178 1 217 1 36 1 
270 1 178 1 217 1 11 1 36 1 
229 1 185 1 270 1 36 1 
270 1 178 1 217 1 11 1 36 1 
73 1 270 1 178 1 217 1 36 1 
180 1 
253 2 252 1 257 5 3 1 6 1 85 1 261 1 262 6 183 1 13 1 269 2 268 1 19 1 271 1 274 1 26 2 30 1 108 2 110 1 109 2 111 3 113 1 287 2 206 2 120 1 42 1 43 1 294 1 127 1 297 2 130 1 47 2 135 1 50 1 220 2 52 1 149 5 227 1 60 1 62 1 230 4 156 1 234 2 236 1 67 1 159 2 70 1 325 2 166 1 241 2 328 2 244 1 172 2 76 1 79 1 
0 1 252 1 257 3 3 1 85 1 135 1 261 1 262 2 183 1 50 1 52 1 220 1 149 3 19 1 62 1 230 2 156 1 236 1 70 1 111 1 113 1 120 1 
0 1 252 1 257 3 3 1 85 1 135 1 261 1 262 1 183 1 50 1 52 1 149 3 19 1 62 1 230 3 156 1 236 1 108 1 70 1 111 1 113 1 166 1 287 1 120 1 
0 1 252 1 253 1 257 3 3 1 85 1 135 1 261 1 262 2 183 1 50 1 52 1 220 1 149 3 19 1 62 1 230 3 156 1 236 1 108 1 70 1 111 1 113 1 166 1 287 1 120 1 
0 1 253 4 252 1 176 1 3 1 257 5 84 1 85 1 8 1 261 1 262 7 183 1 19 1 268 1 269 2 274 1 30 1 108 5 110 1 111 3 113 1 287 4 120 1 43 1 294 1 296 1 297 2 47 1 135 1 50 1 220 4 52 1 149 5 156 1 230 6 62 1 234 1 236 1 159 2 70 1 325 2 166 5 172 2 333 1 
252 1 253 2 3 1 257 4 85 1 261 1 262 4 183 1 19 1 268 1 269 2 274 1 30 1 108 2 110 1 111 2 113 1 287 2 120 1 43 1 294 1 297 2 47 1 135 1 50 1 52 1 220 2 149 4 156 1 230 4 62 1 234 1 236 1 159 2 70 1 325 2 166 1 328 2 172 2 79 1 
253 2 252 1 297 2 176 1 257 4 3 1 47 1 85 1 135 1 8 1 261 1 262 4 183 1 50 1 220 2 52 1 149 4 269 2 268 1 19 1 274 1 62 1 230 4 156 1 234 1 236 1 30 1 108 1 159 2 110 1 70 1 111 2 325 2 113 1 166 1 287 2 172 2 120 1 333 1 43 1 294 1 
253 2 252 1 297 2 176 1 257 4 3 1 47 1 85 1 135 1 8 1 261 1 262 4 183 1 50 1 220 2 52 1 149 4 269 2 268 1 19 1 274 1 62 1 230 4 156 1 234 1 236 1 30 1 108 1 159 2 110 1 70 1 111 2 325 2 113 1 166 1 287 2 172 2 120 1 333 1 43 1 294 1 
252 1 257 2 3 1 47 1 85 1 135 1 261 1 183 1 50 1 52 1 149 2 269 1 268 1 19 1 274 1 62 1 230 2 156 1 106 1 105 1 234 1 236 1 30 1 193 1 159 1 110 1 70 1 113 1 328 1 120 1 78 1 333 1 294 1 
252 1 253 3 297 2 176 1 257 4 3 1 84 1 47 1 85 1 135 1 8 1 261 1 262 5 183 1 50 1 52 1 220 3 149 4 269 2 268 1 19 1 274 1 62 1 230 5 156 1 234 1 30 1 236 1 108 1 159 2 110 1 70 1 111 2 325 2 113 1 166 1 287 3 172 2 120 1 333 1 43 1 294 1 
252 1 253 3 297 2 176 1 257 4 3 1 84 1 47 1 85 1 135 1 8 1 261 1 262 5 183 1 50 1 52 1 220 3 149 4 269 2 268 1 19 1 274 1 62 1 230 5 156 1 234 1 30 1 236 1 108 1 159 2 110 1 70 1 111 2 325 2 113 1 166 1 287 3 172 2 120 1 333 1 43 1 294 1 
252 1 253 2 3 1 257 4 85 1 261 1 262 4 183 1 19 1 268 1 269 2 103 2 274 1 106 2 30 1 108 1 110 1 111 2 113 1 287 2 120 1 294 1 47 1 135 1 50 1 52 1 220 2 149 4 156 1 230 4 62 1 234 1 236 1 159 2 70 1 166 1 328 2 78 1 79 1 
233 2 212 1 235 1 4 1 213 1 29 1 303 6 237 1 304 1 138 1 195 3 306 1 34 2 182 1 164 1 35 1 167 1 219 1 310 2 221 1 188 3 332 1 249 1 21 1 293 2 44 1 
303 14 304 11 138 2 139 1 182 1 219 11 147 1 310 1 221 2 188 6 225 1 21 2 272 1 23 1 104 1 233 2 235 2 29 1 33 1 240 1 195 8 34 1 35 2 37 1 40 3 326 2 115 3 199 2 205 1 332 2 249 4 293 4 173 1 
127 1 82 1 130 1 177 1 303 2 6 1 138 1 182 1 261 2 183 2 310 1 308 1 221 1 19 1 188 1 21 1 60 1 275 1 104 1 191 1 26 1 28 1 319 1 109 1 195 1 35 1 241 1 169 1 205 1 206 1 330 1 332 1 249 1 123 1 173 1 334 1 293 2 126 1 
177 1 6 2 182 3 261 3 92 1 183 3 19 1 187 2 188 11 101 1 21 3 272 2 275 2 104 1 191 2 26 1 25 2 29 4 109 1 283 1 195 11 34 4 35 3 199 2 205 1 117 2 206 1 123 2 293 6 44 1 126 2 127 2 212 1 130 2 213 1 303 22 304 6 138 3 139 1 219 6 52 1 310 1 308 1 221 3 314 1 60 2 233 5 235 4 65 2 319 1 237 1 167 1 241 1 326 2 332 3 249 6 334 1 173 1 80 2 
127 2 130 2 255 1 4 1 303 2 6 2 138 2 182 2 261 1 183 1 12 2 13 1 16 1 308 1 221 2 148 1 19 1 188 1 189 1 100 1 20 1 21 2 60 3 104 1 26 8 66 1 319 1 109 2 195 1 35 2 241 8 205 1 206 7 75 1 76 1 121 1 332 2 334 1 293 4 
303 3 304 1 138 1 182 1 261 1 183 1 219 1 53 1 308 1 221 1 150 1 19 1 188 2 21 1 272 1 233 1 235 1 29 1 195 1 34 1 35 1 326 1 199 1 332 1 249 1 334 1 293 2 173 1 207 1 
233 1 4 1 235 1 303 2 304 1 138 1 139 1 195 2 182 1 35 1 165 1 326 1 219 1 221 1 332 1 249 1 21 1 293 2 
233 1 4 1 303 2 29 1 304 1 138 1 34 1 182 1 35 1 264 1 219 1 221 1 332 1 188 2 249 1 21 1 293 2 272 1 
233 2 4 1 235 1 29 1 303 4 304 2 138 1 139 1 195 2 34 1 182 1 35 1 326 1 219 2 199 1 221 1 188 2 332 1 249 2 21 1 272 1 293 2 
233 1 255 1 235 1 303 2 304 1 138 1 139 1 195 2 182 1 35 1 165 1 326 1 219 1 221 1 332 1 249 1 21 1 293 2 
233 1 255 1 303 2 29 1 304 1 138 1 34 1 182 1 35 1 264 1 219 1 221 1 332 1 188 2 249 1 21 1 293 2 272 1 
255 1 303 4 304 2 138 1 139 1 182 1 219 2 221 1 188 2 21 1 272 1 233 2 235 1 29 1 195 2 34 1 35 1 326 1 199 1 332 1 249 2 293 2 
233 2 235 1 29 1 303 4 304 2 138 1 139 1 195 2 34 1 182 1 35 1 326 1 219 2 199 1 221 1 188 2 332 1 249 2 21 1 272 1 293 2 
127 1 130 1 303 2 6 1 138 1 182 1 261 1 183 1 310 1 221 1 188 1 21 1 60 1 275 1 104 1 191 1 26 1 109 1 195 1 35 1 241 1 117 1 205 1 206 1 332 1 123 1 293 2 126 1 
127 1 130 1 303 2 6 1 138 1 215 1 182 1 261 1 218 1 183 1 310 1 221 1 188 1 21 1 60 1 275 1 104 1 26 1 281 1 109 1 195 1 35 1 241 1 205 1 206 1 332 1 123 1 293 2 
233 2 235 1 29 1 303 4 304 2 138 1 139 1 195 2 34 1 182 1 35 1 326 1 219 2 199 1 221 1 188 2 332 1 249 2 21 1 272 1 173 1 293 2 
127 1 130 1 303 4 6 1 304 2 138 1 139 1 182 1 261 1 183 1 219 2 221 1 188 2 21 1 272 1 60 1 275 1 233 2 191 1 235 1 26 1 29 1 195 2 34 1 35 1 326 1 241 1 199 1 117 1 206 1 121 1 332 1 249 2 123 1 293 2 80 1 126 1 
303 3 304 1 138 1 139 1 182 1 261 1 183 1 219 1 53 1 308 1 221 1 54 1 150 1 19 1 188 1 21 1 272 1 233 1 235 1 29 1 195 2 35 1 326 1 199 1 332 1 249 1 334 1 293 2 173 1 
254 1 258 1 303 19 214 1 138 2 139 3 49 2 221 2 186 1 55 1 99 1 188 10 21 2 272 3 23 1 233 6 27 2 235 3 29 3 240 1 195 9 34 3 40 1 326 3 115 2 199 3 329 1 41 1 332 2 293 4 
1 2 258 2 303 26 134 1 138 3 139 2 49 1 90 1 91 1 221 3 186 1 55 1 99 2 188 12 21 3 272 2 23 2 233 4 27 4 235 3 29 2 195 14 324 1 34 2 40 2 326 3 115 2 199 3 329 1 41 1 77 1 332 3 293 6 125 1 
254 1 212 1 213 1 1 1 258 1 303 41 134 1 138 3 139 4 49 1 90 1 91 1 221 3 186 1 312 1 55 1 99 2 188 21 21 3 272 4 23 3 233 8 27 4 235 5 29 5 237 1 240 1 324 1 195 20 34 4 164 1 167 1 40 3 326 4 115 4 199 4 329 1 77 1 41 1 332 3 293 6 44 1 125 1 
254 1 212 1 213 1 1 2 258 1 303 38 134 1 138 4 139 3 49 1 90 1 91 1 221 4 186 1 312 1 55 1 99 2 188 18 21 4 272 3 23 3 233 7 27 4 235 5 29 4 237 1 240 1 324 1 195 20 34 4 164 1 167 1 40 3 326 4 115 4 199 4 329 1 77 1 41 1 332 4 293 8 44 1 125 1 
212 1 213 1 1 1 258 1 303 52 134 1 138 2 139 7 49 1 90 1 91 1 147 2 221 2 186 1 55 1 99 1 188 25 21 2 272 7 23 2 233 14 27 4 235 8 29 8 237 1 240 2 324 1 195 27 34 7 164 1 167 1 40 4 326 7 115 4 199 7 329 1 77 1 41 1 332 2 293 4 44 1 125 1 
93 1 170 1 157 1 118 1 222 1 59 1 31 1 152 1 140 1 153 1 
277 1 58 1 
51 1 93 1 170 1 203 1 299 1 157 1 118 1 31 1 140 1 
157 1 257 1 46 1 108 1 31 1 140 1 48 1 307 1 197 1 170 1 93 1 201 1 118 1 149 1 59 1 152 1 153 1 315 2 
157 1 257 1 46 1 108 1 31 1 140 1 48 1 307 1 197 1 170 1 93 1 201 1 118 1 149 1 59 1 152 1 153 1 315 2 
157 1 257 1 46 1 108 1 31 1 140 1 48 1 307 1 197 1 170 1 93 1 201 1 118 1 149 1 59 1 152 1 153 1 315 2 
83 1 18 1 228 1 
83 1 18 1 228 1 
260 1 174 1 
260 1 228 1 174 1 
302 1 209 1 
257 1 302 1 140 1 261 2 307 1 183 2 145 1 93 1 310 1 308 2 149 1 58 1 19 2 315 1 157 1 277 1 320 1 31 1 69 1 162 1 170 1 201 1 118 1 334 2 251 1 81 1 209 1 
83 1 18 1 
260 1 228 1 174 1 
127 1 130 1 303 2 6 1 138 1 87 1 182 1 181 1 261 2 183 2 12 2 221 1 19 2 188 1 100 1 21 1 60 1 104 1 26 2 32 1 195 1 35 1 241 2 196 1 205 1 119 1 206 2 75 1 332 1 173 1 293 2 
127 1 130 1 26 2 5 1 136 1 142 1 286 1 241 2 168 1 15 1 206 2 224 1 313 1 246 1 151 1 121 1 292 1 189 1 154 2 
127 1 130 1 26 1 5 1 142 1 286 1 241 1 168 1 265 1 15 1 206 1 224 1 246 1 151 1 292 1 189 1 154 2 
127 1 130 1 26 1 5 1 6 1 136 1 305 1 109 1 285 1 241 1 13 1 206 1 76 1 60 1 
127 1 130 1 26 1 5 1 136 1 142 1 286 1 241 1 168 1 15 1 206 1 224 1 313 1 246 1 151 1 292 1 189 1 154 2 
9 1 
211 1 234 1 108 1 47 1 248 1 306 1 166 1 
297 1 257 1 234 1 30 1 108 2 47 1 111 1 325 1 166 1 262 1 328 1 149 1 268 1 172 1 43 1 294 1 274 1 
257 5 6 2 7 2 86 1 179 1 262 5 268 4 271 2 272 2 275 2 274 4 190 1 26 3 25 2 29 2 30 4 279 2 108 8 109 1 111 3 114 2 198 1 199 2 206 3 121 1 294 4 211 1 127 2 128 2 130 3 297 6 47 8 216 6 146 3 149 5 223 6 226 1 60 7 155 2 231 2 234 9 235 2 68 2 70 2 166 2 241 3 326 2 327 1 328 12 244 1 245 1 247 2 248 1 
297 3 257 1 47 5 216 5 90 1 262 1 91 1 149 1 223 5 268 2 271 1 272 2 23 1 274 2 24 1 234 8 235 2 29 2 279 2 30 2 108 5 68 1 282 1 111 1 324 1 166 2 40 1 326 2 115 1 199 2 328 6 244 1 77 1 294 2 125 1 
213 1 257 1 47 2 8 1 261 1 183 1 52 1 53 1 308 1 149 1 268 1 19 1 314 1 274 1 235 2 234 2 29 1 318 1 279 2 30 1 237 1 68 1 239 1 323 1 284 1 167 1 334 1 294 1 
211 1 234 1 30 1 47 1 108 1 166 1 268 1 248 1 294 1 274 1 
297 5 25 1 235 2 234 5 29 2 279 2 47 5 108 5 68 1 216 5 326 2 199 2 328 10 223 5 272 2 
257 1 149 1 108 1 111 1 166 1 262 1 
127 1 130 1 257 3 6 1 47 2 86 2 143 1 263 1 262 4 13 1 149 3 268 2 271 2 227 1 60 1 274 1 63 1 26 4 234 2 30 2 109 2 111 2 241 4 244 2 206 4 245 1 76 1 42 1 294 2 
175 1 127 1 130 1 303 1 6 1 138 1 182 1 261 3 183 3 310 1 308 2 53 2 221 1 19 2 188 1 21 1 60 1 275 1 191 1 26 1 109 1 323 1 35 1 241 1 205 1 117 1 206 1 332 1 123 1 293 2 334 2 126 1 
297 2 234 1 30 1 47 2 108 4 216 2 164 1 166 2 328 4 244 1 223 2 268 1 271 1 294 1 274 1 
157 1 140 1 250 1 
288 1 157 1 302 1 140 1 153 1 
157 1 140 1 250 1 
157 1 140 1 250 1 
157 1 140 1 160 1 
157 1 140 1 160 1 
157 1 140 1 160 1 
157 1 140 1 
93 1 118 1 
233 3 212 1 235 1 1 1 213 1 29 1 303 8 237 1 138 2 139 1 195 4 34 2 164 1 167 1 221 2 188 4 332 2 21 2 293 4 44 1 
233 2 212 1 235 1 213 1 29 1 303 6 237 1 188 3 195 3 306 1 34 2 164 1 167 1 44 1 
233 2 235 1 29 1 303 4 192 1 138 1 139 1 195 2 34 1 326 1 199 1 221 1 188 2 332 1 21 1 272 1 293 2 
233 2 235 1 29 1 303 7 139 1 240 1 195 3 34 1 40 1 326 1 115 2 199 1 188 4 272 1 23 1 
212 1 213 2 1 2 303 23 138 2 139 4 147 1 309 1 221 2 188 12 21 2 272 2 233 9 235 3 29 3 237 1 240 1 195 11 34 5 164 1 167 2 37 1 326 2 40 2 115 2 199 2 332 2 293 4 44 1 
115 1 303 1 188 1 
40 1 303 1 195 1 
233 3 25 1 235 1 303 6 29 1 192 1 138 1 139 1 195 3 34 2 326 1 199 1 221 1 332 1 188 3 21 1 293 2 272 1 
303 12 138 1 139 1 90 1 91 1 221 1 188 6 21 1 272 2 23 1 233 2 235 2 29 2 195 6 324 1 34 1 40 1 326 2 115 1 199 2 77 1 41 1 332 1 293 2 125 1 
233 2 235 1 213 1 303 6 29 1 237 1 139 1 195 3 34 1 167 1 188 3 
233 2 212 1 213 1 1 1 303 3 138 1 139 1 195 1 34 1 167 1 309 1 221 1 188 2 332 1 21 1 293 2 44 1 
233 5 213 2 235 2 303 10 29 2 237 1 138 1 139 2 195 5 34 3 167 2 221 1 41 1 332 1 314 1 188 5 21 1 293 2 
233 1 235 1 303 2 138 1 139 1 195 2 326 1 221 1 41 1 332 1 21 1 293 2 
233 2 235 1 29 1 303 4 138 1 139 1 195 2 34 1 326 1 199 1 221 1 41 1 188 2 332 1 21 1 272 1 293 2 
254 1 233 2 1 1 213 1 303 3 138 3 139 1 195 1 34 1 167 1 309 1 221 3 41 1 188 2 332 3 21 3 293 6 
212 1 254 1 213 3 1 2 303 34 138 5 139 5 10 1 88 1 309 1 221 5 188 18 21 5 272 3 23 1 233 12 235 5 29 5 237 2 192 1 321 1 240 1 195 16 34 7 164 1 167 3 40 3 326 3 115 4 199 3 41 1 332 5 293 10 44 1 
212 1 213 1 303 8 138 1 221 1 188 4 21 1 23 1 233 2 235 1 29 1 237 1 195 4 34 2 164 1 167 1 40 1 115 1 77 1 41 1 332 1 293 2 44 1 
212 1 213 1 303 11 138 2 139 1 221 2 188 5 21 2 23 1 233 3 235 2 29 1 237 1 192 1 240 1 195 6 34 2 164 1 167 1 40 1 326 1 115 2 199 1 77 1 41 1 332 2 293 4 44 1 
212 1 213 1 1 1 303 19 138 3 139 1 90 1 91 1 221 3 188 10 21 3 272 2 23 1 233 4 235 3 29 3 237 1 192 1 195 9 324 1 34 3 164 1 167 1 40 1 326 2 115 1 199 2 77 1 41 1 332 3 293 6 44 1 125 1 
212 1 213 1 1 1 303 17 138 3 139 2 90 1 91 1 221 3 188 7 21 3 272 1 23 1 233 5 235 3 29 2 237 1 192 1 195 10 324 1 34 3 164 1 167 1 40 1 326 2 115 1 199 2 77 1 41 1 332 3 293 6 44 1 125 1 
212 1 213 1 303 8 138 1 221 1 188 4 21 1 23 1 233 2 235 1 29 1 237 1 195 4 34 2 164 1 167 1 40 1 115 1 77 1 41 1 332 1 293 2 44 1 
303 12 138 1 139 1 90 1 91 1 221 1 188 6 21 1 272 2 23 1 233 2 235 2 29 2 195 6 324 1 34 1 40 1 326 2 115 1 199 2 77 1 41 1 332 1 293 2 125 1 
212 1 213 1 1 2 303 18 138 4 139 2 90 1 91 1 221 4 188 8 21 4 272 1 23 1 233 5 235 3 29 2 237 1 192 1 195 10 324 1 34 3 164 1 167 1 40 1 326 2 115 1 199 2 77 1 41 1 332 4 293 8 44 1 125 1 
254 1 1 2 303 16 138 4 139 3 90 1 91 1 221 4 188 7 21 4 272 2 23 1 233 6 235 3 29 2 195 9 324 1 34 3 40 1 326 3 115 1 199 3 77 1 41 1 332 4 293 8 125 1 
212 1 233 6 213 3 235 1 29 1 303 7 237 1 139 3 195 3 34 3 167 3 188 4 44 2 
212 1 254 1 213 1 1 2 303 18 138 4 139 1 90 1 91 1 221 4 188 8 21 4 272 1 23 1 233 4 235 3 29 2 237 1 195 10 324 1 34 3 164 1 167 1 40 1 326 2 115 1 199 2 77 1 41 1 332 4 293 8 44 1 125 1 
183 1 310 1 204 1 97 1 19 1 113 1 261 1 
210 1 144 1 242 1 204 1 316 1 96 1 
241 1 127 1 13 1 130 1 26 1 206 1 6 1 76 1 109 1 306 1 60 1 
127 1 130 1 26 1 319 1 6 1 109 1 261 2 183 2 241 1 310 1 308 1 206 1 19 1 123 1 60 1 334 1 275 1 126 1 
127 1 252 1 130 1 3 1 6 2 86 1 179 1 261 2 183 2 52 2 308 2 310 1 19 2 60 2 275 2 26 1 319 1 283 1 241 1 206 1 123 1 334 1 126 1 
127 1 252 1 130 1 3 1 6 2 215 1 86 1 179 1 261 2 183 2 52 2 308 2 310 1 19 2 60 2 275 2 26 1 319 1 283 1 241 1 206 1 123 1 334 1 
257 2 7 1 86 1 261 1 262 1 183 1 52 1 146 1 53 1 308 1 149 2 19 1 60 2 26 1 318 1 108 1 70 1 239 1 323 1 284 1 166 1 241 1 206 1 122 1 334 1 
127 1 130 1 257 2 6 1 7 1 86 1 179 1 261 1 262 1 183 1 52 1 146 1 308 1 53 1 149 2 19 1 60 3 155 1 275 1 26 1 318 1 108 1 70 1 239 1 323 1 284 1 166 1 241 1 206 1 334 1 
241 1 127 1 130 1 26 1 206 1 20 1 
127 2 130 3 26 7 66 1 6 2 109 2 241 7 72 1 12 1 198 1 16 1 148 1 206 6 17 1 75 1 266 1 121 1 189 1 20 1 60 3 275 1 
127 1 212 1 130 1 213 1 303 6 6 1 304 1 138 2 182 2 261 2 183 2 219 1 310 2 308 1 221 2 19 1 188 3 21 2 60 1 275 1 233 2 191 1 235 1 26 1 29 1 65 1 319 1 237 1 195 3 34 2 164 1 35 2 167 1 196 1 241 1 117 1 206 1 332 2 121 1 249 1 123 1 173 1 334 1 293 4 80 1 44 1 126 1 
211 1 128 1 257 3 47 1 7 1 262 2 146 1 149 3 268 2 60 2 155 1 274 2 231 1 234 1 26 1 30 2 108 1 109 1 70 1 111 1 114 1 166 1 241 1 206 1 245 1 248 1 294 2 251 1 
127 1 190 1 130 2 26 2 6 1 7 1 241 2 198 1 206 2 121 1 20 1 60 2 275 1 
127 1 129 1 130 1 26 4 6 1 109 1 163 1 241 4 13 1 206 4 76 1 121 1 60 1 
127 1 130 2 26 2 133 1 6 1 86 1 161 1 241 2 56 1 206 2 17 1 266 1 60 1 275 1 
241 1 127 1 130 1 26 1 206 1 224 1 151 1 109 1 292 1 154 1 
127 1 130 1 26 2 6 1 32 1 241 2 206 2 75 1 121 1 189 1 60 1 
127 2 130 2 26 5 66 1 6 2 109 1 86 1 163 1 241 5 13 1 206 4 148 1 75 1 76 1 121 1 60 3 
127 2 130 2 26 5 66 1 6 2 109 1 194 1 86 1 163 1 241 5 13 1 206 4 75 1 76 1 121 1 60 3 
127 1 130 1 26 1 319 1 6 1 109 1 215 1 261 2 183 2 241 1 310 1 308 1 206 1 19 1 123 1 60 1 334 1 275 1 
127 1 130 2 26 1 6 1 86 1 241 1 72 1 198 1 206 1 17 1 266 1 60 1 275 1 
310 1 94 1 300 1 107 1 267 1 
252 1 301 1 300 2 3 1 257 2 317 1 107 2 108 1 135 1 70 1 71 1 166 1 52 1 243 1 310 1 94 2 149 2 267 1 251 1 
183 1 94 1 300 1 119 1 19 1 267 1 87 1 181 1 261 1 
301 1 267 1 71 1 

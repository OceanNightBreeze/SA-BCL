#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 (237,252) (237,252) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 (237,252) (237,252) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 (237,252) (237,252) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 (237,252) (237,252) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 109 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 109 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (189,222) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (189,222) 118 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (189,222) 118 140 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 267 320 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (6,322) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 281 20 100 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 281 20 100 42 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 9 183 2 260 2 186 2 39 6 265 1 10 1 44 2 46 9 234 3 199 1 237 1 110 1 113 2 19 1 119 1 120 1 326 2 286 1 23 1 287 1 78 4 82 1 252 1 253 2 
113 2 19 1 133 9 183 2 186 2 260 2 39 6 119 1 120 1 265 1 10 1 326 2 286 1 23 1 44 2 287 1 46 9 78 4 199 1 234 3 82 1 252 1 237 1 253 2 110 1 
113 2 19 1 133 9 183 2 186 2 260 2 39 6 119 1 120 1 265 1 10 1 326 2 286 1 23 1 44 2 287 1 46 9 78 4 199 1 234 3 82 1 252 1 237 1 253 2 110 1 
113 2 19 1 133 7 183 2 186 2 260 2 39 4 119 1 120 1 265 1 10 1 326 2 286 1 23 1 44 1 287 1 46 7 78 3 199 1 234 2 82 1 252 1 237 1 253 2 
133 4 183 1 186 1 260 1 39 3 10 1 326 1 286 1 44 2 46 4 78 2 234 1 199 1 253 1 110 1 
113 1 133 2 183 1 260 1 186 1 120 1 284 1 10 1 326 1 26 1 46 2 146 1 147 1 77 1 82 1 317 1 
113 1 133 3 260 2 39 1 119 1 10 1 326 2 46 3 146 1 147 1 78 1 234 1 317 1 
113 1 19 1 133 9 156 1 183 1 186 1 260 2 39 7 119 1 10 1 326 2 286 1 44 2 287 1 46 9 78 4 199 1 234 3 253 1 110 1 109 1 
113 1 19 1 133 9 156 1 183 1 186 1 260 2 39 7 119 1 10 1 326 2 286 1 44 2 287 1 46 9 78 4 199 1 234 3 253 1 110 1 109 1 
247 1 212 1 194 1 
181 1 212 1 177 2 
168 2 74 2 11 2 143 1 105 2 197 1 337 2 245 2 
299 2 0 1 32 1 131 2 2 1 135 1 38 1 307 1 7 1 43 1 11 2 143 1 47 1 105 2 197 1 50 2 150 1 61 1 161 1 68 2 323 1 121 1 165 1 324 1 245 3 168 2 210 1 170 1 74 3 73 1 288 1 27 1 126 2 29 1 174 1 337 2 84 1 
168 1 59 1 328 1 74 1 11 1 143 1 278 1 105 1 337 1 245 1 
229 1 219 1 31 1 59 1 256 1 74 1 212 1 194 1 308 1 337 1 296 1 281 1 282 1 245 1 
219 2 31 1 59 1 256 2 308 1 245 1 168 1 229 1 11 1 74 1 212 1 194 1 105 1 337 1 296 1 
219 1 169 1 256 1 125 1 97 1 
219 2 169 1 256 2 220 1 212 1 194 1 97 1 40 1 
219 1 256 1 97 1 
219 1 59 1 318 1 256 1 278 1 245 1 168 1 169 1 328 1 143 1 11 1 74 1 105 1 337 1 
212 1 
219 2 169 1 256 2 220 1 212 1 194 1 97 1 66 1 
219 5 1 2 256 5 220 1 64 2 319 1 302 1 97 2 8 2 310 1 169 2 212 1 194 1 213 1 313 1 81 1 236 1 88 1 87 1 
168 3 11 1 74 3 105 3 197 1 241 1 337 3 245 3 
168 1 59 1 74 1 278 1 105 1 337 1 245 1 
59 1 245 1 168 1 11 1 74 1 105 1 333 1 233 1 337 1 
0 1 2 1 256 1 98 1 7 1 11 2 105 3 197 1 274 1 206 1 121 1 210 1 288 1 126 1 27 1 29 1 296 1 299 1 219 1 31 1 32 1 131 1 38 1 307 1 308 1 229 1 143 1 47 1 50 1 233 1 150 1 59 2 159 1 241 1 161 1 68 2 165 1 245 4 168 3 74 4 73 1 170 1 174 1 337 3 84 1 
59 1 159 1 20 1 241 1 281 1 245 2 168 1 74 2 105 1 197 1 337 2 
219 1 274 1 31 1 59 1 256 1 257 1 241 2 98 1 308 1 245 3 168 3 229 1 11 1 74 3 212 1 105 3 233 1 337 3 296 1 
168 2 72 1 74 2 11 1 105 2 241 1 233 1 337 2 6 1 245 2 
299 1 0 1 2 1 131 1 38 1 165 1 121 1 245 1 74 1 73 1 288 1 197 1 126 1 27 1 150 1 
299 1 2 1 131 1 60 1 38 1 165 1 121 1 245 1 74 1 73 1 288 1 197 1 126 1 27 1 53 1 
136 2 35 1 307 2 7 1 6 2 191 1 47 1 50 4 17 1 61 2 114 1 67 1 322 1 68 2 72 2 210 1 170 1 76 1 250 1 172 1 127 1 251 1 29 1 174 1 
31 1 59 1 245 1 168 1 74 1 49 1 105 1 337 1 
247 1 197 1 
59 1 159 1 245 2 168 1 74 2 11 1 105 1 333 1 197 1 233 1 337 2 
72 1 136 1 6 1 
111 1 59 1 159 1 197 1 
299 1 0 1 2 1 131 1 241 1 38 1 98 1 121 1 165 1 245 2 168 1 72 1 73 1 74 2 288 1 105 1 27 1 126 1 337 1 150 1 
20 1 241 2 98 1 281 1 245 5 168 4 74 5 11 1 105 4 197 1 233 1 235 1 337 5 273 1 
168 1 59 1 74 1 278 1 105 1 337 1 245 1 
222 1 218 1 
222 1 218 1 
222 1 218 1 
222 1 218 1 
222 1 218 1 
249 1 189 1 
249 1 189 1 
249 1 189 1 
222 1 218 1 
222 1 218 1 
222 1 218 1 
222 1 218 1 
222 1 218 1 
180 1 222 1 118 1 218 1 
219 1 180 1 256 1 222 1 118 1 218 1 140 1 
183 1 186 1 253 1 
26 1 183 1 186 1 
26 1 183 3 321 1 253 2 298 1 70 1 
26 1 183 2 253 1 266 1 298 1 70 1 
26 1 183 2 253 1 70 1 298 2 
1 1 219 5 300 1 256 5 181 1 220 1 302 3 184 1 224 2 97 1 8 1 310 2 309 1 141 1 142 1 232 1 194 1 314 1 270 2 114 1 157 2 64 1 116 1 169 4 212 2 25 1 213 1 76 1 172 1 251 1 177 3 297 1 
219 9 1 2 256 9 181 3 220 1 302 8 37 1 305 1 224 6 97 6 8 2 310 6 309 2 231 1 194 1 314 2 108 1 114 3 157 6 64 2 203 1 116 3 169 7 25 4 212 5 290 1 213 1 76 3 125 5 172 3 251 3 339 5 88 1 177 9 297 1 
1 1 219 3 256 3 181 2 302 3 224 2 8 1 309 1 310 2 142 1 194 1 232 1 314 1 270 1 114 1 64 1 157 2 116 1 169 2 212 3 25 1 76 1 172 1 251 1 88 1 177 4 
1 1 219 4 256 4 181 3 302 5 37 1 224 4 8 1 309 1 310 4 231 1 142 1 194 1 232 1 314 1 270 2 114 2 157 4 64 1 203 1 116 2 169 3 212 4 25 2 76 2 172 2 251 2 177 7 88 1 
27 1 121 1 
207 1 102 1 27 3 334 2 121 1 165 1 
247 1 27 1 334 1 
27 1 228 1 
79 1 
27 1 121 1 165 1 
27 1 336 1 
112 1 114 1 221 1 61 4 96 1 307 3 226 1 191 3 167 1 24 1 123 2 76 1 50 7 127 2 292 1 335 1 315 1 
112 1 114 1 221 1 61 4 96 1 307 3 226 1 191 3 167 1 24 1 123 2 76 1 50 7 127 2 292 1 335 1 315 1 
112 1 114 1 221 1 61 4 96 1 307 3 226 1 191 3 167 1 24 1 123 2 76 1 50 7 127 2 292 1 315 1 335 1 130 1 
221 2 96 1 306 4 307 15 226 2 7 1 191 10 144 1 103 1 47 1 50 31 315 1 112 2 61 16 114 4 116 3 279 1 68 2 280 1 167 1 122 1 71 3 210 1 24 5 123 3 76 4 251 3 172 3 127 5 335 1 292 2 29 1 295 1 89 1 
221 1 96 1 307 4 226 1 7 2 191 4 47 2 50 9 198 1 315 1 112 1 114 1 61 5 21 1 68 4 280 1 167 1 210 2 24 1 123 2 76 1 127 3 29 2 292 1 
299 1 91 1 131 1 133 2 183 2 186 1 260 1 39 1 10 1 311 1 46 2 146 1 147 1 269 1 51 1 317 1 56 1 113 1 158 1 160 1 204 1 321 1 326 1 73 1 288 1 26 1 124 1 126 1 253 1 85 1 
299 1 91 1 131 1 133 3 183 2 186 1 260 1 39 2 99 1 311 1 46 3 146 1 147 1 269 1 317 1 56 1 154 1 238 1 113 1 158 1 160 1 321 1 326 1 73 1 288 1 26 1 124 1 126 1 253 1 85 1 
299 1 91 1 131 1 133 2 183 2 186 1 39 2 311 1 46 2 146 1 147 1 269 1 317 1 56 1 154 1 238 1 113 1 158 1 321 1 73 1 288 1 26 1 124 1 126 1 253 1 
299 1 113 2 90 1 91 2 2 1 131 1 133 1 185 1 260 1 262 1 137 1 139 1 121 1 99 1 326 1 73 1 288 1 46 1 124 2 27 1 126 1 214 1 56 2 
299 1 91 1 131 1 133 1 183 2 186 1 260 1 10 1 311 1 46 1 269 1 56 1 154 1 113 1 158 1 160 1 204 1 321 1 326 1 73 1 288 1 26 1 124 1 126 1 253 1 85 1 
175 1 
299 2 1 1 219 2 131 2 2 2 256 2 220 1 302 1 93 1 97 2 262 1 8 1 310 1 267 1 13 1 15 1 145 1 314 1 64 1 320 1 121 1 244 1 73 1 288 1 213 1 27 1 126 2 214 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 2 256 2 220 1 15 1 145 1 320 1 97 1 66 1 
267 1 1 1 219 1 256 1 64 1 213 1 15 1 145 1 320 1 8 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 219 1 256 1 15 1 145 1 320 1 
267 1 1 1 219 1 256 1 64 1 213 1 15 1 145 1 320 1 8 1 
136 1 61 2 67 1 68 2 6 1 7 1 191 1 72 1 170 1 210 1 24 1 47 1 76 1 50 2 250 1 251 1 174 1 29 1 
136 1 114 1 35 1 67 1 68 2 307 2 6 1 7 1 191 1 72 1 170 1 210 1 47 1 50 2 127 1 172 1 174 1 29 1 
136 2 307 2 7 1 6 2 191 2 47 1 50 4 61 2 114 1 116 1 67 1 68 2 72 2 210 1 170 1 24 1 76 1 251 1 172 1 127 1 29 1 174 1 
136 1 61 2 68 2 6 1 7 1 191 1 190 1 72 1 170 1 210 1 24 1 47 1 76 1 50 2 250 1 251 1 174 1 29 1 
136 1 114 1 35 1 68 2 307 2 6 1 7 1 191 1 190 1 72 1 170 1 210 1 47 1 50 2 127 1 172 1 174 1 29 1 
136 2 307 2 7 1 6 2 190 1 191 2 47 1 50 4 61 2 114 1 116 1 68 2 72 2 210 1 170 1 24 1 76 1 251 1 172 1 127 1 29 1 174 1 
136 2 307 2 7 1 6 2 191 2 47 1 50 4 61 2 114 1 116 1 68 2 72 2 210 1 170 1 24 1 76 1 251 1 172 1 127 1 29 1 174 1 
0 1 299 1 131 1 2 1 38 1 307 1 7 1 47 1 197 1 50 2 150 1 61 1 161 1 68 2 323 1 121 1 165 1 245 1 73 1 74 1 170 1 210 1 288 1 126 1 27 1 174 1 29 1 84 1 
299 1 131 1 2 1 38 1 307 1 7 1 47 1 197 1 50 2 53 1 61 1 60 1 161 1 68 2 323 1 121 1 165 1 245 1 73 1 74 1 170 1 210 1 288 1 75 1 126 1 27 1 174 1 29 1 
136 2 307 2 7 1 6 2 191 2 47 1 50 4 58 1 61 2 114 1 116 1 68 2 72 2 210 1 170 1 24 1 76 1 251 1 172 1 127 1 29 1 174 1 
0 1 299 1 131 1 136 2 223 1 38 1 307 2 6 2 7 1 191 2 47 1 50 4 51 1 150 1 114 1 61 2 116 1 68 2 165 1 121 1 245 1 72 2 73 1 74 1 170 1 210 1 24 1 288 1 76 1 126 1 27 1 127 1 172 1 251 1 174 1 29 1 84 1 
136 1 307 1 138 1 7 1 6 1 191 1 11 1 47 1 105 1 50 3 233 1 58 1 114 1 61 2 116 1 68 2 245 1 168 1 72 1 210 1 170 1 74 1 24 1 76 1 172 1 251 1 29 1 174 1 337 1 
136 1 96 1 307 3 6 1 7 1 191 2 47 1 50 6 197 2 315 1 112 1 61 3 114 1 67 1 68 2 167 1 72 1 247 1 210 1 170 1 123 1 76 1 127 2 29 1 174 1 292 1 
136 11 306 3 4 1 307 6 7 2 6 4 191 2 144 1 47 2 197 1 50 14 148 1 151 1 58 1 61 8 114 1 116 2 161 1 68 4 323 1 71 3 122 1 72 11 210 2 170 2 24 1 329 1 76 2 127 1 251 2 172 1 29 2 174 1 
258 1 98 1 307 1 6 1 7 1 105 1 47 1 197 1 50 2 200 1 111 1 58 1 61 1 241 1 161 1 68 2 323 1 245 1 168 1 210 1 170 1 74 1 174 1 29 1 337 1 338 1 
0 2 2 1 96 1 98 1 7 3 6 7 191 8 105 1 197 2 112 1 114 3 115 2 116 2 121 2 210 3 288 2 24 4 123 1 126 3 27 2 127 4 292 1 29 3 294 2 30 1 299 3 132 1 131 3 136 7 223 2 38 2 307 10 230 2 47 3 50 20 315 1 150 2 154 1 58 1 61 10 161 1 241 1 68 6 323 1 165 2 167 1 245 3 168 1 327 1 72 7 74 3 170 3 73 2 76 3 251 2 172 2 174 3 337 1 84 2 
299 8 131 7 2 2 303 1 262 1 307 1 7 2 190 1 43 2 105 1 47 2 50 2 51 1 152 1 153 1 154 1 61 1 241 1 161 1 67 1 68 4 22 1 323 1 121 2 245 1 168 1 74 1 73 2 210 2 170 2 211 1 288 2 27 3 126 8 293 1 29 2 174 2 214 1 337 1 
136 1 307 2 6 1 7 1 191 1 11 1 47 1 105 1 50 3 233 1 58 1 61 1 114 1 116 1 68 2 245 1 168 1 72 1 210 1 170 1 74 1 248 1 76 1 127 1 251 1 172 1 29 1 174 1 337 1 
33 1 34 1 96 1 306 4 307 21 7 3 191 8 144 3 47 3 104 1 196 1 50 41 198 1 315 1 112 1 18 4 62 1 61 20 114 5 65 1 117 1 116 4 68 6 163 1 280 1 325 2 167 1 71 3 122 1 210 3 24 4 123 1 330 1 76 5 331 1 127 4 251 4 172 4 292 1 173 1 29 3 129 1 86 1 
33 1 34 1 96 1 306 4 307 18 7 4 191 7 144 3 47 4 104 1 196 1 50 38 198 1 315 1 112 1 18 4 62 1 61 20 114 4 65 1 117 1 116 4 68 8 163 1 280 2 325 2 167 1 71 3 122 1 210 4 24 3 123 1 330 1 76 5 331 1 127 4 251 4 172 3 292 1 173 1 29 4 129 1 86 1 
33 1 34 1 96 1 306 4 4 2 307 25 7 2 191 14 144 2 47 2 104 1 196 1 50 52 198 1 315 1 112 1 18 4 62 1 61 27 114 8 116 7 68 4 280 1 163 1 325 1 167 1 71 4 122 2 210 2 24 7 123 1 330 1 76 8 331 1 127 7 251 7 172 7 292 1 173 1 29 2 129 1 86 1 
306 2 307 10 7 2 191 6 144 1 47 2 104 1 50 19 198 1 18 2 61 9 114 3 65 1 116 3 68 4 325 1 71 1 122 1 210 2 24 3 330 1 76 3 331 1 127 3 251 3 172 3 29 2 217 1 129 2 86 1 
33 1 34 1 306 2 307 12 7 3 191 4 144 2 47 3 104 1 50 26 196 1 198 1 18 4 114 2 61 14 62 1 116 3 68 6 163 1 280 2 325 2 71 2 210 3 24 2 330 1 76 3 331 1 127 2 251 3 172 2 29 3 173 1 129 1 86 2 
299 2 131 2 301 1 92 1 41 1 307 1 7 1 43 2 47 1 50 2 152 1 272 1 58 1 61 1 161 1 68 2 22 1 121 1 323 1 166 1 245 2 73 1 210 1 170 1 74 2 288 1 27 1 126 2 174 1 29 1 337 2 
299 2 154 1 131 2 91 1 158 1 183 2 186 1 321 1 73 1 288 1 26 1 126 2 269 1 51 1 291 1 215 1 253 1 55 1 85 1 
299 1 154 1 254 1 131 1 91 1 158 1 183 2 186 1 321 1 73 1 288 1 26 1 126 1 269 1 291 1 253 1 85 1 
299 1 2 1 131 1 91 1 185 1 188 1 262 1 121 1 73 1 288 1 27 1 126 1 215 1 214 1 
299 1 154 1 131 1 91 1 158 1 183 2 186 1 321 1 73 1 288 1 26 1 126 1 269 1 291 1 215 1 253 1 55 1 85 1 
264 1 
247 1 302 1 212 1 194 1 81 1 236 1 310 1 
1 1 219 1 256 1 181 1 220 1 302 1 97 1 8 1 310 1 193 1 194 1 201 1 64 1 208 1 212 2 213 1 177 1 
1 4 2 1 256 5 181 6 93 1 97 5 263 2 8 4 101 2 102 1 194 2 195 1 16 2 107 2 271 1 114 2 116 2 121 3 288 3 212 8 213 4 27 10 126 3 28 2 294 2 299 3 219 5 131 3 220 3 302 9 304 2 224 6 308 2 227 2 228 3 310 8 314 2 51 1 236 1 64 4 157 6 165 3 73 4 76 2 332 2 81 1 334 2 251 2 172 2 336 2 83 1 341 1 178 1 177 12 
219 1 1 2 256 1 34 1 220 1 181 3 302 8 93 1 97 1 224 5 225 1 306 1 227 2 8 2 310 5 144 1 194 2 314 1 196 1 157 5 64 2 62 1 114 2 116 2 243 1 163 1 71 1 212 5 213 2 76 2 332 1 251 2 172 2 173 1 177 6 
1 1 219 1 256 1 3 1 302 2 96 1 227 2 8 1 310 2 143 1 11 1 105 1 316 1 59 1 112 1 318 1 64 1 114 1 278 1 245 1 168 1 328 1 74 1 213 1 76 2 332 1 292 1 337 1 
1 1 64 1 302 1 8 1 310 1 212 1 213 1 194 1 81 1 236 1 
157 5 181 5 114 2 302 5 116 2 224 5 227 2 310 5 212 5 76 2 332 1 251 2 172 2 294 1 177 10 
219 1 256 1 220 1 212 1 194 1 97 1 
299 4 1 2 219 3 131 4 2 2 256 3 220 2 302 2 93 2 97 4 262 1 8 2 310 2 13 1 314 2 54 1 64 2 239 1 121 1 244 1 73 1 288 1 213 1 27 1 126 4 214 1 83 1 178 2 88 1 
299 1 0 1 32 1 131 1 2 1 38 1 307 1 7 1 11 2 143 1 47 1 105 2 197 1 50 1 150 1 161 1 68 2 165 1 121 1 245 3 168 2 74 3 73 1 170 1 210 1 288 1 126 1 27 1 29 1 174 1 337 2 84 1 
1 1 181 2 157 2 64 1 302 1 93 1 224 2 8 1 310 2 123 1 212 4 213 1 194 2 314 1 177 4 
255 1 63 1 259 1 
255 1 63 1 259 1 
255 1 63 1 259 1 
63 1 259 1 
222 1 218 1 
63 1 259 1 164 1 
63 1 259 1 164 1 
63 1 259 1 164 1 
63 1 259 1 36 1 80 1 162 1 
96 1 306 1 307 4 7 1 191 2 144 1 47 1 50 8 198 1 315 1 112 1 114 1 61 4 68 2 167 1 71 1 210 1 123 1 76 1 127 2 173 1 29 1 292 1 
96 1 306 2 307 5 7 2 191 3 144 1 47 2 50 11 198 1 315 1 112 1 114 1 61 6 116 1 68 4 167 1 71 1 122 1 210 2 24 1 123 1 289 1 76 2 127 2 251 1 292 1 173 1 29 2 
34 1 96 1 306 1 307 10 7 3 191 4 144 1 47 3 50 19 196 1 198 1 315 1 112 1 61 9 62 1 114 3 116 2 68 6 163 1 280 1 167 1 71 1 210 3 24 1 123 1 289 1 76 3 251 2 172 2 127 3 292 1 173 1 29 3 
34 1 96 1 306 1 307 7 7 3 191 5 144 1 47 3 50 17 196 1 198 1 315 1 112 1 61 10 62 1 114 2 116 2 68 6 280 1 163 1 167 1 71 1 210 3 24 2 123 1 289 1 76 3 251 2 172 1 127 3 292 1 173 1 29 3 
96 1 306 1 307 4 7 1 191 2 144 1 47 1 50 8 198 1 315 1 112 1 114 1 61 4 68 2 167 1 71 1 210 1 123 1 76 1 127 2 173 1 29 1 292 1 
34 1 114 2 62 1 61 6 116 2 306 1 68 2 307 6 163 1 7 1 191 2 71 1 210 1 24 1 144 1 76 2 47 1 196 1 50 12 127 1 172 2 251 2 198 1 29 1 173 1 
34 1 96 1 306 1 307 8 7 4 191 5 144 1 47 4 50 18 196 1 198 1 315 1 112 1 61 10 62 1 114 2 116 2 68 8 163 1 280 2 167 1 71 1 210 4 24 2 123 1 289 1 76 3 251 2 172 1 127 3 292 1 173 1 29 4 
34 1 306 1 307 7 7 4 191 6 144 1 47 4 50 16 196 1 198 1 61 9 62 1 114 2 65 1 116 3 68 8 163 1 280 2 71 1 210 4 24 3 76 3 251 3 172 2 127 3 173 1 29 4 
112 3 114 1 61 3 96 1 307 4 191 6 167 1 24 3 76 1 50 7 127 3 315 2 292 3 
34 1 96 1 306 1 307 8 7 4 191 4 144 1 47 4 50 18 196 1 198 1 315 1 112 1 61 10 62 1 114 2 65 1 116 2 68 8 163 1 280 2 167 1 71 1 210 4 24 1 123 1 76 3 251 2 172 1 127 3 292 1 173 1 29 4 
112 1 114 1 61 4 96 1 307 4 68 4 7 2 280 1 191 3 167 1 210 2 24 1 123 1 76 1 47 2 50 8 127 2 29 2 315 1 292 1 
112 1 61 3 114 1 96 1 307 3 191 2 167 1 247 1 123 1 76 1 50 6 127 2 315 1 292 1 
114 1 61 2 116 1 307 2 68 2 7 1 191 2 210 1 24 1 289 1 47 1 76 1 50 4 127 1 172 1 251 1 29 1 
114 1 61 3 116 1 306 2 307 4 191 2 71 1 122 1 24 1 144 1 76 1 50 7 127 1 172 1 251 1 
96 1 306 2 307 12 4 1 7 2 191 9 47 2 50 23 315 1 112 2 61 11 114 3 116 2 68 4 242 1 280 2 167 1 122 1 71 2 210 2 24 4 123 1 329 1 76 3 251 2 172 2 127 5 292 2 29 2 
50 1 306 1 307 1 
71 1 61 1 50 1 
61 3 114 1 116 1 68 2 307 3 7 1 191 3 210 1 24 1 289 1 47 1 76 1 50 6 251 1 172 1 127 2 29 1 294 1 
34 1 114 2 62 1 61 6 116 2 306 1 68 2 307 6 163 1 7 1 191 2 71 1 210 1 24 1 144 1 76 2 47 1 196 1 50 12 127 1 172 2 251 2 198 1 29 1 173 1 
112 1 61 3 114 1 96 1 307 3 191 2 24 1 76 1 50 6 127 1 292 1 
112 1 61 1 242 1 307 2 68 2 280 1 7 1 191 2 167 1 210 1 24 1 47 1 50 3 127 1 292 1 315 1 29 1 
112 2 61 5 114 2 96 1 68 2 307 5 7 1 191 5 210 1 24 2 47 1 76 2 50 10 198 1 127 3 29 1 292 2 316 1 
61 2 68 2 7 1 191 1 210 1 24 1 47 1 76 1 50 2 198 1 251 1 29 1 
114 1 61 2 116 1 307 2 68 2 7 1 191 2 210 1 24 1 47 1 76 1 50 4 127 1 172 1 198 1 251 1 29 1 
112 1 61 1 65 1 242 1 307 2 68 6 280 1 7 3 191 2 210 3 24 1 47 3 50 3 198 1 127 1 29 3 292 1 
96 2 306 4 307 18 7 5 191 12 144 1 47 5 50 34 198 1 315 1 112 3 61 16 114 5 65 1 116 3 279 1 242 1 68 10 280 2 167 1 71 3 122 1 210 5 24 5 123 1 289 1 76 5 251 3 172 3 127 7 292 3 29 5 295 1 89 1 
100 1 20 1 281 1 
100 1 246 1 42 1 209 1 12 1 20 1 95 1 281 1 
299 1 247 1 73 1 131 1 2 1 288 1 27 1 126 1 262 1 214 1 121 1 
299 1 2 1 131 1 241 1 38 1 121 1 165 1 245 2 168 1 73 1 74 2 288 1 105 1 197 1 27 1 126 1 337 1 150 1 
299 1 31 1 131 1 38 1 229 1 105 2 197 1 107 1 150 1 59 2 159 1 241 1 165 2 121 2 245 2 168 1 74 2 73 1 288 1 126 1 27 3 337 2 336 1 178 1 
299 1 31 1 131 1 38 1 229 1 105 2 197 1 107 1 59 2 60 1 159 1 241 1 165 2 121 2 245 2 168 1 74 2 73 1 288 1 126 1 27 3 337 2 336 1 178 1 
299 3 219 2 131 3 256 2 2 1 94 1 187 1 97 1 5 1 308 1 228 1 194 1 107 1 165 1 121 1 73 1 288 1 212 1 27 4 126 3 334 1 336 1 178 1 
299 3 219 2 2 1 256 2 131 3 304 1 187 1 97 1 308 1 121 1 165 1 228 1 73 1 288 1 212 1 194 1 126 3 27 4 334 1 336 1 107 1 178 1 
299 1 73 1 131 1 288 1 303 1 126 1 
153 1 299 7 154 1 2 2 131 6 303 1 205 1 165 1 121 2 43 1 285 1 102 1 73 3 211 1 288 2 126 7 27 3 51 1 293 1 216 1 152 1 
0 1 96 1 6 1 7 2 191 2 105 1 197 2 112 1 114 1 115 1 121 1 210 2 288 1 123 1 126 1 27 1 127 2 29 2 292 1 299 1 131 1 136 1 223 1 38 1 41 1 307 3 47 2 50 6 51 1 315 1 150 1 58 1 61 3 241 1 68 4 165 1 245 2 167 1 168 1 72 1 74 2 170 2 73 1 76 1 174 2 337 1 84 1 
299 1 1 2 219 3 131 1 2 1 256 3 220 1 302 1 304 1 97 2 263 1 308 1 8 2 310 1 228 1 194 1 16 1 236 1 64 2 169 1 212 1 213 2 81 1 126 1 27 2 334 1 28 1 83 1 
299 2 131 2 303 1 165 1 121 1 102 1 73 2 288 1 126 2 27 2 51 1 334 1 341 1 
299 4 2 1 131 4 187 1 262 1 121 1 73 1 288 1 126 4 27 1 52 1 51 1 214 1 
299 2 179 1 131 2 277 1 205 1 165 1 121 1 327 1 73 2 288 1 126 2 27 1 216 1 178 1 
299 1 73 1 131 1 2 1 288 1 26 1 158 1 183 1 186 1 126 1 
299 2 154 1 73 1 131 2 288 1 27 1 126 2 51 1 121 1 152 1 166 1 
299 5 153 1 2 1 131 4 262 1 121 2 73 2 288 2 126 5 27 3 52 1 51 1 214 1 293 1 152 1 178 1 
299 5 155 1 2 1 131 4 262 1 121 2 73 2 288 2 126 5 27 3 52 1 51 1 214 1 293 1 152 1 178 1 
299 1 2 1 131 1 60 1 241 1 38 1 121 1 165 1 245 2 168 1 73 1 74 2 288 1 105 1 197 1 27 1 126 1 337 1 
299 1 131 1 205 1 165 1 121 1 285 1 102 1 73 2 288 1 126 1 27 1 216 1 178 1 
74 1 301 1 134 1 92 1 337 1 128 1 272 1 245 1 57 1 
340 1 128 1 176 1 
134 1 197 1 149 1 128 1 57 1 
219 2 31 1 256 2 134 1 308 1 229 1 11 1 143 1 194 1 105 1 149 1 57 1 274 1 276 1 59 2 318 1 278 1 245 1 168 1 169 1 328 1 74 1 212 1 337 1 340 1 128 1 296 1 176 1 
247 1 146 1 147 1 317 1 
326 1 133 1 46 1 146 1 147 1 260 1 317 1 
113 1 46 1 56 1 
202 1 133 3 240 1 260 1 120 2 10 1 326 1 192 1 46 3 146 1 147 1 317 1 
326 1 44 1 133 2 46 2 146 1 147 1 260 1 39 1 317 1 
326 1 10 1 286 1 133 1 46 1 183 1 78 1 186 1 260 1 253 1 
326 1 10 1 133 1 46 1 146 1 260 1 317 1 
326 1 10 1 133 1 46 1 147 1 260 1 317 2 
326 2 10 1 268 1 133 2 46 2 146 1 260 2 69 1 106 1 317 1 
19 1 133 3 260 1 39 2 10 1 326 1 287 1 46 3 146 1 147 1 78 1 234 1 317 1 
133 2 183 2 260 1 321 1 186 1 39 1 9 1 10 1 326 1 26 1 46 2 146 1 147 1 253 1 317 1 
133 4 260 2 39 2 10 1 326 2 44 1 46 4 146 1 147 1 78 1 234 1 317 1 110 1 
326 1 10 1 133 1 46 1 146 1 147 1 260 1 317 1 
133 4 240 1 260 1 261 1 39 2 120 1 192 1 326 1 46 4 146 2 147 2 78 1 234 1 317 2 
133 2 156 1 260 1 39 1 10 1 326 1 46 2 312 1 48 1 146 1 147 1 317 1 
133 3 240 1 260 1 120 2 10 1 326 1 192 2 14 1 46 3 146 1 147 1 317 1 
182 1 45 1 146 2 283 2 
326 1 10 1 171 1 133 1 46 1 260 1 
326 1 10 1 19 1 133 2 46 2 146 1 147 1 260 1 39 1 317 1 
275 1 
326 1 10 1 133 1 46 1 146 1 147 1 260 1 317 1 
326 1 10 1 19 1 133 3 46 3 146 1 147 1 260 1 39 1 317 1 120 1 
133 1 46 1 78 1 39 1 234 1 
146 1 317 1 

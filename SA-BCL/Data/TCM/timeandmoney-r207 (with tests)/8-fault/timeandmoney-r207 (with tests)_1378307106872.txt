#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 216 (54,85) (54,85) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 216 (54,85) (54,85) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 216 (54,85) (54,85) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 216 (54,85) (54,85) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 216 170 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 216 170 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (5,240,315) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (74,129,174) 22 168 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (5,240,315) 87 181 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (74,129,174) 22 168 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (5,240,315) 87 66 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 105 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.ArrayIndexOutOfBoundsException 329 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (74,129,174) 22 (5,240,315) 126 112 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (74,129,174) 22 168 193 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (74,129,174) 22 168 193 281 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 199 265 (59,233) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 199 265 (60,250) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (5,240,315) 87 178 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 1 84 2 85 1 342 1 152 1 72 1 196 1 27 1 164 1 48 1 202 2 201 4 158 1 107 4 257 2 54 1 258 1 216 1 78 1 318 1 125 1 208 1 
198 1 84 2 85 1 342 1 152 1 72 1 196 1 27 1 164 1 48 1 202 2 201 4 158 1 107 4 257 2 54 1 258 1 216 1 78 1 318 1 125 1 208 1 
198 1 84 2 85 1 342 1 152 1 72 1 196 1 27 1 164 1 48 1 202 2 201 4 158 1 107 4 257 2 54 1 258 1 216 1 78 1 318 1 125 1 208 1 
198 1 84 2 85 1 342 1 152 1 72 1 196 1 27 1 164 1 48 1 202 2 201 4 158 1 107 4 257 2 54 1 258 1 216 1 78 1 318 1 125 1 208 1 
198 1 84 1 72 1 196 3 99 1 164 1 202 1 201 4 48 2 183 2 158 1 107 4 246 1 216 1 318 3 228 1 261 1 208 1 
84 1 272 1 342 1 164 1 202 1 201 2 144 1 107 2 158 1 257 1 6 1 246 1 258 1 318 1 228 1 208 1 
198 1 84 2 196 1 202 2 201 3 48 1 107 3 257 1 246 1 78 1 318 2 228 1 208 1 
198 1 84 2 152 1 196 2 200 1 202 2 201 4 48 1 107 4 170 1 257 1 216 1 78 1 318 1 208 1 
198 1 84 2 152 1 196 2 200 1 202 2 201 4 48 1 107 4 170 1 257 1 216 1 78 1 318 1 208 1 
120 1 8 1 105 1 
120 1 343 2 82 1 
304 2 129 2 333 2 174 2 302 2 74 2 249 1 238 1 
179 1 304 2 129 3 151 1 265 1 155 1 74 2 31 1 3 1 106 1 7 1 205 1 160 1 269 1 249 1 330 2 59 1 351 2 111 1 333 2 37 1 38 1 334 1 88 1 295 1 255 1 298 1 18 1 92 2 64 1 337 2 213 1 361 1 174 2 302 3 68 2 238 1 
304 1 286 1 129 1 333 1 20 1 56 1 174 1 302 1 74 1 249 1 
5 1 22 1 74 1 
304 1 129 1 333 1 56 1 67 1 240 1 174 1 302 1 74 1 207 1 
128 1 150 1 209 1 315 1 274 1 
128 1 150 2 120 1 264 1 315 2 8 1 274 1 62 1 
128 1 150 1 315 1 
150 1 304 1 129 1 333 1 274 1 74 1 286 1 315 1 20 1 56 1 174 1 302 1 249 1 80 1 
120 1 
128 1 150 2 120 1 315 2 8 1 274 1 142 1 62 1 
150 5 195 2 128 2 34 1 0 1 274 2 29 1 141 2 103 1 104 1 62 1 120 1 315 5 121 2 55 1 8 1 346 1 197 1 127 1 
238 1 105 1 
304 1 129 2 333 1 74 2 174 1 302 2 238 2 341 1 290 1 
253 1 138 1 117 1 
351 1 111 1 129 1 265 1 31 1 255 1 92 1 106 1 18 1 205 1 213 1 302 1 68 1 238 1 25 1 59 1 
331 1 351 1 111 1 129 2 333 1 265 1 31 1 74 1 255 1 18 1 106 1 92 1 159 1 205 1 213 1 174 1 302 2 138 1 68 1 59 1 
331 2 304 1 129 4 159 1 291 1 333 4 86 1 22 1 174 4 302 4 74 5 238 1 168 1 290 1 
352 1 129 2 333 2 20 1 56 1 174 2 302 2 74 2 
331 1 304 1 129 3 333 3 174 3 302 3 74 3 238 1 
129 1 333 1 20 1 56 1 174 1 302 1 74 1 
304 1 129 1 333 1 56 1 174 1 302 1 74 1 341 1 290 1 
331 1 304 1 129 2 181 1 333 2 240 1 87 1 74 2 159 1 56 1 67 1 174 2 302 2 207 1 290 1 
331 1 129 1 333 1 22 1 174 1 302 1 74 2 168 1 
331 1 129 1 333 1 240 1 87 1 74 1 159 1 66 1 56 1 67 1 174 1 302 1 207 1 
331 1 304 1 129 2 333 2 253 1 74 2 174 2 302 2 138 1 290 1 
351 1 111 1 129 1 265 1 31 1 255 1 92 1 106 1 18 1 205 1 213 1 302 1 68 1 238 1 59 1 
351 1 129 1 265 1 115 1 31 1 255 1 92 1 106 1 18 1 205 1 213 1 302 1 68 1 238 1 250 1 
179 1 239 1 154 1 1 1 155 2 3 1 203 1 7 1 160 2 269 1 138 2 12 1 330 2 139 1 35 1 88 1 253 2 116 1 117 2 312 1 119 1 298 1 337 4 338 1 
352 1 129 1 333 1 56 1 174 1 302 1 74 1 207 1 
273 1 177 1 
273 1 177 1 
251 1 186 1 
251 1 186 1 
251 1 186 1 
273 1 271 1 177 1 
273 1 271 1 177 1 
273 1 101 1 177 1 
288 1 273 2 251 1 294 1 177 2 186 1 
273 1 271 1 177 1 
19 1 273 1 177 1 
19 1 273 1 177 1 
19 1 273 1 177 1 
180 1 150 1 26 1 129 2 323 1 47 1 74 2 101 1 287 1 221 1 53 1 33 1 333 2 273 1 89 1 145 1 315 1 174 2 302 2 148 1 24 1 238 1 177 1 70 1 
33 2 180 2 150 2 273 2 241 1 323 2 47 3 294 1 145 2 327 1 120 1 315 2 221 1 173 2 95 1 215 1 147 1 289 1 177 2 
158 1 72 1 164 1 
158 1 164 1 144 1 
158 3 72 2 191 1 15 1 166 1 144 1 
158 2 72 1 191 1 166 1 299 1 144 1 
158 2 72 1 191 2 166 1 144 1 
262 2 26 1 128 1 150 5 0 1 280 1 1 1 2 1 343 3 51 1 287 1 8 1 55 3 248 1 12 1 349 1 82 1 195 1 34 2 35 1 274 4 252 1 16 2 141 1 210 1 62 1 120 2 338 1 121 1 315 5 148 1 175 2 
262 6 97 1 128 6 150 9 0 1 1 3 182 5 326 1 343 9 51 2 287 4 8 1 55 8 108 1 12 3 348 1 349 2 82 3 195 2 34 6 35 3 231 1 209 5 140 1 274 7 252 1 141 2 210 3 62 1 120 5 338 3 315 9 121 2 197 1 175 6 
262 2 150 3 280 1 1 1 343 4 51 1 287 1 8 1 55 3 248 1 12 1 349 1 82 2 195 1 35 1 34 2 274 2 16 1 141 1 210 1 120 3 338 1 121 1 315 3 197 1 175 2 
262 4 97 1 150 4 280 1 1 2 326 1 343 7 51 1 287 2 8 1 55 5 108 1 248 1 12 2 349 1 82 3 195 1 35 2 34 4 274 3 16 2 141 1 210 2 120 4 338 2 121 1 315 4 175 4 197 1 
267 1 105 1 
236 1 213 1 
185 1 
18 1 106 1 213 1 
213 1 242 1 
18 1 213 1 
18 1 106 1 278 1 213 1 267 1 329 1 
353 2 131 1 154 2 266 1 30 1 155 4 17 1 203 3 277 1 93 1 337 7 160 3 338 1 12 1 303 1 218 1 176 1 
353 2 131 1 154 2 266 1 30 1 155 4 17 1 203 3 277 1 93 1 337 7 160 3 338 1 12 1 303 1 218 1 176 1 
353 2 131 1 154 2 266 1 30 1 155 4 17 1 203 3 277 1 93 1 171 1 337 7 160 3 338 1 12 1 176 1 303 1 218 1 
179 1 131 4 154 3 266 1 1 3 155 11 3 1 282 1 284 1 203 7 160 11 269 1 57 1 12 3 330 2 353 1 35 3 17 1 210 3 90 3 276 4 235 1 298 1 277 1 313 1 337 22 301 1 338 3 65 1 303 1 
179 2 131 1 154 3 266 1 30 1 155 5 102 1 3 2 203 4 160 4 269 2 12 1 330 4 229 1 353 2 17 1 298 2 277 1 93 1 337 9 301 1 338 1 303 1 176 1 
72 1 31 1 133 1 201 2 202 1 283 1 107 2 158 2 246 1 345 1 247 1 228 1 208 1 351 1 84 1 196 1 61 1 15 1 164 1 310 1 118 1 255 1 144 1 92 1 257 1 41 1 318 1 68 1 217 1 340 1 
72 1 31 1 133 1 201 3 202 1 283 1 157 1 107 3 158 2 246 1 345 1 228 1 351 1 84 1 14 1 196 2 15 1 164 1 310 1 114 1 118 1 255 1 144 1 92 1 257 1 41 1 318 1 68 1 217 1 340 1 
72 1 31 1 133 1 201 2 157 1 107 2 158 2 246 1 345 1 228 1 351 1 196 2 15 1 310 1 164 1 114 1 118 1 255 1 144 1 92 1 257 1 41 1 318 1 68 1 340 1 
31 1 268 1 133 2 201 1 202 1 204 1 107 1 245 1 205 1 345 2 223 1 58 1 351 1 84 1 14 1 232 1 255 1 118 2 92 1 18 1 257 2 213 1 68 1 
72 1 31 1 133 1 201 1 202 1 283 1 157 1 107 1 158 2 345 1 247 1 208 1 351 1 84 1 15 1 164 1 310 1 118 1 255 1 144 1 92 1 257 1 41 1 68 1 217 1 340 1 
311 1 
150 2 128 2 0 1 74 1 31 1 268 1 307 1 51 1 243 1 5 1 205 2 55 1 223 1 270 1 351 2 354 1 195 1 112 1 34 1 141 1 255 1 62 1 92 2 18 1 213 1 121 1 315 2 22 1 68 2 126 1 219 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 128 1 150 2 5 1 112 1 315 2 22 1 74 1 142 1 126 1 62 1 
243 1 354 1 195 1 150 1 5 1 112 1 0 1 121 1 315 1 22 1 74 1 141 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 150 1 5 1 112 1 315 1 22 1 74 1 126 1 
243 1 354 1 195 1 150 1 5 1 112 1 0 1 121 1 315 1 22 1 74 1 141 1 126 1 
179 1 154 2 266 1 30 1 155 3 3 1 105 1 203 2 7 1 160 3 269 1 138 1 12 1 330 2 353 1 253 1 88 1 117 1 312 1 298 1 277 1 93 1 337 6 338 1 176 1 238 2 
179 2 131 1 98 1 154 1 1 1 155 8 3 2 203 2 7 2 160 6 269 2 136 1 57 1 138 11 12 2 330 4 227 1 35 2 334 1 88 1 253 4 117 11 210 2 276 3 90 3 235 1 298 2 64 1 337 14 338 1 44 1 317 1 238 1 
179 1 129 2 321 1 265 1 31 1 74 1 155 1 3 1 106 1 205 1 7 1 159 1 160 1 269 1 330 2 59 1 111 1 351 1 331 1 333 1 334 1 358 1 253 1 88 1 255 1 298 1 40 1 18 1 92 1 64 1 337 2 213 1 317 1 174 1 302 2 68 1 238 1 25 1 
46 2 154 4 100 2 1 2 155 10 3 3 203 8 106 2 157 1 205 1 159 1 7 3 160 10 110 1 12 3 330 6 59 2 331 1 111 2 333 1 334 1 254 2 253 7 117 7 255 2 210 2 298 3 18 2 336 1 64 1 337 20 338 3 213 2 174 1 302 3 68 3 176 1 179 3 129 3 131 4 265 2 266 1 30 1 74 1 31 2 132 1 269 3 138 7 351 3 83 2 353 1 35 2 88 3 277 1 92 3 93 1 361 2 317 1 238 2 
179 2 129 1 322 1 74 1 31 2 155 1 268 1 3 2 157 1 328 1 205 2 7 2 160 1 269 2 223 1 109 1 330 4 81 1 331 1 351 8 333 1 61 1 38 2 334 1 88 2 312 1 255 2 212 1 298 2 92 7 18 2 64 1 337 2 213 3 42 1 174 1 302 1 68 8 237 1 
304 1 179 1 129 1 154 1 1 1 74 1 155 1 3 1 203 1 189 1 7 1 160 2 269 1 138 1 12 1 330 2 290 1 35 1 333 1 253 1 88 1 117 1 210 1 298 1 337 3 338 1 317 1 174 1 302 1 
179 1 35 1 131 1 253 1 88 1 116 1 155 2 117 1 312 1 3 1 203 1 298 1 337 2 7 1 269 1 138 1 12 1 330 2 
179 1 154 1 1 1 253 1 88 1 117 1 312 1 3 1 119 1 203 1 298 1 337 2 7 1 338 1 160 2 269 1 138 1 330 2 
179 1 131 1 154 1 1 1 155 2 3 1 203 2 7 1 160 2 269 1 138 2 12 1 330 2 35 1 88 1 253 2 117 2 312 1 210 1 298 1 337 4 338 1 
179 1 35 1 131 1 253 1 88 1 116 1 155 2 117 1 3 1 203 1 298 1 337 2 7 1 269 1 138 1 12 1 330 2 81 1 
179 1 154 1 1 1 253 1 88 1 117 1 3 1 119 1 203 1 298 1 337 2 7 1 338 1 160 2 269 1 138 1 330 2 81 1 
179 1 131 1 154 1 1 1 155 2 3 1 203 2 7 1 160 2 269 1 138 2 12 1 330 2 81 1 35 1 88 1 253 2 117 2 210 1 298 1 337 4 338 1 
179 1 131 1 154 1 1 1 155 2 3 1 203 2 7 1 160 2 269 1 138 2 12 1 330 2 35 1 88 1 253 2 117 2 210 1 298 1 337 4 338 1 
179 1 129 1 265 1 155 1 31 1 3 1 106 1 205 1 7 1 160 1 269 1 330 2 59 1 111 1 351 1 334 1 88 1 255 1 298 1 18 1 92 1 64 1 337 2 361 1 213 1 302 1 68 1 238 1 
179 1 129 1 265 1 155 1 31 1 3 1 106 1 205 1 7 1 160 1 269 1 192 1 330 2 250 1 351 1 334 1 115 1 88 1 255 1 298 1 18 1 92 1 64 1 337 2 213 1 302 1 68 1 238 1 
179 1 131 1 154 1 1 1 155 2 3 1 203 2 7 1 160 2 269 1 138 2 12 1 330 2 35 1 88 1 253 2 117 2 210 1 298 1 337 4 338 1 317 1 
179 1 46 1 129 1 131 1 154 1 265 1 1 1 155 2 31 1 3 1 203 2 106 1 7 1 160 2 269 1 138 2 12 1 330 2 59 1 111 1 351 1 35 1 61 1 253 2 88 1 117 2 255 1 210 1 298 1 92 1 18 1 337 4 338 1 361 1 213 1 302 1 68 1 
304 1 179 1 129 1 131 1 220 1 1 1 74 1 155 2 3 1 203 1 7 1 160 1 269 1 138 1 12 1 330 2 290 1 35 1 333 1 88 1 253 1 117 1 210 1 298 1 337 3 338 1 317 1 174 1 302 1 
179 2 131 3 153 2 154 3 1 3 155 9 102 1 49 1 3 2 203 6 160 10 269 2 57 1 12 3 194 1 330 4 35 3 356 1 210 3 297 2 211 1 276 2 90 1 235 1 63 1 298 2 337 19 338 3 124 1 96 1 
179 3 131 2 154 2 153 4 1 2 324 1 155 14 102 1 49 2 3 3 203 4 285 1 32 1 160 12 269 3 10 1 12 3 194 1 330 6 35 3 275 1 210 3 297 1 276 2 90 2 235 2 63 1 169 1 298 3 301 2 337 26 338 2 124 1 96 2 
154 4 153 4 1 4 155 20 324 1 102 1 49 1 3 3 203 8 285 1 160 21 57 1 10 1 11 1 12 5 330 6 210 4 297 1 298 3 169 1 63 1 337 41 301 1 338 5 124 1 176 1 179 3 131 4 266 1 30 1 32 1 269 3 194 1 353 1 35 4 356 1 275 1 90 3 276 4 235 3 277 1 93 1 96 2 
179 4 131 3 153 4 154 4 266 1 30 1 1 3 324 1 155 20 102 1 49 1 3 4 203 7 285 1 32 1 160 18 269 4 10 1 57 1 11 1 12 5 194 1 330 8 353 1 35 4 356 1 275 1 210 4 297 1 276 4 90 3 235 3 63 1 169 1 298 4 277 1 93 1 301 2 337 38 338 4 124 1 176 1 96 2 
179 2 131 7 153 4 154 7 266 1 30 1 1 7 324 1 155 27 102 1 49 1 3 2 203 14 285 1 32 1 160 25 269 2 10 1 136 2 57 2 12 8 194 1 330 4 353 1 35 7 275 1 210 7 297 1 276 4 90 4 235 2 63 1 169 1 298 2 277 1 93 1 301 1 337 52 338 8 124 1 176 1 96 1 
263 1 33 1 145 1 180 1 327 1 273 1 241 1 323 1 294 1 177 1 
53 1 101 1 
33 1 145 1 162 1 180 1 94 1 273 1 214 1 323 1 177 1 
79 1 271 1 
288 1 19 1 134 1 
33 1 150 1 180 1 273 1 241 1 323 1 47 2 294 1 145 1 327 1 120 1 221 1 315 1 173 1 95 1 215 1 147 1 177 1 
33 1 150 1 180 1 273 1 241 1 323 1 47 2 294 1 145 1 327 1 120 1 221 1 315 1 173 1 95 1 215 1 147 1 177 1 
33 1 150 1 180 1 273 1 241 1 323 1 47 2 294 1 145 1 327 1 120 1 221 1 315 1 173 1 95 1 215 1 147 1 177 1 
288 1 79 1 271 1 
288 1 79 1 271 1 
19 1 134 1 
288 1 19 1 134 1 
89 1 70 1 
150 1 180 1 26 1 129 2 323 1 47 1 101 1 74 2 287 1 53 1 33 1 13 1 273 1 333 2 274 1 89 1 145 1 315 1 173 1 215 1 174 2 302 2 148 1 24 1 238 1 177 1 70 1 
179 1 129 2 322 1 31 1 74 2 155 1 3 1 7 1 160 1 269 1 9 1 330 2 351 2 230 1 38 2 334 1 88 1 255 1 91 1 298 1 18 1 92 2 300 1 64 1 337 2 213 1 316 1 42 1 317 1 302 2 68 2 
351 2 72 1 61 1 15 1 164 1 310 1 31 1 255 1 144 1 92 2 158 2 157 1 244 1 41 1 345 1 68 2 217 1 69 1 320 1 
351 1 45 1 72 1 15 1 164 1 310 1 31 1 255 1 144 1 92 1 158 2 157 1 41 1 345 1 68 1 217 1 69 1 
351 1 232 1 31 1 268 1 255 1 18 1 92 1 205 1 213 1 345 1 76 1 223 1 68 1 320 1 
351 1 72 1 15 1 164 1 310 1 31 1 255 1 144 1 92 1 158 2 157 1 244 1 41 1 345 1 68 1 217 1 69 1 320 1 
143 1 
120 1 34 1 55 1 8 1 103 1 104 1 105 1 
150 1 128 1 195 1 0 1 34 1 165 1 141 1 62 1 343 1 120 2 308 1 315 1 121 1 8 1 55 1 319 1 82 1 
150 2 0 2 1 1 325 1 51 1 106 1 205 1 55 4 12 1 254 1 255 2 335 1 210 1 62 1 18 1 120 3 213 3 121 2 338 1 339 1 175 3 68 1 262 3 128 2 267 1 31 1 343 6 75 1 137 1 225 1 350 1 82 3 351 1 195 2 35 1 34 3 233 1 141 2 92 1 278 1 236 2 279 1 315 2 
262 5 150 1 128 1 0 2 1 2 344 1 343 6 51 1 75 2 285 1 32 1 55 8 8 2 270 1 10 1 12 2 82 3 195 2 34 5 35 2 275 1 141 2 210 2 62 1 360 1 276 1 90 1 235 1 169 1 120 5 172 1 315 1 121 2 338 2 175 5 
150 1 304 1 129 1 0 1 266 1 74 1 344 1 75 2 286 1 4 1 55 2 56 1 12 2 249 1 80 1 195 1 34 2 333 1 141 1 277 1 93 1 121 1 315 1 338 1 20 1 43 1 174 1 302 1 
195 1 0 1 34 1 141 1 103 1 104 1 120 1 121 1 8 1 55 1 
262 5 35 2 34 5 1 2 254 1 210 2 344 1 343 10 75 2 120 5 338 2 55 5 175 5 12 2 82 5 
150 1 128 1 120 1 315 1 8 1 62 1 
128 4 150 3 0 1 31 1 268 1 307 1 51 2 205 2 55 2 223 1 270 2 226 2 351 4 195 2 34 2 163 1 141 2 359 1 255 1 62 2 256 1 18 1 92 4 213 1 121 2 315 3 197 1 68 4 219 1 
179 1 304 2 129 3 151 1 265 1 74 2 31 1 3 1 106 1 205 1 7 1 160 1 269 1 249 1 330 2 59 1 351 1 111 1 333 2 88 1 255 1 298 1 92 1 18 1 64 1 337 1 361 1 213 1 174 2 302 3 68 1 238 1 
262 2 353 1 195 1 34 2 0 1 141 1 343 4 51 1 120 4 121 1 55 1 8 2 270 1 175 2 82 2 
33 1 305 1 323 1 
33 1 305 1 323 1 
33 1 327 1 36 1 323 1 70 1 
33 1 305 1 323 1 
33 1 190 1 323 1 
33 1 190 1 323 1 
33 1 190 1 323 1 
33 1 323 1 
273 1 177 1 
353 1 179 2 131 1 154 2 266 1 30 1 155 4 3 2 203 3 298 2 277 1 93 1 337 8 301 1 338 1 160 4 269 2 12 1 176 1 330 4 
353 1 154 2 266 1 30 1 155 3 105 1 203 2 277 1 93 1 337 6 160 3 338 1 176 1 12 1 
179 1 35 1 131 1 154 1 1 1 155 2 210 1 3 1 203 2 298 1 337 4 160 2 338 1 269 1 206 1 12 1 330 2 
35 1 131 1 154 1 1 1 155 3 210 1 276 2 90 1 235 1 203 2 337 7 338 1 160 4 57 1 12 1 
179 2 131 4 154 5 266 2 30 1 1 2 155 11 3 2 203 9 160 12 269 2 57 1 136 1 12 3 330 4 353 1 35 2 210 2 296 1 90 2 276 2 298 2 277 2 93 1 337 23 301 2 338 3 44 1 176 1 
337 1 160 1 276 1 
337 1 155 1 90 1 
179 1 35 1 131 1 154 2 1 1 254 1 155 3 210 1 3 1 298 1 203 3 337 6 160 3 338 1 269 1 206 1 12 1 330 2 
179 1 131 1 154 1 1 2 155 6 102 1 3 1 203 2 285 1 32 1 160 6 269 1 10 1 12 2 330 2 35 2 275 1 210 2 90 1 276 1 235 1 298 1 169 1 337 12 338 2 
131 1 154 1 266 1 155 3 203 2 277 1 93 1 337 6 338 1 160 3 12 1 
179 1 131 1 154 1 266 1 30 1 155 1 296 1 3 1 203 2 298 1 277 1 337 3 301 1 160 2 269 1 176 1 330 2 
179 1 131 2 154 3 266 2 155 5 102 1 3 1 298 1 203 5 277 2 4 1 93 1 337 10 160 5 338 2 269 1 12 2 330 2 
179 1 35 1 131 1 155 2 102 1 3 1 298 1 203 1 337 2 269 1 12 1 330 2 
179 1 35 1 131 1 154 1 1 1 155 2 102 1 210 1 3 1 203 2 298 1 337 4 160 2 338 1 269 1 12 1 330 2 
179 3 356 1 131 1 154 1 266 1 155 1 102 1 296 1 3 3 298 3 203 2 277 1 301 1 337 3 160 2 269 3 330 6 
179 5 131 5 154 7 266 3 30 1 1 3 155 16 102 1 3 5 284 1 203 12 160 18 269 5 57 1 206 1 12 5 330 10 353 1 35 3 356 1 296 1 210 3 276 4 90 3 235 1 298 5 277 3 313 1 93 2 301 2 337 34 65 1 338 5 176 1 
179 1 154 2 266 1 30 1 155 4 102 1 3 1 203 2 285 1 160 4 269 1 12 1 330 2 353 1 90 1 276 1 235 1 298 1 277 1 93 1 337 8 338 1 176 1 
179 2 131 1 154 2 266 1 30 1 155 6 102 1 3 2 203 3 285 1 160 5 269 2 57 1 206 1 12 2 330 4 353 1 35 1 210 1 276 2 90 1 235 1 298 2 277 1 93 1 337 11 338 1 176 1 
179 3 131 1 154 3 266 1 30 1 1 2 155 9 102 1 3 3 203 4 285 1 32 1 160 10 269 3 10 1 206 1 12 3 330 6 353 1 35 2 275 1 210 2 90 1 276 1 235 1 169 1 298 3 277 1 93 1 337 19 301 1 338 3 176 1 
179 3 131 2 154 3 266 1 30 1 1 1 155 10 102 1 3 3 203 5 285 1 32 1 160 7 269 3 10 1 206 1 12 3 330 6 353 1 35 2 275 1 210 2 90 1 276 1 235 1 298 3 169 1 277 1 93 1 301 1 337 17 338 2 176 1 
179 1 154 2 266 1 30 1 155 4 102 1 3 1 203 2 285 1 160 4 269 1 12 1 330 2 353 1 90 1 276 1 235 1 298 1 277 1 93 1 337 8 338 1 176 1 
179 1 131 1 154 1 1 2 155 6 102 1 3 1 203 2 285 1 32 1 160 6 269 1 10 1 12 2 330 2 35 2 275 1 210 2 90 1 276 1 235 1 298 1 169 1 337 12 338 2 
179 4 131 2 154 3 266 1 30 1 1 1 155 10 102 1 3 4 203 5 285 1 32 1 160 8 269 4 10 1 206 1 12 3 330 8 353 1 35 2 275 1 210 2 276 1 90 1 235 1 169 1 298 4 277 1 93 1 337 18 301 2 338 2 176 1 
179 4 131 3 154 3 1 2 155 9 102 1 3 4 203 6 285 1 32 1 160 7 269 4 10 1 12 3 330 8 35 3 356 1 275 1 210 3 276 1 90 1 235 1 169 1 298 4 337 16 301 2 338 2 
131 3 154 3 266 3 30 1 155 3 203 6 277 3 93 1 337 7 160 4 338 1 176 2 12 1 
179 4 131 1 154 3 266 1 30 1 1 1 155 10 102 1 3 4 203 4 285 1 32 1 160 8 269 4 10 1 12 3 330 8 353 1 35 2 356 1 275 1 210 2 276 1 90 1 235 1 169 1 298 4 277 1 93 1 337 18 301 2 338 2 176 1 
22 1 74 1 193 1 168 1 
292 1 28 1 22 1 281 1 73 1 74 1 193 1 39 1 168 1 
18 1 351 1 92 1 205 1 213 1 223 1 31 1 268 1 68 1 255 1 105 1 
331 1 351 1 129 2 333 1 265 1 74 1 31 1 255 1 18 1 106 1 92 1 205 1 213 1 174 1 302 2 68 1 238 1 59 1 
331 1 351 1 129 1 199 1 333 1 265 1 242 1 74 1 31 1 255 1 18 2 106 2 92 1 213 3 56 1 67 1 174 1 302 1 68 1 207 1 226 1 59 1 
331 1 351 1 129 1 199 1 333 1 265 1 242 1 74 1 31 1 255 1 18 2 106 2 92 1 213 3 56 1 67 1 174 1 302 1 68 1 207 1 226 1 250 1 
128 1 150 2 199 1 242 1 267 1 31 1 106 1 205 1 8 1 161 1 137 1 226 1 351 3 60 1 255 1 167 1 92 3 18 1 236 1 120 1 213 3 315 2 68 3 
128 1 150 2 304 1 129 1 267 1 74 1 286 1 8 1 56 1 137 1 226 1 249 1 80 1 351 1 333 1 233 1 92 1 236 1 120 1 213 1 315 2 20 1 174 1 302 1 68 1 
351 1 92 1 31 1 68 1 255 1 212 1 
309 1 351 7 113 1 61 1 38 1 31 2 255 3 212 1 92 6 106 1 18 2 187 1 157 1 278 1 328 1 205 2 213 3 42 1 68 7 109 1 237 1 
46 1 100 1 154 2 155 3 3 2 203 2 106 1 7 2 160 3 12 1 330 4 59 1 111 1 331 1 333 1 61 1 253 1 117 1 255 1 298 2 18 1 300 1 337 6 213 1 338 1 174 1 302 2 68 1 176 1 179 2 129 2 265 1 266 1 30 1 74 1 31 1 269 2 138 1 351 1 353 1 88 2 92 1 277 1 93 1 361 1 317 1 238 2 
150 3 0 2 103 1 104 1 325 1 286 1 4 1 205 1 8 2 55 4 56 1 12 2 249 1 333 1 62 1 120 2 213 1 121 2 338 2 20 1 339 1 174 1 302 1 68 1 128 2 304 1 129 1 266 1 267 1 74 1 344 1 75 2 137 1 225 1 80 1 351 1 195 2 34 5 274 1 233 1 141 2 359 1 92 1 277 1 236 1 93 1 315 3 
351 1 267 1 31 1 335 1 255 2 185 1 212 1 92 1 106 1 18 1 278 1 213 1 68 1 
351 4 130 1 61 1 31 1 268 1 255 1 92 4 18 1 205 1 213 1 223 1 161 1 68 4 
309 1 351 2 31 1 255 2 92 2 106 1 18 1 187 1 336 1 52 1 213 1 77 1 68 2 226 1 
351 1 92 1 158 1 205 1 164 1 310 1 31 1 68 1 255 1 144 1 
18 1 351 2 92 2 157 1 230 1 213 1 61 1 42 1 31 1 68 2 255 1 
351 5 130 1 61 1 31 2 268 1 255 2 92 4 18 2 205 1 328 1 213 3 223 1 42 1 68 5 109 1 226 1 
351 5 130 1 61 1 31 2 268 1 255 2 92 4 18 2 205 1 146 1 213 3 223 1 42 1 68 5 109 1 226 1 
331 1 351 1 129 2 333 1 265 1 74 1 31 1 255 1 18 1 106 1 92 1 205 1 213 1 174 1 302 2 68 1 238 1 250 1 
309 1 351 1 113 1 31 1 255 2 92 1 106 1 18 1 187 1 278 1 213 1 68 1 226 1 
23 1 238 1 71 1 149 1 184 1 
178 1 150 1 274 1 240 1 87 1 306 1 184 1 314 1 315 1 56 1 67 1 23 1 207 1 149 1 71 1 
129 1 74 1 184 1 91 1 316 1 9 1 23 1 302 1 149 1 
178 1 306 1 23 1 
246 1 318 1 228 1 105 1 
107 1 84 1 246 1 318 1 201 1 202 1 228 1 
257 1 107 1 133 1 
84 1 342 2 202 1 201 3 234 1 107 3 246 1 123 1 135 1 318 1 208 1 228 1 
107 2 84 1 246 1 196 1 318 1 201 2 202 1 183 1 228 1 
84 1 72 1 99 1 164 1 202 1 201 1 48 1 107 1 158 1 318 1 208 1 
107 1 84 1 246 1 318 1 201 1 202 1 208 1 
107 1 84 1 246 2 201 1 202 1 228 1 208 1 
107 2 84 2 246 1 355 1 259 1 318 1 201 2 202 2 208 1 50 1 
84 1 152 1 202 1 201 1 156 1 107 1 246 1 208 1 228 1 
84 1 332 1 72 1 196 1 15 1 164 1 202 1 201 2 144 1 158 2 107 2 246 1 318 1 228 1 208 1 
198 1 84 2 196 2 202 2 201 4 48 1 183 1 107 4 246 1 318 2 228 1 208 1 261 1 
107 1 84 1 246 1 318 1 201 1 202 1 228 1 208 1 
198 1 84 1 342 1 196 2 234 1 201 4 202 1 48 1 156 1 107 4 246 2 123 1 318 3 228 2 
107 2 84 1 246 1 196 1 122 1 357 1 200 1 318 1 201 2 202 1 228 1 208 1 
107 3 84 1 342 2 246 1 222 1 123 1 318 1 234 2 201 3 202 1 228 1 208 1 
188 1 293 1 318 2 224 2 
107 1 84 1 21 1 201 1 202 1 208 1 
107 2 84 1 246 1 196 1 318 1 347 1 201 2 202 1 228 1 208 1 
260 1 
107 1 84 1 246 1 318 1 201 1 202 1 228 1 208 1 
107 3 84 1 342 1 246 1 196 1 347 1 318 1 201 3 202 1 228 1 208 1 
198 1 318 1 48 1 156 1 
246 1 318 1 

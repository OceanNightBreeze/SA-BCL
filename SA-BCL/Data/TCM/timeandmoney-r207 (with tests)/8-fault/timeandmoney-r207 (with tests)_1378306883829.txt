#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 144 278 (63,137) (63,137) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 144 278 (63,137) (63,137) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 144 278 (63,137) (63,137) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 144 278 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 144 278 114 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 144 278 114 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (10,157) (122,175) (122,175) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 142 295 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (10,157) (10,157) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (10,157) (122,175) (122,175) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (10,157) (122,175) (122,175) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (10,157) (122,175) (122,175) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 142 295 358 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
306 1 167 1 93 3 58 1 344 1 335 2 297 1 127 2 173 1 352 1 361 2 14 3 225 1 
211 1 306 4 105 1 167 2 93 7 344 1 58 1 137 1 149 1 335 3 97 2 83 1 24 1 127 2 173 3 313 1 278 1 251 1 144 2 361 2 176 1 14 7 63 1 29 2 225 2 
211 1 306 4 105 1 167 2 93 7 344 1 58 1 137 1 149 1 335 3 97 2 83 1 24 1 127 2 173 3 313 1 278 1 251 1 144 2 361 2 176 1 14 7 63 1 29 2 225 2 
211 1 306 4 105 1 167 2 93 7 344 1 58 1 137 1 149 1 335 3 97 2 83 1 24 1 127 2 173 3 313 1 278 1 251 1 144 2 361 2 176 1 14 7 63 1 29 2 225 2 
211 1 306 4 105 1 137 1 58 1 335 4 83 1 313 1 361 2 144 2 14 7 63 1 225 2 167 2 93 7 344 1 149 1 97 2 297 1 24 1 127 2 173 3 278 1 251 1 352 1 176 1 29 2 
306 1 93 2 58 1 335 1 97 1 127 1 173 1 278 1 313 1 251 1 144 1 361 1 14 2 29 1 
211 1 105 1 167 1 93 2 366 1 58 1 335 1 97 1 297 1 127 1 299 1 368 1 352 1 361 1 144 1 14 2 
306 5 167 1 93 7 58 1 344 1 335 3 97 1 83 1 24 1 127 2 173 3 313 1 278 1 251 1 144 1 361 2 14 7 114 1 29 1 353 1 225 2 
306 5 167 1 93 7 58 1 344 1 335 3 97 1 83 1 24 1 127 2 173 3 313 1 278 1 251 1 144 1 361 2 14 7 114 1 29 1 353 1 225 2 
165 1 119 1 19 1 106 1 179 1 213 1 285 1 311 1 6 1 188 1 115 1 253 1 330 1 343 1 
49 1 
49 1 66 1 133 1 147 1 39 1 106 2 179 2 115 1 
32 1 236 1 66 1 282 2 147 1 106 5 179 5 226 1 135 1 320 2 95 1 272 2 49 1 100 1 39 2 115 2 131 1 266 1 255 1 
49 1 147 1 294 1 
49 1 284 2 216 1 
119 2 6 2 56 1 213 2 253 2 311 2 285 1 330 2 
235 1 178 2 355 1 56 1 213 3 2 1 195 2 108 2 311 2 285 1 217 1 181 1 7 1 8 1 6 2 140 1 265 1 62 1 86 2 117 1 317 1 119 3 200 1 293 1 244 1 68 1 20 1 322 1 245 1 204 1 365 1 228 1 22 2 345 1 186 1 253 2 330 2 
165 1 119 1 6 1 19 1 213 1 188 1 253 1 311 1 285 1 330 1 
119 1 147 1 19 1 106 1 148 1 179 1 213 1 227 1 49 1 338 1 240 1 141 1 252 1 253 1 
119 1 147 1 19 1 106 2 179 2 213 1 311 1 49 1 6 1 338 1 240 1 141 1 252 1 253 1 330 1 
39 1 106 1 179 1 321 1 115 1 
118 1 49 1 66 1 147 1 39 1 106 2 179 2 115 1 
39 1 106 1 179 1 
119 2 19 1 56 1 213 2 311 1 72 1 298 1 6 1 54 1 253 2 330 1 
232 1 129 1 326 1 
178 1 119 1 293 1 56 1 213 1 244 1 20 1 245 1 322 1 195 1 217 1 345 1 140 1 174 1 86 1 117 1 
56 1 294 1 
178 1 119 2 293 1 244 1 213 2 20 1 322 1 245 1 57 1 195 1 169 1 217 1 326 1 345 1 6 1 140 1 86 1 117 1 253 1 330 1 
119 3 6 3 56 1 213 3 57 1 311 1 253 3 330 3 
165 1 119 1 6 1 19 1 213 1 253 1 330 1 
119 1 19 1 213 1 311 1 298 1 6 1 54 1 253 1 330 1 
235 1 106 1 56 1 57 1 195 1 285 1 108 2 6 3 8 1 338 1 240 1 62 1 117 1 119 4 19 2 293 1 244 1 245 1 20 1 68 1 204 1 169 1 22 1 345 1 72 1 298 1 252 1 253 3 178 1 355 1 179 1 213 4 311 2 217 1 181 1 140 1 265 1 141 1 86 1 183 1 322 1 365 1 187 1 186 1 330 3 
119 2 19 1 148 1 56 1 213 2 57 1 107 1 72 1 6 1 253 2 330 1 
119 3 106 1 19 1 179 1 201 1 213 3 57 2 169 1 311 1 49 1 298 1 6 3 338 1 240 1 187 1 141 1 252 1 253 3 330 3 
119 2 213 2 57 1 311 1 326 1 298 1 6 2 232 1 253 2 330 2 
178 1 119 1 293 1 56 1 213 1 244 1 245 1 322 1 20 1 195 1 217 1 345 1 140 1 86 1 117 1 
178 1 119 1 293 1 56 1 213 1 244 1 322 1 20 1 195 1 345 1 52 1 140 1 86 1 85 1 117 1 
354 1 235 1 355 1 78 1 283 1 81 1 108 2 181 1 8 1 84 1 265 1 62 1 13 1 146 1 91 1 68 2 228 2 22 4 326 2 232 2 129 2 328 1 102 1 76 1 
119 1 19 1 213 1 6 1 37 1 252 1 253 1 330 1 
119 5 120 1 148 1 56 1 213 5 57 2 107 1 169 1 94 1 311 1 6 4 298 1 253 5 330 4 
165 1 119 1 6 1 19 1 213 1 253 1 330 1 
47 1 
61 1 87 1 47 2 
47 1 
47 1 
61 1 87 1 
61 1 87 1 
61 1 87 1 
47 1 
47 1 
47 1 
47 1 
47 1 
47 1 
103 2 156 1 106 2 157 1 122 1 179 2 158 2 334 1 47 2 248 2 49 1 288 2 175 1 75 1 279 2 
103 1 292 1 119 1 106 1 179 1 213 1 158 1 334 1 260 1 295 1 47 1 248 1 6 1 263 1 142 1 288 1 253 1 330 1 279 1 
97 2 366 1 29 1 254 1 164 2 
97 1 144 1 29 1 
97 1 144 1 366 1 
97 3 259 1 366 1 29 2 254 1 164 1 
64 1 97 2 366 1 29 1 254 1 164 1 
236 3 282 1 106 5 78 1 179 5 135 1 283 1 284 3 310 1 216 1 260 1 59 1 263 1 39 1 113 1 115 4 266 2 15 1 292 1 66 1 362 2 41 1 147 1 123 2 91 1 320 1 125 2 272 1 296 1 151 1 49 2 102 1 
0 1 236 8 282 2 106 9 78 3 179 9 33 1 135 1 283 3 284 9 216 3 260 4 59 3 261 1 39 6 115 7 266 6 15 2 66 1 362 6 41 1 147 1 123 6 91 3 320 2 321 5 272 2 296 2 49 5 51 1 327 5 348 1 102 3 155 1 255 1 
236 3 282 1 106 3 78 1 179 3 283 1 284 4 310 1 216 2 260 1 59 1 115 2 266 2 15 1 362 2 147 1 123 2 320 1 91 1 125 1 272 1 296 1 49 3 151 1 102 1 255 1 
236 5 282 1 106 4 78 2 179 4 283 2 284 7 310 1 216 3 260 2 59 2 115 3 266 4 15 1 362 4 147 1 123 4 320 1 91 2 125 2 272 1 296 1 49 4 151 1 51 1 348 1 102 2 155 1 255 1 
309 1 
55 1 294 1 20 1 
20 1 180 1 
20 1 322 1 
55 2 140 1 20 3 322 1 199 1 5 1 
140 1 20 1 322 1 
250 1 20 1 
281 1 268 1 190 1 212 1 91 1 68 3 81 2 247 1 228 4 286 1 45 1 22 7 346 1 11 1 102 1 177 2 316 1 76 3 
190 2 228 1 247 1 370 1 316 1 177 1 22 1 
235 2 281 1 190 1 212 1 134 1 81 3 108 4 181 2 8 2 265 2 11 1 12 1 268 1 91 1 68 4 228 5 247 1 45 1 22 9 346 1 185 1 102 1 177 2 76 4 
281 1 268 1 190 1 212 1 91 1 68 3 81 2 247 1 228 4 45 1 22 7 346 1 11 1 102 1 177 2 316 1 76 3 
281 1 268 1 190 1 212 1 91 1 68 3 81 2 247 1 228 4 45 1 22 7 346 1 11 1 102 1 177 2 316 1 76 3 
178 1 210 1 1 1 195 1 194 1 312 1 86 1 361 1 14 1 117 1 163 2 162 1 88 2 319 1 166 2 167 2 184 1 293 1 322 1 20 1 93 1 345 1 127 1 
178 1 214 1 259 1 195 1 58 1 196 1 144 1 86 1 361 1 14 1 241 1 163 1 117 1 267 1 88 1 166 1 167 1 293 1 168 1 93 1 366 1 274 1 97 2 127 1 73 1 29 1 
178 1 306 1 214 1 259 1 195 1 58 1 335 1 196 1 144 1 86 1 361 1 14 2 241 1 163 1 117 1 267 1 88 1 166 1 167 1 293 1 202 1 168 1 93 2 366 1 274 1 97 2 297 1 127 1 352 1 29 1 
178 1 306 2 214 1 259 1 195 1 335 1 312 1 196 1 144 1 86 1 361 1 14 3 241 1 163 1 117 1 267 1 18 1 88 1 166 1 167 1 293 1 93 3 366 1 274 1 97 2 297 1 127 1 73 1 352 1 29 1 
178 1 306 2 214 1 259 1 195 1 335 1 86 1 144 1 14 2 163 1 117 1 267 1 18 1 88 1 167 1 166 1 293 1 93 2 366 1 274 1 97 2 297 1 73 1 352 1 29 1 
230 1 
280 2 236 2 282 1 1 1 106 5 284 2 195 2 336 2 337 1 239 2 338 1 240 1 112 1 161 1 341 1 117 1 242 2 66 3 119 1 293 1 19 1 20 1 296 1 345 2 205 1 351 1 74 2 252 1 253 1 304 1 178 2 179 5 257 4 79 1 135 1 213 1 34 1 216 2 221 2 38 2 39 6 141 1 86 2 266 2 184 1 90 1 148 1 320 1 322 1 271 1 227 1 367 1 272 1 49 1 
133 1 106 3 179 3 257 2 213 1 34 1 39 2 338 1 239 1 240 1 141 1 161 1 66 1 119 1 19 1 148 1 90 1 271 1 227 1 205 1 252 1 253 1 
66 1 133 1 119 1 147 1 19 1 106 3 257 3 179 3 90 1 148 1 213 1 271 1 34 1 227 1 49 1 205 1 39 1 338 1 240 1 141 1 74 1 161 1 252 1 253 1 
119 1 19 1 106 2 257 2 179 2 90 1 148 1 213 1 271 1 34 1 227 1 205 1 38 1 39 1 239 1 338 1 240 1 141 1 161 1 252 1 253 1 
280 2 236 1 282 1 106 5 285 1 336 2 6 1 239 4 338 1 240 1 161 1 343 1 242 2 165 1 119 2 66 3 19 2 205 1 25 1 351 1 74 2 252 1 253 2 133 1 77 1 257 4 179 5 79 1 213 2 135 1 215 1 34 1 311 1 216 2 221 2 38 4 39 7 360 1 141 1 266 1 147 1 90 1 148 1 320 1 271 1 227 1 272 1 49 1 98 1 188 1 330 1 
280 2 236 1 282 1 106 3 284 2 285 1 336 1 6 1 337 1 338 1 239 1 240 1 161 1 343 1 242 2 165 1 119 2 66 1 19 2 205 1 351 1 74 1 252 1 253 2 79 1 257 3 179 3 213 2 135 1 34 1 311 1 216 2 221 2 38 1 39 2 141 1 266 1 147 1 148 1 90 1 320 1 271 1 227 1 272 1 49 3 188 1 330 1 
280 2 236 1 282 1 106 4 285 1 336 2 6 1 338 1 239 2 240 1 161 1 343 1 242 2 165 1 119 2 66 2 19 2 205 1 351 1 74 2 252 1 253 2 257 4 179 4 79 1 135 1 213 2 215 1 34 1 311 1 216 2 221 2 38 2 39 4 360 1 141 1 266 1 147 1 90 1 148 1 320 1 271 1 227 1 272 1 49 1 98 1 188 1 330 1 
280 2 236 1 282 1 106 4 285 1 336 2 6 1 338 1 239 2 240 1 161 1 343 1 242 2 165 1 119 2 66 2 19 2 205 1 351 1 74 2 252 1 253 2 257 4 179 4 79 1 135 1 213 2 215 1 34 1 311 1 216 2 221 2 38 2 39 4 360 1 141 1 266 1 147 1 90 1 148 1 320 1 271 1 227 1 272 1 49 1 98 1 188 1 330 1 
280 2 236 1 282 1 106 4 284 2 285 1 6 1 338 1 239 2 240 1 161 1 340 1 343 1 165 1 119 2 66 2 19 2 205 1 300 2 351 1 74 2 252 1 253 2 257 4 179 4 135 1 213 2 215 1 34 1 311 1 218 1 221 2 38 2 359 1 39 4 141 1 266 1 147 1 90 1 148 1 320 1 271 1 227 1 272 1 48 2 49 1 188 1 330 1 
280 2 236 1 282 1 106 4 285 1 336 2 6 1 239 3 338 1 240 1 161 1 343 1 242 2 165 1 119 2 66 2 19 2 205 1 351 1 74 2 252 1 253 2 77 1 257 4 179 4 79 1 213 2 135 1 215 1 34 1 311 1 216 2 221 2 38 3 39 5 360 1 141 1 266 1 147 1 90 1 148 1 320 1 271 1 227 1 272 1 49 1 98 1 188 1 330 1 
280 2 236 1 282 1 106 4 285 1 336 2 6 1 239 3 338 1 240 1 161 1 343 1 242 2 165 1 119 2 66 2 19 2 205 1 351 1 74 2 252 1 253 2 77 1 257 4 179 4 79 1 213 2 135 1 215 1 34 1 311 1 216 2 221 2 38 3 39 5 360 1 141 1 266 1 147 1 90 1 148 1 320 1 271 1 227 1 272 1 49 1 98 1 188 1 330 1 
280 2 236 1 282 1 106 4 284 2 285 1 6 1 337 1 338 1 239 2 240 1 161 1 343 1 165 1 119 2 66 2 19 2 205 1 300 2 351 1 74 1 252 1 253 2 257 3 179 4 213 2 135 1 34 1 311 1 218 1 221 2 38 2 39 4 141 1 266 1 147 1 148 1 90 1 320 1 271 1 227 1 272 1 48 2 49 1 188 1 330 1 
178 8 235 2 355 2 1 1 213 1 57 1 195 7 108 4 181 2 6 1 8 2 7 1 160 1 265 2 62 2 86 8 117 2 291 1 119 1 146 1 293 2 200 2 184 1 202 1 92 1 20 3 68 1 322 2 365 1 228 1 22 2 273 1 345 2 172 1 53 1 73 1 130 1 253 1 330 1 
235 1 355 1 78 1 213 1 283 1 81 1 311 1 108 2 59 1 181 1 8 1 6 1 265 1 62 1 17 1 119 1 91 1 68 2 228 1 22 3 326 1 298 1 232 1 129 1 301 1 102 1 253 1 330 1 76 1 
281 1 235 1 268 1 355 1 146 1 56 2 294 1 91 1 68 3 228 3 81 2 108 2 45 1 22 6 326 1 181 1 346 1 8 1 232 1 129 1 265 1 11 1 62 1 102 1 177 1 76 2 
235 2 355 2 212 1 56 1 78 1 283 2 81 1 108 4 59 2 181 2 7 1 8 2 264 3 265 2 62 1 269 1 121 1 91 2 68 6 365 1 43 1 228 8 22 14 326 11 50 1 170 1 232 4 129 11 301 1 189 3 102 1 256 1 76 2 
178 1 235 1 355 1 56 1 213 2 57 1 195 1 108 2 4 1 217 1 181 1 8 1 6 1 7 1 140 1 265 1 62 1 86 1 117 1 119 2 243 1 293 1 244 1 20 1 322 1 245 1 68 1 69 1 365 1 228 1 169 1 22 2 345 1 232 1 174 1 301 1 253 1 330 1 
281 1 235 3 104 1 56 2 283 2 57 1 195 3 108 6 59 2 7 1 6 1 8 3 9 1 11 1 62 3 117 2 16 2 119 3 293 2 244 2 68 10 203 2 245 2 20 2 169 1 22 20 249 2 346 1 345 1 347 1 73 1 129 7 301 1 177 1 253 1 76 8 178 3 355 3 212 4 78 2 213 3 81 4 217 2 181 3 82 2 140 2 265 3 86 3 268 1 91 3 322 2 365 1 228 10 45 1 326 7 232 7 186 2 102 3 330 1 
235 1 355 1 146 1 212 1 91 1 283 1 228 2 108 2 22 2 326 1 181 1 8 1 232 1 129 1 265 1 62 1 328 1 76 1 
235 1 355 1 146 1 78 1 68 2 81 1 108 2 22 2 326 1 181 1 8 1 84 1 232 1 129 1 265 1 62 1 102 1 76 1 
235 1 355 1 212 1 78 1 283 1 81 1 108 2 59 1 181 1 8 1 265 1 62 1 146 1 91 1 68 2 228 2 22 4 326 2 232 2 129 2 102 1 76 2 
235 1 355 1 212 1 91 1 283 1 228 2 108 2 22 2 326 1 181 1 8 1 232 1 129 1 130 1 265 1 62 1 328 1 76 1 
235 1 355 1 78 1 68 2 81 1 108 2 22 2 326 1 181 1 8 1 84 1 232 1 129 1 130 1 265 1 62 1 102 1 76 1 
235 1 355 1 212 1 78 1 283 1 81 1 108 2 59 1 181 1 8 1 265 1 62 1 91 1 68 2 228 2 22 4 326 2 232 2 130 1 129 2 102 1 76 2 
235 1 355 1 212 1 78 1 91 1 68 2 283 1 81 1 228 2 108 2 22 4 326 2 59 1 181 1 8 1 232 2 129 2 265 1 62 1 102 1 76 2 
178 1 235 1 355 1 56 1 213 1 195 1 108 2 217 1 181 1 7 1 8 1 140 1 265 1 62 1 86 1 117 1 119 1 293 1 244 1 322 1 245 1 20 1 68 1 365 1 228 1 22 2 345 1 186 1 
178 1 235 1 355 1 56 1 213 1 195 1 108 2 181 1 7 1 8 1 140 1 265 1 62 1 85 1 86 1 117 1 119 1 293 1 244 1 322 1 20 1 68 1 42 1 365 1 228 1 22 2 345 1 52 1 
235 1 355 1 212 1 78 1 283 1 81 1 108 2 59 1 181 1 8 1 265 1 62 1 91 1 68 2 228 2 22 4 326 2 232 2 129 2 301 1 102 1 76 2 
178 1 235 1 355 1 212 1 78 1 213 1 283 1 81 1 195 1 108 2 217 1 59 1 181 1 8 1 140 1 265 1 62 1 86 1 117 1 119 1 293 1 202 1 91 1 244 1 68 2 245 1 203 1 322 1 20 1 228 2 22 4 326 2 232 2 129 2 186 1 102 1 76 2 
235 1 355 1 212 1 78 1 213 1 283 1 311 1 108 2 59 1 181 1 8 1 6 1 265 1 62 1 119 1 91 1 68 1 229 1 228 2 22 3 326 1 298 1 232 1 129 1 301 1 102 1 253 1 330 1 76 1 
235 2 192 1 212 3 78 3 134 1 283 3 81 3 108 4 59 3 36 2 181 2 8 2 264 2 265 2 143 2 67 1 89 1 91 3 68 10 43 1 228 9 324 1 22 19 50 1 276 1 207 1 189 1 102 3 303 1 76 6 
235 1 332 1 78 1 134 1 283 1 108 2 59 1 181 1 36 1 8 1 264 2 265 1 143 4 89 1 91 1 68 8 228 8 324 1 22 16 50 2 171 1 276 1 207 2 189 2 102 1 303 2 
235 2 332 1 192 1 212 2 78 2 134 1 283 2 81 1 108 4 59 2 36 1 181 2 219 1 8 2 264 4 265 2 143 4 89 1 91 2 68 12 43 1 228 11 324 1 22 23 50 3 276 1 171 1 207 2 189 3 102 2 303 1 76 3 
235 2 332 1 192 1 212 2 78 2 134 1 283 2 81 2 108 4 59 2 36 1 181 2 219 1 8 2 264 4 265 2 143 4 89 1 91 2 68 12 43 1 228 11 324 1 22 23 50 3 276 1 171 1 207 2 189 3 102 2 303 1 76 4 
281 3 235 1 332 1 212 5 78 5 134 1 283 5 81 8 108 2 59 5 36 1 181 1 8 1 264 4 265 1 11 3 143 4 268 3 89 1 91 8 68 24 43 2 228 27 45 3 324 1 22 51 346 3 50 2 276 1 171 1 207 1 189 4 102 8 177 3 303 1 256 2 76 13 
103 1 10 1 157 1 288 1 158 1 248 1 47 1 
142 1 
103 1 208 1 288 1 158 1 248 1 47 1 
103 1 156 1 106 1 157 1 122 1 179 1 158 1 334 1 47 1 248 1 49 1 288 1 175 1 75 1 279 2 
103 1 156 1 106 1 157 1 122 1 179 1 158 1 334 1 47 1 248 1 49 1 288 1 175 1 75 1 279 2 
103 1 156 1 106 1 157 1 122 1 179 1 158 1 334 1 47 1 248 1 49 1 288 1 175 1 75 1 279 2 
222 1 
222 1 
182 1 
182 1 
323 1 342 1 
103 1 292 1 156 1 106 1 179 1 158 1 260 1 295 1 47 1 248 1 358 1 263 1 142 1 288 1 115 1 75 1 279 1 
222 1 
182 1 
178 2 235 1 355 1 213 2 195 2 108 2 181 1 8 1 7 1 160 1 265 1 62 1 110 1 86 2 117 1 119 2 293 1 200 2 20 1 322 1 68 1 365 1 228 1 44 1 22 2 150 1 99 1 53 1 234 1 301 1 253 2 
178 1 210 1 293 1 166 1 184 1 1 1 20 1 322 1 195 1 345 1 206 1 238 1 86 1 117 1 
178 1 267 1 166 1 293 1 214 1 259 1 366 1 195 1 97 2 277 1 73 1 238 1 144 1 86 1 241 1 29 1 369 1 117 1 
178 2 267 1 293 1 166 1 202 1 214 1 259 1 366 1 195 2 97 2 277 1 73 1 238 1 144 1 86 2 241 1 29 1 369 1 117 1 
178 1 267 1 166 1 293 1 356 1 214 1 259 1 366 1 195 1 97 2 277 1 73 1 144 1 86 1 241 1 29 1 117 1 
231 1 
236 1 282 1 147 1 135 1 320 1 95 1 272 1 49 1 100 1 266 1 
236 5 362 5 123 5 78 2 91 2 283 2 284 10 216 5 59 2 49 5 139 2 287 1 102 2 266 5 16 1 
49 1 66 1 147 1 106 1 39 1 179 1 
209 1 178 4 236 2 282 2 106 3 1 1 179 3 135 1 258 2 195 4 39 4 112 1 86 4 117 1 341 2 266 2 66 2 293 1 184 1 320 2 20 1 322 1 70 1 272 2 345 2 296 2 302 1 255 1 304 1 
49 1 236 1 147 1 100 1 294 1 266 1 95 1 
236 1 282 1 106 1 79 1 179 1 135 1 284 1 216 1 336 1 39 1 266 1 242 1 66 1 147 1 320 1 272 1 49 2 
55 2 236 9 333 2 282 4 106 5 283 2 195 3 284 12 59 2 338 2 287 2 339 2 198 1 341 1 117 4 199 1 16 2 66 3 293 3 202 1 123 6 124 2 20 10 296 2 345 1 250 2 302 1 178 3 179 5 78 2 135 4 258 1 357 2 136 2 180 3 216 6 220 1 139 2 140 3 39 5 86 3 266 8 362 6 147 2 363 2 320 4 91 2 322 3 95 1 272 4 49 8 100 1 102 2 371 1 
332 1 236 2 282 1 308 1 213 1 135 1 284 2 311 1 285 1 216 1 6 1 139 1 264 1 287 1 341 1 266 2 343 1 165 1 119 1 362 2 19 1 147 1 123 2 320 1 272 1 296 1 49 2 50 1 188 1 189 1 253 1 330 1 
281 1 236 2 282 1 106 1 179 1 213 1 135 1 285 1 311 1 6 1 139 2 287 1 11 1 266 2 343 1 165 1 268 1 119 1 19 1 320 1 91 2 272 1 98 1 188 1 102 1 253 1 331 1 330 1 
235 1 178 1 355 1 56 1 213 3 195 1 108 2 311 2 285 1 217 1 181 1 6 2 8 1 140 1 265 1 62 1 86 1 117 1 119 3 293 1 244 1 68 1 245 1 322 1 20 1 204 1 365 1 22 1 345 1 186 1 253 2 330 2 
236 1 362 2 282 1 147 2 123 2 135 1 320 1 284 4 216 2 272 1 296 1 49 4 177 1 341 1 266 2 
103 1 323 1 35 1 305 1 248 1 
103 1 31 1 248 1 
103 1 31 1 248 1 
103 1 31 1 248 1 
103 1 3 1 248 1 
103 1 3 1 248 1 
103 1 3 1 248 1 
103 1 248 1 
47 1 
235 1 281 2 268 2 212 2 134 1 91 2 68 5 81 3 228 5 108 2 22 10 181 1 8 1 265 1 11 1 102 2 331 1 76 5 
235 1 212 1 134 1 91 1 283 1 228 2 108 2 22 2 181 1 8 1 265 1 76 1 
235 1 212 1 78 1 134 1 91 1 68 2 283 1 81 1 228 2 108 2 22 4 59 1 181 1 8 1 265 1 102 1 76 2 
318 1 235 3 281 1 268 1 192 1 212 1 134 1 68 2 81 1 228 1 108 6 22 3 181 3 8 3 265 3 12 1 76 2 
281 3 235 5 192 1 212 5 78 3 134 1 283 3 81 7 108 10 59 3 181 5 8 5 264 4 265 5 11 2 12 2 318 1 268 3 91 5 68 18 43 1 228 16 45 1 71 1 22 34 346 1 50 1 233 1 349 1 153 1 189 3 102 5 177 1 76 12 
281 2 235 2 332 1 212 4 78 1 134 1 283 2 81 5 108 4 59 2 181 2 237 1 8 2 264 1 265 2 11 2 12 1 268 2 91 5 68 10 364 1 228 14 45 1 22 24 346 1 50 1 350 1 189 1 102 4 28 1 177 1 331 1 76 9 
281 1 235 3 332 1 212 2 78 1 134 1 283 3 81 3 108 6 59 3 181 3 237 1 8 3 264 2 265 3 11 1 12 1 268 1 91 4 364 1 68 8 43 1 228 12 45 1 22 20 71 1 346 1 50 1 350 1 189 1 28 1 102 2 177 1 76 5 
235 2 281 2 332 1 212 1 134 1 81 3 108 4 181 2 8 2 264 1 265 2 11 2 268 2 91 3 68 7 228 8 45 1 22 15 71 1 346 1 50 1 189 1 102 3 177 1 331 1 76 4 
235 2 281 2 332 1 212 3 134 1 81 4 108 4 181 2 8 2 264 1 265 2 11 2 268 2 91 3 68 7 228 8 45 1 22 15 71 1 346 1 50 1 189 1 102 3 177 1 331 1 76 7 
281 2 235 2 332 1 212 4 78 1 134 1 283 2 81 5 108 4 59 2 181 2 237 1 8 2 264 1 265 2 11 2 12 1 268 2 91 5 68 10 364 1 228 14 45 1 22 24 346 1 50 1 350 1 189 1 102 4 28 1 177 1 331 1 76 9 
235 1 332 1 134 1 68 1 228 1 108 2 22 2 181 1 8 1 50 1 264 1 265 1 189 1 
235 2 332 1 134 1 68 1 228 1 108 4 71 1 22 2 181 2 8 2 50 1 264 1 265 2 189 1 
235 2 332 1 192 1 134 1 68 1 228 1 108 4 22 2 181 2 8 2 50 1 264 1 265 2 189 1 
281 3 268 3 212 3 91 1 68 4 81 3 228 3 45 1 22 7 346 2 11 1 102 1 76 6 
235 2 332 1 192 1 134 1 68 1 228 1 108 4 22 2 181 2 8 2 50 1 264 1 265 2 189 1 
235 2 281 1 268 1 212 1 91 1 68 4 228 4 81 2 108 4 45 1 22 8 181 2 346 1 8 2 265 2 11 1 12 1 102 1 177 1 76 3 
281 1 268 1 294 1 91 1 68 3 81 2 228 3 45 1 22 6 346 1 11 1 102 1 177 1 76 2 
235 1 212 1 78 1 91 1 68 2 283 1 81 1 228 2 108 2 71 1 22 4 59 1 181 1 8 1 265 1 102 1 76 2 
212 1 78 1 91 1 68 4 283 1 43 1 81 1 228 3 22 7 59 1 50 1 264 2 189 1 102 1 76 2 
281 2 235 2 212 4 78 2 283 2 81 5 108 4 59 2 181 2 8 2 264 2 265 2 11 1 12 2 318 1 268 2 269 1 91 3 68 12 43 1 228 11 45 1 22 23 346 1 189 2 102 3 177 1 76 9 256 1 
264 1 68 1 22 1 
189 1 228 1 22 1 
235 1 212 1 78 1 91 1 68 3 283 1 228 3 81 2 108 2 71 1 22 6 59 1 181 1 8 1 265 1 102 1 16 1 76 3 
235 1 332 1 134 1 68 1 228 1 108 2 22 2 181 1 8 1 50 1 264 1 265 1 189 1 
281 1 268 1 212 1 91 1 68 3 228 3 81 1 22 6 11 1 102 1 76 2 
281 1 318 1 235 1 268 1 212 1 68 2 228 1 81 1 108 2 45 1 22 3 346 1 181 1 8 1 265 1 12 1 76 2 
119 1 56 1 148 1 213 1 107 1 111 1 253 1 
119 1 56 1 148 1 213 1 107 1 138 1 325 1 46 1 60 1 111 1 289 1 253 1 
178 4 184 1 1 1 293 1 202 1 322 1 20 1 195 4 345 1 152 1 128 1 86 4 117 1 
178 2 104 1 307 1 293 1 258 1 322 1 20 1 80 1 195 2 126 1 159 1 140 1 86 2 117 2 
97 1 178 1 345 1 293 1 214 1 144 1 366 1 86 1 195 1 117 1 
178 2 293 1 202 1 322 1 20 1 195 2 99 1 73 1 160 1 86 2 117 1 
178 5 1 1 184 1 293 2 202 1 258 1 322 2 20 3 92 1 195 4 345 1 128 1 172 1 160 1 86 5 117 2 
178 5 1 1 184 1 293 2 202 1 258 1 322 2 20 3 92 1 195 4 345 1 128 1 160 1 86 5 117 2 30 1 
178 1 345 1 293 1 1 1 184 1 294 1 20 1 322 1 86 1 195 1 117 1 
178 1 119 2 293 1 56 1 244 1 213 2 20 1 322 1 57 1 195 1 217 1 345 1 6 1 140 1 86 1 117 1 253 1 330 1 
178 1 56 1 213 2 258 1 57 1 195 1 217 1 6 2 140 2 240 1 86 1 339 1 117 1 119 2 293 1 19 2 244 1 322 2 20 3 72 1 250 1 252 1 253 2 330 1 
178 1 56 1 213 2 258 1 57 1 195 1 6 2 140 2 240 1 85 1 86 1 339 1 117 1 119 2 293 1 19 2 244 1 322 2 20 3 72 1 250 1 252 1 253 2 330 1 
178 3 55 1 191 1 147 1 106 2 293 1 179 2 322 1 258 1 20 4 246 1 195 3 180 1 345 1 49 1 152 1 250 1 140 1 39 1 338 1 339 1 86 3 117 1 
178 3 55 1 147 1 106 2 293 1 179 2 124 1 322 1 258 1 20 4 195 3 180 1 345 1 49 1 152 1 250 1 140 1 39 1 338 1 339 1 86 3 117 1 
178 1 293 1 86 1 195 1 117 1 273 1 
178 7 200 1 293 2 202 1 92 1 322 2 20 3 80 1 195 6 273 1 345 2 159 1 140 1 172 1 73 1 160 1 314 1 86 7 199 1 117 3 291 1 
281 1 235 2 178 1 355 2 56 2 213 2 57 1 81 2 195 1 108 4 217 1 181 2 8 2 6 1 140 1 265 2 11 1 62 2 110 1 86 1 117 1 268 1 119 2 293 1 202 1 91 1 244 1 68 3 20 1 322 1 203 1 245 1 228 3 45 1 22 6 326 1 249 1 346 1 232 1 129 1 186 1 301 1 102 1 177 1 253 1 330 1 76 2 
178 1 55 1 236 1 333 1 282 2 106 3 179 3 135 2 136 1 195 1 180 1 39 2 338 1 86 1 115 1 266 1 66 1 147 1 363 1 320 2 124 1 20 2 95 1 272 2 345 1 49 1 100 1 302 1 
55 1 178 2 293 1 202 1 322 1 20 2 195 2 273 1 220 1 140 1 86 2 199 1 117 2 
178 1 119 2 293 1 56 1 244 1 213 2 20 1 322 1 57 1 195 1 345 1 6 1 140 1 86 1 85 1 117 1 253 1 330 1 
178 1 293 1 258 1 322 1 20 1 80 1 195 1 159 1 140 1 314 1 86 1 199 1 117 2 
119 1 19 1 56 1 213 1 44 1 150 1 23 2 72 1 26 1 234 1 101 1 253 1 
106 2 179 2 213 2 311 1 285 1 6 1 262 1 338 1 223 1 240 1 141 1 115 1 343 1 165 1 40 1 119 2 147 1 19 2 44 1 150 1 23 2 49 1 26 1 234 1 101 1 187 1 188 1 252 1 253 2 330 1 
26 1 101 1 
23 1 262 1 223 1 
297 1 127 1 352 1 93 1 361 1 14 1 58 1 335 1 
211 1 306 2 93 4 109 1 335 3 297 2 127 1 173 1 352 2 361 1 154 1 14 4 329 1 225 1 
306 1 93 2 58 1 335 1 297 1 127 1 352 1 361 1 14 2 353 1 116 1 290 1 
211 2 193 1 93 3 58 1 335 1 297 1 127 1 361 1 352 1 154 1 14 3 329 2 
65 2 27 1 315 1 335 2 
127 1 93 1 361 1 14 1 58 1 145 1 
297 1 306 1 83 1 127 1 352 1 93 2 361 1 14 2 58 1 335 1 
132 1 
297 1 127 1 352 1 93 1 361 1 14 1 58 1 335 1 
297 1 294 1 352 1 335 1 
297 1 127 1 352 1 93 1 361 1 14 1 335 1 
88 1 167 1 14 1 
297 1 211 2 127 1 270 1 352 1 93 3 361 1 154 1 14 3 58 1 329 1 335 1 
297 1 306 1 127 1 313 1 352 1 93 2 361 1 14 2 335 1 
93 1 58 1 335 1 97 1 127 1 173 1 251 1 361 1 144 1 14 1 29 1 
127 1 352 1 93 1 361 1 14 1 58 1 335 1 
297 1 127 1 352 2 93 1 361 1 14 1 58 1 
93 2 58 1 21 1 335 1 96 1 127 2 224 1 352 1 361 2 14 2 
306 2 93 3 58 1 335 2 297 1 83 1 24 1 127 1 173 1 352 1 361 1 14 3 225 1 
306 1 366 1 93 2 259 1 58 1 335 1 97 2 297 1 275 1 127 1 352 1 361 1 144 1 14 2 29 1 
306 2 93 4 58 1 335 2 297 1 127 2 173 1 313 1 352 1 361 2 197 1 14 4 225 1 
211 1 306 1 93 3 58 1 335 1 297 1 83 1 127 1 361 1 352 1 14 3 
173 1 109 1 335 1 225 1 
352 1 335 1 

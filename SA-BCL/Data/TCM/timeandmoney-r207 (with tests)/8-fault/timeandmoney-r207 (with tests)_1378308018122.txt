#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (93,107) (93,107) 243 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (277,323) 296 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (93,107) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (231,234,293) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 175 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 75 (57,173,270) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 126 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 175 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 132 303 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (277,323) (277,323) (35,44) 4 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (277,323) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 242 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (277,323) (277,323) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (277,323) 296 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 358 171 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (93,107) (93,107) 243 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 311 (97,343) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 311 (97,343) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 311 (33,210) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (93,107) (93,107) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (93,107) (93,107) 243 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 311 (33,210) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 336 259 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
290 9 225 1 56 2 0 1 197 1 61 1 130 1 212 7 36 9 83 2 345 1 281 1 297 1 244 1 155 1 350 2 261 1 112 1 22 1 301 3 186 1 263 4 305 1 329 5 
290 9 225 1 56 2 0 1 197 1 61 1 130 1 212 7 36 9 83 2 345 1 281 1 297 1 244 1 155 1 350 2 261 1 112 1 22 1 301 3 186 1 263 4 305 1 329 5 
36 3 290 3 225 1 345 1 56 2 244 1 155 1 350 2 301 1 263 1 130 1 329 2 212 1 
290 9 225 1 56 2 0 2 271 1 81 1 130 1 212 6 36 9 83 2 345 2 179 1 281 1 297 1 244 1 155 1 350 2 261 1 112 1 219 1 22 1 247 1 186 2 301 3 72 1 263 4 305 2 329 5 
290 9 225 1 56 2 0 2 271 1 81 1 130 1 212 6 36 9 83 2 345 2 179 1 281 1 297 1 244 1 155 1 350 2 261 1 112 1 219 1 22 1 247 1 186 2 301 3 72 1 263 4 305 2 329 5 
290 10 225 1 56 2 0 2 271 1 81 1 130 1 212 7 36 10 83 2 345 2 179 1 281 1 297 1 244 1 155 1 350 2 261 1 112 1 219 1 22 1 247 1 186 2 301 4 72 1 263 5 305 2 329 6 
290 7 225 1 56 2 0 2 271 1 81 1 130 1 212 4 36 7 83 1 345 2 179 1 281 1 297 1 244 1 155 1 350 2 261 1 219 1 22 1 247 1 186 2 301 2 72 1 263 3 305 2 329 4 
36 4 83 2 290 4 56 1 281 1 0 1 244 1 155 1 350 1 112 1 22 1 301 1 186 1 263 2 305 1 130 1 212 3 329 3 
36 2 290 2 345 1 179 1 226 1 123 1 56 1 0 1 244 1 155 1 350 1 247 1 186 1 206 1 130 1 329 1 
238 1 310 1 241 1 234 1 93 1 107 1 13 1 341 1 
285 1 
238 1 241 1 240 1 189 1 344 1 30 1 310 1 285 1 234 2 93 1 107 1 13 2 341 1 
189 2 190 1 28 1 191 1 308 2 310 1 309 1 103 1 234 5 107 1 106 4 13 5 341 2 176 2 238 1 276 1 147 1 241 1 240 1 344 2 243 1 157 1 285 2 115 3 220 2 92 2 93 1 53 1 264 1 98 1 119 2 
344 1 285 1 175 1 
285 1 94 1 187 2 
238 2 310 1 241 2 
238 1 241 1 277 1 84 1 216 2 310 1 104 1 339 2 199 1 354 1 12 2 296 1 
238 1 310 1 241 1 93 1 
344 1 38 1 17 1 335 1 127 1 166 1 285 1 293 1 90 1 231 1 234 1 222 1 13 1 237 1 
238 1 241 1 293 1 
189 1 234 1 80 1 13 1 341 1 
238 1 241 1 240 1 189 1 344 1 310 1 168 1 285 1 234 2 93 1 107 1 13 2 341 1 
189 1 234 1 13 1 
238 1 38 1 241 1 162 1 127 1 283 1 166 1 260 1 9 1 222 1 
175 1 
339 1 241 1 199 1 216 1 43 1 12 1 325 1 
238 1 241 4 38 1 16 1 63 1 43 2 127 1 166 1 260 1 283 1 169 1 325 1 222 1 237 1 
241 1 
238 1 241 3 43 1 
241 1 
238 1 260 1 241 1 162 1 
238 1 260 1 241 2 43 1 325 1 
38 1 241 1 43 1 127 1 166 1 283 1 169 1 222 1 237 1 
241 1 43 1 325 1 
238 1 260 1 241 1 
339 1 199 1 216 1 12 1 
339 1 199 1 216 1 12 1 
284 1 121 1 224 2 342 1 200 1 154 1 144 1 24 1 
241 1 250 1 
109 1 57 1 173 1 
109 1 75 1 173 1 270 1 
109 1 173 1 
109 1 173 1 
75 1 270 1 
75 1 270 1 
75 1 270 1 
131 1 109 1 173 1 
131 1 109 1 173 1 
131 1 109 1 173 1 
109 1 322 1 173 1 
109 1 322 1 173 1 
109 1 322 1 173 1 
109 1 241 2 54 1 280 1 125 1 337 1 228 1 338 1 67 1 218 1 57 1 183 1 91 1 70 1 173 1 234 1 275 1 13 1 96 1 
37 1 109 2 288 1 140 1 54 1 278 1 280 2 163 2 125 2 338 2 46 1 3 1 285 1 314 1 70 3 173 2 234 2 96 2 13 2 
123 1 186 2 193 2 305 1 347 1 
186 1 0 1 305 1 
123 1 186 1 0 1 
332 1 123 1 186 3 193 1 347 1 305 2 
123 1 204 1 186 2 193 1 347 1 305 1 
25 1 189 1 308 1 192 1 228 1 195 1 128 1 103 1 273 1 59 1 234 5 106 3 295 1 13 5 341 4 176 1 276 1 148 1 213 2 240 1 344 1 180 2 67 1 158 1 285 2 115 2 159 2 91 1 92 1 94 1 187 3 119 1 
238 1 241 1 344 1 189 1 110 1 80 1 310 1 87 1 285 1 8 1 234 2 93 1 107 1 13 2 341 2 
25 1 190 1 308 1 192 1 195 1 128 1 273 1 59 1 234 3 106 3 295 1 13 3 341 2 176 1 276 1 213 2 344 1 180 2 285 3 115 2 91 1 159 1 92 1 94 2 187 4 119 1 
25 2 190 1 268 1 308 1 192 2 195 1 101 1 128 1 273 2 59 1 234 4 106 5 295 1 13 4 341 3 176 1 276 2 213 4 344 1 180 4 133 1 285 4 115 4 91 2 159 2 92 2 94 3 187 7 119 1 
340 1 
73 1 65 1 175 1 
65 1 358 1 
14 1 65 1 181 1 
65 1 359 1 
14 1 65 1 
73 2 14 1 289 1 65 3 153 1 181 1 
276 1 239 3 26 1 15 1 40 1 142 1 28 1 317 3 191 1 279 4 69 7 2 2 47 1 209 2 230 1 172 1 92 1 264 1 
121 1 25 3 224 2 26 1 28 1 191 2 27 1 192 3 2 3 312 1 209 5 5 4 230 5 273 3 313 1 172 1 144 1 276 4 214 1 239 15 15 2 40 2 256 1 346 1 279 16 317 10 68 3 284 1 69 31 47 1 71 1 92 4 264 2 24 1 
276 1 239 4 121 2 224 4 26 1 15 1 40 1 346 1 28 1 191 1 317 4 279 5 69 9 165 1 284 2 2 2 47 1 209 3 230 1 254 1 92 1 144 2 264 1 24 2 
276 1 239 3 15 1 26 1 40 1 28 1 317 3 191 1 279 4 69 7 2 2 47 1 209 2 230 1 172 1 92 1 264 1 
276 1 239 3 15 1 26 1 40 1 28 1 317 3 191 1 279 4 69 7 2 2 47 1 209 2 230 1 172 1 92 1 264 1 
36 1 120 1 290 1 345 2 19 2 216 1 56 1 252 1 291 1 349 1 350 1 217 2 339 1 199 1 353 2 12 1 266 1 
139 1 332 1 290 1 123 1 56 1 0 1 102 1 339 1 170 1 12 1 130 1 36 1 215 1 345 1 19 1 216 1 205 1 45 1 217 1 350 1 353 1 186 2 324 1 305 1 248 1 188 1 
139 1 332 1 290 2 123 1 56 1 0 1 102 1 339 1 170 1 12 1 130 1 212 1 62 1 36 2 215 1 345 1 19 1 216 1 205 1 45 1 244 1 155 1 217 1 350 1 353 1 186 2 305 1 248 1 188 1 329 1 
139 1 332 1 290 3 123 1 56 1 0 1 102 1 339 1 170 1 12 1 212 2 36 3 215 1 345 1 19 1 216 1 205 1 45 1 244 1 155 1 349 1 217 1 350 1 351 1 353 1 186 2 324 1 305 1 248 1 329 1 
139 1 332 1 290 2 123 1 0 1 102 1 339 1 12 1 212 2 36 2 215 1 345 1 19 1 216 1 45 1 244 1 155 1 217 1 351 1 353 1 186 2 324 1 248 1 305 1 329 1 
302 1 
223 2 189 5 141 3 55 2 308 1 310 1 103 1 231 1 234 4 107 1 106 1 13 4 201 1 237 1 238 1 241 1 240 2 149 1 17 1 151 2 113 2 285 1 115 1 286 1 119 1 122 1 331 1 77 1 335 1 127 1 166 1 253 3 293 1 255 1 176 1 38 1 344 1 182 1 300 1 89 1 90 1 221 4 93 1 51 1 50 2 94 2 222 1 
223 3 189 5 141 3 55 2 308 1 310 1 103 1 231 1 234 4 107 1 106 1 13 4 201 1 237 1 238 1 241 1 240 2 149 1 17 1 151 2 113 2 285 1 115 1 286 1 119 1 122 1 331 1 77 1 335 1 127 1 166 1 253 3 293 1 255 1 176 1 38 1 344 1 182 1 300 1 89 1 90 1 221 5 93 1 51 1 50 2 94 2 222 1 
267 2 223 2 189 4 141 2 308 1 310 1 103 1 143 1 231 1 234 4 107 1 106 1 13 4 237 1 238 1 241 1 240 2 149 1 17 1 151 2 320 2 285 1 115 1 119 1 122 1 77 1 335 1 127 1 166 1 253 2 293 1 255 1 176 1 38 1 344 1 42 1 300 1 90 1 221 4 93 1 51 1 50 2 187 2 222 1 
223 1 189 4 141 1 55 2 308 1 195 1 196 1 103 1 143 1 199 2 105 1 231 1 234 4 106 2 12 2 13 4 237 1 14 1 240 2 149 1 151 2 17 1 64 1 65 1 113 1 285 1 115 2 248 1 119 1 122 1 331 1 77 1 335 1 251 1 127 1 166 1 253 1 339 2 293 1 255 1 176 1 38 1 216 2 45 1 135 1 300 1 90 1 221 3 94 2 50 2 304 1 51 1 187 2 222 1 
189 1 38 1 122 1 149 1 77 1 17 1 335 1 127 1 166 1 253 1 300 1 293 1 90 1 231 1 221 2 234 2 51 1 13 2 222 1 237 1 
223 1 189 1 122 1 77 1 335 1 30 1 127 1 166 1 293 1 231 1 234 3 13 3 237 1 38 1 344 1 240 1 149 1 17 1 285 1 300 1 90 1 221 3 51 1 222 1 
189 1 38 1 122 1 141 1 149 1 77 1 17 1 335 1 127 1 166 1 253 1 300 1 293 1 90 1 231 1 221 2 234 2 51 1 13 2 222 1 237 1 
223 1 122 1 189 2 330 1 141 1 77 1 335 1 30 1 127 1 310 1 166 1 253 1 293 1 231 1 234 3 107 1 13 3 237 1 238 1 241 1 344 1 240 1 38 1 149 1 17 1 285 1 300 1 90 1 221 3 93 1 51 1 222 1 
223 1 189 2 141 1 55 2 308 1 103 1 143 1 231 1 234 3 106 1 13 3 237 1 240 1 149 1 17 1 151 2 113 1 285 2 115 1 119 1 331 1 122 1 77 1 335 1 127 1 166 1 253 1 293 1 255 1 176 1 344 1 38 1 300 1 90 1 221 3 51 1 50 2 94 2 187 2 222 1 
223 2 189 4 331 1 122 1 141 2 55 2 77 1 335 1 308 1 127 1 166 1 103 1 253 2 293 1 231 1 234 4 106 1 201 1 13 4 255 1 237 1 176 1 344 1 240 2 38 1 149 1 151 2 17 1 182 1 113 2 285 1 115 1 300 1 89 1 90 1 221 4 94 2 50 2 51 1 222 1 119 1 
223 2 189 4 141 2 55 2 308 1 310 1 103 1 231 1 234 4 107 1 106 1 13 4 201 1 237 1 238 1 241 1 240 2 149 1 17 1 151 2 113 2 285 1 115 1 119 1 122 1 331 1 77 1 335 1 127 1 166 1 253 2 293 1 255 1 176 1 38 1 344 1 182 1 300 1 89 1 90 1 221 4 93 1 51 1 50 2 94 2 222 1 
267 2 223 2 189 4 141 2 308 1 307 1 310 1 103 1 231 1 234 4 107 1 106 1 13 4 201 1 237 1 238 1 241 1 240 2 149 1 17 1 151 2 320 2 285 1 115 1 119 1 122 1 77 1 335 1 127 1 167 1 166 1 253 2 293 1 255 1 176 1 38 1 344 1 42 1 300 1 90 1 221 4 93 1 51 1 50 2 187 2 222 1 
121 1 224 2 216 1 279 1 154 1 126 1 69 1 284 1 339 1 199 1 60 1 200 1 144 1 12 1 24 1 327 1 
276 1 238 1 239 1 25 1 121 1 224 2 241 1 279 1 154 1 192 1 69 2 284 1 260 1 273 1 246 1 200 1 160 1 92 1 144 1 24 1 
276 1 121 1 342 1 224 2 26 1 279 2 28 1 317 1 191 1 154 1 69 2 284 1 2 1 47 1 209 1 200 1 144 1 175 1 264 1 24 1 
121 1 132 1 239 1 224 2 279 1 154 1 68 1 69 2 284 1 5 1 200 1 160 1 303 1 144 1 24 1 
239 1 121 1 241 1 224 2 203 1 279 1 154 1 43 1 269 1 69 2 284 1 60 1 200 1 160 1 274 1 325 1 144 1 24 1 
239 1 121 1 241 1 224 2 203 1 277 1 216 1 154 1 44 1 43 1 69 1 284 1 339 1 4 1 199 1 323 1 200 1 160 1 12 1 325 1 144 1 24 1 
276 1 121 1 342 1 224 2 279 1 154 1 192 1 69 1 284 1 200 1 137 1 144 1 24 1 
121 1 239 1 342 1 224 2 154 1 69 1 284 1 88 1 273 1 200 1 92 1 144 1 24 1 
276 1 239 1 121 1 25 1 342 1 224 2 279 1 154 1 192 1 69 2 284 1 273 1 200 1 92 1 144 1 24 1 
276 1 121 1 224 2 279 1 154 1 192 1 69 1 284 1 200 1 137 1 144 1 24 1 327 1 
121 1 239 1 224 2 154 1 69 1 284 1 88 1 273 1 200 1 92 1 144 1 24 1 327 1 
276 1 239 1 121 1 25 1 224 2 279 1 154 1 192 1 69 2 284 1 273 1 200 1 92 1 144 1 24 1 327 1 
276 1 239 1 121 1 25 1 224 2 279 1 154 1 192 1 284 1 69 2 273 1 200 1 92 1 144 1 24 1 
339 1 277 1 199 1 216 1 12 1 
339 1 199 1 216 1 242 1 12 1 
276 1 239 1 121 1 25 1 224 2 279 1 154 1 192 1 69 2 284 1 273 1 200 1 160 1 92 1 144 1 24 1 
62 1 339 1 277 1 323 1 216 1 12 1 
121 1 25 1 224 2 192 1 34 1 273 1 200 1 144 1 238 1 276 1 239 1 241 1 279 1 154 1 260 1 284 1 69 2 160 1 92 1 24 1 
121 2 25 3 224 4 306 1 333 2 208 1 192 3 165 1 209 3 5 2 230 3 273 3 313 1 7 1 294 1 108 2 144 2 276 3 239 10 214 1 279 9 317 6 257 1 68 1 284 2 69 19 49 1 92 3 24 2 265 1 
121 3 25 3 224 6 306 1 333 4 124 1 208 2 192 3 165 1 272 1 209 2 230 2 5 2 273 2 313 2 7 1 174 1 108 1 144 3 276 3 239 12 316 1 346 2 317 4 279 14 257 2 68 2 284 3 69 26 92 2 52 1 95 1 24 3 265 1 
224 6 306 1 191 1 192 4 272 1 2 1 230 4 5 4 273 4 313 3 7 1 144 3 108 1 236 1 276 5 239 21 316 1 317 8 279 20 68 3 69 41 284 3 24 3 25 4 121 3 26 1 333 4 124 1 28 1 208 1 165 1 209 4 174 1 294 1 214 1 346 1 257 2 47 1 92 5 52 1 95 1 265 1 264 1 
121 4 25 4 224 8 26 1 306 1 333 4 28 1 191 1 124 1 208 1 192 4 165 1 2 1 272 1 209 4 5 4 230 3 273 3 313 3 7 1 174 1 294 1 108 1 144 4 236 1 276 5 239 18 214 1 316 1 346 2 279 20 317 7 257 2 68 3 284 4 69 38 47 1 92 4 52 1 95 1 264 1 24 4 265 1 
161 2 121 2 25 7 224 4 26 1 306 1 333 4 28 1 191 1 124 1 208 1 192 7 165 1 2 1 272 1 209 7 5 4 230 7 273 7 313 2 7 1 174 1 108 1 144 2 276 8 239 25 214 2 316 1 346 1 279 27 317 14 257 1 68 4 284 2 69 52 47 1 92 8 52 1 95 1 264 1 24 2 265 1 
37 1 109 1 3 1 314 1 280 1 173 1 125 1 338 1 96 1 129 1 
218 1 57 1 
207 1 109 1 280 1 173 1 356 1 125 1 338 1 96 1 328 1 
131 1 114 1 
23 1 322 1 118 1 
37 1 109 1 140 1 54 1 278 1 280 1 163 1 125 1 338 1 46 1 3 1 285 1 314 1 70 2 173 1 234 1 13 1 96 1 
37 1 109 1 140 1 54 1 278 1 280 1 163 1 125 1 338 1 46 1 3 1 285 1 314 1 70 2 173 1 234 1 13 1 96 1 
37 1 109 1 140 1 54 1 278 1 280 1 163 1 125 1 338 1 46 1 3 1 285 1 314 1 70 2 173 1 234 1 13 1 96 1 
131 1 114 1 118 1 
131 1 114 1 118 1 
23 1 322 1 
23 1 322 1 118 1 
275 1 337 1 
109 1 241 2 140 1 280 1 163 1 125 1 337 1 228 1 338 1 164 1 67 1 218 1 57 1 183 1 91 1 70 1 173 1 234 1 275 1 96 1 13 1 341 1 
121 1 224 2 78 1 249 1 334 1 126 1 127 2 166 2 339 2 200 1 60 1 12 2 144 1 14 1 239 1 203 1 65 1 216 2 279 1 154 1 45 1 134 1 284 1 69 2 21 1 354 2 160 1 248 1 24 1 222 2 138 1 
339 1 199 1 19 1 216 1 291 1 12 1 229 1 298 1 
332 1 215 1 123 1 216 1 19 1 205 1 0 1 45 1 298 1 102 1 339 1 186 2 116 1 324 1 11 1 305 1 248 1 12 1 
62 1 332 1 215 1 123 1 216 2 19 1 205 1 0 1 45 1 298 1 102 1 339 2 186 2 116 1 324 1 11 1 305 1 248 1 12 2 
332 1 215 1 123 1 216 1 19 1 205 1 0 1 45 1 102 1 339 1 186 2 324 1 82 1 11 1 305 1 12 1 248 1 
232 1 
238 1 310 1 339 1 241 1 277 1 199 1 216 1 12 1 296 1 
213 2 344 2 180 2 308 1 195 1 196 1 2 1 103 1 285 4 115 2 94 2 106 1 187 4 119 1 176 1 
344 1 308 1 309 1 103 1 285 1 115 1 53 1 106 1 119 1 176 1 
276 2 25 2 213 5 180 5 192 2 319 1 285 5 184 1 115 5 273 2 220 2 92 2 94 5 106 5 187 10 
238 1 241 1 240 1 189 1 344 1 310 1 285 1 234 1 107 1 93 1 13 1 
190 1 189 2 251 1 308 2 195 1 196 1 103 1 339 2 198 1 199 2 105 1 10 1 234 2 106 1 12 2 13 2 176 2 14 2 240 1 18 1 65 2 216 2 258 1 45 2 181 1 282 1 135 1 115 1 304 1 248 3 119 2 
309 1 344 1 285 1 115 1 106 1 53 1 175 1 
331 1 189 1 55 1 308 1 103 1 234 1 106 1 13 1 176 1 344 1 240 1 113 1 285 2 115 1 94 1 187 1 119 1 
14 1 289 1 65 1 216 1 308 1 45 1 181 1 103 1 339 1 199 1 292 1 171 1 358 1 248 1 12 1 119 1 176 1 
189 1 308 2 192 2 195 1 196 1 310 1 103 2 272 1 5 1 273 2 313 1 234 1 106 8 107 1 13 1 276 2 238 1 240 1 241 1 316 1 319 1 68 1 285 5 115 5 321 1 119 2 25 2 124 1 31 1 174 1 176 2 213 5 344 2 180 5 220 2 92 2 94 3 93 1 95 1 187 6 
238 1 276 1 241 1 28 1 243 1 191 1 308 1 310 1 103 1 115 1 89 1 220 2 92 1 234 1 93 1 107 1 106 2 13 1 264 1 119 1 176 1 
3 1 262 1 125 1 275 1 338 1 
99 1 125 1 338 1 
99 1 125 1 338 1 
99 1 125 1 338 1 
41 1 125 1 338 1 
41 1 125 1 338 1 
41 1 125 1 338 1 
125 1 338 1 
109 1 173 1 
276 2 121 1 239 5 224 2 243 1 191 2 317 5 279 5 28 1 284 1 165 1 69 10 209 3 230 2 92 2 144 1 24 1 264 2 
276 1 121 1 224 2 279 2 317 1 192 1 165 1 284 1 69 2 230 1 144 1 24 1 
276 1 239 2 121 1 25 1 224 2 317 2 279 2 192 1 165 1 284 1 69 4 209 1 230 1 273 1 92 1 144 1 24 1 
239 2 121 3 224 6 346 1 191 1 317 2 279 1 69 3 165 1 284 3 209 1 185 1 230 1 294 1 144 3 24 3 264 1 
121 5 25 3 224 10 26 1 28 2 191 3 27 1 192 3 165 1 2 1 312 1 209 7 5 4 230 5 273 3 313 1 294 1 144 5 276 5 239 18 214 1 178 1 346 2 279 16 317 12 68 3 284 5 69 34 47 1 185 1 71 1 92 5 264 3 24 5 
276 1 239 4 121 2 224 4 26 1 346 1 28 1 279 4 317 3 191 1 69 8 284 2 2 1 47 1 209 2 230 1 92 1 144 2 24 2 264 1 
276 1 239 3 26 1 191 1 317 2 28 1 279 3 69 6 2 1 47 1 209 2 92 1 175 1 264 1 
276 1 239 2 121 1 25 1 224 2 178 1 317 2 279 2 192 1 284 1 69 4 209 1 230 1 273 1 92 1 144 1 24 1 
276 1 239 4 214 1 25 1 279 3 317 2 192 1 68 1 69 7 209 1 5 2 230 1 273 1 313 1 92 1 
25 2 161 1 121 2 224 4 26 1 28 1 191 2 192 2 2 1 209 5 230 4 5 2 273 2 144 2 276 3 214 1 239 12 132 1 346 2 317 9 279 11 68 2 69 23 284 2 47 1 185 1 92 3 264 2 24 2 
69 1 239 1 5 1 
69 1 279 1 68 1 
276 1 121 1 239 3 25 1 224 2 178 1 279 3 317 3 192 1 284 1 69 6 209 2 184 1 230 1 273 1 92 1 144 1 24 1 
121 1 25 2 224 2 124 1 192 2 165 1 272 1 209 1 230 1 5 1 273 2 313 1 174 1 144 1 276 2 239 6 316 1 279 6 317 2 68 1 69 12 284 1 92 2 95 1 24 1 
276 1 239 3 28 1 279 3 191 1 317 2 69 6 209 1 230 1 92 1 264 1 
239 2 121 1 224 2 26 1 346 1 279 1 317 2 191 1 69 3 284 1 47 1 209 1 230 1 185 1 144 1 264 1 24 1 
121 1 224 2 26 1 191 1 28 1 165 1 2 1 272 1 209 2 5 1 313 1 144 1 276 1 239 4 279 4 317 2 68 1 69 8 284 1 47 1 92 1 24 1 264 1 
121 2 25 1 224 4 26 1 28 1 191 1 192 1 165 1 2 1 272 1 209 2 5 2 230 1 313 1 144 2 276 2 239 5 214 1 178 1 279 6 317 3 68 1 69 11 284 2 47 1 92 1 264 1 24 2 
121 3 25 2 224 6 26 1 28 1 191 1 124 1 192 2 165 1 2 1 272 1 209 3 230 1 5 1 273 2 313 1 174 1 144 3 276 3 239 10 178 1 316 1 346 1 279 9 317 4 68 1 69 19 284 3 47 1 92 3 95 1 264 1 24 3 
121 3 25 2 224 6 26 1 28 1 191 1 124 1 192 2 165 1 2 1 272 1 209 3 230 2 5 1 273 1 313 1 174 1 144 3 276 3 239 7 178 1 316 1 346 1 279 10 317 5 68 1 69 17 284 3 47 1 92 2 95 1 264 1 24 3 
121 1 224 2 26 1 191 1 28 1 165 1 2 1 272 1 209 2 5 1 313 1 144 1 276 1 239 4 279 4 317 2 68 1 69 8 284 1 47 1 92 1 24 1 264 1 
121 1 25 2 224 2 124 1 192 2 165 1 272 1 209 1 230 1 5 1 273 2 313 1 174 1 144 1 276 2 239 6 316 1 279 6 317 2 68 1 69 12 284 1 92 2 95 1 24 1 
121 4 25 2 224 8 26 1 28 1 191 1 124 1 192 2 165 1 2 1 272 1 209 3 230 2 5 1 273 1 313 1 174 1 144 4 276 3 239 8 178 1 316 1 346 2 279 10 317 5 68 1 69 18 284 4 47 1 92 2 95 1 264 1 24 4 
121 4 25 3 224 8 124 1 192 3 165 1 272 1 209 3 230 3 5 1 273 2 313 1 174 1 294 1 144 4 276 3 239 7 316 1 346 2 279 9 317 6 68 1 69 16 284 4 92 2 95 1 24 4 
276 1 239 4 26 2 191 3 317 6 28 1 279 3 69 7 47 1 209 3 230 3 92 1 264 3 
121 4 25 2 224 8 26 1 28 1 191 1 124 1 192 2 165 1 2 1 272 1 209 3 230 1 5 1 273 1 313 1 174 1 294 1 144 4 276 3 239 8 316 1 346 2 279 10 317 4 68 1 69 18 284 4 47 1 92 2 95 1 264 1 24 4 
166 1 156 1 169 1 9 1 222 1 127 1 237 1 
150 1 227 1 111 1 127 1 166 1 156 1 169 1 9 1 233 1 355 1 222 1 237 1 
62 1 14 1 216 4 65 1 20 1 45 1 135 1 299 1 339 4 199 1 105 1 248 1 12 4 
177 1 14 1 216 2 18 1 65 1 258 1 45 1 181 1 282 1 339 2 136 1 198 1 12 2 248 2 
339 1 215 1 199 1 123 1 216 1 186 1 0 1 248 1 45 1 12 1 
62 1 14 1 21 1 339 2 78 1 65 1 216 2 324 1 248 1 45 1 12 2 
62 1 177 1 14 2 78 1 216 4 65 3 20 1 45 2 348 1 135 1 339 5 199 1 105 1 12 5 248 2 145 1 
62 1 177 1 14 2 78 1 216 4 79 1 65 3 20 1 45 2 348 1 135 1 339 5 199 1 105 1 12 5 248 2 
135 1 14 1 339 1 199 1 65 1 105 1 216 1 248 1 45 1 175 1 12 1 
14 1 241 1 343 1 65 1 216 1 43 1 45 1 181 1 311 1 339 1 199 1 12 1 248 1 
177 1 14 1 241 1 343 1 65 1 216 1 43 1 45 1 181 1 311 1 339 1 12 1 248 1 
177 1 14 1 241 1 65 1 216 1 43 1 45 1 181 1 311 1 339 1 210 1 12 1 248 1 
73 1 189 1 335 1 310 1 33 1 339 1 234 2 107 1 12 1 13 2 238 1 177 1 14 1 241 1 344 1 65 4 216 1 45 1 181 1 285 1 117 1 93 1 358 1 248 1 326 1 359 1 
73 1 189 1 335 1 310 1 339 1 234 2 107 1 12 1 13 2 238 1 177 1 14 1 241 1 344 1 65 4 216 1 45 1 181 1 285 1 93 1 358 1 248 1 326 1 359 1 97 1 
339 1 216 1 194 1 248 1 45 1 12 1 
62 1 14 2 289 1 78 1 216 6 65 3 194 1 45 2 181 1 348 1 282 1 1 1 339 7 198 1 352 1 199 2 354 1 324 1 12 7 248 3 145 1 
241 1 43 1 
73 1 189 2 28 1 191 1 335 1 308 2 310 1 309 1 103 2 339 1 35 1 199 1 10 1 234 3 107 1 106 4 12 1 13 3 341 1 211 1 176 2 238 1 276 1 241 1 344 2 240 1 216 1 65 2 243 1 66 1 285 2 115 3 220 2 92 2 93 1 53 1 358 1 264 1 119 2 97 1 
73 1 14 1 289 1 216 1 65 1 194 1 45 1 181 1 339 1 340 1 292 1 12 1 248 1 
14 1 241 1 65 1 216 1 43 1 45 1 181 1 311 1 339 1 199 1 210 1 12 1 248 1 
177 1 14 1 289 1 216 1 65 1 45 1 181 1 282 1 339 1 198 1 352 1 12 1 248 2 
336 1 138 1 146 1 245 2 
336 1 29 1 234 1 138 1 13 1 341 1 100 1 146 1 259 1 245 2 
336 1 138 1 245 1 146 1 
29 1 259 1 245 1 
36 3 290 3 179 1 56 1 155 1 244 1 350 1 261 1 130 1 212 1 329 1 
85 1 301 1 263 1 329 1 
244 1 329 1 
36 1 350 1 290 1 56 1 244 1 155 1 130 1 329 1 
36 4 39 1 290 4 179 1 85 1 56 1 244 2 155 2 350 1 301 1 263 1 287 1 212 2 329 3 
36 2 290 2 56 1 244 1 155 1 350 1 197 1 58 1 315 1 130 1 329 1 212 1 
36 3 39 2 290 3 179 2 56 1 155 1 244 1 350 1 357 1 287 1 130 1 329 1 
32 2 152 1 318 1 329 2 
36 1 350 1 48 1 290 1 56 1 130 1 
36 2 350 1 261 1 290 2 56 1 244 1 155 1 130 1 329 1 212 1 
76 1 
36 1 350 1 290 1 56 1 244 1 155 1 130 1 329 1 
175 1 244 1 155 1 329 1 
36 1 350 1 290 1 56 1 244 1 155 1 329 1 
217 1 290 1 345 1 
36 3 350 1 74 1 39 1 290 3 179 2 56 1 244 1 155 1 287 1 130 1 329 1 
36 2 350 1 83 1 290 2 56 1 244 1 155 1 329 1 212 1 
36 1 290 1 56 1 0 1 350 1 22 1 186 1 263 1 305 1 130 1 329 1 
36 1 350 1 290 1 56 1 244 1 130 1 329 1 
36 1 350 1 290 1 56 1 244 2 155 1 130 1 
36 2 350 2 202 1 290 2 6 1 56 2 244 1 130 1 86 1 329 1 
36 3 290 3 56 1 297 1 244 1 155 1 350 1 261 1 301 1 263 1 130 1 212 2 329 2 
36 2 332 1 290 2 123 1 56 1 0 1 244 1 155 1 350 1 186 2 305 1 130 1 235 1 329 1 212 1 
36 4 83 1 290 4 56 2 244 1 155 1 350 2 112 1 301 1 263 1 130 1 212 2 329 2 

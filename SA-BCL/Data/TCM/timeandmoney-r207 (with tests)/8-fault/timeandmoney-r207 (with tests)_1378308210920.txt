#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 186 119 (29,73) (29,73) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 186 119 (29,73) (29,73) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 186 119 (29,73) (29,73) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 186 119 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 186 119 69 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 186 119 69 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 41 50 242 122 183 321 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 41 50 242 122 183 321 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 41 50 242 122 183 321 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 41 50 242 122 183 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 292 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 41 50 242 122 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 1 225 1 1 1 84 2 266 1 26 2 29 1 163 1 185 1 90 1 363 2 208 1 186 2 118 2 119 1 211 3 328 2 188 4 343 7 219 3 279 2 73 1 74 1 307 1 150 7 
128 1 225 1 1 1 84 2 266 1 26 2 29 1 163 1 90 1 185 1 363 2 208 1 186 2 118 2 119 1 211 3 328 2 188 4 343 7 219 3 279 2 73 1 74 1 307 1 150 7 
128 1 225 1 1 1 84 2 266 1 26 2 29 1 163 1 90 1 185 1 363 2 208 1 186 2 118 2 119 1 211 3 328 2 188 4 343 7 219 3 279 2 73 1 74 1 307 1 150 7 
128 1 225 1 1 1 84 2 266 1 26 2 29 1 163 1 90 1 185 1 363 2 208 1 186 2 118 2 187 1 119 1 211 4 328 2 188 4 343 7 219 3 346 1 279 2 73 1 74 1 307 1 150 7 
186 1 208 1 118 1 119 1 211 1 328 1 188 1 343 2 84 1 219 1 279 1 90 1 185 1 150 2 
127 1 128 1 186 1 118 1 187 1 211 1 328 1 343 2 346 1 201 1 279 1 26 1 163 1 90 1 298 1 150 2 
1 1 187 1 211 2 328 2 188 1 343 3 219 1 346 1 279 2 26 1 90 1 150 3 363 1 
186 1 208 1 225 1 118 1 1 1 119 1 211 3 328 2 188 5 343 7 84 1 219 3 279 2 69 1 26 1 74 1 30 1 185 1 90 1 150 7 363 2 
186 1 208 1 225 1 118 1 1 1 119 1 211 3 328 2 188 5 343 7 84 1 219 3 279 2 69 1 26 1 74 1 30 1 185 1 90 1 150 7 363 2 
152 1 283 1 289 1 
72 1 96 2 289 1 
355 2 179 2 296 2 359 2 302 1 106 1 330 2 99 2 
355 2 48 2 357 1 109 1 312 1 248 1 230 1 25 2 359 2 177 1 252 1 317 2 158 1 179 2 296 3 31 1 320 1 235 1 91 1 164 1 206 2 137 1 364 1 366 1 167 1 68 1 259 1 120 1 302 1 330 3 99 2 103 2 243 1 147 1 245 1 45 1 106 1 
355 1 78 1 179 1 210 1 196 1 296 1 359 1 302 1 330 1 99 1 
79 1 210 1 278 1 289 1 330 1 99 1 202 1 293 1 332 1 261 1 296 1 334 1 283 1 323 1 
355 1 79 2 210 1 278 2 359 1 289 1 330 1 99 1 202 1 179 1 332 1 296 1 334 1 283 1 323 1 
269 1 79 1 278 1 15 1 297 1 
79 2 121 1 278 2 15 1 283 1 297 1 289 1 168 1 
79 1 278 1 297 1 
78 1 355 1 79 1 210 1 311 1 196 1 15 1 278 1 359 1 302 1 330 1 99 1 179 1 296 1 
289 1 
355 1 78 1 79 2 210 1 311 1 196 1 15 1 278 2 121 1 359 1 302 1 289 1 330 1 99 1 179 1 101 1 296 1 283 1 297 1 
36 1 79 5 227 1 265 1 121 1 15 2 278 5 130 1 289 1 52 1 294 1 348 1 270 1 271 2 86 1 182 2 283 1 222 2 297 2 
152 1 106 1 
355 1 359 1 330 2 99 2 179 1 296 2 308 1 373 1 106 2 
310 1 43 1 256 1 
206 1 48 1 137 1 366 1 177 1 330 1 317 1 147 1 243 1 296 1 31 1 320 1 45 1 106 1 165 1 164 1 
355 1 179 3 296 3 112 1 359 3 106 1 330 3 99 3 
179 1 210 1 196 1 296 1 359 1 330 1 99 1 
355 1 179 1 210 1 296 1 308 1 373 1 359 1 330 1 99 1 
355 2 48 1 79 1 357 1 109 1 248 1 25 1 112 1 359 3 131 1 177 1 317 1 158 1 202 1 179 3 296 4 31 1 320 1 323 1 91 1 164 1 206 1 137 1 166 1 11 1 210 1 366 1 167 1 68 1 120 1 278 1 259 1 302 1 330 4 99 3 332 1 103 2 243 1 147 1 334 1 245 1 308 1 45 1 106 1 
293 1 179 1 296 2 111 1 112 1 359 1 106 1 330 2 99 2 
355 1 79 1 11 1 210 1 278 1 112 2 359 3 131 1 289 1 330 3 99 3 202 1 179 3 332 1 6 1 296 3 334 1 308 1 323 1 
310 1 355 1 112 1 359 2 330 2 99 2 179 2 43 1 296 2 308 1 
206 1 48 1 137 1 366 1 177 1 330 1 317 1 147 1 243 1 296 1 31 1 320 1 45 1 106 1 164 1 
206 1 48 1 137 1 51 1 366 1 177 1 330 1 317 1 147 1 243 1 296 1 234 1 45 1 106 1 164 1 
310 2 172 1 357 1 109 1 248 1 314 1 25 4 232 1 158 1 57 1 235 2 256 2 68 1 167 2 217 1 369 1 260 1 169 1 103 2 170 1 41 1 43 2 245 1 126 1 
202 1 179 1 210 1 296 1 88 1 359 1 330 1 99 1 
206 1 48 1 137 1 11 1 366 1 112 1 359 1 177 1 330 2 317 1 99 1 179 1 243 1 147 1 43 1 296 2 31 1 320 1 45 1 164 1 
355 1 11 1 111 1 112 2 359 4 330 5 99 5 115 1 293 1 179 4 296 5 308 1 124 1 106 1 
179 2 210 1 196 1 296 2 88 1 359 2 330 2 99 2 
190 1 255 1 
190 1 255 1 
209 1 212 1 
209 1 212 1 
209 1 212 1 
190 1 255 1 162 1 
190 1 284 1 255 1 
190 2 255 2 209 1 349 1 306 1 212 1 
190 1 255 1 162 1 
190 1 255 1 162 1 
190 1 255 1 237 1 
190 1 255 1 237 1 
190 1 255 1 237 1 
255 2 79 2 94 3 95 1 356 2 141 2 226 1 249 1 316 2 345 2 278 2 289 1 98 1 178 1 190 2 70 1 342 2 306 1 77 1 
79 1 284 1 286 1 316 1 359 2 179 2 342 1 272 1 296 2 9 1 94 1 255 1 141 1 326 1 300 1 345 1 278 1 330 2 99 2 190 1 70 1 75 1 148 1 106 1 
186 1 118 1 84 1 
186 1 118 1 201 1 
280 1 118 3 84 2 136 1 39 1 201 1 
280 1 118 2 231 1 84 1 136 1 201 1 
280 2 118 2 84 1 136 1 201 1 
354 1 79 5 172 1 50 1 174 1 228 2 314 1 130 1 290 1 289 2 319 1 271 1 272 1 86 2 205 1 182 1 297 1 93 1 36 3 326 1 96 3 121 1 278 5 15 4 220 2 145 2 169 1 72 1 75 1 41 1 283 1 222 1 
79 7 172 1 50 1 227 1 174 1 314 1 130 1 114 3 289 3 269 3 319 1 134 1 271 2 86 2 205 1 182 2 297 4 36 3 326 2 241 1 96 3 214 1 278 7 15 5 121 1 220 2 145 2 169 1 72 1 41 1 193 1 283 1 222 2 
79 3 172 1 50 1 227 1 174 1 228 1 314 1 289 3 290 1 319 1 271 1 86 2 182 1 93 1 36 3 326 1 96 4 15 2 278 3 220 2 169 1 145 2 72 2 41 1 283 1 222 1 
79 1 227 1 278 1 290 1 271 1 182 1 193 1 222 1 93 1 
137 1 152 1 246 1 
137 1 277 1 
5 1 
137 1 243 1 
137 3 253 1 243 1 198 1 246 2 177 1 
137 1 243 1 177 1 
137 1 365 1 
108 1 62 1 172 1 23 1 66 1 167 3 25 7 301 1 217 2 16 1 169 1 295 1 27 1 57 3 58 1 273 2 235 4 
108 1 62 1 172 1 23 1 66 1 167 3 25 7 301 1 217 2 16 1 169 1 295 1 27 1 57 3 58 1 273 2 235 4 
108 1 62 1 0 1 172 1 23 1 66 1 167 3 25 7 301 1 217 2 16 1 169 1 295 1 27 1 57 3 58 1 273 2 235 4 
108 5 80 1 357 1 23 2 172 4 50 3 248 1 314 3 25 31 291 3 158 1 133 1 295 2 27 2 57 10 58 1 273 3 116 1 235 16 236 1 62 1 66 1 67 1 301 1 68 1 167 15 257 4 216 1 217 5 144 1 16 2 169 4 103 2 41 3 
108 1 172 1 357 2 23 1 248 2 25 9 338 1 158 2 339 1 295 1 27 1 57 4 58 1 273 2 116 1 235 5 62 1 68 2 167 4 301 1 217 3 16 1 169 1 103 4 
48 1 224 1 151 1 264 1 313 1 84 1 3 1 317 1 201 1 360 1 203 1 26 1 90 1 33 1 206 1 186 1 118 2 187 1 211 1 13 1 188 1 328 1 366 1 343 2 346 1 39 1 279 1 147 1 21 1 150 2 
48 1 224 1 264 1 313 1 84 1 154 1 3 1 317 1 201 1 203 1 26 1 181 1 33 1 206 1 186 1 118 2 187 1 211 1 13 1 328 1 188 2 366 1 343 3 346 1 39 1 279 1 147 1 21 1 371 1 150 3 
48 1 264 1 313 1 84 1 154 1 3 1 317 1 201 1 203 1 26 1 181 1 206 1 186 1 118 2 187 1 211 1 13 1 188 2 366 1 343 2 346 1 39 1 147 1 21 1 150 2 
48 1 264 2 313 2 317 1 268 1 156 1 203 2 26 2 7 1 164 1 206 1 137 1 276 1 328 1 366 1 343 1 258 1 303 1 279 1 147 1 243 1 371 1 150 1 
48 1 224 1 264 1 313 1 84 1 154 1 3 1 317 1 201 1 360 1 203 1 26 1 90 1 33 1 206 1 186 1 118 2 13 1 328 1 366 1 343 1 39 1 279 1 147 1 21 1 150 1 
180 1 
48 2 250 2 289 2 156 1 4 1 157 1 202 1 293 1 296 1 297 6 164 2 206 2 207 1 210 1 12 1 299 2 14 1 121 3 17 1 303 1 72 2 261 1 352 2 222 1 223 2 79 5 174 1 315 2 229 1 130 1 317 2 271 1 86 2 182 1 323 1 274 1 36 2 137 1 96 2 366 1 367 2 278 5 189 1 330 1 99 1 192 1 332 1 243 1 147 1 42 4 281 1 334 1 283 1 374 2 46 1 
79 3 229 1 250 1 157 1 202 1 293 1 296 1 323 1 297 2 207 1 210 1 121 1 278 3 17 1 330 1 189 1 99 1 101 1 332 1 261 1 42 2 334 1 
79 3 229 1 289 1 157 1 202 1 293 1 296 1 297 1 323 1 207 1 210 1 278 3 121 1 17 1 330 1 189 1 99 1 332 1 101 1 261 1 42 3 334 1 352 1 283 1 
79 3 229 1 250 1 157 1 202 1 293 1 296 1 323 1 297 2 207 1 210 1 121 1 278 3 17 1 330 1 189 1 99 1 101 1 332 1 261 1 42 3 334 1 352 1 223 1 
196 1 250 4 289 1 157 1 202 1 293 1 296 2 297 7 10 1 207 1 210 2 12 1 299 2 121 3 302 1 17 1 72 2 261 1 262 1 352 2 222 1 223 4 355 1 78 1 79 5 311 1 229 1 315 2 359 1 130 1 179 1 271 1 86 1 182 1 323 1 274 1 36 1 275 1 239 1 367 2 278 5 330 2 189 1 99 2 332 1 101 1 40 1 42 4 334 1 283 1 374 2 
250 2 289 2 157 1 202 1 293 1 296 1 297 4 207 1 12 1 210 1 299 2 14 1 121 2 17 1 72 2 261 1 352 2 222 1 223 2 79 4 229 1 315 2 130 1 271 1 86 1 182 1 323 1 274 1 36 1 96 2 367 2 278 4 330 1 189 1 99 1 332 1 42 4 334 1 283 1 374 2 
79 4 315 2 229 1 250 2 130 1 289 1 157 1 202 1 293 1 271 1 86 1 182 1 296 1 297 4 323 1 274 1 36 1 10 1 207 1 239 1 12 1 210 1 299 2 367 2 121 2 278 4 17 1 330 1 189 1 99 1 332 1 40 1 72 2 261 1 42 4 334 1 352 2 283 1 222 1 223 2 374 2 
79 4 315 2 229 1 250 2 130 1 289 1 157 1 202 1 293 1 271 1 86 1 182 1 296 1 297 4 323 1 274 1 36 1 10 1 207 1 239 1 12 1 210 1 299 2 367 2 121 2 278 4 17 1 330 1 189 1 99 1 332 1 40 1 72 2 261 1 42 4 334 1 352 2 283 1 222 1 223 2 374 2 
79 4 336 1 229 1 250 2 130 1 289 1 132 2 157 1 202 1 293 1 341 2 271 1 86 1 182 1 296 1 160 1 297 4 323 1 274 1 324 1 36 1 207 1 239 1 210 1 96 2 299 2 367 2 121 2 278 4 17 1 330 1 189 1 99 1 332 1 261 1 42 4 334 1 352 2 283 1 222 1 223 2 
79 4 315 2 229 1 250 3 130 1 289 1 157 1 202 1 293 1 271 1 86 1 182 1 296 1 323 1 297 5 274 1 36 1 10 1 207 1 239 1 12 1 210 1 299 2 367 2 121 2 278 4 17 1 330 1 189 1 99 1 40 1 332 1 72 2 261 1 42 5 262 1 334 1 352 3 283 1 222 1 223 3 374 2 
79 4 315 2 229 1 250 3 130 1 289 1 157 1 202 1 293 1 271 1 86 1 182 1 296 1 323 1 297 5 274 1 36 1 10 1 207 1 239 1 12 1 210 1 299 2 367 2 121 2 278 4 17 1 330 1 189 1 99 1 40 1 332 1 72 2 261 1 42 5 262 1 334 1 352 3 283 1 222 1 223 3 374 2 
250 2 289 1 157 1 202 1 293 1 341 2 296 1 297 4 207 1 210 1 299 2 14 1 121 2 17 1 261 1 352 2 222 1 223 2 79 4 229 1 130 1 132 2 271 1 86 1 182 1 323 1 324 1 274 1 36 1 96 2 367 2 278 4 330 1 189 1 99 1 332 1 42 4 334 1 283 1 
310 1 357 1 172 1 109 1 248 1 152 1 25 6 158 1 295 1 27 1 57 2 58 1 273 1 235 3 62 1 256 1 301 1 68 1 167 3 217 2 169 1 103 2 43 1 245 1 126 1 106 2 
310 4 108 1 80 1 357 2 172 1 358 1 109 1 50 2 248 2 314 1 25 14 252 1 291 3 158 2 57 2 235 8 236 1 91 1 92 1 63 1 65 1 256 11 167 6 257 3 68 2 217 1 19 1 169 2 103 4 41 2 43 11 245 2 106 1 
48 1 310 1 357 1 109 1 248 1 25 2 112 1 359 1 177 1 317 1 252 1 158 1 179 1 296 2 31 1 320 1 235 1 164 1 165 1 91 1 206 1 137 1 63 1 11 1 325 1 366 1 68 1 167 1 97 1 330 2 99 1 103 2 243 1 147 1 245 1 221 1 45 1 106 1 
48 3 108 4 109 3 50 2 248 3 112 1 154 1 252 1 158 3 295 1 204 2 57 8 58 1 159 1 296 3 164 1 206 3 62 1 11 1 63 1 256 7 301 1 167 10 68 3 120 2 217 4 169 3 305 1 123 2 310 7 81 1 172 3 357 3 314 2 25 20 359 1 177 2 317 3 179 1 27 1 273 1 31 2 320 2 235 10 91 1 137 2 366 2 330 3 99 1 191 2 103 6 147 2 243 2 41 2 43 7 105 2 245 3 45 2 106 2 
48 7 357 2 109 2 248 2 25 2 112 1 359 1 154 1 288 1 177 1 317 7 252 1 318 1 158 2 156 1 179 1 59 1 296 1 235 1 164 2 91 1 206 6 137 4 238 1 138 1 139 1 140 1 364 2 366 3 368 1 143 1 68 2 167 1 330 1 99 1 303 1 71 1 103 4 147 4 243 3 245 2 126 1 353 1 
310 1 355 1 357 1 172 1 109 1 50 1 248 1 314 1 25 3 359 1 158 1 179 1 57 1 296 1 235 1 63 1 256 1 68 1 167 2 217 1 37 1 330 1 99 1 169 1 103 2 41 1 43 1 308 1 245 1 
310 1 108 1 357 1 109 1 248 1 256 1 25 2 68 1 158 1 260 1 169 1 103 2 57 1 41 1 43 1 245 1 235 2 126 1 
310 1 357 1 172 1 109 1 248 1 256 1 314 1 25 2 68 1 167 2 217 1 369 1 158 1 103 2 57 1 43 1 245 1 126 1 
310 2 108 1 357 1 172 1 50 1 109 1 248 1 314 1 25 4 158 1 57 2 235 2 256 2 68 1 167 2 217 1 169 1 103 2 41 1 43 2 245 1 126 1 
310 1 108 1 140 1 357 1 109 1 248 1 256 1 25 2 68 1 158 1 260 1 169 1 103 2 57 1 41 1 43 1 245 1 235 2 
310 1 140 1 357 1 172 1 109 1 248 1 256 1 314 1 25 2 68 1 167 2 217 1 369 1 158 1 103 2 57 1 43 1 245 1 
310 2 108 1 357 1 172 1 50 1 109 1 248 1 314 1 25 4 158 1 57 2 235 2 140 1 256 2 68 1 167 2 217 1 169 1 103 2 41 1 43 2 245 1 
310 2 108 1 172 1 357 1 109 1 50 1 248 1 314 1 256 2 167 2 68 1 25 4 217 1 158 1 169 1 103 2 57 2 41 1 43 2 245 1 235 2 
48 1 357 1 109 1 248 1 25 2 177 1 252 1 317 1 158 1 296 1 31 1 320 1 235 1 164 1 91 1 206 1 137 1 366 1 68 1 167 1 120 1 330 1 103 2 243 1 147 1 245 1 45 1 106 1 
48 1 357 1 109 1 248 1 51 1 25 2 177 1 252 1 317 1 158 1 340 1 296 1 234 1 235 1 164 1 91 1 206 1 137 1 366 1 68 1 167 1 330 1 103 2 243 1 147 1 245 1 45 1 106 1 
310 2 108 1 357 1 172 1 50 1 109 1 248 1 314 1 25 4 158 1 57 2 235 2 63 1 256 2 68 1 167 2 217 1 169 1 103 2 41 1 43 2 245 1 
310 2 48 1 108 1 172 1 151 1 357 1 109 1 50 1 248 1 314 1 25 4 177 1 317 1 158 1 57 2 296 1 31 1 320 1 235 2 206 1 137 1 256 2 366 1 167 2 68 1 120 1 217 1 330 1 169 1 103 2 147 1 243 1 41 1 43 2 123 1 245 1 45 1 
355 1 49 1 310 1 108 1 172 1 357 1 109 1 50 1 248 1 314 1 25 3 359 1 158 1 179 1 57 1 296 1 235 2 63 1 256 1 167 1 68 1 330 1 99 1 169 1 103 2 41 1 43 1 308 1 245 1 
108 2 80 3 357 2 172 2 50 3 248 2 314 2 153 2 25 24 291 3 158 2 339 1 361 1 57 3 87 1 8 1 321 1 183 1 322 1 235 12 236 1 240 1 257 4 68 2 167 12 242 1 217 1 329 1 122 1 169 3 103 4 41 3 104 3 
108 2 80 3 357 2 172 2 50 3 248 2 314 2 153 2 25 24 291 3 158 2 339 1 361 1 57 4 87 1 8 1 321 1 183 1 322 1 235 12 236 1 240 1 257 4 68 2 167 12 242 1 217 2 329 1 122 1 169 3 103 4 41 3 104 3 
108 4 80 2 357 1 172 5 50 5 248 1 314 4 153 1 25 36 291 4 158 1 339 1 295 1 27 1 57 9 58 1 273 1 8 1 321 1 183 1 235 19 236 2 62 1 301 1 257 4 68 1 167 17 242 1 217 5 329 1 122 1 19 2 169 6 103 2 41 5 104 2 
108 3 80 1 357 2 172 3 50 3 248 2 314 3 153 1 25 19 291 1 158 2 339 1 57 6 87 1 8 1 321 1 183 1 322 2 235 9 236 1 240 1 257 2 68 2 167 10 217 3 169 3 102 1 103 4 41 3 104 2 
80 2 357 1 50 1 248 1 257 2 25 11 68 1 153 2 167 5 242 1 329 1 291 2 339 1 158 1 122 1 169 1 103 2 41 1 104 2 8 1 321 1 183 2 235 6 
190 1 255 1 95 1 370 1 141 1 226 1 342 1 306 1 316 1 345 1 
284 1 148 1 
190 1 255 1 64 1 55 1 141 1 342 1 175 1 316 1 345 1 
79 1 255 1 94 2 95 1 356 1 141 1 226 1 249 1 316 1 278 1 345 1 289 1 98 1 178 1 70 1 190 1 342 1 306 1 
79 1 255 1 94 2 95 1 356 1 141 1 226 1 249 1 316 1 278 1 345 1 289 1 98 1 178 1 70 1 190 1 342 1 306 1 
79 1 255 1 94 2 95 1 356 1 141 1 226 1 249 1 316 1 278 1 345 1 289 1 98 1 178 1 70 1 190 1 342 1 306 1 
349 1 282 1 162 1 
349 1 282 1 162 1 
173 1 237 1 
349 1 173 1 237 1 
286 1 9 1 
79 1 284 1 356 1 286 1 249 1 83 1 316 1 359 2 179 2 342 1 272 1 296 2 9 1 255 1 94 1 141 1 326 1 300 1 278 1 15 1 345 1 330 2 99 2 190 1 75 1 148 1 106 1 
282 1 162 1 
349 1 173 1 237 1 
48 2 357 1 109 1 248 1 25 2 317 2 252 1 318 1 158 1 254 1 59 1 296 2 235 1 34 1 91 1 206 2 137 1 63 1 117 1 364 2 366 1 344 1 68 1 167 1 330 2 99 2 103 2 147 1 243 1 333 1 245 1 
206 2 48 2 186 1 118 2 151 1 129 1 264 1 13 1 366 1 84 1 154 1 317 2 39 1 201 1 267 1 147 1 28 1 21 1 33 1 
206 1 48 1 186 1 118 2 264 1 13 1 366 1 84 1 154 1 317 1 39 1 201 1 304 1 28 1 147 1 21 1 33 1 
206 1 48 1 137 1 276 1 264 1 366 1 218 1 317 1 267 1 303 1 156 1 147 1 243 1 164 1 
206 1 48 1 186 1 118 2 129 1 264 1 13 1 366 1 84 1 154 1 317 1 39 1 201 1 267 1 147 1 28 1 21 1 33 1 
56 1 
36 1 294 1 86 1 265 1 152 1 283 1 289 1 
36 1 79 1 12 1 315 1 96 1 278 1 121 1 130 1 289 2 72 1 271 1 86 1 182 1 283 1 297 1 222 1 374 1 
206 1 48 1 137 2 277 1 366 1 130 1 177 1 317 1 292 1 331 1 253 1 147 2 243 1 271 1 182 1 222 1 164 1 
80 1 172 2 50 2 314 2 130 1 199 1 289 1 291 1 271 1 86 4 182 1 60 1 36 6 96 2 257 1 242 1 329 1 220 4 122 1 145 4 169 2 72 1 41 2 222 1 
78 1 355 1 79 1 172 1 311 1 196 1 130 1 359 1 179 1 295 1 27 1 271 1 86 1 233 2 182 1 296 1 36 2 210 1 215 1 278 1 38 1 302 1 330 1 99 1 169 1 40 1 222 1 
36 1 265 1 130 1 289 1 294 1 271 1 86 1 182 1 283 1 222 1 
36 5 172 2 50 2 96 10 314 2 215 1 289 5 220 5 169 2 145 5 72 5 41 2 86 5 233 2 105 1 
79 1 278 1 121 1 283 1 297 1 289 1 
48 4 79 3 227 1 174 2 287 1 130 1 317 4 4 1 156 1 271 2 85 1 86 2 182 2 362 1 135 2 297 4 164 2 206 4 36 2 137 1 366 1 121 2 278 3 303 1 192 1 147 1 243 1 222 2 46 2 
48 1 355 2 357 1 109 1 248 1 25 1 359 2 177 1 317 1 158 1 179 2 296 3 31 1 320 1 91 1 164 1 206 1 137 1 366 1 167 1 68 1 259 1 120 1 302 1 330 3 99 2 103 2 147 1 243 1 245 1 45 1 106 1 
36 1 174 1 96 4 130 1 289 4 220 2 145 2 72 2 271 1 86 2 273 1 182 1 283 2 222 1 46 1 
2 1 141 1 316 1 
95 1 141 1 197 1 316 1 9 1 
2 1 141 1 316 1 
2 1 141 1 316 1 
141 1 316 1 251 1 
141 1 316 1 251 1 
141 1 316 1 251 1 
141 1 316 1 
190 1 255 1 
80 1 172 1 357 1 248 1 25 8 291 1 158 1 339 1 295 1 27 1 57 2 58 1 273 1 235 4 62 1 167 4 257 1 68 1 301 1 217 2 122 1 169 1 103 2 
108 1 80 1 172 1 357 2 50 1 337 1 248 2 25 11 291 1 339 1 158 2 295 1 27 1 57 3 58 1 273 1 235 6 236 1 62 1 301 1 167 5 257 2 68 2 217 2 122 1 169 2 103 4 41 1 
80 1 357 1 50 1 248 1 68 1 257 1 167 2 25 5 242 1 329 1 291 1 339 1 158 1 122 1 169 1 103 2 41 1 235 3 
80 1 357 1 50 1 248 1 68 1 257 1 167 2 25 5 242 1 329 1 291 1 339 1 158 1 122 1 169 1 103 2 41 1 235 3 
80 1 172 1 357 1 248 1 25 8 291 1 158 1 339 1 295 1 27 1 57 2 58 1 273 1 235 4 62 1 167 4 257 1 68 1 301 1 217 2 122 1 169 1 103 2 
80 1 357 1 50 1 248 1 68 1 257 1 167 2 25 5 242 1 329 1 291 1 339 1 158 1 122 1 169 1 103 2 41 1 235 3 
80 1 357 2 50 1 337 1 248 2 68 2 257 1 167 2 25 5 242 1 329 1 291 1 339 1 158 2 122 1 169 1 103 4 41 1 235 3 
80 1 357 2 50 1 248 2 68 2 257 1 167 2 25 5 242 1 329 1 291 1 158 2 339 1 122 1 169 1 103 4 41 1 87 1 235 3 
62 2 108 3 172 1 167 4 25 7 301 1 217 3 169 1 295 3 27 3 57 6 58 1 235 3 
80 1 357 2 50 1 248 2 68 2 257 1 167 2 25 5 242 1 329 1 291 1 158 2 339 1 122 1 169 1 103 4 41 1 87 1 235 3 
108 1 62 1 172 1 357 2 248 2 167 4 25 8 68 2 301 1 217 2 158 2 169 1 295 1 103 4 27 1 57 3 58 1 273 1 116 1 235 4 
62 1 172 1 167 3 152 1 301 1 25 6 217 2 169 1 295 1 27 1 57 2 58 1 273 1 235 3 
108 1 172 1 357 1 50 1 337 1 248 1 314 1 167 2 68 1 25 4 217 1 158 1 169 1 103 2 57 2 41 1 235 2 
108 1 80 1 172 1 50 1 314 1 257 2 167 4 25 7 217 1 291 1 169 1 41 1 57 2 235 3 236 1 
108 4 172 3 357 2 50 2 248 2 314 2 25 23 291 2 158 2 295 2 27 2 57 9 58 1 273 1 116 2 235 11 236 1 61 1 62 1 65 1 301 1 167 12 257 2 68 2 217 5 169 3 19 1 103 4 41 2 
25 1 167 1 257 1 
25 1 235 1 291 1 
108 1 357 1 172 1 50 1 337 1 248 1 314 1 68 1 167 3 25 6 217 2 158 1 169 1 103 2 41 1 57 3 105 1 235 3 
80 1 357 1 50 1 248 1 68 1 257 1 167 2 25 5 242 1 329 1 291 1 339 1 158 1 122 1 169 1 103 2 41 1 235 3 
108 1 172 1 25 6 167 3 217 1 169 1 295 1 27 1 57 2 58 1 235 3 
61 1 108 1 62 1 357 1 248 1 167 2 25 3 68 1 301 1 217 1 158 1 295 1 103 2 27 1 57 2 116 1 235 1 
108 2 357 1 172 1 248 1 68 1 25 6 167 3 217 2 38 1 158 1 339 1 169 1 295 1 103 2 27 1 57 4 235 3 
108 1 357 1 248 1 68 1 25 2 339 1 158 1 169 1 103 2 41 1 57 1 235 2 
108 1 172 1 357 1 50 1 248 1 314 1 167 2 68 1 25 4 217 1 339 1 158 1 169 1 103 2 57 2 41 1 235 2 
61 1 108 1 357 3 248 3 167 2 25 3 68 3 217 1 339 1 158 3 295 1 103 6 27 1 57 2 87 1 116 1 235 1 
108 5 80 1 357 5 172 5 50 3 337 1 248 5 314 3 25 34 291 3 158 5 339 1 133 1 295 3 27 3 57 12 58 2 273 1 87 1 116 2 235 16 236 1 61 1 62 1 67 1 301 1 167 18 257 4 68 5 144 1 217 7 169 5 103 10 41 3 
293 1 296 1 111 1 200 1 106 1 330 1 99 1 
107 1 111 1 176 1 200 1 330 1 99 1 293 1 146 1 244 1 296 1 106 1 149 1 
48 1 206 1 137 1 147 1 243 1 366 1 152 1 317 1 156 1 303 1 164 1 
206 1 48 1 137 1 366 1 112 1 359 1 177 1 330 2 317 1 99 1 179 1 243 1 147 1 296 2 31 1 45 1 106 1 164 1 
48 1 112 1 359 1 177 2 317 1 202 1 179 2 296 2 31 1 135 1 323 1 206 1 137 3 210 1 365 1 366 1 330 2 99 2 147 1 243 2 45 1 106 1 247 1 
48 2 112 1 359 1 177 2 317 2 202 1 179 2 296 2 234 1 135 1 323 1 206 2 137 3 327 1 210 1 365 1 366 1 330 2 99 2 147 1 243 2 45 1 106 1 247 1 
206 3 48 3 79 2 137 4 327 1 277 1 365 1 366 1 278 2 289 1 177 1 317 3 243 1 147 1 334 1 283 1 32 1 135 1 297 1 246 1 35 1 247 1 164 1 
206 3 48 3 79 2 137 4 327 1 277 1 365 1 366 1 278 2 289 1 177 1 317 3 243 1 147 1 334 1 283 1 135 1 297 1 246 1 247 1 164 1 47 1 
48 1 206 1 139 1 147 1 366 1 317 1 
206 5 48 6 137 3 238 1 139 1 364 1 366 2 368 1 154 1 288 1 177 1 317 6 318 1 71 1 253 1 243 2 147 3 125 1 353 1 164 2 
48 1 151 1 109 2 248 2 112 1 158 2 295 1 57 2 58 1 296 2 206 1 63 1 62 1 117 1 256 1 68 2 301 1 167 3 120 1 217 2 169 1 123 1 310 1 357 2 172 1 25 6 359 1 177 1 317 1 179 1 27 1 273 1 31 1 320 1 235 3 137 1 366 1 330 2 99 1 191 1 103 4 147 1 243 1 43 1 245 2 45 1 106 2 
48 1 79 3 265 1 130 2 289 1 317 1 294 1 53 1 271 2 86 1 182 2 362 1 184 1 297 2 164 1 36 1 206 1 137 2 277 1 278 3 15 1 121 1 334 1 309 1 283 1 222 2 246 1 47 1 
206 2 48 2 137 2 139 1 151 1 366 1 177 1 317 2 331 1 253 1 243 1 147 2 246 1 
206 4 48 4 137 1 327 1 151 1 366 1 317 4 303 1 156 1 147 1 243 1 44 1 164 1 
206 2 48 2 137 1 238 1 138 1 366 1 143 1 368 1 177 1 317 2 305 1 243 1 147 2 135 1 
48 1 206 1 186 1 118 1 147 1 21 1 366 1 317 1 201 1 164 1 
48 2 206 2 137 1 147 1 243 1 151 1 333 1 366 1 154 1 317 2 318 1 
206 4 48 5 137 3 151 1 366 2 317 5 156 1 303 1 318 1 71 1 243 2 147 2 44 1 135 1 353 1 164 1 
206 4 48 5 137 3 151 1 366 2 113 1 317 5 156 1 303 1 318 1 243 2 147 2 44 1 135 1 353 1 164 1 
206 1 48 1 137 1 366 1 112 1 359 1 177 1 330 2 317 1 99 1 179 1 243 1 147 1 296 2 234 1 45 1 106 1 164 1 
206 1 48 1 137 1 238 1 366 1 368 1 177 1 317 1 253 1 243 1 147 2 135 1 125 1 
89 1 194 1 76 1 335 1 106 1 
79 2 210 1 15 1 278 2 131 1 289 1 202 1 332 1 20 1 334 1 350 1 89 2 372 1 194 2 283 1 76 2 323 1 335 1 106 1 
344 1 330 1 99 1 254 1 296 1 89 1 76 1 335 1 34 1 
350 1 372 1 335 1 
187 1 211 1 152 1 346 1 
279 1 187 1 211 1 328 1 343 1 150 1 346 1 
203 1 26 1 343 1 
187 1 211 1 328 1 343 3 24 1 347 1 346 1 279 1 100 1 163 2 90 1 150 3 
279 1 187 1 211 1 188 1 328 1 343 2 185 1 150 2 346 1 
279 1 186 1 208 1 118 1 211 1 328 1 343 1 84 1 219 1 90 1 150 1 
279 1 211 1 328 1 343 1 90 1 150 1 346 1 
279 1 187 1 328 1 343 1 90 1 150 1 346 2 
211 1 82 1 328 2 213 1 110 1 343 2 346 1 279 2 90 1 150 2 
225 1 187 1 211 2 328 1 188 2 343 3 219 1 346 1 279 1 74 1 90 1 150 3 363 1 
186 1 285 1 118 2 187 1 211 1 328 1 188 1 343 2 84 1 346 1 201 1 39 1 279 1 90 1 150 2 
171 1 187 1 211 2 328 2 188 2 343 4 219 1 346 1 279 2 90 1 185 1 150 4 363 1 
279 1 187 1 211 1 328 1 343 1 90 1 150 1 346 1 
187 2 211 3 188 2 328 1 24 1 343 4 219 1 346 2 100 1 279 1 161 1 163 1 150 4 363 1 
187 1 211 1 328 1 188 1 343 2 346 1 279 1 54 1 30 1 351 1 90 1 150 2 
187 1 211 1 328 1 343 3 24 2 18 1 346 1 100 1 279 1 163 2 90 1 150 3 
22 2 195 1 211 2 155 1 
279 1 142 1 328 1 343 1 90 1 150 1 
279 1 74 1 187 1 211 1 188 1 328 1 343 2 90 1 150 2 346 1 
263 1 
279 1 187 1 211 1 328 1 343 1 90 1 150 1 346 1 
187 1 211 1 188 1 328 1 343 3 346 1 279 1 74 1 163 1 90 1 150 3 
211 1 161 1 219 1 363 1 
211 1 346 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 246 212 315 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 216 286 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 9 111 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 9 111 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 9 111 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 9 111 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 9 111 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 216 286 10 13 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 140 147 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 1 341 9 86 1 289 1 66 2 270 1 317 1 128 2 109 1 23 1 25 1 201 1 324 1 274 3 75 1 31 2 78 2 329 1 257 1 164 2 36 2 283 1 80 6 117 1 362 4 238 2 309 5 239 9 
85 1 341 9 86 1 289 1 66 2 270 1 317 1 128 2 109 1 23 1 25 1 201 1 324 1 274 3 31 2 75 1 78 2 329 1 257 1 164 2 36 2 283 1 80 6 117 1 362 4 238 2 309 5 239 9 
85 1 341 10 86 1 289 1 66 2 270 1 317 1 128 2 109 1 23 1 25 1 201 1 324 1 274 4 31 2 75 1 78 2 329 1 257 1 164 2 36 2 283 1 80 7 117 1 362 5 238 2 309 6 239 10 
85 1 341 7 86 1 289 1 66 2 270 1 317 1 128 2 23 1 25 1 201 1 324 1 274 2 31 2 75 1 78 2 329 1 257 1 164 1 36 2 283 1 80 4 117 1 362 3 238 2 309 4 239 7 
85 1 341 4 86 1 66 1 164 2 36 1 128 1 109 1 80 3 23 1 25 1 362 2 238 1 274 1 309 3 239 4 75 1 31 1 
85 1 341 2 78 1 289 1 66 1 36 1 128 1 23 1 119 1 238 1 264 1 309 1 324 1 239 2 211 1 75 1 
85 1 341 3 78 1 36 2 80 1 23 1 117 1 362 1 238 2 274 1 309 2 239 3 75 1 
85 1 341 9 78 1 86 1 66 1 257 1 317 1 164 2 36 2 128 1 109 1 80 7 23 1 117 1 25 1 118 1 362 4 238 2 225 1 309 5 274 3 239 9 31 1 75 1 
85 1 341 9 78 1 86 1 66 1 257 1 317 1 164 2 36 2 128 1 109 1 80 7 23 1 117 1 25 1 118 1 362 4 238 2 225 1 309 5 274 3 239 9 31 1 75 1 
265 1 99 1 126 1 
70 2 99 1 94 1 
303 2 3 1 93 2 261 1 263 2 196 2 50 2 318 2 
62 2 172 1 339 2 173 1 3 1 313 2 269 1 314 1 318 2 179 1 346 1 110 1 93 2 8 1 132 2 50 2 299 1 301 1 254 1 304 1 303 3 281 1 187 1 115 1 161 1 230 1 307 2 260 1 360 1 193 1 192 1 233 1 261 1 336 1 263 2 196 3 195 1 
153 1 303 1 34 1 93 1 261 1 120 1 263 1 196 1 50 1 318 1 
96 1 303 1 99 1 126 1 214 1 46 1 16 1 153 1 235 1 263 1 196 1 19 1 350 1 240 1 
96 2 303 1 99 1 126 1 46 1 318 1 16 1 153 1 235 1 93 1 263 1 50 1 196 1 19 2 240 1 
136 1 96 1 229 1 116 1 19 1 
202 1 136 1 96 2 229 1 99 1 126 1 30 1 19 2 
96 1 229 1 19 1 
136 1 96 1 303 1 34 1 318 1 47 1 153 1 120 1 261 1 93 1 263 1 50 1 196 1 19 1 
99 1 
202 1 136 1 96 2 229 1 99 1 126 1 19 2 276 1 
312 1 202 1 136 2 183 2 137 1 96 5 205 2 112 1 229 2 99 1 126 1 89 1 101 2 335 1 165 1 74 1 182 1 19 5 20 1 
265 1 3 1 
303 2 3 2 318 1 73 1 93 1 263 2 196 2 50 1 252 1 
204 1 87 1 194 1 
62 1 172 1 303 1 3 1 313 1 269 1 314 1 115 1 307 1 260 1 200 1 192 1 233 1 110 1 196 1 195 1 
172 1 62 1 303 2 204 1 313 1 269 1 115 1 314 1 108 1 318 1 260 1 307 1 192 1 233 1 110 1 93 1 263 1 195 1 196 2 300 1 
227 1 303 5 3 1 108 2 318 4 248 1 92 1 93 4 263 5 196 5 50 1 252 1 300 1 350 1 
153 1 303 2 34 1 49 1 93 2 263 2 196 2 318 2 
303 3 3 1 93 3 108 1 263 3 50 1 196 3 318 3 
153 1 303 1 34 1 93 1 263 1 196 1 318 1 
153 1 303 1 73 1 93 1 263 1 196 1 50 1 318 1 252 1 
172 1 62 1 339 1 173 1 3 1 313 1 269 1 314 1 108 1 46 1 318 3 5 1 179 1 153 1 346 1 110 1 93 3 8 1 132 2 50 2 252 1 300 1 96 1 303 4 159 1 281 1 187 1 115 1 161 1 230 1 16 1 260 1 307 1 360 1 193 1 192 1 233 1 235 1 261 1 263 3 195 1 196 4 19 1 240 1 
227 1 303 2 3 1 93 1 108 1 263 2 196 2 318 1 350 1 
96 1 303 3 99 1 108 2 46 1 318 3 5 1 16 1 153 1 18 1 235 1 93 3 263 3 50 1 196 3 252 1 19 1 300 1 240 1 
303 1 204 1 93 1 263 1 196 1 50 1 318 1 252 1 
62 1 172 1 303 1 3 1 313 1 269 1 314 1 115 1 307 1 260 1 192 1 233 1 110 1 196 1 195 1 
62 1 172 1 303 1 138 1 3 1 313 1 269 1 314 1 115 1 307 1 190 1 233 1 110 1 196 1 195 1 
339 2 244 1 204 1 87 1 187 1 281 1 106 1 230 1 161 1 179 1 346 2 236 1 251 1 132 2 8 1 124 1 
153 1 303 1 93 1 49 1 263 1 196 1 318 1 240 1 
11 1 141 1 
11 1 141 1 
59 1 294 1 
59 1 294 1 
59 1 294 1 
11 1 0 1 141 1 
11 1 0 1 141 1 
11 1 141 1 247 1 
11 2 59 1 294 1 295 1 141 2 169 1 
11 1 0 1 141 1 
11 1 255 1 141 1 
11 1 255 1 141 1 
11 1 255 1 141 1 
61 1 44 1 21 1 3 1 318 2 247 1 219 1 68 1 150 1 199 1 93 2 11 1 96 1 303 2 279 1 15 1 355 1 139 1 141 1 54 1 58 1 263 2 196 2 19 1 
11 2 95 1 96 2 44 1 15 2 139 2 141 2 99 1 219 2 68 3 144 1 199 2 60 1 38 1 167 1 169 1 19 2 325 1 349 2 
66 1 128 1 31 1 
66 1 211 1 128 1 
71 1 176 1 337 1 211 1 31 2 128 3 
71 1 354 1 337 1 211 1 31 1 128 2 
71 1 337 2 211 1 31 1 128 2 
312 1 106 1 126 1 215 1 216 1 127 1 70 1 251 1 249 1 322 1 155 1 74 3 183 1 202 1 136 4 253 1 137 1 96 5 279 1 205 1 229 1 188 1 355 1 256 1 99 1 101 1 58 1 166 2 286 1 310 1 19 5 
312 1 243 1 106 3 107 1 126 1 215 3 216 3 127 2 344 1 70 3 251 3 155 3 74 8 136 7 277 1 202 1 183 2 253 3 137 3 96 9 205 2 355 4 229 6 188 1 116 5 256 2 99 2 358 1 101 2 285 1 286 3 170 5 19 9 20 1 
106 1 126 1 127 1 216 1 215 1 70 2 249 1 251 1 322 1 74 3 155 1 94 1 136 2 183 1 253 1 96 3 137 1 205 1 355 1 256 1 99 2 101 1 166 1 286 1 19 3 20 1 
243 1 106 2 126 1 127 1 216 2 215 2 344 1 70 3 251 2 249 1 322 1 155 2 74 5 94 1 183 1 136 3 253 2 96 4 137 2 205 1 355 2 256 1 99 2 358 1 101 1 166 2 286 2 19 4 20 1 
352 1 265 1 269 1 
184 1 269 1 
171 1 
233 1 269 1 115 1 
24 1 269 1 
269 1 115 1 
69 1 352 2 233 1 269 3 115 1 163 1 
158 1 339 4 228 1 304 3 53 1 140 1 215 1 37 2 145 3 345 1 222 1 346 1 28 1 237 1 123 2 104 1 
158 1 339 4 228 1 304 3 53 1 140 1 215 1 37 2 145 3 345 1 222 1 346 1 28 1 237 1 123 2 104 1 
158 1 339 4 228 1 304 3 53 1 140 1 215 1 90 1 37 2 145 3 345 1 222 1 346 1 28 1 237 1 123 2 104 1 
339 25 106 3 67 1 216 3 215 4 179 1 319 1 345 2 27 1 222 2 28 2 346 13 250 4 251 3 8 1 132 2 297 1 226 1 158 2 228 1 304 12 53 1 140 1 230 1 161 1 143 3 334 1 37 3 284 1 145 6 237 2 286 3 123 4 104 1 
147 1 339 9 215 3 179 2 345 2 222 4 251 1 346 3 28 2 8 2 132 4 296 1 297 1 158 1 77 1 228 1 304 6 53 1 140 2 161 2 230 2 37 2 145 9 237 1 123 5 
85 1 62 1 172 1 341 2 313 1 66 1 45 1 314 1 176 1 128 2 23 1 91 1 26 1 131 1 321 1 133 1 31 1 75 1 32 1 33 1 78 1 356 1 36 1 307 1 80 1 234 1 238 1 309 1 239 2 211 1 
85 1 62 1 172 1 341 3 313 1 66 1 314 1 176 1 178 1 128 2 23 1 91 1 26 1 131 1 321 1 133 1 31 1 157 1 32 1 33 1 78 1 356 1 36 1 307 1 80 2 238 1 308 1 309 1 239 3 211 1 
85 1 62 1 172 1 341 2 313 1 66 1 314 1 176 1 128 2 23 1 91 1 26 1 131 1 133 1 31 1 157 1 32 1 33 1 78 1 307 1 80 2 308 1 309 1 239 2 211 1 
62 1 172 1 341 1 313 1 343 1 269 1 314 1 178 1 218 1 131 2 110 1 133 2 33 2 302 1 78 2 115 1 36 1 206 1 307 1 262 1 210 1 238 1 239 1 
62 1 172 1 341 1 313 1 66 1 314 1 176 1 128 2 91 1 26 1 131 1 321 1 133 1 31 1 75 1 157 1 32 1 33 1 78 1 356 1 36 1 307 1 234 1 238 1 239 1 211 1 
197 1 
312 1 172 1 42 1 43 1 313 2 269 1 314 1 126 1 271 2 217 2 127 1 214 1 46 1 218 1 181 1 273 1 94 2 183 1 137 2 96 5 98 1 229 6 99 2 16 1 101 1 191 2 235 1 196 1 19 5 338 2 240 1 105 2 62 2 242 1 63 1 246 1 22 4 290 1 70 2 152 2 291 1 153 1 110 2 74 2 29 1 350 1 202 3 353 1 303 1 205 1 115 1 206 1 307 2 263 1 41 2 
242 1 42 1 105 1 43 1 214 1 46 1 22 2 153 1 181 1 29 1 276 1 350 1 202 1 96 3 303 1 229 2 16 1 235 1 263 1 196 1 19 3 240 1 
242 1 42 1 43 1 126 1 214 1 46 1 22 3 153 1 181 1 29 1 276 1 350 1 202 1 96 3 303 1 229 1 99 1 16 1 235 1 263 1 196 1 19 3 338 1 240 1 
242 1 42 1 105 1 43 1 126 1 214 1 46 1 22 3 153 1 181 1 29 1 276 1 350 1 202 1 96 3 303 1 229 2 99 1 16 1 191 1 235 1 263 1 196 1 19 3 338 1 240 1 
42 1 312 1 43 1 212 1 126 5 46 1 214 1 217 2 271 2 129 1 181 1 94 2 276 1 183 1 96 5 137 1 14 1 229 7 99 5 16 1 101 1 189 1 191 4 235 1 196 1 19 5 338 4 240 1 105 4 242 1 63 1 342 1 246 1 22 6 152 2 153 1 29 1 74 1 350 1 202 3 303 1 205 1 263 1 41 2 
312 1 42 1 43 1 126 1 46 1 214 1 217 2 271 2 181 1 94 2 183 1 96 4 137 1 229 4 98 1 99 2 16 1 101 1 191 2 235 1 196 1 19 4 338 2 240 1 242 1 105 2 63 1 246 1 22 4 152 2 70 2 153 1 29 1 74 1 350 1 202 2 303 1 205 1 263 1 41 2 
105 2 242 1 42 1 312 1 43 1 63 1 212 1 246 1 126 1 271 2 217 2 214 1 46 1 22 4 152 2 153 1 181 1 74 1 29 1 94 2 350 1 202 2 183 1 137 1 96 4 303 1 14 1 205 1 229 4 99 1 16 1 101 1 189 1 191 2 235 1 263 1 196 1 19 4 338 2 41 2 240 1 
105 2 242 1 42 1 312 1 43 1 63 1 212 1 246 1 126 1 271 2 217 2 214 1 46 1 22 4 152 2 153 1 181 1 74 1 29 1 94 2 350 1 202 2 183 1 137 1 96 4 303 1 14 1 205 1 229 4 99 1 16 1 101 1 189 1 191 2 235 1 263 1 196 1 19 4 338 2 41 2 240 1 
242 1 42 1 312 1 43 1 212 1 246 1 245 1 315 1 217 1 214 1 46 1 22 2 152 1 153 1 181 1 74 1 29 1 350 1 183 1 137 1 96 2 303 1 205 1 16 1 101 1 39 1 235 1 263 1 196 1 19 2 240 1 
312 1 242 1 42 1 105 3 43 1 63 1 212 1 342 1 246 1 126 1 271 2 217 2 214 1 46 1 22 5 152 2 153 1 181 1 74 1 29 1 94 2 350 1 202 2 183 1 137 1 96 4 303 1 205 1 14 1 229 5 99 1 16 1 101 1 189 1 191 3 235 1 263 1 196 1 19 4 41 2 338 3 240 1 
312 1 242 1 42 1 105 3 43 1 63 1 212 1 342 1 246 1 126 1 271 2 217 2 214 1 46 1 22 5 152 2 153 1 181 1 74 1 29 1 94 2 350 1 202 2 183 1 137 1 96 4 303 1 205 1 14 1 229 5 99 1 16 1 101 1 189 1 191 3 235 1 263 1 196 1 19 4 41 2 338 3 240 1 
242 1 42 1 312 1 43 1 246 1 245 1 217 1 214 1 46 1 22 2 152 1 153 1 181 1 74 1 29 1 350 1 183 1 137 1 96 2 303 1 205 1 16 1 101 1 235 1 263 1 196 1 19 2 240 1 
339 3 265 1 228 1 304 2 204 1 87 1 3 1 187 1 281 1 53 1 140 1 230 1 161 1 215 1 37 1 179 1 145 2 345 1 346 1 28 1 236 1 132 2 8 1 123 2 194 1 
339 11 87 7 3 1 106 2 216 2 215 2 179 2 319 1 153 1 154 1 346 7 250 2 251 2 8 2 132 4 348 1 185 1 304 4 204 7 281 2 187 1 161 2 230 2 162 1 143 2 332 1 193 1 145 2 208 1 123 2 286 2 194 7 
172 1 62 1 339 2 88 1 3 1 313 1 269 1 314 1 108 1 318 1 179 1 320 1 200 1 110 1 346 1 93 1 132 2 8 1 300 1 301 1 185 1 303 2 304 1 281 1 187 1 357 1 115 1 161 1 230 1 260 1 307 1 192 1 193 1 233 1 263 1 195 1 194 1 196 2 
172 2 87 5 3 1 313 1 269 2 314 2 216 2 215 3 318 1 179 3 223 2 93 1 8 3 132 6 272 2 185 1 228 1 187 3 281 3 53 1 140 1 230 3 145 4 193 1 192 2 233 2 286 2 196 3 195 2 194 5 62 1 339 15 340 1 106 2 108 1 345 1 28 1 346 8 110 1 251 2 300 1 301 1 303 3 304 7 204 5 115 2 161 3 306 2 37 1 307 1 260 2 360 2 82 1 121 2 263 1 123 4 
172 2 62 8 339 2 266 1 125 1 313 7 1 1 45 1 269 3 314 2 108 1 318 1 218 1 179 2 130 1 110 2 346 1 93 1 8 2 132 4 301 1 157 1 254 2 303 1 304 1 281 2 187 2 115 2 331 1 161 2 230 2 333 1 206 1 307 8 193 1 361 1 236 1 263 1 196 1 
339 2 185 1 304 2 303 1 187 1 281 1 230 1 161 1 215 1 216 1 4 1 318 1 179 1 93 1 132 2 8 1 286 1 263 1 196 1 50 1 252 1 
339 1 304 1 52 1 187 1 281 1 230 1 161 1 216 1 215 1 179 1 236 1 132 2 8 1 
339 2 204 1 87 1 187 1 281 1 106 1 230 1 161 1 179 1 236 1 251 1 346 2 132 2 8 1 124 1 
339 3 304 1 204 1 87 1 187 1 281 1 106 1 230 1 161 1 216 1 215 1 179 1 346 2 251 1 236 1 132 2 8 1 286 1 
339 1 304 1 52 1 187 1 281 1 230 1 161 1 216 1 215 1 333 1 179 1 132 2 8 1 
339 2 204 1 87 1 187 1 281 1 106 1 230 1 161 1 333 1 179 1 251 1 346 2 132 2 8 1 124 1 
339 3 304 1 204 1 87 1 187 1 281 1 106 1 230 1 161 1 216 1 215 1 333 1 179 1 346 2 251 1 132 2 8 1 286 1 
339 3 304 1 204 1 87 1 187 1 281 1 106 1 230 1 161 1 216 1 215 1 179 1 346 2 251 1 132 2 8 1 286 1 
172 1 62 1 339 2 3 1 313 1 269 1 314 1 179 1 110 1 346 1 132 2 8 1 301 1 304 1 303 1 187 1 281 1 115 1 230 1 161 1 260 1 307 1 360 1 192 1 193 1 233 1 195 1 196 1 
172 1 62 1 339 2 3 1 313 1 269 1 314 1 179 1 110 1 346 1 132 2 8 1 301 1 304 1 138 1 303 1 187 1 281 1 115 1 230 1 161 1 100 1 307 1 190 1 193 1 233 1 195 1 196 1 
339 3 185 1 304 1 204 1 87 1 187 1 281 1 106 1 230 1 161 1 216 1 215 1 179 1 346 2 251 1 132 2 8 1 286 1 
172 1 62 1 339 3 87 1 313 1 106 1 45 1 269 1 314 1 215 1 216 1 179 1 346 2 251 1 132 2 8 1 304 1 303 1 204 1 187 1 281 1 115 1 230 1 161 1 260 1 307 1 360 1 192 1 233 1 121 1 286 1 195 1 196 1 
339 2 185 1 328 1 304 1 303 1 187 1 281 1 106 1 230 1 161 1 215 1 216 1 318 1 179 1 346 1 251 1 93 1 132 2 8 1 286 1 263 1 196 1 50 1 252 1 
180 1 111 1 77 1 161 1 230 1 8 1 132 2 311 1 9 1 179 1 
180 1 111 1 77 1 161 1 230 1 8 1 132 2 311 1 9 1 179 1 
180 1 111 1 77 1 161 1 230 1 8 1 132 2 311 1 9 1 179 1 
180 1 111 1 77 1 161 1 230 1 8 1 132 2 311 1 9 1 179 1 
180 1 111 1 77 1 161 1 230 1 8 1 132 2 311 1 9 1 179 1 
172 1 62 2 339 2 1 1 313 2 269 1 314 1 179 1 6 1 346 1 132 2 8 1 301 1 156 1 254 2 185 1 203 1 303 2 304 1 281 1 187 1 115 1 331 1 230 1 161 1 56 1 307 2 193 1 102 1 263 2 196 2 
172 1 62 2 157 1 33 1 313 2 66 1 45 1 314 1 176 1 142 1 35 1 128 2 307 2 91 1 26 1 321 1 122 1 211 1 31 1 
62 1 172 1 157 1 33 1 313 1 66 1 314 1 176 1 35 1 128 2 307 1 91 1 26 1 321 1 211 1 326 1 31 1 
172 1 62 1 33 1 302 1 313 1 269 1 314 1 115 1 142 1 218 1 206 1 307 1 110 1 40 1 
62 1 172 1 157 1 33 1 313 1 66 1 314 1 176 1 142 1 35 1 128 2 307 1 91 1 26 1 321 1 122 1 211 1 31 1 
292 1 
137 1 165 1 265 1 74 1 99 1 126 1 182 1 
312 1 63 1 126 1 271 1 70 1 74 1 94 1 183 1 202 1 137 1 96 1 205 1 229 1 99 2 101 1 19 1 41 1 
172 1 312 3 267 1 313 1 269 6 314 2 126 1 127 2 46 2 216 2 215 2 7 1 272 2 94 4 278 2 183 3 184 3 96 5 137 5 229 5 99 5 101 3 233 1 286 2 19 5 62 1 65 2 106 2 198 2 290 1 69 1 70 8 293 1 110 1 251 2 74 8 155 4 202 3 351 2 253 4 352 2 205 3 114 2 115 1 307 1 207 2 
10 1 312 1 183 1 253 3 137 3 13 1 205 1 99 2 215 1 216 1 143 1 101 1 70 4 81 1 284 1 250 1 74 2 155 3 286 1 94 2 
312 1 183 1 147 1 137 2 96 1 205 1 140 1 215 1 101 1 189 1 207 1 345 1 251 1 28 1 74 2 19 1 
312 1 183 1 137 1 205 1 126 1 99 1 101 1 165 1 74 1 182 1 
253 1 137 1 106 1 99 1 216 1 215 1 70 2 207 1 251 1 74 2 155 1 286 1 94 1 
202 1 96 1 229 1 99 1 126 1 19 1 
172 1 312 1 62 4 313 4 269 1 314 1 127 2 218 1 220 1 290 2 48 2 110 2 273 1 74 2 327 1 183 2 202 2 137 2 96 3 353 1 205 2 280 1 229 4 115 1 206 1 101 2 307 4 19 3 20 1 
62 1 172 1 339 1 173 1 3 1 313 1 269 1 314 1 318 2 179 1 346 1 110 1 93 2 8 1 132 2 50 2 303 3 187 1 281 1 115 1 161 1 230 1 307 1 260 1 360 1 193 1 192 1 233 1 261 1 263 2 196 3 195 1 
312 1 183 1 253 2 137 2 205 1 126 2 99 4 127 1 37 1 101 1 290 1 70 4 155 2 74 1 94 2 
12 1 15 1 139 1 
12 1 15 1 139 1 
150 1 60 1 15 1 139 1 258 1 
12 1 15 1 139 1 
15 1 139 1 177 1 
15 1 139 1 177 1 
15 1 139 1 177 1 
15 1 139 1 
11 1 141 1 
339 5 228 1 304 3 53 1 140 1 230 2 161 2 215 1 37 1 179 2 145 3 345 1 222 1 346 2 28 1 132 4 8 2 123 2 297 1 
339 3 265 1 228 1 304 2 53 1 140 1 215 1 37 1 345 1 145 2 346 1 28 1 123 2 
339 3 304 1 106 1 230 1 161 1 216 1 215 1 179 1 145 1 346 2 251 1 323 1 132 2 8 1 123 1 286 1 
339 6 304 2 106 1 143 1 216 1 215 1 319 1 284 1 145 1 250 2 346 4 251 1 123 1 286 1 
339 18 106 2 215 3 216 2 319 1 179 2 345 2 222 2 28 2 251 2 346 10 250 2 132 4 8 2 297 2 228 1 186 1 304 8 53 1 140 1 230 2 161 2 162 1 143 2 37 1 208 1 145 7 286 2 123 5 
339 1 346 1 250 1 
339 1 304 1 143 1 
339 5 304 2 106 1 161 1 230 1 216 1 215 1 179 1 145 2 346 3 251 1 8 1 132 2 323 1 272 1 286 1 123 2 
339 10 148 1 106 2 216 2 215 2 179 1 346 6 250 1 251 2 8 1 132 2 135 1 10 1 13 1 77 1 304 4 161 1 230 1 143 1 81 1 284 1 145 1 286 2 123 1 
339 1 304 1 140 1 215 1 
339 3 228 1 186 1 304 1 53 1 230 1 161 1 179 1 145 2 345 1 222 1 28 1 346 2 132 2 8 1 123 1 297 1 
147 1 339 4 304 2 140 1 215 2 345 1 145 3 222 1 28 1 251 1 346 2 123 2 
339 1 77 1 304 1 230 1 161 1 216 1 215 1 179 1 132 2 8 1 
339 3 77 1 304 1 106 1 230 1 161 1 216 1 215 1 179 1 145 1 346 2 251 1 132 2 8 1 123 1 286 1 
339 3 77 1 186 1 304 1 230 3 161 3 179 3 345 1 145 2 222 1 346 2 28 1 132 6 8 3 297 1 123 1 103 1 
339 25 106 3 67 1 216 3 215 5 179 5 319 1 345 2 27 1 222 2 28 2 346 14 250 4 251 3 323 1 8 5 132 10 297 2 77 1 228 1 186 1 304 11 53 1 140 2 161 5 230 5 143 3 334 1 37 1 284 1 145 6 286 3 123 4 103 1 
339 5 215 1 179 1 345 1 346 2 250 1 28 1 8 1 132 2 13 1 77 1 228 1 304 3 53 1 140 1 161 1 230 1 143 1 37 1 284 1 145 2 123 2 
147 1 148 1 339 22 106 4 216 4 215 6 179 2 319 1 345 1 222 1 28 1 346 13 250 2 251 5 8 2 132 4 323 1 135 1 10 1 13 1 77 1 228 1 304 9 53 1 140 1 161 2 230 2 162 1 143 2 81 1 284 1 145 6 286 4 123 5 
339 11 148 1 106 2 216 2 215 2 179 3 346 7 250 1 251 2 323 1 8 3 132 6 297 1 135 1 10 1 13 1 77 1 304 4 161 3 230 3 143 1 81 1 284 1 145 1 286 2 123 1 
147 1 339 14 148 1 106 2 216 2 215 4 179 2 345 1 222 2 28 1 346 8 250 1 251 3 323 1 8 2 132 4 135 1 10 1 13 1 77 1 228 1 304 6 53 1 140 1 161 2 230 2 143 1 81 1 284 1 145 5 286 2 123 3 
339 5 215 1 179 1 345 1 346 2 250 1 28 1 8 1 132 2 13 1 77 1 228 1 304 3 53 1 140 1 161 1 230 1 143 1 37 1 284 1 145 2 123 2 
339 10 148 1 106 2 216 2 215 2 179 1 346 6 250 1 251 2 8 1 132 2 135 1 10 1 13 1 77 1 304 4 161 1 230 1 143 1 81 1 284 1 145 1 286 2 123 1 
148 1 339 11 106 2 216 2 215 2 179 3 346 7 250 1 251 2 323 1 8 3 132 6 297 1 135 1 10 1 13 1 77 1 304 4 161 3 230 3 143 1 81 1 284 1 145 1 286 2 123 1 
148 1 339 11 106 2 216 2 215 2 179 3 346 7 250 1 251 2 8 3 132 6 297 1 135 1 10 1 13 1 77 1 304 4 161 3 230 3 143 1 81 1 284 1 145 2 286 2 123 2 103 1 
147 1 339 6 228 1 304 4 53 1 140 2 215 3 37 1 345 2 145 7 222 3 346 2 251 1 28 2 123 4 
148 1 339 11 106 2 216 2 215 2 179 3 346 7 250 1 251 2 8 3 132 6 297 1 135 1 10 1 13 1 77 1 304 4 161 3 230 3 143 1 81 1 284 1 145 1 286 2 123 1 103 1 
227 1 51 1 303 1 3 1 263 1 196 1 350 1 
227 1 51 1 303 1 3 1 55 1 359 1 282 1 263 1 196 1 134 1 146 1 350 1 
172 1 62 1 307 1 265 1 313 1 269 1 110 1 314 1 115 1 218 1 206 1 
62 1 172 1 303 2 3 1 313 1 269 1 115 1 314 1 108 1 318 1 307 1 260 1 233 1 110 1 93 1 263 1 195 1 196 2 
172 1 62 1 3 1 313 1 269 3 314 1 108 1 318 1 153 1 48 1 24 1 93 2 303 2 115 2 16 1 260 1 307 1 233 2 263 2 196 2 195 1 287 1 240 1 
172 1 62 2 3 1 313 2 269 3 314 1 108 1 318 1 153 1 48 1 24 1 93 2 303 2 115 2 16 1 307 2 190 1 233 2 168 1 263 2 196 2 195 1 287 1 240 1 
172 1 62 3 313 3 2 1 269 4 314 1 126 1 46 1 48 1 24 1 110 1 184 1 352 1 96 2 229 1 115 1 99 1 307 3 233 1 168 1 209 1 287 1 19 2 
62 3 172 1 184 1 96 2 352 1 313 3 229 1 269 4 115 1 314 1 198 1 99 1 126 1 46 1 307 3 24 1 48 1 233 1 110 1 168 1 287 1 19 2 
172 1 62 1 307 1 313 1 125 1 314 1 
62 7 288 1 172 2 254 1 157 1 266 1 125 1 313 6 45 1 269 3 115 2 314 3 331 1 149 1 307 7 69 1 130 1 233 1 361 1 110 2 363 1 
172 1 62 1 339 3 87 1 3 1 313 1 269 1 45 1 314 1 108 1 215 1 318 1 179 2 345 1 346 1 28 1 223 1 93 1 132 4 8 2 185 1 203 1 228 1 304 2 303 2 204 1 281 2 187 2 53 1 140 1 115 1 161 2 230 2 37 1 307 1 260 1 360 1 145 2 192 1 233 1 121 1 123 2 263 1 194 1 195 1 196 2 
312 2 62 1 313 1 65 1 269 2 198 1 126 1 46 1 110 1 74 1 182 1 183 2 136 1 278 1 202 1 184 1 137 1 96 3 352 1 205 2 280 1 229 2 114 1 99 1 101 2 307 1 165 1 19 3 
62 2 172 1 352 1 125 1 313 2 45 1 269 2 115 1 314 2 307 2 69 1 293 1 233 1 
62 4 172 1 97 1 313 4 45 1 269 1 314 1 115 1 218 1 206 1 307 4 110 1 168 1 
62 2 172 1 313 2 269 1 330 1 115 1 314 2 149 1 259 1 307 2 48 1 233 1 363 1 275 1 
172 1 62 1 307 1 26 1 313 1 66 1 110 1 314 1 211 1 128 1 
172 1 62 2 307 2 157 1 313 2 269 1 45 1 314 1 115 1 331 1 56 1 
62 5 172 2 97 1 266 1 313 4 45 1 269 3 115 2 314 2 331 1 218 1 206 1 307 5 130 1 48 1 110 1 
62 5 76 1 172 2 97 1 266 1 313 4 45 1 269 3 115 2 314 2 331 1 218 1 206 1 307 5 48 1 110 1 
62 1 172 1 303 2 3 1 313 1 269 1 115 1 314 1 108 1 318 1 307 1 190 1 233 1 110 1 93 1 263 1 195 1 196 2 
62 1 288 1 172 1 313 1 269 1 115 1 314 2 149 1 307 1 69 1 48 1 233 1 363 1 
268 1 174 1 3 1 213 1 17 1 
136 1 96 2 174 2 268 2 3 1 213 1 175 1 99 1 126 1 231 1 46 1 16 1 5 1 17 2 151 1 153 1 235 1 19 2 240 1 
156 1 303 1 174 1 213 1 17 1 6 1 102 1 263 1 196 1 
213 1 175 1 231 1 
85 1 23 1 265 1 309 1 
85 1 23 1 341 1 238 1 309 1 239 1 36 1 
78 1 341 1 133 1 
85 1 341 3 64 1 289 2 36 1 221 1 23 1 238 1 309 1 239 3 84 1 75 1 
85 1 80 1 23 1 341 2 238 1 309 1 164 1 239 2 36 1 
341 1 66 1 36 1 128 1 25 1 362 1 238 1 309 1 239 1 75 1 31 1 
23 1 341 1 238 1 309 1 239 1 36 1 75 1 
85 1 23 2 341 1 238 1 239 1 36 1 75 1 
341 2 316 1 36 2 57 1 23 1 347 1 238 2 309 1 239 2 75 1 
85 1 341 3 317 1 257 1 36 1 80 2 23 1 362 1 238 1 274 1 309 2 239 3 75 1 
85 1 341 2 305 1 66 1 176 1 36 1 128 2 80 1 23 1 238 1 309 1 211 1 239 2 75 1 31 1 
85 1 341 4 164 1 36 2 109 1 80 2 23 1 362 1 238 2 274 1 309 2 239 4 75 1 
85 1 23 1 341 1 238 1 309 1 239 1 36 1 75 1 
85 2 341 4 64 1 289 1 36 1 232 1 80 2 23 2 362 1 238 1 274 1 309 3 84 1 239 4 
85 1 341 2 36 1 80 1 23 1 72 1 83 1 118 1 238 1 309 1 239 2 75 1 
85 1 341 3 64 1 289 2 36 1 23 1 238 1 224 1 309 1 239 3 84 2 75 1 
241 1 113 1 298 2 309 2 
341 1 160 1 238 1 239 1 36 1 75 1 
85 1 80 1 23 1 341 2 238 1 257 1 309 1 239 2 36 1 75 1 
79 1 
85 1 23 1 341 1 238 1 309 1 239 1 36 1 75 1 
85 1 80 1 23 1 341 3 289 1 238 1 257 1 309 1 239 3 36 1 75 1 
362 1 309 1 274 1 232 1 
23 1 309 1 

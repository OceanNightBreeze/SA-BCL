#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 152 125 230 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 289 204 (87,198) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 289 204 (35,86) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 152 125 230 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 69 2 94 3 71 1 215 1 75 1 97 1 316 1 219 1 79 1 220 1 292 2 81 6 247 9 8 2 184 5 255 1 344 2 345 4 85 2 58 1 326 1 186 2 281 1 90 9 308 1 213 2 91 1 
21 1 69 2 94 3 71 1 215 1 75 1 97 1 316 1 219 1 79 1 220 1 292 2 81 6 247 9 8 2 184 5 255 1 344 2 345 4 85 2 58 1 326 1 186 2 281 1 90 9 308 1 213 2 91 1 
21 1 69 2 94 4 71 1 215 1 75 1 97 1 316 1 219 1 79 1 220 1 292 2 81 7 247 10 8 2 184 6 255 1 344 2 345 5 85 2 58 1 326 1 186 2 281 1 90 10 308 1 213 2 91 1 
21 1 69 2 94 2 71 1 215 1 75 1 97 1 316 1 219 1 79 1 220 1 292 2 81 4 247 7 8 1 184 4 255 1 344 2 345 3 85 2 58 1 326 1 186 2 281 1 90 7 213 2 91 1 
8 2 184 3 21 1 94 1 69 1 215 1 255 1 345 2 85 1 186 1 79 1 281 1 292 1 90 4 81 3 308 1 213 1 247 4 
184 1 21 1 69 1 71 1 255 1 344 1 314 1 270 1 58 1 186 1 79 1 260 1 292 1 90 2 213 1 247 2 
184 2 21 1 94 1 255 1 344 1 345 1 316 1 186 2 79 1 90 3 81 1 213 2 247 3 
21 1 94 3 69 1 215 1 316 1 79 1 220 1 292 1 81 7 247 9 372 1 8 2 184 5 254 1 255 1 345 4 344 1 85 1 186 2 281 1 90 9 213 2 91 1 308 1 
21 1 94 3 69 1 215 1 316 1 79 1 220 1 292 1 81 7 247 9 372 1 8 2 184 5 254 1 255 1 345 4 344 1 85 1 186 2 281 1 90 9 213 2 91 1 308 1 
280 1 117 1 124 1 
280 1 225 2 370 1 
251 1 61 2 170 2 144 2 154 2 56 1 162 2 119 2 
18 1 332 2 357 1 313 1 154 3 119 2 238 1 155 1 223 1 366 2 198 1 98 1 174 1 319 1 272 1 28 1 162 2 7 1 339 1 251 1 227 1 33 1 32 2 275 1 204 1 276 1 56 1 208 2 133 1 61 2 170 3 62 1 211 1 282 1 144 2 194 2 66 1 
61 1 170 1 4 1 192 1 144 1 154 1 56 1 162 1 119 1 102 1 
331 1 150 1 195 1 154 1 256 1 189 1 271 1 170 1 280 1 144 1 192 1 294 1 124 1 267 1 
331 1 150 1 195 1 154 1 256 2 119 1 61 1 271 1 170 1 280 1 144 1 192 1 162 1 294 2 124 1 
263 1 256 1 294 1 37 1 
280 1 161 1 315 1 256 2 294 2 124 1 37 1 83 1 
256 1 294 1 83 1 
20 1 56 1 154 1 256 1 119 1 37 1 61 1 170 1 4 1 192 1 144 1 294 1 162 1 102 1 
280 1 
303 1 280 1 161 1 256 2 294 2 124 1 37 1 83 1 
286 1 196 1 84 1 57 1 132 1 256 5 78 1 37 2 350 2 280 1 190 1 337 1 14 1 161 1 29 2 294 5 124 1 250 2 83 2 
251 1 117 1 
251 2 287 1 154 2 119 1 61 1 170 2 144 2 162 1 181 1 
122 1 212 1 302 1 
251 1 227 1 32 1 332 1 357 1 204 1 154 1 238 1 109 1 208 1 198 1 170 1 98 1 62 1 211 1 66 1 
251 1 61 3 170 3 144 3 154 3 119 1 162 3 307 1 
61 1 170 1 192 1 144 1 154 1 162 1 102 1 
61 1 170 1 192 1 144 1 287 1 154 1 162 1 119 1 181 1 
18 1 331 1 150 1 332 1 357 1 195 1 313 1 287 1 154 4 238 1 119 2 155 1 223 1 366 1 198 1 271 1 98 1 174 1 319 1 272 1 162 3 294 1 7 1 251 1 227 1 127 1 32 1 204 1 56 1 256 1 133 1 208 1 379 1 61 3 170 4 62 1 211 1 282 1 144 3 192 1 193 1 307 1 194 2 66 1 
251 1 189 1 61 1 170 2 144 2 154 2 162 1 307 1 23 1 
127 1 164 1 150 1 331 1 195 1 287 1 154 3 119 1 256 1 61 3 271 1 170 3 280 1 192 1 144 3 193 1 294 1 162 3 307 2 
287 1 154 2 119 1 302 1 61 2 170 2 144 2 212 1 162 2 307 1 
251 1 227 1 32 1 332 1 357 1 204 1 154 1 238 1 208 1 198 1 170 1 98 1 62 1 211 1 66 1 
251 1 227 1 32 1 332 1 204 1 312 1 154 1 238 1 86 1 208 1 170 1 98 1 62 1 211 1 66 1 
18 1 313 2 362 1 155 1 1 1 51 1 366 4 174 1 272 1 122 2 246 1 7 1 373 1 275 2 376 1 108 1 257 1 302 2 262 1 234 1 282 1 212 2 265 1 194 2 
331 1 154 1 61 1 336 1 170 1 144 1 192 1 162 1 
227 1 127 1 32 1 332 1 204 1 357 1 154 2 238 1 302 1 208 1 61 1 198 1 170 2 98 1 62 1 211 1 144 1 162 1 307 1 66 1 
251 1 127 1 343 1 287 1 154 5 119 1 187 1 23 1 189 1 61 4 170 5 144 5 162 4 307 2 
61 2 336 1 170 2 192 1 144 2 154 2 162 2 102 1 
128 1 141 1 
128 1 141 1 
261 1 77 1 
261 1 77 1 
261 1 77 1 
128 1 141 1 209 1 
128 1 141 1 209 1 
128 1 141 1 321 1 
261 1 128 2 243 1 141 2 77 1 347 1 
128 1 141 1 209 1 
199 1 128 1 141 1 
199 1 128 1 141 1 
199 1 128 1 141 1 
92 2 20 1 154 1 119 1 291 1 176 1 4 1 367 1 273 1 162 1 100 1 294 2 53 2 102 1 341 2 128 2 228 2 277 1 56 1 256 2 135 1 61 1 170 1 280 1 141 2 192 1 144 1 42 1 283 1 266 1 67 2 
92 1 360 1 154 2 237 1 335 1 52 1 162 2 294 1 321 1 53 1 251 1 341 1 128 1 228 1 256 1 232 1 61 2 170 2 141 1 144 2 304 1 283 1 382 1 67 1 
69 1 292 1 85 1 
69 1 292 1 314 1 
292 3 146 1 160 1 314 1 85 2 103 1 
292 2 146 1 314 1 85 1 188 1 103 1 
292 2 146 2 314 1 85 1 103 1 
362 1 196 3 78 1 335 1 241 1 225 3 26 2 370 1 52 1 29 1 161 1 338 1 294 5 124 1 250 1 83 1 373 1 57 2 256 5 301 1 37 4 350 1 280 2 262 1 40 2 304 1 145 1 264 1 265 1 15 2 268 1 214 1 
358 1 201 1 299 1 256 1 294 1 37 1 
196 3 362 1 335 1 241 1 225 4 26 1 370 2 29 1 294 3 124 1 250 1 373 1 256 3 57 2 37 2 350 1 280 3 262 1 14 1 40 2 145 1 264 1 265 1 268 1 15 2 214 1 
149 1 196 5 362 2 335 2 241 1 225 7 26 2 370 3 29 1 294 4 124 1 250 1 322 1 373 2 34 1 256 4 57 4 37 3 350 1 280 4 262 2 14 1 40 4 145 1 264 1 265 2 15 4 268 1 214 2 
165 1 117 1 211 1 
211 1 249 1 
143 1 
227 1 211 1 
227 1 351 1 165 2 62 1 211 3 65 1 
227 1 62 1 211 1 
211 1 221 1 
31 1 373 1 105 2 275 4 297 1 313 3 362 1 218 1 59 1 257 3 108 2 50 1 364 1 169 1 366 7 82 1 295 1 
31 1 373 1 105 2 275 4 297 1 313 3 362 1 218 1 59 1 257 3 108 2 50 1 364 1 169 1 366 7 82 1 295 1 
31 1 373 1 105 2 275 4 297 1 313 3 362 1 218 1 59 1 257 3 108 2 50 1 364 1 169 1 366 7 179 1 82 1 295 1 
313 15 48 1 218 1 362 4 317 3 120 1 50 1 155 1 364 2 366 31 224 1 174 1 178 1 272 1 82 2 295 2 31 1 340 4 105 3 373 4 275 16 297 2 59 5 257 10 108 5 378 1 169 1 262 3 282 1 265 3 194 2 329 1 214 3 355 1 
269 1 313 4 362 1 218 1 155 2 50 1 364 1 366 9 174 2 178 1 272 2 82 1 295 1 31 1 373 1 105 2 275 5 297 1 108 3 257 4 59 1 279 1 282 2 194 4 
332 1 21 1 69 1 314 1 238 1 79 1 292 2 81 1 160 1 247 2 30 1 6 1 274 1 184 1 32 1 130 1 255 1 229 1 344 1 11 1 85 1 186 1 208 1 134 1 112 1 13 1 114 1 90 2 213 1 66 1 
332 1 21 1 69 1 359 1 314 1 238 1 79 1 292 2 81 2 160 1 247 3 30 1 6 1 274 1 183 1 296 1 184 1 32 1 229 1 344 1 85 1 186 1 208 1 134 1 112 1 13 1 114 1 90 3 213 1 66 1 
332 1 21 1 69 1 359 1 314 1 238 1 79 1 292 2 81 2 160 1 247 2 6 1 274 1 296 1 184 1 32 1 344 1 85 1 208 1 134 1 112 1 13 1 114 1 90 2 66 1 
183 1 274 2 227 1 32 1 332 1 375 1 344 2 238 1 186 1 208 1 156 1 134 2 328 1 98 1 211 1 381 1 5 1 90 1 114 2 180 1 213 1 247 1 66 1 
332 1 69 1 314 1 238 1 292 2 160 1 247 1 30 1 6 1 274 1 296 1 32 1 255 1 229 1 344 1 11 1 85 1 186 1 208 1 134 1 112 1 13 1 114 1 90 1 213 1 66 1 
60 1 
332 2 196 2 238 1 241 1 98 2 161 3 294 4 250 1 163 1 167 1 57 2 256 4 168 2 208 2 113 1 350 1 211 1 66 1 356 2 116 1 171 2 363 2 121 1 78 1 365 1 177 1 225 2 370 2 29 1 27 2 123 1 83 6 227 1 32 2 374 2 231 1 233 1 328 1 280 1 381 1 88 1 43 2 45 1 148 2 
167 1 256 2 365 1 231 1 303 1 88 1 161 1 27 1 294 2 123 1 83 2 
356 1 374 1 167 1 88 1 123 1 256 1 294 1 231 1 365 1 
356 1 171 1 167 1 374 1 256 2 365 1 231 1 303 1 88 1 161 1 27 1 294 2 123 1 83 2 
47 1 196 1 154 1 157 1 4 1 161 3 294 4 162 1 102 1 250 1 167 1 56 1 256 4 57 1 168 2 61 1 303 1 170 1 350 1 356 3 20 1 116 1 171 4 119 1 363 2 78 1 365 1 318 1 370 2 29 1 27 4 123 1 124 2 83 7 185 1 374 3 231 1 280 2 191 1 192 1 144 1 88 1 43 2 45 1 148 2 
356 2 171 2 116 1 196 1 363 2 365 1 78 1 225 2 370 2 27 2 161 2 29 1 123 1 294 3 124 1 250 1 83 4 374 2 167 1 256 3 57 1 168 2 231 1 233 1 350 1 280 2 88 1 43 2 45 1 148 2 
356 2 47 1 171 2 116 1 196 1 363 2 78 1 365 1 318 1 157 1 370 2 27 2 161 2 29 1 123 1 294 3 124 1 250 1 83 4 374 2 167 1 256 3 57 1 168 2 231 1 350 1 280 1 88 1 43 2 45 1 148 2 
356 2 47 1 171 2 116 1 196 1 363 2 78 1 365 1 318 1 157 1 370 2 27 2 161 2 29 1 123 1 294 3 124 1 250 1 83 4 374 2 167 1 256 3 57 1 168 2 231 1 350 1 280 1 88 1 43 2 45 1 148 2 
46 1 356 2 171 2 151 2 196 1 49 1 363 2 78 1 365 1 318 1 225 2 27 2 161 2 293 2 29 1 123 1 294 3 124 1 250 1 83 4 374 2 167 1 131 1 256 3 57 1 168 2 231 1 350 1 280 1 88 1 45 1 
356 3 47 1 171 3 116 1 196 1 363 2 365 1 78 1 318 1 157 1 370 2 161 2 27 3 29 1 123 1 294 3 124 1 250 1 83 5 374 3 167 1 256 3 57 1 168 2 231 1 350 1 280 1 191 1 88 1 43 2 45 1 148 2 
356 3 47 1 171 3 116 1 196 1 363 2 365 1 78 1 318 1 157 1 370 2 161 2 27 3 29 1 123 1 294 3 124 1 250 1 83 5 374 3 167 1 256 3 57 1 168 2 231 1 350 1 280 1 191 1 88 1 43 2 45 1 148 2 
46 1 356 2 171 2 151 2 196 1 363 2 365 1 78 1 225 2 27 2 161 2 29 1 293 2 123 1 294 3 124 1 250 1 83 4 374 2 167 1 256 3 57 1 168 2 231 1 233 1 350 1 280 1 88 1 45 1 
251 2 31 1 18 1 105 1 373 1 275 3 117 1 297 1 313 3 376 1 362 1 218 1 257 2 108 2 155 1 50 1 302 1 366 6 174 1 272 1 122 1 282 1 212 1 194 2 82 1 7 1 
18 2 313 6 288 1 362 2 120 1 317 3 155 2 223 1 366 14 224 1 174 2 272 2 122 11 7 1 251 1 340 3 33 1 373 1 275 8 298 1 300 1 59 1 257 2 108 1 302 11 38 1 262 1 282 2 89 1 212 4 265 2 194 4 214 2 
18 1 332 1 357 1 313 1 154 2 238 1 155 1 223 1 366 2 198 1 98 1 174 1 272 1 162 1 7 1 251 1 227 1 127 1 32 1 33 1 204 1 275 1 109 1 208 1 327 1 61 1 38 1 170 2 39 1 62 1 211 1 282 1 144 1 212 1 307 1 66 1 194 2 17 1 
332 3 154 3 238 2 50 1 155 3 2 1 198 2 98 1 244 2 162 1 54 1 104 1 7 3 251 2 296 1 105 1 204 2 297 1 108 4 59 4 257 8 208 3 302 7 61 1 259 2 170 3 62 2 211 2 262 2 212 7 265 2 307 1 66 2 214 2 18 3 357 2 313 10 218 1 362 3 223 1 366 20 174 3 272 3 122 7 82 1 31 1 127 1 227 2 33 1 373 3 32 3 275 10 325 2 133 2 38 1 380 2 282 3 144 1 194 6 
18 2 332 6 95 1 152 1 313 1 154 1 238 2 155 2 223 1 366 2 98 2 174 2 272 2 162 1 7 2 339 1 125 1 296 1 227 2 32 6 33 1 275 1 130 1 166 1 376 1 230 1 208 5 12 1 349 1 61 1 328 1 170 1 211 3 282 2 381 1 144 1 307 1 66 2 194 4 
18 1 73 1 313 2 287 1 362 1 154 1 119 1 155 1 366 3 174 1 272 1 122 1 162 1 7 1 373 1 275 1 257 1 108 1 302 1 61 1 38 1 170 1 262 1 282 1 144 1 212 1 265 1 194 2 214 1 
18 1 275 2 376 1 362 1 257 1 59 1 155 1 302 1 366 2 174 1 272 1 122 1 282 1 212 1 246 1 265 1 194 2 7 1 
18 1 373 1 313 2 376 1 257 1 108 1 155 1 302 1 366 2 51 1 174 1 262 1 272 1 122 1 282 1 212 1 194 2 7 1 
18 1 313 2 362 1 155 1 366 4 174 1 272 1 122 2 7 1 373 1 275 2 376 1 59 1 257 2 108 1 302 2 262 1 282 1 212 2 265 1 214 1 194 2 
18 1 275 2 362 1 257 1 59 1 155 1 302 1 12 1 366 2 174 1 272 1 122 1 282 1 212 1 246 1 265 1 194 2 7 1 
18 1 373 1 313 2 257 1 108 1 155 1 302 1 12 1 366 2 51 1 174 1 262 1 272 1 122 1 282 1 212 1 194 2 7 1 
18 1 313 2 362 1 155 1 366 4 174 1 272 1 122 2 7 1 373 1 275 2 59 1 257 2 108 1 12 1 302 2 262 1 282 1 212 2 265 1 214 1 194 2 
18 1 313 2 362 1 155 1 366 4 174 1 272 1 122 2 7 1 373 1 275 2 59 1 257 2 108 1 302 2 262 1 282 1 212 2 265 1 214 1 194 2 
18 1 332 1 357 1 313 1 154 1 238 1 155 1 223 1 366 2 198 1 98 1 174 1 272 1 7 1 251 1 227 1 33 1 32 1 275 1 204 1 133 1 208 1 170 1 62 1 211 1 282 1 66 1 194 2 
18 1 332 1 312 1 313 1 154 1 238 1 155 1 223 1 366 2 98 1 174 1 272 1 7 1 251 1 227 1 33 1 32 1 275 1 204 1 86 1 208 1 348 1 170 1 62 1 211 1 282 1 66 1 194 2 
18 1 313 2 362 1 155 1 366 4 174 1 272 1 122 2 7 1 373 1 275 2 59 1 257 2 108 1 302 2 38 1 262 1 282 1 212 2 265 1 214 1 194 2 
18 1 332 1 357 1 313 2 362 1 154 1 238 1 155 1 366 4 198 1 174 1 272 1 122 2 7 1 227 1 373 1 32 1 275 2 204 1 130 1 108 1 257 2 59 1 302 2 133 1 208 1 259 1 170 1 62 1 262 1 211 1 282 1 212 2 265 1 66 1 194 2 214 1 
18 1 313 1 287 1 362 1 154 1 119 1 155 1 366 3 174 1 272 1 122 1 162 1 7 1 373 1 275 2 257 1 59 1 302 1 61 1 139 1 38 1 170 1 262 1 282 1 144 1 212 1 265 1 194 2 214 1 
311 1 236 1 313 10 362 3 120 1 317 1 155 2 197 1 366 19 224 1 174 2 24 1 272 2 340 2 252 1 373 3 323 1 275 9 108 3 59 3 257 6 377 1 279 1 136 2 262 3 282 2 354 2 265 3 194 4 214 3 
311 1 93 1 236 2 313 12 362 3 120 2 317 2 155 3 197 1 366 26 174 3 178 2 272 3 320 1 340 2 373 2 252 2 275 14 59 2 257 4 108 2 207 1 377 1 279 1 136 1 262 2 282 3 142 1 353 1 354 4 265 3 194 6 214 3 383 1 
93 1 236 1 155 3 50 1 197 1 340 4 252 2 105 1 297 1 257 8 59 4 108 4 207 1 262 4 353 1 354 4 265 4 214 4 311 1 313 21 362 5 218 1 317 3 120 3 366 41 224 1 174 3 178 1 272 3 320 1 82 1 31 1 373 5 275 20 323 1 377 1 279 1 136 1 282 3 142 1 41 1 194 6 383 1 
93 1 311 1 236 1 313 18 218 1 362 5 120 3 317 3 50 1 155 4 197 1 366 38 224 1 174 4 178 2 272 4 320 1 82 1 31 1 340 4 105 1 252 2 373 4 323 1 275 20 297 1 108 4 59 3 257 7 207 1 377 1 279 1 136 1 262 3 142 1 282 4 41 1 353 1 354 4 265 4 194 8 214 4 383 1 
93 1 311 1 236 1 313 25 218 1 362 8 120 2 317 4 50 1 155 2 197 1 366 52 224 2 174 2 178 1 272 2 320 1 82 1 31 1 340 4 105 1 252 1 373 8 275 27 297 1 108 7 59 7 257 14 207 1 377 1 279 1 136 1 262 7 142 1 282 2 353 1 89 2 354 4 265 7 194 4 214 7 383 1 
341 1 128 1 228 1 22 1 176 1 367 1 141 1 273 1 42 1 53 1 67 1 
321 1 232 1 
341 1 128 1 242 1 141 1 228 1 361 1 96 1 53 1 67 1 
92 2 20 1 154 1 119 1 291 1 176 1 4 1 367 1 273 1 162 1 100 1 294 1 53 1 102 1 341 1 128 1 228 1 277 1 56 1 256 1 135 1 61 1 170 1 280 1 141 1 192 1 144 1 42 1 283 1 266 1 67 1 
92 2 20 1 154 1 119 1 291 1 176 1 4 1 367 1 273 1 162 1 100 1 294 1 53 1 102 1 341 1 128 1 228 1 277 1 56 1 256 1 135 1 61 1 170 1 280 1 141 1 192 1 144 1 42 1 283 1 266 1 67 1 
92 2 20 1 154 1 119 1 291 1 176 1 4 1 367 1 273 1 162 1 100 1 294 1 53 1 102 1 341 1 128 1 228 1 277 1 56 1 256 1 135 1 61 1 170 1 280 1 141 1 192 1 144 1 42 1 283 1 266 1 67 1 
0 1 243 1 209 1 
0 1 243 1 209 1 
199 1 118 1 
199 1 243 1 118 1 
360 1 382 1 
92 1 360 1 154 2 237 1 335 1 52 1 100 1 294 1 321 1 162 2 53 1 251 1 341 1 128 1 228 1 277 1 256 1 110 1 37 1 232 1 61 2 170 2 141 1 304 1 144 2 382 1 67 1 
0 1 209 1 
199 1 243 1 118 1 
18 1 332 2 152 1 313 1 154 2 238 1 155 1 223 1 366 2 174 1 272 1 7 1 339 2 227 1 32 2 129 1 33 1 275 1 166 1 205 1 10 1 346 1 208 2 38 1 170 2 211 1 63 1 282 1 144 2 66 1 194 2 
296 1 126 1 32 2 332 2 69 1 130 1 229 1 314 1 85 1 238 1 208 2 134 1 112 1 292 2 160 1 305 1 66 1 6 1 226 1 
296 1 126 1 32 1 332 1 69 1 229 1 314 1 85 1 238 1 208 1 134 1 112 1 292 2 158 1 160 1 66 1 6 1 
227 1 32 1 332 1 253 1 238 1 208 1 134 1 328 1 98 1 211 1 381 1 180 1 66 1 226 1 
296 1 126 1 32 1 332 1 69 1 229 1 314 1 85 1 238 1 208 1 134 1 112 1 292 2 160 1 305 1 66 1 6 1 226 1 
342 1 
280 1 337 1 117 1 196 1 57 1 132 1 124 1 
116 1 196 1 256 1 57 1 78 1 350 1 280 2 225 1 370 1 161 1 29 1 43 1 294 1 124 1 250 1 83 1 148 1 
332 3 150 2 153 1 196 9 289 2 238 4 241 2 98 1 337 1 202 1 244 2 245 2 161 3 99 2 294 5 249 3 250 4 165 2 106 2 256 5 57 8 208 3 350 4 351 1 62 3 211 10 262 2 265 2 15 6 66 3 214 2 70 1 72 1 362 2 172 2 121 1 78 4 80 2 221 2 225 12 370 6 29 4 124 2 371 1 83 5 227 3 32 3 373 2 130 1 132 1 36 2 87 2 280 8 40 6 
93 1 74 1 196 8 362 2 120 1 317 1 121 1 78 2 241 1 225 6 370 3 245 2 99 1 161 1 29 2 294 1 124 2 250 2 83 1 340 1 373 2 256 1 57 5 207 1 350 2 280 5 210 1 262 2 40 5 142 1 353 1 265 2 15 5 214 2 383 1 
20 1 218 1 362 2 196 2 154 1 119 1 78 1 157 1 4 1 245 2 99 1 29 1 294 1 162 1 102 1 250 1 82 1 373 1 297 1 56 1 256 1 57 2 61 1 170 1 350 1 192 1 144 1 330 1 
350 1 280 1 337 1 196 1 29 1 57 1 132 1 124 1 250 1 78 1 
373 2 362 2 196 5 57 5 280 5 225 10 262 2 40 5 244 1 370 5 245 2 99 1 265 2 15 5 214 2 
280 1 161 1 256 1 294 1 124 1 83 1 
310 1 332 4 70 2 72 1 196 2 238 1 78 1 121 2 98 2 241 2 177 1 29 2 161 2 294 3 250 2 83 4 227 1 32 4 57 2 256 3 208 4 328 1 113 1 350 2 14 1 211 1 381 1 309 1 66 1 
18 1 332 1 357 1 313 1 154 3 119 2 238 1 155 1 223 1 366 1 198 1 98 1 174 1 319 1 272 1 162 2 7 1 251 1 227 1 32 1 204 1 56 1 208 1 133 1 61 2 170 3 62 1 211 1 282 1 144 2 194 2 66 1 
105 1 196 1 57 2 78 1 121 1 350 1 241 1 280 4 225 4 40 2 370 2 29 1 15 2 124 2 250 1 
341 1 25 1 67 1 
341 1 25 1 67 1 
341 1 68 1 324 1 360 1 67 1 
341 1 25 1 67 1 
341 1 285 1 67 1 
341 1 285 1 67 1 
341 1 285 1 67 1 
341 1 67 1 
128 1 141 1 
31 1 105 1 373 1 275 4 297 1 313 4 362 1 218 1 59 1 257 3 108 2 155 2 50 1 366 8 174 2 178 1 272 2 282 2 194 4 82 1 
31 1 105 1 373 1 275 3 117 1 297 1 313 3 218 1 362 1 108 2 257 2 50 1 366 6 82 1 
373 1 275 2 313 2 362 1 108 1 257 2 59 1 155 1 290 1 366 4 174 1 262 1 272 1 282 1 265 1 194 2 214 1 
340 2 373 1 275 3 313 4 362 1 108 1 120 1 317 1 59 1 257 2 366 7 224 1 262 1 265 1 214 1 
313 12 218 1 362 3 317 2 50 1 155 2 366 23 224 1 174 2 178 2 272 2 159 1 82 2 31 1 340 2 105 1 373 3 275 11 297 2 298 1 257 9 59 4 108 5 262 2 282 2 89 1 265 2 214 2 194 4 
366 1 340 1 313 1 
366 1 275 1 317 1 
373 1 275 3 313 3 362 1 59 1 257 3 108 2 155 1 290 1 366 6 174 1 262 1 272 1 282 1 244 1 265 1 194 2 214 1 
93 1 313 6 362 2 317 1 120 1 155 1 366 12 174 1 272 1 340 1 373 2 275 6 59 1 108 1 257 2 207 1 279 1 262 2 142 1 282 1 353 1 265 2 194 2 214 2 383 1 
373 1 275 3 297 1 313 3 218 1 362 1 108 1 257 2 59 1 366 6 82 1 
31 1 275 1 297 1 313 2 59 1 257 2 108 1 50 1 155 1 366 3 174 1 178 1 272 1 282 1 159 1 194 2 82 1 
373 2 275 5 297 2 313 5 218 1 362 2 108 3 257 5 59 2 155 1 279 1 366 10 174 1 272 1 282 1 194 2 330 1 82 2 
275 2 362 1 59 1 257 1 155 1 279 1 366 2 174 1 272 1 282 1 265 1 194 2 
373 1 275 2 313 2 362 1 108 1 257 2 59 1 155 1 279 1 366 4 174 1 262 1 272 1 282 1 265 1 194 2 214 1 
323 1 275 1 297 1 313 2 108 1 257 2 59 1 155 3 279 1 366 3 174 3 178 1 272 3 282 3 159 1 194 6 82 1 
313 18 48 1 218 2 362 5 120 1 317 3 50 1 155 5 290 1 366 34 224 1 174 5 178 2 272 5 159 1 82 3 31 1 340 4 105 1 373 5 323 1 275 16 297 3 59 5 257 12 108 7 378 1 279 1 262 3 282 5 265 3 329 1 194 10 214 3 
313 4 362 1 218 1 317 1 120 1 155 1 50 1 366 8 174 1 272 1 82 1 340 1 31 1 105 1 373 1 275 4 297 1 108 2 257 2 279 1 142 1 282 1 194 2 
313 5 218 1 362 2 120 1 317 1 50 1 155 2 366 11 290 1 224 1 174 2 272 2 82 1 31 1 340 2 105 1 373 1 275 6 297 1 108 2 59 1 257 3 279 1 142 1 282 2 265 1 194 4 214 1 
93 1 313 10 218 1 362 3 317 1 120 1 50 1 155 3 290 1 366 19 174 3 178 1 272 3 82 1 31 1 340 1 105 1 373 3 275 9 297 1 59 1 108 3 257 4 207 1 279 1 262 2 142 1 282 3 353 1 265 2 194 6 214 2 383 1 
93 1 313 7 218 1 362 3 317 1 120 1 50 1 155 3 290 1 366 17 174 3 178 1 272 3 82 1 31 1 340 1 105 1 373 2 275 10 297 1 59 2 108 3 257 5 207 1 279 1 262 1 142 1 282 3 353 1 265 2 194 6 214 2 383 1 
313 4 362 1 218 1 317 1 120 1 155 1 50 1 366 8 174 1 272 1 82 1 340 1 31 1 105 1 373 1 275 4 297 1 108 2 257 2 279 1 142 1 282 1 194 2 
93 1 313 6 362 2 317 1 120 1 155 1 366 12 174 1 272 1 340 1 373 2 275 6 59 1 108 1 257 2 207 1 279 1 262 2 142 1 282 1 353 1 265 2 194 2 214 2 383 1 
93 1 313 8 218 1 362 3 120 1 317 1 50 1 155 4 366 18 290 1 174 4 178 2 272 4 82 1 31 1 340 1 105 1 373 2 275 10 297 1 59 2 108 3 257 5 207 1 279 1 262 1 142 1 282 4 353 1 265 2 194 8 214 2 383 1 
93 1 313 7 362 3 120 1 317 1 155 4 366 16 174 4 178 2 272 4 340 1 373 2 323 1 275 9 59 3 108 3 257 6 207 1 279 1 262 2 142 1 282 4 353 1 265 3 194 8 214 3 383 1 
31 1 373 1 275 3 297 3 313 4 218 1 362 1 108 3 257 6 59 3 50 2 366 7 82 3 
93 1 313 8 218 1 362 3 120 1 317 1 50 1 155 4 366 18 174 4 178 2 272 4 82 1 31 1 340 1 105 1 373 2 323 1 275 10 297 1 59 1 108 3 257 4 207 1 279 1 262 1 142 1 282 4 353 1 265 2 194 8 214 2 383 1 
251 1 189 1 170 1 144 1 154 1 239 1 23 1 
251 1 76 1 154 1 239 1 23 1 189 1 170 1 140 1 352 1 144 1 101 1 306 1 
227 1 328 1 332 1 32 1 98 1 117 1 211 1 381 1 238 1 66 1 208 1 
251 1 227 1 32 1 332 1 204 1 154 2 238 1 208 1 61 1 198 1 170 2 98 1 62 1 211 1 144 1 162 1 307 1 66 1 
227 2 32 1 332 1 204 1 70 1 289 1 154 1 238 1 221 1 208 1 61 1 198 1 170 1 62 2 211 3 144 1 162 1 307 1 66 1 
227 2 32 1 332 1 204 1 70 1 289 1 154 1 238 1 86 1 221 1 208 1 61 1 170 1 62 2 211 3 144 1 162 1 307 1 66 1 
332 3 150 1 70 1 217 1 289 1 238 1 221 1 98 1 294 2 124 1 249 1 83 1 227 1 32 3 165 1 35 1 256 2 111 1 208 3 280 1 62 1 211 4 66 1 
227 1 150 1 32 3 332 3 70 1 165 1 289 1 238 1 256 2 111 1 221 1 208 3 98 1 280 1 87 1 62 1 211 4 294 2 124 1 249 1 66 1 83 1 
349 1 
125 1 296 1 227 2 32 5 332 5 95 1 130 1 152 1 230 1 238 3 208 4 349 1 98 2 351 1 3 1 62 1 211 3 235 1 66 2 203 1 
18 2 332 1 357 1 313 3 362 1 218 1 154 2 238 1 50 1 155 2 366 6 198 1 174 2 272 2 122 1 162 1 82 1 7 2 251 2 31 1 227 1 105 1 373 1 32 1 275 3 204 1 297 1 130 1 325 1 257 2 108 2 346 1 302 1 208 1 133 1 61 1 259 1 38 1 170 2 62 1 211 1 282 2 144 1 212 1 307 1 66 1 194 4 
332 1 150 1 72 1 196 1 172 1 78 2 80 1 98 1 337 1 29 2 161 1 294 3 124 1 250 2 249 1 83 2 32 1 165 1 57 1 132 1 256 3 208 1 37 1 36 1 350 2 280 1 87 1 211 2 
349 1 
227 1 32 4 332 4 130 1 238 1 111 1 208 4 258 1 328 1 98 1 211 1 381 1 66 1 
227 1 32 2 332 2 70 1 238 2 208 2 138 1 3 1 175 1 62 1 211 1 66 1 54 1 203 1 
112 1 332 1 32 1 98 1 69 1 292 1 314 1 238 1 66 1 208 1 
296 1 227 1 32 2 332 2 130 1 152 1 205 1 238 1 208 2 211 1 66 1 
125 1 227 2 32 5 332 5 70 1 95 1 130 1 152 1 238 2 208 4 258 1 328 1 98 1 211 3 381 1 66 2 
227 2 32 5 332 5 70 1 95 1 130 1 152 1 238 2 208 4 258 1 328 1 98 1 240 1 211 3 381 1 66 2 
251 1 227 1 32 1 332 1 204 1 154 2 238 1 86 1 208 1 61 1 170 2 98 1 62 1 211 1 144 1 162 1 307 1 66 1 
227 1 32 1 332 1 70 1 238 2 208 1 351 1 3 1 62 1 211 1 235 1 66 1 203 1 
170 1 129 1 200 1 368 1 63 1 144 1 154 1 10 1 64 1 
200 1 333 1 334 1 
251 1 200 1 368 1 64 1 173 1 
251 1 150 1 331 1 195 1 333 1 334 1 256 2 37 1 173 2 271 1 280 1 200 1 368 2 192 1 193 1 294 2 64 2 124 1 182 1 
184 1 21 1 117 1 79 1 
184 1 21 1 90 1 247 1 213 1 186 1 79 1 
344 1 114 1 90 1 
184 1 21 1 9 1 255 1 58 2 186 1 79 1 90 3 213 1 247 3 248 1 16 1 
8 1 184 1 21 1 81 1 90 2 247 2 213 1 186 1 79 1 
184 1 69 1 281 1 292 1 255 1 345 1 90 1 85 1 247 1 213 1 186 1 
184 1 255 1 90 1 247 1 213 1 186 1 79 1 
21 1 255 1 90 1 247 1 213 1 186 1 79 2 
184 1 255 1 186 2 79 1 137 1 90 2 284 1 213 2 247 2 115 1 
184 2 21 1 94 1 255 1 345 1 186 1 79 1 220 1 90 3 81 2 213 1 247 3 91 1 
184 1 21 1 69 1 255 1 206 1 314 1 85 1 186 1 79 1 292 2 90 2 81 1 160 1 213 1 247 2 
8 1 184 2 21 1 94 1 255 1 345 1 186 2 79 1 90 4 81 2 213 2 247 4 308 1 
184 1 21 1 255 1 90 1 247 1 213 1 186 1 79 1 
184 3 21 2 94 1 9 1 345 1 58 1 186 1 79 2 369 1 81 2 90 4 248 1 247 4 213 1 
184 1 19 1 21 1 254 1 216 1 255 1 186 1 79 1 90 2 81 1 213 1 247 2 
184 1 21 1 9 1 255 1 90 3 107 1 58 2 248 2 247 3 213 1 186 1 79 1 
184 2 55 1 147 2 222 1 
255 1 90 1 247 1 213 1 186 1 44 1 
184 1 21 1 255 1 81 1 90 2 91 1 247 2 213 1 186 1 79 1 
278 1 
184 1 21 1 255 1 90 1 247 1 213 1 186 1 79 1 
184 1 21 1 255 1 58 1 186 1 79 1 81 1 90 3 213 1 247 3 91 1 
184 1 94 1 369 1 345 1 
184 1 79 1 

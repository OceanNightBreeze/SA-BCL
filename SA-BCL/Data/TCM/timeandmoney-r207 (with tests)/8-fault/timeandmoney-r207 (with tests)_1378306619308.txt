#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (176,255) (103,296) (103,296) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 33 368 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 242 81 188 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 242 81 188 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 242 81 188 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 242 81 188 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 242 81 188 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (176,255) (176,255) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 33 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (176,255) (103,296) (103,296) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (176,255) (103,296) (103,296) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (176,255) (103,296) (103,296) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 33 368 286 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 3 253 2 280 1 25 2 232 2 27 9 26 1 199 2 91 1 260 9 311 2 161 1 240 1 31 1 32 5 124 4 102 1 365 1 148 1 275 6 38 1 221 1 194 1 193 1 299 1 224 2 173 1 83 2 
85 3 280 1 253 2 25 2 232 2 27 9 26 1 199 2 91 1 260 9 311 2 161 1 240 1 31 1 32 5 124 4 102 1 365 1 148 1 275 6 38 1 221 1 194 1 193 1 299 1 224 2 173 1 83 2 
85 4 280 1 253 2 25 2 232 2 27 10 26 1 199 2 91 1 260 10 311 2 161 1 240 1 31 1 32 6 124 5 102 1 365 1 148 1 275 7 38 1 221 1 194 1 193 1 299 1 224 2 173 1 83 2 
85 2 280 1 253 1 25 2 232 2 27 7 26 1 199 2 91 1 260 7 311 2 161 1 240 1 32 4 124 3 102 1 365 1 148 1 275 4 38 1 221 1 194 1 193 1 299 1 224 2 173 1 83 2 
85 1 31 1 253 2 32 3 232 1 124 2 27 4 199 1 275 3 38 1 221 1 260 4 193 1 311 1 224 1 173 1 83 1 240 1 
32 1 146 1 232 1 25 1 345 1 27 2 38 1 260 2 183 1 194 1 224 1 311 1 173 1 161 1 83 1 240 1 
85 1 32 2 232 2 25 1 124 1 27 3 91 1 275 1 38 1 260 3 224 2 173 1 240 1 
85 3 253 2 25 1 232 2 27 9 26 1 199 1 115 1 91 1 203 1 260 9 311 1 240 1 31 1 32 5 124 4 148 1 275 7 38 1 221 1 193 1 224 2 173 1 83 1 
85 3 253 2 25 1 232 2 27 9 26 1 199 1 115 1 91 1 203 1 260 9 311 1 240 1 31 1 32 5 124 4 148 1 275 7 38 1 221 1 193 1 224 2 173 1 83 1 
5 1 50 1 306 1 
87 1 106 2 306 1 
297 1 120 2 323 2 357 2 21 2 270 2 271 2 272 1 
41 2 111 1 229 1 197 2 88 1 136 1 351 1 353 1 205 1 142 1 206 1 159 1 144 1 356 1 357 3 261 1 288 1 208 1 120 2 99 2 266 1 165 1 269 1 270 2 271 3 272 1 336 1 77 1 191 1 297 1 19 2 218 1 323 2 220 1 21 2 324 2 22 1 
120 1 186 1 323 1 357 1 21 1 270 1 8 1 71 1 271 1 272 1 
0 1 62 1 212 1 342 1 306 1 271 1 5 1 44 1 21 1 357 1 172 1 330 1 8 1 325 1 
120 1 62 2 342 1 306 1 270 1 271 1 5 1 44 2 323 1 21 1 357 1 172 1 330 1 8 1 325 1 
44 1 152 1 62 1 254 1 74 1 
5 1 44 2 152 1 273 1 62 2 12 1 74 1 306 1 
44 1 152 1 62 1 
42 1 62 1 120 1 186 1 74 1 270 1 271 1 272 1 44 1 323 1 21 1 357 1 8 1 71 1 
306 1 
5 1 44 2 152 1 62 2 12 1 74 1 108 1 306 1 
23 1 362 1 62 5 12 1 74 2 100 2 306 1 366 1 65 1 5 1 44 5 67 2 249 1 152 2 180 1 170 1 29 1 223 2 39 1 
297 1 50 1 
120 1 256 1 270 1 271 2 297 2 323 1 118 1 21 2 357 2 
110 1 164 1 51 1 
111 1 229 1 99 1 88 1 269 1 271 1 77 1 297 1 19 1 218 1 357 1 144 1 143 1 356 1 324 1 22 1 
111 1 229 1 88 1 99 1 269 1 270 1 271 2 348 1 77 1 19 1 218 1 323 1 144 1 356 1 21 1 357 2 324 1 22 1 132 1 164 1 
120 1 297 1 323 3 357 3 21 3 270 3 271 3 132 1 
323 1 357 1 21 1 270 1 8 1 71 1 271 1 
120 1 323 1 118 1 357 1 21 1 256 1 270 1 8 1 271 1 
41 2 111 1 229 1 62 1 197 1 88 1 342 1 256 1 44 1 348 1 351 1 353 1 68 1 205 1 142 1 206 1 159 1 144 1 356 1 357 4 330 1 288 1 8 1 120 2 99 1 266 1 165 1 269 1 270 3 271 4 272 1 336 1 77 1 297 1 250 1 19 1 218 1 323 3 21 3 172 1 324 1 22 1 132 1 325 1 
0 1 297 1 323 1 187 1 357 2 21 2 270 1 271 2 132 1 
120 1 62 1 342 1 256 1 306 1 270 3 271 3 44 1 348 1 78 1 323 3 68 1 172 1 21 3 357 3 330 1 8 1 132 2 325 1 
120 1 256 1 270 2 271 2 323 2 21 2 357 2 110 1 132 1 164 1 
111 1 229 1 99 1 88 1 269 1 271 1 77 1 297 1 19 1 218 1 357 1 356 1 144 1 324 1 22 1 
111 1 229 1 99 1 88 1 271 1 283 1 297 1 19 1 218 1 357 1 356 1 144 1 324 1 96 1 22 1 
40 1 41 2 197 4 64 1 136 2 328 1 7 1 353 1 352 1 142 1 206 1 159 1 182 1 51 2 164 2 52 1 266 1 165 1 335 1 336 2 151 1 190 1 337 1 110 2 
323 1 357 1 21 1 330 1 270 1 8 1 271 1 359 1 
0 1 120 1 2 1 187 1 256 1 270 4 271 5 348 1 297 1 323 4 21 5 357 5 370 1 132 2 
323 2 357 2 21 2 270 2 8 1 71 1 271 2 359 1 
304 1 105 1 
304 1 105 1 
184 1 355 1 
184 1 355 1 
184 1 355 1 
304 1 105 1 122 1 
304 1 105 1 122 1 
47 1 304 1 105 1 
57 1 184 1 304 2 105 2 13 1 355 1 
304 1 105 1 122 1 
56 1 304 1 105 1 
56 1 304 1 105 1 
56 1 304 1 105 1 
98 2 209 2 62 2 264 1 316 2 306 1 127 2 44 2 176 1 201 1 92 2 296 1 103 1 289 1 
227 1 98 1 33 1 209 1 62 1 316 1 270 1 271 1 44 1 127 1 92 1 192 1 323 1 277 1 368 1 357 1 21 1 289 1 
311 1 83 1 199 1 
345 1 311 1 83 1 
90 1 303 1 345 1 311 3 199 2 291 1 
303 1 174 1 345 1 311 2 199 1 291 1 
303 1 345 1 311 2 199 1 291 2 
40 1 23 1 227 1 62 5 87 1 233 1 175 2 64 1 306 2 44 5 5 1 67 1 70 1 333 1 12 1 74 4 245 1 100 1 366 2 150 1 169 2 151 1 190 1 319 2 152 1 249 3 192 1 106 3 277 1 155 1 223 1 300 1 
42 1 62 2 254 1 198 1 306 1 257 1 44 2 5 1 357 1 8 1 71 1 120 1 186 1 74 2 270 1 271 1 272 1 152 1 323 1 278 1 21 1 
40 1 227 1 62 3 87 2 233 1 175 1 64 1 306 3 5 1 44 3 67 1 70 1 74 2 245 1 100 1 366 2 151 1 169 2 190 1 249 3 319 2 170 1 106 4 155 1 300 1 223 1 
40 2 227 2 62 4 87 3 233 1 327 1 175 2 64 2 306 4 4 1 5 1 44 4 67 1 178 1 70 1 74 3 245 2 100 1 366 4 169 4 151 2 190 2 319 4 249 5 170 1 106 7 155 1 223 1 300 1 
350 1 50 1 144 1 
144 1 308 1 
294 1 
144 1 356 1 
350 2 276 1 49 1 144 3 356 1 22 1 
144 1 356 1 22 1 
144 1 125 1 
40 1 197 5 64 1 136 2 335 4 214 1 215 1 53 1 14 1 336 3 248 1 349 1 58 1 298 1 7 3 80 2 301 1 
40 1 197 6 64 1 136 2 214 1 335 4 215 1 53 1 14 1 248 1 336 4 349 1 58 1 298 1 7 3 80 2 301 1 
40 1 197 5 64 1 136 2 214 1 335 4 215 1 53 1 14 1 336 3 248 1 349 1 58 1 298 1 18 1 7 3 80 2 301 1 
40 5 41 2 197 35 157 3 64 5 136 16 349 3 116 3 139 1 238 1 7 8 141 1 142 1 206 1 159 1 95 1 313 1 266 1 364 1 245 2 214 1 335 13 53 2 215 5 14 1 336 19 248 2 36 1 58 1 151 2 190 2 298 2 80 3 301 3 
40 1 41 4 197 8 64 1 307 1 136 3 349 1 7 4 206 2 142 2 159 2 95 1 266 2 335 5 34 1 214 1 53 1 215 1 14 1 336 5 248 1 298 1 80 2 301 1 
111 1 61 1 112 1 229 1 232 1 25 1 345 1 63 1 27 2 199 1 90 1 239 1 260 2 311 2 240 1 162 1 32 1 99 1 317 1 126 1 168 1 318 1 19 1 275 1 38 1 131 1 324 1 224 1 173 1 83 1 
111 1 229 1 232 1 25 1 345 1 63 1 27 3 199 1 90 1 239 1 260 3 311 2 162 1 32 1 99 1 317 1 16 1 216 1 126 1 168 1 318 1 19 1 274 1 275 2 38 1 131 1 324 1 224 1 173 1 83 1 
111 1 229 1 25 1 345 1 63 1 27 2 199 1 90 1 239 1 260 2 311 2 162 1 32 1 99 1 317 1 216 1 168 1 318 1 19 1 274 1 275 2 38 1 324 1 173 1 83 1 
111 1 211 1 229 1 99 1 25 2 232 1 121 1 75 1 63 2 234 1 3 1 27 1 309 1 16 1 318 2 19 1 239 2 218 1 144 1 356 1 260 1 224 1 324 1 
111 1 61 1 229 1 232 1 25 1 345 1 63 1 27 1 199 1 90 1 239 1 260 1 311 2 240 1 162 1 99 1 317 1 126 1 168 1 318 1 19 1 274 1 131 1 324 1 224 1 83 1 
343 1 
0 1 229 1 87 2 233 1 234 1 5 1 44 5 177 2 45 1 94 1 144 1 287 1 330 1 8 1 331 2 10 1 241 1 11 1 99 2 12 3 100 1 149 2 189 2 17 1 152 6 249 2 19 2 153 1 106 2 21 1 340 2 23 1 302 1 111 1 62 5 342 1 344 1 306 2 67 1 356 1 357 1 212 1 213 2 314 4 363 1 121 1 366 2 271 1 128 1 37 2 218 2 172 1 223 1 324 2 325 1 
0 1 241 1 62 3 342 1 212 1 314 2 12 1 363 1 271 1 44 3 128 1 189 1 17 1 152 2 94 1 108 1 172 1 21 1 357 1 330 1 8 1 325 1 
0 1 241 1 62 3 342 1 212 1 314 3 12 1 363 1 306 1 271 1 5 1 44 3 128 1 17 1 152 1 37 1 94 1 108 1 172 1 21 1 357 1 330 1 8 1 325 1 
0 1 62 3 342 1 306 1 44 3 5 1 94 1 357 1 330 1 8 1 331 1 241 1 212 1 314 3 12 1 363 1 271 1 128 1 17 1 189 1 152 2 37 1 108 1 21 1 172 1 325 1 
0 1 42 1 87 2 5 1 44 5 177 2 284 1 94 1 330 1 8 2 331 4 241 1 186 1 12 3 100 1 149 2 189 4 17 1 152 7 249 1 108 1 21 2 195 1 340 2 196 1 23 1 302 1 62 5 342 1 113 1 344 1 306 1 67 1 28 1 357 2 71 1 120 1 212 1 314 4 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 2 323 1 172 1 223 1 325 1 
0 1 42 1 87 2 44 4 5 1 177 2 94 1 330 1 8 2 331 2 241 1 186 1 12 2 100 1 149 2 17 1 189 2 249 1 152 4 153 1 106 2 21 2 340 2 302 1 23 1 62 4 342 1 344 1 306 1 67 1 357 2 71 1 120 1 212 1 314 4 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 2 323 1 172 1 223 1 325 1 
0 1 42 1 87 2 44 4 5 1 177 2 94 1 330 1 8 2 331 2 241 1 186 1 12 2 100 1 149 2 17 1 189 2 249 1 152 4 21 2 195 1 340 2 23 1 302 1 62 4 342 1 113 1 344 1 306 1 67 1 28 1 357 2 71 1 120 1 212 1 314 4 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 2 323 1 172 1 223 1 325 1 
0 1 42 1 87 2 44 4 5 1 177 2 94 1 330 1 8 2 331 2 241 1 186 1 12 2 100 1 149 2 17 1 189 2 249 1 152 4 21 2 195 1 340 2 23 1 302 1 62 4 342 1 113 1 344 1 306 1 67 1 28 1 357 2 71 1 120 1 212 1 314 4 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 2 323 1 172 1 223 1 325 1 
0 1 42 1 1 1 281 1 89 2 44 4 5 1 177 2 94 1 330 1 8 2 331 2 241 1 186 1 12 2 100 1 17 1 189 2 249 1 152 4 251 1 106 2 21 2 23 1 62 4 342 1 113 1 344 1 306 1 67 1 69 2 357 2 71 1 120 1 212 1 314 4 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 2 323 1 172 1 223 1 325 1 
0 1 42 1 87 2 44 4 5 1 177 2 284 1 94 1 330 1 8 2 331 3 241 1 186 1 12 2 100 1 149 2 189 3 17 1 152 5 249 1 21 2 195 1 340 2 23 1 302 1 62 4 342 1 113 1 344 1 306 1 67 1 28 1 357 2 71 1 120 1 212 1 314 5 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 3 323 1 172 1 223 1 325 1 
0 1 42 1 87 2 44 4 5 1 177 2 284 1 94 1 330 1 8 2 331 3 241 1 186 1 12 2 100 1 149 2 189 3 17 1 152 5 249 1 21 2 195 1 340 2 23 1 302 1 62 4 342 1 113 1 344 1 306 1 67 1 28 1 357 2 71 1 120 1 212 1 314 5 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 3 323 1 172 1 223 1 325 1 
0 1 42 1 89 2 44 4 5 1 177 2 94 1 330 1 8 2 331 2 241 1 186 1 12 2 100 1 17 1 189 2 249 1 152 4 251 1 153 1 106 2 21 2 23 1 62 4 342 1 344 1 306 1 67 1 69 2 357 2 71 1 120 1 212 1 314 4 213 2 363 1 270 1 271 2 366 1 272 1 128 1 37 2 323 1 172 1 223 1 325 1 
40 1 41 2 197 5 64 1 136 2 349 1 7 2 353 1 50 1 142 1 206 1 159 1 182 1 164 1 51 1 266 1 165 1 214 1 335 2 14 1 336 3 298 1 297 1 80 1 110 1 301 1 
40 2 41 4 197 14 157 3 64 1 136 8 116 3 46 1 351 1 238 1 7 1 353 2 142 2 206 2 159 2 9 1 51 11 164 11 263 1 208 1 72 1 266 2 165 1 245 2 246 1 101 1 335 2 215 1 336 6 151 2 190 1 297 1 110 4 
41 2 111 1 229 1 88 1 197 2 136 1 348 1 46 1 351 1 353 1 206 1 142 1 144 1 356 1 143 1 357 2 159 1 207 1 312 1 208 1 99 1 266 1 269 1 165 1 270 1 271 2 336 1 77 1 297 1 338 1 19 1 218 1 323 1 21 1 324 1 110 1 22 1 132 1 
40 3 41 6 229 2 230 2 88 2 136 9 137 2 46 1 7 4 142 3 144 2 288 2 51 7 99 3 245 2 335 8 14 1 336 10 151 2 190 2 297 1 298 1 19 3 104 2 21 1 110 7 301 1 22 2 111 2 197 19 64 3 66 1 348 1 349 1 351 1 353 3 206 3 159 3 357 3 356 2 164 7 360 1 361 2 208 1 266 3 165 3 269 2 270 1 214 1 271 3 215 4 77 2 274 1 321 1 218 1 323 1 80 1 324 3 132 1 
133 1 41 4 134 1 111 2 112 1 229 2 197 2 234 1 136 1 351 1 353 2 142 2 206 2 182 1 357 1 144 3 159 2 356 2 261 2 262 1 208 1 99 8 266 2 165 2 121 1 270 1 271 1 54 1 167 1 336 1 274 1 19 8 218 2 323 1 339 1 21 1 324 7 132 1 60 1 
40 1 41 2 197 3 256 1 64 1 136 1 46 1 7 1 353 1 142 1 206 1 159 1 357 1 164 1 51 1 120 1 266 1 165 1 245 1 270 1 335 1 271 1 336 2 151 1 190 1 322 1 323 1 21 1 110 1 
40 1 41 2 197 2 266 1 165 1 335 1 136 2 215 1 151 1 337 1 353 1 206 1 142 1 182 1 159 1 110 1 164 1 51 1 
41 2 52 1 197 2 266 1 165 1 64 1 335 1 336 2 190 1 7 1 353 1 206 1 142 1 182 1 159 1 110 1 164 1 51 1 
40 1 41 2 197 4 64 1 136 2 7 1 353 1 142 1 206 1 159 1 182 1 51 2 164 2 266 1 165 1 245 1 335 2 215 1 336 2 151 1 190 1 110 2 
40 1 41 2 197 2 266 1 165 1 335 1 136 2 215 1 54 1 151 1 337 1 353 1 206 1 142 1 159 1 110 1 164 1 51 1 
41 2 52 1 197 2 266 1 165 1 64 1 335 1 54 1 336 2 190 1 7 1 353 1 206 1 142 1 159 1 110 1 164 1 51 1 
40 1 41 2 197 4 64 1 136 2 7 1 353 1 142 1 206 1 159 1 51 2 164 2 266 1 165 1 245 1 335 2 215 1 54 1 336 2 151 1 190 1 110 2 
40 1 41 2 197 4 266 1 165 1 245 1 64 1 335 2 136 2 215 1 336 2 151 1 190 1 7 1 353 1 206 1 142 1 159 1 110 2 164 2 51 2 
41 2 111 1 229 1 197 2 88 1 136 1 351 1 353 1 206 1 142 1 356 1 144 1 357 1 159 1 288 1 208 1 99 1 266 1 269 1 165 1 271 1 336 1 77 1 297 1 19 1 218 1 324 1 22 1 
41 2 111 1 229 1 197 2 88 1 136 1 283 1 351 1 353 1 206 1 142 1 356 1 144 1 357 1 159 1 96 1 208 1 99 1 266 1 165 1 271 1 367 1 336 1 297 1 19 1 218 1 324 1 22 1 
40 1 41 2 197 4 64 1 136 2 46 1 7 1 353 1 142 1 206 1 159 1 51 2 164 2 266 1 165 1 245 1 335 2 215 1 336 2 151 1 190 1 110 2 
40 1 41 2 111 1 229 1 112 1 197 4 88 1 230 1 64 1 136 2 7 1 353 1 206 1 142 1 356 1 144 1 357 1 159 1 288 1 164 2 51 2 99 1 266 1 269 1 165 1 245 1 335 2 271 1 215 1 336 2 151 1 77 1 190 1 19 1 324 1 110 2 22 1 
40 1 41 2 197 3 256 1 64 1 136 2 46 1 353 1 142 1 206 1 159 1 357 1 51 1 164 1 120 1 266 1 165 1 245 1 270 1 335 1 271 1 215 1 336 1 151 1 190 1 20 1 323 1 21 1 110 1 
41 2 242 1 129 1 266 1 142 1 206 1 81 1 159 1 307 1 188 1 
41 2 242 1 129 1 266 1 142 1 206 1 81 1 159 1 307 1 188 1 
41 2 242 1 129 1 266 1 142 1 206 1 81 1 159 1 307 1 188 1 
41 2 242 1 129 1 266 1 142 1 206 1 81 1 159 1 307 1 188 1 
41 2 242 1 129 1 266 1 142 1 206 1 81 1 159 1 307 1 188 1 
127 1 176 1 92 1 209 1 255 1 316 1 
33 1 
127 1 92 1 209 1 282 1 316 1 
98 2 209 1 62 1 264 1 316 1 306 1 44 1 127 1 176 1 201 1 92 1 296 1 103 1 289 1 
98 2 209 1 62 1 264 1 316 1 306 1 44 1 127 1 176 1 201 1 92 1 296 1 103 1 289 1 
98 2 209 1 62 1 264 1 316 1 306 1 44 1 127 1 176 1 201 1 92 1 296 1 103 1 289 1 
154 1 
154 1 
114 1 
114 1 
292 1 279 1 
227 1 98 1 33 1 209 1 62 1 264 1 74 1 316 1 127 1 44 1 201 1 92 1 192 1 277 1 286 1 368 1 
154 1 
114 1 
41 2 111 1 229 1 197 2 136 1 6 1 46 1 351 1 353 1 285 1 206 1 142 1 144 1 356 1 357 2 159 1 261 2 97 1 208 1 99 2 267 1 266 1 165 1 271 2 336 1 19 2 339 1 21 2 82 1 324 2 60 1 
111 1 229 1 112 1 99 2 345 1 63 1 199 1 247 1 317 1 90 1 168 1 59 1 274 1 19 2 131 1 311 2 324 2 145 1 83 1 
111 1 229 1 99 1 345 1 63 1 199 1 317 1 90 1 168 1 59 1 93 1 274 1 19 1 131 1 311 2 324 1 83 1 
111 1 229 1 99 1 121 1 63 1 234 1 247 1 309 1 19 1 218 1 144 1 356 1 171 1 324 1 
111 1 229 1 99 1 345 1 63 1 199 1 247 1 317 1 90 1 168 1 59 1 274 1 19 1 131 1 311 2 324 1 145 1 83 1 
147 1 
5 1 249 1 29 1 50 1 306 1 366 1 65 1 
23 1 302 1 62 1 87 1 12 1 100 1 306 2 366 1 149 1 5 1 44 1 67 1 152 1 249 1 106 1 223 1 340 1 
40 2 229 3 87 6 326 2 233 2 235 1 138 2 5 2 44 5 237 2 45 1 179 1 48 2 49 1 144 10 99 3 12 3 245 2 100 4 55 2 15 2 295 1 151 2 249 9 152 5 190 2 19 3 104 2 106 12 22 3 23 4 111 4 112 1 62 5 306 8 64 2 65 1 308 3 67 4 350 2 204 2 29 1 356 3 166 2 125 2 366 8 169 6 319 6 218 1 219 1 172 2 223 4 324 3 225 1 
40 2 23 2 62 1 231 1 87 3 233 1 157 1 346 1 306 5 64 2 138 2 44 1 5 2 237 1 45 1 116 1 67 2 202 1 238 1 158 1 243 1 12 1 334 1 245 2 100 2 366 5 169 5 151 2 152 1 319 5 249 8 320 1 190 2 106 6 223 2 
40 2 23 1 42 1 62 1 64 1 138 2 44 1 237 1 349 1 67 1 28 1 357 1 8 1 71 1 120 1 186 1 100 1 270 1 271 1 366 2 272 1 36 1 249 2 298 1 323 1 21 1 223 1 301 1 
23 1 100 1 306 1 366 1 65 1 5 1 67 1 249 1 29 1 223 1 
40 2 87 5 245 2 306 5 64 2 366 5 138 2 237 1 151 2 169 5 319 5 190 2 249 5 104 1 106 10 
5 1 44 1 152 1 62 1 12 1 306 1 
23 1 111 1 229 1 62 3 233 2 234 1 235 1 44 3 67 2 45 2 179 2 144 1 356 1 10 1 11 1 99 4 12 2 121 1 100 2 366 2 249 2 152 4 19 4 218 2 170 1 107 1 223 2 324 4 84 1 
41 2 111 1 229 1 197 1 88 1 351 1 353 1 205 1 142 1 206 1 159 1 357 3 356 1 144 1 288 1 120 2 99 1 266 1 269 1 165 1 270 2 271 3 272 1 336 1 77 1 297 1 19 1 218 1 323 2 21 2 324 1 22 1 
23 1 87 2 233 1 100 1 306 3 366 1 138 1 5 1 169 2 67 1 45 1 319 2 249 2 80 1 106 4 223 1 
127 1 92 1 369 1 
127 1 92 1 369 1 
127 1 92 1 79 1 76 1 279 1 
127 1 92 1 369 1 
127 1 92 1 30 1 
127 1 92 1 30 1 
127 1 92 1 30 1 
127 1 92 1 
304 1 105 1 
40 1 41 4 197 7 266 2 64 1 136 3 335 3 214 1 215 1 14 1 336 4 349 1 298 1 7 2 80 1 206 2 142 2 159 2 95 1 301 1 
40 1 197 5 64 1 214 1 335 2 136 2 14 1 336 3 349 1 7 2 298 1 80 1 50 1 301 1 
40 1 41 2 197 4 266 1 245 1 64 1 335 2 136 2 215 1 336 2 151 1 190 1 7 1 259 1 206 1 142 1 159 1 
40 1 197 7 245 1 157 1 64 1 101 1 136 3 335 2 215 1 336 4 116 2 151 1 190 1 7 1 238 1 
40 3 41 4 197 22 157 2 64 3 136 10 349 2 116 2 7 5 206 2 142 2 159 2 95 2 9 1 266 2 245 2 246 1 101 1 214 1 335 9 215 4 14 1 336 12 151 2 190 2 298 1 130 1 80 1 301 2 
336 1 116 1 197 1 
197 1 157 1 136 1 
40 1 41 2 197 6 266 1 245 1 64 1 136 3 335 3 215 1 336 3 151 1 190 1 7 2 104 1 259 1 142 1 206 1 159 1 
40 2 41 2 197 12 231 1 157 1 307 1 64 2 136 6 116 1 238 1 7 1 202 1 158 1 142 1 206 1 159 1 266 1 243 1 245 2 335 2 215 1 336 6 151 2 320 1 190 2 
40 1 197 6 64 1 136 3 335 2 215 1 336 3 349 1 298 1 7 1 301 1 
41 2 197 3 266 1 136 1 335 2 214 1 215 1 14 1 336 2 349 1 7 1 130 1 206 1 142 1 159 1 95 1 301 1 
40 2 41 2 197 10 266 1 307 1 64 2 335 5 136 5 215 2 336 5 36 1 349 2 7 3 298 1 142 1 206 1 159 1 301 2 
40 1 41 2 197 2 266 1 307 1 136 2 335 1 215 1 151 1 206 1 142 1 159 1 
40 1 41 2 197 4 266 1 245 1 64 1 307 1 335 2 136 2 215 1 336 2 151 1 190 1 7 1 206 1 142 1 159 1 
290 1 41 6 197 3 266 3 307 1 335 2 136 1 215 1 336 2 349 1 7 1 130 1 206 3 142 3 159 3 95 1 301 1 
40 5 41 10 197 33 157 3 307 1 64 5 136 15 349 3 116 4 139 1 238 1 7 7 259 1 141 1 142 5 206 5 159 5 95 2 313 1 290 1 266 5 245 3 101 1 214 1 335 12 215 5 14 1 336 18 151 3 190 3 298 2 130 1 80 1 301 3 
40 1 41 2 197 7 231 1 157 1 64 1 307 1 136 3 116 1 349 1 238 1 7 2 142 1 206 1 159 1 266 1 214 1 335 2 14 1 336 4 298 1 80 1 301 1 
40 2 41 4 197 10 231 1 157 1 64 1 307 1 136 5 349 1 116 2 7 2 238 1 259 1 142 2 206 2 159 2 266 2 245 1 101 1 214 1 335 3 215 1 14 1 336 5 151 1 298 1 80 1 301 1 
40 3 41 6 197 18 231 1 157 1 307 1 64 3 136 8 349 1 116 1 202 1 238 1 7 3 259 1 158 1 142 3 206 3 159 3 95 1 266 3 243 1 245 2 214 1 335 4 215 1 14 1 336 10 151 2 320 1 190 2 298 1 80 1 301 1 
40 3 41 6 197 16 231 1 157 1 307 1 64 2 136 9 349 1 116 1 238 1 7 3 202 1 259 1 158 1 142 3 206 3 159 3 95 1 266 3 243 1 245 2 214 1 335 5 215 2 14 1 336 7 151 2 320 1 190 1 298 1 80 1 301 1 
40 1 41 2 197 7 231 1 157 1 64 1 307 1 136 3 116 1 349 1 238 1 7 2 142 1 206 1 159 1 266 1 214 1 335 2 14 1 336 4 298 1 80 1 301 1 
40 2 41 2 197 12 231 1 157 1 307 1 64 2 136 6 116 1 238 1 7 1 202 1 158 1 142 1 206 1 159 1 266 1 243 1 245 2 335 2 215 1 336 6 151 2 320 1 190 2 
40 3 41 8 197 17 231 1 157 1 307 1 64 2 136 9 349 1 116 1 202 1 238 1 7 3 259 1 158 1 142 4 206 4 159 4 95 2 243 1 266 4 245 2 214 1 335 5 215 2 14 1 336 8 151 2 320 1 190 1 298 1 80 1 301 1 
40 3 41 8 197 16 231 1 157 1 307 1 64 2 136 9 116 1 202 1 238 1 7 3 158 1 142 4 206 4 159 4 95 2 290 1 243 1 266 4 245 3 335 6 215 3 336 7 151 3 320 1 190 2 
40 1 197 7 64 1 214 2 335 6 136 3 215 3 14 1 336 4 349 3 7 3 298 1 301 3 
40 3 41 8 197 17 231 1 157 1 307 1 64 2 136 9 349 1 116 1 202 1 238 1 7 3 158 1 142 4 206 4 159 4 95 2 290 1 243 1 266 4 245 2 214 1 335 4 215 1 14 1 336 8 151 2 320 1 190 1 298 1 80 1 301 1 
0 1 297 1 244 1 357 1 21 1 187 1 271 1 
0 1 119 1 156 1 244 1 187 1 271 1 200 1 217 1 297 1 354 1 21 1 357 1 
111 1 229 1 19 1 99 1 218 1 121 1 50 1 144 1 356 1 234 1 324 1 
111 1 229 1 88 1 99 1 270 1 271 2 77 1 297 1 19 1 218 1 323 1 144 1 356 1 21 1 357 2 324 1 22 1 132 1 
111 1 229 1 342 1 88 1 99 1 125 1 166 1 270 1 271 2 77 1 297 1 179 1 19 1 323 2 144 3 356 2 21 2 357 2 330 1 324 1 8 1 22 2 132 1 
111 1 229 1 88 1 342 1 283 1 179 1 357 2 356 2 144 3 330 1 8 1 163 1 99 2 270 1 166 1 125 1 271 2 297 1 19 2 323 2 21 2 324 2 132 1 22 2 
111 1 229 1 62 2 135 1 306 1 308 1 44 2 5 1 350 1 179 1 144 4 356 1 163 1 99 3 265 1 166 1 125 1 152 1 19 3 218 1 172 1 324 3 22 1 
111 1 62 2 229 1 99 3 306 1 125 1 166 1 308 1 5 1 44 2 350 1 152 1 179 1 19 3 218 1 204 1 172 1 356 1 144 4 324 3 163 1 22 1 
111 1 134 1 229 1 19 1 99 1 324 1 
133 1 134 1 111 3 112 1 229 2 99 7 315 1 167 1 117 1 274 1 19 7 218 2 339 1 49 1 356 2 144 3 160 1 324 6 261 1 22 1 262 1 
40 1 41 4 111 1 229 1 112 1 197 5 88 1 230 1 64 1 136 2 137 1 6 1 349 1 46 1 7 2 353 2 206 2 142 2 144 1 356 1 357 2 159 2 288 1 164 1 51 1 99 1 266 2 165 2 269 1 270 1 335 2 214 1 271 2 14 1 336 3 77 1 297 1 298 1 19 1 323 1 80 1 21 1 324 1 110 1 301 1 22 1 132 1 
23 2 62 3 326 1 306 1 235 1 65 1 308 1 5 1 44 3 67 2 350 1 48 1 204 1 29 1 144 2 99 1 74 1 12 1 100 2 366 1 55 1 249 1 152 2 19 1 218 1 172 1 324 1 223 2 
134 1 111 2 112 1 229 1 99 2 350 1 295 1 19 2 49 1 356 1 144 2 324 2 22 1 
111 1 229 1 112 1 19 4 99 4 218 1 73 1 121 1 144 1 356 1 234 1 324 4 163 1 
111 2 229 1 99 2 305 1 43 1 117 1 179 1 321 1 19 2 356 1 144 1 160 1 324 2 22 1 
111 1 229 1 19 1 99 1 218 1 345 1 311 1 324 1 83 1 317 1 
111 1 112 1 229 1 99 2 19 2 274 1 339 1 356 1 144 1 324 2 97 1 
133 1 111 2 112 1 229 2 99 5 73 1 121 1 234 1 179 1 19 5 218 1 339 1 356 2 144 3 324 4 262 1 
341 1 133 1 111 2 112 1 229 2 99 5 73 1 121 1 234 1 179 1 19 5 218 1 339 1 356 2 144 3 324 4 
111 1 229 1 88 1 99 1 270 1 271 2 283 1 297 1 19 1 218 1 323 1 144 1 356 1 21 1 357 2 324 1 22 1 132 1 
111 2 229 1 99 1 315 1 117 1 179 1 19 1 49 1 356 1 144 1 160 1 324 1 22 1 
293 1 258 1 297 1 123 1 252 1 
62 2 342 1 74 1 268 1 123 2 306 1 5 1 44 2 293 2 258 1 297 1 329 1 68 1 172 1 252 2 330 1 8 1 358 1 325 1 
293 1 258 1 267 1 285 1 357 1 21 1 82 1 252 1 271 1 
258 1 268 1 358 1 
32 1 38 1 50 1 173 1 
32 1 38 1 232 1 260 1 27 1 224 1 173 1 
239 1 25 1 260 1 
32 1 232 1 27 3 38 1 310 1 222 1 260 3 224 1 109 1 161 2 173 1 240 1 
253 1 32 1 275 1 38 1 232 1 260 2 27 2 224 1 173 1 
32 1 232 1 221 1 124 1 260 1 311 1 27 1 224 1 83 1 199 1 240 1 
32 1 232 1 260 1 27 1 224 1 173 1 240 1 
38 1 232 1 260 1 27 1 224 1 173 2 240 1 
32 1 185 1 232 2 27 2 35 1 140 1 260 2 224 2 173 1 240 1 
85 1 32 2 232 1 124 1 27 3 26 1 148 1 275 2 38 1 260 3 224 1 173 1 240 1 
32 1 210 1 232 1 345 1 27 2 199 1 90 1 275 1 38 1 260 2 311 2 224 1 173 1 83 1 240 1 
31 1 85 1 253 1 32 2 232 2 124 1 27 4 275 2 38 1 260 4 224 2 173 1 240 1 
32 1 38 1 232 1 260 1 27 1 224 1 173 1 240 1 
85 1 32 3 232 1 124 1 27 4 275 2 38 2 181 1 310 1 260 4 224 1 161 1 109 1 173 2 
115 1 236 1 32 1 275 1 38 1 232 1 260 2 27 2 224 1 173 1 240 1 347 1 
32 1 24 1 38 1 232 1 310 1 260 3 27 3 224 1 173 1 161 2 109 2 240 1 
32 1 332 1 228 1 
86 1 232 1 260 1 27 1 224 1 240 1 
32 1 275 1 38 1 232 1 260 2 27 2 224 1 173 1 148 1 240 1 
226 1 
32 1 38 1 232 1 260 1 27 1 224 1 173 1 240 1 
32 1 275 1 38 1 232 1 260 3 27 3 224 1 173 1 161 1 148 1 240 1 
85 1 32 1 181 1 124 1 
32 1 173 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (7,74,95,156,207) (184,244) (184,244) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (7,74,95,156,207) (184,244) (184,244) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (7,74,95,156,207) (184,244) (184,244) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (7,74,95,156,207) (184,244) (184,244) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (7,74,95,156,207) (173,205) (173,205) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (6,100,108) (6,100,108) 314 143 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (160,215) (160,215) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (160,215) 28 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (160,215) (160,215) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 1 184 1 275 1 178 1 232 1 279 1 95 1 240 1 34 1 224 1 25 1 244 1 139 1 170 1 
39 1 184 1 275 1 178 1 232 1 279 1 95 1 240 1 34 1 25 1 224 1 244 1 139 1 170 1 
39 1 184 1 275 1 178 1 232 1 279 1 95 1 240 1 34 1 25 1 224 1 244 1 139 1 170 1 
39 1 184 1 275 1 178 1 232 1 279 1 95 1 240 1 34 1 25 1 224 1 244 1 139 1 170 1 
149 1 172 1 67 3 80 1 275 4 5 2 254 1 350 1 178 1 232 4 110 1 34 1 25 1 224 1 188 1 89 2 170 1 142 3 
173 1 205 1 34 1 39 1 25 1 155 1 275 1 232 1 178 1 95 1 240 1 170 1 
67 2 39 1 275 3 254 1 350 1 178 2 232 3 34 1 25 2 265 1 188 1 89 1 142 1 
149 1 67 5 172 1 39 1 275 9 5 2 178 2 46 1 25 2 224 1 142 7 80 1 254 1 350 1 232 9 34 1 33 1 110 1 265 1 13 1 188 3 89 4 169 1 170 1 
149 1 67 5 172 1 39 1 275 9 5 2 178 2 46 1 25 2 224 1 142 7 80 1 254 1 350 1 232 9 34 1 33 1 110 1 265 1 13 1 188 3 89 4 169 1 170 1 
92 1 243 1 214 1 
55 1 
179 2 150 2 264 2 312 2 276 1 269 2 319 1 273 2 
150 2 17 1 197 1 41 2 175 1 276 1 43 1 70 1 22 1 204 2 179 3 206 1 99 1 345 1 329 1 285 1 210 1 101 2 27 1 312 2 63 1 233 1 109 2 292 1 187 1 235 1 264 2 131 1 168 2 113 1 269 3 319 1 189 1 147 1 273 2 115 1 135 1 
179 1 150 1 208 1 264 1 20 1 312 1 276 1 269 1 273 1 124 1 
108 1 6 1 
150 1 125 1 92 1 312 1 185 1 200 2 214 1 179 1 108 1 96 1 264 1 208 1 269 1 100 2 273 1 
211 1 268 1 200 1 100 1 316 1 
92 1 245 1 268 1 200 2 100 2 221 1 214 1 316 1 
268 1 200 1 100 1 
150 1 20 1 276 1 312 1 200 1 137 1 316 1 179 1 208 1 264 1 269 1 100 1 273 1 124 1 
214 1 
92 1 73 1 245 1 268 1 200 2 100 2 214 1 316 1 
92 1 349 1 199 2 200 5 301 1 342 2 220 1 214 1 316 2 281 1 138 2 283 1 245 1 268 2 100 5 227 1 295 1 297 1 296 1 
243 1 319 1 
150 2 91 1 182 1 312 1 179 2 264 1 269 2 319 2 273 1 
86 1 339 1 236 1 
17 1 41 1 43 1 63 1 351 1 179 1 206 1 131 1 99 1 168 1 345 1 269 1 319 1 101 1 147 1 115 1 
150 1 308 1 17 1 41 1 43 1 312 1 63 1 260 1 179 2 206 1 264 1 131 1 99 1 168 1 345 1 269 2 236 1 101 1 147 1 115 1 
179 3 150 3 264 3 312 3 269 3 319 1 273 1 260 1 
179 1 150 1 208 1 264 1 20 1 312 1 269 1 
179 1 150 1 91 1 208 1 182 1 264 1 312 1 269 1 273 1 
91 1 150 3 17 1 41 1 175 1 43 1 276 1 200 1 70 1 22 1 204 1 179 4 96 1 206 1 304 1 208 1 99 1 345 1 329 1 285 1 100 1 101 1 27 1 125 1 308 1 312 3 185 1 63 1 233 1 260 1 109 2 108 1 352 1 187 1 235 1 264 3 131 1 168 1 269 4 319 1 147 1 273 2 115 1 135 1 
179 2 150 2 264 1 230 1 312 1 269 2 319 1 136 1 260 1 
91 1 150 3 125 1 308 1 312 3 185 1 200 1 214 1 260 2 96 1 179 3 108 1 352 1 208 1 264 3 269 3 100 1 273 1 191 1 
179 2 150 2 91 1 86 1 264 2 312 2 269 2 236 1 273 1 260 1 
17 1 41 1 43 1 63 1 179 1 206 1 99 1 131 1 168 1 345 1 269 1 319 1 101 1 147 1 115 1 
17 1 41 1 42 1 63 1 179 1 206 1 99 1 131 1 168 1 345 1 269 1 132 1 319 1 101 1 147 1 
40 1 339 2 70 2 22 1 204 4 8 1 53 1 329 1 285 1 161 1 141 1 306 1 251 1 183 1 252 1 31 1 186 1 233 1 109 2 292 2 187 1 86 2 236 2 135 1 
179 1 150 1 208 1 264 1 312 1 185 1 269 1 148 1 
171 1 150 5 91 1 308 1 230 1 312 4 260 2 179 5 52 1 264 4 269 5 319 1 273 1 136 1 
179 2 150 2 208 1 264 2 20 1 312 2 269 2 148 1 
152 1 37 1 
152 1 37 1 
253 1 248 1 
253 1 248 1 
253 1 248 1 
291 1 152 1 37 1 
152 1 287 1 37 1 
152 2 253 1 255 1 248 1 37 2 355 1 
291 1 152 1 37 1 
291 1 152 1 37 1 
152 1 37 1 257 1 
152 1 37 1 257 1 
152 1 37 1 257 1 
152 2 18 2 335 2 200 2 71 1 326 1 256 3 214 1 50 1 262 2 338 1 15 1 209 2 100 2 36 2 37 2 355 1 134 1 59 1 
150 2 152 1 18 1 1 1 68 1 274 1 200 1 326 1 179 2 327 1 209 1 100 1 286 1 76 1 287 1 312 2 335 1 256 1 262 1 234 1 264 2 269 2 319 1 37 1 
172 1 224 1 170 1 
172 1 155 1 170 1 
85 1 224 2 155 1 66 1 203 1 170 3 
85 1 224 1 146 1 155 1 66 1 170 2 
85 2 224 1 155 1 66 1 170 2 
150 1 92 1 300 1 40 1 274 1 20 1 276 1 199 1 200 5 202 1 137 1 342 1 48 1 24 1 179 1 138 1 283 1 208 1 225 1 55 1 344 2 245 1 100 5 124 1 10 1 312 1 62 1 107 1 186 1 316 4 214 1 264 1 269 1 268 1 295 1 273 1 297 2 
150 1 92 1 300 1 40 1 274 1 20 1 276 1 199 1 200 5 137 1 342 1 48 1 24 1 179 1 138 1 283 1 208 1 225 1 55 1 245 1 100 5 124 1 211 2 10 1 312 1 62 1 186 1 316 4 214 1 290 1 167 2 264 1 65 1 269 1 268 3 295 1 273 1 297 2 
150 1 92 1 300 1 274 1 40 1 20 1 276 1 199 1 200 3 301 1 137 1 202 1 342 1 24 2 179 1 138 1 208 1 283 3 225 1 344 1 55 3 100 3 306 1 124 1 10 1 289 1 312 1 62 2 31 1 107 1 186 1 214 2 316 2 264 1 269 1 273 1 297 2 
92 1 40 2 274 2 276 1 137 1 179 1 138 1 283 5 225 1 55 6 100 4 10 1 289 2 62 4 107 1 186 2 14 1 297 4 150 1 300 2 20 1 199 1 301 1 200 4 202 1 342 1 24 4 242 1 208 1 344 2 306 2 124 1 312 1 31 2 316 3 214 3 129 1 264 1 269 1 273 1 
243 1 131 1 271 1 
131 1 4 1 
340 1 
131 1 345 1 
333 1 303 1 131 3 345 1 271 2 147 1 
131 1 345 1 147 1 
131 1 277 1 
229 1 153 1 40 1 252 3 2 1 70 3 118 2 31 1 325 1 164 1 204 7 180 1 292 4 130 1 53 2 56 1 114 1 
229 1 153 1 40 1 252 3 2 1 70 3 118 2 31 1 325 1 164 1 204 7 180 1 292 4 130 1 53 2 56 1 114 1 
229 1 153 1 40 1 252 3 2 1 70 3 118 2 31 1 325 1 164 1 204 7 180 1 292 4 130 1 53 2 121 1 56 1 114 1 
320 1 153 1 300 3 116 1 40 4 2 1 302 3 70 15 118 3 325 2 204 31 180 5 98 1 53 5 56 2 329 1 285 1 228 1 306 3 229 1 252 10 311 1 31 4 164 2 186 3 233 1 109 2 64 1 292 16 128 1 187 1 130 1 133 4 114 2 
153 1 40 1 2 1 118 2 70 4 325 1 204 9 180 1 53 3 56 1 329 2 285 2 228 1 81 1 252 4 31 1 164 1 233 2 109 4 292 5 187 2 130 1 190 1 114 1 
67 1 172 1 192 1 39 1 17 1 69 1 41 1 275 2 155 1 176 1 178 1 203 1 343 1 97 1 206 1 224 1 25 1 101 1 142 1 250 1 254 1 350 1 232 2 261 1 34 1 293 1 168 1 88 1 270 1 170 2 
67 1 172 1 192 1 39 1 17 1 69 1 41 1 218 1 275 3 155 1 176 1 178 1 203 1 23 1 206 1 224 1 25 1 181 1 101 1 142 2 250 1 254 1 350 1 232 3 261 1 293 1 168 1 88 1 270 1 170 2 
67 1 192 1 172 1 39 1 17 1 69 1 41 1 275 2 155 1 203 1 23 1 206 1 224 1 181 1 101 1 142 2 250 1 254 1 350 1 232 2 261 1 168 1 88 1 270 1 170 2 
17 1 39 2 69 2 41 1 218 1 154 1 275 1 178 1 158 1 206 1 25 1 54 1 345 1 101 1 250 2 63 1 232 1 261 2 165 1 263 1 131 1 168 1 38 1 
172 1 192 1 39 1 17 1 69 1 41 1 275 1 155 1 176 1 178 1 203 1 23 1 343 1 206 1 224 1 25 1 101 1 250 1 232 1 261 1 34 1 293 1 168 1 88 1 270 1 170 2 
29 1 
17 1 41 2 199 1 200 2 6 1 177 1 342 1 138 1 206 1 283 1 223 1 54 1 245 1 345 1 100 2 101 2 123 1 143 1 102 1 145 1 10 1 63 2 314 1 108 1 263 1 131 1 168 2 268 2 295 1 297 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 73 1 245 1 268 1 200 2 100 2 6 1 314 1 123 1 143 1 
108 1 138 1 145 1 199 1 200 1 100 1 6 1 295 1 342 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 145 1 200 1 100 1 6 1 314 1 123 1 143 1 
108 1 138 1 145 1 199 1 200 1 100 1 6 1 295 1 342 1 314 1 123 1 143 1 
153 1 40 1 339 1 2 1 70 3 118 1 22 1 325 1 204 6 243 1 53 2 56 1 329 1 285 1 161 1 252 2 31 1 233 1 109 2 292 3 86 1 187 1 130 1 236 1 319 2 135 1 
93 1 300 2 116 1 339 11 40 2 175 1 302 3 70 6 22 2 204 14 180 1 53 1 329 2 285 2 306 1 331 1 310 1 252 2 106 1 61 1 31 1 186 2 233 2 109 4 64 1 292 8 187 2 86 4 113 1 319 1 133 3 236 11 135 1 
150 1 17 1 41 1 175 1 43 1 70 1 45 1 22 1 204 2 179 2 206 1 99 1 345 1 285 1 329 1 101 1 308 1 309 1 310 1 312 1 63 1 351 1 260 1 233 1 259 1 109 2 292 1 86 1 187 1 264 1 131 1 168 1 113 1 269 2 319 1 147 1 115 1 135 1 
40 3 41 3 2 1 175 1 43 2 323 2 325 1 219 2 179 3 180 4 53 4 99 2 56 1 329 3 285 3 101 3 57 2 63 1 186 2 233 3 109 6 292 10 187 3 113 1 236 7 147 2 115 2 150 1 17 2 195 2 196 1 153 1 300 2 339 7 118 1 70 10 22 3 204 20 23 1 206 2 246 1 345 2 306 2 346 1 27 2 308 1 310 1 252 8 312 1 31 3 260 1 86 7 130 1 264 1 131 2 168 3 269 3 319 2 135 3 
150 1 151 1 17 2 41 8 175 1 70 1 22 2 204 2 23 1 179 1 97 1 206 2 54 1 345 2 329 2 285 2 210 2 101 7 161 1 144 1 249 1 9 1 162 1 334 1 312 1 63 2 260 1 233 2 109 4 292 1 187 2 263 1 264 1 131 3 168 8 113 1 269 1 90 1 135 2 
91 1 150 1 174 1 300 1 339 1 40 1 70 2 22 1 204 3 179 1 53 1 329 1 285 1 306 1 310 1 252 1 312 1 31 1 186 1 233 1 109 2 292 1 86 1 187 1 264 1 269 1 236 1 273 1 135 1 
339 1 40 1 252 1 22 1 204 2 186 1 233 1 180 1 109 2 292 2 86 1 187 1 285 1 329 1 236 1 161 1 141 1 135 1 
339 1 251 1 252 1 70 2 22 1 31 1 204 2 233 1 109 2 86 1 187 1 53 1 285 1 329 1 236 1 161 1 306 1 135 1 
300 1 339 2 40 1 252 2 70 2 31 1 22 1 204 4 186 1 233 1 180 1 109 2 292 2 86 2 187 1 53 1 285 1 329 1 236 2 161 1 306 1 135 1 
334 1 339 1 40 1 252 1 22 1 204 2 186 1 233 1 180 1 109 2 292 2 86 1 187 1 285 1 329 1 236 1 141 1 135 1 
334 1 339 1 251 1 252 1 70 2 22 1 31 1 204 2 233 1 109 2 86 1 187 1 53 1 285 1 329 1 236 1 306 1 135 1 
334 1 300 1 339 2 40 1 252 2 70 2 31 1 22 1 204 4 186 1 233 1 180 1 109 2 292 2 86 2 187 1 53 1 285 1 329 1 236 2 306 1 135 1 
300 1 339 2 40 1 252 2 70 2 31 1 22 1 204 4 186 1 233 1 180 1 109 2 292 2 86 2 187 1 53 1 285 1 329 1 236 2 306 1 135 1 
17 1 41 1 175 1 43 1 70 1 22 1 204 2 179 1 206 1 99 1 345 1 285 1 329 1 101 1 27 1 63 1 233 1 109 2 292 1 187 1 131 1 168 1 113 1 269 1 319 1 147 1 115 1 135 1 
0 1 17 1 41 1 42 1 175 1 70 1 22 1 204 2 179 1 206 1 99 1 345 1 285 1 329 1 101 1 63 1 233 1 109 2 292 1 187 1 131 1 168 1 113 1 269 1 132 1 319 1 147 1 135 1 
300 1 339 2 40 1 310 1 252 2 70 2 31 1 22 1 204 4 186 1 233 1 180 1 109 2 292 2 86 2 187 1 53 1 285 1 329 1 236 2 306 1 135 1 
17 1 300 1 339 2 40 1 41 1 43 1 70 2 22 1 204 4 180 1 179 1 97 1 206 1 53 1 99 1 345 1 285 1 329 1 101 1 57 1 306 1 27 1 252 2 31 1 186 1 233 1 109 2 292 2 86 2 187 1 131 1 168 1 269 1 236 2 147 1 115 1 135 1 
91 1 150 1 300 1 40 1 339 1 70 1 22 1 204 3 180 1 179 1 329 1 285 1 306 1 310 1 252 1 312 1 31 1 30 1 186 1 233 1 109 2 292 2 187 1 86 1 264 1 269 1 236 1 273 1 135 1 
40 5 2 1 280 1 47 1 325 1 324 1 180 4 53 4 56 1 285 3 329 3 228 1 288 1 231 1 186 4 233 3 64 1 109 6 292 20 187 3 112 1 16 1 300 4 153 1 116 3 302 3 70 21 21 1 118 1 204 41 75 1 247 4 306 4 212 1 79 1 81 1 252 8 126 1 31 5 315 2 130 1 354 1 133 4 
153 1 300 4 116 3 40 5 2 1 302 3 118 1 21 1 70 18 324 1 325 1 47 1 280 1 204 38 180 3 53 4 75 1 56 1 247 4 329 4 285 4 228 2 306 3 212 1 79 1 288 1 81 1 252 7 126 1 231 1 31 4 186 4 315 2 233 4 109 8 64 1 292 20 187 4 130 1 112 1 354 1 133 4 16 1 
153 1 93 2 300 7 116 2 40 8 2 1 302 4 118 1 21 1 70 25 324 1 325 1 47 1 280 1 204 52 180 7 53 7 75 1 56 1 247 4 329 2 285 2 228 1 306 7 212 1 79 1 288 1 81 1 252 14 126 1 231 1 31 8 186 7 315 1 233 2 109 4 64 2 292 27 187 2 130 1 112 1 133 4 
300 3 116 1 40 3 302 1 70 10 324 2 280 1 204 19 180 3 53 3 75 1 247 2 329 2 285 2 306 3 288 1 81 1 252 6 231 1 31 3 186 3 315 1 233 2 109 4 64 1 292 9 187 2 354 1 294 1 133 2 
300 3 116 2 40 3 302 2 70 12 21 1 324 1 280 1 47 1 204 26 180 2 53 2 75 1 247 4 329 3 285 3 228 2 306 2 212 1 79 1 288 1 81 1 252 4 126 1 231 2 31 2 186 3 315 2 233 3 109 6 292 14 187 3 112 1 133 2 
152 1 262 1 18 1 335 1 15 1 209 1 37 1 355 1 59 1 12 1 
234 1 287 1 
332 1 152 1 262 1 18 1 198 1 226 1 335 1 209 1 37 1 
152 1 18 1 335 1 200 1 71 1 326 1 256 2 214 1 50 1 262 1 338 1 15 1 100 1 209 1 36 1 37 1 355 1 59 1 
152 1 18 1 335 1 200 1 71 1 326 1 256 2 214 1 50 1 262 1 338 1 15 1 100 1 209 1 36 1 37 1 355 1 59 1 
152 1 18 1 335 1 200 1 71 1 326 1 256 2 214 1 50 1 262 1 338 1 15 1 100 1 209 1 36 1 37 1 355 1 59 1 
291 1 321 1 255 1 
291 1 321 1 255 1 
104 1 257 1 
104 1 255 1 257 1 
68 1 76 1 
150 2 152 1 18 1 1 1 68 1 274 1 200 1 179 2 327 1 100 1 209 1 286 1 76 1 287 1 348 1 312 2 335 1 256 1 316 1 262 1 234 1 264 2 269 2 338 1 36 1 319 1 37 1 
291 1 321 1 
104 1 255 1 257 1 
150 2 17 1 217 1 41 2 175 1 70 1 22 1 204 2 49 1 179 2 206 1 345 1 140 1 285 1 329 1 26 1 210 2 101 2 249 1 162 1 310 1 233 1 317 1 109 2 292 1 187 1 131 1 168 2 113 1 269 2 135 1 
237 1 172 1 192 1 17 1 41 2 155 1 176 1 341 1 203 1 72 1 23 1 261 1 97 1 206 1 224 1 168 2 270 1 101 2 170 2 
172 1 192 1 17 1 41 1 155 1 44 1 176 1 341 1 203 1 23 1 261 1 206 1 224 1 168 1 270 1 101 1 170 2 
193 1 17 1 41 1 63 1 158 1 72 1 261 1 206 1 263 1 131 1 54 1 168 1 345 1 101 1 
237 1 172 1 192 1 17 1 41 1 155 1 176 1 341 1 203 1 72 1 23 1 261 1 206 1 224 1 168 1 270 1 101 1 170 2 
266 1 
92 1 283 1 243 1 349 1 297 1 296 1 214 1 
92 1 199 1 200 1 342 1 138 1 283 1 55 1 328 1 245 1 100 1 289 1 213 1 214 1 267 1 268 1 295 1 297 1 
17 2 300 1 40 1 41 1 4 2 199 2 200 2 219 1 342 2 24 2 96 1 222 1 138 2 303 1 206 1 283 2 55 2 245 1 345 1 100 2 101 1 330 1 307 1 163 1 10 1 11 1 336 1 62 2 63 1 258 1 186 1 131 4 168 1 268 2 295 2 271 1 147 1 297 3 
300 2 116 1 40 2 199 1 302 1 21 1 47 1 342 1 24 5 138 1 283 6 55 3 306 2 79 1 126 1 62 5 31 2 186 2 112 1 133 1 295 1 297 4 
199 1 200 1 117 1 325 1 342 1 241 1 138 1 56 1 100 1 122 1 295 1 
92 1 349 1 199 1 342 1 214 1 138 1 283 1 295 1 296 1 297 1 
300 1 40 1 55 1 62 1 297 2 186 1 24 1 
92 1 245 1 268 1 200 1 100 1 214 1 
17 1 299 1 322 2 41 4 199 2 301 1 200 3 177 1 278 1 342 2 138 2 206 1 283 2 223 2 54 1 345 1 245 2 100 3 101 4 102 1 10 2 127 1 63 2 263 1 131 1 168 4 268 4 295 1 297 2 
150 2 17 1 41 1 175 1 276 1 43 1 70 1 22 1 204 1 179 3 206 1 99 1 345 1 329 1 285 1 101 1 27 1 312 2 63 1 233 1 109 2 187 1 235 1 264 2 131 1 168 1 269 3 319 1 273 2 147 1 115 1 135 1 
92 1 10 1 199 1 62 1 342 1 214 1 138 1 283 1 223 1 55 1 295 1 297 1 
18 1 335 1 32 1 
18 1 335 1 15 1 76 1 77 1 
18 1 335 1 32 1 
18 1 335 1 32 1 
18 1 3 1 335 1 
18 1 3 1 335 1 
18 1 3 1 335 1 
18 1 335 1 
152 1 37 1 
153 1 40 1 116 1 2 1 302 1 118 1 70 4 47 1 325 1 204 8 53 2 56 1 329 1 285 1 81 1 252 2 31 1 233 1 109 2 292 4 187 1 130 1 133 1 
153 1 300 1 116 1 40 2 2 1 302 1 118 1 70 5 325 1 47 1 157 1 204 11 180 1 53 2 56 1 329 2 285 2 81 1 252 3 31 1 186 1 233 2 109 4 64 1 292 6 187 2 130 1 133 2 
153 1 300 2 116 1 40 3 2 1 302 1 118 1 70 10 21 1 325 1 157 1 47 1 204 19 180 1 53 3 56 1 329 3 285 3 228 1 306 2 79 1 81 1 252 4 126 1 31 3 186 2 233 3 109 6 292 9 187 3 130 1 112 1 133 1 
153 1 300 2 116 1 40 3 2 1 302 1 118 1 70 7 21 1 325 1 157 1 47 1 204 17 180 2 53 3 56 1 329 3 285 3 228 1 306 1 79 1 81 1 252 5 126 1 31 2 186 2 233 3 109 6 292 10 187 3 130 1 112 1 133 1 
153 1 40 1 116 1 2 1 302 1 118 1 70 4 47 1 325 1 204 8 53 2 56 1 329 1 285 1 81 1 252 2 31 1 233 1 109 2 292 4 187 1 130 1 133 1 
300 2 116 1 40 2 302 1 70 6 21 1 47 1 204 12 180 1 53 1 329 1 285 1 306 2 79 1 81 1 252 2 126 1 31 2 186 2 233 1 109 2 292 6 187 1 112 1 133 1 
153 1 300 2 116 1 40 3 2 1 302 1 118 1 70 8 21 1 325 1 47 1 157 1 204 18 180 2 53 3 56 1 329 4 285 4 228 2 306 1 79 1 81 1 252 5 126 1 31 2 186 2 233 4 109 8 292 10 187 4 130 1 112 1 133 1 
300 3 116 1 40 3 302 1 70 7 21 1 47 1 204 16 180 3 53 3 329 4 285 4 228 2 306 2 79 1 81 1 252 6 126 1 31 2 186 3 233 4 109 8 292 9 187 4 112 1 354 1 133 1 
153 1 40 1 2 2 252 6 70 4 31 1 325 3 204 7 180 3 292 3 53 3 130 1 56 3 
153 1 300 2 116 1 40 3 2 1 302 1 118 1 70 8 21 1 325 1 47 1 204 18 180 1 53 3 56 1 329 4 285 4 228 2 306 1 79 1 81 1 252 4 126 1 31 2 186 2 233 4 109 8 292 10 187 4 130 1 112 1 354 1 133 1 
153 1 40 1 252 3 2 1 118 1 70 4 31 1 325 1 204 8 233 2 180 1 109 4 292 4 187 2 130 1 53 2 56 1 285 2 329 2 228 1 
153 1 40 1 2 1 252 2 118 1 70 3 31 1 325 1 204 6 292 3 243 1 53 2 130 1 56 1 
300 1 40 1 252 2 70 2 31 1 157 1 204 4 186 1 233 1 109 2 180 1 292 2 187 1 53 1 285 1 329 1 306 1 
300 1 116 1 40 1 252 2 302 1 70 4 31 1 204 7 186 1 64 1 180 1 292 3 53 1 133 2 306 1 
153 1 300 2 93 1 40 3 2 1 302 2 118 1 70 12 325 2 204 23 180 4 53 5 56 2 285 2 329 2 228 2 305 1 306 2 252 9 106 1 31 3 186 2 233 2 64 1 109 4 292 11 187 2 130 1 133 2 
70 1 133 1 204 1 
292 1 302 1 204 1 
300 1 40 1 252 3 70 3 31 1 157 1 219 1 204 6 186 1 233 1 109 2 180 1 292 3 187 1 53 2 329 1 285 1 306 1 
300 2 116 1 40 2 302 1 70 6 21 1 47 1 204 12 180 1 53 1 329 1 285 1 306 2 79 1 81 1 252 2 126 1 31 2 186 2 233 1 109 2 292 6 187 1 112 1 133 1 
40 1 252 2 70 3 31 1 325 1 204 6 180 1 292 3 130 1 53 1 56 1 
153 1 252 2 2 1 70 2 325 1 204 3 233 1 180 1 109 2 292 1 187 1 53 1 56 1 285 1 329 1 305 1 228 1 
53 1 252 1 56 1 122 1 325 1 
81 1 40 1 252 1 204 2 186 1 233 1 109 2 180 1 292 2 187 1 285 1 329 1 
300 1 81 1 40 1 252 2 70 2 31 1 204 4 186 1 233 1 109 2 180 1 292 2 187 1 53 1 285 1 329 1 306 1 
81 1 252 2 70 2 325 1 204 3 233 3 109 6 180 1 292 1 187 3 53 1 354 1 56 1 285 3 329 3 228 1 305 1 
153 1 300 3 116 1 40 5 2 1 302 3 118 1 70 18 325 3 157 1 204 34 180 5 98 1 53 7 56 3 329 5 285 5 305 1 228 2 306 3 81 1 252 12 311 1 31 5 186 3 233 5 109 10 64 1 128 1 292 16 187 5 130 2 354 1 133 4 
179 1 150 1 230 1 83 1 269 1 319 1 136 1 
347 1 150 1 82 1 230 1 83 1 84 1 51 1 179 1 337 1 269 1 319 1 136 1 
17 1 206 1 263 1 243 1 131 1 54 1 41 1 168 1 345 1 63 1 101 1 
150 1 17 1 41 1 312 1 43 1 63 1 260 1 179 2 206 1 264 1 131 1 99 1 168 1 345 1 269 2 319 1 101 1 147 1 
125 1 150 2 17 1 322 1 41 1 312 2 43 1 185 1 277 1 260 1 179 2 206 1 208 1 264 1 131 3 99 1 168 1 345 2 269 2 319 1 101 1 272 1 147 2 
150 2 17 1 41 2 322 1 277 1 179 2 206 1 208 1 99 1 345 2 101 2 125 1 312 2 185 1 260 1 264 1 131 3 35 1 168 2 269 2 132 1 319 1 147 2 272 1 
17 1 92 1 41 3 322 1 4 1 200 2 277 1 96 1 206 1 345 1 100 2 101 3 63 1 214 1 166 1 111 1 131 4 35 1 168 3 268 1 271 1 272 1 147 1 
307 1 92 1 17 1 322 1 41 3 4 1 63 1 200 2 277 1 214 1 96 1 206 1 131 4 35 1 168 3 345 1 268 1 100 2 101 3 147 1 272 1 271 1 
151 1 17 1 206 1 41 1 168 1 101 1 
17 1 215 1 206 1 303 1 131 1 41 1 168 1 345 1 63 1 101 1 147 1 160 1 
217 1 40 1 41 1 2 1 43 1 323 1 325 1 179 2 97 1 53 2 99 1 56 1 329 2 285 2 101 1 57 1 233 2 109 4 292 3 187 2 236 1 147 1 115 1 150 1 17 1 153 1 339 1 70 3 118 1 22 2 204 6 206 1 345 1 27 1 310 1 252 2 312 1 31 1 260 1 86 1 264 1 130 1 131 1 168 1 269 2 319 2 135 2 
92 1 41 1 4 1 199 2 200 3 278 1 342 2 222 1 96 1 138 2 283 1 245 1 100 3 101 1 330 1 307 1 349 1 336 1 63 1 214 1 316 1 131 2 168 1 268 2 295 2 271 1 297 1 296 1 
151 1 17 2 41 2 258 1 97 1 303 1 206 1 131 2 168 2 345 1 101 2 271 1 147 1 
78 1 17 1 41 4 63 1 97 1 263 1 206 1 54 1 131 1 35 1 168 4 345 1 101 4 
28 1 17 1 215 1 206 1 196 1 131 1 41 1 168 1 345 1 239 1 101 1 147 1 
172 1 192 1 17 1 206 1 41 1 155 1 168 1 63 1 101 1 170 1 
249 1 17 1 41 2 23 1 97 1 206 1 131 1 168 2 345 1 140 1 101 2 
249 1 144 1 9 1 78 1 17 2 322 1 41 5 63 1 97 1 263 1 206 2 54 1 131 3 168 5 345 2 101 4 
103 1 249 1 144 1 78 1 17 2 322 1 41 5 63 1 97 1 263 1 206 2 54 1 131 3 168 5 345 2 101 4 
150 1 17 1 41 1 312 1 63 1 260 1 179 2 206 1 264 1 131 1 99 1 168 1 345 1 269 2 132 1 319 1 101 1 147 1 
17 1 215 1 206 1 303 1 131 1 41 1 322 1 168 1 345 1 101 1 147 1 160 1 
150 1 194 1 49 1 317 1 179 1 284 1 269 1 26 1 159 1 
298 1 238 1 284 1 
194 1 284 1 201 1 319 1 159 1 
125 1 298 1 92 1 194 2 105 1 238 1 185 1 200 2 201 2 214 1 316 1 96 1 108 1 352 1 208 1 284 1 100 2 319 1 159 2 
67 1 243 1 254 1 350 1 
67 1 25 1 275 1 254 1 350 1 232 1 178 1 
250 1 39 1 232 1 
67 1 275 2 156 1 254 1 178 1 232 2 350 1 7 1 95 1 34 1 74 1 25 1 87 1 
67 1 25 1 275 2 5 1 254 1 350 1 232 2 178 1 142 1 
67 1 172 1 80 1 275 1 178 1 232 1 34 1 25 1 224 1 89 1 170 1 
67 1 34 1 25 1 275 1 254 1 232 1 178 1 
34 1 25 1 275 1 254 2 350 1 232 1 178 1 
67 1 275 2 60 1 254 1 178 2 232 2 34 1 353 1 120 1 25 2 
67 2 275 3 254 1 350 1 178 1 232 3 34 1 33 1 25 1 188 1 89 1 169 1 142 2 
67 1 172 1 155 1 275 2 313 1 254 1 350 1 178 1 232 2 203 1 34 1 25 1 224 1 170 2 142 1 
67 2 275 4 5 1 254 1 350 1 178 2 232 4 34 1 110 1 25 2 188 1 89 1 142 2 
67 1 34 1 25 1 275 1 254 1 350 1 232 1 178 1 
67 3 275 4 156 1 254 2 350 2 232 4 178 1 95 1 7 1 25 1 87 1 188 1 89 1 142 2 
67 1 94 1 275 2 19 1 254 1 178 1 232 2 350 1 34 1 25 1 13 1 142 1 
67 1 275 3 156 1 254 1 178 1 232 3 350 1 7 2 95 2 34 1 25 1 207 1 
67 2 119 1 318 1 216 2 
34 1 282 1 25 1 275 1 232 1 178 1 
67 1 33 1 34 1 25 1 275 2 254 1 350 1 232 2 178 1 142 1 
58 1 
67 1 34 1 25 1 275 1 254 1 350 1 232 1 178 1 
33 1 67 1 34 1 25 1 275 3 254 1 350 1 232 3 178 1 95 1 142 1 
67 1 87 1 188 1 89 1 
67 1 254 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 327 210 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 327 210 258 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 327 138 205 72 (64,82) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 30 52 201 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 30 52 201 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 30 52 201 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 30 52 201 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 30 52 201 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 167 17 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 54 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 327 168 68 106 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 327 210 304 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 327 210 249 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 30 98 146 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 30 328 241 270 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 327 138 205 72 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 30 328 241 270 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 327 138 205 72 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 327 210 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 327 210 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 327 237 227 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 327 237 227 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 327 237 227 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 327 237 227 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 327 237 227 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 30 98 146 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (133,329) 300 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 327 210 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 319 195 173 (38,326) (38,326) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 319 195 173 (38,326) (38,326) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 54 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 327 168 301 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 327 168 68 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 327 168 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 30 160 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 327 147 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 327 168 301 79 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 30 328 144 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 327 193 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 319 195 173 262 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 30 328 241 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 30 328 241 22 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 319 195 173 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 327 168 301 274 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (133,329) (133,329) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 319 195 173 (38,326) (38,326) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (133,329) 300 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (133,329) (133,329) 
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 1 260 2 95 1 225 1 57 2 11 1 105 1 153 1 233 9 158 2 67 1 110 3 198 1 24 5 275 1 117 2 278 9 31 2 123 4 35 1 325 1 130 2 240 1 86 2 40 1 245 1 333 6 44 1 
297 1 260 2 95 1 225 1 57 2 11 1 105 1 153 1 233 9 67 1 110 3 158 2 198 1 24 5 275 1 117 2 278 9 31 2 123 4 35 1 325 1 130 2 240 1 86 2 40 1 245 1 333 6 44 1 
297 1 260 2 95 1 225 1 57 2 11 1 105 1 153 1 233 10 67 1 110 4 158 2 198 1 24 6 275 1 117 2 278 10 31 2 123 5 35 1 325 1 130 2 240 1 86 2 40 1 245 1 333 7 44 1 
297 1 260 2 95 1 225 1 57 2 11 1 105 1 153 1 233 7 67 1 110 2 158 1 198 1 24 4 275 1 117 2 278 7 31 2 123 3 35 1 325 1 130 2 240 1 86 2 40 1 333 4 44 1 
278 4 31 1 260 1 95 1 123 2 57 1 11 1 325 1 130 1 105 1 240 1 86 1 233 4 110 1 158 2 245 1 333 3 24 3 
294 1 48 1 3 1 278 2 117 1 31 1 260 1 225 1 325 1 130 1 105 1 240 1 86 1 153 1 233 2 24 1 
278 3 117 1 123 1 325 1 130 2 105 1 240 1 86 2 233 3 110 1 198 1 333 1 24 2 
95 1 260 1 57 1 11 1 105 1 266 1 233 9 110 3 158 2 198 1 24 5 117 1 278 9 31 1 123 4 35 1 325 1 130 2 240 1 86 2 40 1 333 7 334 1 245 1 
95 1 260 1 57 1 11 1 105 1 266 1 233 9 110 3 158 2 198 1 24 5 117 1 278 9 31 1 123 4 35 1 325 1 130 2 240 1 86 2 40 1 333 7 334 1 245 1 
71 1 206 1 54 1 
189 1 190 2 206 1 
60 2 292 2 140 2 142 1 51 2 89 1 164 2 199 2 
292 2 47 1 140 2 49 2 142 1 51 2 5 1 184 1 6 1 299 1 100 1 60 3 187 2 61 1 307 1 229 1 63 1 230 1 199 2 27 1 159 1 312 1 202 2 164 3 210 1 87 1 327 1 288 1 336 1 
60 1 292 1 140 1 62 1 142 1 51 1 164 1 111 1 199 1 335 1 
115 1 71 1 254 1 51 1 181 1 203 1 206 1 164 1 122 1 60 1 21 1 219 1 335 1 250 1 
292 1 115 1 71 1 140 1 51 1 181 2 203 1 206 1 164 1 122 2 60 1 21 1 199 1 219 1 335 1 
39 1 214 1 181 1 217 1 122 1 
71 1 39 1 75 1 181 2 19 1 217 1 206 1 122 2 
39 1 181 1 122 1 
292 1 140 1 142 1 181 1 51 1 164 1 122 1 60 1 62 1 217 1 111 1 42 1 199 1 335 1 
206 1 
0 1 71 1 39 1 75 1 181 2 217 1 206 1 122 2 
71 1 116 2 75 1 181 5 183 1 206 1 279 1 122 5 124 1 305 2 39 2 264 1 66 2 309 1 175 1 109 1 265 1 217 2 136 1 
89 1 54 1 
292 1 140 1 51 2 161 1 164 2 60 2 89 2 199 1 246 1 
188 1 82 1 172 1 
47 1 178 1 27 1 49 1 312 1 202 1 184 1 164 1 299 1 60 1 187 1 63 1 229 1 230 1 87 1 89 1 
292 1 47 1 27 1 140 1 49 1 312 1 51 1 202 1 184 1 164 2 299 1 120 1 60 2 187 1 82 1 229 1 63 1 230 1 87 1 269 1 
292 4 46 1 254 1 276 1 140 4 51 5 164 5 120 1 60 5 89 1 232 1 269 2 199 1 246 1 
60 2 292 2 140 2 51 2 164 2 56 1 111 1 335 1 
60 3 292 3 140 3 51 3 89 1 269 1 164 3 199 1 
60 1 292 1 140 1 51 1 164 1 111 1 335 1 
60 1 292 1 140 1 51 1 161 1 164 1 199 1 335 1 246 1 
292 3 47 1 140 3 49 1 142 1 51 3 181 1 184 1 258 1 6 1 299 1 60 4 187 1 61 1 229 1 63 1 230 1 21 1 269 1 199 2 115 1 27 1 159 1 312 1 203 1 202 1 164 4 120 1 122 1 322 1 210 1 87 1 327 1 288 1 246 1 219 1 335 1 336 1 
60 2 292 1 254 1 276 1 140 1 51 2 89 1 164 2 269 1 
292 3 115 1 140 3 181 1 51 3 203 1 206 1 164 3 120 1 122 1 302 1 60 3 322 1 21 1 269 2 199 1 246 1 335 1 219 1 
292 2 140 2 51 2 164 2 188 1 60 2 82 1 269 1 199 1 246 1 
47 1 27 1 49 1 312 1 202 1 184 1 164 1 299 1 60 1 187 1 63 1 229 1 87 1 230 1 89 1 
27 1 49 1 92 1 312 1 202 1 184 1 164 1 60 1 187 1 36 1 63 1 229 1 87 1 230 1 89 1 
138 1 72 1 159 1 308 1 64 1 327 1 205 1 6 1 336 1 
115 1 60 1 292 1 140 1 51 1 164 1 56 1 335 1 
282 1 182 1 
282 1 182 1 
29 1 141 1 
29 1 141 1 
29 1 141 1 
93 1 282 1 182 1 
93 1 282 1 182 1 
282 1 182 1 69 1 
29 1 141 1 282 2 182 2 8 1 226 1 
93 1 282 1 182 1 
282 1 88 1 182 1 
282 1 88 1 182 1 
282 1 88 1 182 1 
292 2 73 1 255 1 2 1 140 2 51 2 181 1 182 1 316 1 185 1 118 1 259 1 164 2 186 1 321 1 122 1 166 1 60 2 282 1 192 1 89 1 242 1 69 1 114 1 
2 2 181 2 182 2 118 2 206 1 204 1 186 2 166 2 122 2 226 1 169 1 15 1 282 2 65 1 285 2 242 3 112 1 248 1 114 1 
31 1 260 1 57 1 
48 1 31 1 260 1 
91 1 48 1 284 1 281 1 260 3 57 2 
228 1 91 1 48 1 281 1 260 2 57 1 
91 1 48 1 281 2 260 2 57 1 
138 1 181 5 257 1 259 1 223 2 97 1 189 1 305 1 190 3 66 1 109 3 155 1 197 1 156 2 22 1 71 1 73 1 116 1 75 1 205 1 279 1 206 2 321 1 122 5 170 1 283 2 241 1 39 1 328 1 217 4 134 1 136 2 
138 3 139 1 256 1 4 1 181 9 257 2 223 6 189 3 305 2 190 9 107 5 66 2 109 8 22 3 23 1 71 1 73 4 116 2 75 1 205 3 206 5 279 1 122 9 124 1 128 1 170 1 283 6 241 3 39 6 214 5 328 3 217 7 134 2 135 1 136 6 
138 1 181 3 257 1 97 1 223 2 189 2 305 1 190 4 66 1 109 3 155 1 156 1 22 1 71 1 73 1 116 1 205 1 206 3 122 3 124 1 241 1 283 2 328 1 217 2 134 1 136 2 
138 2 4 1 181 4 257 1 223 4 97 1 189 3 305 1 190 7 66 1 109 5 155 1 156 2 22 2 23 1 71 1 73 2 116 1 205 2 206 4 122 4 124 1 128 1 283 4 241 2 328 2 134 1 217 3 136 4 
230 1 54 1 137 1 
230 1 163 1 
25 1 
27 1 229 1 230 1 
151 1 230 1 
229 1 230 1 
27 1 229 1 174 1 230 3 76 1 137 2 
201 1 30 1 52 1 200 1 
201 1 30 1 52 1 200 1 
201 1 30 1 52 1 9 1 200 1 
201 1 30 1 52 1 200 1 
201 1 30 1 52 1 200 1 
49 1 48 1 143 1 296 1 184 1 260 2 221 1 149 1 57 1 187 1 16 1 105 1 233 2 24 1 273 1 202 1 278 2 117 1 31 1 280 1 238 1 325 1 130 1 211 1 240 1 86 1 87 1 284 1 333 1 90 1 
49 1 220 1 48 1 143 1 296 1 184 1 260 2 221 1 149 1 57 1 187 1 16 1 233 3 24 1 202 1 278 3 117 1 31 1 32 1 280 1 238 1 325 1 130 1 80 1 211 1 240 1 86 1 87 1 284 1 333 2 
48 1 220 1 49 1 278 2 202 1 143 1 117 1 31 1 184 1 32 1 296 1 280 1 260 2 221 1 149 1 57 1 187 1 325 1 211 1 240 1 87 1 284 1 233 2 333 2 24 1 
252 1 49 1 143 2 184 1 296 2 149 2 187 1 191 1 63 1 229 1 230 1 233 1 202 1 278 1 117 2 125 1 130 1 80 1 86 1 87 1 215 1 330 1 247 1 
49 1 220 1 48 1 143 1 296 1 184 1 260 2 221 1 149 1 57 1 187 1 16 1 105 1 233 1 273 1 202 1 278 1 117 1 31 1 280 1 238 1 130 1 211 1 86 1 87 1 284 1 
127 1 
254 1 49 2 51 1 181 3 184 1 222 1 60 1 187 2 305 1 263 1 17 1 63 2 229 1 230 1 66 1 109 1 21 1 268 1 115 1 116 1 75 1 203 1 202 2 164 1 279 1 122 3 320 1 167 1 81 1 39 2 87 1 215 1 134 1 335 1 219 1 136 1 247 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 0 1 254 1 181 3 75 1 51 1 203 1 164 1 122 3 167 1 60 1 17 1 81 1 39 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 116 1 51 1 181 2 203 1 164 1 279 1 122 2 167 1 60 1 305 1 17 1 81 1 66 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 181 2 51 1 203 1 164 1 122 2 167 1 60 1 17 1 81 1 21 1 268 1 335 1 219 1 250 1 
115 1 254 1 116 1 51 1 181 2 203 1 164 1 279 1 122 2 167 1 60 1 305 1 17 1 81 1 66 1 21 1 268 1 335 1 219 1 250 1 
173 1 38 1 326 1 159 1 308 1 195 1 54 1 6 1 319 1 336 1 
45 1 168 1 106 1 159 1 327 1 6 1 68 1 336 1 
292 1 45 1 140 1 159 1 51 1 164 1 6 1 120 1 60 1 304 1 210 1 327 1 269 1 336 1 
292 1 45 1 140 1 49 1 159 1 51 1 202 1 164 1 6 1 120 1 187 1 60 1 210 1 63 1 327 1 269 1 249 1 336 1 
187 1 49 1 63 1 159 1 30 1 202 1 146 1 6 1 98 1 102 1 336 1 
251 1 45 1 292 1 140 1 159 1 30 1 51 1 6 1 164 1 60 1 241 1 328 1 22 1 199 1 246 1 336 1 
241 1 159 1 308 1 30 1 328 1 6 1 270 1 336 1 
138 1 72 1 159 1 308 1 327 1 205 1 6 1 336 1 
241 1 159 1 308 1 30 1 328 1 6 1 22 1 336 1 
241 1 159 1 30 1 328 1 6 1 270 1 102 1 336 1 
138 1 72 1 159 1 327 1 205 1 6 1 102 1 336 1 
241 1 159 1 30 1 328 1 6 1 22 1 102 1 336 1 
241 1 159 1 30 1 328 1 6 1 22 1 336 1 
47 1 27 1 49 1 159 1 312 1 202 1 184 1 6 1 164 1 299 1 60 1 187 1 210 1 63 1 229 1 230 1 87 1 327 1 288 1 336 1 
27 1 49 1 92 1 159 1 312 1 202 1 184 1 6 1 164 1 60 1 187 1 36 1 210 1 83 1 63 1 229 1 230 1 87 1 327 1 336 1 
45 1 241 1 159 1 30 1 328 1 6 1 22 1 336 1 
47 1 27 1 49 1 159 1 312 1 30 1 202 1 184 1 6 1 164 1 299 1 60 1 187 1 241 1 229 1 230 1 87 1 328 1 288 1 22 1 290 1 90 1 336 1 
293 1 45 1 292 1 140 1 159 1 30 1 51 1 6 1 164 1 60 1 241 1 328 1 22 1 199 1 246 1 336 1 
227 1 70 1 306 1 159 1 327 1 216 1 176 1 237 1 
227 1 70 1 306 1 159 1 327 1 216 1 176 1 237 1 
227 1 70 1 306 1 159 1 327 1 216 1 176 1 237 1 
227 1 70 1 306 1 159 1 327 1 216 1 176 1 237 1 
227 1 70 1 306 1 159 1 327 1 216 1 176 1 237 1 
169 1 2 1 282 1 182 1 118 1 186 1 112 1 166 1 226 1 103 1 
192 1 69 1 
2 1 282 1 182 1 118 1 244 1 55 1 186 1 166 1 10 1 
93 1 243 1 
88 1 162 1 8 1 
2 1 181 1 182 1 118 1 206 1 204 1 186 1 122 1 166 1 226 1 169 1 15 1 282 1 285 1 242 2 112 1 248 1 114 1 
2 1 181 1 182 1 118 1 206 1 204 1 186 1 122 1 166 1 226 1 169 1 15 1 282 1 285 1 242 2 112 1 248 1 114 1 
2 1 181 1 182 1 118 1 206 1 204 1 186 1 122 1 166 1 226 1 169 1 15 1 282 1 285 1 242 2 112 1 248 1 114 1 
93 1 243 1 8 1 
93 1 243 1 8 1 
88 1 162 1 
88 1 162 1 8 1 
316 1 185 1 
292 2 2 1 255 1 140 2 181 1 51 2 182 1 185 1 186 1 259 1 60 2 15 1 192 1 69 1 73 1 77 1 118 1 316 1 164 2 122 1 166 1 321 1 282 1 89 1 285 1 242 1 217 1 
45 1 179 1 159 1 30 1 51 2 94 1 146 1 164 2 6 1 98 1 60 2 150 1 18 1 336 1 
48 1 220 1 49 2 202 2 31 1 184 1 296 1 280 1 260 2 57 1 238 1 187 2 58 1 211 1 87 1 213 1 284 1 154 1 90 1 
48 1 220 1 49 1 202 1 31 1 296 1 184 1 280 1 260 2 57 1 238 1 187 1 58 1 209 1 211 1 87 1 284 1 
49 1 202 1 184 1 296 1 33 1 125 1 187 1 229 1 63 1 87 1 230 1 215 1 154 1 247 1 
48 1 220 1 49 1 202 1 31 1 184 1 296 1 280 1 260 2 57 1 238 1 187 1 58 1 211 1 213 1 87 1 284 1 154 1 
34 1 
71 1 264 1 183 1 109 1 206 1 54 1 136 1 
181 1 261 1 101 1 189 1 305 1 190 1 152 1 66 1 109 1 71 1 116 1 75 1 279 1 206 2 122 1 39 1 136 1 
181 5 183 1 184 4 96 1 187 3 104 2 13 1 189 6 263 1 190 12 108 1 264 1 109 9 21 2 22 2 113 2 27 3 116 4 202 3 279 4 206 8 205 2 207 1 122 5 39 5 283 6 41 1 286 2 134 2 136 8 137 2 138 2 49 3 147 2 223 6 59 2 305 4 151 2 229 3 63 1 230 10 66 4 71 2 313 2 75 3 163 3 239 2 85 2 174 1 241 2 87 3 328 2 331 2 90 1 
138 2 181 1 224 1 223 5 301 1 104 1 59 2 189 3 263 1 305 2 190 6 66 2 109 8 271 1 22 2 272 1 71 2 116 2 160 1 75 1 279 2 206 5 205 2 121 1 122 1 168 1 79 1 129 1 39 1 283 5 241 2 328 2 287 1 134 1 136 5 
292 1 138 1 140 1 142 1 181 1 51 1 144 1 262 1 104 1 60 1 59 2 305 1 62 1 66 1 109 2 195 1 111 1 199 1 116 1 164 1 279 1 122 1 173 1 131 1 328 2 42 1 335 1 136 2 
71 1 116 1 183 1 279 1 206 1 305 1 264 1 66 1 109 1 136 1 
138 2 147 1 206 5 205 2 223 5 104 1 59 2 189 5 190 10 241 2 283 5 328 2 109 5 22 2 136 5 
71 1 39 1 181 1 75 1 206 1 122 1 
49 4 181 3 184 3 298 1 300 1 222 1 187 4 305 2 263 2 229 2 63 2 108 2 230 2 66 2 109 2 310 1 27 1 116 2 75 2 315 1 202 4 279 1 320 1 122 3 124 1 171 1 39 4 87 2 215 1 329 1 41 1 134 2 136 2 247 1 
292 2 47 1 27 1 140 2 49 1 159 1 312 1 142 1 51 2 202 1 184 1 6 1 164 3 299 1 60 3 187 1 210 1 61 1 229 1 63 1 230 1 87 1 327 1 288 1 199 2 336 1 
71 2 116 1 52 1 279 1 206 4 223 2 189 2 305 1 263 1 190 4 283 2 66 1 109 1 134 1 136 2 
2 1 196 1 186 1 
2 1 196 1 186 1 
14 1 2 1 316 1 186 1 112 1 
2 1 196 1 186 1 
323 1 2 1 186 1 
323 1 2 1 186 1 
323 1 2 1 186 1 
2 1 186 1 
282 1 182 1 
168 1 79 1 70 1 159 1 327 1 301 1 
168 1 79 1 70 1 159 2 327 1 157 1 301 1 
168 1 79 1 70 1 159 1 327 1 301 1 
168 1 79 1 70 1 159 1 327 1 301 1 
168 1 79 1 70 1 159 1 327 1 301 1 
168 1 79 1 70 1 159 1 327 1 301 1 
168 1 79 1 70 1 159 2 327 1 157 1 301 1 
168 1 79 1 70 1 159 2 327 1 301 1 43 1 
173 1 38 1 326 1 195 1 319 1 
168 1 79 1 70 1 159 2 327 1 301 1 43 1 
173 1 38 1 326 1 159 2 277 1 195 1 319 1 
173 1 38 1 326 1 195 1 54 1 319 1 
241 1 159 1 30 1 328 1 157 1 22 1 
168 1 327 1 301 1 
168 1 327 1 68 1 
168 1 327 1 
160 1 30 1 
327 1 147 1 
168 1 79 1 70 1 159 1 327 1 301 1 
30 1 328 1 144 1 
193 1 327 1 
173 1 195 1 319 1 262 1 
70 1 241 1 159 1 30 1 328 1 
70 1 241 1 159 1 30 1 328 1 22 1 
70 1 173 1 159 1 195 1 319 1 
168 1 274 1 70 1 159 3 327 1 157 1 301 1 43 1 
60 1 254 1 276 1 51 1 89 1 53 1 164 1 
234 1 276 1 254 1 311 1 50 1 51 1 295 1 53 1 164 1 60 1 89 1 218 1 
187 1 49 1 229 1 63 1 87 1 230 1 215 1 202 1 184 1 54 1 247 1 
292 1 27 1 140 1 49 1 312 1 51 1 202 1 184 1 164 2 299 1 60 2 187 1 229 1 63 1 230 1 87 1 89 1 269 1 
115 1 292 2 27 2 140 1 49 1 312 1 51 2 202 1 184 1 164 2 299 1 60 2 187 1 239 1 151 1 229 2 230 3 108 1 87 1 89 1 269 1 335 1 219 1 
292 2 140 1 92 1 49 2 51 2 184 1 187 2 60 2 151 1 229 2 108 1 230 3 269 1 115 1 27 2 312 1 202 2 164 2 239 1 87 1 132 1 89 1 219 1 335 1 
26 1 71 1 27 1 49 3 181 2 314 1 202 3 184 1 206 1 163 1 122 2 187 3 239 1 151 1 63 1 229 1 39 1 108 1 230 4 87 1 132 1 21 1 137 1 
71 1 27 1 49 3 313 1 181 2 202 3 184 1 206 1 163 1 122 2 187 3 239 1 151 1 63 1 229 1 39 1 108 1 230 4 87 1 132 1 21 1 137 1 
187 1 49 1 87 1 202 1 184 1 267 1 
27 1 49 1 202 1 184 2 187 1 171 1 63 1 174 1 229 1 230 1 87 1 133 1 329 1 
45 1 292 1 47 1 179 1 140 1 49 1 51 1 184 1 6 2 299 1 60 2 187 1 229 1 230 1 195 1 269 1 27 1 159 2 312 1 202 1 164 2 319 1 173 1 38 1 326 1 87 1 288 1 290 1 90 1 336 2 291 1 
49 1 181 3 183 1 187 1 305 2 63 1 264 1 230 2 66 2 109 1 21 1 71 1 116 2 313 1 75 1 202 1 206 1 279 2 163 1 122 3 85 1 39 2 41 1 286 1 217 1 331 1 136 1 137 1 
27 1 49 2 202 2 184 2 207 1 187 2 174 1 229 1 230 2 87 1 267 1 90 1 137 1 
49 4 202 4 184 1 317 1 187 4 63 1 229 1 230 1 87 1 132 1 215 1 90 1 247 1 
310 1 27 1 235 1 49 1 202 1 184 2 300 1 187 1 171 1 229 1 230 1 87 1 329 1 
187 1 211 1 48 1 49 1 63 1 87 1 202 1 31 1 184 1 260 1 
49 2 220 1 202 2 184 1 318 1 187 2 229 1 194 1 230 1 87 1 90 1 
180 1 49 5 202 5 184 2 317 1 318 1 187 4 63 1 229 2 108 1 230 3 87 2 215 1 177 1 247 1 90 1 
253 1 49 5 202 5 184 2 317 1 318 1 187 4 63 1 229 2 108 1 230 3 87 2 215 1 177 1 247 1 90 1 
292 1 27 1 140 1 49 1 92 1 312 1 51 1 202 1 184 1 164 2 60 2 187 1 229 1 63 1 230 1 87 1 89 1 269 1 
27 1 49 1 202 1 184 2 187 1 171 1 174 1 229 1 108 1 230 1 87 1 133 1 329 1 
1 1 51 1 94 1 164 1 60 1 303 1 12 2 150 1 18 1 231 1 89 1 335 1 
292 1 1 1 140 1 142 1 181 2 51 2 94 1 60 2 12 2 150 1 62 1 18 1 231 1 21 1 111 1 199 1 115 1 71 1 203 1 206 1 164 2 122 2 126 1 322 1 37 1 212 1 217 1 42 1 219 1 335 2 
1 1 231 1 
37 1 12 1 126 1 
325 1 240 1 54 1 24 1 
325 1 130 1 240 1 86 1 278 1 233 1 24 1 
117 1 143 1 278 1 
278 3 225 2 208 1 324 1 130 1 325 1 105 1 86 1 240 1 20 1 233 3 24 1 
325 1 130 1 240 1 86 1 278 2 233 2 158 1 333 1 24 1 
278 1 31 1 260 1 123 1 57 1 11 1 130 1 105 1 86 1 233 1 24 1 
130 1 105 1 240 1 86 1 278 1 233 1 24 1 
325 1 130 1 105 1 240 2 86 1 278 1 233 1 
74 1 278 2 236 1 130 2 105 1 240 1 86 2 233 2 332 1 24 1 
278 3 123 1 35 1 325 1 130 1 105 1 240 1 86 1 40 1 233 3 110 1 333 2 24 2 
48 1 278 2 145 1 31 1 260 2 57 1 325 1 130 1 105 1 240 1 86 1 284 1 233 2 333 1 24 1 
278 4 123 1 325 1 130 2 105 1 240 1 86 2 233 4 158 1 110 1 245 1 333 2 24 2 
325 1 130 1 105 1 240 1 86 1 278 1 233 1 24 1 
278 4 99 1 225 1 123 1 208 1 324 1 325 2 130 1 240 2 86 1 233 4 110 1 333 2 24 3 
278 2 119 1 130 1 325 1 105 1 84 1 240 1 86 1 233 2 334 1 333 1 24 1 
28 1 278 3 225 2 208 2 324 1 130 1 325 1 105 1 86 1 240 1 233 3 24 1 
7 1 78 2 24 2 165 1 
130 1 105 1 86 1 278 1 289 1 233 1 
325 1 130 1 105 1 240 1 86 1 278 2 233 2 333 1 24 1 35 1 
148 1 
325 1 130 1 105 1 240 1 86 1 278 1 233 1 24 1 
325 1 130 1 105 1 240 1 86 1 278 3 233 3 333 1 24 1 225 1 35 1 
110 1 99 1 24 1 123 1 
240 1 24 1 

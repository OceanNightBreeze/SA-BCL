#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 1 107 6 333 4 309 2 151 1 131 1 132 2 291 2 59 1 293 9 354 2 294 1 38 2 83 1 8 5 275 1 13 2 321 3 239 1 344 9 240 1 165 1 241 1 122 1 166 1 305 1 105 1 146 2 
269 1 107 6 333 4 309 2 151 1 131 1 291 2 132 2 59 1 293 9 354 2 294 1 38 2 83 1 8 5 275 1 13 2 321 3 239 1 344 9 240 1 165 1 241 1 122 1 166 1 305 1 105 1 146 2 
269 1 107 7 333 5 309 2 151 1 131 1 291 2 132 2 59 1 293 10 354 2 294 1 38 2 83 1 8 6 275 1 13 2 321 4 239 1 344 10 240 1 165 1 241 1 122 1 166 1 305 1 105 1 146 2 
269 1 107 4 333 3 309 2 151 1 131 1 291 2 132 2 59 1 293 7 354 2 294 1 38 2 83 1 8 4 275 1 13 1 321 2 239 1 344 7 240 1 165 1 122 1 166 1 305 1 105 1 146 2 
13 2 269 1 107 3 321 1 333 2 239 1 344 4 240 1 132 1 291 1 293 4 241 1 354 1 38 1 294 1 8 3 305 1 146 1 
332 1 269 1 239 1 309 1 344 2 240 1 326 1 114 1 132 1 59 1 293 2 7 1 354 1 38 1 8 1 105 1 146 1 
269 1 107 1 321 1 333 1 239 1 309 1 344 3 131 1 240 1 132 2 293 3 354 2 8 2 
13 2 269 1 107 7 55 1 320 1 321 3 333 4 239 1 309 1 344 9 131 1 240 1 291 1 132 2 165 1 293 9 241 1 354 2 38 1 294 1 83 1 8 5 305 1 146 1 
13 2 269 1 107 7 55 1 320 1 321 3 333 4 239 1 309 1 344 9 131 1 240 1 291 1 132 2 165 1 293 9 241 1 354 2 38 1 294 1 83 1 8 5 305 1 146 1 
226 1 84 1 169 1 
341 1 274 2 226 1 
24 2 346 2 82 1 1 1 65 2 72 2 57 2 330 2 
24 3 1 1 350 1 57 3 256 1 113 1 112 1 82 1 273 1 62 1 63 2 277 1 236 1 12 1 279 1 361 2 339 1 65 2 89 1 117 2 367 1 119 1 98 1 346 2 262 1 100 1 70 1 139 1 21 2 101 1 188 1 374 1 102 1 244 1 72 2 330 2 307 2 
24 1 346 1 1 1 65 1 215 1 72 1 31 1 57 1 330 1 34 1 
24 1 205 1 226 1 57 1 211 1 138 1 34 1 37 1 115 1 72 1 84 1 10 1 157 1 250 1 
24 1 65 1 205 1 226 1 57 1 138 2 211 1 34 1 346 1 115 1 72 1 84 1 330 1 157 2 250 1 
0 1 370 1 138 1 157 1 81 1 
0 1 370 1 110 1 206 1 226 1 84 1 138 2 157 2 
0 1 138 1 157 1 
24 1 268 1 1 1 65 1 31 1 57 1 138 1 34 1 370 1 346 1 215 1 72 1 157 1 330 1 
226 1 
0 1 370 1 110 1 171 1 226 1 84 1 138 2 157 2 
331 1 0 2 317 1 252 1 183 1 147 1 90 1 110 1 195 1 226 1 56 1 4 2 368 1 138 5 370 2 257 2 84 1 316 2 157 5 
24 2 279 1 361 1 350 1 89 1 57 2 336 1 256 1 346 1 100 1 139 1 155 1 374 1 102 1 72 1 277 1 63 1 330 1 159 1 307 1 
82 1 169 1 
24 2 238 1 65 1 30 1 57 2 346 1 82 2 72 2 330 1 
155 1 228 1 295 1 
24 1 361 1 350 1 279 1 89 1 57 1 256 1 100 1 300 1 82 1 139 1 374 1 102 1 63 1 277 1 307 1 
24 3 346 3 82 1 65 1 72 3 57 3 330 3 159 1 
24 1 346 1 215 1 72 1 57 1 330 1 34 1 
24 1 346 1 238 1 65 1 72 1 30 1 57 1 330 1 34 1 
24 4 350 1 1 1 30 1 57 4 336 1 256 1 34 1 112 1 82 1 231 1 115 1 273 1 62 1 277 1 63 1 157 1 159 1 236 1 12 1 279 1 361 1 339 1 89 1 65 2 117 2 205 1 367 1 211 1 138 1 346 3 100 1 70 1 139 1 21 1 101 1 374 1 102 1 244 1 72 3 347 1 330 3 250 1 307 1 
35 1 24 2 346 1 82 1 72 2 10 1 57 2 330 1 159 1 
24 3 65 1 205 1 77 1 30 1 226 1 57 3 138 1 211 1 336 1 34 1 346 3 115 1 72 3 347 1 157 1 330 3 159 2 250 1 
24 2 65 1 30 1 57 2 228 1 346 2 155 1 72 2 330 2 159 1 
24 1 361 1 350 1 279 1 89 1 57 1 256 1 100 1 82 1 139 1 374 1 102 1 63 1 277 1 307 1 
24 1 361 1 279 1 163 1 57 1 256 1 100 1 82 1 139 1 374 1 102 1 203 1 63 1 277 1 307 1 
197 1 228 2 290 1 155 2 202 1 62 1 11 1 295 2 179 1 236 1 12 1 339 1 117 2 161 1 367 1 369 1 214 1 262 2 101 1 21 4 22 1 244 2 167 1 329 1 
24 1 346 1 115 1 72 1 57 1 330 1 34 1 41 1 
24 5 65 1 30 1 57 5 336 1 35 1 346 4 6 1 82 1 72 5 9 1 10 1 330 4 159 2 
24 2 346 2 215 1 72 2 57 2 330 2 41 1 34 1 
337 1 29 1 
337 1 29 1 
349 1 170 1 
349 1 170 1 
349 1 170 1 
337 1 134 1 29 1 
337 1 134 1 29 1 
337 1 134 1 29 1 
337 1 76 1 29 1 
337 1 29 1 280 1 
349 1 170 1 337 2 225 1 29 2 58 1 
337 1 76 1 29 1 
337 1 76 1 29 1 
362 2 340 1 29 2 135 1 226 1 323 2 173 1 58 1 324 1 138 2 260 1 372 2 140 2 337 2 189 1 312 1 304 2 103 3 157 2 
24 2 29 1 335 1 57 2 198 1 272 1 82 1 337 1 157 1 362 1 92 1 280 1 323 1 138 1 260 1 120 1 346 2 20 1 140 1 72 2 49 1 103 1 304 1 330 2 
291 1 38 1 146 1 
332 1 38 1 146 1 
332 1 291 2 28 1 38 3 156 1 218 1 
332 1 291 1 28 1 38 2 218 1 149 1 
332 1 291 1 28 2 38 2 218 1 
331 1 0 1 194 1 285 1 110 1 226 2 197 1 56 3 4 1 227 1 80 2 272 1 257 1 202 1 274 3 357 1 84 1 316 1 157 5 341 1 90 2 207 1 209 2 369 1 138 5 120 1 370 4 20 1 282 1 141 1 329 1 377 2 
0 6 251 5 331 1 285 3 195 1 110 1 226 5 197 3 56 8 4 2 227 2 81 5 272 4 257 2 310 1 202 3 274 9 84 1 316 2 157 9 360 1 14 1 341 3 90 6 207 1 209 6 369 3 138 9 299 1 99 1 370 7 123 1 282 2 329 3 377 6 
194 1 285 1 195 1 226 3 197 1 56 3 4 1 227 1 80 1 272 1 257 1 202 1 274 4 84 1 316 1 157 3 341 2 90 2 209 2 369 1 138 3 370 2 282 1 141 1 329 1 377 2 
194 1 285 2 195 1 226 4 197 2 56 5 4 1 227 1 80 2 272 2 257 1 202 2 274 7 84 1 316 1 157 4 14 1 341 3 90 4 209 4 369 2 138 4 299 1 99 1 370 3 282 1 141 1 329 2 377 4 
100 1 108 1 169 1 
100 1 104 1 
359 1 
100 1 279 1 
371 1 100 3 279 1 108 2 289 1 256 1 
100 1 279 1 256 1 
100 1 44 1 
334 1 297 1 172 1 369 1 150 1 174 2 213 1 214 2 262 4 21 7 202 1 327 1 71 1 356 1 244 3 167 3 375 1 
334 1 297 1 172 1 369 1 150 1 174 2 213 1 214 2 262 4 21 7 202 1 327 1 71 1 356 1 244 3 167 3 375 1 
334 1 297 1 172 1 369 1 150 1 174 2 213 1 214 2 262 4 21 7 202 1 327 1 71 1 356 1 244 3 167 3 338 1 375 1 
285 3 109 1 334 1 172 1 197 3 308 1 150 2 33 1 174 3 353 1 202 4 356 1 62 1 116 3 235 1 158 4 339 1 117 2 297 2 322 1 367 1 369 4 213 1 325 1 214 5 262 16 101 1 21 31 71 2 327 5 244 15 167 10 329 3 375 2 
109 1 334 1 172 1 150 1 32 1 174 2 202 1 356 1 62 2 339 2 318 1 117 4 297 1 367 2 369 1 214 3 262 5 101 2 21 9 71 1 327 1 244 4 167 4 375 1 
332 1 269 1 107 1 224 1 309 1 291 1 154 1 132 1 293 2 354 1 38 2 8 1 156 1 63 1 277 1 178 1 361 1 208 1 15 1 239 1 136 1 344 2 186 1 240 1 301 1 102 1 192 1 307 1 146 1 51 1 
332 1 269 1 253 1 107 2 224 1 309 1 291 1 154 1 132 1 293 3 354 1 38 2 8 1 156 1 232 1 63 1 277 1 361 1 208 1 15 1 136 1 344 3 186 1 240 1 102 1 192 1 263 1 307 1 146 1 51 1 
332 1 269 1 107 2 361 1 208 1 15 1 136 1 309 1 186 1 344 2 240 1 291 1 154 1 293 2 38 2 102 1 8 1 156 1 232 1 192 1 263 1 277 1 63 1 307 1 146 1 
128 1 26 1 279 1 86 1 237 1 253 1 361 1 309 2 136 2 344 1 100 1 132 1 154 2 293 1 354 1 374 1 102 1 39 1 192 2 248 1 277 1 63 1 307 1 
332 1 224 1 309 1 291 1 154 1 132 1 293 1 354 1 38 2 156 1 63 1 277 1 178 1 361 1 208 1 15 1 239 1 136 1 344 1 186 1 102 1 192 1 263 1 307 1 146 1 51 1 
315 1 
0 6 331 1 52 1 53 1 110 3 56 2 254 4 4 1 57 1 111 1 5 1 257 1 115 1 10 1 63 2 157 5 341 2 205 1 16 2 211 1 68 1 72 1 23 1 307 2 127 1 128 1 24 1 226 2 34 1 36 2 37 1 175 1 274 2 84 1 311 2 316 1 277 1 279 1 361 2 133 1 90 2 366 2 94 1 138 5 100 1 47 1 374 2 242 2 102 1 282 1 191 2 328 1 248 1 144 2 250 1 
24 1 0 2 53 1 171 1 110 1 254 2 57 1 111 1 34 1 37 1 115 1 10 1 157 3 133 1 205 1 366 1 138 3 211 1 68 1 72 1 328 1 250 1 
0 1 24 1 53 1 171 1 110 1 226 1 254 3 57 1 111 1 34 1 37 1 115 1 84 1 10 1 157 3 133 1 205 1 138 3 211 1 68 1 72 1 328 1 144 1 250 1 
24 1 0 2 53 1 110 1 171 1 226 1 254 3 57 1 111 1 34 1 37 1 115 1 84 1 10 1 157 3 133 1 205 1 366 1 138 3 211 1 68 1 72 1 191 1 328 1 144 1 250 1 
0 3 331 1 1 1 53 1 110 1 254 2 56 1 4 1 57 2 111 1 257 1 115 1 10 1 157 3 65 1 205 1 211 1 68 1 346 1 215 1 72 2 23 1 168 1 24 2 268 1 171 1 226 1 31 1 34 2 37 1 84 1 316 1 278 1 133 1 90 1 184 1 366 2 138 3 191 2 328 1 193 1 330 1 250 1 
331 1 0 4 52 1 53 1 110 2 254 4 56 1 4 1 57 1 111 1 5 1 257 1 115 1 10 1 157 4 205 1 341 2 16 2 211 1 68 1 23 1 72 1 24 1 226 2 34 1 36 2 37 1 274 2 311 2 84 1 316 1 133 1 90 1 366 2 138 4 242 2 191 2 328 1 144 2 250 1 
24 2 331 1 268 1 1 1 53 1 226 1 31 1 56 1 254 2 4 1 57 2 111 1 34 2 257 1 37 1 115 1 84 1 10 1 316 1 157 2 65 1 133 1 205 1 90 1 138 2 211 1 346 1 68 1 215 1 23 1 72 2 328 1 193 1 168 1 330 1 250 1 
24 2 331 1 268 1 1 1 53 1 226 1 31 1 56 1 254 2 4 1 57 2 111 1 34 2 257 1 37 1 115 1 84 1 10 1 316 1 157 2 65 1 133 1 205 1 90 1 138 2 211 1 346 1 68 1 215 1 23 1 72 2 328 1 193 1 168 1 330 1 250 1 
0 4 221 2 24 1 331 1 52 1 53 1 110 2 226 1 56 1 254 4 4 1 57 1 111 1 34 1 36 2 257 1 37 1 115 1 274 2 84 1 311 2 10 1 316 1 157 4 133 1 205 1 90 1 43 1 366 2 210 1 185 1 138 4 211 1 68 1 46 2 191 2 72 1 328 1 74 1 144 2 250 1 
0 1 331 1 1 1 53 1 254 3 56 1 4 1 57 2 111 1 257 1 115 1 10 1 157 2 65 1 205 1 211 1 68 1 346 1 215 1 72 2 23 1 168 1 24 2 268 1 226 1 31 1 34 2 37 1 84 1 316 1 278 1 133 1 90 1 366 1 138 2 191 1 328 1 193 1 144 1 330 1 250 1 
0 1 331 1 1 1 53 1 254 3 56 1 4 1 57 2 111 1 257 1 115 1 10 1 157 2 65 1 205 1 211 1 68 1 346 1 215 1 72 2 23 1 168 1 24 2 268 1 226 1 31 1 34 2 37 1 84 1 316 1 278 1 133 1 90 1 366 1 138 2 191 1 328 1 193 1 144 1 330 1 250 1 
331 1 0 4 52 1 53 1 110 2 254 4 56 1 4 1 57 1 111 1 5 1 257 1 115 1 10 1 157 4 205 1 211 1 68 1 72 1 24 1 221 2 226 1 34 1 36 2 37 1 274 2 311 2 84 1 316 1 133 1 90 1 43 1 366 2 138 4 46 2 191 2 328 1 144 2 250 1 
334 1 172 1 228 1 174 1 82 2 155 1 202 1 356 1 62 1 295 1 236 1 12 1 339 1 117 2 161 1 297 1 367 1 369 1 214 2 262 3 101 1 21 6 244 3 167 2 375 1 169 1 
285 2 197 1 228 4 113 1 82 1 155 11 176 1 202 2 358 1 62 2 116 3 158 3 295 11 235 1 236 1 12 2 339 2 117 4 322 1 367 2 369 1 281 1 214 1 345 1 262 8 70 1 101 2 21 14 327 1 244 6 167 2 329 2 106 1 
24 2 350 1 287 1 57 2 228 1 336 1 256 1 113 1 82 1 62 1 277 1 63 1 159 1 236 1 12 1 279 1 361 1 87 1 89 1 339 1 117 2 367 1 345 1 346 1 100 1 300 1 262 1 139 1 70 1 101 1 21 2 374 1 102 1 72 1 244 1 124 1 330 1 307 1 
285 2 286 2 334 1 197 2 57 3 336 1 256 2 113 1 155 7 202 3 62 3 63 3 295 7 159 1 12 3 339 3 117 6 259 1 297 1 18 1 214 4 346 1 345 1 262 10 70 1 21 20 72 1 167 8 263 1 307 3 24 3 350 2 172 1 228 7 174 1 82 2 273 2 356 1 314 2 177 1 277 2 236 3 361 3 279 2 89 2 367 3 369 3 100 2 139 2 101 3 374 1 48 2 102 2 327 4 190 2 244 10 329 2 375 1 330 1 
24 1 128 1 57 1 199 1 152 1 113 1 204 1 62 2 277 2 63 8 159 1 236 2 12 2 361 7 279 2 339 2 319 1 161 1 117 4 342 1 367 2 17 1 164 1 346 1 301 1 100 3 262 1 70 1 101 2 21 2 374 2 188 2 102 2 72 1 244 1 263 1 248 1 330 1 307 8 
24 1 285 1 30 1 197 1 57 1 228 1 155 1 202 1 62 1 295 1 236 1 12 1 65 1 339 1 117 2 367 1 162 1 369 1 214 1 346 1 345 1 262 1 101 1 21 3 72 1 244 2 167 1 329 1 330 1 
12 1 339 1 161 1 117 2 367 1 228 1 262 2 155 1 21 2 101 1 327 1 202 1 167 1 329 1 62 1 295 1 179 1 236 1 
12 1 339 1 161 1 117 2 367 1 197 1 369 1 228 1 214 1 290 1 155 1 21 2 101 1 244 2 167 1 62 1 295 1 236 1 
12 1 339 1 285 1 161 1 117 2 197 1 367 1 369 1 228 2 214 1 262 2 155 2 21 4 101 1 327 1 202 1 244 2 167 2 329 1 62 1 295 2 236 1 
12 1 339 1 117 2 342 1 367 1 228 1 262 2 155 1 21 2 101 1 327 1 202 1 167 1 329 1 62 1 295 1 179 1 236 1 
12 1 339 1 117 2 342 1 367 1 197 1 369 1 228 1 214 1 290 1 155 1 21 2 101 1 244 2 167 1 62 1 295 1 236 1 
12 1 339 1 285 1 117 2 342 1 197 1 367 1 369 1 228 2 214 1 262 2 155 2 21 4 101 1 327 1 202 1 244 2 167 2 329 1 62 1 295 2 236 1 
12 1 339 1 285 1 117 2 197 1 367 1 369 1 228 2 214 1 262 2 155 2 101 1 21 4 327 1 202 1 244 2 167 2 329 1 62 1 295 2 236 1 
24 1 350 1 57 1 256 1 113 1 82 1 273 1 62 1 277 1 63 1 236 1 12 1 279 1 361 1 89 1 339 1 117 2 367 1 262 1 100 1 139 1 70 1 21 2 101 1 374 1 102 1 244 1 307 1 
24 1 57 1 256 1 113 1 82 1 203 1 62 1 277 1 63 1 236 1 12 1 279 1 361 1 339 1 117 2 367 1 163 1 262 1 100 1 139 1 70 1 21 2 101 1 374 1 102 1 244 1 219 1 307 1 
12 1 339 1 285 1 117 2 197 1 367 1 369 1 228 2 214 1 345 1 262 2 155 2 21 4 101 1 327 1 202 1 244 2 167 2 329 1 62 1 295 2 236 1 
24 1 350 1 285 1 197 1 57 1 228 2 256 1 155 2 273 1 202 1 62 1 277 1 63 1 295 2 236 1 12 1 361 1 279 1 89 1 339 1 117 2 367 1 369 1 214 1 262 2 301 1 100 1 139 1 21 4 101 1 327 1 102 1 190 1 244 2 167 2 329 1 307 1 
24 1 285 1 30 1 78 1 197 1 57 1 228 1 155 1 202 1 62 1 295 1 236 1 12 1 65 1 339 1 117 2 367 1 369 1 346 1 345 1 262 2 101 1 21 3 327 1 244 1 72 1 167 1 329 1 330 1 
223 1 285 2 75 1 197 2 352 1 32 1 202 2 62 2 339 2 117 4 365 1 367 2 66 1 67 2 369 2 214 2 262 6 101 2 21 12 327 2 244 6 217 1 167 4 329 2 265 1 126 2 
285 1 75 1 197 1 352 2 32 1 202 1 62 1 339 1 117 2 365 2 367 1 66 1 67 1 369 1 262 4 101 1 21 8 244 4 329 1 265 1 126 2 
223 1 285 1 75 1 197 1 352 2 32 1 202 1 313 1 62 2 339 2 117 4 365 1 367 2 66 1 67 1 369 1 262 4 101 2 21 8 327 1 244 4 167 1 329 1 265 1 126 2 
223 1 285 1 75 1 197 1 352 2 32 1 202 1 313 1 62 2 339 2 117 4 365 1 367 2 66 1 67 1 369 1 214 1 262 4 101 2 21 8 327 1 244 4 167 2 329 1 265 1 126 2 
285 1 75 1 334 2 197 1 172 2 352 1 32 1 174 2 202 3 356 2 62 1 339 1 117 2 365 1 297 2 367 1 66 1 67 1 369 3 214 3 262 10 101 1 21 18 327 1 244 8 167 4 329 1 375 2 265 1 126 2 
362 1 140 1 337 1 189 1 29 1 304 1 323 1 137 1 173 1 58 1 
280 1 198 1 
270 1 187 1 362 1 140 1 337 1 29 1 93 1 304 1 323 1 
362 1 340 1 29 1 226 1 323 1 173 1 58 1 324 1 138 1 260 1 372 1 140 1 337 1 189 1 312 1 304 1 103 2 157 1 
362 1 340 1 29 1 226 1 323 1 173 1 58 1 324 1 138 1 260 1 372 1 140 1 337 1 189 1 312 1 304 1 103 2 157 1 
362 1 340 1 29 1 226 1 323 1 173 1 58 1 324 1 138 1 260 1 372 1 140 1 337 1 189 1 312 1 304 1 103 2 157 1 
181 1 225 1 134 1 
181 1 225 1 134 1 
85 1 76 1 
85 1 76 1 225 1 
49 1 335 1 
24 2 29 1 335 1 57 2 198 1 272 1 82 1 337 1 157 1 362 1 340 1 92 1 280 1 323 1 138 1 120 1 370 1 346 2 372 1 20 1 140 1 72 2 49 1 304 1 103 1 306 1 330 2 
181 1 134 1 
85 1 76 1 225 1 
24 1 72 1 245 1 57 1 
332 1 361 2 208 1 136 1 186 1 45 1 291 1 301 1 69 1 292 1 38 2 102 1 156 1 263 1 277 1 63 2 307 2 146 1 51 1 
332 1 284 1 361 1 208 1 136 1 186 1 45 1 291 1 38 2 102 1 156 1 263 1 63 1 277 1 307 1 146 1 51 1 
128 1 279 1 361 1 288 1 136 1 100 1 69 1 374 1 102 1 39 1 248 1 277 1 63 1 307 1 
332 1 361 1 208 1 136 1 186 1 45 1 291 1 69 1 292 1 38 2 102 1 156 1 263 1 63 1 277 1 307 1 146 1 51 1 
79 1 
317 1 147 1 90 1 226 1 84 1 56 1 169 1 
331 1 0 1 110 1 226 2 56 1 4 1 257 1 274 1 84 1 316 1 157 1 341 1 90 1 16 1 138 1 242 1 23 1 
331 4 0 5 285 2 147 1 108 2 110 3 56 9 197 2 4 4 256 3 257 4 200 2 202 2 63 3 157 5 205 2 341 6 343 2 209 6 212 1 261 1 301 1 125 2 220 1 307 3 267 1 27 2 226 8 274 12 84 2 276 2 277 3 316 4 317 1 279 3 361 3 88 1 90 8 95 2 369 2 138 5 44 2 371 1 100 10 47 1 374 1 48 2 102 4 282 2 104 3 329 2 378 2 377 6 50 2 
0 1 331 2 25 1 27 1 285 2 54 1 110 1 226 5 56 8 197 2 4 2 257 2 202 2 274 6 84 2 258 1 116 1 316 2 157 1 158 1 160 1 341 3 90 5 209 5 322 1 369 2 138 1 47 1 121 1 282 1 142 1 329 2 264 1 378 2 377 5 
24 1 331 1 268 1 27 1 1 1 334 1 56 2 31 1 4 1 57 1 34 1 257 1 202 2 316 1 157 1 65 1 90 2 364 1 297 1 369 1 138 1 346 1 215 1 72 1 375 1 168 1 330 1 378 2 
331 1 317 1 147 1 90 1 226 1 56 1 4 1 257 1 84 1 316 1 
27 1 285 2 341 5 90 5 209 5 226 5 197 2 56 5 369 2 48 1 202 2 274 10 329 2 378 2 377 5 
0 1 110 1 226 1 84 1 138 1 157 1 
331 1 0 4 128 1 195 1 110 2 56 2 4 2 257 2 175 1 277 1 316 2 63 4 157 3 279 1 361 4 88 2 363 1 90 2 138 3 100 1 47 2 374 2 102 1 282 2 248 1 376 1 220 1 307 4 127 1 
24 3 1 1 350 1 57 3 256 1 112 1 82 1 273 1 62 1 63 1 277 1 236 1 12 1 361 1 279 1 339 1 65 2 89 1 117 2 367 1 346 2 100 1 70 1 139 1 21 1 101 1 374 1 102 1 244 1 72 2 330 2 307 1 
331 1 341 2 90 2 209 2 226 4 56 1 4 1 174 1 257 1 47 1 274 4 282 1 84 2 316 1 377 2 
140 1 3 1 323 1 
140 1 3 1 323 1 
140 1 3 1 323 1 
140 1 247 1 323 1 
140 1 118 1 49 1 323 1 173 1 
140 1 247 1 323 1 
140 1 247 1 323 1 
140 1 323 1 
337 1 29 1 
339 2 117 4 109 1 334 1 297 1 367 2 172 1 369 1 174 1 214 2 262 4 21 8 101 2 202 1 327 1 356 1 244 4 167 3 62 2 375 1 
334 1 297 1 172 1 369 1 174 1 214 2 262 3 21 6 202 1 356 1 244 3 167 2 375 1 169 1 
339 1 285 1 117 2 197 1 367 1 369 1 214 1 262 2 101 1 21 4 202 1 327 1 244 2 167 2 329 1 62 1 249 1 
285 1 197 1 322 1 369 1 214 1 262 3 21 7 202 1 327 1 244 4 167 2 329 1 116 1 158 2 235 1 
285 2 109 2 334 1 172 1 197 2 174 1 60 1 176 1 202 3 356 1 116 2 62 2 235 1 158 2 339 2 117 4 297 2 367 2 369 3 214 5 262 11 21 23 101 2 327 4 244 12 167 9 329 2 375 2 106 1 
21 1 244 1 158 1 
262 1 21 1 116 1 
339 1 285 1 117 2 367 1 197 1 369 1 214 2 262 3 101 1 21 6 48 1 202 1 327 1 244 3 167 3 329 1 62 1 249 1 
285 2 197 2 32 1 202 2 258 1 116 1 62 1 158 1 160 1 339 1 117 2 322 1 367 1 369 2 214 1 262 6 21 12 101 1 121 1 327 1 244 6 142 1 167 2 329 2 264 1 
214 1 262 3 21 6 327 1 202 1 244 3 334 1 297 1 167 2 375 1 369 1 
339 1 117 2 109 1 297 1 172 1 367 1 214 1 262 1 60 1 21 3 101 1 327 1 356 1 244 2 167 2 375 1 62 1 
339 1 117 2 364 1 334 1 297 2 367 1 369 2 32 1 214 3 262 5 101 1 21 10 327 2 202 2 244 5 167 5 62 1 375 2 
262 2 21 2 339 1 101 1 327 1 202 1 117 2 167 1 367 1 329 1 62 1 32 1 
339 1 285 1 117 2 197 1 367 1 369 1 32 1 214 1 262 2 101 1 21 4 202 1 327 1 244 2 167 2 329 1 62 1 
223 1 339 3 117 6 109 1 297 1 367 3 32 1 214 1 262 1 60 1 21 3 101 3 327 1 244 2 167 2 62 3 375 1 
223 1 285 3 109 2 334 2 172 1 197 3 308 1 32 1 174 1 353 1 60 1 202 5 356 1 62 5 116 3 158 4 235 1 339 5 117 10 297 3 322 1 367 5 369 5 325 1 214 7 262 16 101 5 21 34 327 5 244 18 167 12 329 3 375 3 249 1 
160 1 339 1 117 2 334 1 297 1 172 1 367 1 322 1 369 1 32 1 174 1 214 2 262 4 101 1 21 8 202 1 356 1 244 4 167 2 375 1 62 1 116 1 158 1 
285 1 334 1 172 1 32 1 174 1 202 2 356 1 62 2 116 1 158 2 235 1 160 1 339 2 117 4 297 1 322 1 367 2 369 1 214 2 262 6 21 11 101 2 327 1 244 5 167 3 329 1 375 1 249 1 
285 2 109 1 334 1 172 1 197 2 32 1 174 1 202 3 356 1 258 1 116 1 62 3 158 1 160 1 339 3 117 6 297 1 322 1 367 3 369 3 214 3 262 9 21 19 101 3 121 1 327 1 244 10 142 1 167 4 329 2 375 1 264 1 249 1 
285 2 109 1 334 1 172 1 197 1 32 1 174 1 202 3 356 1 258 1 116 1 62 3 158 1 160 1 339 3 117 6 297 1 322 1 367 3 369 2 214 3 262 10 21 17 101 3 121 1 327 2 244 7 142 1 167 5 329 2 375 1 264 1 249 1 
160 1 339 1 117 2 334 1 297 1 172 1 367 1 322 1 369 1 32 1 174 1 214 2 262 4 101 1 21 8 202 1 356 1 244 4 167 2 375 1 62 1 116 1 158 1 
285 2 197 2 32 1 202 2 258 1 116 1 62 1 158 1 160 1 339 1 117 2 322 1 367 1 369 2 214 1 262 6 21 12 101 1 121 1 327 1 244 6 142 1 167 2 329 2 264 1 
285 2 109 2 334 1 172 1 197 1 32 1 174 1 202 3 356 1 258 1 62 4 116 1 158 1 160 1 339 4 117 8 297 1 322 1 367 4 369 2 214 3 262 10 21 18 101 4 121 1 327 2 244 8 142 1 167 5 329 2 375 1 264 1 249 1 
223 1 285 3 109 2 197 2 32 1 202 3 258 1 62 4 116 1 158 1 160 1 339 4 117 8 322 1 367 4 369 2 214 3 262 9 21 16 101 4 121 1 327 3 244 7 142 1 167 6 329 3 264 1 
334 1 297 3 172 2 369 1 214 3 262 3 21 7 327 3 202 1 356 1 244 4 167 6 375 3 
223 1 285 2 109 2 334 1 172 1 197 1 32 1 174 1 202 3 356 1 258 1 62 4 116 1 158 1 160 1 339 4 117 8 297 1 322 1 367 4 369 2 214 3 262 10 21 18 101 4 121 1 327 1 244 8 142 1 167 4 329 2 375 1 264 1 
24 1 35 1 82 1 303 1 72 1 10 1 57 1 
24 1 2 1 196 1 57 1 229 1 35 1 82 1 303 1 72 1 61 1 10 1 40 1 
128 1 100 1 279 1 361 1 374 1 102 1 248 1 277 1 169 1 63 1 307 1 
24 2 279 1 361 1 89 1 57 2 256 1 346 1 100 1 82 1 139 1 374 1 102 1 72 1 63 1 277 1 330 1 159 1 307 1 
24 2 57 2 256 2 34 1 82 1 115 1 277 1 63 1 159 1 361 1 279 2 89 1 88 1 95 1 211 1 44 1 346 1 100 3 139 1 102 1 72 2 330 2 307 1 
24 2 57 2 256 2 34 1 82 1 115 1 234 1 277 1 63 2 159 1 361 2 279 2 88 1 95 1 163 1 211 1 44 1 346 1 100 3 139 1 102 1 72 2 330 2 307 2 
0 1 279 1 361 3 88 1 108 1 205 1 226 1 95 1 138 2 44 1 256 1 100 4 374 1 102 1 216 1 84 1 104 1 234 1 63 3 277 1 157 2 64 1 307 3 
0 1 279 1 361 3 88 1 108 1 205 1 226 1 95 1 138 2 44 1 256 1 100 4 374 1 102 1 84 1 104 1 234 1 63 3 277 1 157 2 307 3 50 1 
361 1 102 1 319 1 277 1 63 1 307 1 
361 6 279 2 319 1 17 1 164 1 256 1 199 1 371 1 301 1 153 1 201 1 100 3 188 1 374 2 102 3 143 1 204 1 263 1 63 7 277 2 307 7 
24 2 350 1 334 1 172 1 57 2 228 1 174 1 256 1 82 2 155 1 273 1 202 1 355 1 356 1 62 2 314 1 277 1 63 1 295 1 159 1 236 2 12 2 279 1 361 1 339 2 89 1 117 4 297 1 367 2 369 1 214 2 345 1 346 1 262 3 100 1 301 1 139 1 21 6 101 2 102 1 190 1 244 3 72 1 167 2 375 1 330 1 307 1 
331 2 0 2 147 1 108 1 110 1 226 1 56 1 4 2 257 2 200 1 84 1 276 1 63 1 316 2 157 3 317 1 361 1 205 1 90 1 138 3 370 1 100 2 374 1 104 1 125 1 220 1 307 1 50 1 
267 1 361 2 279 1 108 1 319 1 256 1 371 1 301 1 100 2 102 2 63 2 277 1 307 2 
128 1 361 4 279 1 271 1 301 1 100 1 374 1 102 1 234 1 248 1 63 4 277 1 307 4 
361 2 279 1 88 1 296 1 259 1 256 1 153 1 100 1 102 2 143 1 63 2 277 1 307 2 145 1 
332 1 361 1 374 1 38 1 102 1 277 1 63 1 186 1 307 1 146 1 
361 2 279 1 301 1 100 1 102 1 204 1 263 1 63 2 277 1 283 1 307 2 
128 1 361 4 279 2 88 1 271 1 164 1 17 1 301 1 100 3 374 1 102 2 204 1 248 1 63 5 277 2 307 5 
128 1 361 4 279 2 88 1 271 1 17 1 255 1 301 1 100 3 374 1 102 2 204 1 248 1 63 5 277 2 307 5 
24 2 279 1 361 1 163 1 57 2 256 1 346 1 100 1 82 1 139 1 374 1 102 1 72 1 63 1 277 1 330 1 159 1 307 1 
361 1 279 1 88 1 256 1 371 1 153 1 201 1 100 1 102 2 143 1 63 1 277 1 307 1 
180 1 243 1 245 1 96 1 
373 1 243 1 246 1 
180 1 82 1 243 1 129 1 96 1 
180 2 42 1 205 1 129 2 226 1 96 2 211 1 138 2 34 1 370 1 82 1 115 1 373 1 243 1 84 1 246 1 347 1 157 2 250 1 
269 1 8 1 169 1 240 1 
269 1 132 1 293 1 354 1 8 1 344 1 240 1 
192 1 309 1 344 1 
269 1 182 1 132 1 59 2 293 3 354 1 8 1 239 1 130 1 298 1 344 3 240 1 
13 1 269 1 132 1 107 1 293 2 354 1 8 1 344 2 240 1 
291 1 132 1 293 1 354 1 38 1 294 1 8 1 333 1 239 1 344 1 146 1 
269 1 132 1 293 1 354 1 8 1 239 1 344 1 
269 2 132 1 293 1 354 1 239 1 344 1 240 1 
269 1 148 1 91 1 239 1 344 2 132 2 293 2 354 2 8 1 73 1 
269 1 107 2 321 1 333 1 239 1 344 3 240 1 132 1 165 1 293 3 354 1 83 1 8 2 
332 1 269 1 107 1 239 1 344 2 240 1 132 1 19 1 291 1 293 2 354 1 38 2 8 1 156 1 146 1 
13 1 269 1 107 2 321 1 333 1 239 1 344 4 240 1 132 2 293 4 354 2 241 1 8 2 
269 1 132 1 293 1 354 1 8 1 239 1 344 1 240 1 
182 1 269 2 107 2 321 1 333 1 130 1 344 4 240 2 114 1 132 1 59 1 293 4 354 1 8 3 
269 1 107 1 320 1 239 1 344 2 97 1 240 1 132 1 293 2 354 1 8 1 348 1 
269 1 182 2 132 1 59 2 230 1 293 3 354 1 8 1 239 1 130 1 344 3 240 1 
302 2 351 1 8 2 233 1 
132 1 293 1 354 1 239 1 266 1 344 1 
269 1 132 1 107 1 165 1 293 2 354 1 8 1 239 1 344 2 240 1 
222 1 
269 1 132 1 293 1 354 1 8 1 239 1 344 1 240 1 
269 1 107 1 239 1 344 3 240 1 132 1 59 1 165 1 293 3 354 1 8 1 
107 1 293 1 8 1 333 1 321 1 344 1 
269 1 8 1 

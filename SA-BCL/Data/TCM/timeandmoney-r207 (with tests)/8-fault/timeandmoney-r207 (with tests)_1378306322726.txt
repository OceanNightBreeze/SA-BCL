#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 288 277 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 288 277 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 288 277 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 288 277 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 288 277 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 350 200 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 6 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 184 132 210 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 184 132 210 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 210 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 246 291 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 36 253 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 6 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 288 (136,272) (136,272) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 206 2 262 2 261 5 22 2 177 1 62 1 131 1 46 9 211 3 338 1 341 1 65 6 242 1 244 1 67 2 140 1 221 2 303 4 325 1 115 1 327 9 346 1 32 1 311 2 351 2 57 1 257 1 
205 1 206 2 262 2 261 5 22 2 177 1 62 1 131 1 46 9 211 3 338 1 341 1 65 6 242 1 244 1 67 2 140 1 221 2 303 4 325 1 115 1 327 9 346 1 32 1 351 2 311 2 57 1 257 1 
205 1 206 2 262 2 261 6 22 2 177 1 62 1 131 1 46 10 211 4 338 1 341 1 65 7 242 1 244 1 67 2 140 1 221 2 303 5 325 1 115 1 327 10 346 1 32 1 351 2 311 2 57 1 257 1 
205 1 206 2 262 2 261 4 22 2 177 1 62 1 131 1 46 7 211 2 338 1 65 4 242 1 244 1 67 2 140 1 221 2 303 3 325 1 115 1 327 7 346 1 32 1 351 2 311 1 57 1 257 1 
205 1 221 1 303 2 262 1 261 3 22 1 325 1 115 1 327 4 177 1 46 4 211 1 351 1 311 2 341 1 65 3 244 1 67 1 
205 1 221 1 261 1 262 1 206 1 325 1 327 2 117 1 299 1 46 2 32 1 351 1 242 1 244 1 50 1 67 1 
205 1 303 1 206 1 261 2 325 1 327 3 46 3 211 1 351 2 65 1 57 1 244 1 67 2 
205 1 206 1 261 5 262 1 22 1 177 1 62 1 46 9 211 3 286 1 341 1 65 7 244 1 217 1 67 2 140 1 303 4 221 1 325 1 115 1 327 9 351 2 311 2 57 1 
205 1 206 1 261 5 262 1 22 1 177 1 62 1 46 9 211 3 286 1 341 1 65 7 244 1 217 1 67 2 140 1 303 4 221 1 325 1 115 1 327 9 351 2 311 2 57 1 
260 1 6 1 319 1 
260 1 43 1 76 2 
148 1 172 2 183 2 128 2 33 1 249 2 307 2 250 2 
148 1 17 1 315 1 172 2 316 2 128 2 179 1 88 1 111 1 183 3 48 1 324 1 188 1 156 1 301 1 11 2 71 1 27 2 116 1 89 2 29 1 249 2 226 2 307 2 229 1 250 3 30 1 310 1 13 1 165 1 349 1 33 1 58 1 232 1 313 1 99 1 295 1 
172 1 183 1 128 1 33 1 345 1 49 1 249 1 281 1 307 1 250 1 
260 1 172 1 44 1 276 1 319 1 250 1 213 1 254 1 183 1 49 1 38 1 51 1 258 1 283 1 
260 1 172 1 128 1 44 1 249 1 276 1 307 1 319 1 250 1 213 1 254 2 183 1 38 2 49 1 283 1 
254 1 127 1 171 1 38 1 233 1 
254 2 127 1 171 1 260 1 300 1 38 2 319 1 68 1 
254 1 127 1 38 1 
171 1 172 1 128 1 345 1 249 1 307 1 250 1 254 1 79 1 33 1 183 1 49 1 38 1 281 1 
260 1 
254 2 127 1 287 1 171 1 260 1 38 2 319 1 68 1 
159 1 125 2 171 2 127 2 260 1 296 1 290 1 73 1 237 2 61 1 209 2 319 1 87 1 268 1 254 5 14 1 38 5 100 1 68 1 
148 1 6 1 
148 2 172 2 223 1 128 1 249 1 307 1 250 2 241 1 183 2 
231 1 42 1 185 1 
148 1 17 1 27 1 89 1 226 1 179 1 250 1 88 1 111 1 310 1 349 1 183 1 215 1 313 1 188 1 301 1 
17 1 172 1 27 1 89 1 318 1 249 1 226 1 179 1 77 1 307 1 250 2 111 1 88 1 310 1 231 1 349 1 183 2 313 1 188 1 301 1 
148 1 172 3 128 1 183 3 249 3 77 1 307 3 250 3 
172 1 183 1 345 1 49 1 249 1 307 1 250 1 
172 1 223 1 241 1 183 1 128 1 49 1 249 1 307 1 250 1 
148 1 17 1 172 3 316 2 128 2 44 1 318 1 179 1 111 1 88 1 213 1 183 4 49 1 324 1 188 1 156 1 301 1 11 1 71 1 223 1 27 1 116 1 89 1 29 1 249 3 226 1 276 1 307 3 77 1 229 1 12 1 250 4 30 1 310 1 254 1 349 1 33 1 80 1 232 1 38 1 313 1 99 1 295 1 283 1 
148 1 172 2 183 2 317 1 249 1 258 1 307 1 77 1 250 2 
70 1 260 1 172 3 223 1 128 1 44 1 318 1 249 3 276 1 77 2 307 3 250 3 254 1 213 1 183 3 80 1 38 1 49 1 283 1 
172 2 223 1 42 1 128 1 249 2 77 1 307 2 250 2 231 1 183 2 
148 1 17 1 27 1 89 1 226 1 179 1 250 1 88 1 111 1 310 1 349 1 183 1 313 1 188 1 301 1 
148 1 17 1 27 1 89 1 129 1 226 1 179 1 250 1 310 1 349 1 183 1 168 1 313 1 188 1 301 1 
315 2 83 1 316 2 42 2 2 1 264 1 267 1 185 2 324 1 156 1 11 4 71 2 29 1 304 1 229 1 31 1 30 1 278 1 231 2 292 1 280 1 295 1 169 1 122 1 
172 1 183 1 355 1 49 1 249 1 307 1 250 1 283 1 
148 1 172 4 223 1 128 1 318 1 249 4 77 2 307 4 250 4 269 1 183 4 49 1 216 1 219 1 
172 2 183 2 355 1 345 1 49 1 249 2 307 2 250 2 
104 1 285 1 
104 1 285 1 
20 1 195 1 
20 1 195 1 
20 1 195 1 
104 1 285 1 133 1 
104 1 236 1 285 1 
104 2 20 1 344 1 91 1 195 1 285 2 
104 1 285 1 133 1 
104 1 285 1 133 1 
104 1 332 1 285 1 
104 1 332 1 285 1 
104 1 332 1 285 1 
170 2 104 2 222 1 260 1 326 1 175 2 344 1 178 2 4 1 285 2 110 1 254 2 95 2 47 1 38 2 101 2 146 3 342 1 39 1 
148 1 170 1 104 1 103 1 172 2 175 1 236 1 178 1 285 1 5 1 183 2 66 1 53 1 249 2 307 2 250 2 78 1 254 1 352 1 199 1 38 1 146 1 101 1 39 1 
221 1 262 1 22 1 
221 1 262 1 50 1 
151 1 262 3 22 2 34 1 50 1 163 1 
255 1 151 1 262 2 22 1 50 1 163 1 
151 2 262 2 22 1 50 1 163 1 
314 2 125 1 103 1 83 1 127 1 171 4 260 2 43 1 237 1 3 1 61 3 209 1 267 1 319 1 268 2 66 1 68 1 289 1 72 1 28 2 92 1 53 1 76 3 251 1 94 1 254 5 278 1 198 2 15 1 38 5 280 1 100 1 
314 6 124 1 125 2 18 1 83 3 127 6 171 7 260 5 43 3 237 2 298 1 61 8 209 2 86 1 87 1 267 3 319 1 268 6 138 5 68 1 289 1 224 1 53 4 92 2 76 9 251 2 254 9 278 3 198 6 15 3 96 1 38 9 280 3 100 1 233 5 
125 1 314 2 171 2 83 1 260 3 43 2 237 1 61 3 209 1 319 1 267 1 87 1 268 2 72 1 28 1 92 1 53 1 76 4 251 1 94 1 254 3 278 1 198 2 15 1 38 3 280 1 
314 4 125 1 18 1 171 3 83 2 260 4 43 3 237 1 61 5 209 1 86 1 319 1 267 2 87 1 268 4 224 1 72 1 28 2 92 1 53 2 76 7 251 1 94 1 254 4 278 2 198 4 15 2 38 4 280 2 
6 1 238 1 313 1 
313 1 16 1 
297 1 
313 1 301 1 
17 1 74 1 238 2 45 1 313 3 301 1 
17 1 313 1 301 1 
313 1 60 1 
315 1 288 1 277 1 11 1 309 1 
315 1 288 1 277 1 11 1 309 1 
315 1 288 1 293 1 277 1 11 1 309 1 
315 1 288 1 277 1 11 1 309 1 
315 1 288 1 277 1 11 1 309 1 
205 1 261 1 206 1 262 2 22 1 107 1 130 1 266 1 46 2 322 1 340 1 65 1 64 1 244 1 50 1 245 1 67 1 188 1 221 1 27 1 89 1 325 1 225 1 327 2 226 1 54 1 310 1 351 1 34 1 312 1 
205 1 261 1 263 1 206 1 262 2 22 1 107 1 130 1 180 1 266 1 46 3 322 1 340 1 65 2 64 1 244 1 50 1 67 1 188 1 221 1 27 1 89 1 225 1 327 3 226 1 54 1 310 1 351 1 34 1 37 1 
205 1 261 1 206 1 263 1 262 2 22 1 107 1 130 1 180 1 266 1 46 2 322 1 340 1 65 2 244 1 50 1 188 1 221 1 27 1 89 1 327 2 226 1 54 1 310 1 34 1 
161 1 206 2 27 1 89 1 327 1 226 1 93 1 130 2 266 2 46 1 322 2 351 1 349 1 356 1 37 1 218 1 67 1 
221 1 262 2 206 1 263 1 27 1 22 1 325 1 89 1 225 1 107 1 327 1 226 1 130 1 46 1 266 1 54 1 310 1 322 1 351 1 340 1 64 1 34 1 50 1 245 1 188 1 67 1 
35 1 
125 1 84 1 127 2 172 1 237 1 44 1 61 1 209 1 108 1 265 1 268 1 213 1 134 1 183 1 49 1 51 1 137 1 188 1 68 1 301 1 220 1 27 2 247 1 89 2 226 2 276 1 250 1 251 1 310 1 254 3 350 1 349 2 200 1 38 3 313 1 100 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
127 1 172 1 247 1 44 1 276 1 250 1 213 1 254 3 287 1 350 1 183 1 200 1 49 1 38 3 137 1 51 1 258 1 68 1 283 1 
125 1 172 1 247 1 237 1 44 1 209 1 276 1 250 1 213 1 254 2 350 1 183 1 200 1 49 1 38 2 100 1 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
172 1 247 1 44 1 276 1 250 1 254 2 213 1 350 1 183 1 200 1 49 1 38 2 137 1 51 1 258 1 283 1 
125 1 172 1 247 1 237 1 44 1 209 1 276 1 250 1 213 1 254 2 350 1 183 1 200 1 49 1 38 2 100 1 137 1 51 1 258 1 283 1 
148 1 160 1 71 2 315 3 316 2 2 1 29 1 264 1 267 1 229 1 30 1 136 1 288 1 6 1 272 1 280 1 169 1 295 1 324 1 156 1 204 1 11 5 158 1 
148 1 315 8 83 2 105 1 316 4 42 4 2 1 264 2 267 1 212 1 214 1 185 11 324 2 156 2 11 14 71 6 190 3 90 1 29 2 274 3 145 1 229 2 308 1 230 1 30 2 231 11 278 1 15 2 58 1 232 1 81 1 280 2 295 1 
148 1 17 1 315 1 172 1 42 1 316 2 318 1 179 1 240 1 212 1 111 1 88 1 183 2 215 1 324 1 188 1 301 1 156 1 11 2 71 1 27 1 89 1 29 1 226 1 249 1 307 1 77 1 118 1 250 2 229 1 30 1 310 1 349 1 58 1 232 1 313 1 295 1 102 1 
83 2 315 10 172 1 316 6 42 6 2 3 318 1 179 2 88 2 136 1 288 1 183 3 185 6 324 3 188 2 11 19 89 1 192 2 249 1 250 3 15 2 58 1 59 2 99 2 295 3 204 1 147 2 148 1 17 2 264 3 267 3 212 1 111 2 339 1 272 1 156 3 301 2 158 1 160 1 71 9 27 1 29 3 226 1 77 1 307 1 229 3 30 3 310 2 349 1 231 6 278 2 167 2 279 1 232 1 313 2 280 3 
123 1 315 1 172 1 263 1 316 4 108 1 183 1 153 1 324 2 188 2 156 2 301 2 11 2 71 1 220 1 141 1 27 8 89 7 29 2 249 1 226 8 307 1 77 1 347 1 250 1 229 2 30 2 310 2 119 1 349 2 13 2 312 1 58 1 294 1 232 1 357 1 313 3 169 1 295 2 
83 1 315 1 172 1 42 1 128 1 316 2 2 1 264 1 267 1 212 1 183 1 185 1 324 1 156 1 11 3 71 2 223 1 29 1 249 1 306 1 307 1 229 1 250 1 30 1 231 1 278 1 15 1 280 1 295 1 
83 1 315 2 105 1 42 1 316 2 29 1 264 1 229 1 30 1 231 1 292 1 185 1 280 1 169 1 295 1 324 1 156 1 11 2 
71 2 42 1 316 2 2 1 29 1 264 1 229 1 267 1 30 1 31 1 231 1 278 1 185 1 169 1 295 1 324 1 156 1 11 2 
315 2 83 1 316 2 42 2 105 1 2 1 264 2 267 1 185 2 324 1 156 1 11 4 71 2 29 1 229 1 30 1 231 2 278 1 15 1 280 1 295 1 169 1 
83 1 315 2 105 1 42 1 316 2 29 1 264 1 347 1 229 1 30 1 231 1 292 1 185 1 280 1 295 1 324 1 156 1 11 2 
71 2 42 1 316 2 2 1 29 1 264 1 347 1 229 1 267 1 30 1 31 1 231 1 278 1 185 1 295 1 324 1 156 1 11 2 
315 2 83 1 316 2 42 2 105 1 2 1 264 2 267 1 185 2 324 1 156 1 11 4 71 2 29 1 347 1 229 1 30 1 231 2 278 1 15 1 280 1 295 1 
315 2 83 1 316 2 42 2 105 1 2 1 264 2 267 1 185 2 324 1 156 1 11 4 71 2 29 1 229 1 30 1 231 2 278 1 15 1 280 1 295 1 
148 1 17 1 315 1 316 2 179 1 111 1 88 1 183 1 324 1 188 1 301 1 156 1 11 2 71 1 27 1 89 1 29 1 226 1 250 1 229 1 30 1 310 1 349 1 58 1 232 1 99 1 313 1 295 1 
148 1 17 1 315 1 316 2 129 1 179 1 183 1 324 1 188 1 301 1 156 1 11 2 71 1 27 1 89 1 29 1 226 1 250 1 229 1 30 1 310 1 349 1 58 1 331 1 232 1 168 1 313 1 295 1 
315 2 83 1 316 2 42 2 105 1 2 1 264 2 267 1 212 1 185 2 324 1 156 1 11 4 71 2 29 1 229 1 30 1 231 2 278 1 15 1 280 1 295 1 
17 1 315 2 83 1 105 1 42 2 316 2 2 1 179 1 264 2 267 1 111 1 88 1 183 1 185 2 324 1 188 1 301 1 156 1 11 4 71 2 27 1 89 1 29 1 226 1 250 1 229 1 30 1 310 1 278 1 231 2 15 1 312 1 59 1 280 1 99 1 313 1 295 1 
83 1 315 2 172 1 105 1 128 1 316 2 42 1 264 1 267 1 212 1 183 1 185 1 324 1 156 1 11 3 71 1 223 1 29 1 249 1 307 1 229 1 329 1 250 1 30 1 278 1 231 1 15 1 280 1 295 1 
315 9 83 3 316 4 105 3 2 3 149 1 210 1 264 6 132 1 267 3 182 2 214 1 323 1 10 1 324 2 157 2 156 2 11 19 71 10 190 2 90 1 274 1 229 2 30 2 197 1 278 3 353 1 15 3 202 1 280 3 
315 13 83 3 105 1 316 4 2 1 149 1 207 1 264 2 210 1 267 2 132 2 182 4 184 1 324 2 157 1 156 2 11 25 71 12 190 2 90 2 274 2 229 2 30 2 197 1 253 1 256 1 278 2 353 2 15 3 354 1 36 1 97 1 202 1 280 3 
83 4 315 21 316 8 2 3 132 1 182 4 136 1 288 1 184 1 10 1 324 4 11 42 190 4 90 3 253 1 197 1 256 1 15 4 97 2 202 1 204 1 105 5 149 1 207 1 264 8 210 1 267 5 214 1 152 1 272 1 156 4 157 1 158 1 160 1 71 21 274 3 229 4 30 4 278 4 353 2 354 1 36 1 280 5 
315 19 83 4 316 6 105 2 2 4 207 1 149 1 210 1 264 6 132 1 267 4 182 4 136 1 152 1 214 1 288 1 272 1 184 1 10 1 324 3 157 1 156 3 158 1 11 37 160 1 71 18 190 4 90 3 274 3 229 3 30 3 197 1 253 1 256 1 278 3 353 2 15 4 354 1 36 1 97 1 202 1 280 5 204 1 
315 5 316 2 2 1 149 1 210 1 264 1 267 1 132 1 182 1 136 1 288 1 272 1 324 1 156 1 11 9 158 1 160 1 71 4 190 1 90 1 274 1 229 1 30 1 353 1 280 1 202 1 204 1 
170 1 104 1 222 1 175 1 344 1 178 1 186 1 101 1 285 1 110 1 
236 1 5 1 
170 1 104 1 302 1 52 1 175 1 178 1 101 1 285 1 252 1 
170 1 104 1 222 1 260 1 326 1 175 1 344 1 178 1 4 1 285 1 110 1 254 1 95 1 38 1 101 1 146 2 342 1 39 1 
170 1 104 1 222 1 260 1 326 1 175 1 344 1 178 1 4 1 285 1 110 1 254 1 95 1 38 1 101 1 146 2 342 1 39 1 
170 1 104 1 222 1 260 1 326 1 175 1 344 1 178 1 4 1 285 1 110 1 254 1 95 1 38 1 101 1 146 2 342 1 39 1 
91 1 275 1 133 1 
91 1 275 1 133 1 
332 1 109 1 
91 1 332 1 109 1 
199 1 78 1 
148 1 170 1 171 1 104 1 103 1 172 2 175 1 236 1 178 1 285 1 5 1 183 2 66 1 342 1 53 1 249 2 307 2 250 2 78 1 254 1 95 1 352 1 199 1 98 1 38 1 101 1 146 1 
275 1 133 1 
91 1 332 1 109 1 
315 1 172 2 174 1 316 2 334 1 212 1 183 2 324 1 188 1 301 1 156 1 11 2 71 1 141 1 27 2 89 2 29 1 226 2 250 2 229 1 30 1 348 1 310 1 13 2 58 1 294 1 232 1 313 1 121 1 295 1 82 1 
221 1 262 2 263 1 27 2 22 1 1 1 89 2 143 1 107 1 226 2 266 1 310 1 340 1 64 1 34 1 312 1 120 1 50 1 188 1 
221 1 262 2 263 1 27 1 22 1 89 1 107 1 226 1 266 1 310 1 340 1 64 1 34 1 120 1 50 1 188 1 113 1 
126 1 349 1 27 1 143 1 89 1 356 1 226 1 266 1 
221 1 262 2 263 1 27 1 22 1 1 1 89 1 143 1 107 1 226 1 266 1 310 1 340 1 64 1 34 1 120 1 50 1 188 1 
270 1 
159 1 260 1 290 1 6 1 61 1 319 1 268 1 
125 1 127 1 260 2 41 1 43 1 237 1 61 1 209 1 181 1 319 1 268 1 112 1 68 1 76 1 254 1 38 1 100 1 
125 1 27 1 89 1 237 1 209 1 226 1 291 1 310 1 349 1 100 1 188 1 246 1 
314 5 125 2 127 1 83 2 284 1 260 4 43 3 237 2 207 1 61 7 209 2 267 2 319 1 268 5 68 1 139 1 190 1 90 1 274 1 76 6 254 1 253 1 256 1 198 5 278 2 15 2 354 1 36 1 38 1 280 2 100 2 
125 1 172 1 128 1 237 1 61 2 209 1 335 1 267 1 268 2 183 1 49 1 139 2 158 1 160 1 345 1 193 1 249 1 307 1 250 1 254 1 56 1 79 1 33 1 38 1 280 2 100 1 281 1 204 1 
125 1 159 1 260 1 290 1 237 1 61 1 209 1 319 1 268 1 100 1 
314 5 83 2 260 5 43 5 61 5 193 1 76 10 267 2 268 5 198 5 278 2 15 2 280 2 147 1 139 2 
254 1 127 1 260 1 38 1 319 1 68 1 
125 2 84 1 127 4 237 2 239 1 61 2 209 2 108 1 265 2 87 1 268 2 134 1 188 1 301 1 68 2 220 1 27 4 89 4 273 1 226 4 227 2 251 2 310 1 330 1 254 3 349 2 38 3 313 1 100 1 
148 1 17 1 172 2 316 2 128 2 179 1 88 1 111 1 183 3 324 1 188 1 156 1 301 1 11 1 71 1 27 1 89 1 116 1 29 1 226 1 249 2 307 2 229 1 250 3 30 1 310 1 349 1 33 1 232 1 99 1 313 1 295 1 
314 1 125 1 260 2 43 1 237 1 61 1 76 2 209 1 265 1 251 1 319 1 268 2 198 1 288 1 100 1 
208 1 178 1 101 1 
222 1 7 1 199 1 178 1 101 1 
208 1 178 1 101 1 
208 1 178 1 101 1 
243 1 178 1 101 1 
243 1 178 1 101 1 
243 1 178 1 101 1 
178 1 101 1 
104 1 285 1 
160 1 71 3 315 4 105 1 316 4 2 1 264 2 267 1 229 2 30 2 136 1 288 1 272 1 97 1 280 1 324 2 156 2 204 1 158 1 11 7 
160 1 71 2 315 3 2 1 264 1 267 1 136 1 288 1 6 1 272 1 280 1 204 1 158 1 11 5 
71 2 83 1 315 2 316 2 105 1 2 1 264 2 24 1 267 1 229 1 30 1 278 1 15 1 280 1 324 1 156 1 11 4 
71 4 315 3 83 1 105 1 2 1 190 2 90 1 274 1 264 2 267 1 278 1 214 1 15 1 280 1 11 7 
83 2 315 9 105 1 316 2 2 2 264 3 267 3 136 1 214 1 288 1 272 1 324 1 156 1 158 1 11 17 160 1 71 8 190 2 274 2 145 1 229 1 30 1 278 2 15 2 97 1 280 3 81 1 204 1 
71 1 190 1 11 1 
315 1 274 1 11 1 
71 3 83 1 315 3 316 2 105 1 2 2 24 1 264 3 229 1 267 1 30 1 278 1 15 1 280 1 324 1 156 1 147 1 11 6 
315 7 83 2 105 2 316 4 2 1 149 1 207 1 264 3 267 2 324 2 156 2 11 13 71 6 190 1 90 1 274 1 229 2 30 2 253 1 278 2 256 1 15 2 354 1 36 1 97 1 280 2 
160 1 315 3 71 3 105 1 2 1 264 2 267 1 280 1 204 1 158 1 11 6 
160 1 315 1 71 2 105 1 316 2 2 1 75 1 264 2 229 1 30 1 136 1 272 1 97 1 324 1 204 1 156 1 11 3 
160 2 315 5 71 5 316 2 105 2 2 3 149 1 335 1 264 5 229 1 267 2 30 1 280 2 324 1 156 1 204 2 11 10 158 1 
83 1 315 2 316 2 105 1 149 1 264 1 229 1 30 1 280 1 324 1 156 1 11 2 
71 2 83 1 315 2 316 2 105 1 2 1 149 1 264 2 267 1 229 1 30 1 278 1 15 1 280 1 324 1 156 1 11 4 
160 1 71 2 315 1 316 6 105 1 2 1 149 1 75 1 264 2 229 3 30 3 97 1 10 1 324 3 156 3 204 1 11 3 
315 11 83 2 316 8 105 2 2 2 149 1 24 1 264 4 267 3 321 1 136 1 288 1 272 1 10 1 324 4 156 4 158 1 11 21 160 1 71 10 189 1 190 3 90 1 274 3 229 4 30 4 278 2 15 2 97 1 280 3 203 1 204 1 
315 4 316 2 2 1 149 1 264 1 267 1 136 1 288 1 272 1 324 1 156 1 11 7 158 1 160 1 71 3 190 1 90 1 274 1 229 1 30 1 253 1 280 1 204 1 
315 6 83 1 316 4 105 1 2 1 149 1 24 1 264 2 267 1 136 1 214 1 288 1 272 1 324 2 156 2 158 1 11 10 160 1 71 4 190 2 90 1 274 1 229 2 30 2 253 1 15 1 280 2 204 1 
315 7 83 2 105 2 316 8 2 1 149 1 207 1 24 1 264 3 267 2 324 4 156 4 11 14 71 7 190 1 90 1 274 1 229 4 30 4 253 1 256 1 278 2 15 2 354 1 36 1 97 2 280 2 
315 6 83 2 316 4 2 1 149 1 207 1 24 1 264 1 267 1 324 2 156 2 11 10 71 4 190 1 90 1 274 1 229 2 30 2 253 1 278 1 256 1 15 2 354 1 36 1 280 2 
315 4 316 2 2 1 149 1 264 1 267 1 136 1 288 1 272 1 324 1 156 1 11 7 158 1 160 1 71 3 190 1 90 1 274 1 229 1 30 1 253 1 280 1 204 1 
315 7 83 2 105 2 316 4 2 1 149 1 207 1 264 3 267 2 324 2 156 2 11 13 71 6 190 1 90 1 274 1 229 2 30 2 253 1 278 2 256 1 15 2 354 1 36 1 97 1 280 2 
315 6 83 2 316 6 2 1 149 1 207 1 24 1 264 1 267 1 324 3 156 3 11 11 71 5 190 1 90 1 274 1 229 3 30 3 253 1 256 1 278 1 15 2 354 1 36 1 97 1 280 2 
315 6 83 2 105 1 316 6 2 2 149 1 207 1 264 3 267 1 10 1 324 3 156 3 11 11 71 5 190 1 90 1 274 1 229 3 30 3 253 1 256 1 278 1 15 2 354 1 36 1 97 1 280 2 
160 3 71 4 315 3 105 3 2 3 264 6 267 1 136 1 272 2 280 1 204 3 11 7 158 1 
315 6 83 2 316 6 2 1 149 1 207 1 264 1 267 1 10 1 324 3 156 3 11 11 71 5 190 1 90 1 274 1 229 3 30 3 253 1 256 1 278 1 15 2 354 1 36 1 97 1 280 2 
148 1 172 1 183 1 343 1 317 1 258 1 250 1 
148 1 69 1 172 1 343 1 317 1 150 1 250 1 183 1 8 1 201 1 282 1 258 1 
310 1 220 1 349 1 27 1 6 1 89 1 226 1 313 1 108 1 188 1 301 1 
148 1 17 1 172 1 27 1 89 1 249 1 226 1 179 1 77 1 307 1 250 2 111 1 310 1 349 1 183 2 313 1 188 1 301 1 
148 1 17 2 172 2 179 1 111 1 183 2 49 1 188 1 155 1 301 2 27 1 89 1 226 1 249 2 276 1 227 1 307 1 77 1 250 2 310 1 313 3 60 1 283 1 
148 1 17 2 172 2 173 1 179 1 183 2 49 1 188 1 155 1 301 2 27 2 89 2 226 2 249 2 276 1 227 1 307 1 77 1 250 2 310 1 168 1 313 3 60 1 283 1 
17 1 127 1 260 1 173 1 21 1 238 1 44 1 319 1 188 1 155 1 301 1 27 3 89 3 226 3 305 1 227 1 254 2 310 1 349 1 38 2 313 4 60 1 16 1 
17 1 127 1 260 1 173 1 27 3 89 3 44 1 238 1 226 3 227 1 328 1 319 1 310 1 254 2 349 1 38 2 313 4 155 1 188 1 60 1 301 1 16 1 
310 1 119 1 27 1 89 1 226 1 188 1 
123 1 17 1 263 1 27 7 89 6 74 1 248 1 226 7 228 1 55 1 310 3 119 1 13 1 349 2 153 1 312 1 294 1 357 1 313 3 188 2 301 2 
148 1 17 1 315 3 172 1 316 4 2 1 179 1 264 1 267 1 212 1 88 1 111 1 136 1 288 1 183 2 272 1 324 2 188 1 301 1 156 2 11 5 158 1 160 1 71 2 27 1 89 1 29 2 249 1 226 1 307 1 77 1 250 2 229 2 30 2 310 1 167 1 312 1 59 1 280 1 313 1 99 1 295 2 204 1 82 1 
125 2 171 1 127 2 260 1 237 2 238 1 44 1 61 1 209 2 319 1 268 1 336 1 320 1 271 1 68 1 159 1 27 1 290 1 89 1 226 1 328 1 330 1 254 3 349 1 38 3 313 2 100 2 16 1 
310 1 119 1 27 1 89 1 226 1 188 1 246 1 
40 1 220 1 173 1 27 4 89 4 226 4 108 1 310 1 349 1 312 1 313 1 188 1 301 1 
17 1 234 1 27 2 89 2 248 1 176 1 226 2 227 1 228 1 310 2 154 1 313 1 188 1 301 1 
310 1 221 1 349 1 262 1 27 1 89 1 107 1 50 1 226 1 188 1 
27 2 263 1 89 2 226 2 310 1 312 1 294 1 121 1 313 1 188 1 301 1 
40 1 123 1 220 1 27 5 89 4 226 5 227 1 108 1 310 2 349 1 312 1 294 1 357 1 313 3 188 2 301 2 
40 1 123 1 220 1 27 5 89 4 226 5 227 1 108 1 337 1 310 2 349 1 312 1 294 1 313 3 188 2 301 2 
148 1 17 1 172 1 27 1 89 1 249 1 226 1 179 1 77 1 307 1 250 2 310 1 349 1 183 2 313 1 168 1 188 1 301 1 
17 1 27 1 89 1 74 1 248 1 226 1 227 1 228 1 55 1 310 2 313 1 188 1 301 1 
148 1 135 1 19 1 166 1 162 1 
148 1 333 1 171 1 260 1 142 1 19 2 44 1 276 1 162 2 319 1 135 1 254 2 213 1 166 2 80 1 49 1 38 2 283 1 26 1 
19 1 172 1 174 1 334 1 250 1 348 1 135 1 166 1 183 1 
333 1 135 1 26 1 
205 1 261 1 6 1 244 1 
205 1 351 1 261 1 327 1 244 1 46 1 67 1 
322 1 206 1 46 1 
114 1 205 1 261 1 0 1 325 1 327 3 46 3 351 1 242 2 9 1 244 1 67 1 
205 1 311 1 351 1 261 1 65 1 327 2 244 1 46 2 67 1 
303 1 221 1 261 1 262 1 22 1 325 1 327 1 177 1 46 1 351 1 67 1 
205 1 351 1 261 1 325 1 327 1 46 1 67 1 
205 2 351 1 325 1 327 1 244 1 46 1 67 1 
205 1 261 1 325 1 327 2 194 1 46 2 351 2 63 1 67 2 259 1 
140 1 205 1 303 1 261 2 325 1 327 3 62 1 46 3 211 1 351 1 65 2 244 1 67 1 
205 1 221 1 261 1 262 2 22 1 325 1 327 2 46 2 351 1 65 1 34 1 244 1 50 1 25 1 67 1 
205 1 303 1 261 2 325 1 327 4 46 4 211 1 351 2 311 1 341 1 65 2 244 1 67 2 
205 1 351 1 261 1 325 1 327 1 244 1 46 1 67 1 
114 1 205 2 303 1 0 1 261 3 191 1 327 4 46 4 211 1 351 1 65 2 242 1 244 2 67 1 
205 1 85 1 261 1 325 1 327 2 46 2 196 1 286 1 351 1 65 1 244 1 67 1 
114 2 205 1 0 1 261 1 325 1 327 3 46 3 351 1 242 2 244 1 67 1 187 1 
261 2 235 1 144 1 164 2 
351 1 325 1 23 1 327 1 46 1 67 1 
205 1 351 1 261 1 65 1 325 1 327 2 244 1 62 1 46 2 67 1 
106 1 
205 1 351 1 261 1 325 1 327 1 244 1 46 1 67 1 
205 1 351 1 261 1 65 1 242 1 325 1 327 3 244 1 62 1 46 3 67 1 
303 1 261 1 191 1 211 1 
205 1 261 1 

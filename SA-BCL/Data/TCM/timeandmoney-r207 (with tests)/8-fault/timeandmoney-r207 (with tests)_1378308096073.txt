#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 202 (108,241) (108,241) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 202 (108,241) (108,241) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 202 (108,241) (108,241) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (309,365) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (309,365) (309,365) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (309,365) (309,365) 333 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
316 2 199 1 221 2 108 1 213 4 306 1 24 1 92 1 252 3 241 1 171 1 323 7 202 1 229 2 31 1 30 1 348 2 296 1 44 2 195 3 83 2 126 7 313 2 268 1 342 1 
316 2 199 1 221 2 108 1 213 4 306 1 24 1 92 1 252 3 241 1 171 1 323 7 202 1 229 2 31 1 30 1 348 2 296 1 44 2 195 3 83 2 126 7 313 2 268 1 342 1 
316 2 199 1 221 2 108 1 213 4 306 1 24 1 92 1 252 3 241 1 171 1 323 7 202 1 229 2 31 1 30 1 348 2 296 1 44 2 195 3 83 2 126 7 313 2 268 1 342 1 
352 1 108 1 24 1 306 1 213 4 92 1 241 1 336 1 30 1 31 1 195 3 313 2 268 1 342 1 316 2 199 1 221 2 252 4 171 1 323 7 229 2 202 1 348 2 296 1 44 2 83 2 126 7 
352 1 316 1 199 1 221 1 213 3 92 2 252 3 336 1 171 1 323 4 229 1 202 1 140 1 44 1 83 1 195 2 126 4 313 1 
352 1 316 1 199 1 145 1 155 1 346 1 306 1 252 1 336 1 323 2 229 1 30 1 348 1 44 1 83 1 126 2 
352 1 316 2 199 1 221 1 213 1 252 2 336 1 323 3 348 1 83 2 195 1 126 3 342 1 
352 1 235 1 213 7 92 2 336 1 31 1 140 1 289 1 195 4 313 1 342 1 316 2 199 1 221 3 252 5 171 1 323 9 202 1 229 1 348 1 296 1 44 1 83 2 126 9 
352 1 235 1 213 7 92 2 336 1 31 1 140 1 289 1 195 4 313 1 342 1 316 2 199 1 221 3 252 5 171 1 323 9 202 1 229 1 348 1 296 1 44 1 83 2 126 9 
72 1 238 1 153 1 
163 1 72 1 369 2 
53 1 181 1 129 2 161 2 98 2 356 2 106 2 168 2 
181 1 129 2 88 1 210 1 207 1 131 1 355 1 48 1 132 1 134 1 356 3 240 1 335 1 188 1 53 1 310 2 159 1 161 3 70 1 247 1 112 1 343 2 59 2 98 2 222 1 117 1 225 2 11 1 168 2 122 1 102 2 200 1 231 1 377 1 256 1 152 1 106 2 
365 1 
272 1 78 1 332 1 366 1 238 1 356 1 245 1 267 1 96 1 161 1 203 1 232 1 72 1 106 1 
129 1 98 1 272 1 78 1 332 1 366 1 238 1 168 1 356 1 96 2 267 2 161 1 203 1 72 1 106 1 
96 1 267 1 277 1 292 1 280 1 
20 1 96 2 267 2 277 1 72 1 238 1 239 1 280 1 
96 1 267 1 277 1 
309 1 96 1 267 1 365 1 280 1 
72 1 
96 2 267 2 277 1 39 1 72 1 238 1 239 1 280 1 
270 1 9 1 113 1 37 1 89 2 238 1 239 1 13 2 69 1 267 5 96 5 110 2 150 1 340 1 277 2 55 1 72 1 280 2 205 1 
343 1 344 1 88 1 129 1 59 1 330 1 222 1 131 1 225 1 146 1 48 1 168 1 356 2 240 1 159 1 161 2 247 1 377 1 152 1 106 1 
181 1 153 1 
206 1 181 2 129 1 98 1 356 2 168 1 372 1 161 2 106 2 
170 1 344 1 349 1 
343 1 181 1 59 1 88 1 222 1 131 1 10 1 225 1 48 1 356 1 240 1 159 1 161 1 247 1 152 1 377 1 
181 1 129 3 330 1 98 1 161 3 356 3 106 3 168 3 
129 1 161 1 78 1 6 1 356 1 106 1 168 1 
206 1 129 1 372 1 161 1 98 1 78 1 356 1 106 1 168 1 
181 1 0 1 88 1 129 3 330 1 210 1 207 1 131 1 332 1 48 1 132 1 356 4 240 1 188 1 53 1 310 1 216 1 159 1 267 1 96 1 161 4 247 1 112 1 343 1 59 1 222 1 98 2 117 1 272 1 78 1 225 1 146 1 366 1 168 3 122 1 102 2 200 1 372 1 203 1 231 1 377 1 152 1 256 1 106 3 
181 1 129 1 245 1 330 1 161 2 356 2 106 2 168 1 327 1 
0 1 129 3 330 2 98 1 78 1 272 1 332 1 146 1 366 1 168 3 356 3 372 1 96 1 267 1 161 3 203 1 72 1 106 3 291 1 
344 1 129 2 330 1 98 1 168 2 356 2 170 1 372 1 161 2 106 2 
343 1 181 1 59 1 88 1 222 1 131 1 225 1 48 1 356 1 240 1 159 1 161 1 247 1 152 1 377 1 
258 1 343 1 181 1 59 1 88 1 131 1 225 1 48 1 356 1 240 1 138 1 159 1 161 1 247 1 377 1 
301 1 210 1 207 1 68 1 132 1 134 2 52 1 188 1 264 1 310 4 165 1 363 1 344 2 117 2 100 1 99 1 12 1 61 1 122 1 102 2 200 1 170 2 295 1 349 2 
129 1 203 1 161 1 78 1 63 1 356 1 106 1 168 1 
181 1 129 4 330 2 98 1 331 1 146 1 168 4 356 5 172 1 245 1 372 1 161 5 106 5 327 1 
129 2 161 2 78 1 6 1 63 1 356 2 106 2 168 2 
4 1 119 1 
4 1 119 1 
147 1 16 1 
147 1 16 1 
147 1 16 1 
281 1 4 1 119 1 
299 1 4 1 119 1 
147 1 4 2 211 1 16 1 119 2 278 1 
281 1 4 1 119 1 
281 1 4 1 119 1 
169 1 4 1 119 1 
169 1 4 1 119 1 
169 1 4 1 119 1 
303 1 47 1 119 2 120 1 286 2 367 2 40 1 189 1 190 1 324 2 4 2 82 2 267 2 96 2 230 3 312 1 278 1 72 1 361 2 
299 1 181 1 303 1 129 2 260 1 286 1 356 2 4 1 96 1 267 1 161 2 111 1 290 1 361 1 362 1 318 1 166 1 119 1 101 1 168 2 367 1 324 1 230 1 106 2 
229 1 44 1 313 1 
145 1 229 1 44 1 
103 1 145 1 44 3 313 2 183 1 26 1 
149 1 145 1 44 2 313 1 183 1 26 1 
145 1 44 2 313 1 183 1 26 2 
351 2 301 1 182 1 89 1 67 1 237 1 68 1 49 1 238 1 239 1 52 1 69 2 110 1 96 5 267 5 111 1 163 1 290 1 55 3 72 2 362 1 270 1 369 3 347 2 148 1 295 1 13 1 125 2 277 1 64 1 376 1 280 4 
259 1 301 3 329 1 182 1 89 2 21 1 237 2 68 3 49 2 238 1 239 1 52 3 160 1 69 6 96 9 267 9 110 2 111 4 32 5 163 3 55 8 72 5 270 1 113 1 319 1 292 5 369 9 347 6 295 3 13 2 125 6 277 6 64 3 204 1 280 7 
351 1 301 1 89 1 67 1 237 1 49 1 68 1 238 1 52 1 110 1 96 3 267 3 69 2 111 1 163 2 55 3 72 3 113 1 369 4 148 1 347 2 295 1 13 1 125 2 64 1 280 2 
351 2 259 1 301 2 89 1 21 1 67 1 237 1 49 1 68 2 238 1 52 2 160 1 110 1 96 4 267 4 69 4 111 2 163 3 55 5 72 4 113 1 369 7 347 4 148 1 295 2 13 1 125 4 64 2 280 3 
79 1 48 1 153 1 
48 1 142 1 
198 1 
48 1 377 1 
66 1 131 1 79 2 48 3 377 1 249 1 
131 1 48 1 377 1 
48 1 287 1 
363 2 58 1 117 3 305 1 68 1 99 3 51 1 134 4 124 1 294 1 295 1 104 1 14 1 310 7 266 1 248 1 197 2 
363 2 58 1 117 3 305 1 68 1 99 3 51 1 134 4 124 1 294 1 295 1 104 1 14 1 310 7 266 1 248 1 197 2 
35 1 363 2 58 1 117 3 305 1 68 1 99 3 51 1 134 4 124 1 294 1 295 1 104 1 14 1 310 7 266 1 248 1 197 2 
301 3 283 1 210 1 261 1 305 1 68 4 132 1 134 16 51 2 357 1 136 1 188 1 52 3 242 3 3 1 310 31 266 1 337 1 248 2 197 3 363 5 58 1 74 1 117 15 99 10 122 1 102 2 294 1 42 4 124 5 295 4 104 2 14 2 64 3 
210 2 261 1 305 1 68 1 132 2 134 5 51 1 188 2 29 1 310 9 248 1 197 2 363 3 58 1 117 4 99 4 122 2 102 4 124 1 294 1 295 1 14 1 104 1 279 1 
352 1 178 1 88 1 130 1 213 1 185 1 240 1 336 1 358 1 109 1 311 1 97 1 313 1 56 1 34 1 141 1 316 1 343 1 199 1 145 1 59 1 225 1 252 1 103 1 323 2 229 1 348 1 44 2 83 1 126 2 
352 1 88 1 130 1 213 2 184 1 185 1 240 1 336 1 109 1 311 1 339 1 97 1 313 1 56 1 34 1 141 1 316 1 343 1 145 1 220 1 59 1 225 1 252 1 103 1 323 3 229 1 348 1 44 2 83 1 126 3 
352 1 88 1 130 1 213 2 184 1 240 1 336 1 109 1 311 1 339 1 97 1 313 1 56 1 141 1 343 1 145 1 59 1 225 1 252 1 103 1 323 2 229 1 348 1 44 2 126 2 
46 1 300 1 88 1 1 1 130 2 48 1 240 1 109 2 159 1 359 1 56 2 316 1 343 1 220 1 75 1 114 1 59 1 225 1 323 1 348 2 83 1 126 1 377 1 
316 1 145 1 199 1 343 1 88 1 59 1 130 1 225 1 185 1 184 1 240 1 358 1 103 1 323 1 109 1 229 1 348 1 311 1 44 2 83 1 97 1 126 1 313 1 56 1 141 1 34 1 
54 1 
88 1 89 1 332 1 237 1 48 1 238 1 239 3 240 1 137 1 244 1 96 5 245 1 55 2 196 1 144 1 343 2 59 2 254 1 13 1 15 2 203 1 106 1 156 2 304 2 158 2 356 1 265 1 159 2 69 2 267 5 110 1 161 1 163 2 359 1 72 2 270 1 75 1 76 2 77 2 320 1 223 4 272 1 78 1 225 2 366 1 274 1 275 2 369 2 370 1 81 1 277 6 232 1 377 1 233 1 45 1 
223 2 78 1 272 1 304 1 332 1 39 1 366 1 274 1 356 1 239 1 81 1 254 1 267 3 96 3 245 1 203 1 161 1 277 2 232 1 233 1 106 1 196 1 
76 1 223 3 78 1 272 1 332 1 39 1 366 1 274 1 238 1 356 1 239 1 81 1 254 1 267 3 96 3 245 1 203 1 161 1 277 1 232 1 72 1 233 1 106 1 196 1 
332 1 304 1 356 1 238 1 239 1 245 1 96 3 267 3 161 1 72 1 196 1 76 1 77 1 223 3 272 1 78 1 39 1 366 1 274 1 254 1 81 1 203 1 277 2 232 1 106 1 233 1 
156 2 89 1 158 2 332 1 304 4 238 5 356 1 239 3 69 1 110 1 245 1 96 5 267 5 161 1 163 2 55 1 72 5 196 1 270 1 144 1 76 4 115 1 77 4 223 6 272 1 78 1 39 1 366 1 274 1 275 2 370 1 41 1 254 1 81 1 13 1 15 2 173 1 203 1 277 7 84 1 232 1 175 1 106 1 233 1 
89 1 332 1 238 1 239 2 244 1 245 1 96 4 55 1 196 1 144 1 254 1 13 1 203 1 15 2 106 1 156 2 158 2 304 2 356 1 267 4 110 1 69 1 161 1 163 2 72 2 270 1 76 2 77 2 223 4 78 1 272 1 366 1 274 1 275 2 369 2 370 1 81 1 277 4 232 1 233 1 
156 2 89 1 304 2 158 2 332 1 238 1 356 1 239 2 69 1 110 1 245 1 96 4 267 4 161 1 163 2 55 1 72 1 196 1 270 1 144 1 76 2 77 2 223 4 272 1 78 1 366 1 274 1 275 2 370 1 41 1 254 1 81 1 13 1 15 2 203 1 277 4 84 1 232 1 175 1 106 1 233 1 
156 2 89 1 304 2 158 2 332 1 238 1 356 1 239 2 69 1 110 1 245 1 96 4 267 4 161 1 163 2 55 1 72 1 196 1 270 1 144 1 76 2 77 2 223 4 272 1 78 1 366 1 274 1 275 2 370 1 41 1 254 1 81 1 13 1 15 2 203 1 277 4 84 1 232 1 175 1 106 1 233 1 
19 2 89 1 304 2 158 2 332 1 238 1 356 1 239 2 69 1 110 1 245 1 96 4 267 4 217 1 161 1 55 1 72 1 218 1 196 1 270 1 144 1 76 2 77 2 223 4 272 1 78 1 366 1 274 1 253 2 369 2 276 1 254 1 81 1 13 1 15 2 203 1 277 4 84 1 232 1 106 1 233 1 
156 2 89 1 158 2 332 1 304 3 238 1 356 1 239 2 69 1 110 1 245 1 96 4 267 4 161 1 163 2 55 1 72 1 196 1 270 1 144 1 76 3 77 3 223 5 272 1 78 1 366 1 274 1 275 2 370 1 41 1 254 1 81 1 13 1 15 2 203 1 173 1 277 5 84 1 232 1 175 1 106 1 233 1 
156 2 89 1 158 2 332 1 304 3 238 1 356 1 239 2 69 1 110 1 245 1 96 4 267 4 161 1 163 2 55 1 72 1 196 1 270 1 144 1 76 3 77 3 223 5 272 1 78 1 366 1 274 1 275 2 370 1 41 1 254 1 81 1 13 1 15 2 203 1 173 1 277 5 84 1 232 1 175 1 106 1 233 1 
89 1 332 1 238 1 239 2 244 1 245 1 96 4 55 1 196 1 144 1 253 2 254 1 13 1 203 1 15 2 106 1 19 2 158 2 304 2 356 1 267 4 110 1 69 1 161 1 218 1 72 1 270 1 76 2 77 2 223 4 78 1 272 1 366 1 274 1 369 2 81 1 277 4 232 1 233 1 
181 2 210 1 207 1 305 1 68 1 132 1 134 3 188 1 310 6 197 1 363 2 58 1 344 1 117 3 99 2 61 1 122 1 170 1 102 2 200 1 294 1 295 1 14 1 104 1 349 1 153 1 
301 2 181 1 107 1 210 2 207 2 90 1 22 1 68 2 132 2 134 8 307 1 335 1 188 2 52 1 242 3 3 1 28 1 310 14 363 1 112 1 74 1 344 11 117 6 99 2 122 2 102 4 200 1 170 4 124 1 42 3 295 1 349 11 64 2 
86 1 282 1 181 1 88 1 129 1 330 1 207 1 210 1 131 1 48 1 132 1 356 2 134 1 240 1 307 1 188 1 335 1 159 1 310 2 161 2 247 1 343 1 112 1 59 1 222 1 117 1 225 1 10 1 146 1 168 1 122 1 170 1 200 1 102 2 377 1 152 1 106 1 378 1 
179 1 181 2 129 1 88 2 330 1 131 2 48 2 132 3 134 7 240 2 335 1 188 3 52 1 247 2 197 1 58 1 343 1 344 4 59 1 146 1 99 3 102 6 200 3 294 1 295 2 104 1 14 1 349 4 17 2 64 1 152 2 106 1 301 1 210 3 207 3 305 1 68 2 356 3 307 1 159 1 310 14 161 3 315 1 269 1 363 3 112 1 222 2 117 7 225 1 273 2 168 1 122 3 170 4 231 2 377 2 85 1 
178 1 87 1 129 1 88 2 330 1 210 2 207 2 212 1 48 3 23 1 184 1 132 2 214 1 356 1 134 1 240 2 188 2 335 1 192 1 159 2 310 2 161 1 33 1 359 1 360 1 343 8 112 1 75 1 59 8 117 1 225 7 11 2 61 1 168 1 122 2 102 4 200 2 377 2 106 1 
301 1 129 1 210 1 207 1 68 1 132 1 356 1 134 1 307 1 188 1 52 1 310 3 161 1 363 1 344 1 98 1 117 2 99 1 168 1 122 1 121 1 170 1 102 2 200 1 295 1 349 1 372 1 64 1 106 1 
301 1 344 1 207 1 210 1 99 1 68 1 132 1 61 1 134 2 122 1 188 1 170 1 200 1 102 2 124 1 310 2 349 1 165 1 
363 1 344 1 207 1 210 1 117 2 99 1 100 1 132 1 61 1 122 1 188 1 52 1 170 1 200 1 102 2 295 1 310 2 349 1 
301 1 210 1 207 1 68 1 132 1 134 2 188 1 52 1 310 4 363 1 344 2 117 2 99 2 61 1 122 1 102 2 200 1 170 2 124 1 295 1 349 2 64 1 
301 1 344 1 207 1 210 1 212 1 99 1 68 1 132 1 134 2 122 1 188 1 170 1 200 1 102 2 124 1 310 2 349 1 165 1 
363 1 344 1 207 1 210 1 117 2 212 1 99 1 100 1 132 1 122 1 188 1 52 1 170 1 200 1 102 2 295 1 310 2 349 1 
301 1 210 1 207 1 212 1 68 1 132 1 134 2 188 1 52 1 310 4 363 1 344 2 117 2 99 2 122 1 102 2 200 1 170 2 124 1 295 1 349 2 64 1 
301 1 210 1 207 1 68 1 132 1 134 2 188 1 52 1 310 4 363 1 344 2 117 2 99 2 122 1 102 2 200 1 170 2 124 1 295 1 349 2 64 1 
181 1 88 1 207 1 210 1 131 1 48 1 132 1 134 1 356 1 240 1 335 1 188 1 310 2 159 1 161 1 247 1 343 1 112 1 59 1 222 1 117 1 225 1 122 1 200 1 102 2 231 1 377 1 152 1 
258 1 302 1 181 1 88 1 207 1 210 1 131 1 48 1 132 1 134 1 356 1 240 1 335 1 188 1 138 1 310 2 159 1 161 1 247 1 343 1 112 1 59 1 117 1 225 1 122 1 200 1 102 2 377 1 
301 1 210 1 207 1 68 1 132 1 134 2 307 1 188 1 52 1 310 4 363 1 344 2 117 2 99 2 122 1 102 2 200 1 170 2 124 1 295 1 349 2 64 1 
178 1 301 1 88 1 207 1 210 1 131 1 68 1 48 1 132 1 134 2 356 1 240 1 52 1 188 1 310 4 161 1 247 1 363 1 343 1 344 2 59 1 222 1 117 2 225 1 99 2 122 1 170 2 200 1 102 2 124 1 295 1 349 2 17 1 231 1 64 1 152 1 377 1 
128 1 301 1 129 1 210 1 207 1 68 1 132 1 356 1 134 2 307 1 52 1 188 1 310 3 161 1 344 1 98 1 117 1 99 1 168 1 122 1 102 2 200 1 170 1 124 1 295 1 372 1 349 1 64 1 106 1 
127 1 301 4 154 1 209 1 210 2 68 4 25 1 132 2 134 15 187 1 188 2 52 4 242 3 3 3 310 31 341 1 219 1 271 1 363 2 74 1 364 1 117 16 99 5 322 1 368 1 122 2 102 4 42 4 124 3 371 1 295 4 255 1 326 3 64 4 350 2 279 1 
127 1 301 4 154 1 209 1 210 3 261 1 68 4 25 1 132 3 134 17 187 1 188 3 52 3 242 3 3 3 310 32 341 1 219 1 271 1 363 3 74 1 364 1 117 15 99 6 322 1 368 1 122 3 102 6 42 4 124 3 371 1 295 3 255 1 326 4 64 4 350 2 279 1 
301 7 154 1 209 1 210 2 261 1 305 1 22 2 68 8 25 1 132 2 134 27 187 1 188 2 52 7 242 4 3 2 310 52 219 1 197 1 271 1 363 7 58 1 74 2 364 1 117 25 99 15 322 1 368 1 122 2 102 4 294 1 42 4 124 8 371 1 295 8 104 1 14 1 255 1 326 4 64 7 350 1 279 1 
127 1 301 3 209 1 210 2 68 3 132 2 134 9 187 1 188 2 52 3 242 1 3 1 310 19 219 1 363 3 74 1 60 1 117 10 99 6 368 2 122 2 102 4 42 2 124 3 371 1 295 3 326 2 64 3 350 1 279 1 
301 3 154 1 209 2 210 2 261 1 68 3 132 2 25 1 134 13 187 1 188 2 52 2 242 2 3 2 310 23 219 1 363 1 271 1 364 1 117 10 99 2 322 1 368 1 122 2 102 4 124 1 42 2 371 1 295 2 255 1 326 3 64 3 350 2 279 1 
324 1 4 1 47 1 119 1 278 1 120 1 286 1 262 1 367 1 361 1 
299 1 260 1 
324 1 4 1 119 1 80 1 286 1 177 1 367 1 263 1 361 1 
303 1 47 1 119 1 120 1 286 1 367 1 189 1 190 1 324 1 4 1 82 1 267 1 96 1 230 2 312 1 278 1 72 1 361 1 
303 1 47 1 119 1 120 1 286 1 367 1 189 1 190 1 324 1 4 1 82 1 267 1 96 1 230 2 312 1 278 1 72 1 361 1 
303 1 47 1 119 1 120 1 286 1 367 1 189 1 190 1 324 1 4 1 82 1 267 1 96 1 230 2 312 1 278 1 72 1 361 1 
281 1 211 1 234 1 
281 1 211 1 234 1 
169 1 284 1 
169 1 211 1 284 1 
166 1 318 1 
299 1 181 1 129 2 260 1 157 1 286 1 356 2 190 1 4 1 96 1 267 1 161 2 111 1 290 1 361 1 362 1 318 1 166 1 119 1 101 1 168 2 367 1 324 1 82 1 230 1 106 2 280 1 
281 1 234 1 
169 1 211 1 284 1 
180 1 353 1 87 1 88 1 207 1 210 1 48 1 23 1 132 1 356 2 134 1 240 1 307 1 188 1 335 1 310 2 161 2 194 1 343 2 112 1 59 2 117 1 225 2 226 1 11 2 122 1 200 1 102 2 325 1 377 1 106 2 
178 1 145 1 343 2 250 1 88 1 59 2 130 1 225 2 91 1 184 1 240 1 103 1 229 1 44 2 246 1 97 1 313 1 34 1 141 1 
145 1 343 1 59 1 88 1 116 1 130 1 225 1 91 1 184 1 240 1 103 1 229 1 44 2 97 1 313 1 34 1 141 1 
46 1 343 1 250 1 75 1 88 1 59 1 130 1 224 1 225 1 48 1 240 1 159 1 359 1 377 1 
145 1 343 1 250 1 88 1 59 1 130 1 225 1 91 1 184 1 240 1 103 1 229 1 44 2 246 1 97 1 313 1 34 1 141 1 
228 1 
9 1 69 1 150 1 55 1 72 1 238 1 153 1 
89 1 156 1 238 1 239 1 69 1 110 1 267 1 96 1 163 1 55 1 72 2 270 1 275 1 369 1 370 1 13 1 277 1 
66 1 88 2 89 2 131 1 332 1 237 1 48 4 186 1 239 1 240 1 2 1 288 1 159 1 96 2 267 2 110 2 164 1 55 1 8 1 142 2 270 2 343 1 59 1 225 1 79 1 321 1 13 2 201 1 277 2 377 1 
301 2 154 1 89 1 68 2 25 1 52 2 242 1 3 1 110 1 69 4 163 3 55 6 72 3 270 1 271 1 167 1 322 1 369 6 347 5 42 1 13 1 295 2 255 1 125 5 64 2 
270 1 89 1 365 1 305 1 333 1 68 1 167 2 41 1 295 1 13 1 309 1 14 1 104 1 69 1 267 1 96 1 110 1 55 2 
270 1 9 1 89 1 238 1 13 1 110 1 69 1 150 1 55 1 72 1 
179 1 301 2 68 2 133 1 167 2 369 10 52 2 347 5 295 2 69 5 125 5 163 5 64 2 55 5 72 5 
96 1 267 1 277 1 72 1 238 1 239 1 
88 1 354 2 89 2 237 2 48 1 240 1 239 2 137 1 27 1 265 2 159 2 110 2 69 2 267 3 96 3 55 2 359 1 270 1 113 1 343 4 75 1 59 4 320 1 118 1 225 4 227 1 13 2 277 4 377 1 
181 1 129 2 88 1 210 1 207 1 131 1 48 1 132 1 356 3 240 1 188 1 53 1 310 1 159 1 161 3 247 1 112 1 343 1 59 1 98 2 222 1 117 1 225 1 168 2 122 1 102 2 200 1 231 1 256 1 152 1 377 1 106 2 
270 1 89 1 237 1 238 2 369 4 347 2 13 1 265 1 69 2 110 1 125 2 163 2 55 1 72 4 197 1 
286 1 314 1 367 1 
317 1 166 1 47 1 286 1 367 1 
286 1 314 1 367 1 
286 1 314 1 367 1 
286 1 251 1 367 1 
286 1 251 1 367 1 
286 1 251 1 367 1 
286 1 367 1 
4 1 119 1 
210 1 305 1 68 1 132 1 134 4 188 1 242 1 3 1 310 8 197 1 363 2 58 1 117 4 99 2 322 1 122 1 102 2 42 1 294 1 295 1 14 1 104 1 279 1 
301 1 210 2 305 1 68 2 132 2 134 6 188 2 242 1 243 1 3 1 310 11 197 1 363 2 58 1 74 1 117 5 99 3 322 1 122 2 102 4 294 1 42 2 124 1 295 1 104 1 14 1 64 1 279 1 
301 2 154 1 210 2 68 2 132 2 25 1 134 6 188 2 52 2 242 1 243 1 3 1 310 12 271 1 363 1 117 6 99 2 322 1 122 2 102 4 124 1 42 1 295 2 255 1 64 2 279 1 
301 2 154 1 210 3 261 1 305 1 68 3 132 3 25 1 134 10 188 3 52 1 242 1 243 1 3 1 310 17 197 1 363 2 271 1 58 1 117 7 99 4 322 1 122 3 102 6 294 1 42 1 124 2 295 2 104 1 14 1 255 1 64 2 279 1 
210 1 305 1 68 1 132 1 134 4 188 1 242 1 3 1 310 8 197 1 363 2 58 1 117 4 99 2 322 1 122 1 102 2 42 1 294 1 295 1 14 1 104 1 279 1 
301 2 154 1 210 1 68 2 132 1 25 1 134 6 188 1 52 2 242 1 3 1 310 12 271 1 117 6 99 1 322 1 122 1 102 2 42 1 124 1 295 2 255 1 64 2 279 1 
301 2 154 1 210 3 261 1 68 2 132 3 25 1 134 7 188 3 52 1 242 1 243 1 3 1 310 11 271 1 363 1 117 4 99 2 322 1 122 3 102 6 124 1 42 1 295 1 255 1 64 2 279 1 
127 1 301 3 154 1 210 4 261 2 68 3 132 4 25 1 134 9 188 4 52 2 242 1 3 1 310 16 271 1 363 3 117 7 99 6 322 1 122 4 102 8 124 3 42 1 295 2 255 1 64 3 279 1 
363 3 58 1 117 4 305 1 99 6 68 1 134 3 294 2 124 3 295 1 14 3 104 3 310 7 
127 1 301 2 154 1 210 4 261 2 305 1 68 3 132 4 25 1 134 10 188 4 52 1 242 1 3 1 310 18 197 1 271 1 363 4 58 1 117 8 99 5 322 1 122 4 102 8 294 1 124 1 42 1 295 2 104 1 14 1 255 1 64 2 279 1 
363 2 58 1 210 2 117 4 261 1 305 1 68 1 99 3 132 2 134 4 122 2 188 2 102 4 124 1 294 1 295 1 14 1 104 1 310 8 197 1 
363 2 58 1 117 3 305 1 99 2 68 1 134 3 294 1 295 1 14 1 104 1 310 6 197 1 153 1 
363 1 301 1 210 1 117 2 99 2 68 1 132 1 134 2 52 1 122 1 188 1 102 2 124 1 295 1 243 1 310 4 64 1 
363 1 74 1 301 1 117 4 68 1 99 2 134 3 52 1 242 1 42 2 124 1 295 1 3 1 310 7 64 1 
301 2 107 1 210 2 261 2 305 1 22 1 68 3 132 2 134 11 52 2 188 2 242 2 310 23 197 1 363 5 58 1 74 1 117 12 99 9 122 2 102 4 123 1 294 1 124 4 42 2 295 3 104 2 14 2 64 2 
42 1 310 1 117 1 
242 1 310 1 134 1 
179 1 363 2 301 1 210 1 117 3 68 1 99 3 132 1 134 3 188 1 122 1 52 1 102 2 124 1 243 1 295 1 310 6 64 1 
301 2 154 1 210 1 68 2 132 1 25 1 134 6 188 1 52 2 242 1 3 1 310 12 271 1 363 1 117 6 99 2 322 1 122 1 102 2 124 1 42 1 295 2 255 1 64 2 279 1 
363 1 117 3 305 1 68 1 99 2 134 3 124 1 295 1 14 1 104 1 310 6 
363 1 58 1 210 1 117 2 261 1 99 2 132 1 134 1 122 1 188 1 123 1 102 2 124 1 294 1 104 1 14 1 310 3 
363 2 117 4 333 1 305 1 99 3 68 2 134 4 124 1 295 2 14 1 104 1 310 8 
301 1 210 1 68 1 99 1 132 1 134 2 122 1 188 1 102 2 124 1 310 2 279 1 
363 1 301 1 210 1 117 2 99 2 68 1 132 1 134 2 52 1 122 1 188 1 102 2 124 1 295 1 310 4 64 1 279 1 
127 1 363 1 210 3 261 1 117 2 99 2 132 3 134 1 122 3 188 3 123 1 102 6 124 1 14 1 104 1 310 3 279 1 
127 1 301 3 283 1 210 5 261 2 305 2 68 5 132 5 357 1 134 16 188 5 52 3 242 3 243 1 3 1 310 34 337 1 197 1 363 7 58 1 74 1 117 18 99 12 122 5 123 1 102 10 294 1 42 4 124 5 295 5 104 3 14 3 64 3 279 1 
181 1 245 1 161 1 5 1 356 1 106 1 327 1 
57 1 181 1 245 1 161 1 5 1 338 1 7 1 356 1 106 1 334 1 327 1 308 1 
343 1 75 1 88 1 59 1 159 1 225 1 48 1 359 1 377 1 240 1 153 1 
343 1 181 1 88 1 129 1 59 1 330 1 222 1 131 1 225 1 48 1 168 1 356 2 240 1 159 1 161 2 247 1 377 1 106 1 
343 1 181 1 88 1 129 2 59 1 38 1 330 1 354 1 222 1 78 1 131 2 225 1 366 1 48 3 168 1 356 2 287 1 240 1 203 1 161 2 247 1 377 2 106 2 
181 1 129 2 88 1 354 1 330 1 131 2 48 3 356 2 240 1 287 1 138 1 161 2 247 1 343 2 59 2 38 1 78 1 225 2 366 1 168 1 203 1 297 1 377 2 106 2 
88 1 354 1 131 1 332 1 48 4 238 1 240 1 287 1 159 1 96 2 267 2 72 1 142 1 343 3 59 3 38 1 225 3 79 1 105 1 297 1 277 1 374 1 377 1 
343 3 88 1 59 3 38 1 354 1 131 1 332 1 225 3 79 1 48 4 238 1 287 1 240 1 201 1 159 1 267 2 96 2 297 1 277 1 72 1 377 1 142 1 
343 1 88 1 59 1 225 1 33 1 240 1 
66 1 178 1 343 7 87 1 59 7 88 3 131 1 225 6 48 3 11 1 184 1 214 1 240 2 192 1 159 2 33 1 377 2 65 1 18 1 360 1 73 1 
178 1 180 1 181 2 129 1 88 1 330 1 131 1 48 1 132 2 134 3 240 1 188 2 247 1 197 1 343 1 58 1 344 1 59 1 99 2 102 4 200 2 294 1 295 1 14 1 104 1 349 1 17 1 152 1 106 1 210 2 207 2 305 1 68 1 356 2 307 1 310 6 161 2 363 2 222 1 117 3 225 1 273 1 168 1 122 2 170 1 231 1 377 1 
89 2 332 1 48 2 238 1 239 1 2 1 288 1 27 1 159 1 69 1 110 2 96 3 267 3 55 1 72 1 142 1 270 2 9 1 343 1 59 1 225 1 79 1 321 1 13 2 201 1 150 1 277 2 280 1 
66 1 178 1 343 2 88 2 59 2 131 1 225 2 79 1 48 2 33 1 377 1 8 1 240 1 
178 1 343 4 75 1 88 1 59 4 225 4 48 1 240 1 159 1 151 1 297 1 359 1 377 1 
143 1 343 2 59 2 88 2 354 1 131 1 225 2 48 1 240 1 94 1 62 1 377 1 65 1 73 1 
145 1 343 1 229 1 88 1 59 1 159 1 44 1 97 1 225 1 240 1 
178 1 343 2 353 1 87 1 59 2 88 1 225 2 48 1 184 1 240 1 377 1 
178 1 343 5 75 1 87 1 59 5 88 2 354 1 225 4 48 3 240 2 192 1 159 1 151 1 359 1 377 2 360 1 
178 1 343 5 75 1 87 1 59 5 88 2 354 1 225 4 48 3 240 2 43 1 192 1 159 1 151 1 359 1 377 2 
343 1 181 1 88 1 129 1 59 1 330 1 131 1 225 1 48 1 168 1 356 2 240 1 138 1 159 1 161 2 247 1 377 1 106 1 
66 1 343 1 59 1 88 2 354 1 131 1 225 1 48 1 240 1 377 1 65 1 18 1 73 1 
36 1 325 1 161 1 194 1 71 1 174 1 226 1 356 1 106 1 
191 1 95 1 71 1 
36 1 181 1 162 1 174 1 71 1 
36 2 181 1 0 1 78 1 272 1 332 1 366 1 238 1 191 1 95 1 193 1 267 2 96 2 203 1 162 2 71 1 174 2 72 1 280 1 
336 1 352 1 252 1 153 1 
336 1 352 1 316 1 323 1 83 1 126 1 252 1 
323 1 348 1 56 1 
336 1 352 1 316 1 323 3 199 1 345 1 30 2 139 1 83 1 126 3 93 1 252 1 
336 1 352 1 316 1 323 2 83 1 126 2 213 1 92 1 252 1 
171 1 316 1 323 1 199 1 229 1 44 1 195 1 83 1 126 1 313 1 252 1 
336 1 316 1 323 1 199 1 83 1 126 1 252 1 
336 2 352 1 316 1 323 1 199 1 83 1 126 1 
316 2 199 1 293 1 252 1 336 1 323 2 215 1 83 2 126 2 375 1 
352 1 316 1 199 1 221 1 213 2 252 2 336 1 323 3 31 1 296 1 83 1 195 1 126 3 
352 1 316 1 145 1 199 1 285 1 213 1 252 1 336 1 103 1 323 2 229 1 44 2 83 1 126 2 313 1 
352 1 316 2 199 1 221 1 213 2 92 1 252 2 336 1 323 4 140 1 83 2 195 1 126 4 
336 1 352 1 316 1 323 1 199 1 83 1 126 1 252 1 
328 1 352 2 316 1 345 1 221 1 213 2 93 1 252 3 336 2 323 4 30 1 83 1 195 1 126 4 
336 1 352 1 316 1 323 2 199 1 235 1 83 1 126 2 213 1 176 1 298 1 252 1 
336 1 352 1 316 1 323 3 199 1 345 1 30 2 208 1 83 1 126 3 93 2 252 1 
236 1 50 2 252 2 135 1 
316 1 323 1 199 1 83 1 126 1 257 1 
336 1 352 1 316 1 323 2 199 1 31 1 83 1 126 2 213 1 252 1 
373 1 
336 1 352 1 316 1 323 1 199 1 83 1 126 1 252 1 
336 1 352 1 316 1 323 3 199 1 31 1 30 1 83 1 126 3 213 1 252 1 
328 1 221 1 195 1 252 1 
336 1 252 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 73 (261,325) (261,325) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 73 (261,325) (261,325) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 73 (261,325) (261,325) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 73 (261,325) (261,325) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 182 (40,129,303) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (29,177) 13 334 (58,256) 113 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 77 (29,177) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (29,177) 13 334 (58,256) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 322 1 242 1 204 1 261 1 264 1 170 1 288 1 300 1 357 1 3 1 173 1 325 1 
73 1 322 1 242 1 204 1 261 1 264 1 170 1 288 1 300 1 357 1 3 1 173 1 325 1 
73 1 322 1 242 1 204 1 261 1 264 1 170 1 288 1 300 1 357 1 3 1 173 1 325 1 
73 1 322 1 242 1 204 1 261 1 264 1 170 1 288 1 300 1 357 1 3 1 173 1 325 1 
73 1 74 1 242 1 322 1 366 1 264 1 149 3 105 1 357 1 3 4 358 2 106 1 97 1 316 2 300 4 155 1 173 1 19 3 
73 1 185 1 242 1 264 1 265 1 357 1 3 2 97 1 130 1 204 1 170 1 300 2 155 1 301 1 173 1 19 1 
242 1 366 1 264 2 149 1 357 2 3 3 338 1 97 1 316 1 170 1 300 3 155 1 19 2 
73 1 74 1 322 1 242 1 366 3 264 2 149 7 105 1 357 2 358 2 3 9 106 1 189 1 338 1 97 1 316 4 109 1 43 1 170 1 300 9 155 1 173 1 207 1 19 5 
73 1 74 1 322 1 242 1 366 3 264 2 149 7 105 1 357 2 358 2 3 9 106 1 189 1 338 1 97 1 316 4 109 1 43 1 170 1 300 9 155 1 173 1 207 1 19 5 
184 1 11 1 62 1 367 1 279 1 315 1 191 1 81 1 169 1 142 1 71 1 157 1 134 1 354 1 
190 1 
38 1 304 1 190 1 
51 1 190 1 282 2 
191 2 81 2 367 1 279 2 142 2 157 2 71 2 225 1 
239 2 75 1 20 1 210 1 186 1 213 1 139 1 163 1 164 2 248 1 269 1 95 1 98 1 191 3 24 2 100 2 249 1 81 2 364 1 29 1 102 2 194 1 142 2 225 1 33 1 227 1 367 1 344 1 64 1 279 2 107 1 41 1 298 1 88 1 157 3 71 2 158 1 
191 1 11 1 81 1 169 1 367 1 279 1 142 1 157 1 71 1 134 1 
184 1 241 1 267 1 190 1 315 1 191 2 81 1 169 2 142 2 274 1 11 1 254 1 367 1 279 1 131 1 203 1 304 1 157 2 71 1 134 1 354 1 
184 2 241 1 267 1 190 1 315 2 191 2 81 2 169 2 142 2 274 1 11 1 254 1 367 1 279 2 304 1 157 2 71 2 354 1 134 1 
184 1 6 1 62 1 247 1 315 1 
228 1 184 2 62 1 247 1 304 1 314 1 190 1 315 2 
184 1 247 1 315 1 
184 2 136 1 62 1 247 1 304 1 314 1 190 1 315 2 
184 5 209 1 104 2 212 2 161 1 62 2 247 2 85 2 314 1 190 1 315 5 299 1 271 1 205 1 302 1 304 1 372 1 112 1 145 1 
82 1 279 1 191 2 81 1 340 1 142 2 157 2 71 1 225 2 
38 1 225 1 
227 1 186 1 163 1 344 1 164 1 64 1 95 1 191 1 218 1 24 1 100 1 364 1 29 1 157 1 225 1 33 1 
227 1 294 1 186 1 163 1 64 1 344 1 164 1 95 1 369 1 191 2 24 1 100 1 81 1 364 1 29 1 142 1 71 1 157 2 33 1 147 1 
277 1 201 1 147 1 
294 2 82 1 84 1 279 1 191 5 369 1 81 4 203 1 370 1 132 1 142 5 71 4 157 5 225 1 
191 2 81 2 169 1 142 2 157 2 71 2 374 1 134 1 
294 1 191 3 81 3 279 1 142 3 157 3 71 3 225 1 
191 1 81 1 169 1 142 1 157 1 71 1 134 1 
191 1 82 1 81 1 169 1 340 1 279 1 142 1 157 1 71 1 
184 1 239 1 241 1 331 1 186 1 139 1 248 1 95 1 191 4 98 1 100 1 194 1 102 2 142 3 294 1 254 1 344 1 64 1 298 1 71 3 157 4 158 1 20 1 163 1 213 1 164 1 267 1 268 1 315 1 362 1 24 1 81 3 169 2 364 1 29 1 33 1 225 1 274 1 227 1 82 1 367 1 279 2 369 1 41 1 88 1 
191 2 294 1 81 1 203 1 132 1 142 2 157 2 71 1 225 1 
184 1 294 2 82 1 241 1 254 1 267 1 2 1 279 1 190 1 315 1 369 1 191 3 362 1 81 3 169 1 142 3 71 3 157 3 274 1 
294 1 82 1 277 1 279 1 191 2 81 2 142 2 71 2 157 2 147 1 
227 1 186 1 163 1 344 1 164 1 64 1 95 1 191 1 24 1 100 1 364 1 29 1 157 1 225 1 33 1 
227 1 186 1 211 1 162 1 344 1 164 1 64 1 95 1 191 1 24 1 100 1 364 1 157 1 225 1 33 1 
239 4 210 2 139 1 213 2 244 1 248 1 361 1 5 1 98 1 120 1 101 1 341 1 102 2 194 1 32 1 147 2 321 1 174 1 323 1 277 2 201 2 41 1 88 1 69 1 
191 1 241 1 81 1 169 1 142 1 157 1 71 1 374 1 
45 1 129 1 
45 1 129 1 
303 1 182 1 
303 1 182 1 
303 1 182 1 
57 1 45 1 129 1 
45 1 303 1 182 1 129 1 
45 1 129 1 40 1 
57 1 45 1 129 1 
57 1 45 1 129 1 
83 1 45 1 129 1 
83 1 45 1 129 1 
83 1 45 1 129 1 
184 1 22 1 360 1 315 1 191 2 81 2 172 1 142 2 225 1 273 1 126 1 63 1 129 1 347 1 281 1 66 1 231 1 40 1 67 1 285 1 45 1 71 2 72 1 157 2 
184 2 263 1 94 1 360 1 129 2 283 1 190 1 281 2 66 2 315 2 67 3 7 1 18 1 45 2 371 1 306 2 172 2 72 2 342 1 
322 1 0 2 265 1 329 1 173 2 
73 1 322 1 173 1 
73 1 265 1 173 1 
322 2 202 1 0 1 265 1 329 1 173 3 
322 1 0 1 265 1 329 1 173 2 14 1 
184 5 138 2 187 1 212 1 247 1 314 1 190 2 5 1 315 5 79 1 51 1 120 1 293 2 124 2 104 1 148 1 126 1 62 4 323 1 85 1 346 1 347 1 282 3 231 1 299 1 328 1 69 1 205 2 304 1 112 3 238 1 375 1 
184 9 138 6 187 3 212 2 214 1 247 6 188 5 314 1 190 5 5 3 315 9 6 5 118 1 141 1 51 3 120 3 124 6 148 1 104 2 62 7 323 3 85 2 39 1 347 4 282 9 299 1 42 1 328 2 69 3 205 6 302 1 304 1 112 8 238 2 48 1 
184 3 212 1 187 1 138 2 190 3 315 3 5 1 79 1 51 2 120 1 293 1 124 2 104 1 62 2 323 1 85 1 346 1 347 1 282 4 328 1 69 1 205 2 302 1 304 1 112 3 238 1 
184 4 138 4 212 1 187 2 214 1 190 4 315 4 5 2 79 1 141 1 51 3 120 2 293 2 124 4 104 1 62 3 323 2 85 1 39 1 346 1 347 2 282 7 328 1 69 2 205 4 302 1 304 1 112 5 238 1 
343 1 
186 1 125 1 38 1 
186 1 195 1 
186 1 95 1 33 1 
186 1 143 1 
186 1 95 1 
186 3 125 2 196 1 95 1 33 1 258 1 
239 7 159 1 210 4 213 3 244 3 150 1 323 1 93 1 86 1 233 1 108 1 120 1 70 1 341 2 30 1 53 2 286 1 
239 7 159 1 210 4 213 3 244 3 150 1 323 1 93 1 86 1 233 1 108 1 120 1 70 1 341 2 30 1 53 2 286 1 
239 7 159 1 210 4 213 3 244 3 150 1 323 1 93 1 86 1 233 1 108 1 120 1 70 1 341 2 30 1 272 1 53 2 286 1 
239 6 159 1 210 3 137 1 213 3 139 1 244 2 93 1 248 1 98 1 30 1 341 1 102 2 171 1 53 1 295 1 65 1 233 1 108 2 234 1 88 1 181 1 70 1 183 1 
239 9 210 5 139 2 213 4 244 4 93 1 248 2 98 2 120 1 341 3 30 1 102 4 53 2 295 1 150 1 323 1 230 1 278 1 86 1 233 1 108 1 88 2 70 1 286 1 
332 1 186 1 264 1 1 2 164 1 357 1 3 1 337 1 95 1 117 2 100 1 24 1 364 1 28 2 170 2 8 1 52 1 365 1 60 1 64 1 344 1 345 1 300 1 
73 1 309 1 242 1 264 1 265 1 1 1 164 1 357 1 166 1 3 2 97 1 117 1 78 1 49 1 100 1 24 1 364 1 28 1 170 1 173 2 322 1 123 1 149 1 64 1 202 1 87 1 300 2 68 1 155 1 19 1 
73 1 309 1 264 1 265 1 1 1 164 1 357 1 3 3 115 1 97 1 117 1 78 1 49 1 100 1 24 1 364 1 28 1 170 1 173 2 322 1 365 1 123 1 149 2 64 1 202 1 87 1 300 3 155 1 19 1 262 1 
73 1 309 1 265 1 1 1 164 1 3 2 115 1 97 1 117 1 78 1 49 1 100 1 24 1 364 1 170 1 28 1 173 2 322 1 149 2 64 1 202 1 300 2 155 1 19 1 262 1 
73 1 309 1 242 1 264 1 265 1 1 1 164 1 357 1 3 1 115 1 117 1 78 1 49 1 100 1 24 1 364 1 28 1 170 1 173 2 322 1 123 1 64 1 202 1 87 1 300 1 68 1 
339 1 
184 5 241 1 186 1 247 6 95 1 190 4 191 1 100 2 250 1 51 2 9 1 142 1 52 1 144 2 198 1 56 4 104 1 254 1 61 1 151 1 344 2 64 1 345 1 349 2 16 2 299 1 203 1 205 2 304 3 112 2 157 1 353 1 356 1 212 1 164 2 267 1 114 1 314 3 315 5 24 2 364 1 169 1 121 1 224 1 274 1 275 2 85 1 280 2 368 1 282 2 131 1 44 2 235 2 238 1 135 1 
184 3 241 1 136 1 267 1 247 2 114 1 314 1 190 2 315 3 191 1 169 1 250 1 9 1 142 1 198 1 144 1 274 1 56 2 254 1 61 1 131 1 203 1 304 2 157 1 
184 2 56 3 241 1 254 1 61 1 267 1 114 1 349 1 190 2 315 2 191 1 131 1 169 1 203 1 250 1 9 1 304 2 142 1 157 1 198 1 274 1 
184 3 241 1 136 1 267 1 247 2 114 1 314 1 190 3 315 3 191 1 169 1 250 1 9 1 142 1 198 1 144 1 274 1 56 3 254 1 275 1 61 1 349 1 131 1 203 1 304 3 157 1 
184 5 241 1 91 1 136 1 247 7 96 1 190 4 191 2 250 1 51 2 9 1 142 2 198 1 144 4 11 1 56 5 104 1 254 1 61 1 349 3 16 2 299 1 203 1 205 1 304 4 112 1 71 1 157 2 354 1 356 1 310 1 212 1 267 1 167 1 114 1 314 3 315 5 81 1 169 2 119 1 224 1 274 1 275 4 367 1 85 1 279 1 280 2 131 1 44 2 235 2 134 1 
184 4 241 1 247 4 190 4 191 1 250 1 51 2 9 1 142 1 198 1 144 2 56 4 104 1 254 1 61 1 349 2 16 2 299 1 203 1 205 1 304 3 112 1 157 1 356 1 212 1 267 1 114 1 314 2 315 4 169 1 224 1 274 1 275 2 85 1 280 2 282 2 368 1 131 1 44 2 235 2 
184 4 241 1 356 1 212 1 310 1 267 1 247 4 114 1 314 2 96 1 190 3 315 4 191 1 119 1 169 1 250 1 51 2 9 1 224 1 142 1 144 2 198 1 274 1 56 4 104 1 275 2 254 1 61 1 85 1 280 2 349 2 16 2 299 1 131 1 44 2 203 1 235 2 205 1 304 3 112 1 157 1 
184 4 241 1 356 1 212 1 310 1 267 1 247 4 114 1 314 2 96 1 190 3 315 4 191 1 119 1 169 1 250 1 51 2 9 1 224 1 142 1 144 2 198 1 274 1 56 4 104 1 275 2 254 1 61 1 85 1 280 2 349 2 16 2 299 1 131 1 44 2 203 1 235 2 205 1 304 3 112 1 157 1 
184 4 241 1 76 2 160 1 212 1 267 1 247 4 114 1 314 2 190 3 315 4 191 1 119 1 169 1 250 1 9 1 224 1 142 1 144 2 198 1 274 1 54 2 56 4 104 1 275 2 254 1 61 1 85 1 349 2 282 2 259 1 232 1 16 2 299 1 131 1 203 1 235 2 205 1 304 3 112 1 157 1 
184 4 241 1 356 1 212 1 310 1 267 1 167 1 247 5 114 1 314 2 96 1 190 3 315 4 191 1 119 1 169 1 250 1 51 2 9 1 224 1 142 1 198 1 144 3 274 1 56 5 104 1 254 1 275 3 61 1 85 1 280 2 349 3 16 2 299 1 131 1 44 2 203 1 235 2 205 1 304 3 112 1 157 1 
184 4 241 1 356 1 212 1 310 1 267 1 167 1 247 5 114 1 314 2 96 1 190 3 315 4 191 1 119 1 169 1 250 1 51 2 9 1 224 1 142 1 198 1 144 3 274 1 56 5 104 1 254 1 275 3 61 1 85 1 280 2 349 3 16 2 299 1 131 1 44 2 203 1 235 2 205 1 304 3 112 1 157 1 
184 4 241 1 247 4 190 3 191 1 250 1 9 1 142 1 198 1 144 2 56 4 54 2 104 1 254 1 61 1 349 2 259 1 16 2 299 1 203 1 205 1 304 3 112 1 157 1 76 2 212 1 267 1 114 1 314 2 315 4 169 1 224 1 274 1 275 2 85 1 282 2 368 1 131 1 235 2 
239 6 321 1 210 3 213 3 244 2 139 1 150 1 38 1 323 1 93 1 248 1 277 1 201 1 86 1 98 1 41 1 88 1 120 1 341 2 30 1 194 1 102 2 53 1 225 2 286 1 147 1 
239 11 20 1 210 6 244 2 213 5 139 2 137 2 187 2 268 1 248 2 5 2 98 2 169 1 341 1 120 2 102 4 194 1 122 1 171 2 251 1 225 1 147 8 55 1 323 1 277 3 127 1 201 8 41 2 180 1 179 1 88 2 70 1 69 1 
239 2 75 1 20 1 186 1 210 1 163 1 139 1 213 1 164 1 248 1 312 1 95 1 218 1 191 2 98 1 100 1 24 1 81 1 364 1 29 1 194 1 102 2 197 1 142 1 225 1 33 1 227 1 294 1 35 1 64 1 344 1 277 1 127 1 369 1 41 1 88 1 157 2 71 1 
239 20 90 1 186 2 139 3 187 2 244 8 93 1 248 3 95 2 290 2 140 2 5 2 98 3 191 3 100 3 341 4 102 6 194 3 142 1 53 1 147 7 294 1 150 1 344 1 64 2 256 2 201 7 153 2 298 2 70 4 69 2 71 1 157 3 75 1 20 1 210 10 213 10 163 2 164 3 115 1 24 3 318 1 81 1 364 2 29 2 30 1 120 3 225 2 226 1 33 2 227 2 323 3 277 7 127 1 86 1 369 1 41 3 88 3 286 1 
239 3 210 1 244 1 139 1 187 1 213 2 248 1 5 1 98 1 191 1 81 1 341 1 120 1 102 2 194 1 142 1 147 1 82 1 323 1 277 1 279 1 201 1 127 1 41 1 88 1 69 1 89 1 71 1 157 1 
239 2 186 4 139 2 246 1 248 2 4 1 95 3 98 2 191 1 100 7 249 2 194 2 102 4 142 1 52 1 252 1 294 1 103 1 12 1 199 1 344 2 64 4 345 1 71 1 157 1 308 1 75 1 20 1 210 1 213 1 164 6 166 1 23 1 115 1 24 7 81 1 364 3 33 1 321 1 324 1 128 1 41 2 88 2 
239 2 321 1 174 1 210 2 244 1 139 1 248 1 277 1 201 1 5 1 98 1 41 1 88 1 70 1 120 1 194 1 102 2 147 1 
239 2 321 1 244 1 139 1 213 2 323 1 248 1 277 1 201 1 98 1 41 1 88 1 341 1 101 1 69 1 194 1 102 2 147 1 
239 4 210 2 187 1 139 1 244 2 213 2 248 1 5 1 98 1 120 1 341 1 102 2 194 1 147 2 321 1 323 1 277 2 201 2 41 1 88 1 70 1 69 1 
239 2 174 1 210 2 244 1 139 1 248 1 277 1 201 1 5 1 98 1 41 1 88 1 70 1 120 1 194 1 102 2 147 1 252 1 
239 2 244 1 139 1 213 2 323 1 248 1 277 1 201 1 98 1 41 1 88 1 341 1 101 1 69 1 194 1 102 2 147 1 252 1 
239 4 210 2 187 1 139 1 244 2 213 2 248 1 5 1 98 1 120 1 341 1 102 2 194 1 252 1 147 2 323 1 277 2 201 2 41 1 88 1 70 1 69 1 
239 4 210 2 187 1 139 1 244 2 213 2 248 1 5 1 98 1 120 1 341 1 102 2 194 1 147 2 323 1 277 2 201 2 41 1 88 1 70 1 69 1 
239 2 75 1 20 1 210 1 186 1 163 1 139 1 213 1 164 1 248 1 95 1 191 1 98 1 100 1 24 1 364 1 29 1 194 1 102 2 225 1 33 1 227 1 64 1 344 1 298 1 41 1 88 1 157 1 
239 2 75 1 20 1 210 1 186 1 211 1 162 1 139 1 213 1 164 1 248 1 95 1 191 1 98 1 100 1 24 1 364 1 194 1 102 2 225 1 33 1 227 1 276 1 64 1 344 1 41 1 88 1 157 1 
239 4 210 2 187 1 139 1 244 2 213 2 248 1 5 1 98 1 120 1 341 1 102 2 194 1 147 2 323 1 277 2 127 1 201 2 41 1 88 1 70 1 69 1 
239 4 210 2 186 1 213 2 244 2 163 1 139 1 187 1 164 1 166 1 248 1 95 1 290 1 5 1 191 1 98 1 100 1 24 1 364 1 29 1 341 1 120 1 194 1 102 2 33 1 147 2 227 1 323 1 64 1 277 2 201 2 298 1 41 1 88 1 69 1 70 1 157 1 
239 3 210 2 213 1 244 1 139 1 245 1 187 1 248 1 5 1 98 1 191 1 81 1 120 1 102 2 194 1 142 1 147 1 82 1 323 1 279 1 277 1 127 1 201 1 41 1 88 1 69 1 70 1 71 1 157 1 
239 33 333 1 287 1 210 17 244 6 139 4 213 16 137 2 21 1 187 3 311 1 93 1 248 4 5 3 98 4 26 1 319 1 30 1 341 3 120 4 102 8 171 2 53 1 295 2 150 1 323 4 230 1 255 1 86 1 152 1 176 1 15 1 88 4 70 3 181 2 69 3 206 1 305 1 156 1 111 3 286 1 
239 26 333 1 210 14 244 4 213 12 139 3 137 2 21 1 187 3 311 1 248 3 5 3 98 3 26 1 319 1 221 1 341 2 120 3 102 6 171 2 295 2 323 2 230 1 255 2 152 1 176 1 15 2 88 3 70 2 181 2 69 2 305 1 111 4 156 1 
239 37 333 1 287 1 210 19 244 7 139 4 213 18 137 3 21 1 187 3 311 1 93 1 248 4 5 3 98 4 26 1 319 1 221 1 30 1 341 3 120 4 102 8 171 3 53 1 295 2 150 1 323 4 230 1 255 2 86 1 152 1 176 1 15 1 17 1 88 4 70 4 181 3 69 3 305 1 156 1 111 4 286 1 
239 35 333 1 287 1 210 18 244 5 139 4 213 17 137 2 21 1 187 3 311 1 93 1 248 4 5 3 98 4 26 1 319 1 221 1 30 1 341 2 120 4 102 8 171 2 53 1 295 2 150 1 323 4 230 1 255 1 86 1 152 1 176 1 15 1 88 4 70 3 181 2 69 3 305 1 156 1 111 4 286 1 
239 28 333 1 210 14 244 6 139 3 213 14 137 2 21 1 187 3 311 1 248 3 5 3 98 3 26 1 319 1 221 1 341 3 120 3 102 6 171 2 295 2 323 3 230 1 255 1 152 1 176 1 15 1 88 3 70 3 181 2 69 3 305 1 156 1 111 4 
45 1 94 1 172 1 72 1 129 1 283 1 342 1 217 1 281 1 66 1 
34 1 57 1 
335 1 83 1 236 1 
184 1 263 1 94 1 360 1 129 1 283 1 190 1 281 1 315 1 66 1 67 2 7 1 45 1 371 1 306 1 172 1 72 1 342 1 
184 1 263 1 94 1 360 1 129 1 283 1 190 1 281 1 315 1 66 1 67 2 7 1 45 1 371 1 306 1 172 1 72 1 342 1 
184 1 263 1 94 1 360 1 129 1 283 1 190 1 281 1 315 1 66 1 67 2 7 1 45 1 371 1 306 1 172 1 72 1 342 1 
34 1 57 1 335 1 
34 1 57 1 335 1 
83 1 236 1 
335 1 83 1 236 1 
285 1 22 1 
184 1 22 1 315 1 191 2 81 2 172 1 142 2 225 1 31 1 273 1 62 1 126 1 63 1 129 1 347 1 281 1 66 1 231 1 40 1 67 1 285 1 371 1 45 1 306 1 157 2 72 1 71 2 
273 1 40 1 
25 1 220 1 45 1 172 1 72 1 129 1 257 1 281 1 66 1 
191 1 260 1 142 1 157 1 
186 1 60 1 1 1 64 1 344 1 164 1 215 1 345 1 95 1 24 1 100 1 364 1 52 1 133 1 
73 1 322 1 123 1 265 1 1 1 64 1 164 2 166 1 115 1 291 1 78 1 49 1 24 2 100 2 202 1 364 1 27 1 173 2 133 1 
73 1 322 1 123 1 265 1 1 1 164 1 64 1 115 1 291 1 78 1 49 1 24 1 100 1 202 1 326 1 364 1 173 2 
73 1 322 1 123 1 265 1 1 1 64 1 164 1 115 1 291 1 78 1 49 1 24 1 100 1 202 1 364 1 27 1 173 2 133 1 
168 1 
124 5 187 2 138 5 323 2 200 1 313 2 282 10 190 5 153 1 5 2 120 2 205 5 51 5 69 2 112 5 
104 1 212 1 85 1 190 1 299 1 271 1 205 1 372 1 304 1 112 1 
271 1 38 1 205 1 304 1 372 1 112 1 190 1 
184 1 356 1 212 1 247 1 314 1 190 2 315 1 51 1 104 1 85 1 280 1 282 1 299 1 44 1 205 1 304 1 112 1 
186 4 113 1 334 1 212 1 164 1 95 1 100 1 24 1 364 1 195 2 196 1 33 1 58 1 104 1 125 1 344 1 64 2 85 1 13 1 299 1 177 1 112 1 238 1 208 1 
184 1 138 5 212 2 137 1 21 1 187 2 311 1 247 1 313 2 314 1 270 1 190 5 315 1 5 2 26 1 319 1 51 3 120 2 171 1 124 5 104 2 323 2 85 2 200 1 282 6 299 2 181 1 205 5 69 2 237 1 305 1 304 2 112 8 238 1 135 1 
184 1 212 1 93 1 313 2 96 1 315 1 191 1 81 1 169 1 30 1 120 2 142 1 11 1 104 1 323 1 367 1 85 1 279 1 200 1 86 1 299 1 327 1 205 2 112 2 157 1 71 1 134 1 354 1 
184 1 247 1 304 1 314 1 190 1 315 1 
184 3 355 1 186 1 212 2 164 4 247 4 336 1 95 1 314 2 315 3 100 4 24 4 80 2 364 1 121 1 52 1 10 1 104 2 64 1 344 2 85 2 345 1 299 1 205 2 302 1 112 2 238 2 353 1 135 2 
239 1 20 1 186 1 213 1 163 1 139 1 164 1 248 1 95 1 98 1 191 3 100 1 24 1 81 2 364 1 29 1 102 2 194 1 142 2 225 1 33 1 227 1 344 1 367 1 64 1 279 2 298 1 41 1 88 1 157 3 71 2 158 1 
124 2 104 1 138 2 212 1 85 1 282 4 190 4 299 1 51 2 205 2 304 2 112 1 238 1 53 1 135 1 
110 1 72 1 281 1 
285 1 165 1 72 1 283 1 281 1 
110 1 72 1 281 1 
110 1 72 1 281 1 
193 1 72 1 281 1 
193 1 72 1 281 1 
193 1 72 1 281 1 
72 1 281 1 
45 1 129 1 
239 10 210 5 139 1 244 5 213 5 93 2 323 2 230 1 248 1 86 1 98 1 327 1 88 1 30 2 341 3 70 2 120 2 102 2 
239 2 210 2 139 1 244 1 230 1 248 1 5 1 98 1 88 1 120 1 70 1 102 2 
239 4 210 2 213 2 244 2 139 1 187 1 323 1 230 1 248 1 5 1 98 1 88 1 341 1 69 1 120 1 70 1 102 2 
239 3 295 1 287 1 210 1 213 2 139 3 244 2 93 1 230 1 248 3 98 3 234 1 88 3 30 1 341 1 70 1 102 6 
239 15 287 1 210 7 244 6 213 8 266 1 139 4 137 1 93 2 248 4 98 4 120 2 30 2 341 3 102 8 171 1 295 1 150 1 323 2 230 1 86 1 327 1 88 4 234 1 70 3 181 1 183 1 286 1 
239 8 295 1 210 4 213 4 244 3 139 2 150 1 323 1 93 1 248 2 86 1 98 2 88 2 120 1 70 1 341 2 30 1 102 4 53 1 286 1 
239 6 210 3 213 3 150 1 244 2 38 1 93 1 323 1 86 1 30 1 341 2 120 1 53 1 286 1 
239 4 210 2 213 2 244 2 266 1 139 1 187 1 323 1 248 1 5 1 98 1 88 1 341 1 69 1 120 1 70 1 102 2 
239 2 210 1 137 1 213 1 181 1 171 1 
239 25 210 13 187 2 137 2 213 12 244 8 139 1 93 2 248 1 5 2 98 1 341 4 30 2 120 5 102 2 171 2 122 1 251 1 53 1 295 1 150 1 323 5 86 2 327 1 179 1 88 1 69 2 70 4 286 1 
239 1 213 1 171 1 
239 1 210 1 137 1 
239 6 210 3 139 1 266 1 213 3 187 1 244 3 323 1 248 1 153 1 5 1 98 1 88 1 120 1 70 1 69 1 341 2 102 2 
239 12 210 6 137 1 213 6 139 1 21 1 187 2 244 2 311 1 248 1 5 2 98 1 26 1 319 1 120 2 341 1 102 2 171 1 323 2 230 1 88 1 70 1 181 1 69 2 305 1 
239 6 210 3 213 3 244 2 323 1 93 1 86 1 120 1 30 1 341 1 70 1 
239 3 295 1 210 1 244 2 150 1 213 2 139 1 93 1 248 1 98 1 234 1 88 1 70 1 341 1 30 1 102 2 286 1 
239 24 210 14 137 1 213 10 139 2 21 1 187 2 244 9 311 1 93 2 248 2 5 2 98 2 26 1 319 1 30 2 120 5 341 5 102 4 171 1 53 1 295 1 150 1 323 4 230 1 86 2 327 1 88 2 70 4 181 1 69 1 305 1 286 1 
239 17 210 10 213 7 139 3 266 1 137 1 21 1 187 2 244 4 311 1 93 1 248 3 5 2 98 3 26 1 319 1 30 1 120 3 341 3 102 6 171 1 53 1 295 1 150 1 323 2 230 1 86 1 88 3 70 1 181 1 69 1 305 1 286 1 
239 19 210 9 266 1 137 1 213 10 139 3 21 1 187 2 244 4 311 1 93 1 248 3 5 2 98 3 26 1 319 1 30 1 120 3 341 3 102 6 171 1 53 1 295 1 150 1 323 3 230 1 86 1 88 3 70 1 181 1 69 2 305 1 286 1 
239 17 210 10 266 1 137 1 213 7 139 3 21 1 187 2 244 5 311 1 93 1 248 3 5 2 98 3 26 1 319 1 30 1 120 3 341 3 102 6 171 1 53 1 295 1 150 1 323 2 230 1 86 1 88 3 70 2 181 1 69 1 305 1 286 1 
239 24 210 14 137 1 213 10 139 2 21 1 187 2 244 9 311 1 93 2 248 2 5 2 98 2 26 1 319 1 30 2 120 5 341 5 102 4 171 1 53 1 295 1 150 1 323 4 230 1 86 2 327 1 88 2 70 4 181 1 69 1 305 1 286 1 
239 12 210 6 137 1 213 6 139 1 21 1 187 2 244 2 311 1 248 1 5 2 98 1 26 1 319 1 120 2 341 1 102 2 171 1 323 2 230 1 88 1 70 1 181 1 69 2 305 1 
239 18 210 10 213 8 266 1 139 4 137 1 21 1 187 2 244 5 311 1 93 1 248 4 5 2 98 4 26 1 319 1 30 1 120 3 341 3 102 8 171 1 53 1 295 2 150 1 323 2 230 1 86 1 88 4 70 2 181 1 69 1 305 1 286 1 
239 16 287 1 210 9 213 7 139 4 137 1 21 1 187 3 244 6 311 1 248 4 5 3 98 4 26 1 319 1 120 3 341 3 102 8 171 1 295 2 323 2 230 1 88 4 70 3 181 1 69 2 305 1 
239 7 210 3 213 4 150 2 244 6 323 1 93 3 86 1 30 3 341 3 70 3 120 1 286 1 
239 18 287 1 210 10 213 8 139 4 137 1 21 1 187 2 244 4 311 1 93 1 248 4 5 2 98 4 26 1 319 1 30 1 120 3 341 3 102 8 171 1 53 1 295 2 150 1 323 2 230 1 86 1 88 4 70 1 181 1 69 1 305 1 286 1 
191 1 203 1 243 1 142 1 132 1 157 1 225 1 
330 1 243 1 116 1 191 1 292 1 203 1 373 1 132 1 142 1 157 1 225 1 253 1 
308 1 90 1 186 1 199 1 164 2 246 1 64 2 4 1 95 1 24 2 100 2 80 1 364 1 33 1 
186 1 64 1 344 1 164 4 166 1 216 1 345 1 95 1 175 1 24 4 100 4 364 1 52 1 
100 1 24 1 186 1 364 1 38 1 64 1 164 1 344 1 345 1 95 1 52 1 
227 1 294 1 186 1 64 1 344 1 164 1 95 1 191 2 24 1 100 1 81 1 364 1 29 1 142 1 71 1 157 2 225 1 33 1 
241 1 77 1 186 3 164 1 267 1 95 2 191 2 100 1 24 1 80 1 81 1 364 1 169 1 29 1 142 2 225 1 33 2 143 1 294 1 227 1 64 1 157 2 71 2 
241 1 77 1 186 3 211 1 164 2 267 1 216 1 95 2 191 2 100 2 24 2 80 1 81 1 364 1 169 1 142 2 225 1 33 2 143 1 294 1 227 1 64 1 157 2 71 2 
184 2 77 1 186 4 164 1 247 1 95 1 190 1 315 2 191 1 192 1 100 1 24 1 81 1 80 1 169 1 364 1 195 1 142 1 33 1 143 1 11 1 297 1 125 1 254 1 367 1 64 1 279 1 304 1 157 1 71 1 134 1 354 1 
184 1 77 1 186 4 125 1 164 1 64 1 95 1 315 1 24 1 100 1 177 1 80 1 364 1 195 1 143 1 33 1 
100 1 24 1 364 1 64 1 164 1 146 1 
103 1 186 3 12 1 199 1 92 1 344 2 164 5 246 1 64 3 166 1 23 1 95 2 115 1 128 1 24 6 100 6 249 1 364 2 196 1 33 1 
239 6 210 3 186 1 213 3 244 2 139 2 163 1 93 1 164 1 166 1 248 2 95 1 290 1 191 2 98 2 24 1 100 1 363 1 81 1 364 1 29 1 120 1 341 2 30 1 194 2 102 4 142 1 53 1 225 2 33 1 147 1 227 1 294 1 150 1 323 1 64 1 256 1 277 1 201 1 127 1 86 1 41 2 298 1 88 2 157 2 71 1 286 1 
184 1 58 1 186 2 104 1 125 1 334 1 212 1 62 1 344 1 164 1 85 1 13 1 315 1 100 1 299 1 24 1 177 1 195 1 10 1 
186 2 125 1 164 2 64 2 166 1 95 1 24 2 100 2 364 1 196 1 208 1 33 1 146 1 
73 1 49 1 100 1 24 1 265 1 364 1 64 1 164 1 344 1 173 1 
186 1 12 1 164 2 64 1 166 1 95 1 115 1 24 2 100 2 364 1 352 1 
227 1 294 1 186 1 211 1 64 1 344 1 164 1 95 1 191 2 24 1 100 1 81 1 364 1 142 1 71 1 157 2 225 1 33 1 
186 1 199 1 92 1 164 1 246 1 64 2 95 1 24 1 100 1 80 1 364 1 196 1 33 1 
186 3 103 1 12 1 344 1 164 4 64 2 166 1 345 1 23 1 95 2 175 1 24 5 100 5 80 1 364 2 52 1 
186 3 103 1 12 1 344 1 164 4 64 2 166 1 345 1 95 2 175 1 24 5 100 5 80 1 351 1 364 2 52 1 
260 1 59 1 289 1 223 1 
240 1 59 1 178 1 
59 1 289 1 223 1 320 1 225 1 
240 1 184 2 241 1 289 1 267 1 190 1 315 2 191 1 362 1 81 1 169 2 223 1 320 1 142 1 274 1 11 1 59 1 254 1 62 1 367 1 279 1 284 1 178 1 304 1 157 1 71 1 134 1 354 1 
242 1 264 1 300 1 155 1 357 1 3 1 97 1 19 1 
38 1 155 1 97 1 19 1 
264 1 300 1 155 1 357 1 3 1 97 1 19 1 
170 1 28 1 3 1 
242 1 264 1 357 1 3 3 348 1 97 1 130 2 219 1 300 3 155 1 307 1 19 1 
149 1 264 1 300 2 155 1 357 1 358 1 3 2 97 1 19 1 
73 1 242 1 322 1 264 1 105 1 357 1 3 1 316 1 300 1 173 1 19 1 
242 1 264 1 300 1 155 1 357 1 3 1 19 1 
242 1 264 1 300 1 155 2 357 1 3 1 97 1 
242 1 264 2 357 2 3 2 300 2 50 1 155 1 222 1 46 1 19 1 
242 1 366 1 264 1 149 2 357 1 3 3 189 1 97 1 316 1 109 1 300 3 155 1 19 2 
73 1 242 1 322 1 265 1 264 1 149 1 357 1 3 2 97 1 202 1 300 2 154 1 155 1 173 2 19 1 
242 1 366 1 264 2 149 2 357 2 3 4 358 1 106 1 97 1 316 1 300 4 155 1 19 2 
359 1 
242 1 264 1 300 1 155 1 357 1 3 1 97 1 19 1 
366 1 149 2 264 1 357 1 3 4 348 1 97 2 130 1 316 1 219 1 300 4 155 2 47 1 19 3 
242 1 296 1 264 1 229 1 149 1 357 1 3 2 97 1 43 1 300 2 155 1 19 1 
242 1 264 1 357 1 3 3 348 2 97 1 130 2 99 1 219 1 300 3 155 1 19 1 
350 2 36 1 37 1 19 2 
317 1 242 1 264 1 300 1 357 1 3 1 
109 1 242 1 149 1 264 1 300 2 155 1 357 1 3 2 97 1 19 1 
242 1 149 1 264 1 357 1 3 3 97 1 130 1 109 1 300 3 155 1 19 1 
316 1 366 1 47 1 19 1 
155 1 19 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (66,75,321,373) (66,75,321,373) (66,75,321,373) 83 117 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (66,75,321,373) (66,75,321,373) (66,75,321,373) 83 117 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 217 (318,326) (318,326) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 217 (318,326) (318,326) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 217 (318,326) (318,326) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 217 (318,326) (318,326) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 217 (144,288) (144,288) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (66,75,321,373) (66,75,321,373) (66,75,321,373) 83 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (66,75,321,373) (66,75,321,373) (70,128,183) (70,128,183) (70,128,183) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (66,75,321,373) (66,75,321,373) (70,128,183) (70,128,183) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (66,75,321,373) (66,75,321,373) (70,128,183) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (78,137) (78,137) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
83 1 66 3 75 2 373 2 259 2 127 1 117 1 321 1 377 1 156 1 
83 1 66 3 75 2 373 2 259 2 127 1 117 1 321 1 377 1 156 1 
326 1 66 1 75 1 373 1 259 1 127 1 377 1 217 1 318 1 
326 1 66 1 75 1 373 1 259 1 127 1 377 1 217 1 318 1 
326 1 66 1 75 1 373 1 259 1 127 1 377 1 217 1 318 1 
326 1 66 1 75 1 373 1 259 1 127 1 377 1 217 1 318 1 
60 2 123 1 75 1 310 1 127 1 321 3 211 1 94 1 66 4 258 1 235 2 373 1 259 4 225 1 201 3 86 1 341 1 306 1 
144 1 66 1 288 1 75 1 373 1 259 1 127 1 377 1 211 1 217 1 294 1 
83 1 66 2 75 2 373 2 259 1 127 1 377 1 
308 1 179 1 89 1 
308 1 343 1 200 2 
42 2 15 2 148 2 103 1 247 2 314 2 98 2 93 1 
42 2 280 1 25 1 44 1 148 2 314 2 178 2 93 1 266 1 284 1 222 1 181 1 246 1 247 2 155 1 98 3 50 1 320 1 158 1 344 1 15 3 345 1 254 1 103 1 133 2 322 1 370 1 55 2 167 1 374 1 279 2 59 1 139 1 171 2 307 1 194 1 141 1 
42 1 13 1 56 1 15 1 148 1 292 1 247 1 314 1 98 1 93 1 
308 1 333 1 13 1 89 1 15 1 358 1 314 1 114 1 287 1 289 1 118 1 57 1 248 1 98 1 
308 1 42 1 13 1 89 1 15 1 148 1 358 1 314 1 114 1 287 2 118 1 57 2 247 1 248 1 98 1 
295 1 287 1 57 1 119 1 132 1 
308 1 295 1 271 1 287 2 89 1 57 2 119 1 92 1 
287 1 57 1 119 1 
42 1 295 1 13 1 15 1 148 1 314 1 93 1 287 1 56 1 57 1 292 1 247 1 218 1 98 1 
308 1 
308 1 295 1 287 2 89 1 57 2 119 1 198 1 92 1 
308 1 295 2 281 1 146 2 282 1 89 1 187 2 149 1 165 1 312 1 313 1 92 1 135 1 327 2 287 5 226 1 57 5 119 2 142 1 
179 1 103 1 
42 1 269 1 1 1 15 2 148 1 103 2 314 2 247 1 98 2 
253 1 153 1 151 1 
320 1 344 1 15 1 254 1 103 1 133 1 322 1 178 1 222 1 181 1 374 1 279 1 169 1 59 1 139 1 98 1 
320 1 344 1 15 2 254 1 148 1 26 1 91 1 322 1 133 1 314 1 178 1 151 1 222 1 181 1 374 1 279 1 59 1 139 1 247 1 98 2 
42 1 15 3 148 3 91 1 103 1 247 3 314 3 98 3 
13 1 56 1 15 1 148 1 247 1 314 1 98 1 
42 1 269 1 1 1 13 1 15 1 148 1 247 1 314 1 98 1 
197 1 42 2 25 1 1 1 44 1 148 3 91 1 26 1 358 1 314 3 178 1 114 1 93 1 266 1 284 1 222 1 181 1 287 1 246 1 118 1 247 3 155 1 248 1 98 4 320 1 13 1 344 1 15 4 254 1 103 1 322 1 133 1 370 1 55 2 167 1 374 1 279 1 305 1 57 1 59 1 139 1 171 1 307 1 141 1 
333 1 15 2 148 1 38 1 91 1 103 1 247 1 314 2 98 2 
42 1 308 1 1 1 13 1 15 3 148 3 26 1 91 2 358 1 162 1 314 3 114 1 287 1 57 1 305 1 118 1 247 3 248 1 98 3 
42 1 1 1 15 2 148 2 91 1 314 2 151 1 153 1 247 2 98 2 
320 1 344 1 15 1 254 1 103 1 133 1 322 1 178 1 222 1 181 1 374 1 279 1 59 1 139 1 98 1 
344 1 15 1 254 1 103 1 133 1 322 1 178 1 222 1 181 1 19 1 138 1 279 1 59 1 139 1 98 1 
280 2 309 1 44 1 151 2 266 1 223 1 246 2 47 1 362 1 153 2 155 1 184 1 253 2 52 1 351 1 370 1 104 1 371 1 55 2 167 1 108 1 171 4 331 1 141 1 
13 1 15 1 148 1 30 1 247 1 314 1 98 1 114 1 
250 1 333 1 42 1 1 1 15 5 148 4 91 2 26 1 103 1 314 5 38 1 109 1 247 4 98 5 
13 1 56 1 15 2 148 2 30 1 247 2 314 2 98 2 
0 1 366 1 
0 1 366 1 
334 1 168 1 
334 1 168 1 
334 1 168 1 
0 1 276 1 366 1 
0 2 334 1 372 1 168 1 366 2 189 1 
0 1 346 1 366 1 
0 1 346 1 366 1 
0 1 346 1 366 1 
0 1 227 1 366 1 
0 1 227 1 366 1 
0 1 227 1 366 1 
88 3 308 1 0 2 124 2 12 1 126 1 228 1 255 1 366 2 163 2 372 1 287 2 166 1 116 2 236 1 57 2 260 1 182 2 31 2 
88 1 0 1 355 1 148 2 220 1 314 2 338 1 287 1 116 1 267 1 247 2 182 1 98 2 31 1 124 1 13 1 126 1 15 2 17 1 103 1 366 1 276 1 57 1 238 1 215 1 143 1 
86 1 211 1 306 1 
86 1 211 1 294 1 
106 1 297 1 357 1 306 2 211 3 294 1 
297 1 357 1 306 1 211 2 349 1 294 1 
297 2 357 1 306 1 211 2 294 1 
308 2 146 1 89 1 355 1 90 1 242 1 312 2 313 1 92 1 223 1 200 3 287 5 68 2 362 1 119 1 97 1 343 1 295 4 365 2 298 2 187 1 165 3 351 1 275 1 232 1 233 1 327 1 57 5 58 1 330 1 215 1 331 1 143 1 
308 5 281 1 146 2 355 4 89 1 2 1 219 1 312 6 313 1 92 1 223 3 200 9 95 5 287 9 362 3 119 6 100 1 343 3 295 7 14 1 365 6 298 6 187 2 132 5 165 8 351 3 275 3 232 2 233 3 327 2 57 9 58 2 330 1 331 3 40 1 173 1 
42 1 308 3 146 1 281 1 89 1 355 1 148 1 242 1 150 1 314 1 312 2 93 1 223 1 287 3 68 1 200 4 362 1 292 1 247 1 98 1 97 1 343 2 295 2 13 1 15 1 365 2 298 2 187 1 165 3 351 1 275 1 232 1 327 1 233 1 56 1 57 3 58 1 218 1 331 1 
42 1 281 1 146 1 89 1 148 1 242 1 150 1 93 1 287 4 200 7 292 1 247 1 98 1 97 1 100 1 295 3 343 3 13 1 14 1 15 1 298 4 165 5 351 2 56 1 58 1 57 4 218 1 308 4 355 2 219 1 314 1 312 4 223 2 68 2 362 2 365 4 187 1 232 1 275 2 233 2 327 1 331 2 
179 1 222 1 23 1 
222 1 213 1 
43 1 
222 1 59 1 
157 1 222 3 59 1 311 1 139 1 23 2 
222 1 59 1 139 1 
222 1 102 1 
363 1 342 1 280 6 351 2 353 1 256 1 65 2 104 4 223 2 328 1 286 1 246 4 152 2 108 5 191 1 195 2 171 10 203 1 
363 1 342 1 280 6 351 2 353 1 256 1 65 2 104 4 223 2 328 3 286 1 246 4 152 2 108 7 191 1 195 2 171 10 203 1 
280 6 65 2 285 1 223 2 286 1 152 2 246 4 203 1 363 1 342 1 351 2 353 1 256 1 104 4 328 1 108 5 191 1 171 10 195 2 
280 19 65 3 223 5 286 2 6 1 246 17 152 3 362 3 155 1 203 1 363 2 342 1 274 1 351 5 256 1 353 1 80 4 370 1 324 1 82 1 105 1 104 7 233 3 84 1 55 2 328 7 167 1 108 14 191 1 195 3 171 36 140 1 141 1 331 3 110 3 
175 1 280 7 65 2 223 2 286 1 6 1 152 2 246 5 155 2 203 1 363 1 342 1 210 1 351 2 370 2 353 1 256 1 104 5 55 4 328 2 167 2 108 7 171 12 195 2 141 2 
147 1 178 1 66 2 69 1 70 1 71 1 183 1 294 1 251 1 159 1 75 1 344 1 127 1 321 1 128 1 230 1 211 2 133 1 322 1 212 1 106 1 373 1 259 1 279 1 86 1 306 1 377 1 
147 1 178 1 66 3 69 1 70 1 71 1 294 1 251 1 11 1 159 1 75 1 344 1 209 1 321 2 128 1 230 1 211 2 133 1 322 1 106 1 373 1 259 2 279 1 20 1 86 1 306 1 377 1 
251 1 11 1 344 1 159 1 147 1 128 1 321 2 209 1 230 1 211 2 322 1 133 1 178 1 66 2 106 1 69 1 259 1 279 1 86 1 306 1 377 1 294 1 
147 2 178 1 66 1 67 1 222 1 202 1 249 1 251 2 344 1 159 2 75 1 254 1 188 1 133 1 322 1 78 1 373 1 259 1 137 1 279 1 20 1 59 1 377 2 
147 1 178 1 66 1 69 1 70 1 71 1 183 1 294 1 251 1 159 1 75 1 344 1 127 1 209 1 128 1 230 1 211 2 133 1 322 1 106 1 373 1 259 1 279 1 86 1 306 1 377 1 
160 1 
333 1 146 1 89 1 92 2 287 4 289 1 96 1 48 1 248 1 293 2 98 1 99 1 343 2 13 1 16 5 15 1 165 1 257 1 54 3 170 3 57 4 308 1 112 1 358 1 314 1 313 1 312 1 114 1 28 1 316 1 118 1 119 5 120 2 270 3 74 2 186 1 187 1 323 1 34 1 134 2 325 1 327 1 
308 1 333 1 112 1 146 1 89 1 358 1 312 1 313 1 314 1 92 2 114 1 28 1 287 4 316 1 96 1 289 1 48 1 118 1 119 5 120 2 293 2 248 1 98 1 99 1 343 2 270 3 74 2 13 1 15 1 16 5 186 1 187 1 165 1 323 1 34 1 134 2 257 1 325 1 327 1 54 3 57 4 170 3 
308 1 112 1 333 1 146 1 89 1 358 1 312 1 313 1 314 1 92 2 114 1 28 1 200 2 287 4 289 1 48 1 290 1 118 1 119 4 248 1 98 1 99 1 364 2 270 2 74 2 13 1 15 1 16 4 187 1 165 1 323 1 134 2 257 1 54 2 136 2 327 1 278 1 170 2 57 4 
333 1 146 1 92 2 200 1 287 4 289 1 96 1 202 1 48 1 290 1 291 1 293 1 248 1 98 1 99 1 343 1 13 1 344 1 15 1 16 3 254 2 165 2 257 1 54 1 18 1 170 1 58 1 57 4 59 1 112 1 263 1 358 1 312 2 313 1 178 2 314 1 114 1 28 1 67 1 222 1 118 1 119 4 120 1 270 1 74 1 187 1 133 2 231 1 322 1 323 1 134 1 327 1 279 2 
333 1 112 1 358 1 198 1 314 1 92 1 114 1 28 1 287 3 289 1 118 1 119 2 248 1 98 1 99 1 270 1 13 1 15 1 16 2 323 1 257 1 57 3 
308 1 112 1 333 1 13 1 89 1 16 3 15 1 358 1 198 1 323 1 314 1 92 1 114 1 257 1 28 1 287 3 289 1 170 1 57 3 118 1 119 1 248 1 98 1 99 1 
308 1 112 1 333 1 270 1 13 1 89 1 16 3 15 1 358 1 198 1 323 1 314 1 92 1 114 1 257 1 28 1 54 1 287 3 289 1 170 1 57 3 118 1 119 2 248 1 98 1 99 1 
333 1 146 1 89 5 198 1 92 3 287 5 289 1 96 1 48 1 248 1 293 2 98 1 99 1 343 2 13 1 16 6 15 1 165 1 257 1 54 4 57 5 170 4 112 1 308 5 62 1 358 1 314 1 313 1 312 1 114 1 28 1 316 1 118 1 119 7 120 2 270 4 74 2 186 1 187 1 323 1 34 1 134 2 325 1 327 1 
308 2 112 1 333 1 146 1 89 1 358 1 312 1 313 1 314 1 92 2 114 1 28 1 200 2 287 4 289 1 96 1 48 1 290 1 118 1 119 4 120 2 293 2 248 1 98 1 99 1 270 2 343 2 74 2 13 1 15 1 16 4 187 1 165 1 323 1 134 2 257 1 54 2 327 1 170 2 57 4 
308 1 333 1 112 1 146 1 89 1 358 1 312 1 314 1 313 1 92 2 114 1 28 1 287 4 316 1 96 1 289 1 48 1 118 1 119 4 120 2 293 2 248 1 98 1 99 1 270 2 343 2 74 2 13 1 15 1 16 4 187 1 165 1 323 1 34 1 134 2 257 1 325 1 54 2 327 1 170 2 57 4 
308 1 333 1 112 1 146 1 89 1 358 1 312 1 314 1 313 1 92 2 114 1 28 1 287 4 316 1 96 1 289 1 48 1 118 1 119 4 120 2 293 2 248 1 98 1 99 1 270 2 343 2 74 2 13 1 15 1 16 4 187 1 165 1 323 1 34 1 134 2 257 1 325 1 54 2 327 1 170 2 57 4 
308 1 333 1 112 1 146 1 89 1 358 1 312 1 314 1 313 1 92 2 114 1 28 1 200 2 287 4 316 1 289 1 48 1 118 1 119 4 248 1 98 1 99 1 49 1 364 2 270 2 74 2 13 1 15 1 16 4 187 1 165 1 323 1 368 1 134 2 257 1 54 2 136 2 327 1 278 1 170 2 57 4 
342 1 280 3 44 1 103 2 351 1 370 1 353 1 256 1 65 1 266 1 104 2 371 1 179 1 223 1 55 2 152 1 246 2 167 1 108 2 171 5 195 1 155 1 141 1 
280 8 44 1 151 11 266 2 284 1 223 1 246 6 362 2 153 4 72 1 155 2 32 1 204 1 158 1 253 11 274 1 51 1 103 1 302 1 351 2 80 3 370 2 104 1 233 2 55 4 328 1 167 2 108 2 171 14 140 1 141 2 331 1 110 3 
280 1 44 1 148 1 91 1 26 1 178 1 314 1 266 1 283 1 284 1 222 1 181 1 245 1 246 1 153 1 247 1 155 1 98 2 204 1 320 1 158 1 344 1 15 2 254 1 103 1 322 1 133 1 370 1 55 2 167 1 374 1 279 1 169 1 59 1 139 1 171 2 141 1 41 1 
332 2 280 12 44 3 148 1 91 1 151 6 284 1 152 1 246 11 153 6 247 1 155 3 98 3 203 1 204 1 342 1 13 1 158 1 344 2 15 3 253 6 254 1 103 2 351 4 256 1 353 1 104 6 55 6 167 3 108 7 59 2 171 23 354 2 25 2 26 1 220 1 178 1 314 1 65 2 266 3 222 2 223 4 181 2 362 2 320 2 273 1 133 1 322 2 77 2 79 1 370 3 369 2 233 2 328 1 374 2 279 1 139 2 195 2 141 3 331 2 
176 1 280 1 44 2 148 1 91 1 314 1 178 7 315 1 266 2 284 1 115 1 222 3 67 1 246 1 317 1 202 1 247 1 155 2 98 1 207 1 158 1 344 2 15 1 254 2 345 2 209 1 161 1 322 2 133 8 370 2 212 1 371 1 55 4 167 2 279 8 59 2 87 1 171 2 141 2 
42 1 1 1 280 1 44 1 148 1 314 1 151 1 266 1 223 1 246 2 362 1 153 1 247 1 155 1 98 1 204 1 253 1 15 1 351 1 370 1 104 1 233 1 55 2 167 1 108 1 171 3 141 1 331 1 240 1 
280 2 44 1 253 1 351 1 151 1 370 1 266 1 371 1 55 2 328 1 167 1 362 1 108 1 153 1 171 2 155 1 184 1 141 1 
44 1 253 1 52 1 151 1 370 1 266 1 104 1 371 1 55 2 223 1 167 1 246 2 108 1 153 1 171 2 155 1 141 1 331 1 
280 2 44 1 151 2 266 1 223 1 246 2 362 1 153 2 155 1 253 2 351 1 370 1 104 1 233 1 371 1 55 2 328 1 167 1 108 2 171 4 141 1 331 1 
280 2 44 1 253 1 351 1 151 1 370 1 266 1 55 2 328 1 167 1 362 1 108 1 153 1 171 2 87 1 155 1 184 1 141 1 
44 1 253 1 52 1 151 1 370 1 266 1 104 1 55 2 223 1 167 1 246 2 108 1 153 1 171 2 87 1 155 1 141 1 331 1 
280 2 44 1 151 2 266 1 223 1 246 2 362 1 153 2 155 1 253 2 351 1 370 1 104 1 233 1 55 2 328 1 167 1 108 2 87 1 171 4 141 1 331 1 
280 2 44 1 151 2 266 1 223 1 246 2 362 1 153 2 155 1 253 2 351 1 370 1 104 1 233 1 55 2 328 1 167 1 108 2 171 4 141 1 331 1 
280 1 25 1 44 1 178 1 266 1 284 1 222 1 181 1 246 1 155 1 98 1 320 1 158 1 344 1 15 1 254 1 103 1 322 1 133 1 370 1 55 2 167 1 374 1 279 1 59 1 139 1 171 2 141 1 
280 1 113 1 44 1 178 1 266 1 284 1 222 1 181 1 246 1 155 1 98 1 158 1 344 1 15 1 254 1 103 1 322 1 133 1 370 1 55 2 19 1 167 1 138 1 279 1 59 1 139 1 171 2 141 1 
280 2 44 1 151 2 266 1 223 1 246 2 362 1 153 2 155 1 204 1 253 2 351 1 370 1 104 1 233 1 55 2 328 1 167 1 108 2 171 4 141 1 331 1 
332 1 280 2 25 1 44 1 178 1 151 2 266 1 223 1 222 1 181 1 246 2 362 1 153 2 155 1 98 1 320 1 344 1 253 2 15 1 322 1 133 1 351 1 370 1 212 1 104 1 233 1 55 2 328 1 167 1 374 1 279 1 108 2 59 1 139 1 171 4 331 1 141 1 
42 1 1 1 280 2 44 1 148 1 314 1 151 1 266 1 223 1 246 1 362 1 153 1 247 1 155 1 98 1 204 1 15 1 253 1 351 1 370 1 233 1 55 2 328 1 167 1 108 1 214 1 171 3 331 1 141 1 
280 20 5 1 6 1 246 21 152 1 7 1 155 3 101 1 342 1 296 1 300 1 347 1 351 5 353 1 256 1 303 1 104 4 55 6 167 3 304 1 108 8 171 41 110 3 175 1 359 1 65 1 223 5 361 1 362 4 121 2 122 1 274 1 131 1 370 3 80 4 233 4 328 4 277 4 378 1 195 1 140 3 331 4 141 3 
175 1 280 20 359 1 65 1 5 1 223 4 6 2 152 1 246 18 361 1 362 4 7 1 155 4 121 2 122 1 101 1 342 1 296 1 274 1 131 1 347 1 300 1 351 5 256 1 353 1 80 4 370 4 303 1 104 4 233 4 55 8 328 3 277 4 167 4 304 1 108 7 195 1 378 1 171 38 140 3 141 4 331 3 110 3 
175 1 280 27 359 1 65 1 5 1 223 8 6 1 152 1 246 25 361 1 362 7 7 1 155 2 121 1 101 1 342 1 274 2 131 1 51 2 347 1 300 1 351 8 256 1 353 1 80 4 370 2 303 1 104 7 233 7 55 4 328 7 277 4 167 2 304 1 108 14 195 1 378 1 171 52 140 2 141 2 331 7 110 4 
175 1 280 9 29 1 223 3 246 10 362 3 7 1 155 2 121 1 101 2 296 1 274 1 131 1 300 1 351 3 80 2 370 2 303 1 104 3 233 3 55 4 328 3 277 2 167 2 108 6 171 19 140 1 141 2 331 3 110 1 
175 1 280 14 359 1 5 1 223 2 6 2 246 12 361 1 362 3 7 1 155 3 121 2 101 1 131 1 300 1 347 1 351 3 370 3 80 2 303 2 104 2 233 3 55 6 328 2 277 4 167 3 304 1 108 4 171 26 378 1 140 2 141 3 331 2 110 2 
0 1 124 1 12 1 372 1 116 1 366 1 260 1 182 1 22 1 31 1 
276 1 267 1 
185 1 0 1 33 1 124 1 116 1 366 1 182 1 9 1 31 1 
88 2 308 1 0 1 124 1 12 1 126 1 228 1 255 1 366 1 163 1 372 1 287 1 166 1 116 1 57 1 260 1 182 1 31 1 
88 2 308 1 0 1 124 1 12 1 126 1 228 1 255 1 366 1 163 1 372 1 287 1 166 1 116 1 57 1 260 1 182 1 31 1 
88 2 308 1 0 1 124 1 12 1 126 1 228 1 255 1 366 1 163 1 372 1 287 1 166 1 116 1 57 1 260 1 182 1 31 1 
45 1 346 1 189 1 
45 1 346 1 189 1 
85 1 227 1 
85 1 227 1 189 1 
17 1 338 1 
88 1 0 1 355 1 148 2 220 1 314 2 338 1 287 1 116 1 267 1 182 1 247 2 98 2 31 1 295 1 124 1 13 1 15 2 17 1 103 1 366 1 163 1 164 1 276 1 166 1 57 1 238 1 215 1 143 1 
45 1 346 1 
85 1 227 1 189 1 
176 1 280 1 44 1 177 1 63 1 314 2 178 2 266 1 284 1 222 1 246 1 317 1 155 1 98 2 204 1 158 1 344 1 208 1 15 2 345 2 322 1 133 2 370 1 352 1 55 2 167 1 279 2 237 1 59 1 171 2 141 1 
344 1 147 1 209 1 76 1 356 1 230 1 211 2 322 1 133 2 178 2 212 1 106 1 36 1 69 1 279 2 86 1 71 1 306 1 294 1 
344 1 147 1 209 1 356 1 230 1 211 2 133 1 322 1 178 1 106 1 69 1 279 1 86 1 71 1 306 1 294 1 196 1 
344 1 147 1 254 1 322 1 133 1 178 1 222 1 67 1 36 1 107 1 279 1 202 1 59 1 249 1 
344 1 147 1 209 1 76 1 356 1 230 1 211 2 133 1 322 1 178 1 106 1 36 1 69 1 279 1 86 1 71 1 306 1 294 1 
206 1 
42 2 25 1 44 1 148 2 178 1 314 2 93 1 266 1 284 1 222 1 181 1 246 1 247 2 155 1 98 3 320 1 344 1 15 3 254 1 103 1 133 1 322 1 370 1 55 2 167 1 374 1 279 1 59 1 139 1 171 1 307 1 141 1 
308 2 343 1 146 1 89 1 298 1 187 1 312 1 313 1 165 1 327 1 200 2 58 1 291 1 
308 1 179 1 89 1 226 1 149 1 165 1 312 1 
308 2 146 1 89 1 312 1 313 1 92 1 200 1 287 1 96 1 119 1 120 1 293 1 343 1 187 1 165 1 327 1 57 1 
111 1 308 3 146 2 262 1 358 1 311 1 312 3 178 1 313 2 92 1 223 1 222 4 200 6 287 2 340 1 339 1 362 1 119 2 10 1 343 3 344 2 365 3 254 1 298 3 187 2 77 1 133 1 322 1 165 4 351 1 275 2 233 1 327 2 213 2 279 1 37 1 57 2 58 1 329 1 59 1 139 1 331 1 23 1 
308 5 146 2 89 2 359 1 150 2 313 2 312 5 92 1 5 1 223 2 287 1 200 6 362 2 291 1 119 1 343 3 272 1 365 5 298 5 187 2 347 1 367 1 165 8 351 2 80 1 275 1 327 2 233 2 304 1 58 1 57 1 378 1 140 1 331 2 110 1 
42 1 146 1 148 1 150 2 312 1 313 1 314 1 93 1 65 1 223 1 287 1 292 1 247 1 98 1 203 1 13 1 15 1 187 1 165 2 351 1 275 1 325 1 327 1 56 1 57 1 195 1 218 1 
308 1 146 1 89 1 187 1 149 1 313 1 312 1 165 1 327 1 226 1 
308 2 343 2 365 2 298 2 150 1 165 2 312 2 351 1 275 1 233 1 223 1 200 4 362 1 331 1 
308 1 287 1 89 1 57 1 119 1 92 1 
281 1 146 2 221 2 313 1 178 4 312 2 92 2 222 1 67 1 180 1 287 3 202 1 119 4 291 2 344 1 254 2 229 1 187 2 322 1 231 1 133 4 165 2 53 1 327 2 18 1 279 4 58 2 57 3 59 1 
116 1 17 1 31 1 
116 1 8 1 31 1 
116 1 8 1 31 1 
116 1 8 1 31 1 
116 1 39 1 31 1 
116 1 39 1 31 1 
116 1 39 1 31 1 
116 1 31 1 
0 1 366 1 
175 1 280 6 65 2 223 2 152 1 246 5 155 1 203 1 342 1 347 1 351 2 80 1 370 1 353 1 256 1 104 4 55 2 328 1 167 1 108 5 171 11 195 2 140 1 141 1 110 1 
175 1 280 8 65 2 223 2 152 1 246 6 362 1 155 2 203 1 319 1 342 1 274 1 347 1 351 3 256 1 353 1 80 2 370 2 104 4 233 1 55 4 328 2 167 2 108 6 195 2 171 14 140 1 141 2 110 1 
175 1 280 11 359 1 65 2 5 1 223 4 6 1 152 1 246 11 362 2 155 3 203 1 319 1 342 1 347 1 351 4 256 1 353 1 80 1 370 3 104 5 233 2 55 6 328 2 167 3 304 1 108 7 195 2 171 22 378 1 140 1 141 3 331 2 110 1 
175 1 280 12 359 1 65 2 5 1 223 3 6 1 152 1 246 8 362 2 155 3 203 1 319 1 342 1 347 1 351 4 256 1 353 1 80 1 370 3 104 5 233 2 55 6 328 4 167 3 304 1 108 9 195 2 171 20 378 1 140 1 141 3 331 1 110 1 
175 1 280 6 65 2 223 2 152 1 246 5 155 1 203 1 342 1 347 1 351 2 80 1 370 1 353 1 256 1 104 4 55 2 328 1 167 1 108 5 171 11 195 2 140 1 141 1 110 1 
175 1 280 6 359 1 5 1 223 2 246 6 362 2 155 1 347 1 351 2 80 1 370 1 104 1 233 2 55 2 328 1 167 1 304 1 108 2 171 12 378 1 140 1 141 1 331 2 110 1 
175 1 280 12 359 1 65 2 5 1 223 3 6 2 152 1 246 9 362 2 155 4 203 1 319 1 342 1 347 1 351 4 256 1 353 1 80 1 370 4 104 5 233 2 55 8 328 2 167 4 304 1 108 7 195 2 171 21 378 1 140 1 141 4 331 1 110 1 
175 1 280 9 359 1 5 1 223 2 6 2 246 7 362 3 155 4 296 1 347 1 351 3 80 1 370 4 104 3 233 3 55 8 328 3 167 4 304 1 108 6 171 16 378 1 140 1 141 4 331 2 110 1 
342 1 280 3 351 1 353 1 256 2 65 3 104 3 223 1 328 3 246 4 108 6 171 7 195 3 
175 1 280 12 359 1 65 2 5 1 223 3 6 2 152 1 246 9 362 2 155 4 203 1 342 1 296 1 347 1 351 4 256 1 353 1 80 1 370 4 104 5 233 2 55 8 328 2 167 4 304 1 108 7 195 2 171 21 378 1 140 1 141 4 331 1 110 1 
280 7 65 2 223 2 6 1 246 6 152 1 155 2 203 1 342 1 351 2 256 1 353 1 370 2 104 4 55 4 328 3 167 2 108 7 195 2 171 13 141 2 
342 1 280 3 351 1 353 1 256 1 65 1 104 2 179 1 223 1 152 1 246 2 108 2 195 1 171 5 
319 1 280 2 351 1 370 1 104 1 233 1 223 1 55 2 328 1 246 2 167 1 362 1 108 2 171 4 155 1 331 1 141 1 
280 3 274 1 351 1 80 2 104 1 233 1 223 1 328 1 246 4 362 1 108 2 171 7 140 1 331 1 110 1 
280 11 65 2 223 4 6 1 152 1 246 10 362 2 155 1 203 1 342 1 274 1 51 1 302 1 351 4 256 1 353 1 80 2 370 1 104 5 233 2 55 2 328 2 167 1 108 7 195 2 171 21 331 2 141 1 110 2 
246 1 171 1 80 1 
280 1 171 1 110 1 
319 1 280 3 77 1 351 1 370 1 104 2 233 1 55 2 223 1 328 1 167 1 246 3 362 1 108 3 171 6 155 1 141 1 331 1 
175 1 280 6 359 1 5 1 223 2 246 6 362 2 155 1 347 1 351 2 80 1 370 1 104 1 233 2 55 2 328 1 167 1 304 1 108 2 171 12 378 1 140 1 141 1 331 2 110 1 
342 1 280 3 351 1 65 1 104 1 223 1 328 1 246 3 108 2 171 6 195 1 
280 1 265 1 256 1 370 1 353 1 65 1 104 1 55 2 328 1 6 1 246 2 167 1 108 2 195 1 171 3 155 1 141 1 
175 1 280 3 351 1 370 1 65 1 104 2 55 2 223 1 328 2 167 1 246 3 108 4 195 1 171 6 155 1 141 1 203 1 
175 1 280 2 351 1 370 1 55 2 328 1 167 1 362 1 108 1 171 2 155 1 141 1 
175 1 280 2 351 1 370 1 104 1 233 1 223 1 55 2 328 1 246 2 167 1 362 1 108 2 171 4 155 1 331 1 141 1 
175 1 280 1 296 1 265 1 370 3 65 1 104 1 55 6 328 1 6 1 246 2 167 3 108 2 171 3 195 1 155 3 141 3 
175 1 280 14 65 2 223 4 6 1 152 1 246 13 362 2 155 4 203 1 319 1 342 1 296 1 351 4 256 1 353 1 80 3 370 4 324 1 82 1 104 5 233 2 84 1 55 8 328 4 167 4 108 9 195 2 171 27 140 1 141 4 331 2 110 3 
333 1 15 1 38 1 103 1 314 1 98 1 81 1 
261 1 333 1 15 1 264 1 129 1 103 1 314 1 81 1 38 1 216 1 98 1 73 1 
179 1 222 1 67 1 344 1 254 1 202 1 279 1 59 1 322 1 133 1 178 1 
320 1 344 1 15 2 254 1 148 1 91 1 103 1 133 1 322 1 314 1 178 1 222 1 181 1 279 1 59 1 139 1 247 1 98 2 
148 2 91 1 220 1 178 1 221 1 314 2 114 1 222 3 181 1 247 1 248 1 98 2 252 1 320 1 13 2 344 1 15 2 102 1 103 1 322 1 133 1 279 1 59 2 139 2 
148 2 91 1 220 1 178 1 221 1 314 2 114 1 222 3 181 1 247 1 248 1 98 2 252 1 13 2 344 1 15 2 102 1 103 1 322 1 133 1 138 1 279 1 59 2 139 2 
42 1 308 1 89 1 148 1 358 1 314 1 178 1 221 1 93 1 222 4 287 2 292 1 119 1 247 1 98 1 252 1 13 1 344 1 15 1 102 1 130 1 348 1 322 1 133 1 56 1 213 1 279 1 57 2 59 1 139 1 218 1 23 1 
42 1 308 1 89 1 148 1 358 1 314 1 178 1 221 1 93 1 222 4 287 2 340 1 292 1 119 1 247 1 98 1 252 1 13 1 344 1 15 1 102 1 322 1 133 1 56 1 213 1 279 1 57 2 59 1 139 1 218 1 23 1 
344 1 279 1 161 1 322 1 133 1 178 1 
176 1 207 1 344 3 345 1 254 2 209 1 311 1 161 1 3 1 133 7 322 2 178 6 315 1 212 1 115 1 244 1 222 3 224 1 279 7 59 2 139 1 
332 1 280 5 44 2 148 1 91 1 246 4 152 1 247 1 155 2 98 2 203 1 204 1 342 1 13 1 344 1 15 2 103 2 351 2 353 1 256 1 212 1 104 4 55 4 167 2 108 5 59 1 171 9 25 1 177 1 220 1 178 1 314 1 266 2 65 2 222 1 223 2 181 1 320 1 133 1 322 1 369 1 370 2 328 1 374 1 279 1 139 1 195 2 141 2 
111 1 308 1 146 2 262 1 89 1 358 1 149 1 312 1 178 1 313 2 92 1 222 2 180 1 287 3 339 1 340 1 226 1 119 2 295 1 254 1 187 2 133 1 165 1 327 2 213 1 279 1 57 3 23 1 
344 2 311 1 161 1 133 2 322 1 178 2 212 1 222 2 279 2 59 1 139 1 23 1 10 1 
222 1 67 1 145 1 344 1 254 1 202 1 279 4 59 1 193 1 322 1 133 4 178 4 212 1 
125 1 344 2 3 1 133 2 322 1 221 1 178 2 234 1 222 1 224 1 360 1 279 2 59 1 139 1 
344 1 254 1 279 1 86 1 230 1 211 1 322 1 133 1 294 1 178 1 
176 1 344 1 208 1 209 1 133 2 322 1 178 2 212 1 222 1 279 2 59 1 
176 1 207 1 344 2 254 1 133 5 322 2 221 1 178 4 212 1 67 1 222 3 115 1 202 1 279 5 59 2 193 1 
176 1 344 2 254 1 133 5 322 2 221 1 178 4 212 1 67 1 222 3 115 1 202 1 279 5 375 1 59 2 193 1 
344 1 15 2 254 1 148 1 91 1 103 1 133 1 322 1 314 1 178 1 222 1 181 1 138 1 279 1 59 1 139 1 247 1 98 2 
344 2 311 1 3 1 133 1 322 1 221 1 178 1 244 1 222 1 224 1 279 1 59 1 139 1 
243 1 24 1 46 1 103 1 192 1 
308 1 24 2 295 1 61 1 13 1 89 1 358 1 103 1 114 1 4 1 243 1 46 2 287 2 57 2 305 1 118 1 268 1 192 2 248 1 
24 1 15 1 63 1 314 1 352 1 243 1 46 1 237 1 98 1 
243 1 61 1 4 1 
75 1 127 1 321 1 94 1 199 1 66 3 258 1 373 1 259 3 201 1 154 1 
123 1 235 1 335 1 201 1 
258 1 201 1 
179 1 258 1 201 1 94 1 
66 1 258 1 75 1 373 1 259 1 201 1 94 1 
159 1 259 1 377 1 
75 1 127 1 336 1 94 1 66 3 258 1 373 1 259 3 201 1 154 2 172 1 239 1 
60 1 66 2 258 1 75 1 373 1 259 2 201 1 321 1 94 1 
66 1 235 1 75 1 373 1 259 1 127 1 201 1 86 1 341 1 211 1 306 1 
66 1 258 1 75 1 373 1 259 1 127 1 201 1 
66 1 258 2 75 1 373 1 259 1 127 1 94 1 
75 2 127 1 64 1 350 1 66 2 258 1 373 2 259 2 201 1 21 1 
123 1 75 1 127 1 321 2 337 1 94 1 199 1 66 3 258 1 235 1 373 1 259 3 201 2 
75 1 127 1 321 1 211 2 301 1 94 1 66 2 106 1 258 1 373 1 259 2 201 1 86 1 306 1 294 1 
60 1 123 1 75 2 127 1 310 1 321 2 94 1 66 4 258 1 235 1 373 2 259 4 201 2 
66 1 258 1 75 1 373 1 259 1 127 1 201 1 94 1 
123 1 75 1 335 1 321 2 94 2 66 4 258 2 235 1 373 1 259 4 201 3 154 1 172 1 239 1 
75 1 127 1 321 1 27 1 94 1 190 1 66 2 258 1 373 1 259 2 201 1 156 1 
205 1 66 3 258 1 75 1 373 1 259 3 127 1 201 1 154 2 172 1 239 2 94 1 
35 2 201 2 299 1 376 1 
241 1 66 1 75 1 373 1 259 1 127 1 
66 2 258 1 75 1 373 1 259 2 127 1 201 1 321 1 94 1 199 1 
174 1 
66 1 258 1 75 1 373 1 259 1 127 1 201 1 94 1 

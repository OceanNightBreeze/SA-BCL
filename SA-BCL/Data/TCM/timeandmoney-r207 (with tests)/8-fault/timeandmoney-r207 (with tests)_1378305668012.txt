#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) (97,125) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (97,125) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) (97,125) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (115,136,199,325) (115,136,199,325) (115,136,199,325) 319 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
325 1 319 1 167 1 136 1 115 1 
55 1 329 1 71 1 
202 2 329 1 108 1 
85 2 247 2 60 2 19 1 172 2 300 2 34 2 51 1 
127 1 268 1 100 1 9 1 190 2 58 1 13 1 15 2 60 2 18 1 19 1 62 1 273 1 106 1 314 1 239 1 65 1 277 1 243 1 153 1 281 2 157 1 247 2 284 1 112 1 290 2 34 3 213 2 85 2 169 1 118 1 42 1 172 2 300 3 301 1 124 1 51 1 
85 1 247 1 60 1 98 1 172 1 300 1 107 1 220 1 34 1 51 1 
246 1 288 1 113 1 34 1 16 1 170 1 172 1 300 1 275 1 220 1 205 1 329 1 71 1 224 1 
247 1 246 1 288 2 34 1 85 1 60 1 170 1 172 1 300 1 275 2 220 1 205 1 329 1 71 1 224 1 
288 1 275 1 219 1 304 1 270 1 
111 1 288 2 148 1 275 2 219 1 329 1 304 1 71 1 
288 1 275 1 304 1 
247 1 98 1 288 1 34 1 59 1 85 1 60 1 172 1 300 1 107 1 219 1 275 1 220 1 51 1 
329 1 
111 1 288 2 275 2 219 1 329 1 304 1 71 1 84 1 
2 1 181 2 52 5 98 1 4 1 59 1 137 1 60 1 235 2 198 1 203 4 107 1 275 5 241 1 245 1 71 2 156 1 247 1 248 1 75 2 288 5 111 1 251 2 255 1 34 1 36 2 116 2 258 1 85 1 172 1 300 1 175 1 217 1 219 2 220 1 329 2 304 2 51 1 
19 1 55 1 
247 1 34 2 85 1 60 1 19 2 172 2 300 2 297 1 331 1 
321 1 79 1 26 1 
284 1 3 1 100 1 290 1 34 1 58 1 15 1 118 1 18 1 19 1 300 1 301 1 65 1 243 1 281 1 157 1 
284 1 100 1 53 1 290 1 34 2 79 1 56 1 58 1 15 1 85 1 118 1 60 1 18 1 172 1 300 2 301 1 65 1 243 1 157 1 281 1 
247 1 53 2 34 5 56 1 232 1 233 1 85 4 16 1 60 4 19 1 172 5 300 5 297 1 317 1 
85 2 60 2 172 2 300 2 107 1 220 1 34 2 151 1 
247 1 85 3 60 3 19 1 172 3 300 3 53 1 34 3 
85 1 60 1 172 1 300 1 107 1 220 1 34 1 
85 1 247 1 60 1 172 1 300 1 297 1 220 1 34 1 331 1 
127 1 100 1 268 1 53 1 190 1 56 1 58 1 309 1 15 1 60 3 18 1 19 1 62 1 273 1 314 1 275 1 239 1 65 1 205 1 243 1 244 1 153 1 157 1 281 1 247 2 246 1 284 1 288 1 112 1 290 1 34 4 213 2 85 3 118 1 170 1 42 1 172 3 297 1 300 4 301 1 220 1 124 1 224 1 51 1 
85 1 16 1 60 1 19 1 172 2 300 2 53 1 34 2 232 1 
247 1 246 1 288 1 53 2 34 3 56 1 85 3 86 1 60 3 170 1 172 3 297 1 300 3 275 1 205 1 220 1 329 1 244 1 224 1 
247 1 53 1 321 1 34 2 79 1 85 2 60 2 172 2 297 1 300 2 
284 1 100 1 290 1 34 1 58 1 15 1 118 1 18 1 19 1 300 1 301 1 65 1 243 1 281 1 157 1 
74 1 284 1 100 1 290 1 34 1 15 1 18 1 19 1 300 1 301 1 65 1 243 1 70 1 281 1 157 1 
126 1 127 2 190 4 134 1 197 1 62 1 314 1 239 1 277 2 26 2 153 1 75 1 283 1 112 1 321 2 36 1 79 2 213 2 119 1 89 1 171 1 42 1 43 1 96 1 
85 1 60 1 170 1 172 1 300 1 220 1 34 1 151 1 
302 1 47 1 
302 1 47 1 
90 1 230 1 
90 1 230 1 
90 1 230 1 
302 1 47 1 256 1 
302 1 47 1 256 1 
302 1 47 1 256 1 
302 1 47 1 178 1 
318 1 302 1 47 1 
306 1 90 1 302 2 47 2 230 1 138 1 
302 1 47 1 178 1 
302 1 47 1 178 1 
5 1 54 1 186 1 308 1 188 1 141 1 60 2 19 1 275 1 206 1 209 1 318 1 288 1 34 2 211 1 168 1 85 2 261 1 172 2 214 1 300 2 302 1 47 1 303 1 
76 1 209 2 306 1 183 1 5 3 288 2 186 2 188 2 308 2 191 1 259 2 20 1 302 2 275 2 47 2 95 1 303 1 240 1 329 1 
64 1 94 1 179 1 
61 1 94 1 179 1 
61 1 64 2 174 1 254 1 94 3 221 1 
61 1 64 1 174 1 94 2 221 1 222 1 
61 1 64 1 174 2 94 2 221 1 
225 1 52 2 227 1 57 1 271 1 235 1 198 1 202 3 203 3 275 5 274 1 68 1 206 1 108 1 71 1 75 1 249 2 111 1 288 5 210 2 251 1 36 1 292 2 116 1 168 1 214 1 43 1 219 4 176 1 329 2 96 1 304 1 
226 1 52 6 185 1 57 2 270 5 198 1 235 2 312 1 202 9 203 8 275 9 274 1 68 3 108 3 72 1 71 1 248 1 75 3 249 6 288 9 111 1 210 6 251 2 36 3 257 5 116 2 168 4 43 3 173 1 219 7 45 1 176 2 329 5 96 3 304 6 
227 1 52 2 57 1 271 1 235 1 203 3 202 4 275 3 68 1 108 2 71 1 248 1 75 1 249 2 288 3 251 1 210 2 36 1 292 1 116 1 168 1 43 1 219 2 176 1 329 3 96 1 
226 1 227 1 52 4 57 1 271 1 235 1 202 7 203 5 275 4 68 2 108 3 71 1 72 1 248 1 75 2 249 4 288 4 210 4 251 1 36 2 292 2 116 1 168 2 43 2 219 3 45 1 176 1 329 4 96 2 
44 1 55 1 
65 1 24 1 
207 1 
284 1 301 1 65 1 
65 1 132 1 
284 1 65 1 
30 1 284 1 301 1 44 2 65 1 152 1 207 1 
126 2 1 2 158 1 75 1 283 3 127 3 4 1 6 1 255 1 36 1 190 7 12 1 258 1 295 1 311 1 277 4 27 1 
126 2 1 2 158 1 75 1 283 3 127 3 4 1 6 1 255 1 36 1 190 7 12 1 258 1 295 1 311 1 277 4 27 1 
126 2 1 2 158 1 75 1 283 3 127 3 4 1 6 1 255 1 36 1 190 7 12 1 258 1 195 1 295 1 311 1 277 4 27 1 
1 3 126 5 127 15 228 1 4 2 6 5 190 31 11 1 12 1 102 1 311 1 314 1 239 1 68 3 69 1 277 16 27 2 158 1 75 4 283 10 287 1 164 4 77 1 112 1 255 1 36 4 258 2 213 2 295 2 42 1 91 1 43 3 122 3 96 3 
1 2 126 3 127 4 4 1 6 1 190 9 11 1 311 1 314 2 21 1 315 1 239 2 277 5 27 1 158 1 75 1 283 4 112 2 255 1 36 1 258 1 213 4 295 1 42 2 
325 1 319 1 167 1 136 1 115 1 
325 1 167 1 136 1 125 1 115 1 
97 1 199 1 325 1 167 1 
325 1 167 1 136 1 125 1 115 1 
325 1 319 1 167 1 136 1 115 1 
88 1 
182 1 184 1 15 2 196 1 17 1 16 1 198 1 18 2 203 2 275 3 205 1 109 1 281 2 284 1 285 1 111 1 288 3 113 1 290 2 34 1 291 1 293 1 116 1 212 1 300 1 220 1 304 2 224 1 52 2 307 1 131 1 235 1 234 2 238 1 65 1 150 1 243 1 157 1 246 1 251 1 320 1 322 1 260 1 170 1 172 1 176 1 
307 1 16 1 234 2 237 1 275 3 205 1 109 1 246 1 288 3 111 1 113 1 34 1 320 1 212 1 84 1 260 1 170 1 172 1 300 1 220 1 304 2 224 1 
307 1 16 1 234 3 275 3 205 1 67 1 109 1 71 1 246 1 288 3 111 1 113 1 34 1 320 1 212 1 84 1 260 1 170 1 172 1 300 1 220 1 329 1 304 1 224 1 
307 1 16 1 234 3 201 1 237 1 275 3 205 1 67 1 109 1 71 1 246 1 111 1 288 3 113 1 34 1 320 1 212 1 84 1 260 1 170 1 172 1 300 1 220 1 329 1 304 2 224 1 
98 1 99 1 196 2 16 1 17 2 198 1 201 2 203 1 107 1 275 3 205 1 109 1 288 3 111 1 113 1 34 2 212 1 116 1 117 1 299 1 300 2 220 2 304 3 51 1 224 1 52 1 307 1 59 1 60 1 234 2 235 1 63 1 237 2 238 1 71 1 247 1 246 1 251 1 320 1 322 1 84 1 85 1 260 1 170 1 172 2 264 1 329 1 
52 1 307 1 131 1 196 1 17 1 16 1 235 1 198 1 234 2 238 1 203 1 275 2 205 1 109 1 246 1 288 2 113 1 251 1 320 1 34 1 322 1 116 1 212 1 260 1 170 1 172 1 300 1 220 1 224 1 
98 1 99 1 196 2 16 1 17 2 198 1 203 1 107 1 275 2 205 1 109 1 288 2 113 1 34 2 116 1 212 1 300 2 220 2 224 1 51 1 52 1 307 1 59 1 235 1 234 2 60 1 63 1 238 1 71 1 246 1 247 1 251 1 320 1 322 1 260 1 85 1 170 1 172 2 264 1 329 1 
98 1 99 1 196 2 16 1 17 2 198 1 203 1 107 1 275 2 205 1 109 1 288 2 113 1 34 2 116 1 212 1 300 2 220 2 224 1 51 1 52 1 307 1 59 1 235 1 234 2 60 1 63 1 238 1 71 1 246 1 247 1 251 1 320 1 322 1 260 1 85 1 170 1 172 2 264 1 329 1 
98 1 8 1 196 2 16 1 17 2 198 1 203 1 107 1 275 2 205 1 109 1 288 2 113 1 34 2 39 1 116 1 212 1 300 2 220 2 224 1 51 1 52 1 307 1 59 1 235 1 234 2 60 1 236 1 238 1 71 1 246 1 247 1 251 1 320 1 260 1 85 1 170 1 172 2 264 1 329 1 
98 1 99 1 196 2 16 1 17 2 198 1 201 1 203 1 107 1 275 2 205 1 109 1 288 2 113 1 34 2 212 1 116 1 117 1 300 2 220 2 304 1 51 1 224 1 52 1 307 1 59 1 60 1 234 3 235 1 63 1 237 1 238 1 67 1 71 1 247 1 246 1 251 1 320 1 322 1 85 1 260 1 170 1 172 2 264 1 329 1 
98 1 99 1 196 2 16 1 17 2 198 1 201 1 203 1 107 1 275 2 205 1 109 1 288 2 113 1 34 2 212 1 116 1 117 1 300 2 220 2 304 1 51 1 224 1 52 1 307 1 59 1 60 1 234 3 235 1 63 1 237 1 238 1 67 1 71 1 247 1 246 1 251 1 320 1 322 1 85 1 260 1 170 1 172 2 264 1 329 1 
52 1 307 1 131 1 196 1 17 1 16 1 235 1 198 1 234 2 238 1 203 1 275 2 205 1 109 1 246 1 288 2 113 1 251 1 320 1 34 1 39 1 116 1 212 1 260 1 170 1 172 1 300 1 220 1 224 1 
126 2 1 1 127 3 4 1 55 1 190 6 62 1 19 2 311 1 314 1 239 1 277 3 26 1 153 1 158 1 283 2 75 1 112 1 255 1 321 1 79 1 36 1 258 1 213 2 171 1 42 1 
126 1 127 6 6 1 9 1 190 14 10 1 19 1 62 1 273 1 314 2 239 2 68 2 69 1 277 8 26 11 153 2 283 2 75 2 164 3 112 2 253 1 321 4 79 11 36 1 213 4 41 1 42 2 91 1 43 2 262 1 218 1 122 3 96 1 
127 1 3 1 100 1 53 1 9 1 56 1 190 2 10 1 58 1 15 1 18 1 60 1 19 1 62 1 273 1 314 1 65 1 239 1 243 1 277 1 157 1 281 1 153 1 284 1 112 1 290 1 289 1 321 1 34 2 85 1 213 2 118 1 172 1 42 1 296 1 300 2 301 1 328 1 
1 1 4 1 100 2 6 4 9 1 190 20 10 1 15 3 18 1 19 2 105 2 273 1 276 2 277 10 26 7 281 3 208 1 29 2 283 8 284 2 31 1 112 3 290 3 34 3 36 3 213 6 118 2 42 3 43 2 298 1 300 3 301 2 124 2 126 4 127 10 53 1 56 1 231 2 58 2 60 1 62 3 311 1 314 3 239 3 65 2 68 2 243 2 153 3 157 2 158 1 75 3 255 1 321 7 79 7 258 1 85 1 172 1 96 2 267 1 
127 1 53 1 9 1 133 1 190 2 13 2 15 8 60 1 18 2 62 2 273 1 313 1 314 2 22 1 65 3 239 2 316 1 150 1 243 2 277 1 157 2 281 8 153 2 155 1 284 2 31 1 285 1 112 2 78 1 290 7 34 1 37 1 85 1 213 4 87 1 171 1 172 1 42 2 300 1 
126 1 127 2 190 3 10 1 60 1 62 1 314 1 239 1 68 1 277 1 26 1 153 1 247 1 283 1 75 1 112 1 321 1 34 1 79 1 166 1 36 1 213 2 85 1 42 1 172 1 43 1 297 1 300 1 96 1 
283 1 75 1 6 1 112 1 321 1 79 1 190 2 134 1 213 2 171 1 62 1 42 1 43 1 314 1 239 1 277 2 26 1 153 1 
126 1 283 1 127 2 112 1 321 1 79 1 190 2 36 1 213 2 119 1 171 1 62 1 42 1 314 1 239 1 26 1 96 1 153 1 
126 1 127 2 6 1 190 4 62 1 314 1 239 1 68 1 277 2 26 2 153 1 75 1 283 2 112 1 321 2 79 2 36 1 213 2 171 1 43 1 42 1 96 1 
283 1 75 1 6 1 112 1 321 1 79 1 190 2 134 1 37 1 213 2 62 1 42 1 43 1 314 1 239 1 277 2 26 1 153 1 
126 1 283 1 127 2 112 1 321 1 79 1 190 2 36 1 37 1 213 2 119 1 62 1 42 1 314 1 239 1 26 1 96 1 153 1 
126 1 127 2 6 1 190 4 62 1 314 1 239 1 68 1 277 2 26 2 153 1 75 1 283 2 112 1 321 2 79 2 36 1 37 1 213 2 43 1 42 1 96 1 
126 1 127 2 6 1 190 4 62 1 314 1 239 1 68 1 277 2 26 2 153 1 75 1 283 2 112 1 321 2 79 2 36 1 213 2 43 1 42 1 96 1 
127 1 100 1 9 1 190 2 58 1 15 1 18 1 19 1 62 1 273 1 314 1 65 1 239 1 277 1 243 1 157 1 281 1 153 1 284 1 112 1 290 1 34 1 213 2 118 1 42 1 300 1 301 1 124 1 
127 1 100 1 187 1 9 1 190 2 15 1 18 1 19 1 62 1 273 1 314 1 65 1 239 1 277 1 243 1 70 1 157 1 281 1 153 1 74 1 284 1 112 1 290 1 34 1 213 2 42 1 300 1 301 1 
126 1 127 2 6 1 190 4 10 1 62 1 314 1 239 1 68 1 277 2 26 2 153 1 75 1 283 2 112 1 321 2 79 2 36 1 213 2 43 1 42 1 96 1 
126 1 127 2 6 1 100 1 190 4 58 1 15 1 62 1 105 1 314 1 65 1 239 1 316 1 68 1 277 2 243 1 26 2 157 1 281 1 153 1 283 2 75 1 284 1 112 1 290 1 321 2 34 1 36 1 79 2 213 2 118 1 43 1 42 1 300 1 301 1 124 1 96 1 
127 1 6 1 190 3 10 1 60 1 62 1 314 1 239 1 68 1 277 2 25 1 26 1 153 1 247 1 283 1 75 1 112 1 34 1 321 1 36 1 79 1 213 2 85 1 42 1 172 1 43 1 297 1 300 1 96 1 
126 3 127 10 6 3 190 19 135 1 103 2 194 1 314 2 315 1 239 2 23 1 68 3 69 1 277 9 282 2 75 3 283 6 164 2 112 2 36 3 114 1 324 1 213 4 42 2 91 1 43 3 216 1 122 1 96 3 305 1 
126 2 127 12 128 1 6 2 130 1 101 1 190 26 135 1 11 2 103 1 146 1 314 3 315 1 239 3 23 2 68 3 277 14 69 2 282 4 283 4 75 3 164 2 112 3 252 1 36 2 114 1 324 2 213 6 42 3 43 3 216 1 122 2 48 1 96 2 
1 1 4 1 6 4 101 1 190 41 11 1 103 1 194 1 23 1 277 20 282 4 283 8 112 3 36 5 114 1 213 6 43 4 42 3 216 1 122 3 48 1 126 4 127 21 128 1 130 1 135 1 311 1 146 1 314 3 315 1 239 3 68 4 69 3 158 1 75 5 162 1 164 4 252 1 255 1 258 1 324 2 91 1 96 4 
1 1 126 4 127 18 4 1 128 1 130 1 6 3 101 1 190 38 135 1 11 2 103 1 194 1 311 1 146 1 314 4 315 1 239 4 23 1 68 4 69 3 277 20 158 1 282 4 75 5 283 7 162 1 164 4 112 4 255 1 252 1 36 4 114 1 258 1 324 2 213 8 42 4 91 1 43 4 216 1 122 3 48 1 96 3 
1 1 126 7 127 25 4 1 128 1 130 1 6 7 101 1 190 52 135 1 11 1 103 1 311 1 146 1 314 2 315 1 239 2 23 1 68 7 69 2 277 27 158 1 282 4 75 8 283 14 164 4 112 2 255 1 252 1 36 8 114 1 258 1 324 1 213 4 42 2 91 2 43 7 216 1 218 2 122 4 48 1 96 7 
0 1 76 1 209 1 306 1 302 1 186 1 308 1 188 1 47 1 191 1 
318 1 211 1 
209 1 7 1 302 1 186 1 308 1 188 1 269 1 47 1 294 1 
256 1 35 1 
139 1 138 1 178 1 
76 1 209 1 306 1 5 2 288 1 186 1 188 1 308 1 191 1 259 1 20 1 302 1 275 1 47 1 95 1 303 1 240 1 329 1 
76 1 209 1 306 1 5 2 288 1 186 1 188 1 308 1 191 1 259 1 20 1 302 1 275 1 47 1 95 1 303 1 240 1 329 1 
76 1 209 1 306 1 5 2 288 1 186 1 188 1 308 1 191 1 259 1 20 1 302 1 275 1 47 1 95 1 303 1 240 1 329 1 
256 1 35 1 138 1 
256 1 35 1 138 1 
139 1 178 1 
139 1 138 1 178 1 
141 1 54 1 
5 1 54 1 186 1 308 1 188 1 141 1 60 2 19 1 275 1 240 1 206 1 209 1 318 1 288 1 34 2 211 1 168 1 259 1 85 2 261 1 214 1 172 2 300 2 302 1 121 1 219 1 47 1 
127 1 9 1 133 1 190 2 10 1 13 2 15 2 62 1 143 1 145 1 273 1 314 1 65 1 239 1 243 1 277 1 157 1 281 2 153 1 155 1 284 1 112 1 290 2 34 2 82 1 38 1 213 2 172 2 42 1 300 2 327 1 
129 1 229 1 310 1 15 2 61 1 64 1 316 1 243 1 73 1 281 2 157 1 31 1 165 1 290 2 254 1 94 2 330 1 50 1 179 1 
31 1 129 1 254 1 290 1 229 1 15 1 310 1 61 1 64 1 94 2 243 1 330 1 279 1 50 1 179 1 281 1 157 1 
284 1 286 1 285 1 290 1 15 1 104 1 18 1 65 1 150 1 243 1 330 1 157 1 281 1 73 1 
31 1 129 1 165 1 254 1 290 1 229 1 15 1 310 1 61 1 64 1 94 2 243 1 330 1 50 1 179 1 281 1 73 1 157 1 
323 1 
52 1 203 1 175 1 217 1 55 1 329 1 71 1 
52 1 140 1 235 1 198 1 144 1 203 1 202 1 275 1 108 1 71 1 111 1 288 1 251 1 322 1 116 1 329 2 304 1 
181 1 193 1 15 1 198 2 18 1 203 4 202 6 275 2 204 1 205 1 276 1 24 2 108 3 281 1 284 2 288 2 111 1 210 3 33 1 290 1 36 1 116 2 40 1 43 1 120 1 301 2 44 1 123 1 304 2 223 1 52 3 235 2 65 4 68 1 243 3 152 1 157 2 75 1 249 3 251 2 176 1 329 3 177 1 96 1 
181 2 52 5 182 1 128 1 130 1 101 1 235 2 198 2 146 1 202 6 203 8 275 1 241 1 68 2 69 1 108 3 71 2 154 1 75 2 161 1 249 5 288 1 111 1 164 1 210 5 251 2 36 2 116 2 43 2 122 1 176 1 329 5 48 1 304 1 96 2 
181 2 52 2 4 1 98 1 137 1 59 1 235 1 198 1 60 1 63 1 203 2 107 1 275 1 241 1 247 1 75 2 288 1 251 1 255 1 34 1 36 1 116 1 258 1 85 1 172 1 300 1 220 1 51 1 
52 1 251 1 116 1 198 1 235 1 175 1 203 1 217 1 329 1 71 1 
181 2 75 2 52 5 249 5 210 5 36 2 43 2 202 10 203 5 241 1 276 1 68 2 108 5 329 5 96 2 
288 1 111 1 275 1 329 1 304 1 71 1 
52 2 182 2 184 1 189 1 14 2 15 4 235 2 198 1 18 2 272 1 203 2 275 3 65 1 150 1 243 1 157 1 281 4 248 1 284 1 285 1 111 2 288 3 251 2 290 4 291 1 116 2 326 1 176 2 304 4 
127 1 268 1 100 1 190 1 58 1 15 1 18 1 60 2 19 1 62 1 273 1 314 1 239 1 65 1 243 1 281 1 157 1 153 1 247 2 284 1 112 1 290 1 34 3 213 2 85 2 118 1 42 1 172 2 300 3 301 1 124 1 51 1 
1 1 52 2 249 2 182 1 210 2 251 1 116 1 198 1 235 1 202 4 203 1 176 1 108 2 329 4 71 2 
209 1 93 1 308 1 
209 1 93 1 308 1 
209 1 93 1 308 1 
180 1 209 1 308 1 
141 1 76 1 209 1 200 1 308 1 
180 1 209 1 308 1 
180 1 209 1 308 1 
209 1 308 1 
302 1 47 1 
1 1 126 2 158 1 75 1 283 3 127 4 4 1 6 1 112 2 255 1 36 1 190 8 11 1 258 1 213 4 42 2 311 1 314 2 239 2 277 4 
1 1 158 1 126 2 283 2 75 1 127 3 4 1 255 1 55 1 190 6 36 1 258 1 311 1 277 3 
126 1 283 2 159 1 75 1 127 2 6 1 112 1 36 1 190 4 213 2 42 1 43 1 314 1 239 1 68 1 277 2 96 1 
126 1 75 1 283 2 127 4 6 1 164 2 36 1 190 7 91 1 43 1 122 1 68 1 69 1 277 3 96 1 
1 1 126 5 127 12 4 2 6 4 190 23 11 2 311 1 314 2 239 2 68 2 277 11 280 1 158 1 283 9 75 3 164 2 112 2 255 1 36 3 258 2 213 4 41 1 43 2 91 1 42 2 122 2 218 1 96 2 
127 1 164 1 190 1 
122 1 190 1 277 1 
126 2 159 1 75 1 283 3 127 3 6 1 112 1 190 6 36 1 213 2 42 1 43 1 314 1 239 1 276 1 68 1 277 3 96 1 
126 1 127 6 128 1 6 1 130 1 101 1 190 12 146 1 314 1 315 1 239 1 68 2 69 1 277 6 75 2 283 2 164 1 112 1 36 2 213 2 42 1 43 2 122 1 48 1 96 2 
126 1 75 1 283 2 127 3 4 1 6 1 255 1 190 6 36 1 258 1 277 3 
126 1 158 1 283 2 127 2 4 1 6 1 112 1 190 3 11 1 258 1 213 2 311 1 42 1 314 1 239 1 277 1 280 1 
126 3 283 5 75 2 127 5 4 2 6 2 112 1 255 1 190 10 36 2 137 1 258 2 213 2 42 1 314 1 315 1 239 1 277 5 
75 1 283 1 6 1 112 1 190 2 213 2 42 1 43 1 314 1 315 1 239 1 277 2 
126 1 283 2 75 1 127 2 6 1 112 1 36 1 190 4 213 2 42 1 43 1 314 1 315 1 239 1 68 1 277 2 96 1 
126 1 283 2 127 2 4 1 6 1 112 3 190 3 11 1 194 1 258 1 213 6 42 3 314 3 315 1 239 3 277 1 280 1 
1 1 126 7 228 1 127 18 4 3 6 5 190 34 11 2 194 1 311 1 314 5 315 1 239 5 68 3 69 1 277 16 280 1 158 1 159 1 75 5 283 12 287 1 77 1 164 4 112 5 255 2 36 5 258 3 213 10 42 5 91 1 43 3 122 3 96 3 
1 1 126 2 127 4 4 1 128 1 190 8 311 1 314 1 315 1 239 1 69 1 277 4 158 1 75 1 283 2 164 1 112 1 255 1 36 1 258 1 213 2 42 1 122 1 
1 1 126 2 127 5 4 1 128 1 6 1 190 11 311 1 314 2 315 1 239 2 68 1 69 1 277 6 158 1 159 1 75 2 283 3 164 2 112 2 255 1 36 1 258 1 213 4 42 2 91 1 43 1 122 1 
1 1 126 3 127 10 4 1 128 1 6 1 130 1 101 1 190 19 11 1 311 1 146 1 314 3 315 1 239 3 68 2 69 1 277 9 158 1 159 1 75 3 283 4 164 1 112 3 255 1 36 3 258 1 213 6 42 3 43 2 122 1 48 1 96 2 
1 1 126 3 127 7 4 1 128 1 6 2 130 1 101 1 190 17 11 1 311 1 146 1 314 3 315 1 239 3 68 2 69 1 277 10 158 1 159 1 75 3 283 5 164 1 112 3 255 1 36 2 258 1 213 6 42 3 43 2 122 1 48 1 96 1 
1 1 126 2 127 4 4 1 128 1 190 8 311 1 314 1 315 1 239 1 69 1 277 4 158 1 75 1 283 2 164 1 112 1 255 1 36 1 258 1 213 2 42 1 122 1 
126 1 127 6 128 1 6 1 130 1 101 1 190 12 146 1 314 1 315 1 239 1 68 2 69 1 277 6 75 2 283 2 164 1 112 1 36 2 213 2 42 1 43 2 122 1 48 1 96 2 
1 1 126 3 127 8 4 1 128 1 6 2 130 1 101 1 190 18 11 2 311 1 146 1 314 4 315 1 239 4 68 2 69 1 277 10 158 1 159 1 75 3 283 5 164 1 112 4 255 1 36 2 258 1 213 8 42 4 43 2 122 1 48 1 96 1 
126 3 127 7 128 1 6 3 130 1 101 1 190 16 11 2 194 1 146 1 314 4 315 1 239 4 68 3 69 1 277 9 75 3 283 6 164 1 112 4 36 2 213 8 42 4 43 3 122 1 48 1 96 2 
158 1 126 3 283 6 75 1 127 4 4 3 6 3 255 1 36 1 190 7 258 3 311 2 277 3 
1 1 126 3 127 8 4 1 128 1 6 1 130 1 101 1 190 18 11 2 194 1 311 1 146 1 314 4 315 1 239 4 68 2 69 1 277 10 158 1 75 3 283 4 164 1 112 4 255 1 36 2 258 1 213 8 42 4 43 2 122 1 48 1 96 1 
16 1 19 1 172 1 300 1 34 1 278 1 232 1 
16 1 28 1 19 1 172 1 300 1 92 1 34 1 263 1 242 1 265 1 278 1 232 1 
284 1 18 1 285 1 290 1 65 1 55 1 150 1 243 1 157 1 15 1 281 1 
284 1 100 1 53 1 290 1 34 2 58 1 15 1 85 1 60 1 18 1 19 1 172 1 300 2 301 1 65 1 243 1 281 1 157 1 
100 1 53 1 132 1 58 1 15 1 14 1 60 1 19 1 65 3 243 1 157 1 281 1 246 1 284 2 290 1 34 2 85 2 170 1 172 2 300 2 301 2 220 1 177 1 
100 1 53 1 132 1 192 1 15 2 14 1 60 1 19 1 65 3 243 1 70 1 157 1 281 2 246 1 284 2 290 2 34 2 85 2 170 1 172 2 300 2 301 2 220 1 177 1 
98 1 132 1 59 1 15 2 14 1 18 1 60 1 107 1 275 2 65 3 149 1 205 1 243 1 24 1 71 1 157 1 281 2 247 1 284 1 288 2 290 2 34 1 83 1 85 1 172 1 300 1 301 1 44 1 220 1 329 1 304 1 177 1 51 1 
98 1 132 1 59 1 15 2 14 1 18 1 60 1 107 1 275 2 65 3 205 1 243 1 24 1 71 1 157 1 281 2 247 1 284 1 288 2 290 2 34 1 85 1 172 1 300 1 301 1 44 1 220 1 329 1 304 1 177 1 223 1 51 1 
87 1 290 1 243 1 157 1 15 1 281 1 
160 1 284 2 31 1 250 1 78 1 290 6 133 1 81 1 13 1 15 7 18 2 87 1 313 1 301 1 22 1 65 3 316 1 243 3 152 1 281 7 157 2 
1 1 4 1 100 1 190 6 10 1 15 1 19 2 105 1 277 3 26 1 281 1 29 1 283 2 284 1 112 2 290 1 34 2 36 1 213 4 118 1 42 2 300 2 301 1 124 1 126 2 127 3 53 1 58 1 60 1 62 2 311 1 314 2 239 2 65 1 316 1 243 1 153 2 157 1 158 1 75 1 255 1 321 1 79 1 258 1 85 1 172 1 327 1 
181 2 4 1 98 1 189 1 193 1 15 1 198 2 18 1 203 4 107 1 275 3 205 1 24 1 281 1 284 1 288 3 111 1 33 1 290 1 34 1 36 2 116 2 300 1 120 1 301 1 44 1 217 1 219 1 220 1 304 2 223 1 51 1 52 5 137 1 59 1 60 1 235 2 65 2 241 1 243 1 71 2 157 1 247 1 75 2 251 2 255 1 258 1 85 1 172 1 175 1 329 2 177 1 
284 1 290 1 15 1 40 1 87 1 301 1 44 1 65 1 243 2 152 1 207 1 281 1 157 1 
284 1 285 1 290 4 192 1 15 4 18 1 147 1 65 1 316 1 150 1 243 1 281 4 157 1 
160 1 284 1 250 1 290 2 14 1 15 2 301 1 46 1 65 1 243 2 49 1 267 1 281 2 157 1 
290 1 15 1 18 1 61 1 94 1 243 1 50 1 281 1 157 1 179 1 
284 1 31 1 145 1 290 2 65 1 133 1 316 1 243 1 157 1 15 2 281 2 
284 2 285 1 290 4 133 1 14 1 15 5 18 1 313 1 147 1 65 3 22 1 150 1 316 1 243 2 281 5 157 2 
284 2 285 1 290 4 133 1 14 1 15 5 18 1 142 1 147 1 65 3 22 1 150 1 316 1 243 2 281 5 157 2 
284 1 100 1 53 1 290 1 34 2 15 1 85 1 60 1 18 1 19 1 172 1 300 2 301 1 65 1 243 1 70 1 281 1 157 1 
160 1 284 1 250 1 290 1 81 1 14 1 15 1 301 1 65 1 243 2 152 1 281 1 157 1 
19 1 215 1 32 1 80 1 266 1 
246 1 110 1 32 2 288 2 163 1 80 1 19 1 170 1 215 2 219 1 275 2 205 1 220 1 66 1 329 1 266 2 244 1 71 1 224 1 
172 1 143 1 32 1 300 1 34 1 80 1 82 1 38 1 266 1 
163 1 66 1 80 1 

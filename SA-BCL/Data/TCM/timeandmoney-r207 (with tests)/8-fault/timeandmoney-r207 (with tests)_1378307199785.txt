#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 164 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 164 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 164 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 164 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 74 173 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 254 80 124 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 228 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 1 333 1 250 1 349 1 195 1 123 1 145 1 162 1 188 1 164 1 171 1 287 1 214 1 
269 1 333 1 250 1 349 1 195 1 123 1 145 1 162 1 188 1 164 1 171 1 287 1 214 1 
269 1 333 1 250 1 349 1 195 1 123 1 145 1 162 1 188 1 164 1 171 1 287 1 214 1 
269 1 333 1 250 1 349 1 195 1 123 1 145 1 162 1 188 1 164 1 171 1 287 1 214 1 
91 1 250 4 162 1 188 1 267 1 164 1 128 1 192 3 6 1 288 2 269 4 145 1 123 1 210 1 184 2 10 1 171 1 159 3 
91 1 365 1 250 2 333 1 304 1 188 1 164 1 128 1 192 1 269 2 56 1 145 1 123 1 195 1 171 1 138 1 
91 1 250 3 333 1 188 2 128 1 192 2 6 1 288 1 269 3 145 1 123 2 249 1 159 1 
91 1 250 9 117 1 162 1 188 2 267 1 164 1 192 5 6 3 288 4 269 9 123 2 145 1 168 1 10 1 171 1 172 1 333 1 128 1 112 1 210 1 249 1 184 2 159 7 
91 1 250 9 117 1 162 1 188 2 267 1 164 1 192 5 6 3 288 4 269 9 123 2 145 1 168 1 10 1 171 1 172 1 333 1 128 1 112 1 210 1 249 1 184 2 159 7 
283 1 174 1 228 1 
236 2 174 1 62 1 
322 1 92 1 122 2 196 2 98 2 48 2 108 2 125 2 
348 1 92 1 68 1 118 2 284 1 306 2 163 1 309 1 119 1 4 1 38 1 143 1 230 1 252 1 122 3 196 2 98 2 148 2 125 2 314 1 292 2 257 1 47 1 48 2 200 2 335 1 108 3 242 1 297 1 322 1 19 1 20 1 262 1 63 1 157 1 28 1 158 1 
92 1 34 1 122 1 239 1 196 1 98 1 48 1 108 1 241 1 125 1 
283 1 151 1 152 1 366 1 239 1 174 1 240 1 108 1 203 1 130 1 205 1 122 1 125 1 29 1 
283 1 151 2 366 1 239 1 48 1 174 1 240 1 108 1 130 2 205 1 122 1 98 1 196 1 125 1 29 1 
136 1 113 1 151 1 130 1 256 1 
136 1 283 1 151 2 174 1 321 1 360 1 130 2 256 1 
151 1 130 1 256 1 
92 1 34 1 151 1 239 1 48 1 241 1 108 1 130 1 39 1 136 1 122 1 98 1 196 1 125 1 
174 1 
136 1 283 1 151 2 174 1 344 1 321 1 130 2 256 1 
92 1 283 1 34 1 3 4 189 2 351 1 95 2 39 1 121 1 76 1 122 1 196 1 98 1 253 1 79 2 125 1 256 2 151 5 239 1 48 1 174 1 108 1 241 1 320 1 16 1 321 1 52 1 130 5 298 1 136 2 261 1 341 1 246 1 60 1 247 1 87 4 
257 1 348 1 306 1 334 1 309 1 108 2 297 1 19 1 230 1 20 1 97 1 122 2 262 1 98 1 196 1 148 1 28 1 125 1 300 1 292 1 
322 1 228 1 
115 1 48 1 108 2 322 2 229 1 122 2 98 1 196 1 125 2 
199 1 334 1 372 1 
257 1 348 1 306 1 108 1 309 1 353 1 297 1 322 1 19 1 20 1 230 1 122 1 262 1 148 1 28 1 292 1 
322 1 122 3 196 3 98 3 48 1 108 3 125 3 300 1 
34 1 122 1 239 1 196 1 98 1 108 1 125 1 
115 1 229 1 122 1 239 1 196 1 98 1 48 1 108 1 125 1 
348 1 92 1 68 1 118 1 284 1 306 1 309 1 119 1 38 1 143 1 354 1 229 1 230 1 97 1 252 1 122 4 196 3 98 3 148 1 125 3 314 1 292 1 257 1 151 1 366 1 239 1 48 2 200 2 240 1 108 4 242 1 130 1 297 1 54 1 322 1 205 1 19 1 20 1 262 1 63 1 157 1 28 1 29 1 300 1 
322 1 122 2 196 1 98 1 211 1 108 2 125 2 203 1 300 1 
151 1 239 1 366 1 48 1 174 1 240 1 108 3 130 1 54 1 205 1 229 1 97 1 122 3 98 3 196 3 183 1 29 1 125 3 300 2 
199 1 48 1 334 1 108 2 229 1 122 2 98 2 196 2 125 2 300 1 
257 1 348 1 306 1 108 1 309 1 297 1 322 1 19 1 20 1 230 1 122 1 262 1 148 1 28 1 292 1 
257 1 348 1 306 1 108 1 309 1 297 1 322 1 20 1 230 1 122 1 59 1 146 1 262 1 148 1 292 1 
68 1 305 1 118 4 35 1 284 1 189 1 119 1 38 1 79 1 314 1 291 1 47 2 237 1 199 2 334 2 200 2 368 1 369 1 58 1 63 1 212 1 157 2 224 1 372 2 
205 1 122 1 239 1 196 1 98 1 307 1 108 1 125 1 
48 1 108 5 203 1 40 1 322 1 229 1 97 1 122 5 98 4 196 4 211 1 223 1 125 5 300 2 
34 1 122 2 239 1 196 2 98 2 307 1 108 2 125 2 
150 1 116 1 
150 1 116 1 
282 1 266 1 
282 1 266 1 
282 1 266 1 
150 1 116 1 142 1 
150 1 116 1 142 1 
150 1 116 1 142 1 
150 1 116 1 313 1 
150 1 116 1 259 1 
150 2 116 2 12 1 282 1 266 1 311 1 
150 1 116 1 313 1 
150 1 116 1 313 1 
150 2 116 2 151 2 12 1 174 1 106 1 191 2 130 2 310 1 272 1 289 3 77 1 25 1 265 1 324 2 216 2 290 2 65 1 149 2 
0 1 150 1 116 1 259 1 151 1 36 1 336 1 108 2 191 1 286 1 130 1 322 1 289 1 122 2 98 2 196 2 323 1 265 1 85 1 324 1 216 1 125 2 315 1 149 1 
162 1 164 1 171 1 
164 1 171 1 138 1 
73 1 41 1 162 2 260 1 171 3 138 1 
41 1 162 1 352 1 260 1 171 2 138 1 
41 1 162 1 260 2 171 2 138 1 
0 1 283 1 3 3 189 1 286 1 74 1 166 1 253 1 79 1 217 1 232 2 315 1 256 1 236 3 151 5 218 2 174 2 320 1 107 1 16 1 321 1 52 1 130 5 369 1 136 4 340 1 221 2 62 1 26 1 212 1 185 1 87 2 
0 2 303 1 283 1 3 3 189 1 74 1 166 1 253 1 79 1 256 4 236 3 151 7 218 2 174 3 320 1 107 1 16 1 321 1 130 7 52 1 369 1 219 1 136 5 180 1 113 3 60 1 221 2 62 1 26 1 212 1 87 2 346 3 
136 1 74 1 340 1 151 2 60 1 185 1 130 2 
74 1 340 1 151 1 173 1 60 1 185 1 130 1 
228 1 309 1 268 1 
135 1 309 1 
363 1 
230 1 309 1 
312 1 230 1 262 1 309 3 197 1 268 2 
230 1 262 1 309 1 
111 1 309 1 
235 1 47 4 237 3 93 1 118 7 189 1 51 1 121 1 261 1 270 1 246 1 147 1 114 2 343 1 79 1 157 3 291 2 
235 1 47 4 237 3 93 1 118 7 189 1 51 1 121 1 261 1 270 1 246 1 147 1 114 2 343 1 79 1 157 3 291 2 
235 1 47 4 237 3 1 1 93 1 118 7 189 1 51 1 121 1 261 1 270 1 246 1 147 1 114 2 343 1 79 1 157 3 291 2 
325 1 93 1 68 1 226 1 118 31 189 4 119 1 38 1 71 1 121 2 193 1 270 2 166 3 147 2 78 1 79 4 291 5 314 1 361 4 235 1 47 16 237 10 200 2 51 5 369 3 220 3 261 2 246 1 114 3 343 1 212 3 157 15 160 1 66 1 
235 1 47 5 237 4 68 2 118 9 189 1 200 4 51 1 119 2 71 1 38 2 121 1 204 1 261 1 270 1 178 1 246 1 147 1 114 2 343 1 79 1 157 4 291 3 314 2 
139 1 91 1 250 2 162 1 306 1 188 1 164 1 192 1 269 2 73 1 123 1 145 1 330 1 231 1 148 1 43 1 9 1 171 2 292 1 316 1 257 1 258 1 333 1 128 1 129 1 53 1 20 1 22 1 159 1 138 1 
139 1 90 1 91 1 250 3 162 1 306 1 188 1 164 1 192 1 73 1 269 3 123 1 330 1 148 1 43 1 171 2 292 1 316 1 257 1 258 1 333 1 82 1 201 1 128 1 129 1 53 1 20 1 22 1 159 2 138 1 
139 1 90 1 91 1 250 2 162 1 306 1 164 1 192 1 269 2 73 1 148 1 43 1 171 2 292 1 316 1 257 1 333 1 258 1 201 1 128 1 53 1 20 1 22 1 159 2 138 1 
139 2 348 1 250 1 306 1 188 1 309 1 269 1 230 1 123 1 42 1 356 1 148 1 292 1 257 1 258 2 333 2 319 1 82 1 278 1 20 1 299 1 22 2 263 1 
257 1 90 1 139 1 333 1 250 1 258 1 162 1 188 1 306 1 164 1 129 1 53 1 73 1 269 1 20 1 145 1 123 1 330 1 22 1 231 1 148 1 43 1 171 2 138 1 292 1 316 1 
31 1 
283 1 3 2 327 1 122 1 170 1 253 1 8 1 331 1 125 1 254 1 292 2 256 6 294 2 257 1 174 2 13 1 176 4 16 1 18 2 130 5 20 1 263 1 29 1 87 2 89 1 348 2 227 2 306 2 309 1 230 1 42 1 357 2 148 2 44 2 274 1 364 1 236 2 151 5 152 1 366 1 239 1 105 2 50 1 240 1 107 1 320 1 108 1 321 3 109 1 52 1 203 1 205 1 370 1 62 2 161 2 
122 1 170 1 8 1 125 1 256 2 151 3 152 1 366 1 239 1 13 1 240 1 108 1 176 2 109 1 321 1 203 1 130 3 18 1 205 1 370 1 344 1 29 1 
283 1 122 1 170 1 8 1 125 1 256 1 294 1 151 3 152 1 366 1 239 1 13 1 174 1 240 1 108 1 176 3 109 1 321 1 203 1 130 3 205 1 370 1 344 1 29 1 
283 1 227 1 122 1 170 1 8 1 125 1 256 2 294 1 151 3 152 1 366 1 239 1 13 1 174 1 240 1 108 1 176 3 321 1 109 1 203 1 130 3 18 1 205 1 370 1 344 1 29 1 
283 5 3 1 285 1 122 1 170 1 253 1 8 1 125 1 254 1 256 7 80 1 294 4 13 1 174 5 176 6 16 1 18 4 130 5 344 1 29 1 87 1 227 4 357 2 44 2 151 5 239 1 366 1 152 1 50 1 105 2 240 1 108 1 320 1 321 3 109 1 202 1 203 1 52 1 205 1 206 1 370 1 62 2 213 1 161 2 
89 1 283 1 3 1 227 2 122 1 170 1 357 2 253 1 8 1 44 2 125 1 254 1 256 4 294 2 236 2 151 4 152 1 366 1 239 1 174 2 105 2 13 1 50 1 240 1 320 1 108 1 176 4 16 1 321 2 109 1 18 2 52 1 130 4 203 1 205 1 370 1 62 2 29 1 161 2 87 1 
283 1 3 1 227 2 122 1 170 1 357 2 253 1 8 1 44 2 125 1 254 1 256 4 80 1 294 2 151 4 152 1 366 1 239 1 174 1 105 2 50 1 13 1 240 1 320 1 108 1 176 4 16 1 321 2 109 1 202 1 18 2 203 1 130 4 52 1 205 1 206 1 370 1 62 2 29 1 161 2 87 1 
283 1 3 1 227 2 122 1 170 1 357 2 253 1 8 1 44 2 125 1 254 1 256 4 80 1 294 2 151 4 152 1 366 1 239 1 174 1 105 2 50 1 13 1 240 1 320 1 108 1 176 4 16 1 321 2 109 1 202 1 18 2 203 1 130 4 52 1 205 1 206 1 370 1 62 2 29 1 161 2 87 1 
151 2 239 1 366 1 152 1 105 1 13 1 240 1 176 2 108 1 109 1 130 2 203 1 205 1 370 1 122 1 170 1 124 1 8 1 29 1 125 1 254 1 161 1 80 1 
283 1 3 1 227 3 122 1 170 1 357 2 253 1 8 1 44 2 125 1 254 1 80 1 256 5 294 3 151 4 152 1 366 1 239 1 174 1 105 2 50 1 13 1 240 1 320 1 108 1 176 5 16 1 321 2 109 1 202 1 52 1 203 1 130 4 18 3 205 1 206 1 370 1 62 2 29 1 213 1 161 2 87 1 
283 1 3 1 227 3 122 1 170 1 357 2 253 1 8 1 44 2 125 1 254 1 80 1 256 5 294 3 151 4 152 1 366 1 239 1 174 1 105 2 50 1 13 1 240 1 320 1 108 1 176 5 16 1 321 2 109 1 202 1 52 1 203 1 130 4 18 3 205 1 206 1 370 1 62 2 29 1 213 1 161 2 87 1 
89 1 283 1 3 1 227 2 122 1 170 1 253 1 8 1 125 1 254 1 256 4 294 2 236 2 151 4 152 1 366 1 239 1 174 1 105 2 13 1 240 1 320 1 108 1 176 4 16 1 321 2 109 1 18 2 243 2 52 1 130 4 203 1 177 2 205 1 370 1 342 1 29 1 161 2 87 1 
68 1 118 6 284 1 189 1 228 1 119 1 38 1 121 1 79 1 314 1 291 2 235 1 47 3 237 2 199 1 334 1 200 2 368 1 322 2 261 1 246 1 114 1 343 1 63 1 157 3 372 1 
347 1 68 2 118 14 284 1 69 1 189 2 119 2 4 1 38 2 5 1 271 1 252 1 166 2 79 1 291 1 314 2 361 3 47 8 237 2 199 4 334 11 175 1 200 4 51 1 369 2 322 1 220 3 63 2 212 1 157 6 372 11 160 1 66 1 
348 1 33 1 68 1 118 2 284 1 306 1 69 1 309 1 119 1 4 1 353 1 38 1 230 1 97 1 122 2 252 1 196 1 98 1 148 1 125 1 314 1 292 1 257 1 47 1 199 1 367 1 200 2 108 2 297 1 322 1 19 1 20 1 207 1 262 1 63 1 28 1 157 1 300 1 
68 3 118 20 284 3 69 1 119 3 4 1 121 1 252 1 122 3 166 2 79 3 125 1 291 4 292 1 257 2 295 1 334 7 131 1 297 2 261 1 19 2 20 2 262 2 181 2 343 1 28 2 300 1 348 1 140 2 306 1 189 3 309 2 38 3 143 2 97 1 230 2 98 1 196 1 99 2 148 1 314 3 235 1 47 10 237 5 199 7 200 6 108 3 51 1 369 2 322 2 208 2 114 1 246 1 63 3 212 2 157 10 372 7 
90 1 348 2 68 2 186 1 187 1 118 2 284 2 306 7 70 1 309 3 119 2 120 1 4 1 38 2 230 2 122 1 251 1 252 1 196 1 98 1 42 1 148 8 9 1 125 1 314 2 292 8 257 2 47 1 200 4 368 1 108 1 153 1 57 1 20 2 263 1 63 2 157 1 158 2 300 1 
68 1 118 3 284 1 69 1 189 1 119 1 38 1 229 1 122 1 166 1 98 1 196 1 79 1 125 1 291 1 314 1 47 1 237 1 199 1 48 1 334 1 200 2 108 1 154 1 369 1 63 1 212 1 157 2 372 1 
47 2 237 1 68 1 118 2 284 1 199 1 334 1 189 1 200 2 368 1 51 1 119 1 38 1 369 1 58 1 63 1 372 1 314 1 
237 1 68 1 118 2 305 1 284 1 199 1 334 1 200 2 368 1 119 1 38 1 63 1 79 1 212 1 157 2 291 1 372 1 314 1 
68 1 118 4 284 1 189 1 119 1 38 1 166 1 79 1 314 1 291 1 47 2 237 2 199 2 334 2 200 2 368 1 51 1 369 1 63 1 212 1 157 2 372 2 
47 2 237 1 68 1 118 2 284 1 199 1 334 1 189 1 200 2 51 1 119 1 38 1 369 1 251 1 58 1 63 1 372 1 314 1 
237 1 68 1 118 2 305 1 284 1 199 1 334 1 200 2 119 1 38 1 251 1 63 1 79 1 212 1 157 2 291 1 372 1 314 1 
68 1 118 4 284 1 189 1 119 1 38 1 166 1 251 1 79 1 314 1 291 1 47 2 237 2 199 2 334 2 200 2 51 1 369 1 63 1 212 1 157 2 372 2 
68 1 118 4 284 1 189 1 119 1 38 1 166 1 79 1 314 1 291 1 47 2 237 2 199 2 334 2 200 2 51 1 369 1 63 1 212 1 157 2 372 2 
257 1 348 1 47 1 68 1 118 2 284 1 306 1 200 2 108 1 309 1 119 1 4 1 38 1 143 1 297 1 322 1 19 1 20 1 230 1 252 1 122 1 262 1 63 1 148 1 157 1 28 1 314 1 292 1 
257 1 348 1 47 1 68 1 118 2 284 1 306 1 200 2 141 1 108 1 309 1 119 1 4 1 38 1 297 1 322 1 20 1 230 1 252 1 122 1 59 1 146 1 262 1 63 1 148 1 157 1 314 1 292 1 
68 1 118 4 284 1 189 1 69 1 119 1 38 1 166 1 79 1 314 1 291 1 47 2 237 2 199 2 334 2 200 2 51 1 369 1 63 1 212 1 157 2 372 2 
68 1 118 4 284 1 306 1 189 1 309 1 119 1 143 1 38 1 230 1 122 1 166 1 79 1 148 1 9 1 291 1 314 1 292 1 257 1 47 2 237 2 199 2 334 2 200 2 108 1 51 1 297 1 369 1 19 1 20 1 262 1 181 1 63 1 212 1 157 2 28 1 372 2 
68 1 118 3 284 1 69 1 189 1 119 1 38 1 229 1 122 1 166 1 98 1 196 1 79 1 273 1 125 1 314 1 47 2 237 1 48 1 199 1 334 1 200 2 108 1 51 1 369 1 63 1 212 1 157 1 372 1 
68 2 118 19 326 1 189 3 119 2 38 2 96 2 166 3 329 1 167 1 169 1 79 3 359 1 291 3 314 2 361 2 47 9 237 6 200 4 51 3 369 3 220 1 279 1 178 1 281 1 64 2 212 3 157 10 160 1 66 1 
68 3 118 26 189 3 119 3 71 2 38 3 96 4 166 3 329 2 355 1 169 1 79 2 359 2 102 1 291 2 314 3 361 2 126 1 275 1 47 14 237 4 200 6 51 2 132 1 369 3 220 2 279 1 178 1 281 1 64 1 27 1 212 2 157 12 160 2 
68 3 118 41 326 1 189 5 119 3 71 1 38 3 121 1 96 4 166 4 329 2 355 1 169 1 79 5 359 1 102 1 291 4 314 3 361 4 126 1 275 1 235 1 47 20 237 8 200 6 51 4 132 1 369 4 220 3 279 1 261 1 178 1 114 1 246 1 343 1 281 1 371 1 64 1 27 1 212 4 157 21 160 3 66 1 
68 4 118 38 326 1 189 5 119 4 71 2 38 4 121 1 96 4 166 4 329 2 355 1 169 1 79 4 359 1 102 1 291 4 314 4 361 4 126 1 275 1 235 1 47 20 237 7 200 8 51 3 132 1 369 4 220 3 279 1 261 1 178 1 114 1 246 1 343 1 281 1 371 1 64 1 27 1 212 3 157 18 160 3 66 1 
347 2 68 2 118 52 189 8 119 2 71 1 38 2 121 1 96 4 166 7 329 1 355 1 169 1 79 8 359 1 102 1 291 7 314 2 361 4 126 1 275 1 235 1 47 27 237 14 200 4 51 7 132 1 369 7 220 4 279 1 261 1 178 1 114 1 246 1 343 1 281 1 64 1 27 1 212 7 157 25 160 2 66 2 
150 1 272 1 116 1 12 1 25 1 191 1 324 1 216 1 149 1 46 1 
259 1 85 1 
150 1 127 1 116 1 84 1 191 1 324 1 216 1 338 1 149 1 
150 1 116 1 151 1 12 1 174 1 106 1 191 1 130 1 310 1 272 1 289 2 25 1 265 1 324 1 216 1 290 1 65 1 149 1 
150 1 116 1 151 1 12 1 174 1 106 1 191 1 130 1 310 1 272 1 289 2 25 1 265 1 324 1 216 1 290 1 65 1 149 1 
150 1 116 1 151 1 12 1 174 1 106 1 191 1 130 1 310 1 272 1 289 2 25 1 265 1 324 1 216 1 290 1 65 1 149 1 
328 1 142 1 311 1 
328 1 142 1 311 1 
358 1 313 1 
358 1 313 1 311 1 
36 1 323 1 
0 1 116 1 36 1 191 1 286 1 289 1 122 2 98 2 196 2 290 1 216 1 125 2 149 1 315 1 150 1 151 1 259 1 106 1 108 2 336 1 130 1 322 1 136 1 323 1 324 1 85 1 225 1 
328 1 142 1 
358 1 313 1 311 1 
68 1 186 1 118 2 284 1 306 2 69 1 309 1 119 1 4 1 38 1 230 1 144 1 122 2 252 1 148 2 125 2 314 1 292 2 317 1 257 1 47 1 49 1 200 2 108 2 153 1 20 1 280 1 156 1 63 1 157 1 158 2 
257 1 90 1 162 1 306 2 164 1 73 1 20 1 209 1 330 1 22 1 148 2 100 1 43 1 9 1 171 2 138 1 292 2 30 1 316 1 
257 1 90 1 162 1 306 1 164 1 73 1 20 1 209 1 330 1 22 1 148 1 43 1 171 2 138 1 292 1 45 1 316 1 
257 1 348 1 319 1 306 1 309 1 110 1 20 1 230 1 42 1 22 1 263 1 148 1 292 1 30 1 
257 1 90 1 162 1 306 1 164 1 73 1 20 1 209 1 330 1 22 1 148 1 100 1 43 1 171 2 138 1 292 1 30 1 316 1 
21 1 
228 1 
283 1 3 1 253 1 357 1 44 1 256 1 236 1 151 1 50 1 174 2 320 1 16 1 321 1 52 1 130 1 62 1 87 1 
257 1 348 1 306 1 309 2 320 1 16 1 52 1 135 1 20 2 230 1 262 1 61 1 253 1 148 1 197 1 292 1 302 1 
283 2 3 8 189 2 351 1 95 2 75 1 166 2 355 1 253 2 79 2 102 1 361 1 364 1 256 1 126 1 275 1 236 6 151 1 218 5 174 5 107 1 320 2 16 2 321 1 130 1 52 2 369 2 220 1 221 5 248 1 62 3 27 1 212 2 160 1 87 5 
92 1 34 1 3 2 189 2 351 1 95 2 39 1 121 1 122 1 98 1 196 1 253 1 79 1 125 1 151 1 239 1 48 1 108 1 320 1 241 1 16 1 52 1 130 1 261 1 206 1 246 1 247 1 87 2 
253 1 320 1 16 1 52 1 
283 1 151 1 174 1 321 1 130 1 256 1 
348 2 3 1 306 2 327 1 309 1 230 1 42 1 253 1 148 2 331 1 292 2 256 2 364 1 257 1 151 2 320 1 107 1 16 1 321 1 52 1 130 2 20 1 137 1 60 1 263 1 87 1 
348 1 92 1 68 1 118 1 284 1 306 1 309 1 119 1 38 1 143 1 230 1 252 1 122 3 196 2 98 2 148 1 125 2 314 1 292 1 257 1 48 2 200 2 108 3 242 1 297 1 322 1 19 1 20 1 262 1 63 1 157 1 28 1 
283 2 236 4 3 1 218 2 174 4 320 1 107 1 16 1 52 1 114 1 221 2 62 2 253 1 87 2 364 1 
191 1 216 1 88 1 
191 1 216 1 88 1 
191 1 216 1 88 1 
182 1 191 1 216 1 
272 1 36 1 191 1 216 1 133 1 
182 1 191 1 216 1 
182 1 191 1 216 1 
191 1 216 1 
150 1 116 1 
235 1 47 4 237 3 68 2 118 8 189 1 200 4 51 1 119 2 38 2 71 1 121 1 261 1 114 1 246 1 343 1 79 1 157 4 291 2 314 2 
235 1 47 3 237 2 118 6 189 1 228 1 121 1 261 1 114 1 246 1 343 1 79 1 157 3 291 2 
47 2 237 2 68 1 118 4 189 1 200 2 14 1 119 1 51 1 38 1 369 1 166 1 79 1 212 1 157 2 291 1 314 1 
47 3 237 2 118 7 189 1 51 1 369 1 220 1 166 1 79 1 212 1 157 4 291 1 160 1 361 2 66 1 
347 1 68 2 118 23 189 3 119 2 71 2 38 2 121 2 166 2 79 3 291 5 314 2 361 2 235 1 47 11 237 9 175 1 200 4 51 4 369 2 220 2 261 2 114 1 246 1 343 1 212 2 157 12 66 1 373 1 
118 1 157 1 361 1 
220 1 47 1 118 1 
47 3 68 1 237 4 118 6 189 1 200 2 14 1 119 1 51 2 38 1 369 1 208 1 166 1 79 1 212 1 157 3 314 1 291 2 
68 1 118 12 189 2 119 1 38 1 166 2 355 1 79 2 314 1 291 1 102 1 361 1 126 1 275 1 47 6 237 2 200 2 51 1 369 2 220 1 178 1 27 1 212 2 157 6 160 1 
47 3 237 2 118 6 189 1 51 1 121 1 261 1 246 1 79 1 157 3 291 1 
235 1 47 1 237 2 68 1 118 3 200 2 51 1 119 1 71 1 38 1 121 1 261 1 343 1 157 2 291 1 314 1 373 1 
47 5 68 1 237 5 118 10 189 2 200 2 119 1 51 2 38 1 121 2 178 1 261 2 246 1 247 1 79 2 157 5 314 1 291 3 
47 2 68 1 237 1 118 2 189 1 200 2 119 1 51 1 38 1 369 1 178 1 314 1 
47 2 237 2 68 1 118 4 189 1 200 2 119 1 51 1 38 1 369 1 178 1 166 1 79 1 212 1 157 2 291 1 314 1 
47 1 68 3 237 2 118 3 326 1 200 6 119 3 51 1 71 1 38 3 121 1 178 1 261 1 157 2 314 3 291 1 373 1 
325 1 68 5 118 34 326 1 189 5 119 5 71 2 38 5 121 3 193 1 166 3 78 1 79 5 314 5 291 7 361 4 235 1 47 16 237 12 200 10 14 1 51 5 369 3 220 3 261 3 178 1 114 1 246 2 343 1 212 3 157 18 160 1 373 1 66 1 
68 1 118 8 189 1 119 1 38 1 121 1 79 1 314 1 291 2 361 1 126 1 235 1 47 4 237 2 200 2 220 1 178 1 261 1 114 1 246 1 343 1 157 4 160 1 
68 2 118 11 189 2 119 2 38 2 121 1 166 1 79 1 291 2 314 2 361 2 126 1 235 1 47 6 237 3 200 4 14 1 51 1 369 1 220 1 261 1 178 1 114 1 246 1 343 1 157 5 160 1 66 1 
68 3 118 19 189 3 119 3 38 3 71 1 121 1 166 2 355 1 79 3 314 3 291 3 102 1 361 1 126 1 275 1 235 1 47 9 237 4 200 6 14 1 51 1 369 2 220 1 261 1 178 1 114 1 246 1 343 1 27 1 212 2 157 10 160 1 
68 3 118 17 189 3 119 3 71 1 38 3 121 1 166 2 355 1 79 2 314 3 291 3 102 1 361 1 126 1 275 1 235 1 47 10 237 5 200 6 14 1 51 2 369 2 220 1 261 1 178 1 114 1 246 1 343 1 27 1 212 1 157 7 160 1 
68 1 118 8 189 1 119 1 38 1 121 1 79 1 314 1 291 2 361 1 126 1 235 1 47 4 237 2 200 2 220 1 178 1 261 1 114 1 246 1 343 1 157 4 160 1 
68 1 118 12 189 2 119 1 38 1 166 2 355 1 79 2 314 1 291 1 102 1 361 1 126 1 275 1 47 6 237 2 200 2 51 1 369 2 220 1 178 1 27 1 212 2 157 6 160 1 
68 4 118 18 189 3 119 4 38 4 71 2 121 1 166 2 355 1 79 2 102 1 314 4 291 3 361 1 126 1 275 1 235 1 47 10 237 5 200 8 14 1 51 2 369 2 220 1 261 1 178 1 114 1 246 1 343 1 27 1 212 1 157 8 160 1 
68 4 118 16 326 1 189 3 119 4 38 4 71 2 166 3 355 1 79 2 102 1 314 4 291 3 361 1 126 1 275 1 47 9 237 6 200 8 51 3 369 3 220 1 178 1 27 1 212 2 157 7 160 1 
235 2 47 3 237 6 118 7 189 1 51 3 121 3 261 3 246 1 343 1 79 1 157 4 291 3 
68 4 118 18 326 1 189 3 119 4 38 4 71 2 121 1 166 2 355 1 79 2 102 1 314 4 291 3 361 1 126 1 275 1 235 1 47 10 237 4 200 8 51 1 369 2 220 1 261 1 178 1 114 1 246 1 343 1 27 1 212 1 157 8 160 1 
322 1 122 1 211 1 264 1 108 1 125 1 203 1 
238 1 94 1 108 1 203 1 55 1 322 1 245 1 122 1 211 1 264 1 125 1 293 1 
257 1 348 1 20 1 230 1 42 1 306 1 263 1 228 1 148 1 309 1 292 1 
257 1 348 1 306 1 309 1 108 2 297 1 322 1 19 1 230 1 20 1 122 2 262 1 98 1 196 1 148 1 125 1 300 1 292 1 
306 1 309 3 37 1 230 2 122 2 196 2 98 1 148 1 125 2 292 1 257 1 366 1 239 1 108 2 297 1 322 1 244 1 205 1 19 1 20 1 111 1 262 2 300 1 
306 2 309 3 37 1 230 2 122 2 146 1 196 2 98 1 148 2 125 2 292 2 332 1 257 1 366 1 239 1 108 2 297 1 322 1 244 1 205 1 20 1 111 1 262 2 300 1 
348 1 283 1 306 3 309 4 37 1 268 1 230 1 148 3 292 3 256 1 332 1 257 1 151 2 174 1 296 1 130 2 134 1 135 1 244 1 20 1 111 1 262 1 29 1 
332 1 257 1 348 1 283 1 151 2 306 3 174 1 190 1 37 1 309 4 130 2 268 1 244 1 135 1 230 1 20 1 111 1 262 1 148 3 29 1 292 3 256 1 
257 1 20 1 306 1 148 1 70 1 292 1 
257 1 348 1 103 1 104 1 81 1 306 1 309 1 230 1 20 2 262 1 148 1 197 1 292 1 
140 1 68 2 118 6 284 2 306 1 189 1 69 1 309 1 119 2 38 2 143 1 121 1 230 1 122 2 196 1 98 1 79 1 148 1 9 1 125 1 291 2 314 2 292 1 257 1 235 1 47 3 237 2 199 1 334 1 200 4 108 2 297 1 322 2 261 1 19 1 20 1 280 1 114 1 246 1 262 1 181 1 343 1 63 2 157 3 28 1 372 1 300 1 
348 1 283 1 32 1 3 1 306 1 190 1 309 2 268 1 7 1 253 2 148 1 292 1 256 2 151 3 174 1 320 2 16 2 17 1 321 1 52 2 130 3 277 1 135 1 136 1 137 1 24 1 29 1 87 1 
257 1 306 2 70 1 309 2 268 1 230 1 20 2 262 1 148 2 9 1 197 1 292 2 302 1 
332 1 257 1 348 1 306 4 309 1 20 1 230 1 42 1 155 1 263 1 148 4 9 1 292 4 
257 1 350 1 103 1 81 1 306 1 309 1 179 1 230 1 20 2 262 1 148 1 233 1 292 1 
257 1 348 1 20 1 306 1 164 1 148 1 43 1 171 1 138 1 292 1 
257 1 90 1 20 1 230 1 306 2 49 1 148 2 309 1 9 1 292 2 153 1 
257 2 348 1 306 4 309 3 120 1 153 1 244 1 230 2 20 2 57 1 42 1 155 1 263 1 148 5 9 1 292 5 
257 2 348 1 103 1 81 1 306 2 309 2 153 1 179 1 230 2 20 3 262 1 23 1 263 1 148 2 9 1 233 1 292 2 
257 1 348 1 306 1 309 1 108 2 297 1 322 1 230 1 20 1 122 2 262 1 98 1 196 1 146 1 148 1 125 1 300 1 292 1 
257 1 103 1 104 1 81 1 306 1 309 1 244 1 230 1 20 2 262 1 148 1 197 1 292 1 
322 1 83 1 318 1 255 1 362 1 
283 1 318 2 151 2 239 1 366 1 174 1 240 1 130 2 54 1 322 1 205 1 136 1 339 1 83 2 29 1 11 1 255 2 362 1 234 1 
83 1 144 1 318 1 122 1 156 1 108 1 125 1 362 1 317 1 
339 1 11 1 362 1 
91 1 228 1 128 1 192 1 
269 1 91 1 250 1 123 1 188 1 128 1 192 1 
333 1 258 1 250 1 
194 1 198 1 269 3 91 1 365 2 250 3 123 1 145 1 188 1 128 1 192 1 86 1 
269 2 91 1 250 2 123 1 188 1 184 1 128 1 159 1 192 1 
250 1 162 1 188 1 267 1 164 1 192 1 288 1 269 1 145 1 123 1 171 1 
269 1 91 1 250 1 123 1 145 1 188 1 192 1 
269 1 91 2 250 1 123 1 145 1 188 1 128 1 
91 1 250 2 188 2 308 1 192 1 72 1 269 2 145 1 123 2 345 1 
91 1 250 3 188 1 128 1 192 2 6 1 288 1 269 3 145 1 123 1 112 1 159 2 172 1 
91 1 250 2 162 1 188 1 164 1 128 1 215 1 192 1 269 2 73 1 145 1 123 1 171 2 159 1 138 1 
91 1 250 4 188 2 128 1 192 2 6 1 288 1 269 4 145 1 123 2 184 1 10 1 159 2 
269 1 91 1 250 1 123 1 145 1 188 1 128 1 192 1 
198 1 365 1 91 2 250 4 188 1 128 2 15 1 192 3 6 1 288 1 194 1 269 4 123 1 159 2 
91 1 250 2 117 1 188 1 276 1 128 1 192 1 269 2 145 1 123 1 101 1 159 1 
198 1 250 3 365 2 91 1 2 1 188 1 128 1 192 1 269 3 194 2 145 1 123 1 
222 2 192 2 301 1 165 1 
269 1 250 1 123 1 145 1 188 1 337 1 
269 2 91 1 250 2 123 1 145 1 188 1 128 1 159 1 192 1 172 1 
67 1 
269 1 91 1 250 1 123 1 145 1 188 1 128 1 192 1 
269 3 91 1 365 1 250 3 123 1 145 1 188 1 128 1 159 1 192 1 172 1 
15 1 192 1 6 1 288 1 
91 1 192 1 

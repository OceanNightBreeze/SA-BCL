#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (148,289) (143,204) (143,204) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 50 141 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 5 163 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException 53 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 226 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (148,289) (143,204) (143,204) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (148,289) (143,204) (143,204) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (148,289) (143,204) (143,204) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 96 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 96 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 50 141 354 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 96 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
232 2 101 1 182 2 234 1 356 6 128 1 293 2 165 1 315 1 207 1 264 5 337 1 338 1 209 1 210 4 66 9 319 3 245 1 213 2 195 1 250 1 146 1 173 2 254 1 79 2 47 2 227 9 353 1 
232 2 101 1 182 2 234 1 356 6 128 1 293 2 165 1 315 1 207 1 264 5 337 1 338 1 209 1 210 4 66 9 319 3 245 1 213 2 195 1 250 1 146 1 173 2 254 1 47 2 227 9 79 2 353 1 
232 2 101 1 182 2 234 1 356 7 128 1 293 2 165 1 315 1 207 1 264 6 337 1 338 1 209 1 210 5 66 10 319 4 245 1 213 2 195 1 250 1 146 1 173 2 254 1 47 2 227 10 79 2 353 1 
232 2 101 1 182 2 234 1 356 4 128 1 293 2 165 1 207 1 264 4 337 1 338 1 209 1 210 3 66 7 319 2 245 1 213 2 195 1 250 1 146 1 173 2 254 1 47 2 227 7 79 1 353 1 
232 1 210 2 319 1 66 4 213 1 182 1 234 1 195 1 356 3 173 1 293 1 227 4 79 2 165 1 315 1 207 1 264 3 338 1 
232 1 66 2 182 1 245 1 213 1 235 1 195 1 128 1 293 1 296 1 297 1 227 2 47 1 165 1 264 1 338 1 
232 2 210 1 101 1 66 3 319 1 182 2 195 1 356 1 227 3 47 1 165 1 264 2 338 1 
232 2 101 1 182 2 234 1 356 7 293 1 165 1 264 5 207 1 315 1 337 1 338 1 210 4 319 3 66 9 213 1 368 1 195 1 168 1 173 1 254 1 47 1 227 9 79 2 
232 2 101 1 182 2 234 1 356 7 293 1 165 1 264 5 207 1 315 1 337 1 338 1 210 4 319 3 66 9 213 1 368 1 195 1 168 1 173 1 254 1 47 1 227 9 79 2 
366 1 107 1 178 1 
98 1 327 2 178 1 
160 2 93 2 181 2 253 2 298 2 92 1 179 2 138 1 
100 1 181 2 51 1 184 2 283 1 290 1 54 1 160 3 360 1 311 1 187 1 186 1 104 1 239 1 295 1 298 2 136 1 241 1 92 1 138 1 93 3 219 2 302 1 95 1 97 2 72 1 31 1 253 2 175 1 13 1 256 1 35 2 355 1 15 1 198 2 230 1 179 2 
160 1 93 1 257 1 181 1 253 1 298 1 135 1 171 1 179 1 138 1 
93 1 257 1 268 1 84 1 269 1 259 1 169 1 160 1 59 1 275 1 105 1 107 1 178 1 179 1 
93 1 257 1 181 1 84 1 269 2 259 1 169 1 160 1 253 1 298 1 275 1 105 2 107 1 178 1 179 1 
371 1 202 1 269 1 105 1 144 1 
202 1 269 2 76 1 105 2 107 1 178 1 197 1 144 1 
202 1 269 1 105 1 
93 1 257 1 181 1 269 1 144 1 171 1 160 1 253 1 105 1 164 1 298 1 135 1 138 1 179 1 
178 1 
202 1 269 2 76 1 33 1 105 2 107 1 178 1 144 1 
202 2 20 1 282 1 269 5 68 1 370 1 288 1 144 2 323 1 73 2 76 1 105 5 240 2 107 1 91 2 178 1 6 1 364 1 99 1 
366 1 92 1 
93 2 83 1 181 1 160 2 253 1 298 1 189 1 92 2 179 2 
22 1 74 1 28 1 
93 1 100 1 219 1 302 1 54 1 160 1 31 1 186 1 13 1 35 1 241 1 136 1 92 1 266 1 198 1 230 1 
160 3 93 3 253 1 181 3 298 3 92 1 272 1 179 3 
160 1 93 1 257 1 181 1 298 1 171 1 179 1 
160 1 93 1 83 1 257 1 181 1 253 1 298 1 189 1 179 1 
100 1 83 1 257 1 181 3 84 1 51 1 184 1 283 1 259 1 261 1 54 1 290 1 160 4 311 1 187 1 186 1 298 3 105 1 136 1 241 1 92 1 138 1 93 4 269 1 345 1 219 1 302 1 95 1 169 1 272 1 97 2 31 1 253 2 175 1 13 1 256 1 225 1 275 1 35 1 355 1 15 1 198 1 230 1 179 3 
160 2 93 2 181 1 59 1 77 1 298 1 92 1 179 2 272 1 
83 1 93 3 1 1 257 1 84 1 181 3 269 1 345 1 259 1 169 1 261 1 272 2 160 3 253 1 105 1 298 3 275 1 178 1 179 3 
83 1 93 2 181 2 22 1 272 1 160 2 253 1 74 1 298 2 179 2 
93 1 100 1 219 1 302 1 54 1 160 1 31 1 186 1 13 1 35 1 241 1 136 1 92 1 198 1 230 1 
93 1 100 1 219 1 27 1 302 1 160 1 31 1 13 1 35 1 241 1 136 1 92 1 198 1 279 1 230 1 
231 1 51 1 283 1 184 4 287 1 103 1 360 2 89 1 311 2 242 1 109 1 318 1 22 2 28 2 95 1 220 1 44 1 97 2 113 1 149 1 256 1 74 2 355 1 15 1 
160 1 93 1 200 1 257 1 181 1 275 1 298 1 179 1 
100 1 93 2 181 1 219 1 302 1 261 1 272 1 54 1 160 2 31 1 186 1 13 1 74 1 298 1 35 1 136 1 241 1 198 1 230 1 179 1 
93 5 83 1 181 4 244 1 261 1 272 2 160 5 161 1 253 1 59 1 77 1 298 4 92 1 179 5 
200 1 160 2 93 2 257 1 181 2 298 2 171 1 179 2 
82 1 
82 1 
24 1 357 1 
24 1 357 1 
24 1 357 1 
82 1 
82 1 
82 1 
24 1 357 1 82 2 
82 1 
82 1 
82 1 
82 1 
269 2 67 1 143 1 249 2 349 2 251 1 55 2 148 1 204 1 58 2 228 2 105 2 316 1 178 1 82 2 
93 1 48 1 50 1 181 1 269 1 141 1 347 1 249 1 349 1 160 1 55 1 58 1 46 1 105 1 228 1 298 1 316 1 82 1 179 1 
173 1 293 1 213 1 
293 1 213 1 296 1 
173 2 293 3 296 1 328 1 110 1 339 1 
173 1 293 2 296 1 206 1 110 1 339 1 
173 1 293 2 296 1 339 1 110 2 
48 1 183 1 236 1 287 1 103 1 56 1 291 1 312 1 105 4 240 1 91 1 107 1 242 1 364 3 20 1 167 1 269 4 347 1 94 1 68 1 144 4 221 1 113 1 73 1 46 1 34 2 327 1 178 1 307 1 
181 1 183 1 287 1 291 1 133 1 298 1 240 1 190 3 135 1 91 1 242 1 138 1 93 1 94 1 144 5 253 1 307 1 17 1 257 1 48 2 202 3 103 1 160 1 312 1 164 1 105 5 107 1 364 3 20 1 269 5 214 1 68 1 171 1 371 3 221 1 113 1 73 1 327 1 178 2 179 1 
48 1 183 1 236 1 287 1 103 1 291 2 312 2 105 3 240 1 107 1 91 1 242 1 364 3 167 1 269 3 370 1 68 2 144 2 221 1 113 1 73 1 98 2 34 1 327 4 178 3 307 1 
48 2 183 2 236 1 287 2 158 1 103 2 291 4 312 4 105 4 240 1 107 1 91 1 108 1 242 2 364 5 269 4 167 1 370 1 68 4 144 3 221 1 113 2 73 1 98 3 34 2 327 7 372 1 178 4 307 1 
31 1 366 1 123 1 
31 1 57 1 
310 1 
31 1 13 1 
111 1 31 3 13 1 78 1 136 1 123 2 
31 1 13 1 136 1 
31 1 75 1 
343 1 9 2 184 7 2 1 287 1 29 1 145 1 103 1 40 1 89 3 360 4 311 3 60 1 363 1 80 1 166 1 109 2 
343 1 9 2 184 7 2 1 287 1 29 1 145 1 103 1 40 1 89 3 360 4 311 3 60 1 363 1 80 1 166 1 109 2 
343 1 201 1 9 2 184 7 2 1 287 1 29 1 145 1 103 1 40 1 89 3 360 4 311 3 60 1 363 1 80 1 166 1 109 2 
360 1 9 1 184 1 286 1 363 2 166 1 145 1 
51 2 283 2 184 9 2 1 287 1 103 1 40 1 360 5 89 4 311 4 60 1 363 1 166 1 109 3 343 1 9 2 29 1 95 2 97 4 224 1 80 1 121 1 278 1 355 2 
100 1 232 1 182 1 284 1 356 1 359 1 293 2 296 1 314 1 165 1 264 1 338 1 341 1 320 1 66 2 213 1 216 1 195 1 217 1 219 1 302 1 30 1 173 1 305 1 227 2 47 1 35 1 328 1 198 1 81 1 
100 1 232 1 182 1 284 1 356 2 359 1 188 1 293 2 296 1 314 1 264 1 90 1 338 1 341 1 320 1 66 3 213 1 216 1 195 1 217 1 219 1 302 1 173 1 305 1 227 3 47 1 35 1 36 1 328 1 198 1 
100 1 356 2 359 1 188 1 293 2 296 1 314 1 264 1 90 1 338 1 320 1 66 2 213 1 216 1 195 1 217 1 219 1 302 1 173 1 305 1 47 1 227 2 35 1 328 1 198 1 
100 1 232 1 66 1 320 2 182 1 18 1 216 2 157 1 219 1 302 1 248 1 359 2 12 1 31 1 13 1 299 1 47 2 227 1 36 1 35 1 241 1 198 1 342 1 
100 1 232 1 182 1 284 1 359 1 293 2 296 1 314 1 165 1 90 1 341 1 320 1 66 1 213 1 216 1 217 1 219 1 302 1 30 1 173 1 305 1 227 1 47 1 35 1 328 1 198 1 
194 1 
280 2 233 1 84 1 285 1 126 1 87 1 333 1 132 1 240 1 42 2 91 1 241 2 342 1 192 1 93 1 348 1 302 1 147 1 12 1 98 2 13 1 153 2 198 2 307 1 100 1 257 1 202 6 259 1 160 1 59 1 62 1 105 5 262 4 107 1 364 2 19 2 65 2 267 1 268 1 20 1 269 5 68 2 219 2 69 2 169 1 31 1 73 1 115 1 76 3 275 1 327 2 35 2 178 2 122 2 179 1 
257 1 84 1 202 2 285 1 259 1 333 1 160 1 59 1 105 3 262 2 93 1 192 1 267 1 268 1 269 3 169 1 115 1 76 1 275 1 33 1 153 1 179 1 
280 1 257 1 202 1 84 1 285 1 259 1 333 1 160 1 59 1 105 3 262 3 107 1 93 1 192 1 267 1 268 1 269 3 169 1 115 1 76 1 275 1 33 1 178 1 179 1 
280 1 257 1 84 1 202 2 285 1 259 1 333 1 160 1 59 1 105 3 262 3 42 1 107 1 93 1 192 1 267 1 268 1 269 3 169 1 115 1 76 1 33 1 275 1 153 1 178 1 179 1 
280 4 257 1 202 7 84 1 86 1 126 1 285 1 87 1 259 1 333 1 160 1 59 1 313 1 105 5 262 6 240 1 42 4 91 1 107 5 208 1 364 1 19 2 65 2 192 1 93 1 267 1 268 1 20 1 212 1 269 5 68 1 69 2 169 1 73 1 98 2 115 1 76 3 33 1 275 1 352 1 178 5 153 4 122 2 179 1 
280 2 84 1 126 1 285 1 87 1 333 1 240 1 42 2 91 1 93 1 192 1 147 1 98 2 153 2 257 1 202 4 259 1 160 1 59 1 262 4 105 4 107 1 364 1 19 2 267 1 65 2 268 1 20 1 269 4 68 1 69 2 169 1 73 1 115 1 76 2 275 1 327 2 178 2 122 2 179 1 
280 2 257 1 202 4 84 1 86 1 126 1 285 1 87 1 259 1 333 1 160 1 59 1 105 4 262 4 313 1 240 1 42 2 107 1 91 1 208 1 364 1 19 2 65 2 93 1 192 1 267 1 268 1 20 1 269 4 68 1 69 2 169 1 73 1 98 2 115 1 76 2 275 1 178 1 153 2 122 2 179 1 
280 2 257 1 202 4 84 1 86 1 126 1 285 1 87 1 259 1 333 1 160 1 59 1 105 4 262 4 313 1 240 1 42 2 107 1 91 1 208 1 364 1 19 2 65 2 93 1 192 1 267 1 268 1 20 1 269 4 68 1 69 2 169 1 73 1 98 2 115 1 76 2 275 1 178 1 153 2 122 2 179 1 
280 2 258 1 257 1 202 4 84 1 125 1 86 1 285 1 88 2 87 1 259 1 333 1 160 1 59 1 105 4 262 4 240 1 42 2 107 1 91 1 364 1 19 2 93 1 192 1 267 1 268 1 20 1 269 4 218 2 68 1 169 1 73 1 115 1 14 1 76 2 275 1 327 2 178 1 153 2 122 2 179 1 
280 3 257 1 84 1 202 5 86 1 126 1 285 1 87 1 259 1 333 1 160 1 59 1 313 1 105 4 262 5 240 1 42 3 107 1 91 1 208 1 364 1 19 2 65 2 93 1 192 1 267 1 268 1 20 1 212 1 269 4 68 1 69 2 169 1 73 1 98 2 115 1 76 2 275 1 178 1 153 3 122 2 179 1 
280 3 257 1 84 1 202 5 86 1 126 1 285 1 87 1 259 1 333 1 160 1 59 1 313 1 105 4 262 5 240 1 42 3 107 1 91 1 208 1 364 1 19 2 65 2 93 1 192 1 267 1 268 1 20 1 212 1 269 4 68 1 69 2 169 1 73 1 98 2 115 1 76 2 275 1 178 1 153 3 122 2 179 1 
280 2 257 1 258 1 202 4 84 1 285 1 88 2 87 1 259 1 333 1 160 1 59 1 105 4 262 4 240 1 42 2 107 1 91 1 364 1 19 2 192 1 93 1 267 1 268 1 20 1 269 4 218 2 68 1 169 1 147 1 73 1 115 1 76 2 275 1 327 2 178 1 153 2 122 2 179 1 
51 1 283 1 184 6 2 1 287 1 103 1 40 1 89 2 360 3 311 3 60 1 92 2 109 2 343 1 366 1 318 1 22 1 9 1 29 1 28 1 95 1 97 2 74 1 256 1 355 1 15 1 
51 2 183 2 283 2 184 14 358 3 287 1 103 2 129 1 89 2 360 8 187 1 162 1 311 6 134 1 336 1 92 1 242 2 109 1 22 4 215 1 301 3 28 11 95 2 97 4 72 1 113 1 351 1 256 2 74 11 176 1 80 1 355 2 15 1 
100 1 181 1 51 1 283 1 184 2 261 1 54 1 160 2 360 1 186 1 187 1 311 1 298 1 136 1 241 1 92 1 266 1 93 2 22 1 219 1 302 1 95 1 322 1 43 1 272 1 97 2 31 1 72 1 13 1 256 1 176 1 306 1 35 1 355 1 198 1 15 1 230 1 179 1 
124 2 181 1 183 2 283 3 184 20 2 1 331 2 287 3 40 1 290 2 185 2 89 5 187 1 186 2 298 1 241 1 136 2 92 2 242 2 343 1 93 3 9 1 302 2 95 3 97 6 13 2 256 3 155 2 355 3 198 1 15 3 100 2 51 3 309 1 261 1 103 3 54 2 160 3 360 10 311 10 60 1 109 4 317 1 22 7 29 1 219 1 28 7 272 1 72 1 31 2 113 2 74 7 176 1 35 1 80 1 230 2 179 1 
100 2 181 1 51 2 283 2 184 2 38 1 160 1 360 1 187 1 311 1 104 2 298 1 90 1 241 2 342 1 93 1 211 1 318 1 367 1 219 8 302 2 95 2 272 1 97 4 324 1 12 1 45 1 31 3 72 1 13 2 256 2 35 7 152 1 154 1 355 2 81 1 198 8 15 2 179 1 
83 1 181 1 51 1 183 1 283 1 184 3 287 1 103 1 160 1 89 1 360 1 311 2 298 1 242 1 109 1 93 1 22 1 28 1 95 1 97 2 253 1 113 1 74 1 256 1 304 1 176 1 355 1 15 1 179 1 
318 1 22 1 51 1 184 2 283 1 28 1 95 1 103 1 44 1 97 2 89 1 360 2 74 1 256 1 80 1 242 1 355 1 15 1 
231 1 318 1 22 1 51 1 184 2 283 1 28 1 287 1 95 1 97 2 89 1 113 1 311 2 74 1 256 1 355 1 15 1 109 1 
51 1 183 1 283 1 184 4 287 1 103 1 360 2 89 2 311 2 242 1 109 1 318 1 22 2 28 2 95 1 97 2 113 1 256 1 74 2 80 1 355 1 15 1 
22 1 51 1 184 2 283 1 28 1 95 1 103 1 44 1 97 2 89 1 360 2 74 1 256 1 80 1 154 1 242 1 355 1 15 1 
231 1 22 1 51 1 184 2 283 1 28 1 287 1 95 1 97 2 89 1 113 1 311 2 74 1 256 1 154 1 355 1 15 1 109 1 
51 1 183 1 283 1 184 4 287 1 103 1 360 2 89 2 311 2 242 1 109 1 22 2 28 2 95 1 97 2 113 1 256 1 74 2 80 1 154 1 355 1 15 1 
22 2 51 1 183 1 283 1 184 4 287 1 28 2 95 1 103 1 97 2 113 1 89 2 360 2 311 2 74 2 256 1 80 1 242 1 355 1 15 1 109 1 
100 1 51 1 184 2 283 1 54 1 290 1 160 1 360 1 186 1 187 1 311 1 136 1 241 1 92 1 93 1 219 1 302 1 95 1 97 2 72 1 31 1 13 1 256 1 35 1 355 1 198 1 15 1 230 1 
100 1 51 1 184 2 283 1 160 1 360 1 187 1 311 1 136 1 241 1 92 1 93 1 27 1 219 1 302 1 95 1 97 2 72 1 31 1 13 1 223 1 256 1 35 1 355 1 198 1 15 1 230 1 279 1 
51 1 183 1 283 1 184 4 287 1 103 1 360 2 89 2 311 2 242 1 109 1 22 2 28 2 95 1 97 2 113 1 256 1 74 2 176 1 80 1 355 1 15 1 
100 1 124 1 51 1 183 1 184 4 283 1 287 1 103 1 54 1 290 1 160 1 89 2 360 2 311 2 186 1 136 1 242 1 109 1 93 1 22 2 28 2 219 1 302 1 95 1 97 2 113 1 31 1 13 1 74 2 256 1 35 1 80 1 355 1 198 1 81 1 15 1 230 1 
83 1 181 1 51 1 183 1 283 1 184 3 287 1 103 1 160 1 89 1 360 2 311 1 298 1 242 1 93 1 22 1 28 1 95 1 172 1 97 2 113 1 253 1 256 1 74 1 176 1 80 1 355 1 15 1 179 1 
85 1 51 3 329 1 183 4 283 3 184 32 358 4 287 4 159 3 103 4 129 1 130 1 360 15 89 5 311 17 5 1 163 1 294 1 106 1 134 3 242 4 340 1 109 2 140 1 301 3 246 1 95 3 170 1 97 6 350 2 113 4 224 1 32 1 80 3 278 1 355 3 199 1 
85 1 51 4 329 1 183 4 283 4 184 33 358 4 287 3 159 4 103 4 129 1 130 1 360 17 89 6 311 16 5 1 163 1 294 1 106 1 134 3 242 4 340 1 109 3 140 1 301 3 246 1 95 4 170 1 97 8 350 2 113 3 224 2 32 1 80 3 278 1 355 4 199 1 
51 2 183 6 283 2 184 46 2 1 358 4 287 7 159 3 103 7 40 1 129 2 130 1 360 24 89 12 311 22 5 1 163 1 294 1 60 1 106 1 134 2 242 6 340 1 109 6 343 1 9 1 140 1 301 4 246 1 29 1 95 2 170 1 97 4 350 1 113 6 224 1 351 2 32 1 80 6 278 1 355 2 199 1 
51 2 329 1 183 3 283 2 184 19 358 2 287 3 159 2 103 3 129 1 360 9 89 6 311 10 163 1 5 2 294 1 106 1 134 1 242 3 109 3 301 1 95 2 97 4 350 1 113 3 196 1 32 1 80 3 278 1 355 2 
51 3 183 3 283 3 184 24 287 2 358 2 159 3 103 3 130 1 89 2 360 13 311 11 5 1 163 1 294 2 106 1 134 2 242 3 340 1 109 1 140 1 301 2 246 1 95 3 170 1 97 6 350 2 113 2 224 2 32 1 80 1 278 1 355 3 199 1 
55 1 53 1 228 1 289 1 349 1 249 1 82 1 
50 1 
55 1 226 1 228 1 349 1 249 1 82 1 
269 1 67 1 143 1 249 1 349 1 251 1 55 1 148 1 204 1 58 2 105 1 228 1 316 1 178 1 82 1 
269 1 67 1 143 1 249 1 349 1 251 1 55 1 148 1 204 1 58 2 105 1 228 1 316 1 178 1 82 1 
269 1 67 1 143 1 249 1 349 1 251 1 55 1 148 1 204 1 58 2 105 1 228 1 316 1 178 1 82 1 
96 1 
96 1 
203 1 
203 1 
150 1 237 1 
48 1 50 1 269 1 67 1 141 1 347 1 249 1 349 1 144 1 251 1 55 1 58 1 46 1 228 1 105 1 354 1 82 1 
96 1 
203 1 
100 1 37 1 51 1 283 1 184 2 3 1 160 2 131 1 360 1 187 1 311 1 104 2 93 2 211 1 25 1 219 2 302 1 95 1 97 2 324 1 31 1 72 1 13 1 326 1 256 1 176 1 35 2 355 1 198 2 15 1 179 2 
100 1 213 1 216 1 346 1 219 2 270 1 302 1 173 1 273 1 293 2 296 1 305 1 314 1 90 1 35 2 328 1 198 2 81 1 341 1 
100 1 213 1 216 1 346 1 219 1 302 1 127 1 173 1 293 2 296 1 305 1 314 1 90 1 35 1 328 1 198 1 341 1 
100 1 216 1 18 1 219 1 270 1 302 1 12 1 31 1 13 1 41 1 35 1 241 1 198 1 342 1 
100 1 213 1 216 1 346 1 219 1 270 1 302 1 173 1 273 1 293 2 296 1 305 1 314 1 90 1 35 1 328 1 198 1 341 1 
252 1 
366 1 282 1 68 1 107 1 178 1 6 1 364 1 
202 1 126 1 105 1 240 1 91 1 107 1 364 1 65 1 20 1 269 1 68 1 69 1 73 1 98 1 76 1 327 1 178 2 
0 2 84 2 282 1 183 2 330 2 287 2 238 2 185 2 334 1 291 6 240 4 136 3 91 4 241 1 242 2 6 1 191 2 142 2 302 3 13 3 98 6 198 3 307 2 100 4 202 5 103 2 57 3 361 2 312 6 205 1 362 1 62 1 105 5 107 2 364 9 64 1 365 3 20 4 269 5 219 3 68 8 70 1 111 1 112 2 31 10 113 2 73 4 75 2 76 3 327 12 35 3 178 8 81 1 123 2 
202 1 183 2 330 1 358 1 287 2 103 2 291 5 312 5 105 1 240 2 134 1 91 2 107 1 242 2 340 1 364 7 20 2 269 1 140 1 301 1 246 1 68 4 170 1 113 2 73 2 98 3 76 1 274 1 327 6 178 4 199 1 
257 1 181 1 330 2 287 1 103 2 40 1 160 1 60 1 313 1 105 1 164 1 298 1 240 1 91 1 135 1 364 2 138 1 93 1 343 1 365 1 20 1 269 1 68 2 11 1 171 1 253 1 73 1 179 1 
20 1 282 1 68 1 73 1 240 1 91 1 107 1 178 1 6 1 364 1 
365 1 183 2 330 2 68 5 287 2 103 2 185 1 291 5 113 2 98 5 312 5 327 10 242 2 178 5 364 5 
202 1 269 1 76 1 105 1 107 1 178 1 
100 1 233 1 202 4 205 1 62 2 105 3 240 2 91 2 241 2 364 2 64 2 342 1 20 1 269 3 370 1 219 4 68 2 302 1 348 1 12 1 31 1 255 1 73 2 13 1 76 2 35 4 177 1 198 4 307 2 
100 1 181 2 51 1 184 1 283 1 290 1 54 1 160 3 311 1 187 1 186 1 298 2 241 1 136 1 92 1 138 1 93 3 219 1 302 1 95 1 97 2 253 2 31 1 175 1 13 1 256 1 35 1 355 1 198 1 15 1 230 1 179 2 
20 1 9 1 68 2 291 2 73 1 98 2 312 2 62 1 327 4 240 1 91 1 107 2 178 4 307 1 364 1 
55 1 116 1 349 1 
55 1 116 1 349 1 
55 1 193 1 237 1 349 1 180 1 
55 1 116 1 349 1 
55 1 292 1 349 1 
55 1 292 1 349 1 
55 1 292 1 349 1 
55 1 349 1 
82 1 
51 1 184 8 283 1 2 1 287 1 358 1 103 1 40 1 360 4 89 2 311 4 60 1 134 1 340 1 109 2 343 1 9 1 301 1 29 1 95 1 97 2 278 1 355 1 
51 2 183 1 184 11 283 2 2 1 287 1 358 2 103 2 40 1 129 1 360 6 89 3 311 5 60 1 134 1 242 1 340 1 243 1 109 2 343 1 9 1 301 1 29 1 95 2 97 4 80 1 278 1 355 2 
51 3 183 2 184 13 283 3 358 1 287 2 103 2 360 6 89 2 311 7 134 1 242 2 243 1 340 1 109 1 140 1 301 1 246 1 95 3 170 1 97 6 113 2 224 1 80 1 278 1 355 3 199 1 
51 3 183 2 184 11 283 3 358 1 287 1 103 2 360 7 89 2 311 4 134 1 242 2 243 1 340 1 109 1 140 1 301 1 246 1 95 3 170 1 97 6 113 1 224 1 80 1 278 1 355 3 199 1 
51 1 184 8 283 1 2 1 287 1 358 1 103 1 40 1 360 4 89 2 311 4 60 1 134 1 340 1 109 2 343 1 9 1 301 1 29 1 95 1 97 2 278 1 355 1 
51 1 183 2 184 12 283 1 358 1 287 2 103 2 360 6 89 2 311 6 134 1 242 2 340 1 109 1 140 1 301 1 246 1 95 1 170 1 97 2 113 2 80 1 278 1 355 1 199 1 
51 4 183 2 184 12 283 4 358 1 287 1 103 2 360 7 89 2 311 5 134 1 242 2 340 1 243 1 109 1 140 1 301 1 246 1 95 4 170 1 97 8 113 1 224 2 80 1 278 1 355 4 199 1 
51 4 329 1 183 2 184 12 283 4 358 1 287 1 103 2 360 7 89 4 311 5 134 1 242 2 340 1 109 2 140 1 301 1 246 1 95 4 170 1 97 8 113 1 224 2 80 2 278 1 355 4 199 1 
343 3 184 7 2 1 287 1 29 2 103 1 40 1 89 6 360 3 311 4 60 3 80 3 109 3 
51 4 329 1 183 2 184 12 283 4 358 1 287 1 103 2 360 7 89 2 311 5 134 1 242 2 340 1 109 1 140 1 301 1 246 1 95 4 170 1 97 8 113 1 224 2 80 1 278 1 355 4 199 1 
343 1 51 2 9 1 184 8 283 2 2 1 287 1 29 1 95 2 103 1 40 1 97 4 360 4 89 3 311 4 224 1 60 1 80 1 355 2 109 2 
343 1 366 1 9 1 184 6 2 1 29 1 287 1 103 1 40 1 89 2 360 3 311 3 60 1 109 2 
51 1 183 1 283 1 184 4 287 1 95 1 103 1 97 2 113 1 89 2 360 2 311 2 80 1 242 1 355 1 243 1 109 1 
183 1 184 7 301 1 287 1 358 2 103 1 129 1 113 1 360 3 89 2 311 4 134 1 80 1 242 1 109 1 
51 2 183 2 184 23 283 2 2 1 358 2 287 3 103 3 40 1 129 1 89 9 360 11 311 12 60 2 242 2 109 5 343 2 9 1 301 2 215 1 29 1 95 2 71 1 97 4 113 2 351 1 224 2 80 4 355 2 
311 1 184 1 358 1 
360 1 184 1 301 1 
51 1 183 1 283 1 184 6 287 1 95 1 103 1 185 1 97 2 360 3 89 4 113 1 311 3 80 2 242 1 355 1 243 1 109 2 
51 1 183 2 184 12 283 1 358 1 287 2 103 2 360 6 89 2 311 6 134 1 242 2 340 1 109 1 140 1 301 1 246 1 95 1 170 1 97 2 113 2 80 1 278 1 355 1 199 1 
343 1 184 6 287 1 103 1 40 1 360 3 89 2 311 3 60 1 80 1 109 1 
343 1 51 1 184 3 283 1 2 1 29 1 95 1 71 1 97 2 360 1 89 2 311 2 60 1 224 1 80 1 355 1 109 1 
343 2 51 1 283 1 184 10 287 2 95 1 11 1 103 2 40 1 97 2 89 5 360 5 311 5 60 2 80 2 278 1 355 1 109 3 
51 1 283 1 184 2 95 1 103 1 97 2 360 2 89 1 80 1 278 1 242 1 355 1 
51 1 183 1 283 1 184 4 287 1 95 1 103 1 97 2 113 1 89 2 360 2 311 2 80 1 278 1 242 1 355 1 109 1 
343 1 51 3 329 1 184 3 283 3 95 3 71 1 97 6 89 2 360 1 311 2 224 1 60 1 80 1 278 1 355 3 109 1 
51 5 329 1 183 3 283 5 184 34 2 1 358 4 287 5 103 5 40 2 129 1 360 16 89 12 311 18 60 3 134 1 242 3 243 1 109 7 343 3 26 1 9 1 301 3 29 1 95 5 71 1 97 10 325 1 113 3 224 2 120 1 80 5 278 1 355 5 
160 1 93 1 59 1 77 1 369 1 92 1 179 1 
93 1 49 1 8 1 344 1 369 1 160 1 59 1 77 1 63 1 92 1 308 1 179 1 
100 1 12 1 31 1 366 1 13 1 219 1 35 1 302 1 241 1 198 1 342 1 
100 1 93 2 181 1 219 1 302 1 272 1 160 2 31 1 186 1 13 1 298 1 35 1 136 1 241 1 92 1 198 1 230 1 179 1 
100 1 93 2 257 1 181 1 219 1 302 1 169 1 272 1 160 2 31 3 186 1 361 1 13 2 75 1 275 1 298 2 35 1 136 2 92 1 198 1 230 1 179 2 64 1 
16 1 100 1 257 1 181 1 160 2 361 1 298 2 136 2 92 1 64 1 93 2 27 1 219 2 302 1 169 1 272 1 31 3 13 2 75 1 275 1 35 2 198 2 230 1 179 2 
16 1 100 1 202 1 84 1 57 1 361 1 61 1 105 2 136 1 107 1 241 1 64 1 269 2 321 1 219 3 302 1 31 4 13 1 75 1 35 3 178 1 198 3 123 1 
16 1 100 1 0 1 84 1 202 1 269 2 219 3 302 1 31 4 57 1 13 1 361 1 75 1 105 2 35 3 241 1 107 1 136 1 178 1 198 3 64 1 123 1 
100 1 219 1 35 1 38 1 302 1 198 1 
100 3 211 1 367 1 38 1 219 7 302 2 102 1 111 1 335 1 45 1 31 3 104 1 13 2 151 1 90 1 35 6 241 2 136 1 152 1 81 1 198 7 
100 1 124 1 37 1 181 1 51 2 184 6 283 2 2 1 331 1 287 1 103 1 40 1 290 1 54 1 160 2 360 3 89 2 311 3 186 1 60 1 298 1 136 1 92 2 109 2 343 1 93 2 22 1 9 1 28 1 29 1 219 1 302 1 95 2 272 1 97 4 31 1 13 1 74 1 256 2 176 1 35 1 355 2 15 2 81 1 198 1 230 1 179 1 
0 1 202 2 84 1 282 1 238 1 57 1 205 1 105 3 240 2 107 1 241 1 91 2 6 1 364 1 20 2 269 3 68 1 219 1 142 1 144 1 112 1 31 2 73 2 76 1 35 1 178 1 198 1 123 1 
100 2 38 1 219 2 302 1 111 1 31 2 13 1 362 1 35 2 136 1 81 1 198 2 123 1 
16 1 100 1 219 4 302 1 12 1 31 1 13 1 229 1 35 4 241 1 198 4 81 1 342 1 
100 2 52 1 219 2 302 1 335 1 303 1 31 1 13 1 118 1 151 1 35 2 136 1 198 2 64 1 
100 1 293 1 213 1 296 1 305 1 219 1 35 1 302 1 241 1 198 1 
100 1 211 1 31 1 131 1 13 1 90 1 219 2 35 2 302 1 198 2 81 1 
100 2 211 1 367 1 219 5 302 2 12 1 45 1 31 3 13 2 229 1 35 4 241 1 198 5 81 1 64 1 342 1 
100 2 211 1 367 1 219 5 302 2 12 1 31 3 13 2 117 1 229 1 35 4 241 1 198 5 81 1 64 1 342 1 
100 1 93 2 181 1 219 1 27 1 302 1 272 1 160 2 31 1 13 1 298 1 35 1 136 1 241 1 92 1 198 1 230 1 179 1 
100 2 219 1 302 1 102 1 111 1 335 1 31 1 13 1 151 1 35 1 136 1 198 1 64 1 
160 1 93 1 25 1 326 1 23 1 271 1 332 1 3 1 179 1 
156 1 271 1 247 1 
114 1 23 1 332 1 271 1 92 1 
257 1 84 1 269 2 23 2 345 1 156 1 259 1 271 1 332 2 247 1 169 1 144 1 260 1 114 2 275 1 105 2 107 1 92 1 178 1 
366 1 195 1 264 1 338 1 
232 1 66 1 182 1 195 1 227 1 264 1 338 1 
320 1 47 1 227 1 
281 1 232 1 66 3 182 1 195 1 128 2 227 3 165 1 263 1 264 1 300 1 338 1 
232 1 66 2 182 1 195 1 356 1 79 1 227 2 264 1 338 1 
173 1 210 1 232 1 66 1 293 1 213 1 182 1 227 1 165 1 264 1 207 1 
232 1 66 1 182 1 195 1 227 1 165 1 264 1 
232 1 66 1 182 1 195 2 227 1 165 1 338 1 
139 1 232 2 66 2 182 2 195 1 10 1 227 2 165 1 264 1 7 1 
232 1 210 1 66 3 319 1 182 1 195 1 356 2 254 1 227 3 165 1 264 2 337 1 338 1 
232 1 66 2 182 1 213 1 195 1 356 1 4 1 173 1 293 2 296 1 227 2 165 1 264 1 328 1 338 1 
232 2 210 1 66 4 319 1 182 2 195 1 356 2 227 4 79 1 165 1 315 1 264 2 338 1 
232 1 66 1 182 1 195 1 227 1 165 1 264 1 338 1 
232 1 210 1 66 4 319 1 182 1 195 2 356 2 128 1 227 4 263 1 264 3 265 1 300 1 338 2 
232 1 66 2 182 1 368 1 195 1 356 1 39 1 227 2 165 1 264 1 277 1 338 1 
232 1 66 3 182 1 195 1 128 2 227 3 165 1 263 2 264 1 300 1 338 1 137 1 
174 1 119 1 264 2 276 2 
232 1 222 1 66 1 182 1 227 1 165 1 
232 1 254 1 66 2 182 1 195 1 356 1 227 2 165 1 264 1 338 1 
21 1 
232 1 66 1 182 1 195 1 227 1 165 1 264 1 338 1 
232 1 66 3 182 1 356 1 195 1 128 1 254 1 227 3 165 1 264 1 338 1 
210 1 319 1 264 1 265 1 
195 1 264 1 

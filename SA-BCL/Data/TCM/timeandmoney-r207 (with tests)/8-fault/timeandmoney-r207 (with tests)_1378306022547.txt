#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (53,119) 108 (95,314) (95,314) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (53,119) 108 (95,314) (95,314) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (53,119) 108 (95,314) (95,314) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (53,119) 108 (95,314) (95,314) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 52 222 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 1 249 1 315 1 99 1 309 1 119 1 139 1 42 1 108 1 95 1 314 1 
283 1 249 1 315 1 99 1 309 1 119 1 139 1 42 1 108 1 95 1 314 1 
283 1 249 1 315 1 99 1 309 1 119 1 139 1 42 1 108 1 95 1 314 1 
283 1 249 1 315 1 99 1 309 1 119 1 139 1 42 1 108 1 95 1 314 1 
117 1 309 1 99 1 261 1 160 1 90 1 141 1 249 1 287 1 329 1 315 4 279 1 42 4 31 3 317 2 256 1 292 2 114 3 
283 1 259 1 309 1 99 1 117 1 139 1 160 1 249 1 142 1 329 1 315 2 331 1 279 1 42 2 114 1 200 1 
309 2 99 2 261 1 139 1 249 1 329 1 315 3 53 1 279 1 42 3 31 1 317 1 114 2 
117 1 309 2 99 2 261 3 139 1 160 1 153 1 141 1 90 1 249 1 287 1 329 1 315 9 109 1 53 1 279 1 42 9 31 7 317 4 113 1 358 1 256 1 292 2 114 5 
117 1 309 2 99 2 261 3 139 1 160 1 153 1 141 1 90 1 249 1 287 1 329 1 315 9 109 1 53 1 279 1 42 9 31 7 317 4 113 1 358 1 256 1 292 2 114 5 
15 1 17 1 174 1 
15 1 324 2 129 1 
7 2 19 2 102 2 76 2 310 1 87 1 277 2 242 2 
212 1 83 1 106 1 3 2 84 1 310 1 87 1 276 1 248 1 277 3 132 1 89 1 152 2 7 3 135 1 172 1 171 1 281 2 346 1 300 2 115 1 14 2 116 1 323 1 102 2 16 1 158 1 76 2 78 1 163 1 19 2 64 1 240 1 105 1 189 1 242 2 165 1 
7 1 40 1 19 1 102 1 4 1 76 1 310 1 304 1 277 1 242 1 
15 1 47 1 244 1 190 1 17 1 4 1 277 1 181 1 7 1 19 1 79 1 104 1 208 1 65 1 
15 1 47 1 244 2 190 1 102 1 17 1 76 1 4 1 277 1 181 2 7 1 19 1 104 1 242 1 65 1 
343 1 244 1 290 1 12 1 181 1 
343 1 15 1 244 2 17 1 12 1 210 1 56 1 181 2 
244 1 12 1 181 1 
244 1 102 1 4 1 310 1 76 1 275 1 181 1 277 1 7 1 343 1 40 1 19 1 304 1 242 1 
15 1 
343 1 15 1 244 2 17 1 12 1 210 1 181 2 220 1 
66 1 201 1 231 1 15 1 244 5 214 1 24 1 180 1 17 1 26 2 161 1 181 5 342 2 250 2 343 2 303 1 94 1 210 1 12 2 
87 1 174 1 
102 1 234 1 76 1 87 2 277 2 7 2 19 2 318 1 242 1 
184 1 260 1 140 1 
14 1 83 1 16 1 87 1 277 1 152 1 132 1 7 1 163 1 135 1 64 1 171 1 188 1 240 1 281 1 189 1 
77 1 7 3 19 3 102 1 76 3 87 1 277 3 242 3 
7 1 40 1 19 1 4 1 76 1 277 1 242 1 
7 1 19 1 102 1 4 1 76 1 234 1 318 1 277 1 242 1 
212 1 83 1 47 1 244 1 3 2 190 1 84 1 4 1 310 1 87 1 276 1 248 1 277 4 132 1 152 1 7 4 135 1 172 1 171 1 281 1 346 1 282 1 300 1 115 1 14 1 323 1 102 2 16 1 234 1 76 3 181 1 78 1 77 1 163 1 64 1 19 3 41 1 104 1 240 1 189 1 164 1 242 3 65 1 165 1 
77 1 7 2 51 1 19 2 76 1 87 1 208 1 277 2 242 1 
15 1 47 1 244 1 190 1 102 1 234 1 4 1 76 3 181 1 277 3 77 2 7 3 91 1 19 3 41 1 104 1 164 1 242 3 65 1 
102 1 234 1 76 2 140 1 277 2 77 1 184 1 7 2 19 2 242 2 
14 1 83 1 16 1 87 1 277 1 152 1 132 1 7 1 163 1 135 1 64 1 171 1 240 1 281 1 189 1 
14 1 83 1 339 1 16 1 87 1 277 1 152 1 295 1 132 1 7 1 163 1 135 1 171 1 240 1 281 1 
149 1 212 1 337 1 3 2 84 1 248 1 296 1 169 1 172 1 346 2 300 4 115 1 177 1 260 2 301 1 302 1 158 2 140 2 353 1 162 1 183 1 184 2 238 1 165 1 
7 1 19 1 263 1 4 1 76 1 277 1 65 1 242 1 
14 1 83 1 16 1 140 1 76 1 277 2 132 1 152 1 77 1 163 1 7 2 135 1 19 1 64 1 171 1 240 1 281 1 189 1 164 1 242 1 
102 1 76 4 234 1 59 1 87 1 277 5 77 2 7 5 51 1 19 5 208 1 164 1 242 4 72 1 
7 2 40 1 19 2 263 1 4 1 76 2 277 2 242 2 
338 1 347 1 
338 1 347 1 
156 1 10 1 
156 1 10 1 
156 1 10 1 
338 1 159 1 347 1 
338 1 224 1 347 1 
156 1 239 1 338 2 246 1 10 1 347 2 
338 1 159 1 347 1 
338 1 159 1 347 1 
338 1 356 1 347 1 
338 1 356 1 347 1 
338 1 356 1 347 1 
257 1 13 2 15 1 33 1 338 2 244 2 193 1 131 2 294 1 25 2 121 1 181 2 28 3 288 1 239 1 270 2 198 1 347 2 155 2 
338 1 244 1 215 1 49 1 87 1 131 1 277 2 167 1 28 1 7 2 224 1 9 1 228 1 198 1 112 1 155 1 347 1 13 1 233 1 76 2 181 1 19 2 270 1 242 2 
287 1 117 1 160 1 
117 1 331 1 160 1 
75 1 287 2 101 1 331 1 160 3 123 1 
287 1 101 1 331 1 235 1 160 2 123 1 
287 1 101 1 331 1 160 2 123 2 
45 1 244 5 214 1 215 1 24 3 311 1 26 1 50 1 342 1 250 1 343 4 296 1 169 1 223 2 9 1 112 1 12 1 199 1 15 2 301 1 284 2 302 1 324 3 17 1 161 2 61 1 181 5 205 1 18 1 186 2 129 1 210 1 
66 1 45 2 67 1 244 9 214 1 24 8 26 2 50 2 342 2 250 2 343 7 296 3 169 3 9 4 12 6 199 1 15 5 178 1 301 3 284 6 302 3 324 9 17 1 161 6 61 3 181 9 143 1 355 1 186 6 187 5 267 1 333 1 129 3 290 5 210 1 
66 1 45 1 244 3 24 3 311 1 26 1 50 1 342 1 250 1 343 2 169 1 296 1 223 1 9 1 15 3 301 1 284 2 302 1 324 4 17 1 181 3 61 1 161 2 18 1 186 2 129 2 
66 1 45 1 244 4 24 5 311 1 26 1 50 1 342 1 250 1 343 3 169 2 296 2 223 2 9 2 15 4 301 2 284 4 302 2 324 7 17 1 181 4 61 2 161 4 18 1 355 1 186 4 267 1 333 1 129 3 
92 1 16 1 174 1 
52 1 16 1 
60 1 
171 1 16 1 
92 2 126 1 171 1 16 3 320 1 132 1 
171 1 16 1 132 1 
16 1 146 1 
32 1 300 6 149 2 301 1 107 1 216 1 158 3 353 1 286 1 182 1 221 1 30 1 296 1 316 1 319 1 305 1 346 3 
32 1 300 6 149 2 301 1 107 1 216 1 158 3 353 1 286 1 182 1 221 1 30 1 296 1 316 1 319 1 305 1 346 3 
32 1 300 6 149 2 301 1 107 1 216 1 158 3 353 1 286 1 182 1 221 1 30 1 296 1 316 1 319 1 305 1 255 1 346 3 
0 3 308 1 149 9 212 1 107 1 3 2 216 2 248 1 221 1 30 5 8 1 169 3 296 4 316 2 172 1 280 1 319 1 297 1 346 15 111 1 32 2 300 30 98 1 301 4 350 4 302 3 158 15 353 4 61 3 286 1 182 2 335 1 305 2 165 1 
32 1 300 8 98 1 149 3 212 2 301 1 3 4 216 1 158 4 353 2 248 2 286 1 182 1 221 1 30 1 296 1 316 1 127 1 172 2 144 1 319 1 305 1 346 4 165 2 
306 1 1 1 309 1 86 1 341 1 152 1 249 1 135 1 315 2 279 1 31 1 55 1 281 1 114 1 14 1 75 1 322 1 157 1 117 1 99 1 139 1 179 1 160 2 266 1 163 1 287 1 329 1 328 1 331 1 42 2 
82 1 1 1 309 1 86 1 341 1 152 1 135 1 315 3 279 1 31 2 55 1 281 1 114 1 75 1 14 1 322 1 157 1 117 1 99 1 139 1 160 2 266 1 37 1 354 1 163 1 287 1 329 1 328 1 331 1 42 3 
1 1 86 1 152 1 135 1 315 2 279 1 31 2 281 1 114 1 14 1 75 1 322 1 157 1 117 1 139 1 160 2 266 1 37 1 354 1 163 1 287 1 329 1 328 1 331 1 42 2 
82 1 309 1 273 1 86 2 218 1 152 1 134 1 252 1 135 1 315 1 171 1 281 1 14 1 322 2 99 1 139 2 16 1 266 2 163 1 236 1 240 1 42 1 211 1 
306 1 1 1 309 1 86 1 341 1 152 1 249 1 135 1 315 1 55 1 281 1 14 1 75 1 322 1 157 1 117 1 99 1 139 1 160 2 266 1 37 1 163 1 287 1 328 1 331 1 42 1 
6 1 
68 1 244 2 214 1 340 1 24 1 26 1 50 1 152 2 342 1 250 1 252 1 135 1 171 1 281 2 12 2 14 2 16 1 181 2 161 1 38 1 163 1 330 1 289 1 240 2 210 1 211 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 2 12 1 210 1 181 2 220 1 
38 1 250 1 330 1 244 1 214 1 26 1 181 1 342 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 1 181 1 
38 1 330 1 244 1 181 1 
38 1 250 1 330 1 244 1 214 1 26 1 181 1 342 1 
300 5 32 1 115 1 149 1 212 1 301 1 3 2 84 1 158 2 87 2 353 1 248 1 286 1 183 1 221 1 296 1 316 1 172 1 174 1 319 1 346 3 165 1 
0 3 149 2 308 1 212 2 3 4 191 1 84 1 87 1 248 2 251 1 30 1 8 1 169 2 296 2 172 2 173 1 229 1 346 6 300 14 115 2 260 11 301 1 350 3 302 1 140 11 158 8 353 1 61 2 78 1 184 4 128 1 105 1 165 2 
212 1 83 1 3 2 84 1 87 1 248 1 277 2 132 1 152 1 7 2 135 1 170 1 171 1 172 1 281 1 346 1 300 2 14 1 115 1 351 1 16 1 76 1 158 1 184 1 77 1 78 1 163 1 207 1 64 1 19 1 240 1 188 1 128 1 105 1 189 1 164 1 242 1 165 1 
212 3 83 2 3 6 84 3 87 2 277 3 132 2 221 1 7 3 135 2 169 2 316 1 172 3 171 2 319 1 226 1 281 3 230 2 14 3 97 2 323 2 16 2 140 6 61 2 286 1 184 6 19 1 64 2 240 1 145 1 105 1 189 2 242 1 149 7 245 1 248 3 152 3 30 4 296 3 346 10 32 1 300 19 115 3 74 2 260 6 301 3 302 2 76 1 158 9 353 3 37 1 78 1 77 1 206 2 163 2 128 1 164 1 165 3 
23 1 212 2 3 4 2 1 84 2 48 1 313 1 277 1 248 2 152 7 7 1 252 1 135 2 172 2 171 2 281 8 346 1 321 1 300 2 14 8 115 2 116 2 179 1 16 3 76 1 35 1 158 1 37 1 122 1 183 1 77 1 78 1 163 2 19 1 240 2 105 1 211 1 242 1 165 2 
149 1 293 1 212 1 3 2 84 1 248 1 277 1 7 1 169 1 296 1 172 1 346 2 300 3 115 1 260 1 301 1 102 1 302 1 140 1 76 1 234 1 158 1 353 1 61 1 184 1 19 1 128 1 242 1 165 1 
300 2 115 1 149 1 260 1 212 1 337 1 3 2 84 1 140 1 158 2 248 1 183 1 184 1 30 1 169 1 296 1 172 1 165 1 
300 2 115 1 149 1 260 1 212 1 301 1 3 2 84 1 302 1 140 1 353 1 248 1 183 1 184 1 238 1 172 1 346 2 165 1 
149 2 212 1 3 2 84 1 248 1 30 1 296 1 169 1 172 1 346 2 300 4 115 1 260 2 301 1 302 1 158 2 140 2 353 1 61 1 183 1 184 2 165 1 
300 2 115 1 149 1 260 1 212 1 337 1 2 1 3 2 84 1 140 1 158 2 248 1 184 1 30 1 169 1 296 1 172 1 165 1 
300 2 115 1 149 1 260 1 212 1 301 1 2 1 3 2 84 1 302 1 140 1 353 1 248 1 184 1 238 1 172 1 346 2 165 1 
149 2 212 1 3 2 2 1 84 1 248 1 30 1 296 1 169 1 172 1 346 2 300 4 115 1 260 2 301 1 302 1 158 2 140 2 353 1 61 1 184 2 165 1 
149 2 212 1 3 2 84 1 248 1 30 1 296 1 169 1 172 1 346 2 300 4 115 1 260 2 301 1 302 1 158 2 140 2 353 1 61 1 184 2 165 1 
212 1 83 1 3 2 84 1 87 1 277 1 248 1 132 1 152 1 7 1 135 1 171 1 172 1 281 1 346 1 300 2 14 1 115 1 323 1 16 1 158 1 78 1 163 1 64 1 240 1 105 1 189 1 165 1 
212 1 83 1 339 1 3 2 84 1 87 1 277 1 248 1 132 1 295 1 152 1 7 1 135 1 171 1 225 1 172 1 281 1 346 1 300 2 14 1 115 1 16 1 158 1 78 1 163 1 240 1 105 1 165 1 
149 2 212 1 3 2 84 1 248 1 30 1 296 1 169 1 172 1 346 2 300 4 115 1 260 2 301 1 302 1 158 2 140 2 353 1 61 1 184 2 128 1 165 1 
149 2 212 1 83 1 3 2 84 1 277 1 248 1 132 1 152 1 7 1 135 1 30 1 296 1 169 1 171 1 172 1 281 1 346 2 300 4 74 1 14 1 115 1 260 2 323 1 301 1 302 1 179 1 16 1 140 2 158 2 353 1 61 1 184 2 163 1 64 1 189 1 165 1 
149 1 212 1 3 2 84 1 248 1 277 1 7 1 30 1 169 1 296 1 172 1 54 1 346 1 300 3 115 1 260 1 301 1 102 1 302 1 76 1 234 1 158 2 140 1 61 1 184 1 19 1 128 1 242 1 165 1 
0 3 46 1 308 1 149 8 243 1 212 3 3 6 130 1 192 4 248 3 221 1 278 1 30 4 8 3 169 4 296 5 316 1 172 3 319 1 227 1 197 2 175 1 298 1 346 22 299 1 32 1 300 41 98 1 100 1 301 5 34 1 350 4 352 1 302 4 158 19 353 4 36 1 61 4 286 1 144 1 21 1 165 3 
0 3 46 1 308 1 149 7 243 1 212 4 3 8 130 1 192 4 248 4 221 1 278 1 30 3 8 3 169 4 296 5 316 1 172 4 319 1 227 1 197 2 175 1 298 1 346 19 299 1 32 1 300 38 98 2 100 1 301 4 34 1 350 4 352 1 302 3 158 19 353 4 36 1 61 4 286 1 144 1 21 1 165 4 
0 4 46 1 308 2 149 14 212 2 3 4 191 2 130 1 192 4 248 2 221 1 278 1 30 7 8 2 169 7 296 8 316 1 172 2 319 1 227 1 197 1 175 1 298 1 346 26 299 1 32 1 300 52 98 1 100 1 301 8 350 4 352 1 302 7 158 26 353 7 36 1 61 7 286 1 144 1 21 1 165 2 
0 1 308 1 149 6 212 2 3 4 130 1 192 2 248 2 30 3 8 1 169 3 296 3 172 2 197 1 298 1 346 10 299 2 300 19 138 1 301 3 34 1 350 2 302 3 158 9 353 3 36 1 61 3 144 1 21 1 165 2 
0 2 46 1 149 4 212 3 3 6 130 1 192 4 248 3 278 1 30 2 8 2 169 3 296 3 172 3 197 2 227 1 175 1 346 12 298 2 299 1 300 26 98 2 301 2 100 1 350 2 352 1 302 2 158 14 353 2 36 1 61 3 144 1 21 1 165 3 
13 1 349 1 239 1 33 1 338 1 193 1 131 1 270 1 155 1 347 1 
224 1 228 1 
13 1 232 1 57 1 338 1 268 1 131 1 270 1 155 1 347 1 
257 1 13 1 15 1 33 1 244 1 338 1 193 1 131 1 294 1 25 1 121 1 181 1 28 2 239 1 198 1 270 1 347 1 155 1 
257 1 13 1 15 1 33 1 244 1 338 1 193 1 131 1 294 1 25 1 121 1 181 1 28 2 239 1 198 1 270 1 347 1 155 1 
257 1 13 1 15 1 33 1 244 1 338 1 193 1 131 1 294 1 25 1 121 1 181 1 28 2 239 1 198 1 270 1 347 1 155 1 
246 1 264 1 159 1 
246 1 264 1 159 1 
253 1 356 1 
253 1 246 1 356 1 
233 1 167 1 
244 1 338 1 215 1 49 1 87 1 25 1 294 1 131 1 277 2 167 1 7 2 28 1 343 1 224 1 9 1 228 1 112 1 155 1 347 1 13 1 233 1 76 2 181 1 19 2 270 1 242 2 81 1 
264 1 159 1 
253 1 246 1 356 1 
212 1 3 2 84 1 85 1 248 1 277 2 152 2 7 2 135 1 137 1 171 1 172 1 70 1 281 2 110 1 346 1 300 2 14 2 115 1 116 2 16 1 35 1 158 1 122 1 78 1 163 1 19 2 128 1 147 1 105 1 165 1 
75 1 14 2 1 1 157 1 117 1 179 1 341 1 326 1 160 2 37 1 152 2 266 1 163 1 287 1 135 1 194 1 331 1 196 1 281 2 
75 1 14 1 1 1 157 1 117 1 341 1 160 2 37 1 152 1 266 1 163 1 287 1 135 1 331 1 136 1 196 1 281 1 
14 1 272 1 273 1 16 1 326 1 152 1 266 1 163 1 252 1 135 1 171 1 240 1 281 1 211 1 
75 1 14 1 1 1 157 1 117 1 341 1 326 1 160 2 37 1 152 1 266 1 163 1 287 1 135 1 194 1 331 1 196 1 281 1 
62 1 
201 1 15 1 24 1 17 1 94 1 174 1 161 1 
244 1 214 1 24 1 26 1 342 1 250 1 12 1 15 2 325 1 324 1 17 1 161 1 181 1 39 1 125 1 129 1 210 1 
14 1 214 1 16 1 26 1 132 1 152 1 342 1 250 1 163 1 135 1 222 1 52 1 126 1 171 1 240 1 281 1 334 1 
0 1 336 1 46 1 244 1 340 1 214 2 24 8 26 2 50 1 342 2 250 2 8 1 169 2 296 2 71 1 227 1 175 1 12 1 15 5 284 5 100 1 301 2 350 1 352 1 302 2 324 6 17 2 181 1 161 5 61 2 186 5 80 2 129 3 209 1 210 1 
244 1 214 1 150 1 24 2 4 1 310 1 275 1 26 1 277 1 342 1 250 1 7 1 296 2 316 1 32 1 301 1 102 1 76 1 181 1 161 2 286 1 40 1 19 1 80 2 304 1 269 1 209 1 242 1 
201 1 15 1 214 1 24 1 17 1 26 1 161 1 342 1 250 1 94 1 
15 2 284 2 301 1 302 1 324 4 24 2 61 1 161 2 169 1 296 1 186 2 129 2 
15 1 244 1 17 1 181 1 12 1 210 1 
22 1 66 1 213 1 68 1 244 3 214 1 340 2 151 1 24 2 26 2 50 2 152 4 342 2 250 2 252 1 135 1 171 1 281 4 12 4 73 2 14 4 16 1 161 2 181 3 163 1 289 1 240 2 210 2 211 1 
212 1 83 1 3 2 84 1 310 1 87 1 276 1 277 3 248 1 152 1 132 1 7 3 135 1 172 1 171 1 281 1 346 1 300 1 14 1 115 1 323 1 102 2 16 1 76 2 78 1 163 1 19 2 64 1 240 1 189 1 242 2 165 1 
15 2 284 1 214 1 340 1 324 2 24 1 17 1 26 1 161 1 50 1 342 1 250 1 129 1 
168 1 270 1 155 1 
233 1 203 1 193 1 270 1 155 1 
168 1 270 1 155 1 
168 1 270 1 155 1 
154 1 270 1 155 1 
154 1 270 1 155 1 
154 1 270 1 155 1 
270 1 155 1 
338 1 347 1 
0 1 149 1 212 1 3 2 248 1 221 1 296 1 8 1 316 1 172 1 319 1 346 4 300 7 32 1 301 1 350 1 352 1 158 3 353 1 286 1 144 1 165 1 
0 1 308 1 149 2 212 2 3 4 248 2 221 1 30 1 8 1 169 1 296 2 316 1 172 2 319 1 346 5 32 1 300 10 301 1 350 2 352 1 158 5 353 1 61 1 286 1 144 1 291 1 165 2 
0 1 149 3 46 1 212 3 3 6 248 3 221 1 30 1 8 1 169 2 296 3 316 1 172 3 319 1 227 1 175 1 346 10 32 1 300 18 98 1 100 1 301 3 350 1 352 1 302 2 158 8 353 2 61 2 286 1 144 1 291 1 165 3 
0 1 149 4 46 1 212 3 3 6 248 3 221 1 30 2 8 1 169 2 296 3 316 1 172 3 319 1 227 1 175 1 346 7 32 1 300 16 98 1 100 1 301 2 350 1 352 1 302 1 158 9 353 2 61 2 286 1 144 1 291 1 165 3 
0 1 149 1 212 1 3 2 248 1 221 1 296 1 8 1 316 1 172 1 319 1 346 4 300 7 32 1 301 1 350 1 352 1 158 3 353 1 286 1 144 1 165 1 
0 1 149 2 46 1 212 1 3 2 248 1 30 1 8 1 169 2 296 2 172 1 227 1 175 1 346 6 300 12 100 1 301 2 350 1 352 1 302 2 158 6 353 1 61 2 144 1 165 1 
0 1 46 1 149 4 212 4 3 8 248 4 221 1 30 2 8 1 169 2 296 3 316 1 172 4 319 1 227 1 175 1 346 8 32 1 300 17 98 2 100 1 301 2 350 1 352 1 302 1 158 9 353 2 61 2 286 1 144 1 291 1 165 4 
0 1 46 1 149 6 212 4 3 8 248 4 30 3 8 1 169 3 296 3 172 4 227 1 175 1 346 7 300 16 98 2 100 1 301 2 34 1 350 1 352 1 302 2 158 9 353 3 61 3 144 1 165 4 
300 10 32 4 149 9 301 2 158 5 353 5 182 1 286 2 221 1 30 4 296 2 316 4 269 1 319 1 346 5 
0 1 46 1 149 3 212 4 3 8 248 4 221 1 30 1 8 1 169 2 296 3 316 1 172 4 319 1 227 1 175 1 346 8 32 1 300 17 98 2 100 1 301 2 34 1 350 1 352 1 302 1 158 9 353 2 61 2 286 1 144 1 165 4 
300 7 32 1 149 2 98 1 212 2 301 1 3 4 158 3 353 1 248 2 286 1 221 1 30 1 296 1 316 1 172 2 319 1 346 4 165 2 
300 5 32 1 221 1 149 1 301 1 296 1 316 1 158 2 319 1 174 1 353 1 346 3 286 1 
300 4 149 2 212 1 301 1 3 2 302 1 158 2 353 1 248 1 61 1 30 1 169 1 296 1 172 1 346 2 291 1 165 1 
300 7 0 1 308 1 149 2 301 1 350 2 302 1 158 3 353 1 61 1 30 1 8 1 169 1 296 1 346 4 
0 2 149 8 308 1 212 2 3 4 191 1 248 2 221 1 30 4 296 3 169 2 316 2 172 2 173 1 319 1 346 12 32 2 300 22 98 2 301 3 350 2 302 2 158 10 353 4 61 2 285 1 286 1 165 2 
300 1 350 1 346 1 
300 1 0 1 158 1 
230 1 300 6 149 3 212 1 301 1 3 2 302 1 158 3 353 2 248 1 61 1 30 1 169 1 296 1 172 1 346 3 291 1 165 1 
0 1 149 2 46 1 212 1 3 2 248 1 30 1 8 1 169 2 296 2 172 1 227 1 175 1 346 6 300 12 100 1 301 2 350 1 352 1 302 2 158 6 353 1 61 2 144 1 165 1 
300 6 32 1 149 2 301 1 158 3 353 1 286 1 30 1 296 1 316 1 346 3 
32 1 300 3 149 2 98 1 212 1 3 2 158 1 353 1 285 1 248 1 221 1 30 1 316 1 172 1 319 1 346 2 165 1 
32 2 300 10 149 5 212 1 301 2 3 2 158 5 353 3 248 1 286 1 30 2 296 2 316 2 172 1 144 1 269 1 346 5 165 1 
300 2 149 1 212 1 3 2 158 2 248 1 30 1 169 1 296 1 172 1 144 1 165 1 
300 4 149 2 212 1 301 1 3 2 302 1 158 2 353 1 248 1 61 1 30 1 169 1 296 1 172 1 144 1 346 2 165 1 
300 3 32 1 98 1 149 2 212 3 34 1 3 6 158 1 353 1 285 1 248 3 30 1 316 1 172 3 144 1 346 2 165 3 
0 3 308 1 149 11 212 5 3 10 248 5 221 1 30 5 8 1 169 3 296 5 316 3 172 5 280 1 319 1 111 1 346 18 32 3 300 33 98 2 301 5 34 1 350 4 302 3 158 15 353 6 285 1 61 3 286 2 144 1 335 1 291 1 165 5 
7 1 29 1 51 1 19 1 87 1 208 1 277 1 
307 1 96 1 217 1 87 1 204 1 277 1 133 1 7 1 29 1 51 1 19 1 208 1 
163 1 252 1 14 1 135 1 171 1 16 1 240 1 174 1 281 1 211 1 152 1 
14 1 83 1 16 1 76 1 87 1 277 2 132 1 152 1 77 1 7 2 163 1 135 1 19 1 171 1 240 1 281 1 189 1 242 1 
73 1 14 1 47 1 83 1 16 3 4 1 76 1 87 1 277 2 132 2 152 1 77 1 7 2 163 1 135 1 19 2 171 2 146 1 281 1 189 1 65 1 242 2 176 1 
73 1 14 2 258 1 47 1 83 1 339 1 16 3 4 1 76 1 87 1 277 2 132 2 152 2 77 1 7 2 163 1 135 1 19 2 171 2 146 1 281 2 65 1 242 2 176 1 
166 1 244 2 4 1 310 1 275 1 277 1 152 2 132 1 7 1 135 1 92 1 52 1 171 1 344 1 281 2 12 1 176 1 73 1 14 2 15 1 102 1 16 4 76 1 17 1 181 2 163 1 40 1 19 1 240 1 104 1 304 1 146 1 242 1 
73 1 14 3 258 1 15 1 244 2 16 4 17 1 274 1 181 2 132 1 152 3 163 1 135 1 52 1 92 1 171 1 240 1 104 1 146 1 281 3 12 1 176 1 
163 1 14 1 135 1 23 1 281 1 152 1 
321 1 14 7 23 1 116 1 48 1 179 1 16 3 202 1 313 1 37 1 152 6 132 1 122 1 124 1 163 2 135 3 126 1 171 2 240 2 281 7 44 1 
149 1 212 2 83 1 3 4 84 2 87 2 248 2 277 2 132 1 152 1 221 1 7 2 135 1 296 1 316 1 171 1 172 2 319 1 110 1 281 1 346 3 300 5 32 1 115 2 14 1 74 1 323 1 301 1 16 1 179 1 158 2 76 1 353 1 286 1 77 1 206 1 163 1 19 1 64 1 128 1 189 1 242 1 165 2 
213 1 244 3 214 2 24 1 274 1 26 2 152 1 342 2 250 2 343 1 52 1 92 1 195 1 94 1 281 1 12 2 14 1 201 1 15 1 16 2 17 1 161 1 181 3 332 1 240 1 104 1 148 1 210 1 
14 1 23 1 16 1 60 1 152 1 132 1 163 1 135 1 92 1 126 1 171 1 281 1 334 1 
14 4 258 1 179 1 16 1 152 4 252 1 163 1 63 1 135 1 171 1 240 1 281 4 211 1 
73 1 14 2 16 1 202 1 152 2 132 1 124 1 163 1 135 2 171 1 93 1 345 1 145 1 281 2 
163 1 14 1 135 1 1 1 117 1 331 1 240 1 281 1 160 1 152 1 
14 2 179 1 16 1 152 2 37 1 122 1 163 1 135 1 137 1 171 1 281 2 
73 1 321 1 14 5 179 1 16 3 313 1 152 4 122 1 252 1 163 2 63 1 135 2 171 2 240 1 281 5 211 1 
73 1 321 1 14 5 179 1 16 3 69 1 152 4 122 1 252 1 163 2 63 1 135 2 171 2 240 1 281 5 211 1 
14 1 83 1 339 1 16 1 76 1 87 1 277 2 132 1 152 1 77 1 7 2 163 1 135 1 19 1 171 1 240 1 281 1 242 1 
73 1 14 1 16 1 202 1 152 1 132 1 124 1 163 1 135 2 126 1 171 1 281 1 44 1 
7 1 185 1 19 1 70 1 85 1 147 1 254 1 277 1 5 1 
58 1 219 1 254 1 
271 1 185 1 87 1 254 1 5 1 
271 2 15 1 47 1 244 2 58 1 190 1 17 1 4 1 247 1 87 1 219 1 181 2 5 2 343 1 185 2 41 1 104 1 254 1 65 1 
329 1 279 1 174 1 114 1 
329 1 315 1 99 1 309 1 279 1 42 1 114 1 
322 1 139 1 42 1 
348 1 309 1 99 1 262 1 249 1 27 1 329 1 315 3 279 1 42 3 114 1 200 2 
329 1 315 2 99 1 309 1 279 1 31 1 42 2 114 1 292 1 
309 1 99 1 117 1 160 1 141 1 249 1 287 1 315 1 42 1 317 1 114 1 
249 1 329 1 315 1 99 1 309 1 42 1 114 1 
249 1 329 2 315 1 99 1 309 1 279 1 42 1 
249 1 237 1 329 1 315 2 99 2 309 2 120 1 42 2 88 1 114 1 
309 1 99 1 261 1 249 1 329 1 315 3 279 1 42 3 31 2 317 1 358 1 113 1 114 2 
75 1 309 1 99 1 117 1 160 2 249 1 287 1 329 1 315 2 331 1 279 1 42 2 31 1 241 1 114 1 
309 2 99 2 261 1 249 1 329 1 315 4 279 1 42 4 31 2 317 1 256 1 292 1 114 2 
249 1 329 1 315 1 99 1 309 1 279 1 42 1 114 1 
348 1 309 1 99 1 262 1 261 1 327 1 329 2 315 4 279 2 31 2 42 4 317 1 200 1 114 3 
309 1 99 1 249 1 329 1 315 2 109 1 103 1 279 1 42 2 31 1 11 1 114 1 
348 1 309 1 99 1 262 2 249 1 329 1 315 3 279 1 42 3 357 1 114 1 200 2 
118 1 43 1 20 2 114 2 
249 1 315 1 99 1 309 1 42 1 312 1 
249 1 329 1 315 2 99 1 309 1 279 1 31 1 42 2 113 1 114 1 
265 1 
249 1 329 1 315 1 99 1 309 1 279 1 42 1 114 1 
309 1 99 1 249 1 329 1 315 3 279 1 31 1 42 3 113 1 200 1 114 1 
327 1 261 1 317 1 114 1 
329 1 114 1 

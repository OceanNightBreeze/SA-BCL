#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 (49,160) (49,160) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 (49,160) (49,160) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 (49,160) (49,160) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 (49,160) (49,160) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 296 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 345 296 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (148,192) 108 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (148,192) 108 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (148,192) (148,192) 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (148,192) (148,192) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (182,279,306,379) (182,279,306,379) 170 241 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
141 1 236 1 202 1 224 1 279 1 340 1 321 1 267 1 35 1 219 1 158 1 182 1 306 1 185 1 197 1 
258 1 141 1 150 1 224 1 279 3 340 1 147 1 158 3 379 1 182 2 306 2 184 2 197 1 
258 1 160 1 150 2 345 1 236 1 202 1 189 1 153 1 279 7 340 1 137 1 266 1 351 1 341 1 267 1 147 2 379 4 158 6 182 2 184 2 306 2 170 1 49 1 197 2 
258 1 160 1 150 2 345 1 236 1 202 1 189 1 153 1 279 7 340 1 137 1 266 1 351 1 341 1 267 1 147 2 379 4 158 6 182 2 184 2 306 2 170 1 49 1 197 2 
258 1 160 1 150 2 345 1 236 1 202 1 189 1 153 1 279 7 340 1 137 1 266 1 351 1 341 1 267 1 147 2 379 4 158 6 182 2 184 2 306 2 170 1 49 1 197 2 
258 1 160 1 150 2 345 1 236 1 202 1 189 1 153 1 279 7 340 1 137 1 266 1 351 1 341 1 267 1 147 2 379 4 158 6 182 2 184 2 306 2 170 1 49 1 197 2 
279 2 340 1 345 1 379 1 158 1 182 1 306 1 170 1 
258 1 150 2 345 1 178 1 279 7 340 1 137 1 266 1 296 1 147 2 158 6 379 5 182 2 184 2 306 2 170 1 197 1 
258 1 150 2 345 1 178 1 279 7 340 1 137 1 266 1 296 1 147 2 158 6 379 5 182 2 184 2 306 2 170 1 197 1 
63 2 238 1 102 1 
39 2 87 1 349 2 275 1 163 2 271 2 335 2 50 2 
39 3 142 1 121 1 213 1 41 1 239 1 359 2 313 1 291 1 21 1 163 2 70 1 104 2 191 2 318 1 145 1 196 1 324 1 271 2 27 2 50 2 222 1 75 1 275 1 276 2 223 1 303 1 11 1 31 1 335 3 227 1 87 1 349 2 138 1 15 1 181 1 139 1 
39 1 44 1 349 1 275 1 325 1 163 1 271 1 335 1 129 1 50 1 
39 1 29 1 302 1 162 1 304 1 80 1 163 1 335 1 82 1 129 1 102 1 342 1 92 1 247 1 
39 1 29 1 162 2 80 2 304 1 163 1 335 1 82 1 129 1 102 1 349 1 271 1 92 1 50 1 247 1 
34 1 162 1 80 1 244 1 220 1 
39 1 232 1 162 1 275 1 80 1 163 1 335 1 129 1 44 1 349 1 325 1 271 1 220 1 50 1 
102 1 
5 1 34 1 162 2 112 1 80 2 220 1 92 1 102 1 
162 5 186 1 112 1 80 5 114 1 100 1 190 1 102 1 375 1 338 2 167 1 34 2 350 1 327 1 380 2 220 2 140 2 92 1 106 1 
125 1 92 1 102 1 
34 1 162 2 112 1 80 2 220 1 92 1 102 1 24 1 
34 1 162 1 80 1 
39 2 54 1 201 1 163 2 335 2 87 2 349 1 271 1 50 1 
86 1 176 1 173 1 
39 1 222 1 121 1 276 1 239 1 303 1 359 1 11 1 291 1 335 1 70 1 144 1 104 1 87 1 324 1 181 1 
87 1 125 1 
222 1 39 2 121 1 276 1 303 1 239 1 359 1 291 1 163 1 11 1 335 2 70 1 83 1 104 1 349 1 324 1 270 1 181 1 50 1 173 1 
39 5 109 1 302 1 201 1 163 5 335 5 83 1 87 1 349 4 365 1 270 2 378 1 271 1 50 4 
39 2 44 1 240 1 349 2 163 2 335 2 129 1 50 2 
39 3 87 1 349 3 270 1 163 3 271 1 335 3 50 3 
39 1 44 1 349 1 163 1 335 1 129 1 50 1 
39 1 349 1 54 1 201 1 163 1 271 1 335 1 129 1 50 1 
39 4 142 1 121 1 213 1 162 1 239 1 359 1 313 1 291 1 163 3 70 1 104 1 191 1 145 1 196 1 324 1 270 1 271 2 27 2 50 3 247 1 222 1 29 1 275 1 276 1 303 1 223 1 251 1 201 1 304 1 80 1 11 1 31 1 225 1 335 4 82 1 129 1 227 1 83 1 87 1 349 3 138 1 181 1 139 1 
39 2 87 1 302 1 349 1 365 1 163 2 270 1 335 2 50 1 
29 1 39 3 18 1 162 1 201 1 80 1 304 1 163 3 335 3 225 1 82 1 129 1 83 1 102 1 349 3 270 2 271 1 50 3 247 1 
39 2 201 1 163 2 335 2 86 1 349 2 270 1 271 1 50 2 173 1 
39 1 222 1 121 1 276 1 239 1 303 1 359 1 11 1 291 1 335 1 70 1 104 1 87 1 324 1 181 1 
39 1 121 1 276 1 239 1 303 1 359 1 291 1 335 1 70 1 103 1 104 1 87 1 322 1 324 1 181 1 
142 1 344 1 213 1 65 1 313 1 363 1 191 4 145 2 293 1 295 1 27 2 272 1 173 2 75 2 176 2 31 1 227 1 281 1 12 1 13 1 86 2 353 1 288 1 139 1 
39 1 349 1 240 1 304 1 163 1 335 1 129 1 50 1 
133 1 330 1 168 1 
132 1 133 2 259 1 330 2 156 1 370 1 
133 1 330 1 
133 1 330 1 
132 1 156 1 
132 1 156 1 
132 1 156 1 
133 1 330 1 33 1 
133 1 330 1 33 1 
133 1 330 1 33 1 
133 1 330 1 301 1 
133 1 330 1 301 1 
133 1 330 1 301 1 
39 2 162 1 261 1 66 1 163 2 347 1 263 1 320 1 168 1 50 2 273 1 330 1 110 1 80 1 278 1 335 2 133 1 87 1 349 2 207 1 289 1 61 1 230 1 62 1 
96 1 330 2 162 2 9 1 55 1 261 1 42 1 80 2 347 2 102 1 280 1 263 2 133 2 294 1 305 2 207 2 61 2 289 3 370 1 
236 1 341 1 267 1 
236 1 267 1 185 1 
341 2 78 1 267 3 326 1 206 1 185 1 
307 1 341 1 267 2 326 1 206 1 185 1 
341 1 267 2 206 1 326 2 185 1 
63 3 162 5 238 1 186 1 65 1 363 1 143 1 102 2 190 3 166 2 72 1 105 1 320 1 220 4 126 1 127 1 112 1 80 5 278 1 226 1 375 2 13 1 338 1 85 1 34 1 288 1 16 2 89 1 380 1 230 1 140 1 231 2 92 1 
238 3 186 1 143 2 190 8 102 5 244 5 112 1 13 3 155 1 16 6 256 1 63 9 120 1 162 9 65 3 363 3 216 5 166 6 269 1 323 1 327 1 221 1 220 7 126 3 127 3 80 9 278 4 226 1 338 2 375 6 34 6 136 1 288 3 89 2 380 2 140 2 92 1 
63 4 162 3 238 2 65 1 363 1 143 1 102 3 190 3 166 2 105 1 327 1 221 1 220 2 126 1 127 1 80 3 278 1 85 1 338 1 13 1 375 2 288 1 89 1 16 2 380 1 140 1 231 1 92 1 
63 7 162 4 238 3 65 2 363 2 143 1 102 4 190 5 166 4 105 1 269 1 323 1 327 1 221 1 220 3 126 2 127 2 80 4 278 2 338 1 85 1 13 2 375 4 155 1 288 2 16 4 89 1 380 1 140 1 231 2 92 1 
181 1 300 1 
22 1 
111 1 181 1 125 1 
291 1 181 1 70 1 
248 1 181 1 
181 1 70 1 
111 2 67 1 291 1 181 3 70 1 355 1 
356 1 122 1 344 3 260 1 191 9 71 1 73 1 47 2 145 4 243 1 272 4 274 1 75 5 115 1 13 2 377 1 157 2 288 2 183 1 
142 1 122 2 356 7 344 6 211 1 213 1 260 2 65 3 313 1 23 1 363 3 191 35 71 1 47 3 145 17 123 1 243 1 27 2 272 13 246 1 127 3 274 2 198 1 75 18 373 1 115 1 13 5 283 1 377 1 157 3 288 5 88 4 183 1 139 1 94 3 
142 2 40 1 122 1 344 4 356 2 213 2 260 1 313 2 191 11 71 1 145 5 123 1 47 2 243 1 27 4 272 6 274 1 75 6 115 1 13 2 253 1 377 1 288 2 157 2 139 2 
122 1 344 3 356 1 260 1 191 9 71 1 47 2 145 4 243 1 272 4 274 1 75 5 115 1 13 2 377 1 157 2 288 2 183 1 
122 1 344 3 356 3 260 1 191 9 71 1 47 2 145 4 243 1 272 6 274 1 75 5 115 1 13 2 377 1 157 2 288 2 183 1 
121 1 234 1 1 1 346 1 239 1 359 1 70 1 104 1 324 1 169 1 197 2 52 1 276 1 371 1 79 2 113 2 177 1 279 1 84 2 158 1 181 1 182 1 306 1 
121 1 236 1 97 1 239 1 359 1 99 1 104 1 265 1 264 1 267 2 197 1 276 1 151 1 78 1 79 1 113 1 279 1 84 1 340 1 341 1 205 1 158 1 182 1 306 1 159 1 185 1 
141 1 121 1 236 1 97 1 239 1 359 1 99 1 104 1 265 1 264 1 267 2 146 1 197 1 276 1 78 1 224 1 79 1 113 1 279 2 84 1 340 1 341 1 205 1 379 1 158 2 182 1 184 1 306 1 159 1 185 1 
141 1 121 1 236 1 97 1 239 1 359 1 99 1 104 1 265 1 264 1 267 2 197 1 276 1 78 1 151 1 224 1 79 1 113 1 177 1 279 3 84 1 341 1 285 1 205 1 158 3 379 2 182 1 184 1 306 1 185 1 
141 1 121 1 97 1 236 1 239 1 359 1 104 1 265 1 264 1 267 2 197 1 276 1 151 1 78 1 224 1 79 1 113 1 279 2 84 1 341 1 285 1 158 2 379 2 184 1 185 1 
64 1 
39 1 238 2 346 1 186 1 239 1 3 4 102 2 190 2 104 2 292 2 247 1 149 1 302 1 112 3 200 1 304 1 57 2 152 1 204 1 63 2 121 1 162 5 359 2 163 1 360 1 70 1 366 1 124 2 367 1 218 2 324 2 329 1 29 1 276 2 332 1 371 1 80 5 335 1 82 1 129 1 131 2 337 2 375 2 338 1 229 1 34 6 342 1 89 1 181 1 380 1 140 1 92 1 93 2 381 1 343 1 
29 1 39 1 162 3 302 1 112 1 200 1 304 1 80 3 360 1 163 1 3 2 82 1 335 1 129 1 337 1 5 1 34 2 342 1 329 1 381 1 343 1 247 1 
39 1 162 3 163 1 360 1 3 3 102 1 5 1 292 1 329 1 247 1 29 1 302 1 200 1 112 1 80 3 304 1 335 1 82 1 129 1 34 1 342 1 343 1 381 1 92 1 
39 1 162 3 163 1 360 1 3 3 102 1 5 1 292 1 329 1 247 1 29 1 302 1 112 1 200 1 80 3 304 1 335 1 82 1 129 1 131 1 337 1 34 2 342 1 343 1 381 1 92 1 
39 1 238 2 186 1 3 6 102 5 190 1 5 1 292 4 297 1 247 1 149 1 6 1 302 1 53 1 112 3 200 1 304 1 57 2 119 1 162 5 360 1 163 1 315 1 124 2 367 1 218 2 329 1 29 1 80 5 82 1 335 1 129 1 131 4 337 4 338 1 375 1 34 7 342 1 380 1 140 1 381 1 343 1 92 5 93 2 
39 1 238 2 186 1 3 4 190 1 102 2 292 2 247 1 149 1 302 1 200 1 112 2 304 1 57 2 63 2 162 4 360 1 163 1 124 2 366 1 367 1 218 2 329 1 29 1 80 4 82 1 335 1 129 1 131 2 337 2 338 1 375 1 34 4 342 1 380 1 140 1 381 1 343 1 93 2 92 1 
39 1 162 4 238 2 186 1 163 1 360 1 3 4 315 1 102 1 190 1 292 2 124 2 367 1 218 2 297 1 329 1 247 1 29 1 6 1 149 1 302 1 112 2 200 1 80 4 304 1 57 2 335 1 82 1 129 1 131 2 337 2 375 1 338 1 34 4 342 1 380 1 140 1 92 1 93 2 343 1 381 1 
39 1 162 4 238 2 186 1 163 1 360 1 3 4 315 1 102 1 190 1 292 2 124 2 367 1 218 2 297 1 329 1 247 1 29 1 6 1 149 1 302 1 112 2 200 1 80 4 304 1 57 2 335 1 82 1 129 1 131 2 337 2 375 1 338 1 34 4 342 1 380 1 140 1 92 1 93 2 343 1 381 1 
63 2 39 1 162 4 186 1 312 2 163 1 360 1 361 2 3 4 102 1 190 1 292 2 367 1 218 2 329 1 247 1 29 1 6 1 302 1 112 2 77 1 200 1 80 4 304 1 335 1 82 1 129 1 130 1 131 2 337 2 375 1 338 1 34 4 376 1 342 1 380 1 140 1 92 1 93 2 343 1 381 1 
39 1 162 4 238 2 186 1 163 1 360 1 315 1 3 5 102 1 190 1 292 3 124 2 367 1 218 2 297 1 329 1 247 1 29 1 6 1 149 1 302 1 112 2 200 1 80 4 304 1 57 2 335 1 82 1 129 1 131 3 337 3 375 1 338 1 34 5 342 1 119 1 380 1 140 1 92 1 93 2 343 1 381 1 
39 1 162 4 238 2 186 1 163 1 360 1 315 1 3 5 102 1 190 1 292 3 124 2 367 1 218 2 297 1 329 1 247 1 29 1 6 1 149 1 302 1 112 2 200 1 80 4 304 1 57 2 335 1 82 1 129 1 131 3 337 3 375 1 338 1 34 5 342 1 119 1 380 1 140 1 92 1 93 2 343 1 381 1 
63 2 39 1 162 4 186 1 312 2 163 1 360 1 361 2 3 4 102 1 190 1 292 2 366 1 367 1 218 2 329 1 247 1 29 1 302 1 112 2 200 1 77 1 80 4 304 1 335 1 82 1 129 1 131 2 337 2 375 1 338 1 34 4 342 1 380 1 140 1 92 1 93 2 343 1 381 1 
39 1 142 2 309 1 121 3 213 2 237 1 41 1 239 3 346 1 359 7 313 2 163 1 291 1 21 2 70 3 104 6 192 1 191 2 145 1 146 1 324 2 270 1 369 1 27 4 50 1 108 1 75 1 276 7 371 1 81 1 335 1 31 2 336 1 227 2 12 1 59 1 349 1 138 1 286 1 181 4 139 2 209 1 
39 1 142 1 344 1 213 1 65 1 313 1 163 1 363 1 191 3 145 2 271 1 272 1 27 2 50 1 173 1 127 1 75 1 201 1 176 1 372 1 31 1 335 1 374 1 227 1 13 1 86 1 349 1 288 1 139 1 
142 1 344 1 213 1 313 1 31 1 115 1 227 1 12 1 47 1 377 1 157 1 125 1 139 1 272 1 27 2 
142 2 161 1 356 1 344 1 213 2 41 1 65 1 313 2 363 2 316 1 317 1 191 14 145 6 272 2 27 4 173 11 127 2 198 1 75 8 176 11 31 1 374 1 227 2 13 2 283 1 87 1 86 4 138 1 60 1 288 1 88 3 139 2 94 3 
39 2 142 1 121 1 213 1 41 1 239 1 359 1 313 1 291 1 163 1 314 1 70 1 144 1 104 1 191 2 145 1 324 1 270 1 27 2 50 1 222 1 75 1 276 1 303 1 11 1 31 1 335 2 374 1 227 1 83 1 87 1 86 1 134 1 349 1 138 1 181 1 139 1 95 1 
39 3 142 3 344 5 41 1 239 2 291 2 104 1 191 22 45 2 47 2 145 11 243 1 50 1 250 2 303 2 11 2 115 1 13 4 349 1 157 2 356 1 121 2 213 3 359 1 65 2 313 3 163 1 362 1 215 2 70 2 363 2 71 1 324 1 270 1 272 6 27 6 173 6 127 2 222 2 30 1 174 2 75 11 76 1 276 1 223 2 176 6 335 3 31 3 129 1 374 1 83 1 227 3 87 1 86 6 138 1 377 1 288 4 181 2 139 3 
142 1 356 1 75 2 213 1 176 1 313 1 31 1 363 1 227 1 12 1 13 1 191 2 86 1 293 1 139 1 272 1 27 2 173 1 
142 1 344 1 213 1 65 1 176 1 313 1 31 1 227 1 12 1 191 2 86 1 145 2 353 1 288 1 139 1 272 1 27 2 173 1 
142 1 356 1 344 1 213 1 65 1 313 1 363 1 191 4 145 2 27 2 272 2 127 1 173 2 75 2 176 2 31 1 227 1 12 1 13 1 86 2 288 1 139 1 
142 1 356 1 75 2 213 1 237 1 176 1 313 1 31 1 363 1 227 1 13 1 191 2 86 1 293 1 139 1 272 1 27 2 173 1 
142 1 344 1 213 1 237 1 65 1 176 1 313 1 31 1 227 1 191 2 86 1 145 2 353 1 288 1 139 1 272 1 27 2 173 1 
142 1 356 1 344 1 213 1 237 1 65 1 313 1 363 1 191 4 145 2 27 2 272 2 127 1 173 2 75 2 176 2 31 1 227 1 13 1 86 2 288 1 139 1 
142 1 344 1 356 1 75 2 213 1 65 1 176 2 313 1 31 1 363 1 227 1 13 1 191 4 86 2 145 2 288 1 139 1 272 2 27 2 173 2 127 1 
39 1 142 1 121 1 213 1 41 1 239 1 359 1 313 1 291 1 70 1 104 1 191 2 145 1 324 1 27 2 222 1 75 1 276 1 303 1 223 1 11 1 335 1 31 1 227 1 87 1 138 1 181 1 139 1 
39 1 142 1 121 1 213 1 41 1 239 1 359 1 313 1 291 1 70 1 103 1 104 1 191 2 145 1 322 1 324 1 27 2 75 1 276 1 303 1 335 1 31 1 227 1 87 1 138 1 181 1 139 1 208 1 
142 1 356 1 344 1 213 1 65 1 313 1 363 1 191 4 145 2 27 2 272 2 127 1 173 2 75 2 176 2 31 1 374 1 227 1 13 1 86 2 288 1 139 1 
39 1 142 1 344 1 356 1 121 1 213 1 239 1 65 1 359 1 313 1 291 1 363 1 70 1 104 1 191 4 145 2 146 1 272 2 27 2 173 2 127 1 222 1 174 1 75 2 276 1 303 1 223 1 176 2 11 1 335 1 31 1 227 1 13 1 86 2 288 1 181 1 139 1 
39 1 142 1 356 1 213 1 65 1 313 1 163 1 363 1 191 3 145 1 271 1 272 1 27 2 50 1 127 1 173 1 75 2 201 1 333 1 176 1 31 1 335 1 374 1 227 1 13 1 86 1 349 1 288 1 139 1 
142 3 210 1 344 4 356 4 213 3 357 1 65 4 214 1 313 3 98 1 188 1 363 4 191 36 47 1 123 1 145 19 193 1 194 1 195 1 26 1 299 1 27 6 272 8 127 4 74 1 198 1 75 17 203 1 115 1 13 4 283 3 352 1 377 1 253 1 157 1 288 4 88 4 354 4 139 3 257 2 94 3 
142 4 210 1 344 4 356 3 213 4 357 1 65 3 214 1 313 4 98 1 188 1 363 4 191 33 47 1 123 2 145 16 193 1 194 1 195 1 26 1 299 1 27 8 272 7 127 4 74 1 198 1 75 17 203 1 115 1 13 4 283 3 352 1 377 1 253 1 157 1 288 3 88 4 354 4 139 4 257 2 94 3 
142 2 161 2 344 7 356 7 213 2 357 1 65 7 214 1 313 2 98 1 363 7 191 47 47 1 123 1 145 23 193 1 194 1 195 1 26 1 299 1 27 4 272 14 127 7 74 1 198 2 75 24 203 1 115 1 13 7 283 2 352 1 377 1 253 1 157 1 288 7 88 4 354 4 139 2 257 1 94 4 
142 2 210 1 344 3 356 3 213 2 357 1 65 3 313 2 43 1 363 3 191 19 145 10 194 1 195 2 299 1 27 4 272 6 127 3 74 1 198 1 75 9 13 3 283 1 253 1 288 3 88 2 354 2 139 2 257 1 94 1 
142 3 356 2 344 2 213 3 357 1 65 2 313 3 214 1 98 1 363 3 191 26 123 2 145 12 193 1 194 1 195 1 26 1 299 2 272 4 27 6 127 3 74 1 75 14 203 1 13 3 283 2 352 1 253 1 288 2 88 2 354 4 139 3 257 2 94 2 
280 1 263 1 133 1 330 1 294 1 290 1 207 1 61 1 347 1 370 1 
66 1 168 1 
263 1 308 1 133 1 330 1 242 1 207 1 17 1 61 1 347 1 
199 1 33 1 
259 1 301 1 107 1 
96 1 330 1 162 1 9 1 55 1 261 1 80 1 347 1 102 1 280 1 263 1 133 1 294 1 305 1 207 1 61 1 289 2 370 1 
96 1 330 1 162 1 9 1 55 1 261 1 80 1 347 1 102 1 280 1 263 1 133 1 294 1 305 1 207 1 61 1 289 2 370 1 
96 1 330 1 162 1 9 1 55 1 261 1 80 1 347 1 102 1 280 1 263 1 133 1 294 1 305 1 207 1 61 1 289 2 370 1 
199 1 259 1 33 1 
199 1 259 1 33 1 
301 1 107 1 
259 1 301 1 107 1 
110 1 62 1 
39 2 96 1 162 1 311 1 66 1 163 2 347 1 263 1 320 1 168 1 220 1 273 1 50 2 330 1 110 1 80 1 278 1 335 2 133 1 87 1 349 2 305 1 207 1 61 1 289 1 230 1 62 1 
39 2 142 1 309 1 121 1 213 1 41 1 239 1 359 2 313 1 68 1 163 2 21 2 70 1 104 2 191 2 319 1 145 1 298 1 27 2 128 1 75 1 276 2 8 1 31 1 335 2 374 1 227 1 138 1 181 1 139 1 209 1 
233 1 121 1 1 1 276 1 239 1 346 1 359 1 19 1 371 1 70 1 104 1 84 1 324 1 181 1 
121 1 236 1 276 1 78 1 151 1 239 1 359 1 19 1 99 1 104 1 84 1 265 1 264 1 341 1 267 2 328 1 185 1 38 1 
121 1 236 1 276 2 78 1 239 1 151 1 359 2 19 1 99 1 104 2 84 1 265 1 264 1 341 1 267 2 146 1 328 1 185 1 38 1 
121 1 236 1 276 1 78 1 151 1 56 1 239 1 359 1 99 1 104 1 84 1 265 1 264 1 341 1 267 2 328 1 185 1 
348 1 
186 1 114 1 102 1 190 1 338 1 375 1 350 1 380 1 140 1 92 1 
63 4 238 2 65 1 363 1 190 2 102 2 166 2 13 1 375 2 288 1 16 2 221 1 126 1 127 1 
162 1 34 1 112 1 80 1 92 1 102 1 
121 1 162 3 239 1 186 1 346 1 359 4 164 2 70 1 190 2 104 4 46 1 268 1 324 2 327 1 28 1 332 1 276 4 112 2 371 1 80 3 204 1 338 2 375 2 229 2 34 4 181 1 89 2 380 2 140 2 
375 1 350 1 114 1 125 1 92 1 190 1 102 1 
39 3 142 1 121 1 213 1 239 1 359 1 313 1 163 2 291 1 70 1 104 1 191 1 145 1 324 1 196 1 271 2 27 2 50 2 222 1 276 1 275 1 223 1 303 1 11 1 335 3 31 1 227 1 87 1 349 2 138 1 181 1 139 1 
63 4 260 1 238 2 186 1 190 1 102 4 166 2 375 2 338 1 229 1 16 2 89 1 380 1 140 1 92 2 
63 1 162 1 238 1 186 1 190 1 102 2 124 1 149 1 112 1 80 1 57 1 375 1 338 1 34 1 380 1 140 1 92 1 
238 6 239 1 186 3 291 1 190 8 102 7 104 1 48 2 300 3 111 2 112 3 13 2 255 2 118 2 16 6 63 12 121 2 162 5 359 1 65 2 67 1 215 2 70 1 363 2 166 6 217 1 324 1 221 2 126 2 172 1 127 2 29 2 276 1 80 5 338 3 375 7 229 1 34 5 36 1 288 2 89 2 181 6 37 2 380 3 90 2 140 3 92 1 
63 6 162 1 238 3 186 2 65 2 214 1 98 1 363 2 190 8 102 5 166 5 193 1 26 1 221 1 126 2 127 2 112 1 80 1 58 1 338 2 375 5 13 2 229 1 283 1 34 1 352 1 287 1 288 2 89 1 16 5 88 1 380 2 140 2 92 2 94 1 
39 1 232 1 162 1 186 1 163 1 315 1 190 2 44 1 71 1 47 1 243 1 325 1 271 1 221 1 126 2 50 1 275 1 80 1 335 1 129 1 338 1 13 2 375 2 349 1 157 1 288 1 380 1 140 1 
263 1 7 1 294 1 207 1 62 1 
263 1 207 1 252 1 
263 1 207 1 252 1 
263 1 207 1 252 1 
263 1 207 1 171 1 
263 1 207 1 171 1 
263 1 207 1 171 1 
263 1 207 1 
133 1 330 1 
142 1 356 1 344 3 213 1 214 1 313 1 191 10 71 1 145 5 47 2 243 1 27 2 272 4 75 5 115 1 13 2 283 1 253 1 377 1 288 2 157 2 88 1 139 1 94 1 
142 2 344 3 356 2 213 2 214 1 313 2 69 1 363 1 191 13 71 1 47 2 145 6 243 1 27 4 272 5 127 1 198 1 75 7 115 1 13 3 283 1 377 1 253 1 288 2 157 2 88 2 139 2 94 1 
142 3 356 2 344 4 213 3 65 2 214 1 313 3 98 1 69 1 363 2 191 21 71 1 47 2 145 11 123 1 193 1 243 1 26 1 27 6 272 6 127 2 75 10 115 1 13 4 283 1 352 1 377 1 253 1 157 2 288 4 88 1 139 3 94 1 
142 3 356 4 344 4 213 3 65 1 214 1 313 3 98 1 69 1 363 2 191 19 71 1 47 2 123 1 145 8 193 1 243 1 26 1 27 6 272 8 127 2 75 11 115 1 13 4 283 1 352 1 377 1 253 1 157 2 288 3 88 1 139 3 94 1 
142 1 356 1 344 3 213 1 214 1 313 1 191 10 71 1 145 5 47 2 243 1 27 2 272 4 75 5 115 1 13 2 283 1 253 1 377 1 288 2 157 2 88 1 139 1 94 1 
142 1 356 1 344 1 213 1 65 2 214 1 313 1 98 1 363 2 191 12 145 6 193 1 26 1 27 2 272 2 127 2 75 6 13 2 283 1 352 1 253 1 288 2 88 1 139 1 94 1 
142 4 356 2 344 4 213 4 65 1 214 1 313 4 98 1 69 1 363 2 191 20 71 1 47 2 145 9 123 2 193 1 243 1 26 1 27 8 272 6 127 2 75 11 115 1 13 4 283 1 352 1 377 1 253 1 157 2 288 3 88 1 139 4 94 1 
142 4 210 1 356 3 344 3 213 4 65 2 214 1 313 4 98 1 363 3 191 16 145 7 123 2 193 1 26 1 27 8 272 6 127 3 75 9 13 3 283 1 352 1 253 1 288 2 88 1 139 4 94 1 
75 2 344 3 356 3 115 1 13 1 191 5 71 1 145 3 47 3 243 1 377 1 288 1 157 3 272 6 
142 4 210 1 356 2 344 4 213 4 65 1 214 1 313 4 98 1 363 2 191 20 71 1 47 2 145 9 123 2 193 1 243 1 26 1 27 8 272 6 127 2 75 11 115 1 13 4 283 1 352 1 377 1 253 1 157 2 288 3 88 1 139 4 94 1 
142 1 344 3 356 2 75 5 213 1 313 1 13 2 191 10 71 1 47 2 145 5 243 1 253 1 157 2 288 2 139 1 27 2 272 5 
142 1 75 2 356 1 213 1 313 1 363 1 13 1 191 2 253 1 139 1 27 2 272 1 
142 1 344 1 75 2 356 1 213 1 65 1 313 1 363 1 13 1 191 4 145 2 253 1 288 1 139 1 272 2 27 2 127 1 
142 3 210 1 344 1 356 1 75 1 213 3 262 1 313 3 191 3 123 1 145 2 47 1 253 1 157 1 139 3 27 6 272 2 
142 4 210 1 344 4 211 1 356 4 213 4 65 2 313 4 69 1 23 1 363 2 191 26 71 1 47 2 123 1 145 13 243 1 27 8 272 8 246 1 127 2 75 13 115 1 13 4 283 1 377 1 253 1 157 2 288 4 88 3 139 4 94 3 
142 2 344 3 356 3 213 2 313 2 191 12 71 1 47 2 123 1 145 6 243 1 27 4 272 6 75 6 115 1 13 2 377 1 157 2 288 2 139 2 
344 1 47 1 377 1 157 1 125 1 272 1 115 1 
142 1 344 1 75 2 356 1 213 1 65 1 313 1 69 1 363 1 13 1 191 4 145 2 288 1 139 1 272 2 27 2 127 1 
198 1 344 1 75 3 356 1 65 1 363 1 13 1 191 7 283 1 145 4 288 1 88 2 272 2 94 1 127 1 
142 1 161 1 344 4 356 2 213 1 65 2 313 1 363 2 191 20 317 1 71 1 47 2 145 10 123 1 243 1 272 6 27 2 127 2 198 1 75 10 115 1 13 4 377 1 157 2 288 4 88 2 139 1 94 2 
191 1 145 1 88 1 
191 1 75 1 94 1 
142 1 75 3 356 1 344 2 213 1 65 1 313 1 69 1 215 1 363 1 13 1 191 6 145 3 288 1 139 1 27 2 272 3 127 1 
142 1 356 1 344 1 213 1 65 2 214 1 313 1 98 1 363 2 191 12 145 6 193 1 26 1 27 2 272 2 127 2 75 6 13 2 283 1 352 1 253 1 288 2 88 1 139 1 94 1 
75 3 344 1 356 1 13 1 191 6 71 1 145 3 47 1 288 1 157 1 272 2 
142 1 75 1 356 1 344 1 213 1 262 1 313 1 115 1 191 3 47 1 145 2 123 1 377 1 157 1 139 1 272 2 27 2 
39 1 0 1 302 1 235 1 163 1 335 1 179 1 180 1 87 1 135 1 365 1 91 1 
39 1 0 1 87 1 302 1 365 1 163 1 335 1 
121 1 276 4 358 1 346 1 239 1 359 4 371 1 187 1 70 1 104 4 146 1 324 1 181 1 
104 1 192 1 121 1 108 1 276 1 239 1 359 1 291 1 181 1 70 1 336 1 101 1 
104 1 121 1 264 1 236 1 276 1 267 1 239 1 359 1 324 1 185 1 
104 2 121 1 276 2 239 1 151 1 359 2 146 1 68 1 181 1 70 1 209 1 
121 2 276 5 346 1 239 2 371 1 359 5 187 1 164 1 81 1 70 2 104 4 59 1 146 1 324 1 181 3 209 1 
121 2 310 1 276 5 346 1 239 2 371 1 359 5 187 1 164 1 81 1 70 2 104 4 146 1 324 1 181 3 209 1 
104 1 121 1 276 1 239 1 346 1 371 1 359 1 324 1 181 1 125 1 70 1 
39 2 121 1 276 1 303 1 239 1 359 1 291 1 163 1 335 2 70 1 104 1 87 1 349 1 322 1 324 1 270 1 181 1 50 1 
104 1 192 1 121 1 276 1 239 1 359 1 67 1 291 1 181 1 164 1 70 1 148 1 
39 2 222 1 121 1 276 1 303 1 239 1 359 1 291 1 163 1 335 2 70 1 104 1 87 1 349 1 324 1 270 1 181 1 50 1 
248 1 39 2 222 1 121 1 276 1 303 1 239 1 359 1 304 1 291 2 163 2 164 1 165 1 82 1 335 2 129 1 70 2 104 1 87 1 349 2 270 1 181 3 50 1 
39 2 121 1 358 1 239 1 359 2 163 2 291 2 164 1 165 1 70 2 104 2 322 1 270 1 50 1 248 1 276 2 303 1 304 1 335 2 82 1 129 1 87 1 349 2 181 3 
121 1 162 2 358 1 239 1 359 3 291 1 164 1 165 1 70 1 102 1 104 3 324 1 300 1 248 1 29 1 276 3 111 1 80 2 116 1 14 1 34 1 181 4 92 1 
29 1 248 1 121 1 162 2 276 3 358 1 111 1 239 1 359 3 80 2 291 1 164 1 165 1 70 1 102 1 104 3 34 1 324 1 37 1 181 4 300 1 92 1 
104 1 121 1 276 1 239 1 359 1 369 1 
104 1 192 1 121 1 276 1 239 1 359 1 67 1 324 1 291 1 181 1 70 1 148 1 
39 2 142 2 344 3 239 1 291 1 104 1 191 8 45 1 47 2 145 4 146 1 243 1 50 1 303 1 11 1 115 1 13 2 349 1 157 2 356 1 121 1 213 2 359 1 313 2 163 1 70 1 71 1 270 1 27 4 272 4 128 1 222 1 174 1 75 4 76 1 276 1 223 1 335 2 31 2 129 1 374 1 227 2 87 1 377 1 288 2 181 1 139 2 
162 3 186 2 359 1 190 1 102 1 104 1 324 1 28 1 220 1 300 1 29 1 276 1 111 1 112 1 80 3 114 1 375 1 338 2 34 2 350 1 118 1 255 1 37 1 181 2 380 2 90 1 140 2 92 1 
121 2 276 2 111 1 239 1 359 2 67 1 291 1 70 1 104 2 146 1 36 1 181 2 369 1 
39 1 228 1 175 1 319 1 331 1 8 1 163 1 335 1 298 1 
175 1 20 1 2 1 
228 1 339 1 87 1 331 1 175 1 
39 1 232 1 249 1 175 1 162 1 275 1 80 1 20 1 163 1 2 1 335 1 129 1 102 1 44 1 349 1 325 1 271 1 220 1 50 1 92 1 
279 1 141 1 340 1 224 1 158 1 182 1 184 1 306 1 
141 2 150 1 224 2 32 1 153 1 279 4 117 1 147 1 219 1 379 2 158 4 182 1 306 1 184 3 
141 1 51 1 224 1 178 1 279 2 282 1 340 1 158 2 379 1 182 1 184 1 306 1 
141 1 224 1 32 2 279 3 153 2 340 1 117 1 154 1 158 3 182 1 184 1 306 1 
212 1 277 2 368 1 184 2 
279 1 340 1 284 1 158 1 182 1 306 1 
279 2 141 1 340 1 137 1 224 1 379 1 158 2 182 1 184 1 306 1 
334 1 
279 1 141 1 340 1 224 1 158 1 182 1 184 1 306 1 
141 1 224 1 125 1 184 1 
279 1 141 1 224 1 158 1 182 1 184 1 306 1 
79 1 158 1 197 1 
141 1 224 1 32 1 279 3 153 2 364 1 340 1 117 1 158 3 182 1 184 1 306 1 
279 2 379 1 158 1 182 1 306 1 170 1 
150 1 236 1 279 1 340 1 341 1 267 1 254 1 158 1 182 1 306 1 184 1 
279 1 141 1 340 1 158 1 182 1 184 1 306 1 
279 1 141 2 340 1 224 1 158 1 182 1 306 1 
141 1 10 1 279 2 4 1 340 1 25 1 158 2 182 2 184 1 306 2 
141 1 150 1 224 1 279 3 340 1 266 1 137 1 147 1 158 3 379 2 182 1 306 1 184 2 
141 1 236 1 78 1 224 1 279 2 340 1 341 1 267 2 158 2 379 1 182 1 184 1 306 1 185 1 245 1 
279 2 340 1 241 1 379 1 158 1 182 1 306 1 170 1 
141 1 224 1 279 3 153 1 340 1 137 1 379 1 158 3 182 1 306 1 184 1 
150 1 147 1 219 1 184 1 
141 1 184 1 

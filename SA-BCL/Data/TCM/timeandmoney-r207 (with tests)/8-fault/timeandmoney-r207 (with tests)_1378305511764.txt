#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 88 345 215 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 51 275 244 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 51 275 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 62 (61,131,221) (144,225,273) (144,225,273) (144,225,273) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 317 25 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 317 72 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 317 72 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 317 72 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 317 72 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 62 (61,131,221) (61,131,221) (61,131,221) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 96 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 51 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
59 1 173 1 62 2 155 4 205 1 259 1 261 1 302 1 341 1 158 1 181 1 344 9 307 2 182 3 245 1 49 1 246 2 7 1 271 9 34 2 312 2 332 1 272 5 291 2 140 1 214 1 278 2 279 6 
59 1 173 1 62 2 155 4 205 1 259 1 261 1 302 1 341 1 158 1 181 1 344 9 307 2 182 3 245 1 49 1 246 2 7 1 271 9 34 2 312 2 332 1 272 5 291 2 140 1 214 1 278 2 279 6 
59 1 173 1 62 2 155 5 205 1 259 1 261 1 302 1 341 1 158 1 181 1 344 10 307 2 182 4 245 1 49 1 246 2 7 1 271 10 34 2 312 2 332 1 272 6 291 2 140 1 214 1 278 2 279 7 
59 1 173 1 62 2 155 3 205 1 259 1 261 1 302 1 341 1 158 1 181 1 344 7 307 2 182 2 245 1 246 2 7 1 271 7 34 2 312 1 332 1 272 4 291 2 140 1 214 1 278 2 279 4 
59 1 246 1 62 1 271 4 155 2 312 2 332 1 272 3 291 1 341 1 158 1 344 4 182 1 307 1 245 1 49 1 278 1 279 3 
59 1 246 1 64 1 62 1 299 1 271 2 34 1 259 1 205 1 272 1 332 1 291 1 341 1 179 1 344 2 278 1 
59 1 246 2 271 3 34 1 155 1 332 1 272 2 291 2 341 1 140 1 344 3 182 1 279 1 
59 1 62 1 155 4 261 1 341 1 158 1 344 9 182 3 307 1 245 1 49 1 246 2 271 9 34 1 312 2 332 1 272 5 191 1 291 2 140 1 197 1 214 1 279 7 278 1 
59 1 62 1 155 4 261 1 341 1 158 1 344 9 182 3 307 1 245 1 49 1 246 2 271 9 34 1 312 2 332 1 272 5 191 1 291 2 140 1 197 1 214 1 279 7 278 1 
139 1 78 1 100 1 
287 1 78 1 258 2 
333 2 171 2 227 2 71 2 142 1 304 1 310 2 39 2 
171 2 0 1 152 1 238 1 93 1 175 1 156 1 157 1 71 2 73 1 303 2 241 1 304 1 28 2 132 1 343 1 329 1 31 2 308 1 50 1 227 2 107 2 52 1 310 2 110 1 113 1 167 1 333 3 12 1 137 1 232 1 142 1 57 1 235 2 120 1 319 1 236 1 277 1 39 3 
333 1 232 1 171 1 40 1 227 1 71 1 142 1 310 1 84 1 39 1 
199 1 78 1 227 1 217 1 108 1 333 1 232 1 139 1 70 1 249 1 118 1 39 1 17 1 183 1 
199 2 171 1 78 1 227 1 217 1 108 1 310 1 333 1 232 1 139 1 70 1 71 1 39 1 17 2 183 1 
170 1 301 1 199 1 161 1 17 1 
170 1 199 2 139 1 78 1 36 1 161 1 186 1 17 2 
170 1 199 1 17 1 
199 1 40 1 171 1 227 1 310 1 84 1 333 1 232 1 71 1 142 1 234 1 161 1 17 1 39 1 
78 1 
170 1 199 2 139 1 78 1 161 1 202 1 186 1 17 2 
151 1 199 3 274 1 161 2 88 1 215 1 68 1 17 3 345 1 148 1 
100 1 304 1 
171 1 227 2 310 1 130 1 333 2 71 1 336 1 304 2 39 2 
5 1 322 1 286 1 
308 1 50 1 107 1 0 1 52 1 110 1 113 1 333 1 326 1 232 1 303 1 241 1 57 1 304 1 235 1 343 1 329 1 39 1 
251 1 5 1 308 1 50 1 227 1 107 1 0 1 52 1 310 1 110 1 184 1 333 2 71 1 303 1 241 1 57 1 235 1 329 1 343 1 39 2 
251 1 171 1 227 5 109 1 310 4 184 2 83 1 333 5 71 4 249 1 336 1 304 1 39 5 135 1 
333 2 232 1 227 2 71 2 310 2 16 1 84 1 39 2 
333 3 171 1 227 3 71 3 304 1 310 3 184 1 39 3 
333 1 232 1 227 1 71 1 310 1 84 1 39 1 
333 1 232 1 171 1 227 1 71 1 310 1 336 1 130 1 39 1 
251 1 199 1 171 2 217 1 0 1 238 1 93 1 156 1 98 1 70 1 71 3 73 1 303 1 241 1 304 1 28 1 132 1 329 1 343 1 31 2 183 1 308 1 50 1 227 3 108 1 107 1 52 1 310 3 110 1 184 1 167 1 333 4 12 1 232 1 334 1 142 1 57 1 336 1 235 1 120 1 236 1 277 1 39 4 17 1 
333 2 227 2 71 1 304 1 249 1 310 1 184 1 83 1 39 2 
251 1 199 1 171 1 78 1 108 1 227 3 217 1 310 3 184 2 333 3 232 1 350 1 334 1 70 1 71 3 336 1 17 1 39 3 183 1 
5 1 171 1 322 1 227 2 310 2 184 1 333 2 71 2 336 1 39 2 
308 1 50 1 107 1 0 1 52 1 110 1 113 1 333 1 232 1 303 1 241 1 57 1 304 1 235 1 343 1 329 1 39 1 
50 1 107 1 0 1 52 1 218 1 110 1 113 1 230 1 333 1 232 1 303 1 241 1 57 1 304 1 235 1 329 1 39 1 
322 2 93 1 238 2 203 1 41 1 156 1 283 1 159 1 328 1 28 4 132 1 31 2 286 2 5 2 187 1 137 2 233 1 196 1 169 1 120 1 236 1 295 1 277 1 147 1 
333 1 232 1 70 1 227 1 71 1 310 1 16 1 39 1 
267 1 14 1 
267 1 14 1 
293 1 210 1 
293 1 210 1 
293 1 210 1 
267 1 14 1 289 1 
58 1 267 1 14 1 
340 1 20 1 293 1 267 2 14 2 210 1 
267 1 14 1 289 1 
267 1 14 1 289 1 
267 1 14 1 285 1 
267 1 14 1 285 1 
267 1 14 1 285 1 
199 1 267 1 51 1 14 1 45 1 275 1 67 1 17 1 244 1 
267 1 51 1 14 1 45 1 275 1 67 1 
62 1 307 1 278 1 
62 1 179 1 278 1 
213 1 179 1 351 1 4 1 307 2 278 3 
213 1 179 1 351 1 198 1 307 1 278 2 
213 2 179 1 351 1 307 1 278 2 
151 1 170 1 199 5 65 1 201 1 298 1 220 2 203 1 176 1 258 3 43 2 206 3 178 1 161 4 133 1 46 2 287 1 309 1 78 2 79 1 165 1 347 2 186 1 187 1 290 1 139 1 195 1 196 1 274 1 295 1 17 5 148 1 
151 2 170 6 199 9 65 3 298 1 220 6 300 5 256 1 203 3 176 2 68 1 258 9 43 6 206 8 301 5 327 1 161 7 133 1 265 1 226 1 287 3 78 5 79 2 165 4 347 6 186 1 187 3 85 1 139 1 196 3 274 2 295 3 17 9 216 1 148 2 
151 1 199 3 65 1 220 2 203 1 176 1 68 1 258 4 206 3 43 2 178 1 161 2 46 1 287 2 78 3 79 1 165 1 347 2 187 1 290 1 139 1 196 1 274 1 295 1 17 3 148 1 
151 1 199 4 65 2 220 4 203 2 176 1 258 7 68 1 43 4 206 5 178 1 327 1 161 3 46 2 265 1 287 3 78 4 79 1 165 2 347 4 187 2 290 1 85 1 139 1 196 2 274 1 295 2 17 4 148 1 
105 1 0 1 100 1 
0 1 143 1 
10 1 
50 1 0 1 52 1 
0 1 162 1 
50 1 0 1 
50 1 105 2 0 3 52 1 15 1 242 1 
6 2 92 1 238 3 240 1 41 2 9 1 187 1 42 1 24 1 177 1 137 4 222 1 169 3 243 1 28 7 342 1 295 1 
6 2 92 1 238 3 240 1 41 2 9 1 187 1 42 1 24 1 177 1 137 4 222 1 169 3 243 1 28 7 342 1 295 1 
6 2 92 1 238 3 240 1 41 2 9 1 187 1 42 1 24 1 177 1 137 4 247 1 222 1 169 3 243 1 28 7 342 1 295 1 
125 1 127 1 65 3 92 5 93 1 238 15 240 1 280 1 22 3 203 3 41 5 42 1 281 4 24 2 156 1 177 2 26 1 222 2 243 2 342 1 28 31 31 2 6 3 269 1 348 1 9 1 187 4 137 16 196 3 169 10 236 1 277 1 295 4 122 1 
92 1 93 2 238 4 240 1 3 1 41 3 42 1 24 1 156 2 177 1 222 1 243 1 28 9 31 4 6 2 348 1 9 1 187 1 137 5 314 1 169 4 236 2 295 1 277 2 
59 1 61 1 62 1 239 1 95 1 303 1 241 1 179 1 4 1 329 1 344 1 307 1 225 1 246 1 331 1 107 1 271 1 34 1 291 1 114 1 141 1 273 1 235 1 316 1 144 1 278 2 
61 1 62 1 239 1 95 1 341 1 303 1 282 1 241 1 179 1 75 1 305 1 4 1 329 1 344 3 307 1 225 1 246 1 331 1 107 1 271 3 34 1 272 1 332 1 291 1 114 1 235 1 316 1 144 1 149 1 279 2 278 2 
61 1 62 1 239 1 95 1 341 1 303 1 241 1 179 1 75 1 305 1 4 1 329 1 344 2 225 1 307 1 331 1 107 1 271 2 34 1 272 1 332 1 114 1 235 1 149 1 279 2 278 2 
0 1 239 2 303 1 241 1 282 1 223 1 329 1 344 1 164 1 246 1 104 1 50 1 331 2 107 1 110 1 81 1 271 1 34 2 231 1 291 1 114 2 235 1 38 1 
59 1 61 1 62 1 239 1 95 1 303 1 241 1 179 1 75 1 4 1 329 1 344 1 307 1 225 1 246 1 331 1 107 1 271 1 34 1 291 1 114 1 273 1 235 1 316 1 144 1 278 2 
27 1 
150 2 90 2 151 1 199 5 0 1 2 1 204 2 206 2 99 2 241 1 329 1 50 1 104 1 287 2 107 2 108 1 110 2 209 1 55 1 333 1 292 1 248 1 249 1 118 1 119 1 17 5 19 2 170 6 217 1 21 4 219 1 220 2 129 1 257 1 176 1 258 2 70 1 303 2 133 1 136 1 183 1 78 2 227 1 185 1 81 1 186 3 232 1 139 1 86 2 35 2 274 1 235 2 352 1 39 1 148 1 
199 3 170 2 217 1 21 2 202 1 204 1 70 1 183 1 136 1 227 1 108 1 209 1 186 1 333 1 292 1 232 1 248 1 249 1 118 1 352 1 39 1 17 3 
150 1 170 1 199 3 217 1 21 3 202 1 70 1 183 1 136 1 227 1 108 1 78 1 209 1 186 1 333 1 292 1 232 1 139 1 248 1 249 1 118 1 352 1 39 1 17 3 
150 1 199 3 170 2 217 1 21 3 202 1 204 1 70 1 99 1 183 1 136 1 227 1 108 1 78 1 209 1 186 1 333 1 292 1 232 1 139 1 248 1 249 1 118 1 352 1 39 1 17 3 
90 2 151 1 150 4 19 2 170 7 199 5 217 1 21 6 253 1 220 1 202 1 2 1 204 4 206 1 70 1 99 4 133 1 136 1 183 1 287 2 78 5 227 1 108 1 209 1 82 1 186 3 55 1 333 1 292 1 232 1 139 5 86 2 248 1 35 2 274 1 249 1 118 1 121 1 146 1 352 1 337 1 17 5 39 1 148 1 
151 1 90 2 150 2 199 4 2 1 204 2 206 1 99 2 287 2 108 1 209 1 55 1 333 1 292 1 248 1 249 1 118 1 17 4 19 2 170 4 217 1 21 4 220 1 258 2 70 1 133 1 183 1 136 1 227 1 78 2 185 1 186 2 232 1 139 1 86 2 274 1 35 2 352 1 39 1 148 1 
150 2 90 2 151 1 170 4 19 2 199 4 217 1 21 4 253 1 220 1 2 1 204 2 206 1 99 2 70 1 133 1 183 1 136 1 287 2 78 1 227 1 108 1 209 1 82 1 186 2 55 1 333 1 292 1 232 1 139 1 86 2 248 1 35 2 249 1 274 1 118 1 121 1 352 1 39 1 17 4 148 1 
150 2 90 2 151 1 170 4 19 2 199 4 217 1 21 4 253 1 220 1 2 1 204 2 206 1 99 2 70 1 133 1 183 1 136 1 287 2 78 1 227 1 108 1 209 1 82 1 186 2 55 1 333 1 292 1 232 1 139 1 86 2 248 1 35 2 249 1 274 1 118 1 121 1 352 1 39 1 17 4 148 1 
150 2 90 2 151 1 170 4 199 4 217 1 21 4 253 1 220 1 204 2 258 2 206 1 99 2 70 1 30 2 133 1 183 1 136 1 78 1 227 1 108 1 112 2 209 1 186 2 212 1 55 1 333 1 292 1 232 1 139 1 86 2 248 1 249 1 274 1 118 1 250 1 352 1 320 1 39 1 17 4 148 1 
90 2 151 1 150 3 19 2 199 4 170 5 217 1 21 5 253 1 220 1 2 1 204 3 206 1 70 1 99 3 133 1 183 1 136 1 287 2 78 1 227 1 108 1 209 1 82 1 186 2 55 1 333 1 292 1 232 1 139 1 86 2 248 1 35 2 274 1 249 1 118 1 121 1 352 1 146 1 39 1 17 4 148 1 
90 2 151 1 150 3 19 2 199 4 170 5 217 1 21 5 253 1 220 1 2 1 204 3 206 1 70 1 99 3 133 1 183 1 136 1 287 2 78 1 227 1 108 1 209 1 82 1 186 2 55 1 333 1 292 1 232 1 139 1 86 2 248 1 35 2 274 1 249 1 118 1 121 1 352 1 146 1 39 1 17 4 148 1 
150 2 90 2 151 1 170 4 199 4 217 1 21 4 220 1 204 2 258 2 206 1 99 2 70 1 30 2 133 1 136 1 183 1 78 1 227 1 108 1 112 2 209 1 185 1 186 2 55 1 333 1 292 1 232 1 139 1 86 2 248 1 274 1 249 1 118 1 250 1 352 1 17 4 39 1 148 1 
5 1 6 1 322 1 238 3 93 1 240 1 41 2 9 1 187 1 42 1 156 1 137 3 177 1 233 1 100 1 222 1 169 2 304 2 28 6 132 1 120 1 236 1 295 1 277 1 31 2 286 1 
92 1 127 1 65 2 322 4 238 6 93 2 255 1 41 1 22 3 203 1 281 3 156 2 157 1 160 1 304 1 28 14 132 1 31 4 286 11 32 1 5 11 269 1 111 1 187 2 12 1 138 1 137 8 196 2 169 2 120 2 236 2 277 2 295 1 
251 1 60 1 322 1 0 1 93 1 238 1 255 1 324 1 326 1 156 1 71 1 157 1 303 1 241 1 304 1 28 2 132 1 329 1 343 1 31 2 308 1 50 1 107 1 227 1 52 1 110 1 310 1 80 1 113 1 184 1 333 2 12 1 232 1 137 1 57 1 235 1 120 1 236 1 277 1 39 2 
92 1 322 7 0 2 238 13 93 3 240 1 203 2 41 5 42 2 156 3 157 1 241 2 329 2 47 2 48 2 103 1 286 7 5 7 50 2 6 1 107 1 52 2 110 1 113 1 9 1 167 2 333 3 12 1 169 6 57 2 120 3 295 5 251 1 65 2 255 1 23 2 177 2 71 1 303 1 222 2 74 1 304 3 28 27 132 3 343 2 31 6 308 2 227 1 310 1 184 1 187 5 232 1 137 14 194 2 196 2 87 1 235 1 236 3 277 3 39 3 
18 1 338 1 0 2 152 1 93 1 238 1 323 1 156 1 208 1 157 1 303 2 241 3 28 2 132 1 329 2 31 2 346 1 104 1 50 2 107 2 52 1 110 1 81 1 12 1 137 1 235 2 120 1 236 1 276 1 277 1 
171 1 322 1 65 1 93 1 238 2 255 1 41 1 203 1 156 1 71 1 28 3 132 1 163 1 31 2 286 1 5 1 227 1 310 1 187 1 333 1 137 1 196 1 169 1 336 1 120 1 236 1 277 1 295 1 39 1 
5 1 92 1 322 1 93 1 187 1 156 1 233 1 137 2 196 1 169 1 328 1 28 2 132 1 120 1 236 1 277 1 31 2 286 1 
5 1 322 1 93 1 238 2 41 1 203 1 156 1 233 1 169 1 283 1 28 2 132 1 120 1 236 1 277 1 295 1 31 2 286 1 
65 1 322 2 92 1 93 1 238 2 203 1 41 1 156 1 28 4 132 1 31 2 286 2 5 2 187 1 137 2 233 1 196 1 169 2 120 1 236 1 277 1 295 1 
5 1 92 1 322 1 93 1 187 1 156 1 137 2 208 1 196 1 169 1 328 1 28 2 132 1 120 1 236 1 277 1 31 2 286 1 
5 1 322 1 93 1 238 2 41 1 203 1 156 1 208 1 169 1 283 1 28 2 132 1 120 1 236 1 277 1 295 1 31 2 286 1 
65 1 322 2 92 1 93 1 238 2 203 1 41 1 156 1 208 1 28 4 132 1 31 2 286 2 5 2 187 1 137 2 196 1 169 2 120 1 236 1 277 1 295 1 
65 1 322 2 92 1 93 1 238 2 203 1 41 1 156 1 28 4 132 1 31 2 286 2 5 2 187 1 137 2 196 1 169 2 120 1 236 1 277 1 295 1 
0 1 93 1 238 1 156 1 157 1 303 1 241 1 304 1 28 2 132 1 329 1 343 1 31 2 308 1 50 1 107 1 52 1 110 1 113 1 167 1 333 1 12 1 137 1 232 1 57 1 235 1 120 1 236 1 277 1 39 1 
0 1 218 1 93 1 238 1 156 1 303 1 241 1 304 1 28 1 132 1 329 1 31 2 50 1 107 1 52 1 110 1 113 1 230 1 333 1 12 1 232 1 57 1 235 1 120 1 236 1 277 1 353 1 39 1 
65 1 322 2 92 1 93 1 238 2 255 1 203 1 41 1 156 1 28 4 132 1 31 2 286 2 5 2 187 1 137 2 196 1 169 2 120 1 236 1 277 1 295 1 
322 2 65 1 0 1 238 2 93 1 41 1 203 1 23 1 156 1 303 1 241 1 28 4 132 1 329 1 343 1 31 2 286 2 5 2 308 1 50 1 107 1 52 1 187 1 167 1 333 1 137 2 196 1 141 1 169 1 57 1 235 1 120 1 236 1 295 1 277 1 39 1 
171 1 92 1 65 1 322 1 238 1 93 1 255 1 203 1 156 1 71 1 28 3 132 1 31 2 286 1 5 1 227 1 310 1 187 1 333 1 137 2 196 1 169 1 336 1 120 1 236 1 145 1 295 1 277 1 39 1 
127 1 65 1 92 1 200 1 93 2 238 5 1 1 41 1 22 1 203 1 281 2 156 2 25 1 180 1 28 9 31 4 330 1 269 1 211 1 187 1 349 1 137 4 314 1 196 1 169 2 317 1 236 2 277 2 295 1 
296 1 92 1 65 2 238 9 93 3 41 1 1 3 22 2 203 1 281 2 156 3 207 1 72 1 180 1 28 20 264 1 306 1 31 6 330 1 269 2 311 1 348 2 211 2 187 2 349 2 137 11 314 1 196 2 115 1 169 2 317 1 236 3 295 1 277 3 
127 1 65 1 92 1 200 1 93 2 238 5 1 1 41 1 22 1 203 1 281 2 156 2 72 1 180 1 28 9 31 4 330 1 269 1 211 1 187 1 349 1 137 4 314 1 196 1 169 2 317 1 236 2 277 2 295 1 
127 1 65 1 92 1 200 1 93 2 238 5 1 1 41 1 22 1 203 1 281 2 156 2 72 1 180 1 28 9 31 4 330 1 269 1 211 1 187 1 349 1 137 4 314 1 196 1 169 2 317 1 236 2 277 2 295 1 
296 1 127 2 65 6 92 6 93 2 238 22 240 1 1 3 41 6 22 4 203 6 42 1 281 4 207 1 156 2 177 1 72 1 222 1 180 1 28 46 264 1 306 1 31 4 330 1 6 1 269 2 111 2 311 1 348 1 9 1 211 1 187 7 349 1 137 24 314 1 196 6 115 1 169 12 317 1 236 2 277 2 295 7 
18 1 0 1 128 1 152 2 153 1 93 1 238 1 255 1 154 1 325 1 156 1 69 1 263 1 157 1 303 2 241 1 28 2 132 1 329 1 31 2 50 1 107 2 227 2 333 2 12 1 137 1 235 2 120 1 236 1 277 1 39 2 
61 1 62 1 107 2 239 1 95 1 221 1 229 1 131 1 303 2 141 1 179 1 241 1 75 1 235 2 316 1 4 1 329 1 307 1 278 2 
61 1 62 1 107 1 239 1 95 1 131 1 303 1 179 1 335 1 241 1 75 1 235 1 316 1 4 1 329 1 307 1 278 2 
164 1 50 1 104 1 107 1 0 1 110 1 239 1 81 1 229 1 313 1 303 1 241 1 235 1 329 1 
61 1 62 1 107 1 239 1 95 1 221 1 229 1 131 1 303 1 179 1 241 1 75 1 235 1 316 1 4 1 329 1 307 1 278 2 
53 1 
206 1 139 1 78 1 100 1 220 1 123 1 354 1 
151 1 19 1 170 1 199 1 220 1 2 1 258 1 206 1 133 1 287 1 78 2 186 1 139 1 274 1 35 1 17 1 148 1 
151 1 50 1 107 1 0 2 52 1 110 1 96 1 303 1 241 2 143 1 274 1 235 1 242 1 29 1 329 1 133 1 148 1 
151 2 199 1 170 1 296 1 65 2 94 1 220 5 22 1 203 2 176 1 258 6 281 1 43 5 206 8 207 1 264 1 133 2 306 1 287 3 78 5 288 1 269 1 347 5 311 1 186 1 187 2 139 2 56 1 196 2 294 2 274 2 119 1 295 2 17 1 148 2 
151 1 199 1 40 1 171 1 94 1 220 2 42 1 206 2 177 1 71 1 222 1 133 1 227 1 310 1 84 1 187 2 333 1 232 1 142 1 87 1 234 1 294 2 274 1 121 1 295 1 39 1 17 1 148 1 
151 1 78 1 220 1 206 1 139 1 274 1 133 1 123 1 354 1 148 1 
287 5 65 2 78 5 347 5 94 1 220 5 203 2 187 2 258 10 43 5 206 5 194 1 196 2 294 2 295 2 
199 1 170 1 139 1 78 1 186 1 17 1 
151 2 170 4 199 3 252 1 0 1 219 1 220 2 129 1 66 1 176 2 68 1 206 2 44 1 303 4 241 1 329 1 133 1 50 1 104 1 107 4 110 2 81 1 186 2 274 2 235 4 119 2 237 2 17 3 148 2 
171 2 0 1 238 1 93 1 156 1 71 2 303 1 73 1 241 1 304 1 28 1 132 1 343 1 329 1 31 2 308 1 50 1 107 1 227 2 52 1 110 1 310 2 167 1 333 3 12 1 142 1 57 1 235 1 120 1 236 1 277 1 39 3 
151 1 6 1 287 2 78 4 347 2 220 2 176 1 258 4 43 2 206 1 139 2 274 1 119 1 133 1 148 1 
51 1 45 1 
51 1 45 1 
51 1 45 1 
51 1 45 1 
51 1 45 1 
51 1 45 1 
51 1 45 1 
51 1 45 1 
267 1 14 1 
6 1 92 1 238 4 93 2 240 1 41 2 348 1 9 1 187 1 42 1 156 2 137 4 177 1 222 1 169 3 28 8 236 2 295 1 277 2 31 4 
137 3 177 1 6 1 100 1 222 1 169 2 238 3 28 6 240 1 41 2 295 1 9 1 187 1 42 1 
65 1 92 1 238 2 93 1 41 1 203 1 187 1 156 1 137 2 168 1 196 1 169 2 28 4 236 1 295 1 277 1 31 2 
127 1 65 1 92 1 269 1 238 4 41 1 203 1 22 1 281 2 187 1 137 3 196 1 169 2 28 7 295 1 
92 4 65 2 127 1 238 12 93 2 240 1 22 2 203 2 41 5 42 1 281 2 156 2 177 2 222 2 160 1 28 23 31 4 6 1 33 1 111 1 348 2 9 1 187 3 137 11 196 2 169 9 236 2 295 3 277 2 
238 1 28 1 281 1 
137 1 28 1 22 1 
65 1 92 1 93 1 238 3 203 1 41 2 187 1 156 1 137 3 168 1 194 1 196 1 169 3 28 6 236 1 277 1 295 1 31 2 
296 1 92 1 65 2 238 6 93 1 22 1 203 2 41 1 281 1 207 1 156 1 28 12 264 1 306 1 31 2 269 1 311 1 187 2 137 6 314 1 196 2 169 2 236 1 277 1 295 2 
92 1 238 3 41 1 42 1 187 1 137 3 177 1 222 1 169 2 28 6 295 1 
92 1 33 1 238 2 93 1 240 1 41 1 348 1 9 1 156 1 137 1 177 1 222 1 169 2 28 3 236 1 277 1 31 2 
92 2 93 1 238 5 41 3 42 1 187 2 156 1 177 2 137 5 314 1 222 2 87 1 169 5 28 10 236 1 277 1 295 2 31 2 
92 1 93 1 187 1 156 1 137 2 314 1 196 1 169 1 28 2 236 1 277 1 31 2 
65 1 92 1 238 2 93 1 41 1 203 1 187 1 156 1 137 2 314 1 196 1 169 2 28 4 236 1 295 1 277 1 31 2 
92 1 33 1 200 1 238 2 93 3 348 1 41 1 156 3 177 1 137 1 314 1 222 1 169 2 28 3 236 3 277 3 31 6 
125 1 127 1 65 3 92 5 200 1 238 18 93 5 240 1 280 1 22 3 203 3 41 7 42 2 281 4 156 5 177 3 222 3 28 34 31 10 6 1 33 1 269 1 348 2 9 1 187 5 137 16 168 1 314 1 196 3 169 12 236 5 122 1 277 5 295 5 
238 4 93 1 240 1 22 1 41 2 281 1 42 1 207 1 156 1 177 1 222 1 28 8 31 2 6 1 269 1 9 1 187 1 137 4 314 1 169 2 236 1 295 1 277 1 
127 1 65 1 92 1 238 5 93 2 240 1 41 2 22 1 42 1 281 2 207 1 156 2 177 1 222 1 28 11 31 4 6 1 269 1 9 1 187 2 137 6 314 1 168 1 196 1 169 3 236 2 295 1 277 2 
296 1 92 1 65 2 238 10 93 3 240 1 22 1 203 2 41 3 42 1 281 1 207 1 156 3 177 1 222 1 28 19 264 1 306 1 31 6 6 1 269 1 311 1 348 1 9 1 187 3 137 9 168 1 314 1 196 2 169 4 236 3 277 3 295 3 
296 1 92 2 65 2 238 7 93 3 240 1 22 1 203 1 41 3 42 1 281 1 207 1 156 3 177 1 222 1 28 17 264 1 306 1 31 6 6 1 269 1 311 1 348 1 9 1 187 3 137 10 168 1 314 1 196 2 169 5 236 3 277 3 295 2 
238 4 93 1 240 1 22 1 41 2 281 1 42 1 207 1 156 1 177 1 222 1 28 8 31 2 6 1 269 1 9 1 187 1 137 4 314 1 169 2 236 1 295 1 277 1 
296 1 92 1 65 2 238 6 93 1 22 1 203 2 41 1 281 1 207 1 156 1 28 12 264 1 306 1 31 2 269 1 311 1 187 2 137 6 314 1 196 2 169 2 236 1 277 1 295 2 
296 1 92 2 65 2 238 8 93 4 240 1 22 1 203 1 41 3 42 1 281 1 207 1 156 4 177 1 222 1 28 18 264 1 306 1 31 8 6 1 269 1 311 1 348 2 9 1 187 3 137 10 168 1 314 1 196 2 169 5 236 4 277 4 295 2 
296 1 92 3 65 3 200 1 238 7 93 4 22 1 203 2 41 3 281 1 207 1 156 4 28 16 264 1 306 1 31 8 269 1 311 1 348 2 187 3 137 9 314 1 196 3 169 6 236 4 277 4 295 2 
92 3 238 4 240 2 41 3 9 1 42 1 187 1 177 3 137 3 222 3 169 6 28 7 295 1 
296 1 92 1 65 2 200 1 238 8 93 4 240 1 22 1 203 1 41 3 42 1 281 1 207 1 156 4 177 1 222 1 28 18 264 1 306 1 31 8 6 1 269 1 311 1 348 2 9 1 187 3 137 10 314 1 196 2 169 4 236 4 277 4 295 2 
333 1 266 1 227 1 304 1 249 1 83 1 39 1 
89 1 266 1 227 1 174 1 83 1 189 1 333 1 116 1 304 1 249 1 39 1 124 1 
50 1 104 1 107 1 0 1 100 1 303 1 241 1 235 1 110 1 329 1 81 1 
0 1 71 1 303 1 241 1 304 1 329 1 308 1 50 1 107 1 227 1 52 1 110 1 310 1 184 1 113 1 333 2 232 1 57 1 235 1 39 2 
217 1 0 3 339 1 70 1 71 1 303 1 241 1 304 1 162 1 329 1 308 1 50 2 107 1 227 2 52 2 310 2 113 1 184 1 333 2 232 2 57 1 235 1 237 1 39 2 
217 1 0 3 339 1 70 1 71 1 303 1 241 1 304 1 162 1 329 1 50 2 107 1 227 2 52 2 310 2 113 1 184 1 230 1 333 2 232 2 57 1 235 1 237 1 39 2 
170 1 199 2 171 1 40 1 0 4 254 1 339 1 71 1 303 1 241 1 162 1 329 1 50 1 105 1 227 1 107 1 108 1 78 1 52 1 310 1 84 1 190 1 333 1 232 1 139 1 142 1 234 1 143 1 235 1 237 1 39 1 17 2 
170 1 199 2 171 1 40 1 0 4 339 1 71 1 303 1 241 1 162 1 329 1 50 1 105 1 227 1 107 1 108 1 78 1 228 1 52 1 310 1 84 1 333 1 232 1 139 1 142 1 234 1 143 1 235 1 237 1 39 1 17 2 
107 1 303 1 241 1 235 1 329 1 101 1 
346 1 50 1 107 1 0 1 52 1 110 1 303 1 241 2 235 1 242 1 329 1 276 1 102 1 
92 1 322 1 0 1 93 2 238 6 240 1 41 3 42 2 325 1 156 2 241 1 329 1 47 1 286 1 5 1 50 1 6 1 107 1 52 1 113 1 9 1 167 1 333 2 57 1 169 4 120 2 295 3 255 1 23 1 177 2 71 1 303 1 222 2 304 3 28 13 132 2 343 1 31 4 308 1 227 1 310 1 184 1 187 3 232 1 137 7 141 1 87 1 235 1 236 2 277 2 39 2 
151 2 199 3 170 2 172 1 0 2 220 1 66 1 206 1 303 1 161 1 133 2 105 1 78 1 107 1 108 1 228 1 110 1 186 1 188 1 192 1 139 1 143 1 235 1 274 2 123 1 17 3 354 1 148 2 
50 1 105 1 107 1 0 2 52 1 10 1 303 1 241 2 235 1 242 1 29 1 329 1 101 1 
346 1 338 1 104 1 50 2 107 2 0 2 52 1 110 1 323 1 81 1 303 2 141 1 241 3 235 2 329 2 276 1 
346 1 338 1 50 1 107 1 0 1 52 1 54 1 323 1 303 1 241 2 235 1 329 1 276 1 
107 1 62 1 110 1 95 1 303 1 241 1 179 1 235 1 329 1 278 1 
50 1 107 2 128 1 0 1 263 1 141 1 303 2 241 1 235 2 75 1 329 1 
338 1 0 4 128 1 323 1 97 1 303 2 241 4 329 3 346 1 50 3 104 1 107 3 52 1 110 1 81 1 141 1 235 3 37 1 276 1 
321 1 338 1 0 4 128 1 323 1 303 2 241 4 329 3 346 1 50 3 104 1 107 3 52 1 110 1 81 1 141 1 235 3 37 1 276 1 
0 1 71 1 303 1 241 1 304 1 329 1 50 1 107 1 227 1 52 1 110 1 310 1 184 1 113 1 230 1 333 2 232 1 57 1 235 1 39 2 
346 1 50 1 107 1 0 1 52 1 303 1 241 2 235 1 242 1 329 1 276 1 237 1 102 1 
126 1 63 1 8 1 304 1 318 1 
199 2 126 2 78 1 108 1 217 1 63 1 106 1 8 2 232 1 139 1 70 1 334 1 304 1 315 1 161 1 318 2 224 1 17 2 183 1 
333 1 69 1 126 1 227 1 63 1 8 1 153 1 154 1 39 1 
106 1 63 1 315 1 
272 1 332 1 341 1 100 1 
272 1 332 1 291 1 246 1 341 1 344 1 271 1 
331 1 344 1 34 1 
59 1 246 1 270 1 271 3 259 2 272 1 11 1 332 1 291 1 341 1 344 3 134 1 
272 1 332 1 291 1 246 1 341 1 344 2 271 2 279 1 312 1 
59 1 246 1 62 1 271 1 155 1 272 1 291 1 158 1 344 1 307 1 278 1 
272 1 291 1 59 1 246 1 341 1 344 1 271 1 
332 1 291 1 59 1 246 1 341 2 344 1 271 1 
272 1 291 2 59 1 246 2 77 1 341 1 297 1 344 2 271 2 260 1 
59 1 246 1 271 3 155 1 332 1 272 2 291 1 261 1 341 1 344 3 214 1 182 1 279 2 
59 1 246 1 62 1 271 2 272 1 332 1 291 1 341 1 179 1 117 1 4 1 344 2 307 1 278 2 279 1 
59 1 246 2 271 4 155 1 312 1 332 1 272 2 291 2 341 1 344 4 182 1 49 1 279 2 
272 1 332 1 291 1 59 1 246 1 341 1 344 1 271 1 
246 1 270 1 271 4 155 1 259 1 11 1 332 2 272 3 291 1 341 2 344 4 182 1 149 1 279 2 
59 1 246 1 271 2 272 1 332 1 291 1 262 1 193 1 341 1 344 2 197 1 279 1 
59 1 76 1 246 1 270 2 271 3 259 2 11 1 272 1 332 1 291 1 341 1 344 3 
272 2 268 1 284 1 166 2 
13 1 291 1 59 1 246 1 344 1 271 1 
272 1 332 1 261 1 291 1 59 1 246 1 341 1 344 2 271 2 279 1 
91 1 
272 1 332 1 291 1 59 1 246 1 341 1 344 1 271 1 
59 1 246 1 271 3 259 1 332 1 272 1 291 1 261 1 341 1 344 3 279 1 
272 1 182 1 155 1 149 1 
272 1 341 1 

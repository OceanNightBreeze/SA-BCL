#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) 286 19 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) 286 21 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (176,317) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (120,245) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (120,245) 149 118 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (120,245) 149 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 34 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) (195,267,298) 3 316 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 69 269 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 69 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 69 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 69 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 69 269 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 11 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (176,317) (176,317) 74 (115,262) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (176,317) (176,317) 74 (139,318) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (176,317) (176,317) (195,267,298) 286 31 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 291 2 169 9 242 1 297 1 127 9 81 4 129 6 130 5 207 2 209 1 10 2 14 1 141 2 264 1 98 1 56 2 279 3 322 1 281 1 187 2 27 1 112 1 327 2 28 1 233 1 287 1 332 1 
291 2 168 1 169 9 242 1 297 1 127 9 81 4 129 6 130 5 207 2 209 1 10 2 14 1 141 2 264 1 98 1 56 2 279 3 322 1 281 1 187 2 27 1 112 1 327 2 28 1 233 1 287 1 332 1 
291 2 168 1 169 10 242 1 297 1 127 10 81 5 129 7 130 6 207 2 209 1 10 2 14 1 141 2 264 1 98 1 56 2 279 4 322 1 281 1 187 2 27 1 112 1 327 2 28 1 233 1 287 1 332 1 
291 2 168 1 169 7 242 1 297 1 127 7 81 3 129 4 130 4 207 1 209 1 10 2 14 1 141 2 264 1 98 1 56 2 279 2 322 1 187 2 27 1 112 1 327 2 28 1 233 1 287 1 332 1 
291 1 169 4 127 4 81 2 129 3 279 1 130 3 281 1 187 1 207 2 327 1 28 1 209 1 233 1 141 1 14 1 287 1 56 1 
169 2 127 2 249 1 297 1 130 1 187 1 327 1 209 1 10 1 48 1 14 1 141 1 287 1 266 1 332 1 56 1 
169 3 127 3 81 1 129 1 279 1 130 2 322 1 187 2 209 1 10 1 14 1 287 1 56 2 
291 1 242 1 169 9 127 9 81 4 129 7 130 5 279 3 322 1 281 1 187 2 207 2 112 1 327 1 28 1 136 1 209 1 10 1 305 1 233 1 141 1 14 1 287 1 56 2 
291 1 242 1 169 9 127 9 81 4 129 7 130 5 279 3 322 1 281 1 187 2 207 2 112 1 327 1 28 1 136 1 209 1 10 1 305 1 233 1 141 1 14 1 287 1 56 2 
107 1 34 1 42 1 
107 1 60 2 26 1 
244 2 220 2 126 2 128 2 188 1 198 2 113 2 77 1 
240 1 0 1 244 3 79 1 171 2 126 2 128 2 132 1 301 1 175 1 91 1 213 1 50 1 17 1 183 2 20 2 220 3 277 1 103 1 24 1 324 1 110 1 325 1 188 1 113 2 115 1 229 1 158 2 30 1 117 1 66 1 234 1 122 1 74 1 198 2 199 2 77 1 
244 1 220 1 126 1 128 1 181 1 62 1 290 1 198 1 113 1 77 1 
176 1 244 1 220 1 101 1 128 1 195 1 181 1 267 1 317 1 
176 1 244 1 220 1 126 1 128 1 181 1 267 1 198 1 113 1 317 1 
116 1 80 1 298 1 311 1 54 1 
116 2 319 1 80 1 298 2 107 1 42 1 54 1 29 1 
116 1 298 1 54 1 
220 1 244 1 80 1 126 1 298 1 128 1 84 1 62 1 113 1 116 1 181 1 290 1 198 1 77 1 
107 1 
116 2 80 1 298 2 107 1 42 1 156 1 54 1 29 1 
241 1 80 2 58 1 298 5 107 1 85 1 173 1 88 1 42 1 255 2 29 1 116 5 180 2 196 1 310 2 52 1 144 1 72 1 54 2 
240 1 0 1 220 2 244 2 128 1 301 1 133 1 325 1 113 1 115 1 175 1 328 1 50 1 74 1 17 1 198 1 199 1 148 1 183 1 20 1 
34 1 188 1 
220 2 244 2 126 1 128 2 188 2 113 1 258 1 15 1 198 1 
194 1 239 1 328 1 
0 1 240 1 244 1 220 1 301 1 325 1 188 1 175 1 115 1 307 1 50 1 17 1 74 1 199 1 183 1 20 1 
220 5 244 5 101 1 126 1 128 5 133 2 188 1 113 4 259 1 258 1 214 1 53 1 198 4 148 1 
244 2 220 2 128 2 181 1 36 1 290 1 198 2 113 2 
244 3 220 3 126 1 128 3 133 1 188 1 198 3 113 3 
244 1 220 1 128 1 181 1 290 1 198 1 113 1 
244 1 220 1 126 1 128 1 258 1 15 1 181 1 198 1 113 1 
176 1 244 2 220 2 126 1 286 1 258 1 128 2 181 1 133 1 267 1 198 2 113 2 19 1 148 1 317 1 
244 2 220 2 101 1 128 2 214 1 133 1 188 1 198 1 113 1 
176 1 244 1 220 1 21 1 286 1 128 1 181 1 133 1 267 1 198 1 113 1 148 1 317 1 
220 2 244 2 126 1 128 2 133 1 113 2 328 1 258 1 239 1 198 2 
0 1 240 1 244 1 220 1 301 1 325 1 188 1 175 1 115 1 50 1 17 1 74 1 199 1 183 1 20 1 
318 1 0 1 240 1 244 1 220 1 301 1 188 1 175 1 181 1 50 1 265 1 17 1 74 1 199 1 183 1 218 1 20 1 
171 2 132 2 137 1 178 1 179 1 308 1 213 1 145 1 271 1 276 1 153 1 103 1 24 1 321 1 324 1 110 2 328 2 229 1 158 4 119 1 234 1 194 2 163 1 239 2 
176 1 244 1 220 1 128 1 181 1 36 1 198 1 113 1 
245 1 55 1 
245 1 55 1 
120 1 282 1 
120 1 282 1 
120 1 282 1 
245 1 55 1 
245 1 55 1 
245 1 55 1 
245 1 55 1 
245 1 55 1 
245 1 55 1 
245 1 55 1 
245 1 55 1 
116 1 245 1 118 1 298 1 108 1 149 1 55 1 
245 1 108 1 149 1 55 1 
291 1 141 1 327 1 
249 1 141 1 327 1 
291 2 184 1 249 1 141 3 268 1 254 1 
291 1 249 1 141 2 268 1 254 1 64 1 
291 1 249 1 141 2 268 1 254 2 
80 4 298 5 42 1 255 1 211 1 306 1 180 1 97 1 308 1 310 1 52 2 54 1 217 2 153 1 58 1 22 1 107 2 280 1 321 1 60 3 323 2 26 1 227 1 114 1 284 2 29 1 116 5 65 1 119 1 197 1 196 3 288 1 
80 7 298 9 4 1 300 1 86 5 173 1 42 1 255 2 306 3 180 2 97 2 308 3 311 5 310 2 52 6 273 1 54 6 153 3 58 1 22 2 107 5 321 3 60 9 323 6 26 3 326 1 227 1 284 6 29 1 116 9 119 3 71 1 288 4 196 8 333 1 
80 2 298 3 173 1 42 1 255 1 180 1 306 1 97 1 308 1 310 1 52 2 217 1 22 1 153 1 107 3 321 1 323 2 60 4 26 2 114 1 284 2 116 3 119 1 197 1 196 3 288 1 
80 3 298 4 173 1 42 1 255 1 180 1 306 2 97 1 308 2 310 1 52 4 273 1 217 2 22 1 153 2 107 4 321 2 60 7 323 4 26 3 114 1 284 4 116 4 119 2 71 1 197 1 196 5 288 2 333 1 
34 1 73 1 
301 1 89 1 
150 1 
240 1 0 1 301 1 
159 1 301 1 
240 1 301 1 
0 1 240 1 150 1 295 1 301 1 67 1 73 2 
294 1 153 1 205 1 204 1 172 1 321 1 132 4 110 3 158 7 162 1 179 2 285 2 37 1 312 1 165 1 99 1 276 3 
294 1 153 1 205 1 204 1 172 1 321 1 132 4 110 3 158 7 162 1 179 2 285 2 37 1 312 1 165 1 99 1 276 3 
294 1 153 1 223 1 204 1 205 1 172 1 321 1 132 4 110 3 158 7 162 1 179 2 285 2 37 1 312 1 165 1 99 1 276 3 
294 1 171 2 204 1 205 2 172 1 206 1 132 16 8 1 94 4 179 5 306 3 308 3 213 1 312 2 99 2 276 10 153 4 103 1 59 1 24 1 321 4 110 15 157 1 229 1 158 31 161 1 329 1 119 3 285 3 162 5 37 1 165 2 75 3 167 1 
294 1 171 4 83 1 205 1 204 1 172 1 132 5 179 3 213 2 312 1 99 1 276 4 153 1 154 1 103 2 24 2 321 1 110 4 229 2 158 9 285 2 162 1 165 1 167 1 
291 1 169 2 39 1 127 2 249 1 129 1 130 1 209 1 46 1 10 1 95 1 96 1 261 1 260 1 14 1 141 2 50 1 314 1 270 1 17 1 183 1 147 1 20 1 56 1 184 1 187 1 327 1 189 1 287 1 199 1 
291 1 169 3 39 1 201 1 127 3 249 1 299 1 129 2 130 1 209 1 10 1 95 1 96 1 261 1 260 1 141 2 50 1 270 1 17 1 183 1 147 1 20 1 56 1 184 1 187 1 327 1 189 1 191 1 287 1 199 1 
291 1 169 2 39 1 127 2 249 1 299 1 129 2 130 1 209 1 10 1 95 1 261 1 260 1 141 2 50 1 270 1 17 1 183 1 147 1 20 1 184 1 327 1 191 1 287 1 199 1 
240 1 169 1 201 1 127 1 301 1 187 1 44 1 175 1 10 2 95 2 192 1 261 2 260 2 50 1 331 1 182 1 17 1 238 1 315 1 199 1 183 1 56 1 20 1 
291 1 39 1 169 1 184 1 249 1 127 1 299 1 187 1 327 1 189 1 10 1 95 1 96 1 141 2 14 1 260 1 261 1 50 1 314 1 17 1 270 1 199 1 147 1 183 1 56 1 20 1 
256 1 
240 1 244 1 3 1 298 2 128 1 87 1 301 1 43 1 253 1 44 1 175 2 255 1 176 1 45 1 180 1 97 1 181 1 50 1 310 1 267 1 52 1 17 1 316 1 183 2 54 2 317 1 20 2 220 1 101 1 58 1 29 1 116 2 190 1 195 1 196 1 331 1 199 2 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
244 1 220 1 101 1 298 2 3 1 128 1 156 1 43 1 253 1 29 1 176 1 116 2 195 1 181 1 267 1 54 1 316 1 317 1 
244 1 220 1 101 1 298 1 58 1 3 1 128 1 43 1 253 1 255 1 176 1 116 1 180 1 195 1 181 1 310 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
220 1 244 1 101 1 298 1 3 1 128 1 43 1 253 1 176 1 116 1 195 1 181 1 267 1 316 1 317 1 
244 1 220 1 101 1 298 1 58 1 3 1 128 1 43 1 253 1 255 1 176 1 116 1 180 1 195 1 181 1 310 1 267 1 316 1 317 1 
294 1 171 2 153 1 103 1 204 1 172 1 24 1 321 1 132 3 324 1 110 3 188 2 328 1 137 1 229 1 158 6 285 1 179 2 194 1 234 1 213 1 34 1 312 1 165 1 239 1 276 2 
171 4 132 8 91 1 303 1 93 1 94 3 179 1 306 2 308 2 213 2 146 1 276 2 153 2 224 1 103 2 24 2 324 2 321 1 110 6 188 1 328 11 229 2 158 14 161 1 329 1 119 1 162 1 330 1 234 1 194 11 122 1 75 3 239 4 
240 1 0 1 244 2 171 2 128 1 41 1 301 1 132 1 133 1 175 1 91 1 93 1 307 1 50 1 213 1 17 1 183 1 148 1 20 1 220 2 222 1 103 1 24 1 324 1 110 1 325 1 188 1 113 1 115 1 229 1 158 2 234 1 122 1 74 1 166 1 199 1 239 1 198 1 
0 2 240 2 244 3 171 6 5 2 172 1 7 1 175 1 91 1 92 2 93 1 179 4 17 2 183 3 20 3 276 8 103 3 24 3 110 10 188 2 113 1 115 2 117 2 119 2 285 1 194 7 122 1 199 3 198 1 294 1 292 1 202 2 299 1 128 1 204 1 301 2 132 10 133 1 306 2 308 2 213 3 50 2 312 1 148 1 220 3 151 1 153 3 321 3 324 3 325 2 328 7 229 3 158 20 162 4 234 3 165 1 74 2 239 7 76 2 
240 2 244 1 171 4 299 1 128 1 6 1 301 3 132 1 133 1 44 1 175 2 91 1 46 1 137 1 304 1 257 1 50 2 213 2 17 2 183 8 20 8 220 1 103 2 225 1 155 1 24 2 324 2 110 1 226 1 113 1 229 2 158 2 66 2 234 2 331 1 121 1 122 1 198 1 199 7 
244 1 126 1 171 2 248 1 128 1 132 1 93 1 179 1 258 1 306 1 308 1 213 1 276 1 220 1 153 1 103 1 24 1 324 1 321 1 110 2 113 1 328 1 229 1 158 3 119 1 194 1 234 1 239 1 198 1 
171 2 153 1 103 1 24 1 324 1 132 2 328 1 137 1 229 1 158 2 162 1 194 1 234 1 308 1 213 1 163 1 239 1 276 1 
171 2 103 1 24 1 324 1 321 1 110 2 328 1 137 1 229 1 158 2 119 1 179 1 194 1 234 1 213 1 239 1 271 1 276 1 
171 2 132 2 137 1 179 1 306 1 308 1 213 1 276 2 153 1 103 1 24 1 324 1 321 1 110 2 328 2 229 1 158 4 119 1 162 1 234 1 194 2 239 2 
171 2 153 1 103 1 24 1 324 1 132 2 226 1 328 1 229 1 158 2 162 1 194 1 234 1 308 1 213 1 163 1 239 1 276 1 
171 2 103 1 24 1 324 1 321 1 110 2 226 1 328 1 229 1 158 2 119 1 179 1 194 1 234 1 213 1 239 1 271 1 276 1 
171 2 132 2 179 1 306 1 308 1 213 1 276 2 153 1 103 1 24 1 324 1 321 1 110 2 226 1 328 2 229 1 158 4 119 1 162 1 234 1 194 2 239 2 
171 2 132 2 179 1 306 1 308 1 213 1 276 2 153 1 103 1 24 1 324 1 321 1 110 2 328 2 229 1 158 4 119 1 162 1 234 1 194 2 239 2 
240 1 0 1 244 1 171 2 132 1 301 1 175 1 91 1 50 1 213 1 17 1 183 1 20 1 220 1 103 1 24 1 324 1 110 1 325 1 188 1 115 1 229 1 158 2 117 1 234 1 122 1 74 1 199 1 
240 1 0 1 244 1 171 2 301 1 175 1 90 1 91 1 181 1 50 1 213 1 265 1 17 1 183 1 218 1 20 1 318 1 220 1 103 1 24 1 324 1 110 1 188 1 229 1 158 1 234 1 74 1 199 1 
171 2 132 2 93 1 179 1 306 1 308 1 213 1 276 2 153 1 103 1 24 1 324 1 321 1 110 2 328 2 229 1 158 4 119 1 162 1 234 1 194 2 239 2 
0 1 240 1 244 1 171 2 132 2 301 1 92 1 46 1 179 1 306 1 308 1 50 1 213 1 17 1 183 1 276 2 20 1 220 1 153 1 103 1 24 1 321 1 324 1 110 2 325 1 115 1 328 2 229 1 158 4 117 1 119 1 162 1 194 2 234 1 74 1 239 2 199 1 
244 1 126 1 171 2 128 1 132 2 93 1 258 1 306 1 308 1 213 1 276 1 220 1 153 1 103 1 186 1 24 1 321 1 324 1 110 1 113 1 328 1 229 1 158 3 119 1 162 1 234 1 194 1 198 1 239 1 
229 1 200 1 171 2 154 1 69 1 103 1 24 1 213 1 269 1 
229 1 200 1 171 2 154 1 69 1 103 1 24 1 213 1 269 1 
229 1 200 1 171 2 154 1 69 1 103 1 24 1 213 1 269 1 
229 1 200 1 171 2 154 1 69 1 103 1 24 1 213 1 269 1 
229 1 200 1 171 2 154 1 69 1 103 1 24 1 213 1 269 1 
240 1 244 2 171 2 128 2 301 1 132 1 210 1 91 1 93 1 47 1 257 1 212 1 50 1 213 1 17 1 183 2 20 2 220 2 103 1 225 1 24 1 324 1 109 1 110 1 229 1 158 2 33 1 66 2 234 1 122 1 199 2 
291 1 184 1 249 1 320 1 299 1 106 1 252 1 327 1 46 1 96 1 141 2 261 1 50 1 17 1 270 1 199 2 183 2 147 1 20 2 
291 1 184 1 249 1 320 1 299 1 104 1 327 1 96 1 141 2 261 1 50 1 270 1 17 1 199 1 183 1 147 1 20 1 
240 1 123 1 301 1 252 1 44 1 175 1 261 1 50 1 182 1 331 1 17 1 199 1 183 1 20 1 
291 1 184 1 249 1 320 1 299 1 106 1 252 1 327 1 96 1 141 2 261 1 50 1 270 1 17 1 199 1 183 1 147 1 20 1 
18 1 
107 1 85 1 196 1 34 1 52 1 144 1 42 1 
298 1 42 1 208 1 255 1 180 1 310 1 52 1 54 1 58 1 105 1 107 2 60 1 26 1 228 1 29 1 116 1 196 1 
240 3 0 3 170 2 85 1 89 3 255 4 175 1 11 1 12 1 180 4 97 2 262 2 17 3 272 2 100 2 183 3 20 3 107 8 25 2 111 1 26 6 29 3 284 6 116 5 119 2 196 9 35 2 199 3 38 2 125 2 298 5 301 6 42 2 46 1 45 1 306 2 308 2 142 1 50 4 310 4 144 1 52 8 216 2 54 5 58 4 153 2 323 6 60 12 321 2 160 1 67 1 73 2 76 2 
246 1 298 1 42 2 255 2 45 1 94 1 180 2 306 2 97 1 309 1 308 2 310 2 52 5 216 2 54 1 58 2 153 2 107 5 60 6 323 5 321 2 25 1 26 3 29 1 284 5 116 1 232 1 161 1 32 1 119 2 289 1 196 8 70 1 236 1 75 1 
244 1 126 1 298 1 128 1 84 1 172 1 255 1 180 1 181 1 310 1 312 1 52 2 216 2 220 1 219 1 58 1 153 2 321 1 25 1 62 1 113 1 283 1 116 1 196 2 165 1 290 1 198 1 77 1 
58 1 85 1 107 1 42 1 255 1 180 1 196 1 310 1 144 1 52 1 
153 2 107 5 323 5 60 10 321 2 25 1 26 5 284 5 119 2 306 2 308 2 196 5 52 5 216 2 76 1 
116 1 298 1 107 1 42 1 54 1 29 1 
240 1 298 3 87 1 301 1 251 1 173 1 9 1 44 1 255 2 175 2 45 2 180 2 97 2 142 2 50 1 310 2 52 2 17 1 183 4 54 4 20 4 58 1 111 1 29 2 116 3 190 1 196 2 331 1 199 4 
0 1 240 1 244 3 79 1 171 2 126 2 128 2 301 1 175 1 91 1 213 1 50 1 17 1 183 1 20 1 220 3 103 1 24 1 324 1 110 1 325 1 188 1 113 2 115 1 229 1 158 1 117 1 234 1 74 1 199 1 198 2 77 1 
58 1 107 4 323 2 60 4 26 2 42 2 255 1 284 2 45 1 285 1 180 1 97 1 196 1 310 1 52 2 
138 1 177 1 275 1 
293 1 243 1 177 1 131 1 275 1 
138 1 177 1 275 1 
138 1 177 1 275 1 
177 1 237 1 275 1 
177 1 237 1 275 1 
177 1 237 1 275 1 
177 1 275 1 
245 1 55 1 
294 1 171 4 153 1 103 2 204 1 172 1 24 2 321 1 132 4 110 4 229 2 158 8 285 1 162 1 179 2 213 2 312 1 165 1 167 1 276 3 
294 1 153 1 204 1 172 1 132 3 321 1 110 3 158 6 285 1 179 2 34 1 312 1 165 1 276 2 
171 2 153 1 103 1 24 1 321 1 132 2 110 2 63 1 229 1 158 4 119 1 179 1 162 1 306 1 308 1 213 1 276 2 
153 1 321 1 132 3 110 4 158 7 161 1 119 1 94 2 329 1 179 1 162 1 306 1 308 1 75 1 276 2 
294 1 171 4 204 1 172 1 132 11 303 1 94 2 179 5 306 2 308 2 213 2 312 2 276 9 153 3 103 2 24 2 321 3 110 12 229 2 158 23 231 1 329 1 119 2 285 1 162 4 330 1 165 2 75 2 167 2 
158 1 94 1 110 1 
158 1 132 1 75 1 
171 2 153 1 103 1 24 1 132 3 321 1 110 3 63 1 229 1 158 6 119 1 162 1 179 2 306 1 308 1 213 1 76 1 276 3 
171 2 246 1 132 6 94 1 179 1 306 2 308 2 309 1 213 1 276 2 154 1 153 2 103 1 24 1 321 2 110 6 229 1 158 12 161 1 32 1 232 1 119 2 162 1 70 1 75 1 
153 1 172 1 132 3 321 1 110 3 158 6 179 1 162 1 312 1 165 1 276 2 
294 1 171 2 103 1 204 1 24 1 132 1 110 2 229 1 158 3 231 1 162 1 179 1 213 1 312 1 165 1 167 1 276 2 
219 1 171 2 154 1 153 2 103 1 24 1 172 1 132 5 321 2 110 5 229 1 158 10 179 3 162 2 213 1 312 2 165 2 276 5 
171 2 154 1 153 1 103 1 24 1 132 2 229 1 158 2 162 1 308 1 213 1 276 1 
171 2 154 1 153 1 103 1 24 1 321 1 132 2 110 2 229 1 158 4 119 1 179 1 162 1 306 1 308 1 213 1 276 2 
171 6 154 1 103 3 24 3 132 1 134 1 110 2 229 3 158 3 231 1 179 1 162 1 213 3 312 1 165 1 167 1 276 2 
294 1 171 10 204 1 172 2 132 16 8 1 134 1 94 4 179 7 306 3 308 3 213 5 312 3 276 12 154 1 153 5 103 5 59 1 24 5 321 5 110 18 63 1 157 1 229 5 158 34 231 1 161 1 329 1 119 3 285 1 162 5 165 3 167 2 75 3 
294 1 171 2 204 1 172 1 132 4 94 1 179 2 213 1 312 1 276 2 153 1 154 1 103 1 24 1 321 1 110 4 229 1 158 8 161 1 32 1 285 1 165 1 75 1 
294 1 171 4 204 1 172 1 132 6 94 2 179 2 306 1 308 1 213 2 312 1 276 3 154 1 153 2 103 2 24 2 321 1 110 5 63 1 229 2 158 11 161 1 32 1 329 1 285 1 162 1 165 1 75 1 
294 1 171 6 246 1 204 1 172 1 132 9 94 1 179 3 306 2 309 1 308 2 213 3 312 1 276 4 154 1 153 3 103 3 24 3 321 3 110 10 63 1 229 3 158 19 161 1 32 1 232 1 119 2 285 1 162 1 70 1 165 1 75 1 167 1 
294 1 171 6 246 1 204 1 172 1 132 10 94 1 179 3 306 2 308 2 309 1 213 3 312 1 276 5 154 1 153 3 103 3 24 3 321 2 110 7 63 1 229 3 158 17 161 1 32 1 232 1 119 1 285 1 162 2 70 1 165 1 167 1 75 1 
294 1 171 2 204 1 172 1 132 4 94 1 179 2 213 1 312 1 276 2 153 1 154 1 103 1 24 1 321 1 110 4 229 1 158 8 161 1 32 1 285 1 165 1 75 1 
171 2 246 1 132 6 94 1 179 1 306 2 308 2 309 1 213 1 276 2 154 1 153 2 103 1 24 1 321 2 110 6 229 1 158 12 161 1 32 1 232 1 119 2 162 1 70 1 75 1 
294 1 171 8 246 1 204 1 172 1 132 10 94 1 179 3 306 2 309 1 308 2 213 4 312 1 276 5 154 1 153 3 103 4 24 4 321 2 110 8 63 1 229 4 158 18 232 1 161 1 32 1 119 1 285 1 162 2 70 1 165 1 75 1 167 2 
171 8 246 1 132 9 134 1 94 1 179 3 306 3 309 1 308 3 213 4 276 6 154 1 153 3 103 4 24 4 321 2 110 7 229 4 158 16 232 1 161 1 32 1 119 2 162 3 70 1 75 1 167 2 
294 1 153 1 204 2 172 1 321 1 132 3 110 4 158 7 179 3 162 3 312 3 165 3 276 6 
294 1 171 8 246 1 204 1 172 1 132 10 134 1 94 1 179 3 306 2 309 1 308 2 213 4 312 1 276 4 154 1 153 3 103 4 24 4 321 2 110 8 229 4 158 18 232 1 161 1 32 1 119 1 285 1 162 1 70 1 165 1 75 1 167 2 
244 1 220 1 101 1 296 1 128 1 214 1 188 1 
57 1 220 1 244 1 101 1 185 1 296 1 278 1 128 1 188 1 13 1 214 1 313 1 
240 1 50 1 301 1 34 1 331 1 17 1 44 1 199 1 183 1 175 1 20 1 
240 1 0 1 220 2 244 2 128 1 301 1 133 1 188 1 113 1 175 1 115 1 50 1 74 1 17 1 198 1 199 1 183 1 20 1 
240 1 0 1 220 1 244 1 128 1 301 1 133 1 113 1 115 1 176 1 181 1 50 1 142 1 74 1 17 1 198 1 199 1 183 1 317 1 20 1 
240 1 0 1 318 1 220 1 244 1 128 1 301 1 133 1 113 1 176 1 181 1 50 1 142 1 74 1 17 1 198 1 199 1 183 1 317 1 20 1 
244 1 126 1 298 1 128 1 84 1 301 1 42 1 89 1 139 1 181 1 142 1 183 1 20 1 220 1 107 1 62 1 113 1 116 1 290 1 199 1 198 1 77 1 
244 1 126 1 298 1 128 1 84 1 301 1 42 1 89 1 262 1 181 1 142 1 183 1 20 1 220 1 107 1 62 1 113 1 116 1 290 1 199 1 198 1 77 1 
6 1 50 1 17 1 199 1 183 1 20 1 
0 1 240 2 2 1 221 1 299 1 225 1 6 1 155 1 301 3 175 2 46 1 304 1 66 1 67 1 68 1 50 3 121 1 17 2 199 6 183 7 20 7 
0 1 240 1 244 2 171 4 5 1 172 1 92 1 93 1 179 2 17 1 183 1 20 1 276 2 103 2 24 2 110 3 188 2 113 1 115 1 117 1 285 1 194 1 199 1 198 1 294 1 128 1 204 1 301 1 132 3 133 1 46 1 47 1 213 2 50 1 312 1 220 2 153 1 324 2 321 1 325 1 328 1 229 2 158 6 234 2 74 1 165 1 239 1 
240 1 0 1 125 1 80 1 170 1 298 3 85 1 301 2 42 1 89 1 175 1 255 2 180 2 262 1 50 1 310 2 52 1 144 1 17 1 100 1 272 1 183 1 54 2 20 1 58 2 107 1 111 1 29 1 116 3 196 1 73 1 199 1 38 1 
150 1 0 1 240 1 6 1 301 1 12 1 67 1 50 2 73 1 17 1 199 1 183 1 20 1 
1 1 78 1 240 1 301 1 44 1 175 1 46 1 50 1 331 1 17 1 199 4 183 4 20 4 
0 1 240 1 2 1 221 1 82 1 7 1 301 1 142 1 263 1 50 2 17 1 199 2 183 2 20 2 
249 1 141 1 50 1 17 1 327 1 199 1 147 1 183 1 175 1 20 1 
240 1 46 1 299 1 225 1 50 1 301 1 109 1 17 1 199 2 183 2 20 2 
1 1 240 2 225 1 155 1 301 3 44 1 175 1 46 1 142 1 50 2 331 1 121 1 17 2 199 4 183 5 20 5 
1 1 240 2 225 1 40 1 155 1 301 3 44 1 175 1 46 1 142 1 50 2 331 1 17 2 199 4 183 5 20 5 
240 1 0 1 318 1 220 2 244 2 128 1 301 1 133 1 188 1 113 1 175 1 181 1 50 1 74 1 17 1 198 1 199 1 183 1 218 1 20 1 
0 1 240 1 2 1 221 1 301 1 67 1 68 1 142 1 50 2 17 1 199 1 183 1 20 1 
203 1 23 1 188 1 135 1 174 1 
80 1 298 1 102 1 203 1 23 1 174 1 135 1 176 1 116 1 31 1 286 1 181 1 51 1 267 1 317 1 
244 1 220 1 33 1 128 1 212 1 23 1 174 1 135 1 210 1 
31 1 102 1 174 1 
130 1 287 1 34 1 209 1 
169 1 127 1 130 1 287 1 187 1 209 1 56 1 
10 1 169 1 95 1 
169 3 127 3 130 1 187 1 209 1 14 1 193 1 287 1 164 1 274 1 332 2 56 1 
169 2 127 2 129 1 130 1 287 1 187 1 207 1 209 1 56 1 
291 1 169 1 127 1 81 1 130 1 187 1 327 1 233 1 14 1 141 1 56 1 
169 1 127 1 14 1 130 1 187 1 209 1 56 1 
169 1 127 1 14 1 287 1 187 1 209 2 56 1 
169 2 152 1 127 2 130 1 250 1 187 2 209 1 49 1 14 1 56 2 
169 3 242 1 127 3 81 1 129 2 279 1 130 2 187 1 112 1 209 1 14 1 287 1 56 1 
291 1 169 2 184 1 249 1 127 2 129 1 130 1 187 1 327 1 302 1 209 1 141 2 14 1 287 1 56 1 
169 4 127 4 81 1 129 2 279 1 130 2 187 2 281 1 207 1 209 1 14 1 287 1 56 2 
169 1 127 1 14 1 130 1 287 1 187 1 209 1 56 1 
169 4 127 4 81 1 129 2 279 1 130 3 187 1 209 2 193 1 287 2 215 1 332 1 274 1 56 1 
124 1 169 2 127 2 129 1 130 1 187 1 136 1 209 1 14 1 235 1 287 1 56 1 
169 3 247 1 127 3 130 1 187 1 209 1 14 1 193 2 287 1 274 1 332 2 56 1 
140 2 130 2 61 1 16 1 
169 1 127 1 14 1 143 1 187 1 56 1 
169 2 127 2 129 1 14 1 130 1 287 1 187 1 112 1 209 1 56 1 
230 1 
169 1 127 1 14 1 130 1 287 1 187 1 209 1 56 1 
169 3 127 3 129 1 130 1 187 1 112 1 209 1 14 1 287 1 332 1 56 1 
81 1 130 1 279 1 215 1 
130 1 209 1 

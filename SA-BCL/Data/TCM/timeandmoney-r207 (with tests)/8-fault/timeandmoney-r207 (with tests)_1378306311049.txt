#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 180 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (23,72) (23,72) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 284 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 116 270 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 110 112 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 138 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 138 301 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 17 158 93 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 17 158 93 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 17 158 241 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 138 301 173 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 138 301 173 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (55,205) 30 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (23,72) (23,72) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (23,72) (23,72) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (23,72) (23,72) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 284 137 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 180 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 211 (298,305) 68 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 25 229 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (123,214) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (286,324) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (55,205) (55,205) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (55,205) 30 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (55,205) (55,205) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 1 82 1 193 9 145 1 302 2 88 1 51 2 94 1 151 1 152 1 239 2 315 1 202 1 164 1 104 2 105 2 106 1 119 1 174 5 250 1 252 2 179 1 34 6 37 1 40 2 41 9 133 3 45 4 
140 1 82 1 193 9 145 1 302 2 88 1 51 2 94 1 151 1 152 1 239 2 315 1 202 1 164 1 104 2 105 2 106 1 119 1 174 5 250 1 252 2 179 1 34 6 37 1 40 2 41 9 133 3 45 4 
140 1 82 1 193 10 145 1 302 2 88 1 51 2 94 1 151 1 152 1 239 2 315 1 202 1 164 1 104 2 105 2 106 1 119 1 174 6 250 1 252 2 179 1 34 7 37 1 40 2 41 10 133 4 45 5 
140 1 82 1 193 7 302 2 88 1 51 2 94 1 151 1 152 1 239 2 315 1 202 1 164 1 104 2 105 2 106 1 119 1 174 4 250 1 252 1 179 1 34 4 37 1 40 2 41 7 133 2 45 3 
140 1 164 1 104 1 105 1 193 4 145 1 88 1 302 1 174 3 94 1 252 2 34 3 239 1 37 1 40 1 41 4 133 1 45 2 
140 1 105 1 107 1 193 2 88 1 302 1 51 1 174 1 94 1 179 1 182 1 239 1 314 1 40 1 202 1 41 2 
140 1 106 1 193 3 88 1 302 2 51 1 174 2 94 1 34 1 239 2 41 3 133 1 45 1 
140 1 82 1 193 9 145 1 302 2 88 1 51 1 92 1 94 1 239 2 164 1 104 1 106 1 105 1 174 5 250 1 252 2 34 7 37 1 40 1 41 9 133 3 77 1 45 4 
140 1 82 1 193 9 145 1 302 2 88 1 51 1 92 1 94 1 239 2 164 1 104 1 106 1 105 1 174 5 250 1 252 2 34 7 37 1 40 1 41 9 133 3 77 1 45 4 
180 1 
310 1 97 1 329 1 192 1 36 1 257 1 130 1 71 1 198 1 274 1 199 1 
192 1 52 1 198 1 199 1 274 1 310 1 234 1 97 2 329 1 154 1 257 1 130 1 
320 1 97 1 
320 1 97 1 
97 1 
320 1 97 1 
320 1 97 1 
320 1 97 2 195 1 
180 1 113 1 
192 2 113 2 70 1 52 1 199 2 234 1 256 1 154 1 130 2 
183 1 102 1 175 1 
165 1 16 1 66 2 280 1 192 1 20 1 113 1 282 1 22 1 117 1 286 1 272 2 176 1 199 1 121 1 155 1 44 1 318 1 103 2 
165 1 16 1 66 1 280 1 192 2 20 1 322 1 22 1 286 1 272 1 176 1 199 2 121 1 234 1 154 1 183 1 155 1 332 1 130 1 103 1 
234 3 192 3 154 3 332 1 113 1 52 1 130 3 199 3 
234 1 192 1 154 1 285 1 130 1 198 1 199 1 
234 1 256 1 192 1 154 1 52 1 70 1 130 1 198 1 199 1 
192 2 322 1 70 1 52 1 169 1 198 1 274 1 199 2 210 1 310 1 234 2 97 1 329 1 154 2 332 1 257 1 130 2 
234 1 192 2 36 1 154 1 332 1 113 1 114 1 130 2 199 2 
192 1 322 1 169 1 198 1 274 1 199 1 310 1 234 1 97 1 329 1 154 1 332 1 257 1 130 1 136 1 
192 2 70 1 52 1 199 2 234 2 154 2 332 1 183 1 130 2 102 1 
165 1 66 1 16 1 280 1 192 1 20 1 113 1 22 1 272 1 286 1 176 1 199 1 121 1 155 1 103 1 
165 1 66 1 16 1 280 1 192 1 67 1 113 1 22 1 272 1 176 1 199 1 121 1 123 1 155 1 103 1 
50 1 304 1 196 2 91 1 149 1 309 1 311 1 275 1 10 1 12 2 14 1 102 2 203 2 319 1 246 1 247 1 26 1 29 1 175 2 254 1 183 2 259 1 336 4 46 1 
310 1 263 1 234 1 192 1 154 1 130 1 198 1 199 1 
192 5 322 1 113 1 114 1 70 1 52 1 89 1 199 5 234 4 36 1 154 4 332 2 130 5 317 1 
263 1 234 2 192 2 154 2 285 1 130 2 198 1 199 2 
19 1 168 1 
19 1 168 1 
8 1 84 1 
8 1 84 1 
8 1 84 1 
19 1 168 1 63 1 
19 1 168 1 184 1 
219 1 251 1 8 1 19 2 84 1 168 2 
19 1 168 1 63 1 
19 1 168 1 63 1 
163 1 19 1 168 1 
163 1 19 1 168 1 
163 1 19 1 168 1 
19 2 207 2 168 2 303 2 23 1 209 2 6 1 147 2 72 1 97 2 181 1 13 2 278 1 
19 1 192 1 207 1 168 1 284 1 303 1 6 1 209 1 147 1 199 1 234 1 97 1 154 1 130 1 13 1 
104 1 105 1 40 1 
105 1 182 1 40 1 
104 2 221 1 182 1 208 1 40 3 306 1 
104 1 221 1 182 1 40 2 306 1 288 1 
104 1 221 2 182 1 40 2 306 1 
320 3 242 1 264 1 65 1 142 1 224 1 244 1 116 1 31 1 95 1 97 3 255 1 79 1 
320 2 97 2 228 1 230 1 122 1 
320 1 242 1 97 2 224 1 195 1 116 1 
242 1 97 1 224 1 270 1 195 1 116 1 
280 1 180 1 236 1 
280 1 245 1 
262 1 
16 1 280 1 
1 1 16 1 280 3 153 1 236 2 176 1 
16 1 280 1 176 1 
280 1 73 1 
281 1 196 4 247 1 26 3 57 1 311 1 327 1 275 2 328 1 33 1 235 1 60 2 76 1 101 1 12 3 188 1 336 7 
281 1 196 4 247 1 26 3 57 1 311 1 327 1 275 2 328 1 33 1 235 1 60 2 76 1 101 1 12 3 188 1 336 7 
281 1 144 1 196 4 247 1 26 3 57 1 311 1 327 1 275 2 328 1 33 1 235 1 60 2 76 1 101 1 12 3 188 1 336 7 
80 3 304 1 196 16 149 1 57 1 309 1 311 4 200 1 275 5 235 2 98 1 60 3 101 1 12 15 14 1 203 2 281 2 206 1 25 1 247 4 26 10 29 3 124 4 328 1 327 5 33 2 76 1 217 1 260 1 131 1 188 2 296 3 336 31 46 3 
304 2 196 5 149 2 309 2 57 1 311 1 96 1 275 3 235 1 60 2 101 1 12 4 14 2 203 4 281 1 247 1 26 4 215 1 327 1 328 1 33 1 260 1 188 1 336 9 
297 1 140 1 223 1 193 2 2 1 302 1 88 1 51 1 272 1 271 1 7 1 94 1 232 1 239 1 201 1 103 1 104 1 165 1 105 1 66 1 167 1 208 1 22 1 174 1 290 1 34 1 182 1 334 1 40 2 41 2 
297 1 140 1 190 1 223 1 193 3 302 1 51 1 272 1 271 1 7 1 94 1 232 1 11 1 239 1 103 1 104 1 165 1 105 1 66 1 167 1 208 1 22 1 174 1 290 1 34 2 182 1 334 1 40 2 41 3 187 1 
297 1 140 1 190 1 193 2 51 1 272 1 7 1 94 1 232 1 11 1 103 1 165 1 104 1 66 1 105 1 167 1 208 1 22 1 174 1 290 1 34 2 182 1 334 1 40 2 41 2 
297 2 0 1 193 1 302 1 51 2 272 1 7 2 232 2 58 1 239 1 103 1 162 1 166 1 165 1 66 1 16 1 280 1 22 1 121 1 41 1 132 1 187 1 135 1 
297 1 223 1 193 1 302 1 88 1 51 1 272 1 271 1 7 1 232 1 11 1 239 1 201 1 103 1 104 1 165 1 105 1 66 1 167 1 208 1 22 1 290 1 182 1 334 1 40 2 41 1 
287 1 
31 1 66 1 65 1 142 1 97 1 255 1 110 1 244 1 112 1 272 1 79 1 103 1 121 1 
138 1 222 1 192 1 108 1 24 1 171 1 71 1 198 1 274 1 199 1 310 1 97 2 329 1 36 1 238 1 257 1 130 1 
222 1 192 1 108 1 24 1 171 1 71 1 198 1 248 1 274 1 199 1 310 1 97 2 329 1 36 1 238 1 257 1 130 1 
138 1 301 1 222 1 192 1 108 1 24 1 171 1 71 1 198 1 274 1 199 1 310 1 97 2 329 1 36 1 238 1 257 1 130 1 
97 1 
222 1 142 1 192 1 227 1 198 1 199 1 274 1 310 1 97 2 238 1 17 1 65 1 108 1 244 1 69 1 171 1 24 1 71 1 31 1 292 1 293 1 255 1 329 1 36 1 257 1 130 1 47 1 
142 1 222 1 192 1 227 1 198 1 93 1 199 1 274 1 310 1 97 2 238 1 158 1 64 1 17 1 65 1 108 1 244 1 69 1 171 1 24 1 71 1 31 1 292 1 293 1 329 1 255 1 36 1 257 1 130 1 47 1 
142 1 222 1 192 1 227 1 198 1 93 1 199 1 274 1 310 1 97 2 238 1 158 1 64 1 17 1 65 1 108 1 244 1 69 1 171 1 24 1 71 1 31 1 292 1 293 1 329 1 255 1 36 1 257 1 130 1 47 1 
142 1 222 1 192 1 227 1 198 1 199 1 274 1 310 1 97 2 238 1 241 1 158 1 17 1 65 1 108 1 244 1 69 1 171 1 24 1 71 1 31 1 291 1 329 1 255 1 36 1 257 1 38 1 130 1 78 1 47 1 
138 1 301 1 222 1 192 1 108 1 24 1 171 1 173 1 71 1 198 1 274 1 199 1 310 1 97 2 329 1 36 1 238 1 257 1 130 1 
138 1 301 1 222 1 192 1 108 1 24 1 171 1 173 1 71 1 198 1 274 1 199 1 310 1 97 2 329 1 36 1 238 1 257 1 130 1 
222 1 142 1 192 1 227 1 198 1 199 1 274 1 310 1 97 2 238 1 17 1 65 1 108 1 244 1 69 1 171 1 24 1 71 1 31 1 291 1 255 1 329 1 36 1 257 1 38 1 130 1 47 1 
304 1 196 3 149 1 309 1 57 1 311 1 275 2 10 1 60 1 101 1 12 3 102 1 14 1 203 2 281 1 113 2 246 1 26 2 247 1 175 1 180 1 328 1 183 1 259 1 188 1 336 6 
80 2 139 1 269 1 304 2 196 8 197 1 149 2 309 2 311 1 200 1 275 1 10 1 12 6 15 1 14 2 102 4 203 4 113 1 246 2 25 1 26 2 247 2 175 11 29 1 124 3 213 1 327 1 294 1 183 11 43 1 296 3 336 14 46 2 
265 1 192 2 269 1 304 1 196 1 272 1 197 1 149 1 199 2 309 1 234 1 10 1 154 1 155 1 12 1 318 1 102 1 14 1 15 1 103 1 203 2 165 1 16 1 66 1 280 1 20 1 322 1 113 1 22 1 246 1 286 1 176 1 121 1 332 1 295 1 130 1 134 1 336 2 
80 2 192 3 269 1 196 10 272 1 197 1 199 3 275 4 10 3 101 1 12 10 15 1 14 3 102 7 103 1 203 6 16 2 280 2 281 1 20 2 113 2 22 2 286 2 26 5 29 2 121 1 126 2 130 1 46 2 141 2 304 3 305 2 56 1 149 3 57 1 309 3 231 2 311 3 234 1 154 1 60 1 155 2 240 2 165 2 66 1 322 1 246 3 247 3 176 2 175 7 328 1 327 1 253 1 332 1 183 7 188 1 336 20 
192 1 2 1 269 1 304 2 196 1 272 6 273 1 149 2 199 1 309 2 58 1 234 1 9 1 154 1 10 2 276 1 11 1 12 1 14 2 15 1 103 7 203 4 165 3 166 1 205 1 66 7 16 3 280 4 22 3 170 1 246 2 117 2 118 1 176 1 121 2 30 1 32 1 332 1 75 1 259 1 130 1 336 2 
80 1 192 1 52 1 304 1 196 1 197 1 149 1 309 1 199 1 311 1 234 1 275 1 154 1 10 1 12 2 102 1 14 1 203 2 70 1 246 1 26 1 247 1 175 1 29 1 212 1 183 1 130 1 46 1 336 3 
304 1 246 1 196 2 26 1 247 1 175 1 149 1 309 1 327 1 10 1 183 1 259 1 102 1 336 2 14 1 46 1 203 2 319 1 
304 1 246 1 26 1 175 1 149 1 29 1 309 1 311 1 275 1 254 1 10 1 183 1 259 1 12 2 102 1 336 2 14 1 203 2 
80 1 304 1 196 2 149 1 309 1 311 1 275 1 10 1 12 2 14 1 102 2 203 2 246 1 247 1 26 2 175 2 29 1 327 1 183 2 259 1 46 1 336 4 
304 1 246 1 196 2 26 1 247 1 175 1 149 1 309 1 9 1 327 1 10 1 183 1 102 1 336 2 14 1 46 1 203 2 319 1 
304 1 246 1 26 1 175 1 149 1 29 1 309 1 311 1 9 1 275 1 254 1 10 1 183 1 12 2 102 1 336 2 14 1 203 2 
80 1 304 1 196 2 149 1 309 1 311 1 9 1 275 1 10 1 12 2 14 1 102 2 203 2 246 1 247 1 26 2 175 2 29 1 327 1 183 2 46 1 336 4 
80 1 304 1 246 1 196 2 26 2 247 1 29 1 175 2 149 1 309 1 311 1 275 1 327 1 10 1 183 2 12 2 102 2 14 1 46 1 336 4 203 2 
192 1 269 1 304 1 196 1 272 1 149 1 199 1 309 1 10 1 155 1 12 1 14 1 15 1 103 1 203 2 165 1 16 1 66 1 280 1 20 1 113 1 22 1 246 1 286 1 176 1 121 1 126 1 336 2 
192 1 86 1 269 1 304 1 196 1 272 1 149 1 199 1 309 1 10 1 155 1 12 1 14 1 15 1 103 1 203 2 165 1 16 1 66 1 280 1 67 1 113 1 22 1 246 1 176 1 121 1 123 1 336 2 
80 1 304 1 196 2 197 1 149 1 309 1 311 1 275 1 10 1 12 2 14 1 102 2 203 2 246 1 247 1 26 2 175 2 29 1 327 1 183 2 46 1 336 4 
80 1 192 1 2 1 304 1 196 2 272 1 149 1 199 1 309 1 231 1 311 1 275 1 10 1 155 1 12 2 102 2 14 1 103 1 203 2 165 1 66 1 16 1 280 1 20 1 22 1 246 1 286 1 26 2 247 1 29 1 175 2 176 1 327 1 126 1 183 2 336 4 46 1 
80 1 85 1 192 1 52 1 304 1 196 2 197 1 149 1 309 1 199 1 311 1 234 1 154 1 10 1 12 1 14 1 102 1 203 2 70 1 246 1 26 1 247 1 29 1 175 1 327 1 183 1 130 1 46 1 336 3 
80 3 220 1 304 2 146 2 196 9 149 2 309 2 311 3 233 2 200 1 275 3 157 1 12 10 14 2 203 4 321 1 27 1 25 1 289 1 247 3 26 6 29 3 124 2 215 1 327 3 216 1 333 1 296 1 336 19 46 3 
80 3 304 3 146 1 196 14 149 3 229 1 309 3 311 2 59 1 233 4 275 2 157 1 12 12 14 3 203 6 18 1 321 2 111 1 26 4 289 2 25 2 247 3 29 2 124 2 327 2 215 1 216 1 333 1 260 2 335 1 296 2 336 26 46 3 189 1 
80 4 304 3 146 1 196 20 229 1 149 3 57 1 309 3 311 5 59 1 233 4 200 1 275 4 60 1 237 1 101 1 157 1 12 21 14 3 203 6 18 1 321 1 281 1 111 1 27 1 25 3 289 2 247 5 26 8 29 4 124 4 328 1 215 1 327 4 216 1 333 1 260 1 335 1 188 1 296 3 336 41 46 4 189 1 
80 4 304 4 146 1 196 20 229 1 149 4 57 1 309 4 311 4 59 1 233 4 200 1 275 4 60 1 237 1 101 1 157 1 12 18 14 4 203 8 18 1 321 1 281 1 111 1 27 1 25 3 289 2 247 5 26 7 29 3 124 4 328 1 215 1 327 3 216 1 333 1 260 2 335 1 188 1 296 3 336 38 46 4 189 1 
80 7 304 2 146 1 196 27 229 1 149 2 57 1 309 2 311 8 59 1 233 4 200 2 275 7 60 1 101 1 157 1 12 25 14 2 203 4 18 1 321 1 281 1 111 1 25 2 289 1 247 8 26 14 29 7 124 4 213 2 328 1 215 1 327 7 216 1 333 1 260 1 335 1 188 1 296 4 336 52 46 7 189 1 
219 1 19 1 168 1 61 1 87 1 21 1 303 1 209 1 147 1 13 1 
184 1 283 1 
161 1 19 1 143 1 168 1 225 1 303 1 209 1 147 1 13 1 
19 1 207 2 168 1 303 1 23 1 6 1 209 1 147 1 72 1 97 1 181 1 13 1 278 1 
19 1 207 2 168 1 303 1 23 1 6 1 209 1 147 1 72 1 97 1 181 1 13 1 278 1 
19 1 207 2 168 1 303 1 23 1 6 1 209 1 147 1 72 1 97 1 181 1 13 1 278 1 
251 1 178 1 63 1 
251 1 178 1 63 1 
163 1 218 1 
163 1 251 1 218 1 
186 1 308 1 
320 1 137 1 19 1 207 1 168 1 284 1 303 1 209 1 147 1 97 1 181 1 13 1 278 1 
178 1 63 1 
163 1 251 1 218 1 
192 2 269 1 226 1 5 1 304 1 196 1 197 1 272 2 273 1 149 1 199 2 309 1 10 1 12 1 14 1 15 1 103 2 203 2 165 1 16 1 66 2 280 1 109 1 22 1 246 1 117 2 28 1 74 1 75 1 130 2 336 2 
104 1 165 1 105 1 66 2 223 1 167 1 2 1 208 1 22 1 272 2 290 1 232 1 182 1 129 1 11 1 99 1 40 2 103 2 160 1 
104 1 165 1 105 1 66 1 223 1 167 1 49 1 208 1 22 1 272 1 290 1 232 1 182 1 129 1 11 1 40 2 103 1 
165 1 166 1 16 1 66 1 280 1 22 1 272 1 121 1 232 1 58 1 313 1 99 1 135 1 103 1 
104 1 165 1 105 1 66 1 223 1 167 1 208 1 22 1 272 1 290 1 232 1 182 1 129 1 11 1 99 1 40 2 103 1 160 1 
323 1 
180 1 
292 1 31 1 293 1 65 1 142 1 255 1 244 1 69 1 
298 1 165 1 1 1 16 1 65 1 66 1 142 1 280 2 244 1 68 1 22 2 245 1 272 1 176 1 211 1 121 1 31 1 255 1 79 1 103 1 159 1 
124 1 31 1 65 1 142 1 255 1 244 1 69 1 296 1 25 1 229 1 
64 1 65 1 142 1 281 1 244 1 69 2 53 2 247 2 150 1 57 1 311 1 31 1 97 1 255 1 331 1 188 1 
31 1 65 1 255 1 244 1 
66 1 272 1 103 1 121 1 
31 1 65 1 142 1 255 1 244 1 69 1 277 1 79 1 
172 1 209 1 147 1 
21 1 185 1 209 1 308 1 147 1 
172 1 209 1 147 1 
172 1 209 1 147 1 
100 1 209 1 147 1 
100 1 209 1 147 1 
100 1 209 1 147 1 
209 1 147 1 
19 1 168 1 
281 1 304 2 196 4 247 1 26 3 149 2 57 1 309 2 311 1 327 1 275 2 328 1 60 1 260 1 101 1 12 4 188 1 336 8 14 2 203 4 
281 1 196 3 26 2 247 1 57 1 311 1 180 1 328 1 275 2 60 1 101 1 12 3 188 1 336 6 
80 1 304 1 196 2 26 2 247 1 29 1 149 1 309 1 311 1 275 1 327 1 316 1 12 2 14 1 46 1 336 4 203 2 
80 1 196 3 25 1 247 1 26 2 29 1 311 1 124 2 200 1 275 1 327 1 12 4 296 1 336 7 46 1 
80 2 139 1 268 1 304 2 196 11 149 2 57 1 309 2 311 3 200 1 275 5 60 1 101 1 12 12 14 2 203 4 281 2 26 9 247 3 29 2 124 2 213 1 328 1 327 4 260 2 188 2 296 2 46 2 336 23 
124 1 12 1 336 1 
196 1 296 1 336 1 
80 1 141 1 304 1 196 3 247 1 26 4 149 1 29 1 309 1 311 1 327 2 275 2 316 1 12 3 14 1 336 6 46 1 203 2 
80 2 304 1 196 6 229 1 149 1 309 1 311 2 275 1 12 6 14 1 203 2 18 1 111 1 25 1 247 2 26 2 29 2 124 1 327 1 215 1 335 1 296 1 336 12 46 2 189 1 
281 1 196 3 247 1 26 2 57 1 311 1 275 1 327 1 12 3 188 1 336 6 
281 1 268 1 304 1 196 1 26 2 149 1 309 1 327 1 275 1 328 1 260 1 101 1 188 1 12 2 336 3 14 1 203 2 
281 2 304 1 196 5 26 5 247 2 149 1 309 1 57 1 311 2 215 1 275 3 327 2 331 1 188 2 12 5 14 1 336 10 203 2 
304 1 196 2 247 1 26 1 149 1 309 1 215 1 327 1 14 1 46 1 336 2 203 2 
80 1 304 1 196 2 26 2 247 1 29 1 149 1 309 1 311 1 275 1 215 1 327 1 12 2 14 1 46 1 336 4 203 2 
281 1 268 1 304 3 196 1 27 1 26 2 149 3 309 3 215 1 275 1 327 1 260 1 12 2 188 1 336 3 14 3 203 6 
80 3 268 1 304 5 196 16 149 5 57 2 309 5 311 5 200 1 275 7 60 1 101 1 316 1 12 18 14 5 203 10 281 3 206 1 25 1 27 1 247 5 26 12 29 3 124 4 328 1 215 1 327 5 217 1 260 2 131 1 188 3 296 3 336 34 46 3 
304 1 196 4 229 1 149 1 309 1 57 1 311 1 275 2 60 1 101 1 12 4 14 1 203 2 281 1 247 1 25 1 26 2 124 1 215 1 328 1 296 1 188 1 336 8 
80 1 304 2 196 6 229 1 149 2 57 1 309 2 311 1 200 1 275 2 60 1 101 1 316 1 12 5 14 2 203 4 281 1 25 1 247 2 26 3 124 2 328 1 215 1 327 1 188 1 296 1 336 11 46 1 
80 2 304 3 196 9 229 1 149 3 57 1 309 3 311 3 275 3 60 1 101 1 316 1 12 10 14 3 203 6 18 1 281 1 111 1 25 1 247 3 26 4 29 2 124 1 328 1 327 1 215 1 260 1 335 1 188 1 296 1 336 19 46 2 189 1 
80 2 304 3 196 10 229 1 149 3 57 1 309 3 311 2 275 3 60 1 101 1 316 1 12 7 14 3 203 6 18 1 281 1 111 1 25 1 247 3 26 5 29 1 124 1 328 1 327 2 215 1 260 1 335 1 188 1 296 1 336 17 46 2 189 1 
304 1 196 4 229 1 149 1 309 1 57 1 311 1 275 2 60 1 101 1 12 4 14 1 203 2 281 1 247 1 25 1 26 2 124 1 215 1 328 1 296 1 188 1 336 8 
80 2 304 1 196 6 229 1 149 1 309 1 311 2 275 1 12 6 14 1 203 2 18 1 111 1 25 1 247 2 26 2 29 2 124 1 327 1 215 1 335 1 296 1 336 12 46 2 189 1 
80 2 304 4 196 10 229 1 149 4 57 1 309 4 311 2 275 3 60 1 101 1 316 1 12 8 14 4 203 8 18 1 281 1 111 1 25 1 247 3 26 5 29 1 124 1 328 1 327 2 215 1 260 2 335 1 188 1 296 1 336 18 46 2 189 1 
80 3 304 4 196 9 229 1 149 4 309 4 311 2 275 3 12 7 14 4 203 8 18 1 111 1 25 1 27 1 247 3 26 6 29 2 124 1 327 3 215 1 260 2 335 1 296 1 336 16 46 3 189 1 
281 3 196 3 26 6 247 1 57 1 311 1 328 2 275 3 327 3 101 1 12 4 188 3 336 7 
80 2 304 4 196 10 229 1 149 4 57 1 309 4 311 2 275 3 60 1 101 1 12 8 14 4 203 8 18 1 281 1 111 1 25 1 27 1 247 3 26 4 29 1 124 1 328 1 327 1 215 1 260 2 335 1 188 1 296 1 336 18 46 2 189 1 
192 1 36 1 113 1 114 1 130 1 42 1 199 1 
83 1 266 1 192 1 113 1 114 1 90 1 199 1 127 1 36 1 156 1 130 1 42 1 
58 1 165 1 166 1 16 1 66 1 280 1 180 1 22 1 272 1 103 1 121 1 
165 1 16 1 66 1 280 1 192 2 113 1 22 1 272 1 286 1 176 1 199 2 121 1 234 1 154 1 155 1 332 1 130 1 103 1 
165 1 16 2 66 1 243 1 280 3 192 2 113 1 22 1 54 1 272 1 286 1 198 1 176 2 199 2 310 1 234 2 73 1 329 1 154 1 155 1 332 1 130 2 103 1 
165 1 16 2 66 2 243 1 280 3 192 2 113 1 22 1 115 1 54 1 272 2 198 1 176 2 199 2 310 1 123 1 234 2 73 1 329 1 154 1 155 1 332 1 130 2 103 2 
66 1 280 1 214 1 97 1 245 1 54 1 272 1 103 1 
66 1 280 1 97 1 245 1 324 1 54 1 272 1 103 1 
165 1 66 1 326 1 22 1 272 1 103 1 
165 1 1 1 205 1 16 1 66 1 280 1 22 1 55 1 272 1 176 1 103 1 121 1 
192 2 2 1 196 3 272 1 197 1 199 2 275 2 10 2 101 1 12 3 102 1 14 2 103 1 203 4 16 1 280 1 281 1 20 1 109 1 113 2 22 1 286 1 26 2 126 1 130 1 305 1 304 2 149 2 309 2 57 1 231 1 311 1 234 1 154 1 155 1 60 1 165 1 66 1 246 2 247 1 176 1 175 1 328 1 332 1 183 1 188 1 336 6 
320 1 97 1 
1 1 165 1 66 2 16 1 280 2 2 1 22 2 272 2 176 1 326 1 236 1 103 2 159 1 
166 1 165 1 66 4 16 1 280 1 2 1 22 1 115 1 272 4 121 1 58 1 204 1 103 4 
30 1 165 1 205 1 16 1 66 1 280 1 276 1 22 1 272 1 176 1 103 1 177 1 
165 1 105 1 66 1 182 1 22 1 40 1 272 1 290 1 103 1 121 1 
165 1 16 1 66 2 280 1 2 1 11 1 22 1 226 1 272 2 273 1 103 2 
166 1 165 2 66 5 16 2 280 3 2 1 22 2 170 1 54 1 272 4 118 1 273 1 121 1 58 1 204 1 103 5 
166 1 165 2 66 5 16 2 280 3 191 1 2 1 22 2 170 1 54 1 272 4 273 1 121 1 58 1 204 1 103 5 
165 1 16 1 66 1 280 1 192 2 113 1 22 1 272 1 176 1 199 2 121 1 123 1 234 1 154 1 155 1 332 1 130 1 103 1 
165 1 1 1 205 1 16 1 66 1 280 1 22 1 54 1 55 1 272 1 176 1 103 1 
81 1 330 1 113 1 4 1 39 1 
320 1 81 2 299 1 113 1 4 2 169 1 198 1 120 1 274 1 310 1 97 2 330 2 329 1 257 1 39 1 62 1 
192 1 74 1 330 1 4 1 130 1 5 1 39 1 28 1 199 1 
299 1 39 1 120 1 
94 1 140 1 180 1 174 1 
94 1 140 1 193 1 239 1 302 1 41 1 174 1 
297 1 51 1 41 1 
140 1 48 1 267 1 193 3 88 1 302 1 174 1 94 1 179 2 128 1 239 1 41 3 
94 1 140 1 252 1 193 2 34 1 239 1 302 1 41 2 174 1 
104 1 164 1 105 1 193 1 239 1 302 1 88 1 40 1 41 1 174 1 45 1 
140 1 193 1 239 1 302 1 88 1 41 1 174 1 
94 1 140 2 193 1 239 1 302 1 88 1 41 1 
140 1 300 1 193 2 88 1 302 2 174 1 148 1 35 1 239 2 41 2 
140 1 82 1 193 3 88 1 302 1 174 2 94 1 250 1 34 2 239 1 41 3 133 1 45 1 
140 1 104 1 105 1 193 2 3 1 88 1 302 1 208 1 174 1 94 1 182 1 34 1 239 1 40 2 41 2 
140 1 193 4 145 1 88 1 302 2 174 2 94 1 252 1 34 2 239 2 41 4 133 1 45 1 
94 1 140 1 193 1 239 1 302 1 88 1 41 1 174 1 
140 2 48 1 193 4 194 1 302 1 174 3 94 2 179 1 34 2 128 1 239 1 41 4 133 1 45 1 
140 1 193 2 88 1 302 1 307 1 174 1 92 1 94 1 34 1 239 1 261 1 41 2 
94 1 140 1 48 2 179 2 125 1 193 3 128 1 239 1 302 1 88 1 41 3 174 1 
258 1 174 2 325 2 249 1 
279 1 193 1 239 1 302 1 88 1 41 1 
94 1 140 1 82 1 193 2 34 1 239 1 302 1 88 1 41 2 174 1 
312 1 
94 1 140 1 193 1 239 1 302 1 88 1 41 1 174 1 
94 1 140 1 82 1 179 1 193 3 34 1 239 1 302 1 88 1 41 3 174 1 
194 1 133 1 174 1 45 1 
140 1 174 1 

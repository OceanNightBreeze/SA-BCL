#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 226 39 154 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 226 39 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) (250,264) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (250,264) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) (250,264) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (73,184,249,262) (73,184,249,262) (73,184,249,262) 151 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 193 125 49 278 234 14 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 193 125 49 278 234 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 226 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 193 125 49 278 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
147 1 140 1 21 1 
147 1 89 1 304 2 
175 2 32 2 243 2 195 2 294 2 203 2 74 1 224 1 
261 1 0 1 263 2 32 2 195 2 267 1 72 2 5 1 74 1 273 1 119 1 279 1 43 1 44 2 285 1 203 2 286 1 239 2 288 1 206 1 128 2 243 3 294 2 22 1 213 1 56 1 133 1 171 1 97 1 298 1 175 3 252 1 254 1 219 1 145 1 257 1 224 1 
175 1 101 1 32 1 243 1 195 1 294 1 203 1 62 1 74 1 90 1 
147 1 289 1 191 1 33 1 195 1 243 1 21 1 55 1 175 1 121 1 235 1 237 1 62 1 144 1 
147 1 289 2 32 1 33 1 195 1 243 1 294 1 21 1 55 2 175 1 235 1 237 1 203 1 62 1 144 1 
79 1 289 1 148 1 55 1 160 1 
147 1 32 1 195 1 74 1 79 1 233 1 203 1 160 1 16 1 289 2 20 1 243 1 294 1 21 1 90 1 55 2 175 1 101 1 62 1 
289 1 55 1 160 1 
289 1 20 1 32 1 195 1 243 1 294 1 90 1 74 1 55 1 79 1 175 1 101 1 203 1 62 1 
147 1 
147 1 32 1 195 1 74 1 79 1 233 1 203 1 160 1 289 2 20 1 243 1 294 1 21 1 90 1 55 2 175 1 101 1 62 1 183 1 
147 2 65 1 32 1 195 1 74 1 79 2 275 2 157 2 10 1 233 1 11 2 236 1 203 1 48 1 160 2 207 1 289 5 20 1 209 2 242 1 88 4 168 2 210 2 129 1 243 1 294 1 130 1 21 2 90 1 55 5 175 1 101 1 100 1 137 5 61 1 141 1 62 1 143 1 
140 1 224 1 
32 1 195 2 243 2 294 1 25 1 175 2 203 1 205 1 224 2 
116 1 85 1 102 1 
206 1 261 1 292 1 128 1 243 1 72 1 213 1 273 1 56 1 171 1 175 1 279 1 43 1 44 1 145 1 224 1 
206 1 85 1 261 1 128 1 195 1 243 2 294 1 72 1 111 1 273 1 213 1 56 1 171 1 175 2 279 1 43 1 44 1 203 1 15 1 145 1 
32 1 195 5 243 5 294 4 111 2 247 1 25 1 92 1 175 5 121 1 203 4 220 1 15 1 224 1 
175 2 101 1 12 1 243 2 195 2 294 2 203 2 62 1 
175 3 32 1 243 3 195 3 294 3 111 1 203 3 224 1 
175 1 101 1 243 1 195 1 294 1 203 1 62 1 
175 1 32 1 243 1 195 1 294 1 203 1 62 1 205 1 25 1 
261 1 263 2 32 2 33 1 195 3 72 1 5 1 111 1 74 1 273 1 119 1 8 1 279 1 43 1 235 1 44 1 237 1 285 1 203 3 286 1 15 1 239 1 288 1 206 1 289 1 128 1 243 4 294 3 22 1 55 1 213 1 56 1 25 1 171 1 97 1 298 1 175 4 104 1 254 1 219 1 62 1 145 1 144 1 224 1 
175 2 121 1 243 2 195 2 294 1 203 1 111 1 247 1 224 1 
147 1 289 1 52 1 32 1 33 1 195 3 243 3 294 3 111 2 55 1 25 1 175 3 104 1 235 1 237 1 203 3 62 1 15 1 144 1 
85 1 32 1 195 2 243 2 294 2 111 1 25 1 175 2 102 1 203 2 
206 1 261 1 128 1 243 1 72 1 213 1 273 1 56 1 171 1 175 1 279 1 44 1 43 1 145 1 224 1 
206 1 261 1 290 1 128 1 188 1 243 1 72 1 213 1 273 1 171 1 175 1 279 1 44 1 43 1 224 1 
263 2 266 1 193 1 5 1 116 2 40 1 157 1 11 1 285 1 239 4 288 2 85 2 162 1 22 1 169 1 174 1 97 1 136 1 102 2 28 1 254 1 219 1 257 2 108 1 
175 1 12 1 235 1 243 1 195 1 294 1 203 1 62 1 
276 1 268 1 
276 1 268 1 
185 1 299 1 
185 1 299 1 
185 1 299 1 
259 1 276 1 268 1 
276 1 200 1 268 1 
185 1 118 1 276 2 299 1 268 2 182 1 
259 1 276 1 268 1 
259 1 276 1 268 1 
276 1 268 1 124 1 
276 1 268 1 124 1 
276 1 268 1 124 1 
289 1 154 1 276 1 39 1 211 1 255 1 268 1 55 1 226 1 
276 1 39 1 211 1 255 1 268 1 226 1 
215 1 114 1 272 1 
215 1 177 1 272 1 
18 1 199 1 177 1 293 1 114 2 272 3 
18 1 199 1 177 1 150 1 114 1 272 2 
18 2 199 1 177 1 114 1 272 2 
147 2 266 1 193 1 34 2 198 1 274 1 37 2 79 4 275 1 157 1 281 1 233 1 11 1 47 1 122 2 125 1 160 1 289 5 168 1 88 3 210 1 129 1 295 1 21 1 89 1 55 5 24 1 99 1 137 2 29 1 221 1 304 3 
147 1 148 1 32 1 195 1 271 1 74 1 197 1 79 2 203 1 160 1 289 2 20 1 243 1 294 1 21 1 90 1 55 2 91 1 175 1 101 1 62 1 
147 3 266 1 193 1 34 2 198 1 79 2 37 2 275 1 157 1 10 1 281 1 11 1 122 1 125 1 289 3 168 1 88 3 210 1 21 1 89 2 55 3 24 1 99 1 137 2 221 1 304 4 
147 4 266 2 193 2 34 4 198 1 152 1 37 4 79 3 275 1 277 1 157 2 10 1 281 1 11 2 122 2 125 2 289 4 168 1 88 5 210 1 21 1 89 3 55 4 24 2 99 1 137 4 106 1 221 1 304 7 
166 1 43 1 140 1 
96 1 43 1 
109 1 
171 1 43 1 273 1 
26 1 43 1 
171 1 43 1 
171 1 135 1 166 2 87 1 43 3 273 1 
288 3 65 1 162 2 242 1 53 1 189 2 297 1 131 1 169 3 77 1 134 1 157 1 11 1 61 1 303 1 239 7 257 4 
288 3 65 1 162 2 242 1 53 1 189 2 297 1 131 1 169 3 77 1 134 1 157 1 11 1 61 1 303 1 239 7 257 4 
288 3 65 1 162 2 242 1 53 1 189 2 297 1 131 1 169 3 77 1 134 1 230 1 157 1 11 1 61 1 303 1 239 7 257 4 
65 1 263 2 266 3 189 3 193 3 5 1 77 2 155 1 228 1 157 4 202 1 11 4 285 1 239 31 83 1 125 3 288 15 162 5 242 2 167 4 53 5 131 1 244 3 297 2 169 10 134 1 97 1 60 1 254 1 61 2 303 1 30 1 257 16 146 1 
288 4 65 1 162 3 263 4 242 1 53 1 189 2 5 2 131 1 297 1 169 4 77 1 97 2 157 1 11 1 254 2 61 1 303 1 285 2 30 1 239 9 222 1 223 1 257 5 
151 1 262 1 19 1 73 1 249 1 
262 1 19 1 264 1 73 1 249 1 
19 1 249 1 184 1 250 1 
262 1 19 1 264 1 73 1 249 1 
151 1 262 1 19 1 73 1 249 1 
179 1 
147 1 66 1 69 1 2 1 72 2 4 1 76 1 153 1 80 1 233 2 158 1 235 1 237 1 160 4 164 1 86 1 88 2 168 1 243 1 89 2 171 1 251 2 175 1 176 2 180 1 103 1 181 1 261 1 265 1 191 1 33 1 195 1 113 3 198 1 275 1 201 1 283 1 44 2 43 1 121 1 123 2 206 1 289 4 128 2 129 1 210 1 55 4 213 2 132 1 58 1 137 2 62 1 144 1 304 2 
289 2 86 1 33 1 191 1 195 1 243 1 4 1 113 2 55 2 153 1 80 1 175 1 283 1 235 1 121 1 181 1 237 1 62 1 144 1 160 1 
147 1 289 3 86 1 33 1 191 1 195 1 243 1 4 1 21 1 113 3 55 3 80 1 175 1 233 1 158 1 283 1 235 1 121 1 181 1 237 1 62 1 183 1 144 1 160 1 
289 2 66 1 86 1 33 1 191 1 195 1 243 1 4 1 113 2 55 2 153 1 80 1 175 1 283 1 235 1 121 1 181 1 237 1 62 1 144 1 160 1 
147 1 66 1 32 1 191 1 33 1 195 2 4 1 74 1 113 3 75 1 153 1 80 1 233 1 158 1 283 1 121 1 235 1 237 1 203 1 160 2 289 3 20 1 86 1 243 2 294 1 21 1 90 1 55 3 175 2 101 1 181 1 62 2 183 1 144 1 
147 2 66 1 69 1 2 1 4 1 153 1 80 1 233 1 158 1 235 1 237 1 160 2 86 1 168 1 88 1 243 1 21 1 89 2 251 2 175 1 176 2 181 1 265 1 33 1 191 1 195 1 113 3 275 1 283 1 121 1 123 2 289 3 129 1 210 1 132 1 55 3 137 1 62 1 144 1 304 2 
147 1 66 2 265 2 2 1 191 1 33 1 195 1 4 1 113 4 6 1 153 2 275 1 80 1 233 2 232 1 158 2 283 1 121 1 235 1 45 1 237 1 123 2 160 4 289 4 86 1 88 1 168 1 129 1 210 1 243 1 21 1 89 2 132 1 55 4 251 2 175 1 176 2 137 1 181 1 62 1 144 1 
147 1 66 2 2 1 4 1 74 1 6 1 153 2 80 1 232 1 233 2 158 2 235 1 237 1 160 4 20 1 86 1 168 1 88 1 243 2 21 1 90 1 89 2 251 2 175 2 101 1 176 2 181 1 265 2 32 1 33 1 191 1 195 2 113 4 275 1 283 1 121 1 45 1 203 1 123 2 289 4 210 1 129 1 294 1 55 4 132 1 137 1 62 2 144 1 
147 1 66 2 67 2 2 1 4 1 74 1 153 2 80 1 81 1 233 2 158 2 235 1 237 1 160 4 20 1 86 1 168 1 88 1 243 2 21 1 90 1 251 2 175 2 101 1 105 2 181 1 32 1 33 1 191 1 195 2 113 4 275 1 280 1 283 1 121 1 45 1 203 1 204 1 123 2 289 4 210 1 129 1 294 1 55 4 137 1 62 2 144 1 304 2 
147 1 66 3 2 1 4 1 74 1 6 1 227 1 153 3 80 1 232 1 233 2 158 2 235 1 237 1 160 5 20 1 86 1 168 1 88 1 243 2 21 1 90 1 89 2 251 2 175 2 101 1 176 2 181 1 265 2 32 1 33 1 191 1 195 2 113 4 275 1 283 1 121 1 45 1 203 1 123 2 289 4 129 1 210 1 294 1 55 4 132 1 137 1 62 2 144 1 
147 1 66 3 2 1 4 1 74 1 6 1 227 1 153 3 80 1 232 1 233 2 158 3 235 1 237 1 160 5 20 1 86 1 168 1 88 1 243 2 21 1 90 1 89 2 251 2 175 2 101 1 176 2 181 1 265 2 32 1 33 1 191 1 195 2 113 5 275 1 283 1 121 1 45 1 203 1 123 2 289 4 129 1 210 1 294 1 55 4 132 1 137 1 62 2 144 1 
147 1 66 2 67 2 69 1 2 1 4 1 74 1 153 2 80 1 81 1 233 2 158 2 235 1 237 1 160 4 20 1 86 1 168 1 88 1 243 2 21 1 90 1 251 2 175 2 101 1 105 2 181 1 32 1 33 1 191 1 195 2 113 4 275 1 283 1 121 1 203 1 123 2 289 4 129 1 210 1 294 1 55 4 137 1 62 2 144 1 304 2 
65 1 263 2 189 1 5 1 116 1 157 1 11 1 285 1 239 6 288 3 85 1 162 2 242 1 131 1 22 1 169 2 97 1 136 1 102 1 254 1 61 1 140 1 303 1 219 1 257 3 224 2 
225 1 263 4 266 1 193 2 5 2 116 11 155 1 157 1 282 1 11 2 285 2 239 14 83 1 125 2 288 6 85 11 162 1 53 1 167 3 22 2 244 3 169 2 97 2 298 1 252 1 102 4 254 2 302 1 218 1 219 1 224 1 258 1 257 8 
261 1 263 2 195 1 72 1 5 1 111 1 273 1 38 1 279 1 120 1 43 1 44 1 203 1 285 1 15 1 239 2 206 1 288 1 128 1 292 1 243 2 294 1 22 1 213 1 56 1 171 1 214 1 97 1 175 2 298 1 252 1 102 1 254 1 219 1 145 1 224 1 258 1 257 1 
65 1 70 2 72 3 5 3 156 2 157 3 11 3 15 1 239 20 85 7 162 4 242 1 243 3 22 3 248 2 169 8 171 2 98 1 97 3 175 3 252 1 178 1 102 7 254 3 258 1 257 10 261 2 263 6 266 2 189 1 192 1 195 1 193 2 111 1 112 1 273 2 116 7 119 2 279 2 44 3 43 2 285 3 203 1 125 2 288 10 206 2 127 2 128 3 53 4 294 1 131 1 213 1 56 2 298 1 61 1 303 1 219 3 145 2 224 2 
261 2 0 2 263 4 194 1 195 1 72 7 270 1 111 1 5 2 112 1 43 3 44 8 46 1 203 1 285 2 82 1 239 2 161 1 206 2 288 1 84 1 164 1 128 8 243 1 294 1 22 2 213 2 95 1 171 2 97 2 136 1 175 1 298 1 252 1 180 1 253 1 254 2 219 2 257 1 
263 2 266 1 32 1 195 1 193 1 5 1 116 1 157 1 11 1 285 1 203 1 239 3 125 1 288 2 85 1 162 1 243 1 294 1 22 1 169 1 25 1 97 1 175 1 102 1 254 1 301 1 219 1 258 1 257 1 
85 1 263 2 53 1 193 1 5 1 22 1 169 1 116 1 97 1 136 1 102 1 28 1 11 1 254 1 219 1 285 1 239 2 257 2 
288 2 85 1 162 1 263 2 266 1 5 1 22 1 169 1 116 1 97 1 174 1 136 1 102 1 157 1 254 1 219 1 285 1 239 2 
263 2 266 1 193 1 5 1 116 2 157 1 11 1 285 1 239 4 125 1 288 2 85 2 162 1 53 1 22 1 169 2 97 1 136 1 102 2 254 1 219 1 257 2 
85 1 263 2 53 1 193 1 5 1 22 1 169 1 116 1 97 1 102 1 28 1 11 1 254 1 46 1 219 1 285 1 239 2 257 2 
288 2 85 1 162 1 263 2 266 1 5 1 22 1 169 1 116 1 97 1 174 1 102 1 157 1 254 1 46 1 219 1 285 1 239 2 
263 2 266 1 193 1 5 1 116 2 157 1 11 1 46 1 285 1 239 4 125 1 288 2 85 2 162 1 53 1 22 1 169 2 97 1 102 2 254 1 219 1 257 2 
263 2 266 1 193 1 5 1 116 2 157 1 11 1 285 1 239 4 125 1 288 2 85 2 162 1 53 1 22 1 169 2 97 1 102 2 254 1 219 1 257 2 
261 1 263 2 72 1 5 1 273 1 119 1 279 1 44 1 43 1 285 1 239 2 206 1 288 1 128 1 243 1 22 1 213 1 56 1 171 1 97 1 175 1 298 1 252 1 254 1 219 1 145 1 257 1 224 1 
288 1 128 1 263 2 72 1 5 1 22 1 213 1 97 1 298 1 44 1 159 1 254 1 219 1 285 1 62 1 239 1 287 1 224 1 
263 2 266 1 193 1 5 1 116 2 157 1 11 1 285 1 239 4 125 1 288 2 85 2 162 1 53 1 22 1 169 2 97 1 102 2 254 1 219 1 257 2 258 1 
261 1 263 2 266 1 193 1 72 1 270 1 5 1 273 1 116 2 119 1 157 1 279 1 11 1 44 1 43 1 285 1 239 4 125 1 288 2 206 1 85 2 162 1 127 1 128 1 53 1 243 1 22 1 169 2 56 1 171 1 97 1 175 1 102 2 254 1 219 1 145 1 257 2 
263 2 266 1 32 1 195 1 193 1 5 1 116 1 157 1 11 1 285 1 203 1 239 3 125 1 288 1 51 1 85 1 53 1 243 1 294 1 22 1 169 1 25 1 97 1 175 1 102 1 254 1 219 1 258 1 257 2 
263 4 266 1 193 2 5 2 155 1 157 1 234 1 11 2 285 2 14 1 239 13 126 1 83 1 125 2 288 6 241 1 162 1 165 1 167 2 53 1 244 1 169 2 97 2 216 1 217 1 254 2 107 2 222 1 257 7 
263 4 266 1 193 2 5 2 155 1 157 1 234 1 11 2 285 2 14 1 239 13 126 1 83 1 125 2 288 6 241 1 162 1 165 1 167 2 53 1 244 1 169 2 97 2 216 1 217 1 254 2 107 2 222 1 257 7 
65 1 263 2 266 4 189 1 193 5 5 1 155 2 278 1 157 5 234 1 11 6 285 1 14 1 49 1 239 36 83 2 125 5 288 17 162 5 242 1 208 1 167 4 53 4 131 1 244 4 169 9 97 1 216 1 217 1 254 1 61 1 303 1 302 2 107 2 222 1 257 19 
263 4 266 2 193 2 5 2 155 1 229 1 157 2 234 1 11 2 285 2 14 1 239 13 126 1 83 1 125 2 288 7 162 1 165 1 167 2 53 1 244 1 169 2 97 2 216 1 217 1 254 2 107 1 222 1 257 6 
288 5 263 2 208 1 167 2 193 1 5 1 244 2 155 2 97 1 278 1 11 1 217 1 234 2 216 2 254 1 285 1 14 1 107 2 49 1 239 11 222 1 125 1 257 6 
261 1 0 2 68 1 263 2 195 2 72 2 5 1 35 1 43 1 44 2 285 1 82 1 239 2 206 1 288 1 128 2 243 2 22 1 95 1 93 1 171 1 27 1 97 1 175 2 298 1 252 1 138 1 254 1 219 1 258 1 257 1 
206 1 261 1 240 1 291 1 128 2 293 1 72 2 110 1 270 1 114 1 112 1 245 1 272 2 215 1 57 1 173 1 177 1 44 2 238 1 
206 1 261 1 291 1 128 1 293 1 190 1 72 1 110 1 114 1 112 1 272 2 215 1 57 1 173 1 177 1 44 1 238 1 
206 1 261 1 240 1 164 1 128 1 3 1 72 1 110 1 213 1 171 1 59 1 180 1 43 1 44 1 
206 1 261 1 240 1 291 1 128 1 293 1 72 1 110 1 114 1 112 1 245 1 272 2 215 1 57 1 173 1 177 1 44 1 238 1 
149 1 
147 1 100 1 137 1 88 1 140 1 21 1 130 1 
147 2 265 1 275 1 233 1 160 1 289 1 88 1 168 1 210 1 129 1 21 1 89 1 132 1 55 1 176 1 137 1 304 1 
147 3 261 2 186 1 266 1 193 1 72 1 34 3 273 1 198 1 37 3 78 1 275 2 156 1 231 1 157 1 233 1 11 1 44 1 43 4 237 1 284 1 125 1 160 2 206 1 289 2 128 1 209 1 166 1 87 1 168 2 88 4 210 2 129 2 89 3 55 2 213 1 54 1 172 1 171 1 96 2 137 3 139 1 304 6 
260 1 64 1 147 1 266 2 193 2 34 4 37 4 275 1 155 1 278 1 157 2 11 2 49 1 125 2 208 1 88 6 167 1 168 1 210 1 129 1 89 1 244 1 137 4 304 2 
65 1 32 1 195 1 6 1 74 1 275 1 157 1 11 2 236 1 203 1 207 1 289 1 20 1 209 2 242 1 168 1 88 2 210 1 129 1 243 1 294 1 90 1 55 1 175 1 101 1 137 2 61 1 62 1 
147 1 168 1 88 1 129 1 210 1 130 1 21 1 275 1 100 1 137 1 
207 1 147 5 209 2 266 2 88 5 193 2 89 5 34 5 37 5 156 1 137 5 157 2 11 2 125 2 304 10 
289 1 147 1 20 1 32 1 243 1 195 1 294 1 21 1 74 1 90 1 55 1 175 1 101 1 233 1 203 1 62 1 160 1 
261 3 72 2 273 1 76 1 198 1 275 2 10 1 201 1 233 1 43 2 44 2 13 1 160 2 206 2 17 1 289 2 163 1 164 1 128 2 168 2 88 1 210 2 129 1 213 2 55 2 170 1 171 2 137 1 180 1 103 1 300 1 
261 1 263 2 32 2 195 2 72 1 5 1 74 1 273 1 119 1 279 1 44 1 43 1 285 1 203 2 286 1 239 1 288 1 206 1 128 1 243 3 294 2 22 1 213 1 56 1 171 1 97 1 298 1 175 3 254 1 219 1 145 1 224 1 
147 4 168 1 88 1 189 1 129 1 210 1 21 2 89 2 34 2 76 1 198 1 37 2 275 1 137 2 304 4 
255 1 226 1 
255 1 226 1 
255 1 226 1 
255 1 226 1 
255 1 226 1 
255 1 226 1 
255 1 226 1 
255 1 226 1 
276 1 268 1 
288 4 65 1 162 2 263 2 242 1 167 1 189 1 5 1 131 1 244 1 169 2 97 1 155 1 278 1 157 1 11 1 254 1 61 1 303 1 285 1 222 1 239 8 257 4 
65 1 263 4 189 1 193 1 269 1 5 2 155 1 278 1 157 1 11 2 285 2 239 11 83 1 125 1 288 5 162 2 242 1 167 2 53 1 131 1 244 1 169 3 97 2 254 2 61 1 303 1 222 1 257 6 
288 2 263 2 208 1 167 1 193 1 5 1 244 1 97 1 155 1 278 1 11 1 254 1 285 1 49 1 222 1 239 5 125 1 257 3 
288 2 263 2 208 1 167 1 193 1 5 1 244 1 97 1 155 1 278 1 11 1 254 1 285 1 49 1 222 1 239 5 125 1 257 3 
288 4 65 1 162 2 263 2 242 1 167 1 189 1 5 1 131 1 244 1 169 2 97 1 155 1 278 1 157 1 11 1 254 1 61 1 303 1 285 1 222 1 239 8 257 4 
288 2 263 2 208 1 167 1 193 1 5 1 244 1 97 1 155 1 278 1 11 1 254 1 285 1 49 1 222 1 239 5 125 1 257 3 
288 2 263 4 208 1 167 1 193 1 269 1 5 2 244 1 97 2 155 1 278 1 11 1 254 2 285 2 49 1 222 1 239 5 125 1 257 3 
288 2 165 1 263 4 208 1 167 1 193 1 5 2 244 1 97 2 155 1 278 1 11 1 254 2 285 2 49 1 222 1 239 5 125 1 257 3 
288 4 65 1 162 3 242 3 53 3 131 1 169 6 157 1 11 1 61 3 303 2 239 7 257 3 
288 2 165 1 263 4 208 1 167 1 193 1 5 2 244 1 97 2 155 1 278 1 11 1 254 2 285 2 49 1 222 1 239 5 125 1 257 3 
288 4 65 1 162 2 263 4 242 1 53 1 189 1 5 2 131 1 169 3 97 2 157 1 11 1 254 2 61 1 285 2 303 1 30 1 239 8 257 4 
288 3 65 1 162 2 242 1 157 1 189 1 11 1 61 1 140 1 303 1 131 1 169 2 239 6 257 3 
288 2 162 1 263 2 266 1 53 1 193 1 269 1 5 1 169 2 97 1 157 1 11 1 254 1 285 1 239 4 125 1 257 2 
288 4 162 1 266 1 167 2 53 1 193 1 244 1 169 2 155 1 157 1 11 1 239 7 257 3 83 1 125 1 
65 1 263 4 266 2 189 1 193 2 5 2 157 3 11 3 285 2 239 23 125 2 83 1 288 12 162 5 242 2 53 4 167 2 131 1 244 2 23 1 169 9 97 2 254 2 61 2 303 1 218 1 302 1 30 2 257 11 
288 1 167 1 239 1 
244 1 239 1 257 1 
288 3 162 2 263 2 266 1 53 1 193 1 269 1 5 1 169 3 97 1 156 1 157 1 11 1 254 1 285 1 239 6 125 1 257 3 
288 2 263 2 208 1 167 1 193 1 5 1 244 1 97 1 155 1 278 1 11 1 254 1 285 1 49 1 222 1 239 5 125 1 257 3 
288 3 65 1 162 1 242 1 53 1 169 2 157 1 11 1 61 1 239 6 257 3 
288 2 162 1 263 2 242 1 53 1 5 1 23 1 131 1 169 2 97 1 254 1 61 1 303 1 285 1 30 1 239 3 257 1 
288 5 65 1 162 3 263 2 242 2 53 2 5 1 169 5 97 1 157 2 11 2 254 1 236 1 61 2 285 1 222 1 239 10 257 5 
263 2 53 1 193 1 5 1 169 1 97 1 11 1 254 1 285 1 222 1 239 2 257 2 
288 2 162 1 263 2 266 1 53 1 193 1 5 1 169 2 97 1 157 1 11 1 254 1 285 1 222 1 239 4 125 1 257 2 
288 2 162 1 165 1 263 6 242 1 53 1 5 3 23 1 169 2 97 3 254 3 61 1 285 3 30 1 239 3 222 1 257 1 
65 2 263 10 266 3 189 1 193 3 269 1 5 5 155 1 228 1 157 5 202 1 11 5 285 5 239 34 83 1 125 3 288 18 162 7 165 1 242 3 167 4 53 5 131 1 23 1 244 3 169 12 97 5 254 5 61 3 303 1 30 2 222 1 146 1 257 16 
175 1 31 1 243 1 195 1 121 1 247 1 224 1 
50 1 31 1 195 1 243 1 71 1 247 1 175 1 9 1 42 1 41 1 121 1 224 1 
206 1 171 1 261 1 164 1 128 1 180 1 43 1 44 1 140 1 72 1 213 1 
206 1 261 1 128 1 195 1 243 2 294 1 72 1 111 1 273 1 213 1 171 1 175 2 279 1 43 1 44 1 203 1 145 1 224 1 
206 1 261 1 128 1 33 1 195 2 243 2 294 1 196 1 72 1 111 1 273 2 171 2 26 1 117 1 175 2 279 1 235 1 43 3 44 1 203 2 62 1 145 1 224 1 
206 1 261 1 128 2 188 1 33 1 195 2 243 2 294 1 196 1 72 2 111 1 273 2 36 1 171 2 26 1 117 1 175 2 279 1 235 1 43 3 44 2 203 2 62 1 224 1 
261 1 147 1 32 1 195 1 72 1 196 1 74 1 115 1 273 1 117 1 43 4 44 1 237 1 203 1 160 1 206 1 289 2 20 1 128 1 166 1 243 1 294 1 21 1 90 1 55 2 94 1 96 1 171 1 26 1 175 1 101 1 62 1 
261 1 147 1 32 1 195 1 72 1 196 1 74 1 273 1 117 1 43 4 44 1 237 1 203 1 160 1 206 1 289 2 20 1 128 1 166 1 243 1 294 1 21 1 90 1 55 2 96 1 172 1 171 1 26 1 175 1 101 1 62 1 
206 1 261 1 128 1 253 1 44 1 72 1 
161 1 206 2 84 1 261 3 0 1 163 1 128 7 87 1 194 1 72 6 270 1 112 1 213 2 212 1 273 1 95 1 171 2 253 1 300 1 44 7 43 3 
261 1 65 1 263 4 189 1 195 1 72 1 5 2 111 1 270 1 273 1 35 1 116 1 119 1 157 1 279 1 11 1 43 1 44 1 203 1 285 2 239 6 288 3 206 1 85 1 162 2 127 1 128 1 242 1 243 2 294 1 131 1 22 2 169 2 248 1 56 1 171 1 97 2 175 2 102 1 254 2 61 1 303 1 219 2 145 1 224 2 257 3 258 1 
147 2 65 1 72 1 74 1 78 1 79 1 157 2 233 1 11 2 237 1 236 1 160 2 17 1 20 1 166 1 242 1 168 2 88 4 243 1 21 2 90 1 96 1 172 1 175 1 101 1 100 1 186 1 32 1 195 1 275 2 43 2 44 1 203 1 207 1 289 3 128 1 209 2 129 2 210 2 294 1 130 1 54 1 55 3 213 1 137 5 61 1 62 1 
206 1 261 2 128 2 166 1 87 1 72 2 270 1 273 1 171 1 253 1 44 2 43 2 284 1 
206 1 261 1 164 1 128 4 72 4 270 1 213 1 36 1 171 1 180 1 44 4 43 1 256 1 
206 1 261 2 163 1 128 2 192 1 196 1 72 2 273 1 170 1 171 1 300 1 44 2 43 1 13 1 
215 1 206 1 261 1 173 1 128 1 177 1 44 1 72 1 272 1 213 1 
206 1 261 1 128 2 72 2 270 1 112 1 95 1 171 1 138 1 44 2 43 1 
206 2 161 1 84 1 261 2 164 1 128 5 196 1 72 4 270 1 213 1 95 1 171 2 180 1 44 5 43 3 256 1 
206 2 161 1 261 2 164 1 128 5 196 1 72 4 270 1 296 1 213 1 95 1 171 2 180 1 44 5 43 3 256 1 
206 1 261 1 128 1 188 1 195 1 243 2 294 1 72 1 111 1 273 1 213 1 171 1 175 2 279 1 43 1 44 1 203 1 224 1 
206 1 261 2 163 1 128 1 87 1 196 1 72 1 212 1 273 1 171 1 300 1 44 1 43 1 
7 1 1 1 142 1 246 1 224 1 
147 1 289 2 187 1 1 1 33 1 21 1 246 2 55 2 79 1 7 2 104 1 235 1 237 1 62 1 142 2 63 1 144 1 224 1 305 1 
68 1 1 1 195 1 243 1 246 1 93 1 7 1 27 1 175 1 
187 1 1 1 305 1 

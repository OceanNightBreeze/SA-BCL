#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 55 15 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 55 15 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 118 (132,357) (132,357) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 118 (132,357) (132,357) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 118 (132,357) (132,357) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 118 (132,357) (132,357) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 47 1 371 1 175 1 27 1 15 1 55 1 127 1 
0 1 47 1 371 1 175 1 27 1 15 1 55 1 127 1 
132 1 0 1 47 1 371 1 175 1 357 1 118 1 179 1 335 1 258 1 192 1 247 1 127 1 
132 1 0 1 47 1 371 1 175 1 357 1 118 1 179 1 335 1 258 1 192 1 247 1 127 1 
132 1 0 1 47 1 371 1 175 1 357 1 118 1 179 1 335 1 258 1 192 1 247 1 127 1 
132 1 0 1 47 1 371 1 175 1 357 1 118 1 179 1 335 1 258 1 192 1 247 1 127 1 
275 1 0 4 110 1 175 1 207 3 14 3 145 1 179 1 135 1 335 1 288 1 127 4 226 1 371 1 47 1 184 2 118 1 161 2 
0 2 175 1 207 1 335 1 288 1 100 1 127 2 247 1 378 1 226 1 371 1 47 1 315 1 269 1 118 1 258 1 
0 3 175 2 207 2 14 1 55 1 135 1 288 1 127 3 247 1 226 1 371 1 47 2 161 1 
123 1 
71 1 185 2 231 1 
367 2 260 1 317 1 244 2 209 2 255 2 140 2 25 2 
318 1 294 1 367 3 244 2 280 1 169 1 126 1 128 1 298 1 80 1 327 1 149 2 255 3 150 1 205 1 233 1 375 1 208 2 260 1 209 2 358 1 211 1 69 2 359 1 337 1 158 1 340 2 160 1 316 1 317 1 92 1 94 1 139 1 218 1 140 2 25 2 72 2 
333 1 341 1 367 1 260 1 244 1 209 1 255 1 140 1 63 1 25 1 
38 1 333 1 367 1 191 1 244 1 313 1 180 1 181 1 138 1 35 1 231 1 255 1 107 1 343 1 
38 1 333 1 367 1 209 1 244 1 313 1 180 2 138 1 35 1 231 1 255 1 140 1 343 2 107 1 25 1 
326 1 82 1 23 1 180 1 343 1 
116 1 338 1 35 1 82 1 23 1 231 1 180 2 343 2 
82 1 180 1 343 1 
333 1 260 1 367 1 209 1 244 1 180 1 137 1 341 1 23 1 255 1 140 1 343 1 63 1 25 1 
231 1 
338 1 35 1 82 1 23 1 231 1 180 2 270 1 343 2 
86 1 163 1 141 2 346 1 156 1 180 5 369 1 370 1 249 1 338 1 35 1 23 2 82 2 231 1 254 2 303 1 202 2 343 5 273 1 
318 1 109 1 208 1 67 1 367 2 167 1 209 1 244 1 211 1 169 1 126 1 337 1 359 1 298 1 128 1 149 1 139 1 255 2 25 1 72 1 
123 1 
367 2 244 2 209 1 43 1 291 1 317 2 255 2 140 1 25 1 
206 1 67 1 215 1 
318 1 208 1 367 1 211 1 169 1 126 1 359 1 337 1 128 1 298 1 149 1 317 1 255 1 139 1 242 1 72 1 
367 3 317 1 167 1 244 3 209 3 255 3 140 1 25 3 
333 1 341 1 367 1 244 1 209 1 255 1 25 1 
43 1 333 1 291 1 367 1 244 1 209 1 255 1 140 1 25 1 
318 1 294 1 295 1 367 4 244 3 167 1 169 1 126 1 298 1 128 1 80 1 327 1 149 1 255 4 107 1 205 1 109 1 375 1 38 1 333 1 208 1 260 1 209 3 358 1 211 1 313 1 180 1 69 2 337 1 359 1 138 1 158 1 291 1 340 1 361 1 317 1 92 1 94 1 139 1 218 1 140 2 343 1 25 3 72 1 
367 2 317 1 191 1 244 2 209 1 167 1 255 2 347 1 25 1 
109 1 295 1 38 1 333 1 367 3 286 1 167 2 209 3 244 3 180 1 313 1 138 1 291 1 231 1 255 3 140 1 343 1 107 1 25 3 
67 1 367 2 167 1 209 2 244 2 291 1 215 1 255 2 140 1 25 2 
318 1 208 1 367 1 211 1 169 1 126 1 359 1 337 1 128 1 298 1 149 1 317 1 255 1 139 1 72 1 
318 1 208 1 367 1 211 1 126 1 359 1 337 1 298 1 89 1 198 1 149 1 317 1 255 1 139 1 72 1 
294 1 97 1 166 1 78 1 327 1 350 1 252 1 103 1 374 1 206 2 375 1 67 2 358 2 310 1 69 2 265 1 158 1 340 4 316 2 215 2 364 1 94 1 218 1 243 1 
333 1 367 1 329 1 244 1 209 1 255 1 107 1 25 1 
109 1 367 5 191 1 167 2 209 4 244 5 347 1 372 1 291 1 317 1 105 1 255 5 140 1 25 4 
333 1 341 1 329 1 367 2 244 2 209 2 255 2 25 2 
197 1 300 1 
197 1 300 1 
7 1 68 1 
7 1 68 1 
7 1 68 1 
147 1 197 1 300 1 
147 1 197 1 300 1 
197 1 300 1 13 1 
7 1 197 2 300 2 366 1 68 1 248 1 
147 1 197 1 300 1 
173 1 197 1 300 1 
173 1 197 1 300 1 
173 1 197 1 300 1 
153 2 180 2 348 1 241 1 90 2 36 1 197 2 117 2 300 2 302 1 231 1 11 1 301 2 200 1 330 2 216 1 366 1 120 3 343 2 
223 1 345 1 367 2 244 2 172 1 227 1 146 1 197 1 300 1 301 1 200 1 330 1 255 2 13 1 153 1 209 2 180 1 237 1 183 1 117 1 317 1 120 1 343 1 25 2 
118 1 179 1 335 1 
118 1 269 1 335 1 
222 1 84 1 269 1 179 2 279 1 335 3 
222 1 289 1 84 1 269 1 179 1 335 2 
222 2 84 1 269 1 179 1 335 2 
141 1 345 1 320 2 369 3 172 1 249 2 251 1 146 1 79 1 102 1 35 1 82 1 103 1 254 1 231 2 374 1 353 2 202 1 303 1 232 1 310 1 180 5 71 1 136 1 185 3 338 1 48 2 23 4 186 1 364 1 217 1 343 5 
141 2 345 4 320 6 369 8 171 1 249 6 251 1 326 5 79 2 195 1 102 3 35 1 82 6 201 1 103 3 12 5 231 5 254 2 374 3 353 6 303 1 202 2 232 2 86 1 235 1 310 3 180 9 71 3 185 9 267 1 338 1 23 7 187 1 364 3 343 9 
141 1 345 1 320 2 369 3 249 2 79 1 35 1 102 1 103 1 231 3 254 1 374 1 202 1 353 2 232 1 86 1 180 3 310 1 71 2 185 4 48 1 23 2 186 1 364 1 217 1 343 3 
141 1 345 2 320 4 369 5 249 4 79 1 35 1 102 2 201 1 103 2 231 4 254 1 374 2 353 4 202 1 232 1 86 1 235 1 180 4 310 2 71 3 185 7 267 1 48 2 186 1 23 3 364 2 217 1 343 4 
123 1 
285 1 211 1 
165 1 
211 1 139 1 
318 1 39 1 297 2 211 3 139 1 271 1 
318 1 211 1 139 1 
211 1 170 1 
97 3 112 1 358 3 336 1 314 1 323 1 240 1 360 1 193 1 88 1 228 2 340 7 352 1 252 2 316 4 374 1 364 1 
97 3 112 1 358 3 336 1 314 1 323 1 240 1 360 1 193 1 88 1 228 2 340 7 352 1 252 2 316 4 374 1 364 1 
97 3 112 1 358 3 30 1 336 1 314 1 323 1 240 1 360 1 193 1 88 1 228 2 340 7 352 1 252 2 316 4 374 1 364 1 
97 10 31 1 323 5 324 4 193 2 228 3 327 1 352 1 196 1 102 3 252 5 104 1 103 3 374 4 331 3 234 1 112 2 358 15 310 3 336 1 69 2 314 2 45 1 240 1 360 2 88 1 266 1 158 1 340 31 316 16 94 1 364 4 218 1 122 1 
97 4 31 1 6 1 323 1 193 1 327 2 228 2 252 3 374 1 307 1 112 1 358 4 336 1 69 4 314 1 360 1 240 1 88 1 158 2 340 9 316 5 364 1 94 2 218 2 
0 2 321 1 279 1 127 2 247 1 226 1 371 1 33 1 9 1 149 1 10 1 108 1 175 1 207 1 14 1 208 1 87 1 179 1 210 1 335 2 288 1 359 1 337 1 47 1 118 1 342 1 362 1 269 1 272 1 72 1 
0 3 296 1 1 1 279 1 321 1 127 3 247 1 226 1 33 1 149 1 37 1 108 1 175 1 207 1 14 2 208 1 87 1 179 1 210 1 335 2 288 1 359 1 337 1 47 1 118 1 342 1 362 1 269 1 272 1 72 1 
0 2 207 1 14 2 1 1 208 1 179 1 279 1 321 1 210 1 335 2 288 1 337 1 359 1 127 2 247 1 226 1 33 1 118 1 269 1 362 1 149 1 342 1 37 1 272 1 72 1 
0 1 296 1 321 2 245 1 126 1 127 1 247 2 5 1 351 1 149 1 61 1 175 1 111 1 208 1 210 2 311 1 211 1 337 1 359 1 47 1 342 2 139 1 72 1 
0 1 321 1 279 1 127 1 247 1 371 1 33 1 9 1 149 1 37 1 108 1 175 1 208 1 87 1 179 1 210 1 335 2 359 1 337 1 47 1 118 1 342 1 362 1 269 1 272 1 72 1 
56 1 
142 1 141 1 191 1 244 1 3 1 249 1 8 2 59 1 254 1 255 1 303 1 202 1 106 1 107 1 151 2 154 2 113 3 313 1 71 2 159 1 119 1 75 1 76 2 278 5 367 1 369 1 325 1 35 1 82 5 231 1 38 1 333 1 180 4 181 1 42 3 239 1 138 1 339 1 338 2 380 1 95 3 343 4 
141 1 142 1 75 1 76 2 367 1 278 5 244 1 191 1 3 1 369 1 249 1 325 1 8 2 35 1 82 5 59 1 231 1 254 1 202 1 303 1 255 1 106 1 107 1 151 2 154 2 38 1 333 1 113 3 313 1 180 4 181 1 42 3 239 1 71 2 138 1 338 2 159 1 339 1 380 1 119 1 95 3 343 4 
141 1 75 1 76 2 367 1 278 4 191 1 244 1 3 1 369 1 249 1 325 1 35 1 82 4 328 2 231 1 254 1 202 1 303 1 255 1 107 1 152 1 154 2 38 1 333 1 16 1 113 2 180 4 313 1 181 1 42 2 185 2 138 1 338 2 339 1 380 1 119 1 95 2 343 4 293 2 
141 1 143 1 191 1 244 1 3 1 249 2 8 2 299 1 351 1 149 2 254 1 303 1 202 1 255 1 106 1 107 1 152 1 151 2 306 1 154 2 111 1 208 2 113 2 211 1 313 1 359 1 71 2 119 1 72 2 164 1 75 1 76 2 367 1 278 4 369 2 126 2 325 1 35 1 82 6 231 2 232 1 38 1 333 1 180 5 181 1 42 2 337 1 185 2 138 1 338 3 339 1 380 1 139 1 95 2 343 5 
75 1 38 1 333 1 278 2 367 1 191 1 244 1 180 3 313 1 181 1 42 1 325 1 138 1 338 1 339 1 380 1 82 2 119 1 255 1 270 1 107 1 343 3 
75 1 38 1 333 1 278 3 367 1 191 1 244 1 180 3 313 1 181 1 325 1 138 1 338 1 339 1 35 1 380 1 82 1 231 1 119 1 255 1 270 1 95 1 107 1 343 3 
75 1 367 1 278 3 244 1 191 1 325 1 35 1 82 2 231 1 255 1 107 1 38 1 333 1 113 1 313 1 180 3 181 1 42 1 138 1 338 1 339 1 380 1 119 1 270 1 95 1 343 3 
142 1 141 1 191 1 244 1 3 1 249 1 349 1 8 2 59 1 254 1 255 1 303 1 202 1 106 1 107 1 151 2 154 2 113 4 313 1 71 2 159 1 119 1 270 1 75 1 76 2 278 6 367 1 369 1 325 1 35 5 82 7 231 5 38 1 333 1 180 5 181 1 42 4 239 1 138 1 338 3 339 1 380 1 95 4 343 5 
141 1 75 1 76 2 367 1 278 4 191 1 244 1 3 1 369 1 249 1 325 1 8 2 35 1 82 4 231 2 254 1 202 1 303 1 255 1 106 1 107 1 152 1 151 2 154 2 38 1 333 1 113 2 180 4 313 1 181 1 42 2 71 2 185 2 138 1 338 2 339 1 380 1 119 1 95 2 343 4 
141 1 75 1 76 2 367 1 278 4 244 1 191 1 3 1 369 1 249 1 325 1 8 2 35 1 82 4 59 1 231 1 254 1 255 1 303 1 202 1 106 1 107 1 151 2 154 2 38 1 333 1 113 2 313 1 180 4 181 1 42 2 239 1 71 2 138 1 338 2 159 1 339 1 380 1 119 1 95 2 343 4 
141 1 75 1 76 2 367 1 278 4 244 1 191 1 3 1 369 1 249 1 325 1 8 2 35 1 82 4 59 1 231 1 254 1 255 1 303 1 202 1 106 1 107 1 151 2 154 2 38 1 333 1 113 2 313 1 180 4 181 1 42 2 239 1 71 2 138 1 338 2 159 1 339 1 380 1 119 1 95 2 343 4 
141 1 75 1 76 2 367 1 278 4 244 1 191 1 3 1 369 1 249 1 325 1 34 1 35 1 82 4 328 2 231 1 254 1 255 1 303 1 202 1 107 1 154 2 38 1 16 1 333 1 113 2 313 1 180 4 261 1 181 1 42 2 185 2 138 1 338 2 159 1 339 1 380 1 119 1 95 2 343 4 293 2 
123 1 294 1 375 1 327 1 158 1 166 1 94 1 218 1 69 2 
221 1 294 1 97 2 323 1 324 3 80 1 327 2 196 1 102 2 252 1 103 1 374 1 283 1 150 1 206 11 331 3 375 2 176 1 67 11 287 1 358 6 134 1 310 2 69 4 158 2 340 14 316 8 215 4 317 1 94 2 364 2 218 2 122 1 
318 1 294 1 367 2 244 1 167 1 169 1 126 1 298 1 128 1 327 1 80 1 149 1 255 2 150 1 109 1 375 1 155 1 208 1 209 1 211 1 134 1 358 1 337 1 359 1 69 2 158 1 340 2 215 1 316 1 317 1 139 1 93 1 94 1 162 1 218 1 242 1 72 1 25 1 
294 3 97 8 244 1 193 1 298 2 102 2 252 4 149 3 103 2 255 3 150 1 259 1 66 2 109 1 205 2 206 7 208 3 67 7 112 1 209 1 358 10 211 2 310 2 69 6 359 2 158 3 215 7 316 10 317 2 364 3 218 3 72 3 25 1 73 2 318 2 28 1 319 1 277 2 367 3 167 1 169 2 126 1 323 4 128 2 228 1 80 1 327 3 37 1 374 3 375 3 134 1 336 1 337 2 240 1 88 1 340 20 94 3 139 2 50 2 
294 2 344 1 244 1 246 1 57 1 351 1 149 7 10 1 255 1 150 1 111 1 356 1 208 7 209 1 358 1 211 4 69 4 359 3 158 2 316 1 218 2 72 6 25 1 318 1 367 1 166 1 167 1 125 1 280 2 126 2 322 1 80 1 327 2 174 1 81 1 37 1 375 2 337 4 44 1 340 2 91 1 139 3 94 2 
294 1 97 1 367 1 244 1 327 1 102 1 252 1 103 1 255 1 374 1 206 1 375 1 67 1 209 1 134 1 310 1 358 2 69 2 158 1 291 1 340 3 215 1 316 1 94 1 364 1 218 1 140 1 220 1 25 1 
206 1 294 1 375 1 97 1 67 1 166 1 310 1 69 2 323 1 327 1 158 1 350 1 340 2 215 1 316 2 94 1 364 1 218 1 
206 1 294 1 375 1 97 1 67 1 166 1 358 2 69 2 327 1 158 1 340 2 252 1 215 1 103 1 94 1 374 1 218 1 243 1 
294 1 97 2 166 1 323 1 327 1 102 1 252 1 103 1 374 1 206 2 375 1 67 2 310 1 358 2 69 2 158 1 340 4 316 2 215 2 364 1 94 1 218 1 
206 1 294 1 375 1 97 1 67 1 310 1 69 2 322 1 323 1 327 1 158 1 350 1 340 2 215 1 316 2 94 1 364 1 218 1 
206 1 294 1 375 1 97 1 67 1 358 2 69 2 322 1 327 1 158 1 340 2 252 1 215 1 103 1 94 1 374 1 218 1 243 1 
294 1 97 2 322 1 323 1 327 1 102 1 252 1 103 1 374 1 206 2 375 1 67 2 310 1 358 2 69 2 158 1 340 4 316 2 215 2 364 1 94 1 218 1 
294 1 97 2 323 1 327 1 102 1 252 1 103 1 374 1 206 2 375 1 67 2 310 1 358 2 69 2 158 1 340 4 316 2 215 2 364 1 94 1 218 1 
318 1 294 1 367 1 169 1 126 1 298 1 128 1 327 1 80 1 149 1 255 1 150 1 205 1 375 1 208 1 211 1 358 1 337 1 359 1 69 2 158 1 340 2 316 1 317 1 139 1 94 1 218 1 72 1 
318 1 294 1 367 1 126 1 298 1 327 1 80 1 198 1 149 1 255 1 150 1 375 1 208 1 334 1 211 1 358 1 337 1 359 1 69 2 89 1 158 1 340 2 316 1 317 1 139 1 94 1 218 1 72 1 
294 1 97 2 323 1 327 1 102 1 252 1 103 1 374 1 206 2 375 1 67 2 310 1 134 1 358 2 69 2 158 1 340 4 316 2 215 2 364 1 94 1 218 1 
73 1 318 1 294 1 97 2 367 1 169 1 323 1 298 1 128 1 327 1 102 1 252 1 149 1 103 1 10 1 374 1 255 1 206 2 205 1 375 1 208 1 67 2 358 2 310 1 211 1 337 1 359 1 69 2 158 1 340 4 215 2 316 2 364 1 139 1 94 1 218 1 72 1 
294 1 97 1 367 1 244 1 323 1 327 1 102 1 60 1 103 1 374 1 255 1 206 1 375 1 67 1 209 1 358 1 134 1 310 1 69 2 158 1 291 1 340 3 316 2 215 1 94 1 364 1 218 1 140 1 25 1 
276 1 224 1 144 1 97 8 31 1 99 1 4 1 250 1 323 4 324 4 101 1 32 1 193 1 228 1 327 3 196 3 102 4 252 4 103 4 304 1 203 4 131 2 374 5 331 3 307 1 18 1 112 1 358 21 310 4 41 1 238 1 336 1 69 6 240 1 88 1 158 3 340 41 316 20 94 3 364 5 218 3 121 1 122 1 
276 1 224 1 144 1 97 7 31 2 99 1 4 1 250 1 323 3 324 4 101 1 32 1 193 1 228 1 327 4 196 3 102 4 252 4 103 3 304 1 203 4 131 2 374 4 331 3 307 1 18 1 112 1 358 18 310 4 41 1 238 1 336 1 69 8 240 1 88 1 158 4 340 38 316 20 94 4 364 5 218 4 121 1 122 1 
276 1 144 1 97 14 31 1 99 1 4 1 250 1 323 7 324 4 32 1 193 1 228 1 327 2 196 2 102 7 252 7 103 7 304 1 203 4 131 1 374 8 283 2 331 4 307 1 18 1 112 1 358 25 310 7 41 1 238 1 336 1 69 4 240 1 88 1 158 2 340 52 316 27 94 2 364 8 218 2 121 1 122 2 
276 1 224 1 144 1 97 6 368 1 4 1 323 3 324 2 32 2 327 2 196 1 102 3 252 3 103 3 203 2 131 1 374 3 331 1 307 1 358 10 310 3 69 4 158 2 340 19 316 9 94 2 364 3 218 2 121 1 122 1 
276 1 144 2 97 4 31 2 99 1 4 1 323 2 250 1 324 2 32 1 327 3 196 2 102 3 252 2 103 2 304 1 374 2 203 4 131 2 331 2 307 1 18 1 358 12 310 3 41 1 238 1 69 6 158 3 340 26 316 14 94 3 364 3 218 3 121 1 
153 1 241 1 332 1 36 1 117 1 197 1 300 1 301 1 330 1 366 1 
227 1 13 1 
74 1 213 1 153 1 308 1 117 1 197 1 300 1 301 1 330 1 
153 1 180 1 348 1 241 1 90 1 36 1 197 1 117 1 300 1 231 1 11 1 200 1 301 1 330 1 216 1 366 1 120 2 343 1 
153 1 180 1 348 1 241 1 90 1 36 1 197 1 117 1 300 1 231 1 11 1 200 1 301 1 330 1 216 1 366 1 120 2 343 1 
153 1 180 1 348 1 241 1 90 1 36 1 197 1 117 1 300 1 231 1 11 1 200 1 301 1 330 1 216 1 366 1 120 2 343 1 
147 1 363 1 248 1 
147 1 363 1 248 1 
173 1 124 1 
173 1 124 1 248 1 
183 1 237 1 
223 1 345 1 367 2 244 2 172 1 227 1 146 1 197 1 300 1 253 1 301 1 255 2 330 1 13 1 153 1 209 2 180 1 237 1 183 1 90 1 117 1 23 1 317 1 216 1 120 1 343 1 25 2 
147 1 363 1 
173 1 124 1 248 1 
294 1 52 1 2 1 367 2 244 2 168 1 280 2 327 1 80 1 81 1 149 2 255 2 150 1 375 1 133 1 208 2 211 1 134 1 358 1 337 1 359 1 69 2 158 1 91 1 340 2 316 1 139 1 94 1 24 1 218 1 72 2 
26 1 208 2 87 1 179 1 279 1 20 1 335 2 337 1 359 1 22 1 33 1 118 1 269 1 149 2 342 1 10 1 37 1 272 1 72 2 
26 1 208 1 87 1 179 1 279 1 335 2 359 1 337 1 33 1 118 1 269 1 149 1 342 1 37 1 272 1 72 1 354 1 
111 1 208 1 211 1 311 1 126 1 337 1 359 1 22 1 351 1 149 1 342 1 139 1 72 1 85 1 
26 1 208 1 87 1 179 1 279 1 20 1 335 2 337 1 359 1 22 1 33 1 118 1 269 1 149 1 342 1 37 1 272 1 72 1 
188 1 
318 1 294 1 367 3 244 2 169 1 126 1 128 1 298 1 80 1 327 1 149 1 255 3 205 1 375 1 208 1 260 1 209 2 358 1 211 1 69 2 359 1 337 1 158 1 340 1 317 1 92 1 94 1 139 1 218 1 140 2 72 1 25 2 
141 1 164 1 320 2 369 1 71 2 249 2 185 4 228 1 35 2 254 1 231 4 353 2 303 1 202 1 232 1 
123 1 
151 1 141 1 180 1 369 1 249 1 71 1 185 1 8 1 338 1 35 1 82 1 231 2 254 1 303 1 202 1 106 1 343 1 
141 4 96 1 346 1 98 1 297 2 249 8 102 2 199 1 149 3 10 1 254 4 103 2 303 4 202 4 353 6 62 2 204 2 208 3 17 1 211 10 310 2 359 3 71 6 264 2 268 2 365 1 364 2 271 1 72 3 318 3 163 1 164 1 320 6 170 2 369 9 126 1 35 2 130 2 82 5 231 8 373 2 374 2 232 2 285 3 236 2 180 5 337 4 379 2 138 2 185 12 338 3 139 3 50 2 343 5 
141 2 164 1 225 1 320 5 369 8 99 1 249 5 250 1 324 1 282 1 196 1 102 2 35 2 82 1 373 1 254 2 231 5 103 2 304 1 353 5 202 2 303 2 374 2 232 1 62 2 331 1 180 1 310 2 41 1 238 1 71 3 185 6 338 1 364 2 343 1 
141 1 367 1 244 1 369 2 249 2 193 1 230 1 373 1 254 1 255 1 202 1 303 1 374 1 62 2 63 1 333 1 112 1 260 1 209 1 180 1 239 1 240 1 137 1 341 1 364 2 140 1 343 1 25 1 
141 1 163 1 346 1 369 1 249 1 35 1 254 1 231 1 303 1 202 1 
320 5 310 2 369 5 249 5 71 5 185 10 102 2 373 1 231 5 103 2 50 1 364 2 353 5 374 2 62 2 
338 1 35 1 82 1 231 1 180 1 343 1 
141 2 164 2 143 1 369 2 126 2 249 2 299 1 351 1 199 2 149 4 82 4 254 2 202 2 303 1 257 1 232 2 86 1 111 1 208 4 177 1 211 1 180 3 337 1 359 1 338 2 139 1 365 1 343 3 72 4 
117 1 292 1 330 1 
117 1 292 1 330 1 
241 1 290 1 117 1 330 1 237 1 
117 1 292 1 330 1 
46 1 117 1 330 1 
46 1 117 1 330 1 
46 1 117 1 330 1 
117 1 330 1 
197 1 300 1 
97 2 324 1 193 1 228 1 327 1 196 1 252 2 374 1 331 1 307 1 112 1 358 4 238 1 336 1 69 2 240 1 88 1 158 1 340 8 316 4 364 1 94 1 218 1 
97 3 323 1 324 2 193 1 228 1 327 2 196 1 102 1 252 2 374 1 65 1 331 1 307 1 112 1 358 5 310 1 238 1 336 1 69 4 240 1 88 1 158 2 340 11 316 6 94 2 364 2 218 2 122 1 
97 4 31 1 99 1 323 1 250 1 324 1 193 1 228 1 327 3 196 1 102 2 252 3 103 2 374 3 304 1 65 1 331 1 307 1 112 1 358 10 310 2 41 1 238 1 336 1 69 6 240 1 88 1 158 3 340 19 316 9 94 3 364 3 218 3 
97 5 31 1 99 1 323 2 250 1 324 1 193 1 228 1 327 3 196 1 102 2 252 3 103 1 374 2 304 1 65 1 331 1 307 1 112 1 358 7 310 2 41 1 238 1 336 1 69 6 240 1 88 1 158 3 340 17 316 10 94 3 364 3 218 3 
97 2 324 1 193 1 228 1 327 1 196 1 252 2 374 1 331 1 307 1 112 1 358 4 238 1 336 1 69 2 240 1 88 1 158 1 340 8 316 4 364 1 94 1 218 1 
97 2 99 1 323 1 250 1 324 1 327 1 196 1 102 2 252 1 103 2 374 2 304 1 331 1 307 1 358 6 310 2 41 1 238 1 69 2 158 1 340 12 316 6 94 1 364 2 218 1 
97 5 31 2 99 1 323 2 250 1 324 1 193 1 228 1 327 4 196 1 102 2 252 3 103 1 304 1 374 2 65 1 331 1 307 1 112 1 358 8 310 2 41 1 238 1 336 1 69 8 240 1 88 1 158 4 340 18 316 10 94 4 364 3 218 4 
224 1 97 6 31 2 99 1 323 3 250 1 324 1 327 4 196 1 102 3 252 3 103 2 304 1 374 2 331 1 307 1 358 7 310 3 41 1 238 1 69 8 158 4 340 16 316 9 94 4 364 3 218 4 
97 6 112 3 358 4 336 1 323 3 240 1 88 2 193 3 340 7 252 3 316 3 374 1 364 1 
224 1 97 4 31 2 99 1 323 1 250 1 324 1 193 1 228 1 327 4 196 1 102 2 252 3 103 1 304 1 374 2 331 1 307 1 112 1 358 8 310 2 41 1 238 1 336 1 69 8 240 1 88 1 158 4 340 18 316 10 94 4 364 3 218 4 
97 3 112 1 358 4 31 1 336 1 69 4 323 1 240 1 88 1 193 1 228 1 327 2 158 2 340 8 316 4 252 2 374 1 364 1 94 2 218 2 
123 1 
97 2 358 2 310 1 69 2 323 1 327 1 158 1 102 1 340 4 252 1 316 2 103 1 374 1 94 1 364 1 218 1 65 1 
331 1 97 2 358 4 310 1 323 1 324 2 196 1 340 7 102 1 252 1 316 3 103 1 374 1 364 1 122 1 
221 1 97 9 31 2 323 4 324 2 193 2 228 1 327 2 102 2 252 5 103 2 374 3 283 1 331 2 112 2 310 2 358 12 336 1 69 4 263 1 240 1 88 1 158 2 340 23 316 11 364 3 94 2 218 2 122 1 
324 1 340 1 358 1 
331 1 340 1 316 1 
97 3 358 3 310 1 69 2 323 1 327 1 158 1 340 6 102 1 316 3 252 2 103 1 94 1 50 1 364 1 374 1 218 1 65 1 
97 2 99 1 323 1 250 1 324 1 327 1 196 1 102 2 252 1 103 2 374 2 304 1 331 1 307 1 358 6 310 2 41 1 238 1 69 2 158 1 340 12 316 6 94 1 364 2 218 1 
97 2 112 1 358 3 323 1 240 1 193 1 340 6 316 3 252 1 364 1 374 1 
97 2 112 1 358 2 31 1 336 1 69 2 263 1 323 1 193 1 88 1 327 1 158 1 340 3 316 1 252 1 94 1 218 1 
307 1 97 5 112 2 358 5 69 2 323 2 240 1 193 2 327 1 158 1 340 10 230 1 252 3 316 5 94 1 364 2 374 2 218 1 
307 1 97 1 310 1 69 2 323 1 327 1 158 1 340 2 316 2 94 1 364 1 218 1 
307 1 97 2 358 2 310 1 69 2 323 1 327 1 158 1 102 1 340 4 252 1 316 2 103 1 374 1 94 1 364 1 218 1 
307 1 224 1 97 2 112 1 358 2 31 1 69 6 263 1 323 1 193 1 327 3 158 3 340 3 252 1 316 1 94 3 218 3 
224 1 97 12 31 2 323 5 324 4 193 3 228 1 327 5 196 1 102 3 252 7 103 3 374 5 65 1 331 3 307 1 234 1 112 3 358 18 310 3 336 1 69 10 263 1 45 1 240 2 88 1 266 1 158 5 340 34 316 16 94 5 364 5 218 5 122 1 
367 1 54 1 317 1 244 1 191 1 255 1 347 1 
54 1 367 1 191 1 244 1 40 1 114 1 347 1 70 1 317 1 49 1 255 1 219 1 
123 1 208 1 149 1 126 1 72 1 
318 1 208 1 367 2 167 1 209 1 244 1 211 1 169 1 126 1 337 1 359 1 298 1 149 1 317 1 139 1 255 2 25 1 72 1 
318 2 38 1 333 1 208 1 367 2 167 1 209 1 244 2 211 3 170 1 169 1 337 1 359 1 298 1 199 1 149 1 317 1 139 2 255 2 107 1 204 1 25 2 72 1 
318 2 38 1 333 1 208 2 367 2 167 1 209 1 244 2 211 3 170 1 337 1 359 1 298 1 89 1 229 1 199 1 149 2 317 1 139 2 255 2 107 1 204 1 25 2 72 2 
318 1 297 1 170 1 126 1 229 1 129 1 35 1 82 1 149 3 199 1 231 1 204 1 285 1 208 3 19 1 211 4 180 2 359 1 337 1 138 1 139 1 343 2 72 3 
318 1 285 1 208 3 297 1 180 2 211 4 170 1 126 1 337 1 359 1 264 1 138 1 229 1 35 1 199 1 149 3 82 1 231 1 139 1 343 2 204 1 72 3 
194 1 208 1 149 1 337 1 359 1 72 1 
318 1 125 1 280 1 246 1 126 2 57 1 174 1 149 6 10 1 37 1 356 1 208 6 211 3 337 3 359 2 157 1 91 1 139 2 271 1 72 5 
294 2 2 1 97 2 244 1 298 1 193 1 149 1 252 2 10 1 255 2 66 1 205 1 206 1 208 1 67 1 112 1 209 1 211 1 358 3 69 4 359 1 158 2 215 1 316 3 317 2 364 1 218 2 72 1 25 1 73 1 318 1 367 2 167 1 169 1 128 1 327 2 228 1 374 1 375 2 134 1 336 1 337 1 240 1 88 1 340 6 94 2 139 1 
163 1 141 2 346 1 297 1 369 1 126 1 249 1 35 1 149 1 82 2 231 1 254 2 202 2 303 2 285 1 208 1 180 3 236 1 211 2 264 1 379 1 138 1 268 1 338 1 23 1 365 1 343 3 72 1 
318 1 208 2 17 1 297 1 211 2 359 1 337 2 194 1 149 2 10 1 139 1 271 1 72 2 
284 1 111 1 208 4 211 1 126 1 337 1 359 1 229 1 351 1 149 4 10 1 139 1 72 4 
318 1 344 1 28 1 208 2 211 1 359 1 337 2 44 1 57 1 174 1 199 1 149 2 139 1 72 2 
208 1 118 1 269 1 149 1 335 1 272 1 126 1 337 1 359 1 72 1 
52 1 208 2 91 1 149 2 10 1 211 1 139 1 37 1 337 1 359 1 72 2 
284 1 111 1 356 1 208 5 211 3 246 1 126 1 359 2 337 2 351 1 91 1 199 1 149 5 10 1 139 2 72 4 
284 1 111 1 208 5 211 3 246 1 126 1 359 2 337 2 262 1 351 1 91 1 199 1 149 5 10 1 139 2 72 4 
318 1 208 1 367 2 167 1 209 1 244 1 211 1 126 1 337 1 359 1 298 1 89 1 149 1 317 1 139 1 255 2 25 1 72 1 
318 1 208 1 211 1 359 1 337 2 57 1 174 1 157 1 199 1 149 1 139 1 271 1 72 1 
274 1 189 1 148 1 317 1 305 1 
274 2 189 2 295 1 38 1 333 1 376 1 180 2 313 1 77 1 138 1 35 1 148 2 23 1 317 1 231 1 256 1 305 1 107 1 343 2 
189 1 133 1 367 1 244 1 168 1 148 1 255 1 24 1 305 1 
376 1 305 1 77 1 
0 3 175 1 207 1 14 1 288 1 127 3 100 1 371 1 47 1 226 1 58 1 
207 1 214 1 161 1 135 1 
226 1 207 1 
123 1 
226 1 0 1 47 1 175 1 207 1 288 1 127 1 
210 1 247 1 127 1 
226 1 0 3 47 1 371 1 175 1 207 1 178 1 312 1 288 1 100 2 182 1 127 3 
226 1 184 1 0 2 47 1 175 1 207 1 14 1 288 1 127 2 
275 1 0 1 175 1 207 1 179 1 335 1 127 1 371 1 47 1 118 1 161 1 
226 1 0 1 47 1 371 1 175 1 207 1 127 1 
226 2 0 1 47 1 371 1 175 1 288 1 127 1 
0 2 175 2 207 1 29 1 212 1 115 1 127 2 226 1 371 1 47 2 
0 3 175 1 207 2 14 2 135 1 288 1 127 3 226 1 371 1 47 1 281 1 58 1 161 1 
0 2 175 1 207 1 14 1 279 1 179 1 335 2 288 1 127 2 226 1 371 1 47 1 269 1 118 1 355 1 
0 4 175 2 207 2 14 2 145 1 135 1 288 1 127 4 226 1 371 1 47 2 184 1 161 1 
226 1 0 1 47 1 371 1 175 1 207 1 288 1 127 1 
0 4 175 1 207 3 14 2 312 1 135 1 288 2 100 1 182 1 127 4 226 2 47 1 214 1 161 1 
0 1 175 1 27 1 190 1 21 1 288 1 127 1 371 1 47 1 226 1 214 1 
0 3 175 1 207 1 309 1 312 2 288 1 182 1 127 3 100 2 371 1 47 1 226 1 
207 2 53 2 377 1 64 1 
0 1 47 1 371 1 175 1 51 1 127 1 
226 1 0 2 47 1 371 1 175 1 207 1 14 1 58 1 288 1 127 2 
83 1 
226 1 0 1 47 1 371 1 175 1 207 1 288 1 127 1 

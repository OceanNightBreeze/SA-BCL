#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 258 116 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 258 49 63 156 (53,71) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 52 (17,126,265) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 258 153 158 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 258 153 158 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 258 153 158 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 258 153 158 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 258 153 158 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) (35,207) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (35,207) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) (35,207) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (111,183,214,221) (111,183,214,221) (111,183,214,221) 233 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 258 49 63 156 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 258 49 63 156 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 258 116 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 258 116 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 258 201 42 177 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 258 116 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 258 49 63 31 34 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 258 116 209 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 258 89 85 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 258 89 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 258 89 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 258 89 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 258 89 85 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 97 87 307 (234,259) (234,259) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 258 201 16 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 258 201 42 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 258 201 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 258 49 63 31 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 258 49 98 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 97 87 307 (234,259) (234,259) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 258 49 98 242 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 258 49 63 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 258 49 63 31 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 97 87 307 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 258 201 16 267 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 97 87 307 (234,259) (234,259) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 258 201 16 238 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 258 49 98 (234,259) (234,259) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
99 1 111 1 214 1 183 1 233 1 
309 1 290 1 203 1 
154 1 203 1 243 2 
32 2 246 2 285 1 140 2 45 1 314 2 46 2 316 2 
246 2 285 1 199 1 45 1 4 2 5 2 7 1 129 1 46 2 293 1 208 1 131 1 171 1 133 1 18 1 258 1 260 1 56 1 175 1 138 1 222 1 140 2 26 2 70 1 270 1 144 1 32 3 274 1 312 1 313 1 116 1 190 1 117 1 276 1 314 3 316 2 160 1 
32 1 246 1 140 1 135 1 45 1 241 1 314 1 202 1 46 1 316 1 
282 1 290 1 303 1 203 1 204 1 205 1 32 1 104 1 273 1 135 1 314 1 95 1 316 1 244 1 
246 1 140 1 290 1 303 1 203 1 46 1 205 2 104 2 32 1 273 1 135 1 314 1 95 1 316 1 244 1 
104 1 302 1 143 1 168 1 205 1 
104 2 298 1 290 1 302 1 203 1 143 1 220 1 205 2 
104 1 143 1 205 1 
246 1 140 1 45 1 202 1 46 1 205 1 104 1 32 1 149 1 135 1 302 1 241 1 314 1 316 1 
203 1 
104 2 290 1 302 1 203 1 217 1 143 1 220 1 205 2 
245 1 61 1 41 1 249 1 290 1 203 1 84 1 182 1 268 2 305 1 205 5 206 2 143 2 104 5 275 1 37 2 188 1 302 2 220 1 
145 1 32 3 246 3 140 1 285 1 314 3 46 3 316 3 
32 1 246 1 135 1 241 1 314 1 46 1 316 1 
32 1 246 1 140 1 36 1 135 1 67 1 314 1 46 1 316 1 
246 3 285 1 199 1 45 1 4 1 5 1 7 1 129 1 46 3 293 1 205 1 208 1 131 1 171 1 133 1 18 1 135 1 95 1 175 1 222 1 138 1 140 2 26 1 230 1 67 1 303 1 232 1 70 1 270 1 144 1 32 4 145 1 308 1 104 1 273 1 274 1 313 1 190 1 117 1 276 1 314 4 316 3 244 1 160 1 
32 2 145 1 246 1 285 1 6 1 314 2 46 1 204 1 316 2 
246 3 140 1 67 1 230 1 303 1 203 1 46 3 205 1 104 1 308 1 145 2 32 3 273 1 51 1 135 1 314 3 95 1 316 3 244 1 
246 2 140 1 102 1 67 1 46 2 71 1 145 1 32 2 314 2 316 2 
138 1 222 1 285 1 26 1 199 1 4 1 5 1 7 1 293 1 70 1 32 1 171 1 133 1 18 1 314 1 
58 1 222 1 285 1 26 1 199 1 4 1 5 1 82 1 7 1 293 1 32 1 171 1 133 1 18 1 314 1 
175 1 60 1 63 1 102 1 65 1 129 1 71 1 144 1 146 1 131 1 208 1 49 1 313 2 53 1 134 1 189 1 190 2 117 1 257 1 258 1 156 1 160 1 
32 1 246 1 284 1 135 1 314 1 46 1 244 1 316 1 
246 1 222 1 138 1 26 1 102 1 199 1 4 1 5 1 7 1 46 1 293 1 70 1 308 1 145 1 32 2 171 1 133 1 18 1 314 2 316 1 
309 1 285 1 
246 1 140 1 285 2 67 1 46 1 32 2 36 1 314 2 316 2 
102 1 189 1 71 1 
138 1 222 1 285 1 100 1 26 1 199 1 4 1 5 1 7 1 293 1 70 1 32 1 171 1 133 1 18 1 314 1 
246 4 140 1 285 1 44 1 67 1 6 1 181 1 46 4 204 1 145 2 32 5 308 1 314 5 316 5 
32 2 246 2 284 1 135 1 241 1 314 2 46 2 316 2 
17 1 80 1 228 1 
17 1 80 1 315 1 
17 1 80 1 315 1 
17 1 80 1 315 1 
17 1 80 1 
17 1 80 1 
52 1 126 1 
52 1 126 1 
52 1 126 1 
17 1 80 1 228 1 
17 1 80 1 228 1 
17 1 80 1 52 1 126 1 
265 1 17 1 80 1 
3 1 80 2 251 1 203 1 9 2 253 3 205 2 104 2 297 1 72 2 311 1 50 2 17 2 152 1 113 2 212 2 21 1 279 1 174 1 
125 1 246 2 285 1 80 1 253 1 9 1 46 2 205 1 48 1 50 1 17 1 93 1 227 1 265 1 30 1 104 1 32 2 72 1 73 1 152 1 113 1 118 1 314 2 316 2 
187 1 172 1 19 1 
223 1 187 1 172 1 
33 1 96 1 223 1 172 3 27 1 19 2 
33 1 96 1 223 1 172 2 91 1 19 1 
33 1 96 2 223 1 172 2 19 1 
125 1 0 1 248 1 290 1 203 2 206 1 205 5 49 1 255 1 256 2 302 4 218 2 220 1 60 1 61 3 227 1 63 1 176 1 65 1 268 1 31 1 143 1 104 5 73 1 108 1 38 2 37 1 275 1 188 2 154 1 120 1 243 3 
41 1 1 1 248 2 290 1 203 5 168 5 205 9 206 2 12 1 49 3 256 6 302 7 220 1 60 3 61 8 225 1 227 4 63 3 176 2 28 1 65 3 268 2 31 3 143 6 104 9 184 1 151 1 38 6 275 1 37 2 188 6 154 3 120 1 191 5 243 9 
41 1 248 1 290 1 203 3 206 1 205 3 49 1 255 1 302 2 256 2 218 1 60 1 61 3 227 1 176 1 63 1 65 1 268 1 31 1 104 3 108 1 37 1 38 2 188 2 154 2 243 4 
41 1 248 1 290 1 203 4 206 1 205 4 12 1 49 2 255 1 256 4 302 3 218 2 60 2 61 5 227 2 176 1 63 2 28 1 65 2 268 1 31 2 104 4 108 1 151 1 38 4 37 1 188 4 154 3 243 7 
133 1 7 1 
133 3 18 1 7 1 294 2 167 1 121 1 
309 1 133 1 294 1 
133 1 200 1 
75 1 
133 1 18 1 7 1 
133 1 304 1 
153 1 258 1 158 1 130 1 
153 1 258 1 158 1 130 1 
147 1 153 1 258 1 158 1 130 1 
153 1 258 1 158 1 130 1 
153 1 258 1 158 1 130 1 
99 1 111 1 214 1 183 1 233 1 
207 1 99 1 111 1 214 1 183 1 
99 1 35 1 111 1 221 1 
207 1 99 1 111 1 214 1 183 1 
99 1 111 1 214 1 183 1 233 1 
115 1 
247 2 79 1 4 2 5 2 7 1 171 1 20 1 173 2 23 1 25 1 95 1 176 1 26 2 268 1 271 2 104 5 32 1 273 1 275 1 37 1 188 2 277 1 278 1 282 1 197 2 286 2 198 4 43 2 288 1 290 1 203 2 293 2 204 1 205 5 206 1 296 1 299 1 133 1 135 1 219 2 220 3 61 2 222 1 62 1 64 1 303 1 69 1 143 6 237 1 76 1 154 2 314 1 243 2 316 1 244 1 
282 1 197 1 198 2 288 1 64 1 303 1 204 1 143 2 205 3 104 3 296 1 32 1 273 1 135 1 278 1 314 1 217 1 25 1 95 1 244 1 316 1 220 1 
282 1 198 3 288 1 43 1 290 1 203 1 204 1 205 3 296 1 135 1 217 1 95 1 25 1 220 1 64 1 303 1 143 1 32 1 104 3 273 1 314 1 278 1 316 1 244 1 
282 1 198 3 197 1 288 1 43 1 290 1 203 1 204 1 205 3 296 1 135 1 217 1 95 1 25 1 220 1 219 1 64 1 303 1 143 2 32 1 104 3 273 1 314 1 278 1 316 1 244 1 
246 1 247 2 11 1 173 2 23 1 95 1 25 1 268 1 271 2 32 2 104 5 273 1 275 1 37 1 188 1 278 1 282 1 197 4 198 4 286 2 288 1 43 2 45 1 290 1 202 1 203 1 46 1 204 1 205 5 206 1 296 1 301 1 135 2 217 1 216 1 219 4 220 3 61 1 140 1 64 1 229 1 303 1 143 7 148 1 149 1 76 1 154 2 241 1 314 2 244 1 316 2 
247 2 282 1 197 2 286 2 198 4 43 2 288 1 290 1 203 2 204 1 206 1 205 4 296 1 135 1 173 2 23 1 25 1 95 1 219 2 220 2 61 1 62 1 64 1 303 1 268 1 143 4 271 2 104 4 32 1 273 1 76 1 37 1 275 1 188 1 154 2 278 1 314 1 243 2 316 1 244 1 
246 1 247 2 173 2 23 1 25 1 95 1 268 1 271 2 104 4 32 2 273 1 37 1 275 1 188 1 278 1 282 1 198 4 286 2 197 2 288 1 43 2 45 1 290 1 202 1 203 1 46 1 204 1 205 4 206 1 296 1 301 1 135 2 216 1 220 2 219 2 61 1 140 1 64 1 229 1 303 1 143 4 149 1 76 1 154 2 241 1 314 2 244 1 316 2 
246 1 247 2 173 2 23 1 25 1 95 1 268 1 271 2 104 4 32 2 273 1 37 1 275 1 188 1 278 1 282 1 198 4 286 2 197 2 288 1 43 2 45 1 290 1 202 1 203 1 46 1 204 1 205 4 206 1 296 1 301 1 135 2 216 1 220 2 219 2 61 1 140 1 64 1 229 1 303 1 143 4 149 1 76 1 154 2 241 1 314 2 244 1 316 2 
246 1 247 2 25 1 95 1 268 1 269 1 271 2 104 4 32 2 273 1 37 1 275 1 112 1 188 1 278 1 282 1 198 4 197 2 288 1 43 2 45 1 290 1 202 1 203 1 46 1 204 1 205 4 206 1 296 1 135 2 220 2 219 2 59 2 61 1 140 1 64 1 229 1 68 2 303 1 143 4 149 1 76 1 241 1 314 2 244 1 316 2 243 2 317 1 
246 1 247 2 11 1 173 2 23 1 25 1 95 1 268 1 271 2 104 4 32 2 273 1 275 1 37 1 188 1 278 1 282 1 197 3 198 5 286 2 43 3 288 1 45 1 290 1 202 1 203 1 46 1 204 1 205 4 206 1 296 1 301 1 135 2 216 1 219 3 220 2 61 1 140 1 64 1 229 1 303 1 143 5 149 1 76 1 154 2 241 1 314 2 244 1 316 2 
246 1 247 2 11 1 173 2 23 1 25 1 95 1 268 1 271 2 104 4 32 2 273 1 275 1 37 1 188 1 278 1 282 1 197 3 198 5 286 2 43 3 288 1 45 1 290 1 202 1 203 1 46 1 204 1 205 4 206 1 296 1 301 1 135 2 216 1 219 3 220 2 61 1 140 1 64 1 229 1 303 1 143 5 149 1 76 1 154 2 241 1 314 2 244 1 316 2 
247 2 282 1 197 2 198 4 43 2 288 1 290 1 203 1 204 1 206 1 205 4 296 1 135 1 25 1 95 1 219 2 220 2 59 2 61 1 62 1 64 1 68 2 303 1 268 1 269 1 143 4 271 2 104 4 32 1 273 1 76 1 37 1 275 1 188 1 278 1 314 1 243 2 316 1 244 1 
146 1 208 1 175 1 131 1 49 1 63 1 117 1 258 1 156 1 129 1 144 1 160 1 
175 1 60 1 102 1 65 1 129 1 71 1 144 1 146 1 131 1 208 1 74 1 313 2 134 1 189 1 190 2 117 1 119 1 160 1 
146 1 208 1 175 1 131 1 49 1 63 1 117 1 258 1 129 1 31 1 144 1 160 1 
208 1 175 1 131 1 49 1 196 1 63 1 117 1 258 1 156 1 129 1 144 1 160 1 
175 1 60 1 196 1 102 1 65 1 129 1 71 1 144 1 131 1 208 1 74 1 313 2 134 1 189 1 190 2 117 1 119 1 160 1 
208 1 175 1 131 1 49 1 196 1 63 1 117 1 258 1 129 1 31 1 144 1 160 1 
208 1 175 1 131 1 49 1 63 1 117 1 258 1 129 1 31 1 144 1 160 1 
285 1 199 1 4 1 5 1 7 1 129 1 293 1 131 1 208 1 171 1 133 1 18 1 258 1 175 1 222 1 138 1 26 1 70 1 270 1 144 1 32 1 313 1 116 1 190 1 117 1 276 1 314 1 160 1 
285 1 199 1 4 1 5 1 7 1 82 1 129 1 293 1 131 1 208 1 171 1 133 1 18 1 258 1 55 1 58 1 175 1 222 1 26 1 144 1 32 1 313 1 116 1 190 1 117 1 276 1 314 1 160 1 
208 1 175 1 131 1 49 1 63 1 117 1 258 1 231 1 129 1 31 1 144 1 160 1 
199 1 4 1 5 1 7 1 129 1 131 1 208 1 49 1 171 1 133 1 18 1 258 1 175 1 222 1 138 1 139 1 63 1 26 1 179 1 70 1 270 1 144 1 31 1 32 1 117 1 314 1 160 1 
175 1 246 1 63 1 140 1 67 1 231 1 29 1 129 1 46 1 31 1 144 1 32 1 131 1 208 1 49 1 117 1 258 1 314 1 316 1 160 1 
175 1 98 1 129 1 87 1 144 1 234 1 307 1 146 1 131 1 208 1 49 1 309 1 74 1 117 1 119 1 258 1 259 1 160 1 
175 1 42 1 177 1 102 1 231 1 201 1 129 1 144 1 131 1 208 1 313 1 189 1 190 1 117 1 258 1 160 1 124 1 
246 1 175 1 142 1 231 1 129 1 46 1 144 1 308 1 145 1 32 1 208 1 131 1 186 1 313 1 116 1 190 1 117 1 276 1 258 1 314 1 316 1 160 1 
246 1 199 1 4 1 5 1 7 1 129 2 46 1 293 1 88 1 131 2 208 2 49 1 171 1 133 1 18 1 258 1 261 1 175 2 222 1 138 1 139 1 63 1 26 1 102 1 231 1 70 1 71 1 270 1 31 1 144 2 32 2 145 1 308 1 34 1 313 2 189 1 190 2 117 2 276 1 314 2 316 1 280 1 160 2 
175 1 196 1 26 1 4 1 5 1 129 1 293 1 144 1 209 1 131 1 208 1 116 1 117 1 258 1 160 1 
175 1 246 1 195 1 63 1 140 1 67 1 231 1 129 1 46 1 31 1 144 1 32 1 131 1 208 1 49 1 117 1 258 1 314 1 316 1 160 1 
262 1 289 1 291 1 129 1 85 1 236 1 144 1 208 1 89 1 313 1 190 1 117 1 258 1 160 1 
262 1 289 1 291 1 129 1 85 1 236 1 144 1 208 1 89 1 313 1 190 1 117 1 258 1 160 1 
262 1 289 1 291 1 129 1 85 1 236 1 144 1 208 1 89 1 313 1 190 1 117 1 258 1 160 1 
262 1 289 1 291 1 129 1 85 1 236 1 144 1 208 1 89 1 313 1 190 1 117 1 258 1 160 1 
262 1 289 1 291 1 129 1 85 1 236 1 144 1 208 1 89 1 313 1 190 1 117 1 258 1 160 1 
3 1 80 1 251 1 203 1 9 1 253 2 205 1 104 1 297 1 72 1 311 1 50 1 17 1 152 1 113 1 212 1 21 1 279 1 
3 1 80 1 251 1 203 1 9 1 253 2 205 1 104 1 297 1 72 1 311 1 50 1 17 1 152 1 113 1 212 1 21 1 279 1 
3 1 80 1 251 1 203 1 9 1 253 2 205 1 104 1 297 1 72 1 311 1 50 1 17 1 152 1 113 1 212 1 21 1 279 1 
78 1 228 1 235 1 
78 1 228 1 235 1 
315 1 254 1 
78 1 315 1 254 1 
48 1 30 1 
125 1 246 2 285 1 80 1 9 1 253 1 46 2 205 1 297 1 48 1 50 1 17 1 212 1 302 1 93 1 227 1 265 1 30 1 32 2 104 1 72 1 73 1 110 1 113 1 118 1 314 2 316 2 
72 1 162 1 311 1 50 1 17 1 3 1 80 1 113 1 21 1 9 1 
265 1 118 1 
72 1 15 1 185 1 50 1 17 1 80 1 113 1 9 1 192 1 
228 1 235 1 
78 1 315 1 254 1 
32 1 211 1 314 1 316 1 
222 1 223 1 264 1 26 2 27 1 4 2 5 2 83 1 179 1 178 1 170 1 210 1 187 1 171 1 172 2 19 1 39 1 54 1 40 1 
194 1 222 1 223 1 264 1 26 1 27 1 4 1 5 1 83 1 170 1 210 1 187 1 171 1 172 2 19 1 39 1 54 1 
222 1 79 1 26 1 4 1 5 1 7 1 69 1 293 1 165 1 272 1 171 1 133 1 39 1 40 1 
222 1 223 1 264 1 26 1 27 1 4 1 5 1 83 1 178 1 170 1 210 1 187 1 171 1 172 2 19 1 39 1 54 1 40 1 
239 1 
61 1 309 1 188 1 290 1 203 1 84 1 182 1 
61 1 286 1 290 1 203 2 268 1 205 1 143 1 206 1 104 1 275 1 37 1 188 1 154 1 173 1 23 1 243 1 220 1 
163 1 4 3 5 3 7 3 84 1 166 1 167 1 171 3 18 3 256 6 94 2 176 2 26 3 101 1 179 1 182 1 268 4 103 2 31 2 104 5 34 2 275 4 37 4 38 6 188 8 277 1 290 2 200 3 203 8 293 1 294 2 206 4 205 5 49 2 132 2 300 1 133 10 215 2 137 2 57 1 220 3 60 2 61 9 222 4 63 2 66 2 65 2 303 2 304 2 143 5 310 2 154 6 157 2 243 12 
290 2 252 1 203 5 201 1 292 1 205 1 206 2 49 2 16 1 256 5 213 1 94 1 220 1 60 2 61 8 176 1 63 2 66 2 65 2 180 1 268 2 143 1 31 2 104 1 109 1 38 5 238 1 37 2 275 2 188 5 154 3 277 1 243 6 124 1 123 1 
246 1 45 1 202 1 46 1 87 1 206 1 205 1 49 2 301 1 135 1 94 1 60 1 61 2 98 1 140 1 66 2 268 1 307 1 32 1 104 1 149 1 37 1 275 1 188 2 241 1 314 1 242 1 316 1 
61 1 290 1 84 1 203 1 268 1 182 1 206 1 275 1 37 1 188 1 
60 2 61 5 63 2 66 2 65 2 203 5 31 2 49 2 34 1 38 5 188 5 256 5 154 5 94 1 243 10 
104 1 290 1 203 1 205 1 143 1 220 1 
41 1 79 1 4 4 5 4 7 1 293 2 206 2 205 3 10 1 13 1 299 1 171 1 300 2 133 1 57 1 220 2 222 1 61 2 26 4 176 2 69 1 268 2 143 4 104 3 237 1 37 2 275 1 188 2 277 2 
246 2 285 1 199 1 4 1 45 1 5 1 7 1 129 1 293 1 46 2 208 1 131 1 171 1 133 1 18 1 175 1 138 1 222 1 26 1 140 2 70 1 270 1 144 1 32 3 274 1 313 1 190 1 117 1 276 1 314 3 316 2 160 1 
61 1 176 1 290 2 203 4 268 1 206 1 38 2 275 1 37 1 153 1 188 2 256 2 154 2 277 1 243 4 
161 1 113 1 9 1 
113 1 128 1 9 1 
113 1 128 1 9 1 
113 1 128 1 9 1 
113 1 9 1 
17 1 80 1 
161 1 113 1 9 1 
161 1 113 1 9 1 
48 1 113 1 155 1 21 1 9 1 
105 1 208 2 97 1 74 1 117 2 119 1 259 1 129 2 87 1 307 1 234 1 144 2 160 2 
49 1 309 1 98 1 74 1 119 1 258 1 259 1 87 1 307 1 234 1 
208 1 49 1 63 1 117 1 258 1 129 1 86 1 31 1 144 1 160 1 
16 1 313 1 190 1 258 1 201 1 124 1 
42 1 313 1 190 1 258 1 201 1 124 1 
313 1 190 1 124 1 
258 1 201 1 
49 1 63 1 313 1 34 1 190 1 258 1 31 1 
208 1 262 1 16 1 313 1 238 1 190 1 117 1 258 1 201 1 129 1 124 1 144 1 160 1 
49 1 98 1 258 1 
97 1 129 1 87 1 307 1 234 1 144 1 105 1 208 1 169 1 74 1 313 1 190 1 117 1 119 1 259 1 160 1 
49 1 98 1 74 1 119 1 258 1 242 1 87 1 307 1 
208 1 262 1 49 1 63 1 117 1 258 1 129 1 144 1 160 1 
208 1 262 1 49 1 63 1 117 1 258 1 129 1 31 1 144 1 160 1 
262 1 97 1 129 2 87 1 144 2 307 1 208 2 74 1 117 2 119 1 122 1 160 2 
262 1 201 1 129 3 267 1 86 1 144 3 208 3 16 1 313 1 190 1 117 3 258 1 122 1 160 3 124 1 
208 1 262 1 16 1 313 1 238 1 190 1 117 1 258 1 201 1 129 1 124 1 144 1 160 1 
262 1 201 1 129 2 86 1 144 2 208 2 16 1 313 1 238 1 117 2 190 1 258 1 160 2 124 1 
208 1 262 1 16 1 313 1 238 1 190 1 117 1 258 1 201 1 129 1 124 1 144 1 160 1 
208 1 262 1 16 1 313 1 238 1 190 1 117 1 258 1 201 1 129 1 124 1 144 1 160 1 
208 1 262 1 16 1 313 1 238 1 190 1 117 1 258 1 201 1 129 1 124 1 144 1 160 1 
208 1 262 1 16 1 313 1 238 1 190 1 117 1 258 1 201 1 129 1 124 1 144 1 160 1 
262 1 201 1 129 2 86 1 144 2 208 2 16 1 313 1 238 1 117 2 190 1 258 1 160 2 124 1 
262 1 201 1 129 2 144 2 208 2 16 1 313 1 238 1 117 2 190 1 258 1 122 1 160 2 124 1 
97 1 74 1 119 1 259 1 87 1 307 1 234 1 
262 1 201 1 129 2 144 2 208 2 16 1 313 1 238 1 117 2 190 1 258 1 122 1 160 2 124 1 
32 1 285 1 314 1 6 1 159 1 316 1 204 1 
283 1 285 1 250 1 6 1 204 1 47 1 32 1 107 1 22 1 314 1 159 1 316 1 
222 1 309 1 79 1 171 1 133 1 26 1 4 1 5 1 7 1 69 1 293 1 
246 1 222 1 138 1 285 1 26 1 199 1 4 1 5 1 7 1 46 1 293 1 145 1 32 2 171 1 133 1 18 1 314 2 316 1 
246 1 285 1 199 1 4 1 5 1 7 2 46 2 171 1 300 1 133 3 18 2 135 1 215 1 138 1 222 1 26 1 304 1 32 2 145 1 273 1 314 2 316 2 244 1 
246 1 285 1 199 1 4 2 5 2 7 2 46 2 14 1 171 1 300 1 133 3 18 2 135 1 215 1 58 1 222 1 26 2 304 1 32 2 145 1 273 1 314 2 316 2 244 1 
222 1 26 3 287 1 141 1 290 1 4 3 5 3 200 1 303 1 7 1 203 1 304 1 293 1 294 1 205 2 143 1 104 2 14 1 171 1 300 1 133 4 18 1 215 1 
222 1 26 3 290 1 4 3 5 3 200 1 303 1 7 1 203 1 304 1 293 1 294 1 205 2 143 1 104 2 14 1 310 1 171 1 300 1 133 4 18 1 215 1 
222 1 224 1 171 1 26 1 4 1 5 1 
222 3 224 1 2 1 26 6 127 1 4 7 5 7 83 1 8 1 179 1 7 2 293 2 306 1 167 1 106 1 90 1 171 2 133 3 18 1 114 1 260 1 
246 1 199 1 4 1 5 1 7 1 129 2 46 1 87 1 131 2 208 2 49 1 171 1 133 1 18 1 258 1 259 1 175 2 222 1 138 1 98 1 139 1 26 1 231 1 179 1 70 1 270 1 307 1 234 1 144 2 32 2 145 1 74 1 117 2 119 1 314 2 316 1 160 2 193 1 280 1 
290 1 4 1 5 1 200 1 203 1 84 1 293 1 294 1 206 2 205 3 132 1 133 2 302 1 57 1 220 1 61 1 26 1 303 1 182 1 268 2 103 1 143 2 104 3 310 1 37 2 275 2 188 1 157 1 
222 2 224 1 26 2 4 2 5 2 179 1 7 1 294 1 166 1 167 1 171 1 133 2 18 1 
222 1 14 1 79 1 171 1 133 1 26 4 77 1 4 4 5 4 7 1 179 1 69 1 293 1 
222 2 26 2 164 1 4 2 5 2 7 1 106 1 150 1 171 1 300 1 133 1 18 1 114 1 92 1 
222 1 223 1 264 1 187 1 171 1 172 1 26 1 4 1 5 1 293 1 
222 1 263 1 171 1 133 1 26 2 4 2 5 2 7 1 8 1 83 1 179 1 
222 2 79 1 2 1 26 4 4 5 5 5 179 1 8 1 7 2 69 1 293 1 90 1 171 2 300 1 133 3 77 1 
222 2 79 1 2 1 26 4 266 1 4 5 5 5 179 1 8 1 7 2 69 1 293 1 171 2 300 1 133 3 77 1 
58 1 246 1 222 1 285 1 26 1 199 1 4 1 5 1 7 1 46 1 293 1 145 1 32 2 171 1 133 1 18 1 314 2 316 1 
222 2 26 1 4 1 5 1 7 1 306 1 167 1 106 1 171 1 300 1 133 1 18 1 114 1 
211 1 81 1 136 1 295 1 
281 1 136 1 24 1 
285 1 240 1 81 1 136 1 295 1 
281 1 246 1 290 1 45 1 203 1 202 1 46 1 205 1 302 1 136 1 135 1 24 1 226 1 140 1 104 1 32 1 149 1 241 1 314 1 316 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (18,331) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (18,331) 64 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (18,331) 64 174 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 152 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 238 310 210 352 91 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 238 310 210 352 91 190 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 238 310 210 352 91 190 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 238 310 210 352 91 190 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 238 310 210 352 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
148 1 82 1 216 1 24 9 293 1 186 2 237 2 34 1 259 1 154 1 92 1 141 9 76 1 143 7 117 3 7 5 255 1 39 4 243 1 246 1 227 1 51 1 356 2 319 1 
148 1 82 1 216 1 24 9 293 1 186 2 237 2 34 1 259 1 154 1 92 1 141 9 76 1 143 7 117 3 7 5 255 1 39 4 243 1 246 1 227 1 51 1 356 2 319 1 
148 1 216 2 24 9 293 2 2 1 219 1 154 1 92 1 76 1 7 5 255 2 227 1 317 1 82 1 186 2 237 2 34 1 54 1 259 2 141 9 143 6 113 1 145 1 117 3 39 4 243 1 246 1 356 2 
148 1 216 2 24 9 293 2 2 1 219 1 154 1 92 1 76 1 7 5 255 2 227 1 317 1 82 1 186 2 237 2 34 1 54 1 259 2 141 9 143 6 113 1 145 1 117 3 39 4 243 1 246 1 356 2 
148 1 216 2 24 10 293 2 2 1 219 1 154 1 92 1 76 1 7 6 255 2 227 1 317 1 82 1 186 2 237 2 34 1 54 1 259 2 141 10 143 7 113 1 145 1 117 4 39 5 243 1 246 1 356 2 
148 1 216 2 24 7 293 2 2 1 219 1 154 1 92 1 76 1 7 4 255 2 227 1 317 1 82 1 186 2 237 1 34 1 54 1 259 2 141 7 143 4 113 1 145 1 117 2 39 3 243 1 356 2 
148 1 82 1 24 4 186 1 293 1 237 2 34 1 259 1 154 1 92 1 141 4 143 3 117 1 7 3 255 1 39 2 246 1 356 1 
108 1 148 1 82 1 216 1 24 2 186 1 259 1 92 1 141 2 142 1 6 1 113 1 145 1 7 1 255 1 356 1 
148 1 82 1 216 1 24 3 186 2 92 1 141 3 76 1 143 1 117 1 7 2 39 1 356 2 
155 1 65 1 13 1 
65 1 66 2 256 1 
128 2 37 2 11 2 250 2 144 2 261 1 225 2 29 1 
337 1 23 1 250 2 172 1 269 1 294 1 272 1 128 2 312 2 77 1 254 1 201 1 225 3 274 1 29 1 184 1 205 1 81 1 137 2 10 1 11 2 323 1 282 2 209 1 37 3 100 1 240 1 144 2 115 2 261 1 241 1 191 1 291 1 88 1 292 2 20 1 120 1 
128 1 52 1 37 1 11 1 250 1 144 1 225 1 268 1 29 1 252 1 
52 1 250 1 176 1 73 1 13 1 37 1 112 1 47 1 85 1 304 1 225 1 41 1 244 1 65 1 
52 1 11 1 250 1 176 2 13 1 128 1 37 1 112 1 85 1 304 1 144 1 225 1 244 2 41 1 65 1 
176 1 45 1 283 1 134 1 244 1 
285 1 176 2 62 1 283 1 134 1 244 2 65 1 13 1 
176 1 134 1 244 1 
52 1 257 1 11 1 250 1 268 1 176 1 283 1 252 1 128 1 37 1 144 1 225 1 29 1 244 1 
65 1 
285 1 298 1 176 2 283 1 134 1 244 2 65 1 13 1 
163 1 320 1 25 1 176 5 217 1 166 1 283 2 153 1 13 1 253 1 285 1 182 2 200 2 341 1 244 5 134 2 65 1 343 1 119 2 
229 1 11 1 250 1 281 1 209 1 172 1 282 1 294 1 272 1 27 1 37 2 240 1 144 1 115 1 225 2 191 1 88 1 184 1 292 1 20 1 
261 1 155 1 
128 1 11 1 37 2 130 1 144 1 250 2 261 2 225 2 160 1 
193 1 281 1 307 1 
172 1 282 1 209 1 294 1 272 1 37 1 189 1 240 1 115 1 261 1 225 1 191 1 88 1 184 1 292 1 20 1 
128 1 229 1 37 3 11 3 250 3 144 3 261 1 225 3 
52 1 37 1 11 1 250 1 144 1 225 1 268 1 
128 1 52 1 37 1 11 1 130 1 250 1 144 1 225 1 160 1 
337 1 23 1 250 3 172 1 269 1 176 1 294 1 272 1 128 2 27 1 312 2 77 1 130 1 201 1 225 4 29 1 184 1 205 1 81 1 229 1 52 1 137 1 10 1 11 3 209 1 282 1 37 4 112 1 85 1 240 1 304 1 144 3 115 1 261 1 191 1 16 1 291 1 88 1 41 1 244 1 292 1 20 1 120 1 67 1 
229 1 207 1 37 2 11 1 47 1 250 2 144 1 261 1 225 2 
52 1 229 2 11 3 250 3 176 1 211 1 128 1 27 1 37 3 112 1 85 1 130 1 304 1 144 3 225 3 244 1 41 1 65 1 67 1 
229 1 11 2 250 2 281 1 128 1 37 2 130 1 144 2 225 2 307 1 
172 1 282 1 209 1 294 1 272 1 37 1 240 1 115 1 261 1 225 1 191 1 184 1 88 1 292 1 20 1 
172 1 282 1 209 1 294 1 272 1 284 1 37 1 115 1 261 1 225 1 191 1 88 1 292 1 147 1 20 1 
21 1 193 2 337 1 269 2 312 2 77 1 48 1 201 1 78 1 299 1 344 1 81 1 10 1 137 4 281 2 238 1 301 1 36 1 287 1 241 2 86 1 40 1 307 2 120 1 
52 1 37 1 11 1 85 1 250 1 144 1 185 1 225 1 
229 2 207 1 11 4 250 5 326 1 128 1 27 1 37 5 47 1 130 1 144 4 225 5 261 1 335 1 
52 1 37 2 11 2 185 1 250 2 144 2 225 2 268 1 
315 1 18 1 
315 1 18 1 
69 1 315 1 18 1 331 1 
69 1 315 1 18 1 331 1 
69 1 331 1 
315 1 18 1 
315 1 18 1 
315 1 18 1 
315 1 18 1 
315 1 18 1 
315 1 18 1 
315 1 18 1 
315 1 18 1 
315 1 316 1 18 1 64 1 
315 1 316 1 176 1 174 1 18 1 64 1 244 1 
293 1 255 1 259 1 
108 1 255 1 259 1 
1 1 108 1 194 1 293 2 259 3 101 1 
1 1 108 1 194 1 293 1 259 2 239 1 
1 1 108 1 194 2 293 1 259 2 
25 3 176 5 177 2 151 1 310 1 295 2 182 1 198 1 200 1 299 1 275 1 133 2 134 1 344 1 256 1 320 1 12 1 238 1 166 2 328 1 283 4 13 1 212 1 213 1 285 1 118 1 40 1 244 5 66 3 119 1 102 1 65 2 
89 1 25 8 176 9 177 6 45 5 151 2 153 1 197 1 310 3 182 2 200 2 299 3 107 1 133 6 134 6 344 3 256 3 320 1 238 3 188 1 166 6 328 2 283 7 13 1 285 1 260 1 14 5 262 1 118 4 40 3 244 9 66 9 65 5 102 1 119 2 
25 3 176 3 151 1 177 2 153 1 310 1 295 1 182 1 200 1 299 1 275 1 133 2 344 1 256 2 12 1 238 1 328 1 166 2 283 2 13 1 118 1 40 1 244 3 65 3 119 1 66 4 
25 5 176 4 177 4 151 1 153 1 197 1 310 2 295 2 182 1 200 1 299 2 275 1 107 1 133 4 344 2 256 3 12 1 238 2 188 1 328 1 166 4 283 3 13 1 118 2 40 2 244 4 65 4 66 7 119 1 
116 1 88 1 155 1 
46 1 88 1 
31 1 
88 1 20 1 
232 1 116 2 294 1 88 3 20 1 136 1 
294 1 88 1 20 1 
339 1 88 1 
137 7 269 3 4 1 330 1 56 1 221 1 349 1 78 2 241 4 86 3 161 1 79 1 40 1 63 1 96 2 305 1 344 1 
137 7 269 3 4 1 330 1 56 1 221 1 349 1 78 2 241 4 86 3 161 1 79 1 40 1 63 1 96 2 305 1 344 1 
137 7 121 1 269 3 4 1 330 1 56 1 221 1 349 1 78 2 241 4 86 3 161 1 79 1 40 1 63 1 96 2 305 1 344 1 
337 1 122 4 70 1 269 15 4 2 310 3 312 2 221 5 201 1 78 5 204 1 299 3 161 1 79 1 96 3 344 4 276 3 137 31 10 1 324 1 322 1 236 1 238 3 330 2 56 2 286 1 349 1 332 1 241 16 86 10 63 2 40 4 305 1 120 1 
337 2 269 4 4 1 312 4 221 1 158 1 201 2 78 3 161 1 96 2 344 1 10 2 137 9 279 1 236 1 330 1 56 1 349 1 241 5 86 4 40 1 63 1 305 1 120 2 
22 1 148 1 216 1 248 1 24 2 293 1 75 1 272 1 92 1 156 1 199 1 7 1 342 1 255 1 230 1 108 1 82 1 208 1 282 1 186 1 209 1 259 2 141 2 143 1 115 1 264 1 350 1 101 1 292 1 356 1 
22 1 148 1 249 1 216 1 248 1 24 3 293 1 75 1 272 1 92 1 199 1 7 1 342 1 255 1 230 1 108 1 346 1 208 1 282 1 186 1 209 1 327 1 259 2 141 3 143 2 115 1 264 1 101 1 292 1 356 1 
22 1 148 1 216 1 248 1 24 2 293 1 272 1 92 1 199 1 7 1 342 1 255 1 230 1 108 1 346 1 282 1 209 1 327 1 259 2 141 2 143 2 115 1 264 1 101 1 292 1 
68 1 249 1 216 2 24 1 172 1 272 1 203 1 342 2 162 1 97 1 230 2 209 1 282 1 186 1 83 1 55 1 141 1 115 1 264 2 88 1 292 1 20 1 356 1 
22 1 216 1 248 1 24 1 293 1 75 1 272 1 199 1 342 1 255 1 230 1 108 1 82 1 346 1 208 1 282 1 186 1 209 1 259 2 141 1 115 1 264 1 350 1 101 1 292 1 356 1 
105 1 
171 2 123 1 90 3 176 4 179 1 5 2 182 1 183 1 47 1 225 1 49 1 95 1 273 1 132 3 134 5 52 1 320 1 187 1 13 1 285 2 244 4 65 1 250 1 25 1 338 3 73 1 297 1 200 1 30 5 256 2 111 1 166 1 168 2 112 1 37 1 85 1 304 1 87 1 353 1 41 1 42 2 119 1 
171 2 25 1 250 1 123 1 176 4 90 3 338 3 73 1 179 1 5 2 297 1 182 1 47 1 183 1 200 1 49 1 225 1 273 1 95 1 134 5 132 3 30 5 256 2 52 1 320 1 187 1 166 1 111 1 13 1 168 2 285 2 37 1 112 1 85 1 304 1 87 1 353 1 42 2 41 1 244 4 65 1 119 1 
25 1 123 1 250 1 338 2 90 2 176 4 73 1 182 1 183 1 47 1 200 1 224 2 225 1 94 2 95 1 132 2 134 4 9 1 30 4 52 1 320 1 187 1 166 1 111 1 139 1 13 1 168 2 285 2 37 1 112 1 85 1 304 1 353 1 42 2 244 4 41 1 65 1 66 2 119 1 
171 2 267 1 123 1 172 2 90 2 176 5 272 1 271 1 5 2 182 1 183 1 47 1 225 1 95 1 132 2 134 6 9 1 52 1 320 1 282 2 187 1 328 1 13 1 55 1 285 3 244 5 65 2 66 2 292 2 20 1 68 1 25 2 250 1 338 2 74 1 73 1 200 1 30 4 256 2 209 1 166 2 111 1 168 2 37 1 112 1 85 1 304 1 115 2 214 1 87 1 353 1 42 2 88 1 41 1 119 1 
52 1 123 1 250 1 338 1 176 3 111 1 73 1 285 1 298 1 112 1 37 1 85 1 183 1 47 1 304 1 225 1 95 1 353 1 134 2 244 3 41 1 30 2 
250 1 123 1 176 3 73 1 298 1 47 1 183 1 225 1 95 1 134 1 132 1 30 3 52 1 111 1 13 1 285 1 37 1 112 1 85 1 304 1 353 1 41 1 244 3 65 1 
250 1 123 1 176 3 90 1 338 1 73 1 298 1 47 1 183 1 225 1 95 1 134 2 132 1 30 3 52 1 111 1 13 1 285 1 37 1 112 1 85 1 304 1 353 1 41 1 244 3 65 1 
171 2 123 1 90 4 176 5 179 1 5 2 182 1 183 1 47 1 225 1 49 1 95 1 273 1 131 1 134 7 132 4 52 1 320 1 187 1 13 5 285 3 244 5 65 5 250 1 25 1 338 4 73 1 297 1 298 1 200 1 30 6 256 2 111 1 166 1 168 2 112 1 37 1 85 1 304 1 87 1 353 1 41 1 42 2 119 1 
171 2 123 1 176 4 90 2 5 2 182 1 47 1 183 1 225 1 95 1 134 4 132 2 9 1 52 1 320 1 187 1 13 1 285 2 244 4 66 2 65 2 250 1 25 1 338 2 73 1 200 1 30 4 256 2 111 1 166 1 168 2 112 1 37 1 85 1 304 1 87 1 353 1 41 1 42 2 119 1 
171 2 25 1 250 1 123 1 338 2 90 2 176 4 73 1 5 2 297 1 182 1 47 1 183 1 200 1 225 1 49 1 273 1 95 1 132 2 134 4 30 4 256 2 52 1 320 1 187 1 166 1 111 1 13 1 168 2 285 2 37 1 112 1 85 1 304 1 87 1 353 1 42 2 41 1 244 4 65 1 119 1 
171 2 25 1 250 1 123 1 338 2 90 2 176 4 73 1 5 2 297 1 182 1 47 1 183 1 200 1 225 1 49 1 273 1 95 1 132 2 134 4 30 4 256 2 52 1 320 1 187 1 166 1 111 1 13 1 168 2 285 2 37 1 112 1 85 1 304 1 87 1 353 1 42 2 41 1 244 4 65 1 119 1 
52 1 123 1 250 1 176 2 152 1 111 1 73 1 112 1 37 1 85 1 183 1 47 1 304 1 225 1 95 1 353 1 244 2 41 1 30 2 
193 1 337 1 269 3 155 1 4 1 312 2 77 1 201 1 78 2 161 1 96 1 344 1 81 1 10 1 137 6 281 1 330 1 287 1 349 1 261 2 241 3 86 2 40 1 305 1 307 1 120 1 
193 11 337 2 122 3 269 6 180 1 310 2 221 1 129 1 312 4 77 1 201 2 78 1 204 1 274 1 299 1 205 1 344 2 81 2 276 3 10 2 137 14 281 11 238 2 167 1 286 1 289 1 261 1 241 8 86 2 40 1 170 1 307 4 120 2 
337 1 250 1 172 1 269 1 294 1 178 1 272 1 27 1 77 1 312 2 201 1 225 2 274 1 184 1 135 1 205 1 81 1 229 1 10 1 11 1 137 2 209 1 282 1 189 1 37 2 240 1 114 1 115 1 289 1 144 1 261 1 191 1 241 1 88 1 292 1 20 1 307 1 120 1 
43 2 172 1 269 10 218 2 4 1 272 2 310 2 312 6 221 4 313 1 225 3 274 1 96 1 184 2 229 1 11 1 10 3 137 20 282 3 281 7 98 1 325 2 238 2 330 1 240 2 144 1 289 1 191 2 241 10 290 1 291 2 292 3 20 2 193 7 337 3 250 1 294 2 27 1 77 3 201 3 78 4 299 2 161 1 205 1 344 3 81 3 346 1 209 2 303 2 37 3 349 1 115 3 261 2 86 8 40 3 88 2 305 1 307 7 120 3 
337 2 68 1 250 1 173 1 172 2 175 1 269 1 126 1 272 2 156 1 312 4 77 2 222 1 254 2 225 1 201 2 274 1 205 1 228 1 81 2 229 1 11 1 10 2 137 2 346 1 209 2 282 8 55 1 287 1 37 1 144 1 115 8 59 1 241 1 88 3 292 7 192 1 20 2 120 2 
0 1 193 1 337 1 250 1 269 2 310 1 128 1 312 2 77 1 130 1 201 1 225 1 78 1 299 1 344 1 81 1 11 1 10 1 137 3 281 1 238 1 37 1 289 1 144 1 241 1 86 1 40 1 307 1 120 1 
81 1 21 1 193 1 137 2 10 1 337 1 281 1 238 1 221 1 77 1 312 2 287 1 201 1 241 2 86 1 307 1 344 1 120 1 
81 1 193 1 137 2 10 1 337 1 281 1 269 2 301 1 77 1 312 2 287 1 201 1 78 1 86 1 299 1 40 1 307 1 120 1 
193 2 337 1 269 2 310 1 312 2 77 1 221 1 201 1 78 1 299 1 344 1 81 1 10 1 137 4 281 2 238 1 287 1 241 2 86 2 40 1 307 2 120 1 
81 1 21 1 193 1 137 2 10 1 337 1 281 1 175 1 238 1 221 1 77 1 312 2 201 1 241 2 86 1 307 1 344 1 120 1 
81 1 193 1 137 2 10 1 337 1 281 1 175 1 269 2 301 1 77 1 312 2 201 1 78 1 86 1 299 1 40 1 307 1 120 1 
193 2 337 1 175 1 269 2 310 1 312 2 77 1 221 1 201 1 78 1 299 1 344 1 81 1 10 1 137 4 281 2 238 1 241 2 86 2 40 1 307 2 120 1 
193 2 337 1 269 2 310 1 312 2 77 1 221 1 201 1 78 1 299 1 344 1 81 1 137 4 10 1 281 2 238 1 241 2 86 2 40 1 307 2 120 1 
337 1 172 1 269 1 294 1 272 1 77 1 312 2 225 1 201 1 274 1 184 1 205 1 81 1 137 2 10 1 209 1 282 1 37 1 240 1 115 1 261 1 241 1 191 1 291 1 88 1 292 1 20 1 120 1 
337 1 172 1 269 1 294 1 272 1 77 1 312 2 225 1 201 1 274 1 205 1 81 1 137 2 10 1 209 1 235 1 282 1 284 1 37 1 115 1 261 1 241 1 191 1 88 1 147 1 292 1 20 1 120 1 
193 2 337 1 269 2 310 1 312 2 77 1 221 1 201 1 78 1 299 1 344 1 81 1 10 1 137 4 281 2 238 1 289 1 241 2 86 2 40 1 307 2 120 1 
193 2 337 1 269 2 294 1 272 1 310 1 156 1 221 1 77 1 312 2 225 1 201 1 78 1 299 1 184 1 344 1 81 1 137 4 10 1 281 2 209 1 282 1 238 1 325 1 37 1 240 1 115 1 241 2 191 1 86 2 291 1 40 1 88 1 292 1 307 2 20 1 120 1 
193 1 337 1 250 1 269 1 310 1 128 1 221 1 312 2 77 1 130 1 201 1 225 1 299 1 344 1 81 1 11 1 10 1 137 3 281 1 238 1 37 1 289 1 144 1 241 2 86 1 40 1 355 1 307 1 120 1 
337 2 308 2 122 2 269 10 91 1 181 1 310 3 312 4 221 3 106 1 223 1 201 2 159 1 78 3 204 1 299 3 344 3 276 1 10 2 137 19 279 1 238 3 286 1 190 1 60 2 241 9 263 1 86 6 40 3 120 2 
276 2 137 11 10 1 337 1 122 2 279 1 269 5 238 1 210 1 91 2 181 2 310 1 312 2 190 1 159 1 201 1 241 6 60 2 15 1 204 2 352 1 344 1 120 1 
337 2 308 1 122 4 269 12 91 1 181 2 310 3 312 4 221 2 223 1 201 2 159 1 78 1 204 3 299 2 344 3 276 3 231 1 10 2 137 24 279 1 210 1 238 3 286 1 190 1 60 3 241 12 263 1 15 1 86 3 352 1 40 2 120 2 
337 2 308 1 122 4 269 12 91 1 181 2 310 3 312 4 221 2 223 1 201 2 159 1 78 2 204 3 299 2 344 3 276 3 231 1 10 2 137 24 279 1 210 1 238 3 286 1 190 1 60 3 241 12 263 1 15 1 86 4 352 1 40 2 120 2 
337 1 122 4 269 17 91 1 181 1 4 1 310 5 312 2 221 4 201 1 159 1 78 5 204 2 299 4 161 1 96 1 344 6 276 4 10 1 137 36 279 1 210 1 238 5 330 1 286 2 349 1 190 1 60 2 241 19 15 1 86 9 352 1 40 5 170 2 305 1 120 1 
337 1 44 1 250 2 124 1 269 1 272 1 77 1 312 2 314 1 254 2 225 2 201 1 274 1 205 1 228 1 81 1 345 1 10 1 137 2 209 1 282 2 37 2 58 1 115 2 289 1 241 1 88 1 292 2 20 1 192 1 120 1 
22 1 108 1 230 1 346 1 293 1 209 1 282 2 259 2 272 1 75 1 127 1 347 1 156 1 199 1 115 2 28 1 255 1 101 1 292 2 
22 1 108 1 230 1 32 1 346 1 293 1 282 1 209 1 259 2 75 1 272 1 199 1 115 1 28 1 255 1 101 1 292 1 
230 1 68 1 209 1 172 1 282 1 83 1 272 1 55 1 127 1 169 1 115 1 88 1 292 1 20 1 
22 1 108 1 230 1 346 1 293 1 209 1 282 1 259 2 75 1 272 1 127 1 347 1 199 1 115 1 28 1 255 1 101 1 292 1 
138 1 
337 1 23 1 250 2 172 1 269 1 294 1 272 1 128 2 312 2 77 1 201 1 225 3 29 1 184 1 205 1 81 1 137 1 11 2 10 1 282 1 209 1 37 3 240 1 115 1 144 2 261 1 191 1 291 1 88 1 292 1 20 1 120 1 
320 1 25 1 177 2 166 2 328 1 13 2 182 1 200 1 214 1 96 1 133 2 66 4 119 1 65 4 256 2 
163 1 25 1 166 1 155 1 65 1 13 1 343 1 
171 1 25 1 176 1 5 1 182 1 200 1 134 1 256 1 320 1 166 1 13 1 285 1 87 1 244 1 119 1 66 1 65 2 
172 1 176 5 177 6 3 2 220 2 272 3 310 2 182 4 46 3 134 5 133 6 8 2 320 4 232 1 282 3 53 1 238 2 328 2 13 2 285 3 146 2 333 2 17 1 244 5 245 2 19 2 292 3 66 12 65 8 20 3 25 9 195 1 294 3 156 1 339 2 200 4 299 2 300 2 80 1 343 1 344 2 256 6 163 1 209 4 166 8 303 2 348 1 304 2 115 3 116 2 214 1 40 2 88 10 119 4 
122 1 25 6 177 4 72 1 310 2 311 1 182 1 200 1 204 1 299 2 133 4 344 2 256 1 276 1 320 1 210 1 238 2 166 4 15 1 352 1 40 2 66 2 119 1 65 1 
25 2 250 1 268 1 176 1 4 1 252 1 128 1 182 1 200 1 225 1 49 1 29 1 161 1 344 2 52 1 257 1 11 1 320 1 35 1 166 2 330 1 37 1 144 1 146 2 40 1 245 1 244 1 119 1 
163 1 320 1 25 1 166 1 13 1 182 1 200 1 119 1 343 1 65 1 
25 5 177 5 238 2 166 5 310 2 303 1 146 2 299 2 40 2 245 1 133 5 66 10 65 5 344 2 256 5 
285 1 176 1 244 1 134 1 65 1 13 1 
68 1 267 1 25 2 172 2 176 3 74 1 309 1 153 1 272 1 182 2 200 2 80 2 134 4 320 1 234 1 209 1 282 4 328 2 166 2 55 1 285 2 115 4 214 2 17 1 88 1 244 3 119 2 292 4 20 1 
149 1 351 1 336 1 
149 1 351 1 336 1 
149 1 57 1 242 1 270 1 336 1 
149 1 351 1 336 1 
84 1 149 1 336 1 
84 1 149 1 336 1 
84 1 149 1 336 1 
149 1 336 1 
315 1 18 1 
137 8 10 2 337 2 269 4 236 1 4 1 330 1 221 1 312 4 349 1 201 2 241 4 78 2 86 3 161 1 96 1 40 1 305 1 344 1 120 2 
137 6 269 3 155 1 4 1 330 1 349 1 78 2 241 3 86 2 161 1 96 1 40 1 305 1 344 1 
10 1 337 1 137 4 277 1 269 2 238 1 310 1 312 2 221 1 201 1 78 1 241 2 299 1 86 2 40 1 344 1 120 1 
276 1 137 7 122 2 269 4 238 1 310 1 286 1 221 1 78 1 241 3 299 1 204 1 86 2 40 1 344 1 
337 2 122 2 269 12 251 1 4 2 310 2 221 4 129 1 312 4 201 2 78 5 299 2 161 1 96 1 344 3 276 2 137 23 10 2 236 2 238 2 330 2 286 1 349 1 241 11 86 9 40 3 170 1 305 1 120 2 
137 1 122 1 269 1 
276 1 137 1 241 1 
337 1 10 1 137 6 277 1 269 3 238 1 310 1 303 1 312 2 221 1 201 1 241 3 78 2 86 3 299 1 40 1 344 1 120 1 
276 1 10 1 337 1 137 5 122 1 279 1 269 2 238 1 210 1 310 1 312 2 201 1 241 3 15 1 204 1 352 1 344 1 120 1 
137 6 269 3 4 1 330 1 221 1 241 3 78 1 86 2 161 1 40 1 344 1 
137 3 10 1 337 1 269 2 236 1 251 1 4 1 330 1 221 1 312 2 349 1 201 1 241 1 78 1 86 2 305 1 120 1 
337 1 10 1 137 10 279 1 269 5 35 1 4 2 330 2 312 2 221 2 201 1 78 3 241 5 86 5 161 1 40 2 344 2 120 1 
10 1 337 1 137 2 279 1 238 1 312 2 221 1 201 1 241 2 86 1 344 1 120 1 
10 1 337 1 137 4 279 1 269 2 238 1 310 1 312 2 221 1 201 1 78 1 241 2 299 1 86 2 40 1 344 1 120 1 
137 3 10 3 337 3 279 1 236 1 269 2 251 1 4 1 330 1 312 6 221 1 223 1 201 3 78 1 241 1 86 2 120 3 
337 5 122 4 70 1 269 18 251 1 4 3 310 3 312 10 221 5 223 1 201 5 78 7 204 1 299 3 161 2 96 1 344 5 276 3 10 5 137 34 277 1 324 1 279 1 236 2 238 3 330 3 286 1 349 1 332 1 241 16 86 12 40 5 305 1 120 5 
337 1 122 1 269 4 4 1 312 2 201 1 78 2 204 1 161 1 96 1 344 1 276 1 137 8 10 1 279 1 330 1 349 1 241 4 86 2 352 1 40 1 305 1 120 1 
337 2 122 2 269 5 4 1 310 1 312 4 221 1 201 2 78 2 204 1 161 1 96 1 344 2 276 1 137 11 10 2 277 1 279 1 238 1 330 1 286 1 349 1 241 6 86 3 352 1 40 1 305 1 120 2 
276 1 10 1 337 1 137 5 122 1 279 1 269 2 238 1 210 1 310 1 312 2 201 1 241 3 15 1 204 1 352 1 344 1 120 1 
276 1 10 1 337 1 137 5 122 1 279 1 269 2 238 1 210 1 310 1 312 2 201 1 241 3 15 1 204 1 352 1 344 1 120 1 
337 1 122 1 269 4 4 1 312 2 201 1 78 2 204 1 161 1 96 1 344 1 276 1 137 8 10 1 279 1 330 1 349 1 241 4 86 2 352 1 40 1 305 1 120 1 
276 1 10 1 337 1 137 5 122 1 279 1 269 2 238 1 210 1 310 1 312 2 201 1 241 3 15 1 204 1 352 1 344 1 120 1 
276 1 10 2 337 2 137 5 277 1 122 1 279 1 269 2 238 1 210 1 310 1 312 4 201 2 241 3 15 1 204 1 352 1 344 1 120 2 
276 1 10 2 337 2 137 5 122 1 279 1 269 2 238 1 210 1 310 1 312 4 223 1 201 2 241 3 15 1 204 1 352 1 344 1 120 2 
137 7 269 4 4 3 330 3 221 3 349 2 78 3 241 3 86 6 161 1 40 1 305 1 344 1 
276 1 10 2 337 2 137 5 122 1 279 1 269 2 238 1 210 1 310 1 312 4 223 1 201 2 241 3 15 1 204 1 352 1 344 1 120 2 
37 1 207 1 47 1 250 1 278 1 261 1 225 1 
321 1 226 1 109 1 334 1 318 1 
68 1 115 1 209 1 282 1 172 1 88 1 155 1 272 1 55 1 292 1 20 1 
229 1 11 1 250 1 209 1 172 1 282 1 294 1 272 1 37 2 240 1 144 1 115 1 261 1 225 2 191 1 88 1 292 1 20 1 
250 1 294 2 272 1 339 1 225 1 300 1 80 1 229 1 52 2 11 1 282 1 209 1 38 1 37 1 112 1 85 1 240 1 115 1 144 1 261 1 191 1 88 3 292 1 20 2 
250 1 294 2 272 1 339 1 225 1 300 1 80 1 229 1 52 2 11 1 282 1 209 1 38 1 37 1 112 1 85 1 115 1 144 1 261 1 191 1 88 3 147 1 292 1 20 2 
172 1 209 1 282 3 176 2 294 1 125 1 13 1 272 1 93 1 46 1 339 1 304 1 115 3 116 1 340 1 300 1 244 2 80 1 88 4 134 1 65 1 292 3 20 1 
172 1 209 1 282 3 176 2 294 1 220 1 13 1 272 1 93 1 46 1 339 1 304 1 115 3 116 1 300 1 244 2 80 1 88 4 134 1 65 1 292 3 20 1 
222 1 115 1 209 1 282 1 272 1 292 1 
346 1 232 1 173 1 172 2 282 7 209 3 294 1 196 1 302 1 126 1 272 2 156 1 222 1 254 1 115 7 59 1 50 1 88 3 292 6 228 1 20 2 
43 1 269 3 272 1 4 1 312 4 225 2 96 1 184 1 229 1 11 1 10 2 137 6 282 1 281 1 325 1 330 1 240 1 144 1 289 1 191 1 241 3 291 1 292 1 20 1 193 1 337 2 250 1 294 1 156 1 77 2 201 2 78 2 161 1 344 1 81 2 345 1 209 1 37 2 349 1 115 1 261 2 86 2 40 1 88 1 305 1 307 1 120 2 
25 1 172 1 176 3 220 1 182 2 46 1 200 2 134 2 343 1 8 1 163 1 320 2 282 1 166 1 283 1 13 1 285 1 304 1 115 1 116 1 333 1 17 1 244 3 88 2 65 1 292 1 119 2 19 1 
232 1 282 2 209 2 294 1 53 1 272 1 156 1 222 1 116 1 115 2 88 2 292 2 20 1 
68 1 209 1 172 1 282 4 110 1 55 1 272 1 156 1 93 1 115 4 88 1 292 4 20 1 
33 1 282 2 209 2 294 1 196 1 302 1 99 1 272 1 313 1 115 2 80 1 88 1 292 2 20 1 
22 1 108 1 115 1 209 1 282 1 172 1 255 1 259 1 272 1 292 1 
346 1 314 1 115 2 209 1 282 2 88 1 272 1 292 2 20 1 228 1 156 1 
68 1 172 1 282 5 209 2 110 1 55 1 126 1 272 2 156 1 115 5 59 1 80 1 88 3 292 4 228 1 20 2 
68 1 172 1 282 5 209 2 110 1 55 1 272 2 156 1 115 5 59 1 80 1 88 3 292 4 306 1 228 1 20 2 
229 1 11 1 250 1 209 1 172 1 282 1 294 1 272 1 37 2 144 1 115 1 261 1 225 2 191 1 88 1 292 1 147 1 20 1 
232 1 282 1 209 2 294 1 196 1 302 1 272 1 115 1 50 1 80 1 88 1 292 1 20 1 
206 1 37 1 44 1 58 1 250 1 225 1 124 1 265 1 103 1 
206 1 61 1 296 1 
206 1 150 1 261 1 265 1 103 1 
206 1 52 1 165 1 150 2 176 2 283 1 13 1 296 1 112 1 85 1 304 1 261 1 61 1 244 2 41 1 65 1 265 2 103 2 67 1 
148 1 82 1 24 3 186 1 92 1 141 3 143 1 145 1 7 1 227 1 356 1 
288 1 117 1 7 1 39 1 
148 1 7 1 
148 1 7 1 155 1 92 1 
148 1 24 1 186 1 7 1 92 1 141 1 356 1 
216 1 24 1 342 1 
266 1 215 1 148 1 82 1 24 3 164 1 186 1 92 1 141 3 145 2 7 1 356 1 
148 1 143 1 24 2 186 1 237 1 7 1 92 1 141 2 356 1 
82 1 24 1 293 1 186 1 7 1 255 1 259 1 39 1 154 1 141 1 356 1 
148 1 82 1 24 1 186 1 7 1 141 1 356 1 
148 2 82 1 24 1 186 1 92 1 141 1 356 1 
148 1 82 1 258 1 24 2 186 2 26 1 141 2 157 1 7 1 356 2 
148 1 82 1 24 3 186 1 92 1 141 3 143 2 117 1 7 2 39 1 243 1 227 1 356 1 
108 1 148 1 82 1 24 2 186 1 280 1 293 1 259 2 92 1 141 2 143 1 7 1 255 1 101 1 356 1 
148 1 82 1 24 4 186 2 237 1 92 1 141 4 143 2 117 1 7 2 39 1 246 1 356 2 
148 1 82 1 24 1 186 1 7 1 92 1 141 1 356 1 
266 1 148 2 164 1 24 4 186 1 92 2 141 4 143 2 288 1 145 1 117 1 7 3 39 1 356 1 
148 1 82 1 233 1 24 2 186 1 140 1 92 1 141 2 143 1 7 1 51 1 356 1 
266 1 148 1 82 1 164 2 24 3 145 2 186 1 7 1 354 1 92 1 141 3 356 1 
104 1 202 2 7 2 247 1 
82 1 24 1 186 1 71 1 141 1 356 1 
148 1 143 1 82 1 24 2 186 1 7 1 227 1 92 1 141 2 356 1 
329 1 
148 1 82 1 24 1 186 1 7 1 92 1 141 1 356 1 

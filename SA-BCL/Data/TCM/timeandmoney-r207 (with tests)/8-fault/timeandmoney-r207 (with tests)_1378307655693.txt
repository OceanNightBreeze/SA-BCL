#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 (92,137) (92,137) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 (92,137) (92,137) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 (92,137) (92,137) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 (92,137) (92,137) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 170 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 32 170 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 301 279 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 301 279 105 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 109 203 61 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 109 203 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 109 203 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 109 203 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 109 203 61 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 126 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 114 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 114 158 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 3 132 3 197 2 35 1 277 1 100 2 63 1 26 1 336 2 65 1 188 1 218 1 284 1 
3 1 124 1 32 1 161 1 35 2 345 1 11 1 277 1 100 2 188 3 258 2 218 4 350 2 38 9 132 9 198 2 197 2 86 1 136 2 269 1 137 1 63 6 336 4 44 1 65 1 92 1 
3 1 124 1 32 1 161 1 35 2 345 1 11 1 277 1 100 2 188 3 258 2 218 4 350 2 38 9 132 9 198 2 197 2 86 1 136 2 269 1 137 1 63 6 336 4 44 1 65 1 92 1 
3 1 124 1 32 1 161 1 35 2 345 1 11 1 277 1 100 2 188 3 258 2 218 4 350 2 38 9 132 9 198 2 197 2 86 1 136 2 269 1 137 1 63 6 336 4 44 1 65 1 92 1 
38 7 3 1 32 1 132 7 161 1 86 1 197 2 198 2 345 1 136 2 35 2 11 1 277 1 269 1 100 2 63 4 137 1 336 3 188 2 65 1 44 1 258 2 218 3 350 1 92 1 
38 4 124 1 132 4 32 1 197 1 198 1 136 1 11 1 277 1 100 1 63 3 336 2 188 1 258 1 218 2 350 2 
38 2 132 2 161 1 197 1 345 1 136 1 35 1 277 1 100 1 12 1 101 1 26 1 336 1 225 1 258 1 284 1 
38 9 124 1 32 1 132 9 198 1 86 1 197 2 136 1 35 1 11 1 277 1 269 1 100 2 63 7 170 1 336 4 65 1 188 3 258 1 218 4 312 1 350 2 
38 9 124 1 32 1 132 9 198 1 86 1 197 2 136 1 35 1 11 1 277 1 269 1 100 2 63 7 170 1 336 4 65 1 188 3 258 1 218 4 312 1 350 2 
260 1 159 1 194 1 266 1 346 1 325 1 307 1 57 1 36 1 201 1 207 1 46 1 145 1 210 1 
111 1 
57 2 147 1 194 1 142 1 184 1 346 2 111 1 223 1 
85 1 147 1 194 2 162 2 214 1 215 1 164 2 165 1 184 2 346 5 111 1 288 1 177 2 57 5 138 1 179 1 142 1 140 1 151 1 
142 1 339 1 111 1 
60 2 111 1 315 1 
260 2 159 2 36 2 201 2 207 2 199 1 46 1 210 2 
272 1 252 1 159 2 211 1 292 1 125 1 342 1 229 1 6 2 167 1 185 1 97 1 36 2 189 1 328 1 172 1 233 1 152 1 260 3 39 2 192 2 133 1 240 2 286 1 222 1 199 1 335 1 156 1 201 3 28 2 207 2 247 1 338 1 291 1 122 1 46 1 210 2 
260 1 159 1 36 1 201 1 207 1 266 1 46 1 325 1 307 1 210 1 
260 1 49 1 159 1 262 1 266 1 346 1 111 1 98 1 295 1 116 1 57 1 201 1 69 1 142 1 
260 1 49 1 159 1 346 2 266 1 111 1 98 1 295 1 36 1 116 1 57 2 201 1 207 1 142 1 210 1 
57 1 194 1 184 1 346 1 108 1 
57 2 147 1 194 1 142 1 184 1 287 1 346 2 111 1 
57 1 184 1 346 1 
260 2 159 1 39 1 192 1 342 1 317 1 133 1 229 1 240 1 222 1 156 1 201 2 328 1 207 1 247 1 291 1 122 1 143 1 331 1 210 1 
260 2 159 2 199 2 36 1 201 2 224 1 207 1 15 1 210 1 
131 1 76 1 331 1 
260 1 39 1 192 1 133 1 342 1 240 1 229 1 222 1 199 1 156 1 201 1 328 1 247 1 173 1 122 1 291 1 
339 1 199 1 
260 3 36 1 159 3 201 3 317 1 207 3 199 1 210 3 
260 1 159 1 201 1 207 1 266 1 307 1 210 1 
260 1 159 1 36 1 201 1 207 1 224 1 15 1 266 1 210 1 
272 1 49 1 252 1 159 3 211 1 125 1 342 1 317 1 229 1 6 2 346 1 185 1 98 1 295 1 36 2 57 1 328 1 172 1 152 1 260 4 39 1 192 1 133 1 240 1 286 1 222 1 199 1 266 1 335 1 156 1 116 1 201 4 28 1 224 1 207 3 247 1 338 1 291 1 122 1 180 1 209 1 143 1 46 1 210 3 
260 2 159 2 201 2 262 1 317 1 207 1 321 1 199 1 210 1 
260 3 49 1 159 3 317 2 346 1 266 1 111 1 98 1 295 1 36 1 57 1 116 1 201 3 224 1 207 3 280 1 180 1 143 1 210 3 
260 2 159 2 317 1 76 1 36 1 201 2 224 1 207 2 331 1 210 2 
260 1 39 1 192 1 133 1 342 1 240 1 229 1 222 1 199 1 156 1 201 1 328 1 247 1 122 1 291 1 
260 1 39 1 192 1 227 1 342 1 240 1 229 1 222 1 199 1 156 1 201 1 247 1 122 1 291 1 259 1 
252 2 211 1 292 2 125 1 76 2 6 2 275 1 34 1 185 1 276 1 128 1 55 1 130 1 331 2 152 1 131 2 286 1 87 1 64 1 309 1 28 4 338 1 310 1 70 1 
260 1 159 1 201 1 37 1 207 1 266 1 98 1 210 1 
260 5 159 5 262 1 317 2 321 1 199 1 56 1 36 1 201 5 207 4 224 1 143 1 219 1 210 4 
260 2 159 2 201 2 37 1 207 2 266 1 307 1 210 2 
74 1 281 1 293 1 
289 1 66 1 68 1 281 2 52 1 293 2 
281 1 293 1 
281 1 293 1 
66 1 52 1 
66 1 52 1 
66 1 52 1 
281 1 121 1 293 1 
281 1 121 1 293 1 
281 1 121 1 293 1 
349 1 281 1 293 1 
349 1 281 1 293 1 
349 1 281 1 293 1 
279 1 43 1 301 1 281 1 16 1 293 1 
57 1 279 1 43 1 301 1 281 1 16 1 105 1 293 1 346 1 
101 1 253 2 196 1 198 1 136 2 
258 1 198 1 136 1 
101 1 258 1 136 1 
101 1 253 1 196 1 198 2 174 1 136 3 
101 1 253 1 196 1 198 1 41 1 136 2 
162 1 147 1 318 2 214 3 343 1 96 1 127 1 164 1 184 1 346 5 128 1 55 1 57 5 58 1 171 1 60 3 221 2 194 4 111 2 176 1 177 1 308 1 64 1 118 2 138 1 205 1 29 1 179 2 120 1 70 1 142 1 315 1 
147 1 162 2 214 8 343 1 215 1 164 2 148 1 184 6 346 9 128 3 99 1 55 3 57 9 58 3 171 2 129 5 108 5 60 9 239 1 221 6 19 1 194 7 153 1 111 5 177 2 308 2 64 3 118 6 138 1 179 6 120 4 70 3 123 1 142 1 315 3 
162 1 214 3 318 1 96 1 164 1 215 1 346 3 128 1 55 1 57 3 58 1 171 1 60 4 221 2 194 2 111 3 177 1 308 1 64 1 118 2 205 1 179 2 120 1 142 1 70 1 315 2 
162 1 214 5 318 2 96 1 164 1 215 1 346 4 128 2 99 1 55 2 57 4 58 2 171 1 60 7 239 1 221 4 194 3 153 1 111 4 177 1 308 1 64 2 118 4 205 1 179 4 120 2 142 1 70 2 315 3 
235 1 
222 1 339 1 191 1 
213 1 222 1 
291 1 222 1 
89 1 247 1 291 1 24 1 222 3 191 2 
247 1 291 1 222 1 
0 1 222 1 
220 1 252 2 73 1 292 2 21 1 112 1 175 1 55 1 270 1 87 2 204 1 309 1 271 1 28 4 226 1 329 1 70 1 340 1 
252 14 73 2 292 14 212 1 125 1 95 1 6 2 53 1 10 3 185 1 128 3 347 1 55 4 58 3 329 2 152 1 21 1 112 1 175 1 270 2 268 4 200 1 87 9 64 3 88 1 271 2 204 5 309 4 28 28 119 1 226 2 338 1 70 4 340 1 
252 3 73 1 125 2 292 3 212 1 6 4 166 1 185 2 55 1 329 1 152 2 21 1 242 1 175 1 112 1 270 1 87 3 271 1 309 2 204 1 28 6 226 1 338 2 70 1 
252 2 73 1 292 2 21 1 112 1 175 1 55 1 270 1 87 2 204 1 309 1 271 1 28 4 226 1 329 1 70 1 340 1 
252 2 73 1 292 2 21 1 112 1 175 1 55 1 270 1 87 2 204 1 309 1 271 1 28 4 226 1 329 1 70 1 340 1 
316 1 38 1 132 1 39 1 93 2 192 1 342 1 240 1 163 1 231 1 197 1 222 1 35 2 156 1 100 1 257 2 206 1 122 1 291 1 282 1 106 2 330 1 250 1 
93 1 342 1 35 1 277 1 100 1 101 1 296 1 257 1 187 1 258 1 106 1 38 1 39 1 132 1 192 1 305 1 240 1 285 1 198 1 197 1 136 2 174 1 27 1 117 1 202 1 122 1 
93 1 50 1 342 1 35 1 277 1 100 1 101 1 296 1 257 1 187 1 258 1 106 1 284 1 38 2 39 1 132 2 192 1 305 1 240 1 285 1 198 1 197 1 136 2 174 1 63 1 26 1 117 1 202 1 336 1 122 1 
93 1 342 1 35 1 100 1 101 1 296 1 257 1 187 1 258 1 106 1 284 1 38 3 39 1 132 3 192 1 240 1 285 1 198 1 197 1 174 1 135 1 136 2 63 2 26 1 27 1 117 1 202 1 336 1 206 1 122 1 
93 1 342 1 35 1 101 1 257 1 187 1 258 1 106 1 284 1 38 2 39 1 132 2 192 1 240 1 285 1 198 1 135 1 136 2 174 1 63 2 26 1 27 1 202 1 336 1 122 1 
302 1 
316 1 49 1 273 2 147 3 231 1 274 1 9 2 184 6 98 1 57 5 278 2 327 1 236 1 60 2 192 2 240 2 23 2 111 2 156 2 25 1 116 1 201 1 243 4 291 1 122 1 69 1 249 1 251 1 159 1 162 1 342 1 214 2 164 1 254 1 344 1 346 5 295 1 256 1 298 1 260 1 39 2 262 1 134 1 222 1 266 1 177 1 308 1 138 1 179 2 45 2 142 1 90 1 313 2 182 2 315 2 
251 1 49 1 159 1 273 1 147 1 274 1 254 1 184 2 346 3 98 1 295 1 57 3 256 1 260 1 262 1 266 1 223 1 25 1 116 1 201 1 243 2 69 1 
251 1 49 1 159 1 147 1 274 1 254 1 184 1 346 3 98 1 295 1 57 3 256 1 260 1 262 1 266 1 111 1 223 1 25 1 116 1 201 1 243 3 69 1 142 1 182 1 
251 1 49 1 159 1 273 1 147 1 274 1 254 1 184 2 346 3 98 1 295 1 57 3 256 1 260 1 262 1 266 1 111 1 223 1 25 1 116 1 201 1 243 3 45 1 69 1 142 1 182 1 
49 1 273 4 147 3 274 1 184 7 8 1 9 2 98 1 57 5 278 2 104 1 236 1 190 1 154 1 23 2 111 5 25 1 116 1 201 1 243 6 69 1 251 1 159 1 162 1 214 1 254 1 164 1 346 5 295 1 256 1 78 1 260 1 262 1 134 1 266 1 223 1 177 1 138 1 179 1 45 4 142 5 313 2 182 4 315 2 
49 1 273 2 147 2 274 1 9 2 184 4 98 1 57 4 278 2 236 1 60 2 23 2 111 2 25 1 116 1 201 1 243 4 69 1 251 1 159 1 162 1 214 1 164 1 254 1 344 1 346 4 295 1 256 1 260 1 262 1 134 1 266 1 177 1 138 1 179 1 45 2 142 1 313 2 315 2 182 2 
251 1 49 1 159 1 273 2 147 2 162 1 214 1 274 1 254 1 164 1 184 4 9 2 8 1 346 4 98 1 295 1 57 4 256 1 278 2 104 1 236 1 190 1 260 1 262 1 134 1 23 2 266 1 111 1 25 1 177 1 116 1 201 1 138 1 243 4 179 1 45 2 69 1 142 1 313 2 182 2 315 2 
251 1 49 1 159 1 273 2 147 2 162 1 214 1 274 1 254 1 164 1 184 4 9 2 8 1 346 4 98 1 295 1 57 4 256 1 278 2 104 1 236 1 190 1 260 1 262 1 134 1 23 2 266 1 111 1 25 1 177 1 116 1 201 1 138 1 243 4 179 1 45 2 69 1 142 1 313 2 182 2 315 2 
251 1 1 1 49 1 159 1 273 2 147 2 162 1 214 1 274 1 254 1 164 1 184 4 346 4 98 1 255 1 295 1 57 4 256 1 348 2 278 2 190 1 237 1 60 2 260 1 262 1 134 1 23 2 266 1 111 1 25 1 177 1 116 1 201 1 138 1 243 4 179 1 45 2 139 2 69 1 142 1 182 2 
251 1 49 1 159 1 273 3 147 2 162 1 214 1 164 1 274 1 254 1 9 2 184 5 8 1 346 4 98 1 295 1 57 4 256 1 278 2 104 1 236 1 190 1 260 1 262 1 134 1 154 1 23 2 266 1 111 1 25 1 177 1 116 1 201 1 138 1 243 5 179 1 45 3 69 1 142 1 313 2 315 2 182 3 
251 1 49 1 159 1 273 3 147 2 162 1 214 1 164 1 274 1 254 1 9 2 184 5 8 1 346 4 98 1 295 1 57 4 256 1 278 2 104 1 236 1 190 1 260 1 262 1 134 1 154 1 23 2 266 1 111 1 25 1 177 1 116 1 201 1 138 1 243 5 179 1 45 3 69 1 142 1 313 2 315 2 182 3 
49 1 273 2 147 2 274 1 184 4 98 1 57 4 278 2 237 1 60 2 23 2 111 1 25 1 116 1 201 1 243 4 69 1 251 1 159 1 162 1 214 1 164 1 254 1 344 1 346 4 295 1 256 1 348 2 260 1 262 1 134 1 266 1 177 1 138 1 179 1 45 2 139 2 142 1 182 2 
2 1 316 1 159 1 252 1 211 2 125 2 292 1 50 1 317 1 342 2 231 1 6 4 7 1 167 2 185 2 189 1 172 1 130 1 152 2 260 1 39 8 192 7 240 8 195 1 22 1 334 1 222 3 286 2 156 2 27 1 201 1 207 1 28 2 122 2 338 2 291 2 91 1 314 1 210 1 
159 1 252 2 211 1 125 1 292 1 76 1 319 1 6 2 185 1 128 1 55 1 36 1 79 1 58 1 331 1 152 1 260 1 131 1 286 1 87 1 201 1 64 1 309 1 207 1 224 1 28 3 338 1 70 1 210 1 
252 2 73 1 211 1 292 1 125 1 21 1 6 2 286 1 199 1 185 1 112 1 175 1 55 1 270 1 87 1 309 1 28 3 338 1 70 1 130 1 339 1 152 1 
252 6 211 1 125 2 292 8 95 1 76 4 322 1 6 4 53 1 10 3 185 2 128 2 55 1 79 1 58 2 189 1 14 1 172 1 17 1 283 1 331 11 152 2 131 11 286 2 199 1 268 3 87 2 64 1 204 1 309 1 28 14 338 2 70 2 
159 1 252 1 211 1 125 1 292 1 342 1 317 1 229 1 76 1 6 2 185 1 79 1 59 1 328 1 189 1 172 1 173 1 152 1 260 2 39 1 192 1 133 1 240 1 222 1 286 1 199 1 156 1 201 2 207 1 28 2 247 1 291 1 122 1 338 1 143 1 248 1 341 1 210 1 
272 2 317 1 229 2 6 6 185 3 55 3 58 2 189 1 328 2 331 6 152 3 18 1 192 3 240 3 21 1 286 3 199 1 156 1 110 2 112 1 27 1 201 3 64 2 204 4 245 1 207 1 28 17 247 2 338 3 122 2 291 2 70 3 210 1 252 9 159 1 73 1 211 3 125 3 292 8 342 2 76 6 126 2 128 2 79 1 172 1 260 3 131 6 261 1 39 3 263 2 133 2 222 2 175 1 270 1 87 7 309 3 143 1 144 2 
131 1 211 1 125 1 292 2 76 1 6 2 286 1 185 1 128 1 87 1 204 1 28 2 338 1 310 1 70 1 130 1 331 1 152 1 
131 1 252 2 211 1 125 1 76 1 6 2 286 1 275 1 185 1 55 1 87 1 64 1 309 1 28 2 338 1 130 1 331 1 152 1 
252 2 211 1 292 2 125 1 76 2 6 2 128 1 185 1 55 1 58 1 130 1 331 2 152 1 131 2 286 1 87 2 64 1 204 1 309 1 28 4 338 1 70 1 
131 1 211 1 125 1 292 2 76 1 6 2 286 1 185 1 128 1 87 1 204 1 28 2 338 1 310 1 70 1 331 1 314 1 152 1 
131 1 252 2 211 1 125 1 76 1 6 2 286 1 275 1 185 1 55 1 87 1 64 1 309 1 28 2 338 1 331 1 314 1 152 1 
252 2 211 1 292 2 125 1 76 2 6 2 128 1 185 1 55 1 58 1 331 2 152 1 131 2 286 1 87 2 64 1 204 1 309 1 28 4 338 1 70 1 314 1 
131 2 252 2 211 1 125 1 292 2 76 2 6 2 286 1 185 1 128 1 55 1 87 2 64 1 58 1 309 1 204 1 28 4 338 1 70 1 331 2 152 1 
272 1 252 1 211 1 292 1 125 1 342 1 229 1 6 2 185 1 189 1 328 1 172 1 152 1 260 1 39 1 192 1 133 1 240 1 222 1 286 1 199 1 156 1 201 1 28 2 247 1 291 1 122 1 338 1 
252 1 227 1 211 1 292 1 125 1 342 1 229 1 6 2 185 1 217 1 189 1 172 1 259 1 152 1 260 1 39 1 192 1 240 1 222 1 286 1 199 1 156 1 201 1 28 2 247 1 291 1 122 1 338 1 
252 2 211 1 292 2 125 1 76 2 6 2 128 1 185 1 55 1 58 1 79 1 331 2 152 1 131 2 286 1 87 2 64 1 204 1 309 1 28 4 338 1 70 1 
272 1 252 2 211 1 292 2 125 1 342 1 50 1 76 2 229 1 6 2 128 1 185 1 55 1 58 1 328 1 331 2 152 1 260 1 131 2 39 1 192 1 263 1 133 1 240 1 222 1 286 1 87 2 201 1 64 1 309 1 204 1 28 4 247 1 122 1 291 1 338 1 70 1 
252 1 159 1 211 1 125 1 292 2 76 1 6 2 185 1 128 1 55 1 36 1 79 1 58 1 331 1 152 1 260 1 131 1 286 1 87 1 201 1 64 1 204 1 207 1 224 1 28 3 338 1 70 1 72 1 210 1 
252 1 61 1 292 1 125 1 109 1 6 2 166 1 185 1 113 1 203 1 28 2 300 1 338 1 152 1 
252 1 61 1 292 1 125 1 109 2 6 2 166 1 185 1 113 1 203 2 28 2 300 1 338 1 152 1 
252 1 61 1 292 1 125 1 109 1 6 2 166 1 185 1 113 1 203 1 28 2 300 1 338 1 152 1 
252 1 61 1 292 1 125 1 109 1 6 2 166 1 185 1 113 1 203 1 28 2 300 1 338 1 152 1 
252 1 61 1 292 1 125 1 109 1 6 2 166 1 185 1 113 1 203 1 28 2 300 1 338 1 152 1 
146 1 159 2 252 1 211 1 4 1 125 1 292 1 342 1 6 2 7 1 167 2 185 1 79 1 189 1 172 1 107 1 152 1 303 1 260 2 39 2 352 1 192 2 240 2 334 1 222 1 286 1 201 2 28 2 122 1 291 1 338 1 
316 1 39 1 238 1 192 1 342 1 240 1 231 1 222 1 156 1 257 1 122 1 291 1 208 1 282 1 
39 1 238 1 192 1 342 1 240 1 285 1 198 1 174 1 136 2 101 1 27 1 296 1 257 1 186 1 246 1 187 1 258 1 122 1 
39 2 238 1 192 2 342 1 50 1 240 2 285 1 198 1 174 1 136 2 101 1 27 1 296 1 257 1 186 1 246 1 187 1 258 1 122 1 
39 1 192 1 342 1 240 1 285 1 198 1 174 1 136 2 101 1 27 1 296 1 257 1 246 1 187 1 299 1 258 1 122 1 
178 1 
85 1 162 1 214 1 164 1 111 1 288 1 177 1 138 1 179 1 142 1 
60 10 221 5 214 5 126 1 128 2 111 5 55 2 58 2 118 5 64 2 232 1 80 2 179 5 70 2 315 5 
57 1 147 1 142 1 184 1 346 1 111 1 
316 1 342 1 162 2 147 2 214 2 51 2 231 1 215 1 164 2 184 4 346 3 57 3 327 1 298 2 39 4 192 4 240 4 333 1 241 1 222 1 156 2 177 2 308 2 138 1 179 2 30 1 122 1 291 1 249 1 
288 1 85 1 214 1 179 1 142 1 339 1 111 1 
162 1 147 1 214 1 164 1 9 1 184 1 346 1 57 1 236 1 60 1 111 2 177 1 138 1 179 1 142 1 313 1 315 1 
162 1 342 2 213 1 214 2 126 1 216 1 164 1 103 1 39 1 192 1 306 1 240 1 264 1 222 2 156 1 177 1 308 1 138 1 89 1 247 1 291 1 122 1 141 1 
147 1 162 2 75 1 214 8 164 2 184 1 53 1 346 1 10 1 149 1 128 2 55 2 57 1 326 1 58 2 232 1 80 2 298 1 332 1 60 6 304 1 221 5 40 1 111 5 268 1 177 2 308 1 118 5 138 2 64 2 179 5 31 1 70 2 142 2 315 3 
159 1 73 1 162 1 214 2 164 1 324 1 346 1 325 1 55 1 57 1 36 1 232 1 80 2 104 1 260 1 266 1 307 1 112 1 270 1 177 1 201 1 138 1 179 2 207 1 70 2 46 1 145 1 210 1 
272 1 252 1 159 2 211 1 125 1 342 1 229 1 6 2 185 1 36 2 328 1 172 1 152 1 260 3 39 1 192 1 133 1 240 1 222 1 286 1 199 1 156 1 335 1 201 3 28 1 207 2 247 1 338 1 122 1 291 1 46 1 210 2 
60 4 221 2 162 1 214 1 164 1 111 4 177 1 308 1 118 2 138 1 179 2 298 1 329 1 142 2 315 2 
43 1 301 1 
43 1 301 1 
43 1 301 1 
43 1 301 1 
43 1 301 1 
43 1 301 1 
43 1 301 1 
43 1 301 1 
281 1 293 1 
252 4 73 1 125 1 292 4 6 2 166 1 324 1 185 1 112 1 270 1 55 2 87 4 309 2 204 2 28 8 338 1 70 2 152 1 
125 1 292 2 6 2 166 1 185 1 128 1 87 1 204 1 28 2 338 1 70 1 152 1 
252 2 125 1 292 2 6 2 166 1 185 1 128 1 55 1 87 2 64 1 58 1 309 1 204 1 28 4 338 1 70 1 152 1 
252 2 73 1 212 1 125 3 292 1 6 6 166 1 294 1 185 3 270 1 87 2 309 1 204 1 81 1 28 3 338 3 152 3 
252 16 73 2 212 2 125 5 292 13 95 1 6 10 53 1 166 1 294 1 10 3 185 5 128 3 347 1 55 5 168 1 58 3 81 1 152 5 21 1 112 2 175 1 270 2 268 4 200 1 87 10 64 3 88 1 204 5 309 5 28 29 338 5 70 5 
252 3 73 1 292 2 125 2 212 1 21 1 6 4 185 2 112 1 175 1 55 1 270 1 87 2 204 1 309 1 28 5 338 2 70 1 152 2 
55 1 270 1 252 2 87 1 73 1 292 1 309 1 28 3 21 1 70 1 339 1 112 1 175 1 
252 2 125 1 292 2 6 2 185 1 128 1 55 1 168 1 87 2 64 1 58 1 309 1 204 1 28 4 338 1 70 1 152 1 
252 4 292 3 95 1 53 1 10 1 128 1 55 1 268 2 87 2 64 1 58 1 309 1 204 1 28 7 70 1 
252 11 73 2 292 9 212 2 125 2 95 1 322 1 6 4 10 2 294 1 128 2 185 2 55 3 58 2 14 1 152 2 21 1 112 1 175 1 270 2 268 2 87 8 64 2 204 4 309 4 28 20 338 2 70 3 
268 1 252 1 28 1 
292 1 28 1 10 1 
252 3 125 1 292 3 126 1 6 2 185 1 128 1 55 1 168 1 87 3 58 1 64 1 204 1 309 2 28 6 338 1 70 1 152 1 
252 6 125 1 292 6 75 1 6 2 53 1 166 1 10 1 149 1 185 1 128 2 55 2 326 1 58 2 152 1 304 1 268 1 87 2 64 2 204 1 309 1 28 12 338 1 70 2 31 1 
55 1 252 1 292 1 28 2 70 1 112 1 
252 2 73 1 292 1 212 1 125 1 21 1 6 2 294 1 185 1 175 1 270 1 87 2 204 1 309 1 28 3 338 1 152 1 
252 3 73 1 125 1 292 2 6 2 53 1 166 1 10 1 149 1 185 1 55 1 152 1 21 1 175 1 112 1 268 1 270 1 87 1 309 1 28 5 338 1 70 1 
252 4 73 1 125 2 292 4 95 1 6 4 53 1 166 1 10 1 149 1 185 2 128 1 55 1 168 1 58 1 152 2 21 1 112 1 175 1 270 1 268 2 87 2 309 1 204 1 28 8 338 2 70 2 
252 9 73 1 125 3 292 7 212 1 75 1 6 6 53 1 166 1 10 1 149 1 185 3 128 2 55 3 168 1 326 1 58 2 152 3 304 1 21 1 112 1 175 1 270 1 268 1 87 3 64 2 204 1 309 2 28 16 338 3 70 3 31 1 
252 6 73 1 212 1 125 3 292 8 75 1 6 6 53 1 166 1 10 1 149 1 185 3 128 2 55 2 168 1 326 1 58 2 152 3 304 1 21 1 112 1 175 1 270 1 268 1 87 4 64 1 204 2 309 2 28 14 338 3 70 3 31 1 
252 3 73 1 125 1 292 2 6 2 53 1 166 1 10 1 149 1 185 1 55 1 152 1 21 1 175 1 112 1 268 1 270 1 87 1 309 1 28 5 338 1 70 1 
252 6 125 1 292 6 75 1 6 2 53 1 166 1 10 1 149 1 185 1 128 2 55 2 326 1 58 2 152 1 304 1 268 1 87 2 64 2 204 1 309 1 28 12 338 1 70 2 31 1 
252 7 73 1 125 4 292 8 212 2 75 1 6 8 53 1 166 1 10 1 149 1 185 4 128 2 55 2 168 1 326 1 58 2 152 4 304 1 21 1 112 1 175 1 270 1 268 1 87 4 64 1 204 2 309 2 28 15 338 4 31 1 70 3 
252 7 125 4 292 9 212 2 75 1 6 8 53 1 166 1 10 1 149 1 185 4 128 3 55 2 326 1 58 3 81 1 152 4 304 1 268 1 87 6 64 2 204 3 309 3 28 16 338 4 31 1 70 3 
252 3 73 2 292 2 21 2 175 1 112 1 55 1 270 2 87 4 309 2 204 2 28 5 70 1 
252 7 73 1 125 4 292 8 212 2 75 1 6 8 53 1 166 1 10 1 149 1 185 4 128 2 55 2 326 1 58 2 81 1 152 4 304 1 21 1 112 1 175 1 270 1 268 1 87 3 64 1 204 1 309 2 28 15 338 4 31 1 70 3 
114 1 
114 1 115 1 42 1 83 1 158 1 47 1 
316 1 39 4 192 4 183 1 342 1 50 1 240 4 231 1 265 1 222 1 156 1 291 1 122 1 
351 1 39 2 192 2 342 2 240 2 51 1 222 1 54 1 297 1 245 1 247 1 337 1 291 1 122 1 
101 1 39 1 192 1 342 1 285 1 240 1 258 1 122 1 136 1 156 1 
303 1 39 2 192 2 50 1 342 1 240 2 7 1 222 1 27 1 291 1 122 1 
316 1 39 5 192 4 50 1 342 2 240 5 51 1 195 1 22 1 231 1 265 1 7 1 222 3 156 1 291 2 122 2 
316 1 39 5 192 4 50 1 193 1 342 2 240 5 51 1 22 1 231 1 265 1 7 1 222 3 156 1 291 2 122 2 
316 1 39 1 192 1 342 1 240 1 122 1 291 1 231 1 222 1 339 1 156 1 
260 2 159 1 39 1 192 1 342 1 317 1 229 1 240 1 222 1 199 1 156 1 201 2 207 1 328 1 247 1 291 1 122 1 210 1 
0 1 49 1 159 2 317 1 342 1 229 1 51 1 98 1 328 1 260 2 39 1 192 1 240 1 62 1 222 3 199 1 266 1 201 2 207 1 247 2 122 1 291 2 210 2 
0 1 49 1 159 2 227 1 183 1 317 1 342 1 229 1 51 1 98 1 260 2 39 2 192 2 240 2 62 1 222 3 199 1 266 1 201 2 207 1 247 2 122 1 291 2 210 2 
0 1 39 3 192 3 183 1 342 1 240 3 213 1 51 1 33 1 62 1 222 4 184 1 346 2 156 1 111 1 116 1 169 1 57 2 247 1 291 1 122 1 142 1 191 1 
0 1 39 3 192 3 183 1 342 1 240 3 213 1 51 1 62 1 222 4 184 1 346 2 156 1 111 1 116 1 57 2 247 1 82 1 291 1 122 1 142 1 191 1 
2 1 39 1 192 1 342 1 240 1 122 1 
2 1 351 1 39 7 192 6 50 1 342 3 240 7 195 1 22 1 167 1 7 1 222 3 156 2 27 1 89 1 157 1 247 1 337 1 291 2 122 2 91 1 
272 1 252 2 159 1 73 1 211 2 292 1 125 2 342 1 317 1 50 1 229 1 6 4 185 2 55 1 79 1 328 1 107 1 152 2 260 2 39 1 192 1 263 1 133 1 240 1 21 1 222 1 286 2 199 1 110 1 112 1 175 1 270 1 87 1 201 2 309 1 28 3 207 1 247 1 291 1 122 1 338 2 70 1 210 1 
159 1 73 1 162 1 214 3 164 1 324 1 325 1 346 1 55 2 36 1 57 1 232 1 80 2 103 1 260 1 39 1 192 1 85 1 194 1 240 1 264 1 241 1 266 1 156 1 307 1 112 1 288 1 270 1 177 1 201 1 138 1 207 1 179 3 70 2 46 1 145 1 210 1 
2 1 39 2 192 2 50 1 342 2 240 2 222 2 89 1 247 1 291 1 122 1 141 1 191 1 
260 2 159 1 39 1 192 1 227 1 342 1 317 1 229 1 240 1 222 1 199 1 156 1 201 2 207 1 247 1 291 1 122 1 210 1 
351 1 39 1 192 1 342 2 240 1 51 1 222 1 89 1 157 1 247 1 337 1 291 1 122 1 
244 1 20 1 311 1 181 1 199 1 
48 1 49 1 194 1 20 2 230 1 199 1 266 1 346 2 111 1 98 1 295 1 116 1 57 2 77 1 244 1 311 2 180 1 142 1 181 2 
260 1 146 1 159 1 201 1 352 1 4 1 244 1 20 1 181 1 
77 1 244 1 230 1 
100 1 38 1 26 1 132 1 336 1 197 1 284 1 277 1 
84 1 38 4 132 4 94 1 197 1 345 1 100 1 63 2 26 2 336 3 188 1 218 1 71 1 284 2 
38 2 132 2 160 1 197 1 277 1 100 1 63 1 26 1 336 1 234 1 312 1 284 1 
38 3 84 2 132 3 94 1 320 1 197 1 345 2 277 1 100 1 26 1 336 1 284 1 
228 1 336 2 150 1 67 2 
100 1 38 1 132 1 197 1 267 1 277 1 
100 1 63 1 38 2 26 1 132 2 336 1 86 1 197 1 284 1 277 1 
290 1 
100 1 38 1 26 1 132 1 336 1 197 1 284 1 277 1 
26 1 336 1 339 1 284 1 
100 1 38 1 26 1 132 1 336 1 197 1 284 1 
132 1 106 1 35 1 
38 3 84 1 132 3 94 1 323 1 197 1 345 2 277 1 100 1 26 1 336 1 284 1 
100 1 63 1 38 2 26 1 132 2 336 1 197 1 350 1 284 1 
38 1 132 1 197 1 198 1 136 1 11 1 277 1 100 1 336 1 258 1 218 1 
100 1 38 1 132 1 336 1 197 1 284 1 277 1 
100 1 38 1 26 1 132 1 197 1 284 2 277 1 
38 2 132 2 5 1 197 2 155 1 277 1 100 2 13 1 336 1 284 1 
38 3 132 3 197 1 86 1 277 1 100 1 269 1 63 2 26 1 336 2 188 1 218 1 284 1 
38 2 132 2 197 1 198 1 136 2 174 1 277 1 101 1 100 1 63 1 26 1 102 1 336 1 258 1 284 1 
38 4 132 4 124 1 197 2 277 1 100 2 63 2 26 1 336 2 188 1 218 1 350 1 284 1 
38 3 132 3 197 1 86 1 345 1 277 1 100 1 63 1 26 1 336 1 284 1 
336 1 188 1 218 1 71 1 
336 1 284 1 

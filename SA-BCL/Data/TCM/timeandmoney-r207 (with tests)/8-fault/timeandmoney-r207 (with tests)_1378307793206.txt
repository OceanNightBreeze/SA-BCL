#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (89,159) 270 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (148,257) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (55,166,282) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (148,257) (148,257) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (148,257) (148,257) 221 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 180 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (55,166,282) (55,166,282) 49 27 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 180 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 172 98 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (89,159) (89,159) (35,328) 230 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 95 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (89,159) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 281 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (89,159) (89,159) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 75 297 156 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 75 297 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 75 297 156 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 75 297 156 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 75 297 156 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (148,257) (148,257) 221 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (89,159) 270 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 12 (145,316) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 12 (145,316) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 12 (3,139) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 12 (3,139) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 2 93 1 47 1 137 1 219 1 222 1 96 1 224 2 140 3 185 9 266 1 304 2 310 1 231 1 60 1 23 2 280 5 160 1 73 1 118 1 79 9 208 2 40 1 167 6 214 1 215 2 332 4 335 2 
93 1 254 2 47 1 137 1 219 1 222 1 96 1 224 2 140 3 185 9 266 1 304 2 310 1 231 1 60 1 23 2 280 5 160 1 73 1 118 1 79 9 208 2 40 1 167 6 214 1 215 2 332 4 335 2 
93 1 254 2 47 1 137 1 219 1 222 1 96 1 224 2 140 4 185 10 266 1 304 2 310 1 231 1 60 1 23 2 280 6 160 1 73 1 118 1 79 10 208 2 40 1 167 7 214 1 215 2 332 5 335 2 
254 1 93 1 137 1 47 1 219 1 280 4 160 1 222 1 73 1 96 1 118 1 224 2 140 2 79 7 185 7 208 2 304 2 266 1 310 1 40 1 60 1 167 4 214 1 215 2 23 2 332 3 335 2 
93 1 254 2 280 3 160 1 222 1 224 1 118 1 140 1 79 4 185 4 208 1 231 1 167 3 214 1 215 1 23 1 332 2 335 1 
93 1 219 1 280 1 160 1 96 1 224 1 79 2 185 2 208 1 304 1 130 1 63 1 214 1 169 1 23 1 335 1 
93 1 280 2 160 1 140 1 79 3 185 3 208 2 304 1 310 1 167 1 214 1 23 2 332 1 
254 2 93 1 137 1 280 5 160 1 222 1 73 1 0 1 224 1 118 1 140 3 79 9 185 9 264 1 208 2 304 1 310 1 231 1 167 7 214 1 215 1 23 2 332 4 335 1 
254 2 93 1 137 1 280 5 160 1 222 1 73 1 0 1 224 1 118 1 140 3 79 9 185 9 264 1 208 2 304 1 310 1 231 1 167 7 214 1 215 1 23 2 332 4 335 1 
265 1 105 1 180 1 
265 1 240 1 91 2 
227 2 125 2 288 2 120 2 253 2 134 2 115 1 
138 2 159 1 120 1 247 1 227 1 125 1 269 1 288 1 212 2 270 1 20 1 295 1 68 2 115 1 134 1 253 1 
227 1 125 1 288 1 148 1 120 1 253 1 134 1 115 1 
227 1 125 1 282 1 166 1 132 1 253 1 
227 1 125 1 282 1 288 1 120 1 253 1 134 1 
55 1 174 1 210 1 65 1 263 1 
265 1 55 2 174 1 105 1 210 1 65 2 33 1 164 1 
55 1 174 1 65 1 
227 1 55 1 125 1 257 1 210 1 288 1 148 1 65 1 120 1 253 1 134 1 115 1 
265 1 
265 1 55 2 174 1 105 1 210 1 65 2 192 1 33 1 
174 2 171 1 257 1 221 1 8 2 227 1 55 5 10 1 265 2 56 1 105 2 61 1 189 1 148 1 315 2 109 1 65 5 113 1 66 3 272 1 115 1 196 1 197 4 239 2 120 1 322 1 33 1 124 2 125 1 210 2 288 1 326 1 168 2 253 1 134 1 
180 1 
227 2 125 2 84 1 288 1 120 1 134 1 253 2 135 1 
227 3 125 3 288 3 241 1 120 1 253 3 134 3 
227 1 125 1 288 1 253 1 134 1 
227 1 125 1 84 1 288 1 120 1 253 1 134 1 135 1 
227 2 277 1 125 2 84 1 288 2 241 1 120 1 253 2 134 2 
227 2 125 2 288 1 241 1 131 1 132 1 253 2 134 1 
227 1 277 1 125 1 288 1 241 1 253 1 134 1 
227 1 125 1 84 1 288 1 120 1 253 1 134 1 
138 1 212 1 68 1 295 1 
138 1 212 1 68 1 295 1 
278 2 238 1 194 1 249 1 48 1 59 1 29 1 112 1 
227 1 125 1 288 1 311 1 253 1 134 1 
227 1 277 1 125 1 138 1 288 1 241 1 212 1 68 1 295 1 253 1 134 1 
123 1 227 5 277 1 125 5 84 1 288 4 241 2 131 1 132 1 120 1 234 1 253 5 134 4 
227 1 125 1 288 1 253 1 134 1 
305 1 22 1 
305 1 22 1 
38 1 90 1 
38 1 90 1 
38 1 90 1 
305 1 42 1 22 1 
305 1 30 1 22 1 
305 2 38 1 18 1 90 1 110 1 22 2 
305 1 42 1 22 1 
305 1 42 1 22 1 
82 1 305 1 22 1 
82 1 305 1 22 1 
82 1 305 1 22 1 
46 1 218 1 220 2 300 2 203 3 97 1 142 2 265 1 55 2 305 2 106 1 18 1 289 1 62 2 291 1 65 2 22 2 330 1 333 2 
279 1 220 1 259 1 74 1 203 1 302 1 30 1 32 1 142 1 227 2 55 1 305 1 125 2 165 1 106 1 288 2 62 1 65 1 22 1 334 1 253 2 333 1 134 2 
224 1 215 1 335 1 
224 1 63 1 335 1 
39 1 41 1 63 1 215 2 53 1 335 3 
83 1 41 1 63 1 215 1 53 1 335 2 
41 2 63 1 215 1 53 1 335 2 
174 1 259 1 8 1 262 1 100 1 101 1 55 5 265 2 105 1 61 1 147 1 65 5 66 2 25 2 276 2 275 1 239 1 197 3 240 1 242 1 161 1 322 1 32 1 163 2 33 1 124 1 165 1 210 4 91 3 168 1 336 1 92 1 
174 6 298 1 259 4 51 1 8 3 262 2 100 3 263 5 55 9 265 5 105 1 146 1 61 3 147 1 190 1 65 9 66 6 276 6 275 3 239 2 197 8 240 3 117 1 242 3 77 1 322 1 163 6 33 1 124 2 210 7 326 1 213 5 91 9 168 2 92 2 
259 1 8 1 262 1 100 1 101 1 265 3 55 3 105 1 61 1 65 3 66 2 25 1 275 1 276 2 239 1 197 3 240 2 242 1 161 1 163 2 124 1 210 2 326 1 168 1 91 4 92 1 
298 1 259 2 51 1 8 2 262 1 100 2 101 1 265 4 55 4 105 1 61 2 65 4 66 4 25 2 276 4 275 2 239 1 197 5 240 3 117 1 242 2 161 1 163 4 124 1 210 3 326 1 91 7 168 1 92 1 
44 1 180 1 64 1 
44 1 7 1 
116 1 
44 1 216 1 
44 3 36 1 188 1 64 2 285 1 216 1 
44 1 36 1 216 1 
44 1 104 1 
94 3 154 4 70 1 178 1 72 1 223 1 119 1 8 1 121 1 324 2 126 3 61 1 189 1 109 1 233 2 113 1 294 7 
94 3 154 4 70 1 178 1 72 1 223 1 119 1 8 1 121 1 324 2 126 3 61 1 189 1 109 1 233 2 113 1 294 7 
94 3 154 4 70 1 178 1 72 1 223 1 119 1 8 1 121 1 324 2 126 3 61 1 189 1 109 1 233 2 113 1 317 1 294 7 
94 15 48 1 178 2 223 1 8 4 100 3 143 1 189 1 61 4 109 2 191 1 113 2 112 1 233 5 318 4 275 3 278 2 154 16 70 2 72 1 119 5 242 3 76 1 29 1 243 3 121 1 325 1 324 3 209 1 126 10 37 1 249 1 43 1 294 31 
94 4 48 2 178 1 223 1 8 1 309 1 61 1 189 1 109 1 112 2 233 3 113 1 278 4 154 5 70 1 72 1 119 1 29 2 324 2 126 4 37 1 249 2 293 1 294 9 
93 1 170 1 45 1 138 1 177 1 224 1 141 1 185 2 225 1 304 1 107 1 313 1 63 1 23 1 68 1 235 1 280 1 160 1 79 2 244 1 80 1 208 1 127 1 129 1 39 1 212 1 167 1 214 1 215 1 335 2 
170 1 45 1 138 1 177 1 224 1 141 1 185 3 225 1 304 1 229 1 313 1 63 1 23 1 68 1 152 1 235 1 280 1 160 1 283 1 79 3 244 1 80 1 208 1 127 1 39 1 212 1 167 2 214 1 215 1 335 2 
170 1 45 1 138 1 177 1 224 1 185 2 225 1 304 1 229 1 63 1 68 1 152 1 235 1 280 1 160 1 79 2 244 1 80 1 127 1 39 1 212 1 167 2 214 1 215 1 335 2 
173 1 45 2 138 1 177 2 283 1 79 1 185 1 99 1 80 2 208 1 304 2 87 1 212 1 151 1 23 1 295 1 68 1 
170 1 235 1 93 1 45 1 138 1 177 1 224 1 141 1 244 1 79 1 185 1 80 1 225 1 208 1 304 1 127 1 39 1 229 1 107 1 313 1 212 1 63 1 215 1 23 1 68 1 335 2 
284 1 
170 1 44 1 174 2 138 2 49 1 227 1 55 2 57 1 108 1 65 2 66 1 68 2 67 1 27 1 237 1 239 1 197 1 282 1 322 1 244 1 33 1 124 1 125 1 128 1 287 1 166 1 212 2 132 1 168 1 292 1 253 1 295 2 216 1 92 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
237 1 174 1 282 1 49 1 33 1 227 1 55 2 125 1 166 1 108 1 65 2 132 1 192 1 253 1 27 1 
237 1 239 1 282 1 49 1 322 1 227 1 55 1 124 1 125 1 166 1 108 1 132 1 65 1 168 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
227 1 55 1 237 1 125 1 282 1 166 1 49 1 108 1 132 1 65 1 253 1 27 1 
237 1 239 1 282 1 49 1 322 1 227 1 55 1 124 1 125 1 166 1 108 1 132 1 65 1 168 1 253 1 27 1 
154 2 238 1 278 2 194 1 48 1 72 1 180 1 223 1 29 1 324 1 126 1 249 1 59 1 61 1 189 1 109 1 233 1 113 1 112 1 294 2 
154 1 238 1 278 2 94 1 172 1 157 1 48 1 29 1 243 1 98 1 249 1 59 1 112 1 294 2 318 1 
154 1 94 1 278 2 277 1 238 1 157 1 48 1 2 1 301 1 241 1 183 1 29 1 227 1 125 1 249 1 59 1 288 1 314 1 112 1 294 2 134 1 253 1 
94 1 138 1 48 1 301 1 227 1 59 1 230 1 112 1 68 1 238 1 277 1 278 2 157 1 159 1 241 1 29 1 125 1 249 1 288 1 89 1 212 1 328 1 294 1 253 1 134 1 295 1 
154 1 238 1 278 2 95 1 138 1 48 1 29 1 249 1 59 1 314 1 212 1 111 1 112 1 294 1 295 1 68 1 
94 1 48 1 8 1 100 1 227 1 59 1 61 1 112 1 275 1 278 2 238 1 154 1 157 1 242 1 120 1 29 1 81 1 125 1 84 1 249 1 288 1 294 2 134 1 253 1 
275 1 238 1 278 2 154 1 194 1 48 1 29 1 286 1 249 1 59 1 61 1 112 1 294 1 
238 1 278 2 94 1 194 1 48 1 242 1 29 1 8 1 249 1 59 1 88 1 112 1 294 1 
275 1 94 1 238 1 278 2 154 1 194 1 48 1 242 1 29 1 8 1 100 1 249 1 59 1 61 1 112 1 294 2 
275 1 238 1 278 2 154 1 48 1 29 1 286 1 249 1 59 1 61 1 111 1 112 1 294 1 
238 1 278 2 94 1 48 1 242 1 29 1 8 1 249 1 59 1 88 1 111 1 112 1 294 1 
275 1 94 1 238 1 278 2 154 1 48 1 242 1 29 1 8 1 100 1 249 1 59 1 61 1 111 1 112 1 294 2 
275 1 94 1 238 1 278 2 154 1 48 1 242 1 29 1 8 1 100 1 249 1 59 1 61 1 112 1 294 2 
138 1 159 1 212 1 68 1 295 1 
138 1 281 1 212 1 68 1 295 1 
275 1 94 1 238 1 278 2 154 1 157 1 48 1 242 1 29 1 8 1 100 1 249 1 59 1 61 1 112 1 294 2 
138 1 129 1 159 1 89 1 212 1 68 1 
94 1 48 1 8 1 100 1 227 1 14 1 59 1 61 1 112 1 275 1 278 2 238 1 154 1 157 1 242 1 120 1 29 1 125 1 84 1 249 1 288 1 294 2 134 1 253 1 
154 1 278 2 94 1 296 1 156 1 297 1 48 1 75 1 29 1 249 1 309 1 271 1 112 1 294 2 
154 1 278 2 94 1 296 1 156 1 297 2 48 1 75 2 29 1 249 1 309 1 271 1 112 1 294 2 
154 1 278 2 94 1 296 1 156 1 297 1 48 1 75 1 29 1 249 1 309 1 271 1 112 1 294 2 
154 1 278 2 94 1 296 1 156 1 297 1 48 1 75 1 29 1 249 1 309 1 271 1 112 1 294 2 
154 1 278 2 94 1 296 1 156 1 297 1 48 1 75 1 29 1 249 1 309 1 271 1 112 1 294 2 
305 1 220 1 18 1 289 1 4 1 62 1 291 1 22 1 142 1 333 1 
279 1 30 1 
305 1 319 1 220 1 62 1 251 1 22 1 31 1 142 1 333 1 
46 1 218 1 220 1 300 1 203 2 97 1 142 1 265 1 55 1 305 1 106 1 18 1 289 1 62 1 291 1 65 1 22 1 333 1 
46 1 218 1 220 1 300 1 203 2 97 1 142 1 265 1 55 1 305 1 106 1 18 1 289 1 62 1 291 1 65 1 22 1 333 1 
46 1 218 1 220 1 300 1 203 2 97 1 142 1 265 1 55 1 305 1 106 1 18 1 289 1 62 1 291 1 65 1 22 1 333 1 
42 1 110 1 193 1 
42 1 110 1 193 1 
82 1 19 1 
82 1 19 1 110 1 
302 1 334 1 
218 1 220 1 258 1 300 1 259 1 302 1 142 1 227 2 55 1 305 1 62 1 65 1 22 1 279 1 74 1 203 1 30 1 32 1 125 2 210 1 165 1 288 2 253 2 333 1 334 1 134 2 
42 1 193 1 
82 1 19 1 110 1 
227 2 268 1 125 2 323 1 253 2 226 1 
170 1 138 2 177 1 224 1 321 1 244 1 225 1 127 1 39 1 129 1 229 1 313 1 212 2 63 1 290 1 215 1 68 2 335 2 273 1 
170 1 138 1 177 1 198 1 224 1 321 1 244 1 225 1 127 1 39 1 229 1 313 1 212 1 63 1 215 1 68 1 335 2 
138 1 250 1 177 1 87 1 212 1 68 1 295 1 273 1 
170 1 138 1 177 1 224 1 321 1 244 1 225 1 127 1 39 1 229 1 313 1 212 1 63 1 290 1 215 1 68 1 335 2 273 1 
26 1 
265 1 10 1 196 1 197 1 105 1 180 1 66 1 
174 1 239 1 197 1 240 1 6 1 322 1 33 1 55 1 265 2 124 1 228 1 105 1 327 1 65 1 91 1 168 1 66 1 
170 4 174 5 175 1 1 2 182 1 7 3 8 2 100 2 10 1 265 8 104 2 105 2 187 2 188 1 276 6 275 2 196 1 197 9 200 2 201 2 206 1 35 2 33 3 36 3 124 4 129 1 211 1 287 1 212 3 216 3 295 1 44 10 136 2 138 3 55 5 61 2 315 2 316 2 64 2 65 5 66 8 68 3 153 1 239 4 71 2 240 6 242 2 322 4 244 3 163 6 168 4 91 12 252 2 92 2 
174 1 8 2 100 2 55 1 102 1 265 5 267 1 186 1 58 1 105 2 187 1 16 1 61 2 315 2 65 1 66 5 318 1 276 5 275 2 197 8 239 2 240 3 242 2 76 1 322 2 243 1 122 1 163 5 33 1 124 2 85 1 287 1 91 6 168 2 92 1 
221 1 257 1 8 1 227 1 103 1 55 1 189 1 61 1 148 1 315 2 109 1 65 1 113 1 66 1 115 1 239 1 197 2 322 1 120 1 124 1 125 1 288 1 168 1 253 1 134 1 
196 1 239 1 197 1 322 1 10 1 265 1 124 1 105 1 168 1 66 1 
275 2 276 5 197 5 240 5 201 1 242 2 8 2 100 2 163 5 265 5 187 1 61 2 315 2 91 10 66 5 
265 1 55 1 174 1 105 1 65 1 33 1 
170 1 44 1 174 4 138 4 179 1 182 2 55 3 57 1 65 3 66 2 68 4 67 1 236 1 153 1 239 2 197 2 322 1 244 1 33 2 124 2 128 1 287 2 326 1 212 4 168 2 292 1 216 1 295 2 92 2 
227 1 125 1 138 1 159 1 288 1 212 1 270 1 120 1 68 1 295 1 253 1 134 1 115 1 
276 2 239 1 197 1 240 2 322 1 163 2 324 1 265 4 124 1 105 2 287 1 91 4 168 1 66 2 92 1 
15 1 62 1 142 1 
308 1 289 1 62 1 302 1 142 1 
15 1 62 1 142 1 
15 1 62 1 142 1 
199 1 62 1 142 1 
199 1 62 1 142 1 
199 1 62 1 142 1 
62 1 142 1 
305 1 22 1 
94 4 154 4 278 4 48 2 72 1 223 1 119 1 29 2 8 1 324 1 126 3 37 1 249 2 61 1 189 1 109 1 233 2 112 2 113 1 294 8 
94 3 154 3 72 1 180 1 223 1 8 1 324 1 126 2 189 1 61 1 109 1 113 1 233 2 294 6 
275 1 94 2 278 2 154 2 255 1 48 1 242 1 119 1 29 1 8 1 100 1 126 2 249 1 61 1 233 1 112 1 294 4 
275 1 94 4 154 3 242 1 119 1 76 1 8 1 243 1 100 1 325 1 126 2 61 1 233 1 294 7 318 2 
94 12 172 1 48 2 223 1 8 3 100 2 189 1 61 3 109 2 113 2 233 5 112 2 114 1 318 2 275 2 154 11 278 4 72 1 119 4 242 2 29 2 243 2 324 1 325 1 126 9 37 2 249 2 133 1 294 23 
94 1 294 1 318 1 
154 1 243 1 294 1 
275 1 278 2 94 3 154 3 255 1 48 1 201 1 119 1 242 1 29 1 8 1 100 1 126 3 249 1 61 1 112 1 233 2 294 6 
94 6 48 1 8 2 100 2 267 1 186 1 58 1 309 1 61 2 112 1 233 1 318 1 275 2 278 2 154 6 119 1 242 2 76 1 29 1 243 1 122 1 126 2 249 1 85 1 294 12 
154 3 94 3 119 1 8 1 126 2 189 1 61 1 109 1 113 1 233 1 294 6 
154 1 94 2 278 2 48 1 72 1 223 1 119 1 29 1 126 2 37 1 249 1 109 1 133 1 233 1 113 1 112 1 294 3 
278 2 154 5 94 5 48 1 221 1 119 2 29 1 8 2 126 5 249 1 309 1 189 1 61 2 109 2 112 1 113 2 233 3 294 10 
275 1 278 2 154 2 48 1 119 1 29 1 126 1 249 1 309 1 61 1 112 1 294 2 
275 1 94 2 278 2 154 2 48 1 242 1 119 1 29 1 8 1 100 1 126 2 249 1 309 1 61 1 233 1 112 1 294 4 
94 2 278 6 154 1 48 3 119 1 29 3 205 1 37 1 126 2 249 3 309 1 109 1 133 1 112 3 113 1 233 1 294 3 
94 18 255 1 48 5 223 1 8 5 143 1 100 3 309 1 189 2 61 5 109 3 191 1 113 3 112 5 233 7 318 4 275 3 278 10 154 16 72 1 119 5 242 3 76 1 29 5 243 3 205 1 324 1 325 1 37 2 126 12 249 5 133 1 43 1 294 34 
94 4 48 1 223 1 8 1 58 1 309 1 61 1 189 1 109 1 112 1 113 1 233 2 318 1 278 2 154 4 72 1 76 1 29 1 243 1 324 1 126 2 249 1 294 8 
94 5 255 1 48 2 223 1 8 1 100 1 58 1 309 1 189 1 61 2 109 1 233 2 113 1 112 2 318 2 275 1 278 4 154 6 72 1 119 1 76 1 29 2 243 1 324 1 325 1 126 3 249 2 294 11 
94 10 255 1 48 3 223 1 8 3 100 2 267 1 186 1 58 1 309 1 189 1 61 3 109 1 113 1 112 3 233 3 318 1 275 2 278 6 154 9 72 1 119 1 242 2 76 1 29 3 243 1 122 1 324 1 126 4 37 1 249 3 85 1 294 19 
94 7 255 1 48 3 223 1 8 2 100 2 267 1 186 1 58 1 309 1 189 1 61 3 109 1 113 1 112 3 233 3 318 1 275 2 278 6 154 10 72 1 119 2 242 1 76 1 29 3 243 1 122 1 324 1 37 1 126 5 249 3 85 1 294 17 
94 4 48 1 223 1 8 1 58 1 309 1 61 1 189 1 109 1 112 1 113 1 233 2 318 1 278 2 154 4 72 1 76 1 29 1 243 1 324 1 126 2 249 1 294 8 
94 6 48 1 8 2 100 2 267 1 186 1 58 1 309 1 61 2 112 1 233 1 318 1 275 2 278 2 154 6 119 1 242 2 76 1 29 1 243 1 122 1 126 2 249 1 85 1 294 12 
94 8 255 1 48 4 223 1 8 2 100 2 267 1 186 1 58 1 309 1 189 1 61 3 109 1 113 1 112 4 233 3 318 1 275 2 278 8 154 10 72 1 119 2 242 1 76 1 29 4 243 1 122 1 324 1 126 5 37 2 249 4 85 1 294 18 
94 7 48 4 8 2 100 3 267 1 186 1 58 1 309 1 61 3 112 4 233 3 318 1 275 3 278 8 154 9 119 3 242 2 76 1 29 4 243 1 205 1 122 1 126 6 37 2 249 4 85 1 294 16 
94 4 154 3 72 2 223 1 119 3 8 1 126 6 189 1 61 1 109 3 113 3 233 3 294 7 
94 8 48 4 223 1 8 2 100 2 267 1 186 1 58 1 309 1 189 1 61 3 109 1 113 1 112 4 233 3 318 1 275 2 278 8 154 10 72 1 119 1 242 1 76 1 29 4 243 1 205 1 122 1 324 1 126 4 37 2 249 4 85 1 294 18 
227 1 11 1 125 1 131 1 132 1 253 1 
50 1 52 1 204 1 245 1 227 1 11 1 125 1 131 1 132 1 331 1 253 1 
170 1 44 1 138 1 180 1 212 1 292 1 244 1 216 1 67 1 68 1 295 1 
170 1 44 1 138 1 241 1 244 1 227 1 36 1 12 1 145 1 125 1 288 1 212 1 216 1 134 1 253 1 295 1 68 1 
170 1 44 1 138 1 241 1 182 1 244 1 227 1 36 1 12 1 145 1 125 1 288 1 212 1 216 1 134 1 253 1 68 1 
170 1 44 1 138 1 241 1 3 1 182 1 244 1 227 1 36 1 12 1 125 1 288 1 212 1 216 1 134 1 253 1 68 1 
170 1 44 4 174 1 138 3 139 1 1 1 182 1 7 1 55 2 265 1 104 1 105 1 64 1 65 2 68 3 28 1 195 1 71 1 244 1 36 1 212 3 216 1 295 1 
170 1 44 4 174 1 195 1 138 3 71 1 1 1 182 1 7 1 244 1 265 1 55 2 36 1 104 1 105 1 212 3 65 2 316 1 64 1 295 1 216 1 68 3 
170 1 138 1 212 1 244 1 184 1 68 1 
170 3 217 1 44 3 138 6 176 1 181 1 184 1 244 2 36 1 269 1 129 1 13 1 229 1 86 1 188 1 212 7 150 1 295 2 68 7 216 2 24 1 
227 1 125 1 288 1 241 1 253 1 134 1 
44 2 174 2 138 1 1 1 7 1 265 1 10 1 55 3 105 1 65 3 316 1 64 1 66 1 68 1 153 1 196 1 197 1 239 2 200 1 322 2 35 1 33 1 124 2 210 1 212 1 168 2 295 1 252 1 
170 2 44 2 138 2 175 1 184 1 244 1 36 1 129 1 188 1 212 2 64 1 68 2 216 1 
170 1 44 1 195 1 138 4 244 1 306 1 129 1 212 4 292 1 295 1 68 4 67 1 216 1 
170 2 217 1 44 1 138 2 182 1 261 1 244 1 207 1 36 1 212 2 329 1 68 2 216 1 24 1 
170 1 138 1 212 1 224 1 63 1 244 1 225 1 68 1 295 1 335 1 
170 1 44 1 138 2 129 1 229 1 176 1 212 2 149 1 244 1 216 1 68 2 
170 2 44 3 138 4 176 1 181 1 182 1 244 2 306 1 129 1 86 1 212 5 292 1 67 1 295 1 68 5 216 2 
170 2 44 3 138 4 158 1 176 1 182 1 244 2 306 1 129 1 86 1 212 5 292 1 67 1 295 1 68 5 216 2 
170 1 44 1 138 1 241 1 3 1 244 1 227 1 36 1 12 1 125 1 288 1 212 1 216 1 134 1 253 1 295 1 68 1 
170 2 217 1 44 1 138 1 182 1 244 1 36 1 13 1 188 1 212 1 68 1 216 1 24 1 
155 1 320 1 202 1 323 1 226 1 227 1 268 1 125 1 253 1 
307 1 155 1 21 1 
155 1 320 1 202 1 162 1 
55 1 307 1 155 1 210 1 256 1 320 1 202 1 65 1 21 1 162 1 
280 1 160 1 180 1 214 1 
208 1 280 1 160 1 214 1 79 1 185 1 23 1 
304 1 45 1 79 1 
93 1 219 2 280 1 299 1 160 1 79 3 185 3 248 1 208 1 17 1 214 1 23 1 
254 1 208 1 280 1 160 1 167 1 214 1 79 2 185 2 23 1 
93 1 280 1 222 1 224 1 79 1 185 1 208 1 215 1 23 1 332 1 335 1 
208 1 93 1 280 1 214 1 79 1 185 1 23 1 
208 1 93 1 160 1 214 2 79 1 185 1 23 1 
208 2 93 1 280 1 214 1 232 1 79 2 185 2 23 2 303 1 34 1 
93 1 137 1 280 2 160 1 73 1 140 1 79 3 185 3 208 1 167 2 214 1 23 1 332 1 
93 1 280 1 160 1 224 1 79 2 185 2 54 1 208 1 39 1 63 1 167 1 214 1 215 1 23 1 335 2 
93 1 254 1 280 2 160 1 140 1 79 4 185 4 208 2 231 1 167 2 214 1 23 2 332 1 
208 1 93 1 280 1 160 1 214 1 79 1 185 1 23 1 
219 1 280 3 299 1 160 2 140 1 79 4 185 4 9 1 208 1 17 1 167 2 214 2 23 1 332 1 
274 1 208 1 93 1 280 1 160 1 312 1 167 1 214 1 79 2 185 2 23 1 264 1 
69 1 208 1 93 1 219 2 280 1 160 1 299 2 17 1 214 1 79 3 185 3 23 1 
280 2 5 1 260 2 78 1 
208 1 93 1 79 1 185 1 23 1 144 1 
208 1 93 1 280 1 160 1 73 1 167 1 214 1 79 2 185 2 23 1 
246 1 
208 1 93 1 280 1 160 1 214 1 79 1 185 1 23 1 
208 1 93 1 219 1 280 1 160 1 73 1 167 1 214 1 79 3 185 3 23 1 
280 1 140 1 9 1 332 1 
280 1 214 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (113,200,256) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (113,200,256) 266 83 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (113,200,256) 266 352 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 230 (56,81,109) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (113,200,256) (113,200,256) 319 6 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 117 228 (41,330) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 117 228 (279,309) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (113,200,256) 266 268 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 2 290 1 74 2 214 2 23 1 196 1 238 1 320 1 218 1 58 2 325 1 8 1 174 1 11 6 148 1 227 1 12 5 282 9 180 2 263 1 334 9 65 4 42 2 233 2 336 1 187 1 92 3 48 1 
194 2 74 2 290 1 214 2 23 1 196 1 238 1 320 1 218 1 58 2 325 1 8 1 174 1 11 6 148 1 227 1 12 5 282 9 180 2 263 1 334 9 65 4 42 2 233 2 336 1 187 1 92 3 48 1 
194 2 74 2 290 1 214 2 23 1 196 1 238 1 320 1 218 1 58 2 325 1 8 1 174 1 11 7 148 1 227 1 12 6 282 10 180 2 263 1 334 10 65 5 42 2 233 2 336 1 187 1 92 4 48 1 
194 2 74 2 290 1 214 1 23 1 196 1 238 1 320 1 218 1 58 2 325 1 8 1 174 1 11 4 148 1 227 1 12 4 282 7 180 2 263 1 334 7 65 3 42 2 233 2 336 1 92 2 48 1 
11 3 148 1 74 1 214 2 23 1 12 3 282 4 180 1 334 4 65 2 233 1 42 1 187 1 92 1 58 1 325 1 8 1 48 1 
194 1 227 1 148 1 12 1 23 1 282 2 180 1 334 2 308 1 233 1 42 1 336 1 95 1 58 1 300 1 48 1 
194 1 11 1 148 1 23 1 12 2 282 3 263 1 334 3 65 1 233 2 42 2 92 1 48 1 
194 1 74 1 214 2 23 1 320 1 123 1 218 1 325 1 58 1 8 1 303 1 11 7 148 1 12 5 282 9 263 1 180 1 334 9 65 4 42 2 233 2 187 1 92 3 48 1 
194 1 74 1 214 2 23 1 320 1 123 1 218 1 325 1 58 1 8 1 303 1 11 7 148 1 12 5 282 9 263 1 180 1 334 9 65 4 42 2 233 2 187 1 92 3 48 1 
66 1 21 1 61 1 
21 1 2 1 78 2 
273 2 265 2 328 2 99 2 53 1 204 2 269 2 270 1 
160 1 99 2 53 1 269 3 122 1 270 1 348 1 165 1 273 2 3 1 168 1 124 1 217 1 255 2 143 1 57 1 5 1 242 1 244 1 222 1 301 1 228 1 229 1 328 3 330 1 13 1 203 1 204 2 359 1 264 2 265 2 186 1 90 2 67 1 314 2 250 1 235 2 
273 1 265 1 328 1 212 1 276 1 99 1 204 1 269 1 270 1 192 1 
0 1 328 1 85 1 276 1 113 1 204 1 269 1 138 1 200 1 
273 1 0 1 265 1 328 1 85 1 276 1 99 1 113 1 204 1 269 1 
19 1 241 1 256 1 199 1 127 1 
19 1 241 2 21 1 104 1 256 2 333 1 61 1 127 1 
19 1 241 1 256 1 
328 1 212 1 99 1 204 1 269 1 270 1 273 1 80 1 265 1 241 1 276 1 256 1 127 1 192 1 
21 1 
19 1 241 2 21 1 104 1 150 1 256 2 61 1 127 1 
201 1 98 2 245 2 19 2 261 1 21 1 246 1 241 5 350 1 104 1 198 1 324 1 298 2 256 5 71 1 258 1 61 1 343 1 127 2 
63 1 228 1 328 2 330 1 99 1 280 1 204 1 269 2 165 1 348 1 265 1 124 1 217 1 186 1 255 1 67 1 90 1 301 1 235 1 327 1 
63 1 211 1 328 5 99 4 280 2 53 1 204 5 269 5 138 1 273 1 265 4 126 1 9 1 34 1 
265 2 304 1 328 2 212 1 276 1 99 2 204 2 269 2 
66 1 53 1 
328 2 99 1 53 2 204 2 269 2 273 1 265 1 16 1 34 1 
142 1 119 1 327 1 
228 1 328 1 330 1 53 1 269 1 348 1 165 1 124 1 217 1 255 1 186 1 103 1 90 1 67 1 235 1 301 1 
273 1 265 3 328 3 99 3 280 1 53 1 204 3 269 3 
265 1 328 1 212 1 276 1 99 1 204 1 269 1 
273 1 265 1 328 1 16 1 276 1 99 1 204 1 269 1 34 1 
63 1 0 1 328 2 85 1 99 2 280 1 204 2 269 2 273 1 265 2 276 1 266 1 83 1 113 1 34 1 
265 1 328 2 99 1 280 1 53 1 204 2 269 2 9 1 138 1 
63 1 0 1 328 1 85 1 99 1 280 1 204 1 269 1 265 1 352 1 276 1 266 1 113 1 
273 1 265 2 328 2 119 1 99 2 280 1 204 2 269 2 34 1 327 1 
228 1 124 1 328 1 217 1 186 1 255 1 67 1 90 1 330 1 53 1 269 1 301 1 235 1 165 1 348 1 
228 1 124 1 328 1 217 1 186 1 255 1 67 1 90 1 177 1 53 1 269 1 301 1 235 1 309 1 165 1 
160 1 119 2 213 1 79 1 168 1 142 2 57 2 5 1 277 1 173 1 222 1 244 2 32 1 327 2 229 1 262 1 13 1 264 4 313 1 314 2 69 1 188 1 236 1 72 1 
0 1 265 1 328 1 304 1 276 1 99 1 204 1 269 1 
81 1 182 1 
81 1 182 1 
56 1 230 1 
56 1 230 1 
56 1 230 1 
81 1 110 1 182 1 
81 1 109 1 182 1 
81 1 56 1 230 1 182 1 
81 1 110 1 182 1 
81 1 110 1 182 1 
133 1 81 1 182 1 
133 1 81 1 182 1 
133 1 81 1 182 1 
99 2 53 1 269 2 292 1 81 1 241 1 29 1 170 1 256 1 328 2 128 1 109 1 331 1 204 2 182 1 311 1 234 1 265 2 157 1 316 1 94 1 46 1 209 1 17 1 
128 2 21 1 20 1 136 1 215 2 179 1 232 1 182 2 134 1 81 2 241 2 93 1 316 1 170 3 256 2 114 1 46 2 17 2 209 2 
74 1 58 1 180 1 
58 1 95 1 180 1 
1 1 74 2 95 1 180 3 10 1 131 1 
1 1 74 1 121 1 95 1 180 2 10 1 
1 2 74 1 95 1 180 2 10 1 
98 1 19 1 267 1 21 2 2 1 78 3 274 1 167 1 241 5 104 1 198 1 277 1 298 1 324 3 256 5 299 2 173 1 32 1 61 1 108 2 127 4 245 1 331 1 38 1 181 1 153 1 311 1 234 1 248 1 343 2 236 1 97 2 
19 1 212 1 21 1 99 1 269 1 270 1 139 1 273 1 80 1 241 2 276 1 256 2 199 1 61 1 127 2 328 1 129 1 204 1 132 1 265 1 192 1 
98 1 21 3 2 2 78 4 274 1 241 3 277 1 298 1 324 3 256 3 299 1 173 1 32 1 61 1 127 2 108 2 245 1 331 1 38 1 181 1 153 1 71 1 248 1 236 1 343 2 97 2 
98 1 21 4 161 1 2 3 78 7 274 2 349 1 241 4 277 2 298 1 324 5 256 4 299 2 173 2 32 2 61 1 108 4 127 3 245 1 331 2 38 1 332 1 181 1 153 1 71 1 248 1 236 2 343 4 97 4 
217 1 186 1 301 1 
217 1 125 1 
66 1 217 1 163 1 
217 1 40 1 
247 1 
217 1 186 1 
217 3 186 1 358 1 60 1 301 1 163 2 
118 1 213 3 278 1 197 1 87 1 264 7 285 1 68 2 144 1 315 1 57 4 277 1 188 2 107 1 244 3 173 1 251 1 
118 1 213 3 278 1 197 1 87 1 264 7 285 1 68 2 144 1 315 1 57 4 277 1 188 2 107 1 244 3 173 1 251 1 
118 1 213 3 278 1 197 1 87 1 264 7 285 1 68 2 144 1 315 1 57 4 277 1 188 2 107 1 172 1 244 3 173 1 251 1 
160 1 118 1 317 1 213 2 22 1 239 1 346 1 168 1 351 1 144 1 57 3 5 1 107 1 244 3 278 2 13 1 264 6 111 1 285 1 68 1 315 1 314 2 188 1 208 1 
160 2 118 1 213 4 197 1 321 1 168 2 351 1 5 2 57 5 277 1 145 1 107 1 173 1 244 4 278 1 13 2 87 1 264 9 285 1 68 2 314 4 315 1 188 3 251 1 
194 1 74 1 162 1 23 1 295 1 165 1 255 1 353 1 58 1 35 1 260 1 11 1 148 1 12 1 39 1 282 2 180 2 131 1 334 2 42 1 233 1 89 1 90 1 206 1 67 1 95 1 235 1 47 1 48 1 252 1 
194 1 74 1 162 1 23 1 295 1 25 1 165 1 296 1 255 1 353 1 58 1 35 1 260 1 11 2 12 1 39 1 282 3 180 2 131 1 283 1 334 3 42 1 233 1 90 1 206 1 67 1 95 1 235 1 48 1 252 1 
194 1 74 1 162 1 23 1 295 1 165 1 296 1 255 1 353 1 58 1 35 1 11 2 12 1 39 1 282 2 180 2 131 1 283 1 334 2 90 1 206 1 67 1 95 1 235 1 48 1 
35 2 194 2 149 1 162 2 282 1 39 2 25 1 334 1 165 1 233 1 42 1 124 1 217 1 186 1 255 1 27 1 67 1 90 1 30 1 221 1 249 1 235 1 259 1 
194 1 74 1 162 1 295 1 165 1 255 1 353 1 58 1 35 1 260 1 148 1 39 1 282 1 180 2 131 1 283 1 334 1 42 1 233 1 90 1 206 1 67 1 95 1 235 1 47 1 252 1 
76 1 
49 1 0 1 98 1 19 2 318 1 269 1 319 1 138 1 165 1 347 1 124 2 217 1 255 2 241 2 104 1 276 1 198 1 6 1 298 1 324 1 256 2 30 1 200 1 245 1 328 1 37 1 85 1 149 1 306 1 204 1 181 1 186 1 67 1 90 2 113 1 235 2 343 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 19 1 328 1 85 1 150 1 306 1 204 1 269 1 319 1 138 1 241 2 104 1 276 1 113 1 6 1 256 2 200 1 
49 1 0 1 98 1 245 1 328 1 85 1 306 1 204 1 269 1 319 1 138 1 241 1 276 1 198 1 113 1 298 1 6 1 256 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 328 1 241 1 85 1 276 1 113 1 6 1 306 1 256 1 204 1 269 1 319 1 138 1 200 1 
49 1 0 1 98 1 245 1 328 1 85 1 306 1 204 1 269 1 319 1 138 1 241 1 276 1 198 1 113 1 298 1 6 1 256 1 200 1 
160 1 119 1 213 2 53 2 197 1 168 1 142 1 5 1 57 3 277 1 107 1 222 1 173 1 244 3 327 1 229 1 13 1 87 1 264 6 285 1 66 1 68 1 314 2 69 1 188 2 251 1 
160 2 213 1 119 2 53 1 195 1 22 2 137 1 274 2 168 2 142 8 275 1 276 1 5 2 57 6 277 1 242 1 244 5 222 2 173 2 31 1 32 1 327 8 229 1 13 2 264 11 111 2 14 1 205 1 314 4 188 1 116 1 236 2 
160 1 119 1 99 1 53 1 269 2 165 1 348 1 124 1 168 1 217 1 255 1 275 1 103 1 143 1 5 1 57 1 242 1 301 1 222 1 244 1 63 1 228 1 229 1 328 2 330 1 280 1 13 1 204 1 264 2 265 1 186 1 156 1 67 1 90 1 314 2 189 1 235 1 158 1 
99 1 100 2 53 2 197 1 269 3 274 2 142 7 275 1 143 1 5 3 57 10 277 3 107 1 242 1 244 10 327 7 63 1 328 3 64 2 330 2 280 1 13 3 204 1 283 1 285 1 112 2 68 1 67 2 251 1 18 2 160 3 118 4 119 7 213 8 122 2 26 1 348 2 165 2 124 1 168 3 255 3 217 2 222 3 301 2 173 3 32 2 228 2 229 3 86 1 87 1 264 20 265 1 186 2 90 3 314 6 188 4 45 1 235 3 236 2 
160 2 99 1 269 1 165 2 102 1 124 2 168 2 217 3 255 7 143 1 5 2 57 1 354 1 242 1 30 1 222 2 244 1 328 1 229 2 280 1 202 1 149 1 130 1 13 2 204 1 359 2 283 1 264 2 265 1 312 1 89 1 186 2 67 2 90 8 314 4 69 1 235 8 135 1 191 1 
160 1 213 1 119 1 99 1 269 1 273 1 274 1 168 1 142 1 275 1 5 1 57 1 277 1 222 1 173 1 244 2 32 1 34 1 327 1 229 1 328 1 329 1 13 1 204 1 264 3 265 1 314 2 188 1 236 1 
118 1 160 1 229 1 213 1 119 1 13 1 264 2 79 1 168 1 142 1 314 2 5 1 57 2 69 1 222 1 173 1 236 1 327 1 
160 1 229 1 213 1 119 1 13 1 264 2 168 1 142 1 313 1 314 2 5 1 69 1 188 1 277 1 222 1 244 2 32 1 327 1 
160 1 118 1 119 2 213 2 274 1 168 1 142 2 57 2 5 1 277 1 173 1 222 1 244 2 32 1 327 2 229 1 13 1 264 4 314 2 69 1 188 1 236 1 
118 1 160 1 229 1 213 1 119 1 13 1 264 2 79 1 168 1 142 1 314 2 5 1 57 2 222 1 173 1 135 1 236 1 327 1 
160 1 229 1 213 1 119 1 13 1 264 2 168 1 142 1 313 1 314 2 5 1 188 1 277 1 222 1 244 2 135 1 32 1 327 1 
160 1 118 1 119 2 213 2 274 1 168 1 142 2 57 2 5 1 277 1 173 1 222 1 244 2 32 1 327 2 229 1 13 1 264 4 314 2 188 1 135 1 236 1 
160 1 118 1 119 2 213 2 274 1 168 1 142 2 57 2 5 1 277 1 173 1 222 1 244 2 32 1 327 2 229 1 13 1 264 4 314 2 188 1 236 1 
160 1 53 1 122 1 269 1 165 1 348 1 124 1 168 1 255 1 217 1 143 1 57 1 5 1 242 1 301 1 222 1 244 1 228 1 328 1 229 1 330 1 13 1 264 2 186 1 67 1 90 1 314 2 235 1 
160 1 229 1 176 1 53 1 13 1 264 1 14 1 124 1 168 1 255 1 90 1 276 1 314 2 5 1 242 1 244 1 235 1 222 1 
160 1 118 1 119 2 213 2 274 1 168 1 142 2 275 1 57 2 5 1 277 1 173 1 222 1 244 2 32 1 327 2 229 1 13 1 264 4 314 2 188 1 236 1 
118 1 160 1 213 2 119 2 100 1 122 1 269 1 165 1 348 1 274 1 168 1 142 2 255 1 217 1 57 2 5 1 277 1 244 2 173 1 301 1 222 1 32 1 327 2 228 1 328 1 229 1 330 1 13 1 264 4 89 1 186 1 67 1 90 1 314 2 188 1 235 1 236 1 
118 1 160 1 213 1 119 1 99 1 269 1 273 1 274 1 168 1 142 1 275 1 5 1 57 2 277 1 244 1 222 1 173 1 32 1 34 1 327 1 229 1 328 1 13 1 204 1 264 3 265 1 314 2 91 1 236 1 
210 1 118 4 160 4 289 1 213 8 22 3 197 1 239 3 274 3 169 1 55 2 168 4 351 2 5 4 57 19 277 4 145 1 107 1 244 18 173 4 32 3 36 1 178 1 281 1 13 4 87 1 183 1 264 37 285 1 111 3 68 1 207 1 314 8 286 1 341 1 188 4 96 4 190 1 251 1 236 3 287 1 159 1 
210 1 118 3 160 4 289 1 213 5 22 2 197 1 239 2 274 3 169 1 55 1 168 4 351 2 5 4 57 18 277 4 145 1 107 1 244 17 173 4 32 3 36 1 178 1 281 1 13 4 87 1 183 1 264 35 285 1 111 2 68 1 207 1 314 8 286 1 188 2 96 4 190 1 251 1 236 3 287 1 159 1 
210 1 118 3 160 3 289 1 213 6 22 2 239 2 274 3 169 1 55 1 168 3 351 2 5 3 57 14 277 3 145 1 244 14 173 3 32 3 36 1 178 1 281 1 13 3 183 1 264 28 111 2 207 1 314 6 286 1 188 3 96 4 236 3 287 1 159 1 
210 1 118 3 160 4 289 1 213 6 22 2 197 1 239 2 140 1 274 3 169 1 55 1 168 4 351 2 5 4 57 17 277 4 145 1 107 1 244 16 173 4 32 3 36 1 178 1 13 4 87 1 183 1 264 33 285 1 111 2 68 1 207 1 314 8 286 1 188 3 96 3 190 1 251 1 236 3 287 1 159 1 
210 1 118 2 160 3 289 1 213 4 22 2 239 2 274 3 169 1 55 2 168 3 351 2 5 3 57 14 277 2 145 1 244 12 173 3 32 2 36 1 178 2 281 1 13 3 183 1 264 26 111 2 207 1 314 6 286 1 188 2 96 4 236 3 287 1 159 1 
110 1 284 1 
133 1 345 1 224 1 
81 1 128 1 93 1 179 1 232 1 46 1 216 1 182 1 209 1 17 1 
109 1 29 1 
141 1 81 1 128 1 75 1 291 1 46 1 182 1 209 1 17 1 
128 1 21 1 20 1 136 1 215 1 179 1 232 1 182 1 134 1 81 1 241 1 93 1 316 1 170 2 256 1 46 1 17 1 209 1 
128 1 21 1 20 1 136 1 215 1 179 1 232 1 182 1 134 1 81 1 241 1 93 1 316 1 170 2 256 1 46 1 17 1 209 1 
128 1 21 1 20 1 136 1 215 1 179 1 232 1 182 1 134 1 81 1 241 1 93 1 316 1 170 2 256 1 46 1 17 1 209 1 
110 1 345 1 284 1 
110 1 345 1 284 1 
133 1 224 1 
133 1 345 1 224 1 
94 1 292 1 
215 1 136 1 99 2 53 1 269 2 292 1 81 1 241 1 29 1 170 1 256 1 355 1 127 1 328 2 128 1 109 1 331 1 204 2 182 1 311 1 234 1 265 2 157 1 94 1 46 1 209 1 17 1 
50 1 160 1 120 1 269 2 294 1 165 1 102 1 168 1 217 1 275 1 255 2 143 1 5 1 57 1 242 1 243 1 222 1 244 1 229 1 328 2 202 1 13 1 204 2 359 2 264 2 186 1 67 1 90 2 360 1 314 2 235 2 
62 1 35 1 260 1 74 1 180 2 131 1 24 1 283 1 165 1 89 1 255 2 67 1 90 2 206 1 353 1 58 1 95 1 257 1 235 2 
35 1 260 1 74 1 180 2 131 1 24 1 283 1 165 1 337 1 255 1 90 1 206 1 67 1 353 1 58 1 95 1 235 1 
62 1 35 1 149 1 307 1 165 1 124 1 217 1 186 1 255 1 67 1 90 1 30 1 235 1 259 1 
62 1 35 1 260 1 74 1 180 2 131 1 24 1 283 1 165 1 255 1 90 1 206 1 67 1 353 1 58 1 95 1 257 1 235 1 
253 1 
66 1 261 1 21 1 324 1 61 1 343 1 246 1 
98 1 19 1 21 2 2 1 78 1 241 1 104 1 198 1 146 1 324 1 298 1 256 1 61 1 245 1 356 1 15 1 343 1 
193 2 98 4 2 6 54 1 272 1 274 2 241 5 104 3 198 4 106 1 147 2 324 9 277 2 59 2 60 1 61 2 108 6 245 4 246 1 154 2 112 2 67 3 70 2 117 2 343 8 19 5 21 8 163 2 164 2 347 1 165 4 78 12 124 1 217 10 255 3 219 1 298 4 125 2 256 5 301 3 173 2 32 2 261 1 40 3 181 2 41 2 185 2 89 1 186 3 90 3 44 1 235 3 236 2 97 6 
19 1 98 2 21 5 22 1 2 3 239 1 254 1 347 1 78 6 274 2 169 1 241 1 104 1 28 1 198 2 147 2 324 8 298 2 277 2 256 1 59 1 173 2 32 2 61 2 108 5 245 2 36 1 181 1 111 1 286 1 343 5 236 2 287 1 97 5 159 1 
237 1 98 1 212 1 99 1 269 1 197 1 270 1 273 1 80 1 241 1 276 1 105 1 198 1 147 2 298 1 277 1 324 2 256 1 59 1 107 1 173 2 245 1 328 1 204 1 285 1 265 1 343 2 192 1 
98 1 245 1 261 1 21 1 246 1 198 1 298 1 324 1 343 1 61 1 
21 5 2 5 78 10 274 2 112 1 147 2 277 2 324 5 59 1 173 2 32 2 236 2 343 5 97 5 108 5 
19 1 241 1 21 1 104 1 256 1 61 1 
98 2 19 4 318 1 54 2 165 1 347 2 124 2 297 1 217 1 255 4 241 3 104 2 198 1 298 2 324 2 256 3 30 1 245 2 37 1 149 1 181 2 186 1 67 1 90 4 340 1 44 1 71 1 235 4 343 2 
160 1 99 2 53 1 269 3 122 1 270 1 348 1 165 1 273 2 3 1 124 1 168 1 255 1 217 1 5 1 242 1 244 1 301 1 222 1 228 1 328 3 229 1 330 1 13 1 204 2 264 1 265 2 186 1 90 1 67 1 314 2 235 1 
98 1 245 1 21 4 2 2 181 1 78 4 347 1 68 1 198 1 298 1 324 1 343 2 61 2 97 2 108 2 
51 1 209 1 17 1 
84 1 93 1 94 1 209 1 17 1 
51 1 209 1 17 1 
51 1 209 1 17 1 
335 1 209 1 17 1 
335 1 209 1 17 1 
335 1 209 1 17 1 
209 1 17 1 
81 1 182 1 
118 4 160 2 213 9 22 1 197 2 239 1 274 2 168 2 169 1 351 1 5 2 57 14 105 1 145 1 277 4 107 2 244 10 173 5 32 1 36 1 13 2 87 1 264 24 285 2 111 1 68 1 314 4 286 1 188 5 251 1 236 2 159 1 287 1 
118 1 160 3 213 4 22 1 197 1 239 1 274 2 169 1 168 3 351 1 5 3 57 10 145 1 277 2 107 1 244 7 173 3 32 1 225 1 36 1 13 3 87 1 264 17 285 1 111 1 68 1 314 6 286 1 188 3 251 1 236 2 159 1 287 1 
118 1 160 3 213 4 22 1 197 1 239 1 274 2 169 1 168 3 351 1 5 3 57 9 145 1 277 3 107 1 244 10 173 3 32 2 225 1 36 1 13 3 87 1 264 19 285 1 111 1 68 1 314 6 286 1 188 3 251 1 236 2 159 1 287 1 
118 2 160 3 213 5 22 1 197 1 239 1 274 2 168 3 169 1 351 1 5 3 57 10 145 1 277 2 107 1 244 7 173 3 32 1 225 1 36 1 13 3 87 1 264 17 285 1 111 1 68 1 314 6 286 1 188 3 251 1 236 2 159 1 287 1 
118 4 160 2 213 9 22 1 197 2 239 1 274 2 168 2 169 1 351 1 5 2 57 14 105 1 145 1 277 4 107 2 244 10 173 5 32 1 36 1 13 2 87 1 264 24 285 2 111 1 68 1 314 4 286 1 188 5 251 1 236 2 159 1 287 1 
118 1 160 1 213 2 22 1 239 1 274 2 168 1 169 1 5 1 57 6 145 1 277 2 244 6 173 2 32 2 36 1 13 1 264 12 111 1 314 2 286 1 188 1 236 2 159 1 287 1 
118 2 160 4 213 5 22 1 197 1 239 1 274 2 169 1 168 4 351 2 5 4 57 10 145 1 277 2 107 1 244 8 173 3 32 1 225 1 36 1 13 4 87 1 264 18 285 1 111 1 68 1 314 8 286 1 188 3 251 1 236 2 287 1 159 1 
118 3 160 4 213 6 22 1 239 1 274 3 169 1 168 4 351 2 5 4 57 9 145 1 277 2 244 7 173 3 32 2 36 1 13 4 264 16 111 1 314 8 286 1 188 3 190 1 236 3 287 1 159 1 
118 3 213 6 197 1 87 2 264 7 285 3 57 3 277 1 188 3 107 3 244 4 173 1 251 1 
118 1 160 4 213 4 22 1 197 1 239 1 274 2 169 1 168 4 351 2 5 4 57 10 145 1 277 2 107 1 244 8 173 3 32 1 36 1 13 4 87 1 264 18 285 1 111 1 68 1 314 8 286 1 188 3 251 1 190 1 236 2 287 1 159 1 
118 1 160 2 213 3 13 2 197 1 87 1 264 8 285 1 168 2 68 1 351 1 57 4 314 4 5 2 277 1 188 2 107 1 173 1 244 4 251 1 
213 2 197 1 87 1 264 6 285 1 66 1 68 1 57 3 188 2 277 1 107 1 244 3 173 1 251 1 
225 1 160 1 118 1 213 2 13 1 264 4 274 1 168 1 314 2 5 1 57 2 188 1 277 1 244 2 173 1 32 1 236 1 
111 1 57 1 22 1 239 1 244 1 264 2 
118 4 160 1 213 8 22 2 195 1 197 2 137 1 274 2 168 1 351 1 57 13 5 1 105 1 277 5 107 2 173 5 244 12 32 2 13 1 87 1 264 25 285 2 111 2 205 1 68 1 314 2 188 4 251 1 236 2 
111 1 244 1 264 1 
57 1 22 1 264 1 
225 1 160 1 118 1 213 3 13 1 264 6 274 1 168 1 112 1 5 1 314 2 57 3 277 1 188 2 244 3 173 1 32 1 236 1 
118 1 160 1 213 2 22 1 239 1 274 2 168 1 169 1 5 1 57 6 145 1 277 2 244 6 173 2 32 2 36 1 13 1 264 12 111 1 314 2 286 1 188 1 236 2 159 1 287 1 
118 1 213 2 197 1 264 6 285 1 57 3 277 1 188 1 107 1 173 1 244 3 
118 1 160 1 213 2 317 1 13 1 87 1 264 3 285 1 168 1 351 1 57 1 314 2 5 1 188 1 107 1 244 2 251 1 
160 1 118 2 213 5 13 1 197 1 264 10 285 2 168 1 5 1 314 2 57 5 105 1 145 1 188 3 277 2 107 2 244 5 173 2 
160 1 118 1 213 1 13 1 264 2 168 1 314 2 5 1 57 2 145 1 173 1 236 1 
160 1 118 1 213 2 13 1 264 4 274 1 168 1 314 2 5 1 57 2 188 1 277 1 145 1 244 2 173 1 32 1 236 1 
160 3 118 1 317 1 213 2 13 3 264 3 285 1 168 3 351 1 314 6 5 3 57 1 145 1 188 1 107 1 244 2 190 1 
118 3 160 4 213 6 317 1 22 1 197 1 239 1 346 1 168 4 351 1 5 4 57 7 105 1 277 2 145 1 107 2 173 2 244 8 225 1 13 4 87 1 264 15 111 1 285 2 314 8 188 3 190 1 251 1 
328 1 53 1 204 1 269 1 9 1 138 1 302 1 
288 1 328 1 52 1 53 1 204 1 269 1 138 1 338 1 323 1 171 1 9 1 302 1 
228 1 328 2 99 1 280 1 53 1 204 1 269 2 309 1 165 1 265 1 124 1 217 1 186 1 255 1 90 1 67 1 301 1 235 1 
151 1 54 1 165 2 255 1 186 1 217 1 90 1 67 1 7 1 60 1 223 1 235 1 301 1 
66 1 124 1 217 1 186 1 255 1 67 1 90 1 149 1 30 1 235 1 165 1 
228 1 328 2 99 1 330 1 280 1 53 1 204 1 269 2 165 1 265 1 124 1 217 1 186 1 255 1 90 1 67 1 301 1 235 1 
0 1 228 1 328 1 85 1 99 1 330 1 280 1 204 1 269 1 54 1 165 1 265 1 217 3 186 2 255 1 90 1 67 1 276 1 125 1 117 1 301 2 235 1 
0 1 228 1 328 1 85 1 99 1 280 1 204 1 269 1 54 1 309 1 165 1 265 1 217 3 186 2 255 1 90 1 67 1 276 1 125 1 117 1 301 2 235 1 
19 1 21 1 101 1 54 1 163 1 165 1 124 1 217 4 255 3 241 2 125 1 256 2 301 1 61 1 357 1 279 1 40 1 154 1 186 1 67 1 90 3 117 1 235 3 
19 1 21 1 40 1 101 1 54 1 163 1 154 1 165 1 41 1 124 1 186 1 241 2 255 3 217 4 90 3 67 1 125 1 256 2 117 1 301 1 235 3 61 1 
312 1 255 1 67 1 90 1 235 1 165 1 
130 1 151 1 359 1 283 1 165 3 102 1 124 2 312 1 89 1 255 6 186 2 217 3 90 7 67 2 354 1 7 1 60 1 223 1 235 7 301 1 191 1 
50 1 99 1 100 1 53 2 269 2 197 1 142 1 275 1 5 2 57 3 277 1 107 1 244 3 327 1 328 2 330 1 280 1 13 2 204 1 285 1 67 1 68 1 251 1 18 1 160 2 119 1 213 2 122 1 348 1 165 1 168 2 255 1 217 1 222 2 301 1 173 1 228 1 229 2 87 1 264 6 265 1 89 1 186 1 90 1 314 4 188 2 235 1 
193 1 98 2 19 2 21 1 163 1 164 1 124 1 255 1 241 3 217 2 104 1 198 2 324 1 298 2 256 3 61 1 127 1 245 2 261 1 40 1 246 1 154 1 41 1 185 1 90 1 44 1 235 1 343 1 
163 1 165 2 272 1 89 1 312 1 255 2 186 1 217 2 90 2 67 1 60 1 235 2 301 1 
124 1 89 1 217 1 186 1 255 4 67 1 90 4 149 1 231 1 30 1 101 1 235 4 165 1 
54 1 165 2 184 1 255 2 43 1 186 1 217 1 90 2 67 1 7 1 45 1 223 1 235 2 301 1 
124 1 255 1 67 1 90 1 353 1 58 1 95 1 180 1 235 1 165 1 
102 1 89 1 217 1 186 1 255 2 67 1 90 2 243 1 235 2 283 1 165 1 
149 1 231 1 130 1 54 1 165 2 102 1 124 1 89 1 255 4 186 2 217 3 90 5 67 2 354 1 30 1 235 5 
149 1 231 1 54 1 310 1 165 2 102 1 124 1 89 1 255 4 186 2 217 3 90 5 67 2 354 1 30 1 235 5 
328 1 120 1 204 1 269 1 294 1 271 1 166 1 339 1 360 1 
155 1 339 1 268 1 
166 1 88 1 339 1 53 1 271 1 
0 1 85 1 268 1 271 1 166 1 155 1 88 1 339 1 241 1 276 1 266 1 113 1 256 1 326 1 127 1 
66 1 12 1 23 1 48 1 
42 1 233 1 12 1 23 1 282 1 334 1 48 1 
194 1 162 1 282 1 
148 1 227 2 12 1 23 1 282 3 334 3 233 1 42 1 4 1 220 1 33 1 48 1 
42 1 233 1 11 1 214 1 12 1 23 1 282 2 334 2 48 1 
42 1 233 1 148 1 74 1 58 1 12 1 8 1 282 1 180 1 334 1 65 1 
42 1 233 1 148 1 12 1 23 1 282 1 334 1 
42 1 233 1 148 1 23 2 282 1 334 1 48 1 
148 1 12 1 23 1 282 2 293 1 334 2 233 2 42 2 342 1 175 1 
11 2 148 1 23 1 12 2 282 3 320 1 334 3 65 1 233 1 42 1 218 1 92 1 48 1 
73 1 11 1 148 1 74 1 12 1 23 1 282 2 180 2 131 1 334 2 233 1 42 1 95 1 58 1 48 1 
11 2 148 1 214 1 23 1 12 2 282 4 334 4 65 1 233 2 42 2 187 1 92 1 48 1 
42 1 233 1 148 1 12 1 23 1 282 1 334 1 48 1 
11 2 227 1 23 2 12 3 282 4 334 4 65 1 233 1 42 1 4 1 240 1 92 1 33 1 48 2 
11 1 148 1 12 1 23 1 282 2 152 1 334 2 233 1 42 1 123 1 115 1 48 1 
226 1 148 1 227 2 12 1 23 1 282 3 334 3 233 1 42 1 4 1 33 2 48 1 
322 1 82 2 77 1 12 2 
42 1 233 1 148 1 305 1 282 1 334 1 
42 1 233 1 11 1 148 1 12 1 23 1 282 2 320 1 334 2 48 1 
344 1 
42 1 233 1 148 1 12 1 23 1 282 1 334 1 48 1 
42 1 233 1 11 1 227 1 148 1 12 1 23 1 282 3 320 1 334 3 48 1 
240 1 92 1 12 1 65 1 
12 1 23 1 

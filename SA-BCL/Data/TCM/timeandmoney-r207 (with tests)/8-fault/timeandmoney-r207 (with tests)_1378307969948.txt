#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (33,108) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (33,108) (33,108) 200 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 164 102 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 253 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 253 214 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 180 93 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 156 180 93 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 156 180 82 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 180 93 68 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 180 93 68 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (33,108) (33,108) 200 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (33,108) (33,108) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 164 102 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 347 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 347 230 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (33,108) (33,108) 200 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 2 121 1 1 1 288 1 265 1 72 1 47 1 358 1 291 1 107 5 109 2 223 2 25 2 276 2 152 6 204 1 88 2 29 1 208 1 94 9 254 4 210 1 235 2 258 1 100 9 333 1 140 3 215 1 
143 2 121 1 1 1 288 1 265 1 72 1 47 1 358 1 291 1 107 5 109 2 223 2 25 2 276 2 152 6 204 1 88 2 29 1 208 1 94 9 254 4 210 1 235 2 258 1 100 9 333 1 140 3 215 1 
143 2 121 1 1 1 288 1 265 1 72 1 47 1 358 1 291 1 107 6 109 2 223 2 25 2 276 2 152 7 204 1 88 2 29 1 208 1 94 10 254 5 210 1 235 2 258 1 100 10 333 1 140 4 215 1 
143 2 121 1 1 1 288 1 265 1 72 1 47 1 358 1 291 1 107 4 109 2 223 2 25 1 276 2 152 4 204 1 88 2 29 1 208 1 94 7 254 3 210 1 235 2 100 7 333 1 140 2 215 1 
143 1 121 1 152 3 204 1 358 1 107 3 94 4 254 2 235 1 109 1 223 1 25 2 258 1 333 1 100 4 140 1 215 1 276 1 
143 1 121 1 88 1 107 1 64 1 94 2 208 1 210 1 109 1 320 1 223 1 333 1 100 2 187 1 215 1 276 1 
121 1 152 1 88 1 291 1 107 2 94 3 254 1 109 2 333 1 100 3 140 1 215 1 276 2 
143 1 121 1 288 1 47 1 358 1 291 1 107 5 109 2 223 1 25 2 226 1 276 2 152 7 88 1 204 1 94 9 254 4 235 1 258 1 100 9 333 1 140 3 69 1 215 1 
143 1 121 1 288 1 47 1 358 1 291 1 107 5 109 2 223 1 25 2 226 1 276 2 152 7 88 1 204 1 94 9 254 4 235 1 258 1 100 9 333 1 140 3 69 1 215 1 
131 1 312 1 16 1 
312 1 44 2 168 1 
255 2 85 2 7 2 323 1 19 2 272 2 175 2 4 1 
105 1 43 2 106 2 19 3 46 1 4 1 294 1 76 2 295 1 317 1 79 2 318 1 7 2 171 1 52 1 272 2 175 2 342 1 366 2 149 1 176 1 150 1 202 1 85 3 323 1 348 1 181 1 351 1 95 1 371 1 32 1 255 2 117 1 67 1 257 1 136 1 213 1 
108 1 
201 1 192 1 85 1 368 1 19 1 12 1 75 1 195 1 183 1 131 1 7 1 312 1 135 1 313 1 
201 1 192 2 85 1 19 1 12 1 75 1 195 2 183 1 131 1 255 1 7 1 312 1 272 1 135 1 175 1 
192 1 45 1 353 1 195 1 344 1 
192 1 356 1 45 1 195 1 131 1 108 1 33 1 319 1 312 1 353 1 
192 1 353 1 195 1 
108 1 192 1 33 1 45 1 195 1 
312 1 
192 1 45 1 195 1 131 1 108 1 33 1 319 1 312 1 172 1 353 1 
262 1 192 4 243 1 45 2 195 4 245 2 108 1 319 1 298 1 54 2 248 1 341 3 83 1 200 1 60 1 308 2 61 4 280 2 326 1 206 2 92 1 350 1 131 2 133 1 33 1 312 2 353 2 70 1 
16 1 4 1 
85 2 71 1 19 2 4 2 255 1 7 2 272 1 175 1 275 1 
51 1 229 1 285 1 
202 1 85 1 43 1 19 1 46 1 196 1 4 1 76 1 79 1 318 1 317 1 171 1 117 1 67 1 176 1 213 1 
202 1 85 2 43 1 19 2 46 1 325 1 76 1 317 1 318 1 79 1 255 1 117 1 7 1 171 1 51 1 67 1 272 1 35 1 176 1 213 1 
85 5 19 5 325 1 165 1 4 1 296 1 255 4 7 5 14 1 272 4 175 1 35 2 313 1 275 1 
5 1 201 1 255 2 85 2 7 2 279 1 19 2 272 2 
255 3 85 3 7 3 19 3 272 3 175 1 35 1 4 1 
201 1 255 1 85 1 7 1 279 1 19 1 272 1 
201 1 255 1 85 1 7 1 71 1 19 1 272 1 175 1 275 1 
192 1 105 1 43 1 106 2 19 4 46 1 75 1 195 1 4 1 294 1 76 1 295 1 317 1 318 1 79 1 7 3 171 1 52 1 272 3 175 2 342 1 366 1 176 1 126 1 275 1 128 1 201 1 202 1 85 4 323 1 325 1 12 1 348 1 351 1 183 1 371 1 255 3 117 1 67 1 257 1 135 1 136 1 35 1 213 1 
296 1 255 1 85 2 7 2 19 2 272 1 35 1 4 1 313 1 
128 1 201 1 192 1 85 3 19 3 325 1 12 1 75 1 195 1 183 1 255 3 7 3 312 1 272 3 135 1 175 1 35 2 275 1 343 1 
255 2 85 2 7 2 51 1 229 1 19 2 272 2 175 1 35 1 275 1 
202 1 85 1 43 1 19 1 46 1 4 1 76 1 79 1 318 1 317 1 171 1 117 1 67 1 176 1 213 1 
202 1 85 1 43 1 19 1 346 1 46 1 4 1 76 1 79 1 317 1 171 1 117 1 299 1 67 1 213 1 
40 1 105 1 106 2 21 1 294 1 295 1 81 1 51 2 298 1 342 2 366 4 150 2 303 1 229 2 280 1 155 1 351 1 232 1 371 1 116 1 285 2 136 1 332 1 287 1 
201 1 5 1 255 1 85 1 7 1 19 1 12 1 272 1 
87 1 101 1 
87 1 101 1 
50 1 249 1 
50 1 249 1 
50 1 249 1 
87 1 182 1 101 1 
123 1 87 1 101 1 
50 1 87 2 137 1 249 1 217 1 101 2 
87 1 182 1 101 1 
87 1 182 1 101 1 
87 1 27 1 101 1 
87 1 27 1 101 1 
87 1 27 1 101 1 
192 1 193 1 19 2 266 1 123 1 195 1 4 1 7 2 339 1 272 2 147 1 148 1 177 1 305 1 85 2 87 1 113 1 231 1 370 1 255 2 96 1 65 1 236 1 101 1 
305 2 192 2 193 3 28 1 87 2 266 2 219 2 359 1 360 1 195 2 233 1 170 1 96 2 312 1 173 1 147 1 137 1 177 2 101 2 
143 1 235 1 223 1 
143 1 223 1 187 1 
235 2 218 1 223 3 292 1 187 1 199 1 
197 1 235 1 223 2 292 1 187 1 199 1 
235 1 223 2 292 1 187 1 199 2 
145 1 192 4 355 1 44 1 45 4 195 4 245 1 81 1 319 1 298 1 54 1 341 1 26 1 148 1 225 1 303 1 252 1 308 1 61 3 178 1 280 1 326 1 113 1 131 1 370 1 184 1 312 1 134 2 353 1 138 1 142 1 
192 8 355 2 44 9 357 1 45 7 3 3 168 3 195 8 268 1 245 2 81 3 319 1 298 3 54 2 341 6 148 4 303 3 344 5 252 3 308 2 61 8 178 2 280 3 157 1 326 1 310 1 92 1 132 1 131 1 184 6 312 5 283 5 353 6 138 1 142 6 314 1 
145 1 192 3 355 1 44 4 45 2 3 1 168 2 195 3 245 1 108 1 81 1 298 1 54 1 341 2 148 1 225 1 303 1 252 1 308 1 61 3 178 1 280 1 206 1 92 1 131 1 184 2 33 1 312 3 134 1 142 2 
145 1 192 4 355 1 44 7 357 1 45 3 3 2 168 3 195 4 245 1 108 1 81 2 298 2 54 1 341 4 148 2 225 1 303 2 252 2 308 1 61 5 178 1 280 2 310 1 206 1 92 1 131 1 184 4 33 1 312 4 134 2 142 4 314 1 
202 1 327 1 16 1 
202 1 324 1 
270 1 
317 1 202 1 213 1 
127 1 202 1 
202 1 213 1 
317 1 202 3 338 1 220 1 327 2 213 1 
322 1 40 3 241 2 60 1 280 1 207 1 246 1 116 2 364 1 124 1 298 1 342 3 83 1 366 7 150 4 70 1 367 1 
322 1 40 3 241 2 60 1 280 1 207 1 246 1 116 2 364 1 124 1 298 1 342 3 83 1 366 7 150 4 70 1 367 1 
322 1 40 3 241 2 60 1 280 1 207 1 246 1 116 2 124 1 364 1 298 1 300 1 342 3 83 1 366 7 150 4 70 1 367 1 
241 3 40 10 17 4 106 2 337 1 221 1 294 1 295 1 246 1 124 1 364 2 81 3 298 4 83 2 342 15 366 31 150 16 303 3 367 1 111 3 322 2 252 3 60 1 278 1 280 4 30 1 207 5 371 1 116 5 256 1 282 1 34 1 136 1 70 2 
241 2 40 9 106 4 20 1 294 2 295 2 364 1 124 1 6 1 298 3 342 7 83 2 366 16 150 9 367 1 200 1 322 1 60 2 280 3 207 4 371 2 116 5 34 1 136 2 70 2 
143 1 121 1 218 1 43 1 46 1 107 1 76 1 79 1 49 1 53 1 109 1 223 2 174 1 56 1 250 1 276 1 151 1 152 1 88 1 94 2 235 1 330 1 67 1 36 1 100 2 333 1 187 1 215 1 240 1 188 1 
143 1 121 1 218 1 43 1 46 1 166 1 107 1 76 1 79 1 49 1 53 1 109 1 223 2 56 1 276 1 151 1 152 2 86 1 88 1 94 3 235 1 330 1 67 1 36 1 100 3 187 1 259 1 215 1 240 1 188 1 
143 1 121 1 152 2 218 1 43 1 86 1 46 1 88 1 107 1 76 1 94 2 79 1 49 1 235 1 330 1 53 1 223 2 67 1 36 1 187 1 100 2 259 1 215 1 151 1 240 1 
202 1 43 1 309 1 46 1 88 2 166 1 76 1 311 1 94 1 362 1 159 1 79 1 49 2 171 1 53 2 109 1 67 1 15 1 100 1 213 1 274 1 276 1 240 2 
143 1 218 1 43 1 46 1 76 1 79 1 49 1 53 1 109 1 223 2 174 1 56 1 276 1 151 1 88 1 94 1 235 1 330 1 67 1 36 1 100 1 333 1 187 1 259 1 240 1 188 1 
42 1 
355 1 192 1 308 1 61 1 43 1 164 1 326 1 195 1 76 1 245 1 79 1 319 1 171 1 54 1 341 1 353 2 186 1 102 1 
242 2 192 2 19 1 75 1 195 2 319 1 7 1 340 1 172 1 201 1 85 1 253 1 368 1 12 1 183 1 185 1 98 1 135 1 353 2 139 1 313 1 334 1 
242 3 192 2 19 1 75 1 195 2 247 1 7 1 319 1 340 1 172 1 201 1 85 1 368 1 12 1 183 1 131 1 185 1 312 1 98 1 135 1 353 1 139 1 313 1 334 1 
242 3 192 2 19 1 75 1 195 2 247 1 319 1 7 1 340 1 172 1 201 1 85 1 253 1 368 1 12 1 183 1 185 1 98 1 135 1 353 2 139 1 313 1 334 1 214 1 
192 1 319 1 172 1 353 1 195 1 
190 2 242 3 192 2 41 1 122 2 44 1 19 1 75 1 168 1 195 2 169 1 245 1 247 1 319 1 7 1 340 1 54 1 341 1 201 1 308 1 85 1 253 1 61 1 368 1 12 1 156 1 326 1 328 1 183 1 185 1 98 1 135 1 353 2 120 2 139 1 214 1 334 1 313 1 
190 2 242 3 192 2 41 1 122 2 19 1 75 1 168 1 195 2 245 1 247 1 319 1 7 1 340 1 54 1 341 1 201 1 85 1 308 1 253 1 61 1 368 1 180 1 12 1 156 1 326 1 328 1 183 1 93 1 115 1 185 1 98 1 135 1 353 2 120 2 139 1 214 1 313 1 334 1 
190 1 242 2 192 2 41 1 122 1 19 1 75 1 168 1 195 2 245 1 319 1 7 1 340 1 54 1 341 1 201 1 85 1 308 1 253 1 61 1 368 1 180 1 12 1 156 1 326 1 328 1 183 1 93 1 115 1 185 1 98 1 135 1 353 2 120 1 139 1 214 1 313 1 334 1 
144 1 242 2 192 2 122 1 44 1 19 1 75 1 195 2 245 1 198 1 319 1 7 1 340 1 82 1 54 1 341 1 201 1 85 1 308 1 253 1 61 1 154 1 368 1 180 1 12 1 156 1 326 1 183 1 185 1 98 1 135 1 162 1 353 2 120 1 139 1 214 1 313 1 334 1 
190 2 242 4 192 2 41 1 122 2 19 1 75 1 168 1 195 2 245 1 247 2 319 1 7 1 340 1 54 1 341 1 201 1 308 1 85 1 61 1 253 2 368 1 180 1 12 1 156 1 326 1 328 1 183 1 93 1 115 1 185 1 98 1 135 1 120 2 353 3 68 1 139 1 313 1 334 1 214 2 
190 2 242 4 192 2 41 1 122 2 19 1 75 1 168 1 195 2 245 1 247 2 319 1 7 1 340 1 54 1 341 1 201 1 308 1 85 1 61 1 253 2 368 1 180 1 12 1 156 1 326 1 328 1 183 1 93 1 115 1 185 1 98 1 135 1 120 2 353 3 68 1 139 1 313 1 334 1 214 2 
144 1 242 3 192 2 122 2 44 1 19 1 75 1 195 2 169 1 245 1 247 1 198 1 319 1 7 1 340 1 54 1 341 1 201 1 308 1 85 1 253 1 61 1 154 2 368 1 12 1 156 1 326 1 183 1 185 1 98 1 135 1 353 2 120 2 139 1 214 1 334 1 313 1 
40 2 241 1 105 1 106 2 294 1 4 2 295 1 124 1 51 1 298 1 83 1 342 3 366 6 150 3 367 1 60 1 229 1 280 1 351 1 232 1 371 1 116 2 285 1 136 1 16 1 70 1 
40 2 17 3 105 1 106 4 221 1 4 1 294 2 295 2 81 1 51 11 298 2 342 6 366 14 150 8 303 2 111 3 252 2 278 1 229 4 280 1 112 1 129 1 348 1 130 1 207 1 351 2 95 1 371 2 116 1 118 1 285 11 136 2 38 1 
43 1 105 1 19 2 106 2 46 1 196 1 4 1 76 1 294 1 295 1 23 1 317 1 318 1 79 1 171 1 7 1 272 1 342 1 176 1 366 2 150 1 202 1 153 1 85 2 229 1 325 1 348 1 130 1 351 1 371 1 95 1 255 1 117 1 372 1 67 1 136 1 35 1 213 1 
241 1 40 8 191 1 43 3 105 3 106 6 46 2 4 2 294 3 295 3 7 1 51 7 298 3 342 10 303 2 150 10 345 1 252 2 60 1 202 2 348 1 351 3 207 4 13 2 116 4 255 1 117 2 67 2 257 2 259 1 213 2 70 1 216 2 19 3 76 3 79 3 318 2 317 2 124 1 171 1 81 2 365 1 272 1 83 1 366 20 176 2 367 1 85 3 229 7 280 3 325 1 130 1 95 1 371 3 329 2 285 7 136 3 35 1 331 2 
289 1 43 8 105 2 19 1 106 4 46 2 76 8 294 2 295 2 79 7 7 1 171 2 55 1 272 1 342 1 366 2 250 1 150 1 274 1 202 3 85 1 309 1 348 1 232 1 351 2 158 1 371 2 95 1 32 2 255 1 209 1 67 2 160 1 136 2 35 1 259 1 213 2 239 1 141 1 
40 1 105 1 106 2 19 1 294 1 295 1 7 1 81 1 51 1 298 1 272 1 175 1 342 2 366 3 303 1 150 1 275 1 252 1 85 1 229 1 280 1 130 1 351 1 371 1 116 1 255 1 284 1 285 1 136 1 
40 1 229 1 105 1 106 2 294 1 295 1 207 1 232 1 351 1 371 1 51 1 298 1 285 1 136 1 366 2 332 1 303 1 150 2 
40 1 229 1 105 1 106 2 280 1 21 1 294 1 295 1 232 1 351 1 371 1 116 1 81 1 51 1 285 1 136 1 342 2 366 2 
40 2 105 1 106 2 294 1 295 1 81 1 51 2 298 1 342 2 366 4 150 2 303 1 252 1 229 2 280 1 351 1 232 1 207 1 371 1 116 1 285 2 136 1 
40 1 229 1 105 1 106 2 294 1 295 1 207 1 351 1 371 1 209 1 51 1 298 1 285 1 136 1 366 2 332 1 303 1 150 2 
40 1 229 1 105 1 106 2 280 1 21 1 294 1 295 1 351 1 371 1 116 1 209 1 81 1 51 1 285 1 136 1 342 2 366 2 
40 2 105 1 106 2 294 1 295 1 81 1 51 2 298 1 342 2 366 4 150 2 303 1 252 1 229 2 280 1 351 1 207 1 371 1 209 1 116 1 285 2 136 1 
40 2 105 1 106 2 294 1 295 1 81 1 51 2 298 1 342 2 366 4 150 2 303 1 252 1 229 2 280 1 351 1 207 1 371 1 116 1 285 2 136 1 
43 1 105 1 19 1 106 2 46 1 4 1 76 1 294 1 295 1 317 1 318 1 79 1 171 1 342 1 366 2 176 1 150 1 202 1 85 1 348 1 351 1 95 1 371 1 117 1 67 1 257 1 136 1 213 1 
43 1 105 1 19 1 106 2 46 1 4 1 76 1 294 1 295 1 317 1 79 1 171 1 299 1 342 1 366 2 150 1 202 1 85 1 346 1 348 1 351 1 95 1 371 1 117 1 67 1 136 1 212 1 213 1 
40 2 105 1 106 2 294 1 295 1 81 1 51 2 298 1 342 2 366 4 150 2 303 1 252 1 229 2 280 1 130 1 351 1 207 1 371 1 116 1 285 2 136 1 
40 2 43 1 105 1 19 1 106 2 46 1 76 1 294 1 295 1 317 1 318 1 79 1 81 1 51 2 298 1 342 2 366 4 176 1 250 1 150 2 303 1 252 1 202 1 85 1 229 2 280 1 207 1 351 1 371 1 116 1 117 1 67 1 285 2 257 1 136 1 331 1 213 1 
40 1 105 1 106 2 19 1 294 1 295 1 81 1 7 1 51 1 298 1 272 1 175 1 342 1 302 1 366 3 303 1 150 2 275 1 252 1 85 1 229 1 280 1 130 1 207 1 351 1 371 1 255 1 285 1 136 1 
261 1 40 4 17 2 106 4 20 1 244 1 22 1 221 1 294 2 295 2 80 1 297 1 81 2 298 2 342 7 366 13 150 6 303 2 111 1 252 2 278 1 203 1 280 2 207 2 234 1 371 2 116 2 211 1 66 1 136 2 
261 3 40 2 17 2 106 6 20 1 73 1 294 3 295 3 361 1 80 2 297 1 81 1 298 2 342 9 366 20 150 11 303 2 111 2 252 2 203 2 278 2 280 1 63 1 207 1 31 1 234 1 371 3 116 1 66 1 34 2 136 3 37 1 103 1 
261 1 40 2 17 2 106 4 20 1 221 1 294 2 295 2 80 1 297 1 81 1 298 1 342 5 366 9 150 4 303 1 111 1 252 1 278 1 203 1 280 1 207 1 234 1 371 2 116 1 211 1 66 1 136 2 
261 1 40 2 17 2 106 4 20 1 221 1 294 2 295 2 80 1 297 1 81 1 298 1 342 5 366 9 150 4 303 1 111 1 252 1 278 1 203 1 280 1 207 1 234 1 371 2 116 1 211 1 66 1 136 2 
261 3 241 1 40 12 17 4 73 1 106 4 20 1 221 2 294 2 295 2 361 1 124 1 80 1 297 1 81 6 298 7 83 1 342 22 366 46 150 24 303 6 367 1 111 4 252 6 60 1 278 2 203 1 280 7 112 2 63 1 207 6 31 1 234 1 371 2 116 6 66 1 34 1 136 2 37 1 70 1 103 1 
305 1 170 1 96 1 28 1 110 1 266 1 87 1 137 1 177 1 101 1 
339 1 123 1 
305 1 96 1 11 1 266 1 87 1 321 1 91 1 177 1 101 1 
306 1 182 1 
316 1 217 1 27 1 
305 1 192 1 193 2 28 1 87 1 266 1 219 1 360 1 195 1 233 1 170 1 96 1 312 1 173 1 147 1 137 1 177 1 101 1 
305 1 192 1 193 2 28 1 87 1 266 1 219 1 360 1 195 1 233 1 170 1 96 1 312 1 173 1 147 1 137 1 177 1 101 1 
305 1 192 1 193 2 28 1 87 1 266 1 219 1 360 1 195 1 233 1 170 1 96 1 312 1 173 1 147 1 137 1 177 1 101 1 
306 1 217 1 182 1 
306 1 217 1 182 1 
316 1 27 1 
316 1 217 1 27 1 
65 1 231 1 
192 1 194 1 193 1 19 2 219 1 45 1 266 1 123 1 195 1 4 1 7 2 339 1 173 1 272 2 148 1 177 1 305 1 85 2 87 1 113 1 231 1 370 1 255 2 96 1 65 1 236 1 101 1 
43 2 105 1 19 2 106 2 46 1 74 1 76 2 78 1 294 1 295 1 24 1 79 2 7 2 301 1 342 1 366 2 150 1 202 1 85 2 348 1 130 1 351 1 158 1 371 1 95 1 32 2 67 1 136 1 213 1 141 1 335 1 
143 1 218 1 43 2 46 1 205 1 76 2 293 1 349 1 79 2 235 1 330 1 53 1 223 2 67 1 56 1 187 1 250 1 259 1 151 1 
143 1 2 1 218 1 43 1 46 1 76 1 293 1 79 1 235 1 330 1 53 1 223 2 67 1 56 1 187 1 259 1 151 1 
202 1 9 1 43 1 309 1 46 1 205 1 76 1 79 1 171 1 53 1 67 1 15 1 213 1 274 1 
143 1 218 1 43 1 46 1 205 1 76 1 293 1 349 1 79 1 235 1 330 1 53 1 223 2 67 1 56 1 187 1 259 1 151 1 
58 1 
131 1 61 1 312 1 341 1 248 1 16 1 350 1 
190 1 308 1 41 1 61 1 44 1 326 1 168 1 328 1 131 1 245 1 319 1 312 1 54 1 341 1 353 1 
355 1 104 1 290 1 43 1 46 1 220 1 76 1 245 1 79 1 317 1 171 1 54 1 202 2 308 1 61 2 324 1 326 1 13 1 97 1 67 2 354 1 213 1 
17 1 355 1 44 6 73 1 3 1 168 3 361 1 245 2 108 1 319 1 81 2 298 2 54 2 341 5 57 1 303 2 111 1 252 2 278 1 308 2 61 8 280 2 63 1 326 2 206 2 31 1 131 2 184 5 33 1 312 5 353 1 186 1 37 1 142 5 260 1 
200 1 60 1 192 1 308 1 61 2 280 1 326 1 195 1 206 2 245 1 115 1 108 1 33 1 298 1 54 1 341 1 83 1 70 1 
308 1 61 1 326 1 350 1 245 1 131 1 312 1 54 1 248 1 341 1 
252 1 61 2 44 4 280 1 3 1 168 2 206 1 184 2 81 1 312 2 298 1 341 2 303 1 142 2 
131 1 108 1 33 1 319 1 312 1 353 1 
355 1 308 1 61 1 43 1 164 1 326 1 76 1 245 1 79 1 319 1 171 1 54 1 341 1 353 2 186 1 251 1 102 1 
43 1 105 1 106 2 19 3 46 1 4 1 294 1 76 1 295 1 79 1 318 1 317 1 171 1 7 2 52 1 272 2 175 2 342 1 366 1 176 1 202 1 85 3 323 1 348 1 351 1 371 1 255 2 117 1 67 1 257 1 136 1 213 1 
355 1 308 1 61 1 44 2 326 1 168 1 245 1 131 1 184 1 312 2 54 1 341 1 186 1 
266 1 177 1 39 1 
307 1 170 1 65 1 266 1 177 1 
266 1 177 1 39 1 
266 1 177 1 39 1 
189 1 266 1 177 1 
189 1 266 1 177 1 
189 1 266 1 177 1 
266 1 177 1 
87 1 101 1 
241 1 40 3 60 1 280 1 106 4 294 2 295 2 207 1 371 2 116 2 124 1 298 1 34 1 136 2 342 4 83 1 366 8 150 4 367 1 70 1 
241 1 40 2 60 1 280 1 124 1 116 2 298 1 342 3 83 1 16 1 366 6 150 3 367 1 70 1 
40 2 252 1 280 1 106 2 294 1 295 1 207 1 371 1 116 1 81 1 146 1 298 1 136 1 342 2 366 4 303 1 150 2 
111 1 252 1 40 2 17 2 278 1 280 1 221 1 207 1 116 1 81 1 298 1 342 4 366 7 150 3 303 1 
241 1 40 9 17 2 106 4 221 1 294 2 295 2 124 1 81 2 298 3 83 2 342 12 366 23 303 2 150 11 367 1 111 2 252 2 60 1 10 1 280 3 112 1 207 4 371 2 116 5 118 1 34 2 136 2 70 2 
17 1 342 1 366 1 
111 1 366 1 150 1 
252 1 40 3 106 2 280 1 294 1 295 1 207 1 371 1 13 1 116 2 81 1 146 1 298 1 136 1 342 3 366 6 303 1 150 3 
40 2 17 1 106 2 20 1 73 1 294 1 295 1 361 1 81 2 298 2 342 6 366 12 150 6 303 2 111 1 252 2 278 1 280 2 63 1 207 1 31 1 371 1 116 1 136 1 37 1 
40 2 60 1 280 1 207 1 116 1 298 1 342 3 83 1 366 6 150 3 70 1 
40 2 10 1 106 2 294 1 295 1 207 1 371 1 116 1 124 1 34 1 136 1 83 1 342 2 366 3 150 1 70 1 367 1 
200 1 40 5 60 1 106 2 20 1 280 2 294 1 295 1 207 2 371 1 116 3 298 2 136 1 83 2 342 5 366 10 150 5 70 2 
40 1 20 1 106 2 294 1 295 1 207 1 371 1 298 1 136 1 366 2 303 1 150 2 
40 2 252 1 280 1 20 1 106 2 294 1 295 1 207 1 371 1 116 1 81 1 298 1 136 1 342 2 366 4 303 1 150 2 
40 2 10 1 20 1 106 6 294 3 295 3 207 1 371 3 116 1 211 1 34 1 136 3 342 2 83 1 366 3 150 1 70 1 
241 1 40 12 17 4 106 10 20 1 337 1 221 1 294 5 295 5 124 1 81 3 146 1 298 5 83 3 342 18 366 34 150 16 303 3 367 1 111 3 252 3 60 2 278 1 10 1 280 5 30 1 207 5 371 5 116 7 256 1 211 1 34 2 136 5 70 3 
241 1 40 2 17 1 106 2 20 1 294 1 295 1 124 1 298 1 342 4 83 1 366 8 150 4 367 1 111 1 60 1 278 1 280 1 371 1 116 2 136 1 37 1 70 1 
241 1 40 3 17 2 20 1 106 4 221 1 294 2 295 2 124 1 146 1 298 2 83 1 342 5 366 11 150 6 303 1 367 1 111 1 252 1 60 1 278 1 280 1 207 1 371 2 116 2 136 2 37 1 70 1 
241 1 40 4 17 1 106 6 20 1 73 1 294 3 295 3 361 1 124 1 81 2 146 1 298 3 83 1 342 10 366 19 150 9 303 2 367 1 111 1 252 2 60 1 278 1 280 3 63 1 207 1 31 1 371 3 116 3 34 1 136 3 37 1 70 1 
241 1 40 5 17 1 106 6 20 1 73 1 294 3 295 3 361 1 124 1 81 1 146 1 298 3 83 1 342 7 366 17 150 10 303 2 367 1 111 1 252 2 60 1 278 1 280 2 63 1 207 2 31 1 371 3 116 3 34 1 136 3 37 1 70 1 
241 1 40 2 17 1 106 2 20 1 294 1 295 1 124 1 298 1 342 4 83 1 366 8 150 4 367 1 111 1 60 1 278 1 280 1 371 1 116 2 136 1 37 1 70 1 
40 2 17 1 106 2 20 1 73 1 294 1 295 1 361 1 81 2 298 2 342 6 366 12 150 6 303 2 111 1 252 2 278 1 280 2 63 1 207 1 31 1 371 1 116 1 136 1 37 1 
241 1 40 5 17 1 106 8 20 1 73 1 294 4 295 4 361 1 124 1 81 1 146 1 298 3 83 1 342 8 366 18 150 10 303 2 367 1 111 1 252 2 60 1 278 1 280 2 63 1 207 2 31 1 371 4 116 3 34 2 136 4 37 1 70 1 
40 6 17 1 20 1 106 8 73 1 294 4 295 4 361 1 81 2 298 3 342 7 366 16 150 9 303 3 111 1 252 3 278 1 280 2 63 1 207 3 31 1 371 4 116 3 211 1 34 2 136 4 37 1 
40 6 60 1 280 1 207 3 124 2 116 3 298 1 342 4 83 3 366 7 150 3 367 1 70 3 
241 1 40 4 17 1 20 1 106 8 73 1 294 4 295 4 361 1 124 1 81 1 298 3 83 1 342 8 366 18 150 10 303 2 367 1 111 1 252 2 60 1 278 1 280 2 63 1 207 1 31 1 371 4 116 3 211 1 34 2 136 4 37 1 70 1 
347 1 
347 1 230 1 161 1 179 1 273 1 167 1 
79 1 202 1 171 1 43 1 67 1 309 1 46 1 16 1 76 1 213 1 274 1 
202 1 85 2 43 1 19 2 46 1 4 1 76 1 317 1 79 1 318 1 255 1 117 1 7 1 171 1 67 1 272 1 35 1 213 1 
264 1 43 1 19 2 46 1 4 1 76 1 318 1 79 1 317 2 7 2 272 2 127 1 201 1 202 3 85 2 12 1 89 1 255 1 117 1 67 1 135 1 35 1 213 2 
264 1 43 2 19 2 46 1 4 1 76 2 269 1 79 2 317 2 7 2 299 1 272 2 127 1 201 1 202 3 85 2 12 1 89 1 255 1 117 1 67 1 135 1 35 1 213 2 
264 1 192 2 43 3 46 1 75 1 195 2 76 3 269 1 79 3 317 1 171 1 127 1 227 1 202 4 324 1 89 1 327 1 131 1 312 1 119 1 67 1 353 1 213 1 
127 1 315 1 264 1 192 2 202 4 43 3 324 1 46 1 89 1 75 1 195 2 327 1 76 3 269 1 131 1 317 1 79 3 171 1 312 1 67 1 353 1 213 1 
79 1 289 1 43 1 67 1 46 1 76 1 
289 1 202 3 43 7 46 2 220 1 76 7 77 1 158 1 32 1 79 6 317 1 171 2 55 1 67 3 160 1 238 1 250 1 259 1 213 2 239 1 304 1 
241 1 40 2 105 2 43 1 19 2 106 4 46 1 4 2 294 2 76 1 295 2 24 1 317 1 79 1 318 1 124 1 7 1 51 1 298 1 272 1 342 3 83 1 366 6 176 1 250 1 150 3 367 1 60 1 202 1 85 2 229 1 280 1 130 1 351 2 371 2 116 2 255 1 329 1 117 1 67 1 285 1 257 1 136 2 35 1 331 1 213 1 70 1 
192 1 43 1 45 1 195 1 76 1 245 1 79 1 108 1 171 1 298 1 54 1 341 2 248 1 83 1 251 1 200 1 60 1 308 1 61 4 280 2 326 1 206 2 350 1 131 1 33 1 312 1 97 1 70 1 
289 1 202 2 43 2 104 1 46 1 220 1 327 1 76 2 79 2 317 1 67 2 250 1 213 1 
202 1 43 4 309 1 46 1 90 1 76 4 269 1 79 4 171 1 67 1 250 1 274 1 213 1 
0 1 264 1 202 1 43 2 46 1 76 2 79 2 317 1 352 1 67 2 365 1 238 1 213 1 304 1 
143 1 79 1 171 1 330 1 43 1 223 1 67 1 46 1 187 1 76 1 
202 1 43 2 46 1 74 1 76 2 158 1 79 2 67 1 250 1 259 1 213 1 
264 1 202 3 43 5 309 1 46 2 90 1 76 5 158 1 79 4 171 1 67 2 55 1 250 1 274 1 213 2 239 1 
264 1 202 3 43 5 309 1 62 1 46 2 90 1 76 5 158 1 79 4 171 1 67 2 55 1 250 1 274 1 213 2 
202 1 85 2 43 1 19 2 46 1 4 1 76 1 317 1 79 1 255 1 117 1 7 1 171 1 299 1 67 1 272 1 35 1 213 1 
264 1 202 1 43 1 46 1 220 1 76 1 77 1 79 1 317 1 67 2 238 1 213 1 304 1 
84 1 228 1 4 1 373 1 163 1 
128 1 201 1 192 2 84 2 228 2 12 1 336 1 45 1 48 1 75 1 195 2 4 1 183 1 131 1 312 1 135 1 373 1 286 1 163 2 
84 1 85 1 19 1 78 1 7 1 301 1 373 1 163 1 335 1 
48 1 286 1 373 1 
121 1 107 1 16 1 215 1 
121 1 94 1 109 1 107 1 100 1 215 1 276 1 
94 1 49 1 88 1 
277 1 121 1 222 1 94 3 210 2 18 1 109 1 107 1 100 3 333 1 215 1 276 1 
121 1 94 2 152 1 109 1 25 1 107 1 100 2 215 1 276 1 
143 1 204 1 107 1 94 1 254 1 235 1 109 1 223 1 333 1 100 1 276 1 
121 1 94 1 109 1 107 1 100 1 333 1 276 1 
121 2 94 1 109 1 100 1 333 1 215 1 276 1 
121 1 369 1 107 1 94 2 363 1 109 2 237 1 333 1 100 2 276 2 
121 1 288 1 152 2 47 1 107 2 94 3 254 1 109 1 333 1 100 3 140 1 215 1 276 1 
143 1 121 1 152 1 218 1 107 1 94 2 235 1 109 1 223 2 8 1 187 1 333 1 100 2 215 1 276 1 
121 1 152 2 107 2 94 4 254 1 109 2 25 1 258 1 333 1 100 4 140 1 215 1 276 2 
121 1 94 1 109 1 107 1 100 1 333 1 215 1 276 1 
121 2 152 2 18 1 267 1 107 3 222 1 94 4 254 1 210 1 109 1 100 4 140 1 215 2 276 1 
121 1 59 1 152 1 107 1 94 2 109 1 271 1 333 1 100 2 226 1 215 1 276 1 
121 1 18 2 107 1 281 1 222 1 94 3 210 2 109 1 333 1 100 3 215 1 276 1 
125 2 224 1 99 1 107 2 
263 1 94 1 109 1 100 1 333 1 276 1 
121 1 288 1 94 2 152 1 109 1 107 1 100 2 333 1 215 1 276 1 
114 1 
121 1 94 1 109 1 107 1 100 1 333 1 215 1 276 1 
288 1 121 1 94 3 152 1 210 1 109 1 107 1 100 3 333 1 215 1 276 1 
254 1 267 1 107 1 140 1 
121 1 107 1 

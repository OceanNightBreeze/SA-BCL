#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
258 1 126 1 154 2 277 1 35 1 376 1 197 1 23 1 58 3 59 1 339 2 249 2 157 3 
42 1 197 1 58 1 157 1 249 1 154 1 
42 1 197 1 58 1 157 1 249 1 154 1 
42 1 197 1 58 1 157 1 249 1 154 1 
42 1 197 1 58 1 157 1 249 1 154 1 
151 2 258 3 126 1 300 1 154 1 205 1 94 1 277 1 289 1 23 1 197 1 58 4 84 1 59 2 339 3 100 1 249 1 157 4 
317 1 126 1 44 1 300 1 55 1 154 1 94 1 276 1 277 1 35 1 197 1 246 1 58 2 339 1 249 1 157 2 
151 2 126 1 300 1 154 2 56 1 277 1 35 1 278 1 197 1 58 9 84 1 59 4 339 5 157 9 241 1 258 7 205 1 94 1 17 1 376 1 289 1 23 3 100 1 249 2 
151 2 126 1 300 1 154 2 56 1 277 1 35 1 278 1 197 1 58 9 84 1 59 4 339 5 157 9 241 1 258 7 205 1 94 1 17 1 376 1 289 1 23 3 100 1 249 2 
330 1 134 1 45 1 253 1 7 1 21 1 280 1 279 1 179 1 364 1 146 1 247 1 266 1 148 1 
60 1 
31 1 21 2 196 1 137 1 364 2 60 1 299 1 146 1 
367 1 31 1 91 2 33 1 136 1 137 2 184 1 140 2 360 1 116 2 219 1 21 5 196 1 281 1 364 5 60 1 146 2 267 1 39 1 
373 1 31 1 60 1 
60 1 3 2 26 1 
7 2 279 2 280 2 134 2 168 1 179 1 45 2 247 2 
251 1 0 1 51 1 52 2 124 2 4 1 218 1 79 2 304 2 103 1 7 3 177 1 279 3 280 2 179 1 130 1 256 1 182 1 201 1 344 1 239 2 371 1 240 1 161 1 134 2 284 1 45 2 15 1 46 1 68 1 245 1 168 1 187 1 22 1 247 2 121 1 189 1 
7 1 279 1 280 1 134 1 179 1 45 1 247 1 253 1 266 1 148 1 
190 1 31 1 11 1 272 1 45 1 7 1 67 1 279 1 21 1 308 1 364 1 60 1 158 1 266 1 
190 1 31 1 11 1 134 1 45 1 7 1 67 1 21 2 280 1 279 1 308 1 364 2 60 1 247 1 266 1 
21 1 137 1 364 1 146 1 361 1 
31 1 21 2 196 1 137 1 364 2 60 1 351 1 146 1 
21 1 137 1 364 1 
41 1 134 1 45 2 7 2 279 2 280 1 168 2 247 1 159 1 
229 1 102 1 313 1 
251 1 0 1 344 1 52 1 239 1 51 1 284 1 124 1 46 1 7 1 279 1 245 1 168 1 187 1 121 1 109 1 
373 1 168 1 
134 1 332 2 45 5 306 1 7 5 255 1 280 4 279 5 168 1 10 1 247 4 158 1 159 1 27 1 
7 2 88 1 279 2 280 2 45 2 247 2 266 1 148 1 
251 1 0 1 344 1 51 1 52 1 239 1 284 1 124 1 332 1 45 1 102 1 46 1 7 2 280 1 279 2 245 1 187 1 247 1 121 1 27 1 
7 3 279 3 280 3 134 1 168 1 332 1 45 3 247 3 
7 1 279 1 280 1 45 1 247 1 266 1 148 1 
41 1 7 1 279 1 280 1 134 1 45 1 247 1 266 1 159 1 
251 1 190 1 0 1 51 1 52 1 124 1 214 1 332 1 4 1 218 1 79 2 304 1 103 1 221 1 7 4 177 1 279 4 280 3 308 1 179 1 364 1 256 1 159 1 201 1 344 1 239 1 371 1 240 1 11 1 284 1 134 2 45 3 15 1 46 1 67 1 21 1 245 1 168 1 187 1 247 3 266 1 121 1 27 1 189 1 
7 2 279 2 280 1 168 1 10 1 332 1 45 2 247 1 158 1 
190 1 111 1 11 1 134 1 332 2 45 3 221 1 7 3 67 1 21 1 280 3 279 3 308 1 364 1 60 1 247 3 266 1 159 1 27 1 
134 1 332 1 45 2 102 1 7 2 280 2 279 2 247 2 159 1 313 1 
251 1 0 1 52 1 239 1 51 1 344 1 284 1 124 1 46 1 7 1 279 1 245 1 168 1 187 1 121 1 
0 1 52 1 239 1 51 1 344 1 284 1 124 1 162 1 46 1 7 1 279 1 168 1 187 1 210 1 121 1 
229 2 357 1 218 1 102 2 79 2 304 4 103 2 177 1 307 1 309 1 256 1 313 2 201 1 110 1 371 1 240 1 161 2 114 1 66 1 226 1 375 1 290 1 143 1 24 1 
7 1 88 1 279 1 280 1 308 1 45 1 247 1 266 1 
106 1 72 1 326 1 
40 1 321 1 106 2 172 1 326 2 73 1 
106 1 326 1 
106 1 326 1 
40 1 172 1 
40 1 172 1 
40 1 172 1 
106 1 220 1 326 1 
106 1 220 1 326 1 
106 1 220 1 326 1 
106 1 233 1 326 1 
106 1 233 1 326 1 
106 1 233 1 326 1 
328 1 231 1 1 1 334 1 222 1 7 2 280 2 279 2 106 1 364 1 365 1 12 1 315 1 45 2 318 1 118 1 208 1 21 1 168 1 378 1 247 2 72 1 326 1 74 1 
75 1 328 2 12 1 90 1 113 1 334 2 80 1 82 1 222 2 208 3 21 2 106 2 198 1 378 2 364 2 60 1 147 2 326 2 73 1 
346 1 246 1 25 2 100 1 300 2 
100 1 300 1 94 1 
246 1 300 1 94 1 
346 1 246 1 25 1 100 2 300 3 200 1 
97 1 346 1 246 1 25 1 100 1 300 2 
31 1 125 1 3 3 275 1 360 3 219 1 337 2 307 1 196 1 364 5 199 1 60 2 365 1 39 2 202 1 315 1 91 1 137 1 140 1 116 1 166 2 286 1 117 1 118 1 375 1 261 1 21 5 319 2 290 1 24 1 146 4 26 1 
252 5 230 1 31 1 298 1 125 2 3 9 275 3 361 5 360 8 219 1 307 3 196 1 364 9 60 5 340 1 39 6 202 1 345 1 91 2 136 1 137 6 140 2 116 2 166 6 206 1 117 2 118 4 375 3 21 9 319 6 290 3 24 3 48 1 146 7 26 3 
31 1 125 1 3 4 360 3 275 1 337 1 307 1 199 1 364 3 60 3 39 2 91 1 136 1 140 1 116 1 166 2 117 1 118 1 375 1 261 1 21 3 319 2 290 1 24 1 146 2 26 2 
230 1 31 1 298 1 125 1 3 7 360 5 275 2 337 2 307 2 364 4 199 1 60 4 340 1 39 4 91 1 136 1 140 1 116 1 166 4 117 1 118 2 375 2 21 4 261 1 319 4 290 2 24 2 146 3 26 3 
223 1 
373 1 344 1 28 1 
344 1 115 1 
344 1 51 1 187 1 
344 1 213 1 
344 1 187 1 
344 3 51 1 369 1 187 1 16 1 28 2 
110 2 329 2 161 4 204 1 114 3 304 7 103 3 119 1 185 1 235 1 287 1 307 1 290 1 70 1 71 1 324 1 180 1 238 1 
329 3 232 1 275 2 303 1 79 4 304 27 103 13 235 3 177 2 307 3 57 3 363 2 107 1 256 2 180 2 238 2 110 4 201 2 368 3 371 2 161 14 372 1 204 1 114 7 119 1 185 1 287 2 375 2 288 1 99 1 290 3 24 2 71 1 324 2 
110 3 201 2 329 2 371 2 161 5 316 1 204 1 114 4 79 4 304 9 119 1 103 4 287 1 235 1 177 2 307 1 290 1 71 1 363 1 256 2 145 1 324 1 180 1 238 1 
110 2 329 2 161 4 204 1 114 3 304 7 103 3 185 1 119 1 235 1 287 1 307 1 290 1 71 1 324 1 180 1 238 1 
110 2 329 2 161 4 204 1 114 3 304 7 103 3 185 1 119 1 235 1 287 1 307 1 290 1 71 1 324 1 180 1 238 1 
0 1 344 1 52 1 239 1 133 2 284 1 297 1 285 1 124 1 176 1 64 1 215 2 333 2 154 1 155 1 35 2 349 1 187 1 58 1 144 1 249 1 157 1 121 1 
52 1 239 1 133 1 284 1 271 1 124 1 215 1 153 1 333 1 300 2 154 1 141 1 94 1 348 1 35 1 246 1 197 1 58 1 100 1 249 1 157 1 353 1 200 1 121 1 131 1 250 1 
52 1 271 1 124 1 215 1 126 1 333 1 153 1 300 2 154 1 277 1 35 1 197 1 58 2 339 1 157 2 200 1 131 1 239 1 133 1 284 1 258 1 141 1 94 1 246 1 100 1 249 1 353 1 121 1 122 1 250 1 
52 1 271 1 124 1 331 1 215 1 126 1 333 1 153 1 300 2 154 1 277 1 35 1 58 3 339 1 157 3 200 1 131 1 239 1 133 1 284 1 285 1 258 2 141 1 94 1 348 1 246 1 100 1 249 1 353 1 121 1 
52 1 271 1 124 1 331 1 215 1 126 1 333 1 300 2 277 1 35 1 58 2 339 1 157 2 200 1 131 1 239 1 133 1 284 1 258 2 94 1 348 1 246 1 100 1 353 1 121 1 
150 1 
0 2 269 1 190 1 52 2 192 2 54 1 234 2 272 1 3 2 7 1 279 1 196 3 60 2 158 1 342 1 239 2 344 1 11 1 284 1 116 1 207 1 67 1 20 1 21 5 169 4 171 2 293 1 26 2 121 1 355 2 295 1 356 1 31 1 32 1 297 1 124 2 125 1 216 1 302 2 360 2 219 1 36 2 308 1 364 5 366 1 39 2 91 1 137 6 45 1 140 1 187 1 377 2 188 1 144 1 266 1 
190 1 11 1 192 1 137 2 54 1 272 1 299 1 45 1 7 1 67 1 20 1 21 3 279 1 196 1 308 1 169 2 364 3 293 1 188 1 266 1 158 1 342 1 
190 1 31 1 54 1 272 1 299 1 7 1 279 1 36 1 196 1 308 1 364 3 60 1 158 1 342 1 11 1 137 1 45 1 67 1 20 1 21 3 169 3 188 1 293 1 266 1 
190 1 31 1 192 1 54 1 272 1 299 1 7 1 279 1 36 1 196 1 308 1 364 3 60 1 158 1 342 1 11 1 137 2 45 1 67 1 20 1 21 3 169 3 188 1 293 1 266 1 355 1 
190 1 192 4 54 1 272 1 234 2 336 1 7 1 279 1 196 3 60 5 158 1 342 1 11 1 242 1 116 1 243 1 207 1 67 1 20 1 21 5 169 6 171 2 293 1 26 2 355 4 295 1 31 5 299 1 301 1 360 1 302 2 219 1 36 4 308 1 364 5 39 1 91 1 137 7 45 1 140 1 377 2 265 1 188 1 266 1 
190 1 192 2 54 1 272 1 234 2 3 2 7 1 279 1 196 2 60 2 158 1 342 1 11 1 116 1 207 1 67 1 20 1 21 4 169 4 171 2 293 1 26 2 355 2 295 1 31 1 216 1 360 1 302 2 219 1 36 2 308 1 364 4 39 1 91 1 137 4 45 1 140 1 377 2 188 1 266 1 
190 1 31 1 192 2 54 1 234 2 272 1 301 1 302 2 360 1 219 1 336 1 7 1 36 2 279 1 196 2 308 1 364 4 60 1 158 1 342 1 39 1 11 1 91 1 137 4 45 1 140 1 116 1 243 1 207 1 67 1 20 1 21 4 377 2 169 4 171 2 188 1 293 1 26 2 266 1 355 2 295 1 
190 1 31 1 192 2 54 1 234 2 272 1 301 1 302 2 360 1 219 1 336 1 7 1 36 2 279 1 196 2 308 1 364 4 60 1 158 1 342 1 39 1 11 1 91 1 137 4 45 1 140 1 116 1 243 1 207 1 67 1 20 1 21 4 377 2 169 4 171 2 188 1 293 1 26 2 266 1 355 2 295 1 
327 1 190 1 31 1 192 2 54 1 234 2 272 1 127 1 3 2 360 1 219 1 336 1 7 1 36 2 279 1 196 2 178 2 308 1 364 4 60 1 158 1 342 1 39 1 11 1 91 1 137 4 45 1 140 1 116 1 374 2 67 1 260 1 20 1 21 4 169 4 171 2 188 1 293 1 266 1 355 2 295 1 
190 1 31 1 192 3 54 1 234 2 272 1 301 1 302 2 360 1 219 1 336 1 7 1 279 1 36 3 196 2 308 1 364 4 60 1 158 1 342 1 39 1 11 1 91 1 137 5 45 1 140 1 242 1 116 1 243 1 207 1 67 1 20 1 21 4 377 2 169 5 171 2 188 1 293 1 26 2 266 1 355 3 295 1 
190 1 31 1 192 3 54 1 234 2 272 1 301 1 302 2 360 1 219 1 336 1 7 1 279 1 36 3 196 2 308 1 364 4 60 1 158 1 342 1 39 1 11 1 91 1 137 5 45 1 140 1 242 1 116 1 243 1 207 1 67 1 20 1 21 4 377 2 169 5 171 2 188 1 293 1 26 2 266 1 355 3 295 1 
190 1 192 2 54 1 272 1 234 2 3 2 7 1 279 1 196 2 60 1 158 1 342 1 11 1 116 1 67 1 20 1 21 4 169 4 171 2 293 1 355 2 295 1 31 1 216 1 360 1 219 1 36 2 178 2 308 1 364 4 39 1 91 1 137 4 45 1 140 1 374 2 260 1 188 1 266 1 
0 2 52 7 53 1 124 8 297 1 358 1 332 1 218 2 79 4 304 2 103 1 7 1 177 2 279 1 280 1 37 1 256 2 130 1 108 1 182 2 201 2 344 3 239 8 371 2 240 2 284 2 161 1 45 1 15 1 348 1 18 1 262 1 143 1 187 2 248 1 247 1 144 1 121 2 122 1 
229 1 275 1 102 1 218 1 79 2 304 3 103 2 7 1 177 1 280 1 279 1 307 1 256 1 159 1 313 1 110 1 201 1 371 1 240 1 134 1 161 1 114 1 45 1 139 1 244 1 375 1 24 1 290 1 247 1 
229 1 329 1 102 1 218 1 79 2 304 6 103 3 177 1 307 1 256 1 313 1 201 1 110 2 371 1 240 1 161 3 204 1 114 2 119 1 287 1 373 1 143 1 290 1 168 2 71 1 324 1 
229 11 175 1 275 2 218 1 102 11 79 4 254 1 304 14 103 6 235 1 177 2 307 2 129 1 57 3 130 1 256 2 313 4 110 1 201 2 368 3 371 2 240 2 161 8 135 1 114 2 139 1 15 1 375 1 288 1 168 1 228 1 24 2 290 1 
251 1 0 1 51 1 52 1 124 1 332 1 218 1 79 2 304 2 103 1 7 2 177 1 279 2 280 1 310 1 256 1 130 1 109 1 313 1 201 1 344 1 239 1 43 1 240 1 371 1 284 1 161 1 45 1 139 1 15 1 46 1 98 1 245 1 168 1 187 1 247 1 121 1 27 1 
0 1 229 7 52 3 51 2 329 1 152 1 332 1 4 2 275 2 102 7 103 10 335 2 7 3 235 4 280 1 279 3 110 6 201 3 239 3 344 2 240 3 284 2 161 10 204 1 114 10 15 1 348 1 119 1 287 1 245 2 168 2 290 3 24 2 71 1 247 1 352 2 121 2 27 1 211 2 251 2 124 3 217 2 218 3 79 6 304 20 177 3 307 3 85 1 130 1 256 3 224 1 313 7 371 3 45 1 139 1 46 2 375 2 187 2 324 1 
229 1 201 1 240 1 371 1 161 2 114 1 102 1 218 1 79 2 304 2 226 1 235 1 177 1 307 1 143 1 24 1 256 1 313 1 
110 1 229 1 201 1 240 1 371 1 114 1 102 1 218 1 79 2 304 2 103 2 177 1 375 1 143 1 290 1 309 1 256 1 313 1 
229 2 275 1 218 1 102 2 79 2 304 4 103 2 235 1 177 1 307 1 256 1 313 2 201 1 110 1 371 1 240 1 161 2 114 2 375 1 24 1 143 1 290 1 
229 1 201 1 240 1 371 1 161 2 114 1 102 1 218 1 79 2 304 2 226 1 235 1 177 1 307 1 24 1 256 1 108 1 313 1 
110 1 229 1 201 1 240 1 371 1 114 1 102 1 218 1 79 2 304 2 103 2 177 1 375 1 290 1 309 1 256 1 108 1 313 1 
229 2 275 1 218 1 102 2 79 2 304 4 103 2 235 1 177 1 307 1 256 1 108 1 313 2 201 1 110 1 371 1 240 1 161 2 114 2 375 1 24 1 290 1 
229 2 275 1 218 1 102 2 79 2 304 4 103 2 235 1 177 1 307 1 256 1 313 2 201 1 110 1 371 1 240 1 161 2 114 2 375 1 24 1 290 1 
251 1 0 1 51 1 52 1 124 1 4 1 218 1 79 2 304 2 103 1 7 1 177 1 279 1 130 1 256 1 201 1 239 1 344 1 240 1 371 1 161 1 284 1 15 1 46 1 245 1 168 1 187 1 121 1 
0 1 51 1 52 1 124 1 218 1 79 2 304 2 103 1 7 1 177 1 279 1 130 1 256 1 201 1 239 1 344 1 240 1 371 1 161 1 284 1 162 1 15 1 46 1 167 1 168 1 187 1 210 1 121 1 
229 2 275 1 218 1 102 2 79 2 304 4 103 2 235 1 177 1 307 1 256 1 313 2 201 1 110 1 371 1 240 1 161 2 114 2 139 1 375 1 24 1 290 1 
251 1 229 2 51 1 52 1 124 1 4 1 275 1 102 2 218 1 79 2 304 4 103 2 235 1 7 1 177 1 279 1 307 1 256 1 313 2 110 1 201 1 239 1 344 1 240 1 371 1 161 2 284 1 114 2 46 1 375 1 245 1 290 1 24 1 187 1 352 1 121 1 122 1 
229 1 2 1 275 1 218 1 102 1 79 2 304 3 103 1 235 1 7 1 177 1 280 1 279 1 307 1 256 1 159 1 313 1 201 1 371 1 240 1 134 1 161 2 114 1 45 1 139 1 375 1 290 1 24 1 247 1 
329 1 193 1 275 4 5 4 103 17 235 5 57 2 201 4 110 4 160 1 161 20 164 1 204 1 114 9 119 1 287 1 288 2 24 4 290 4 71 1 350 1 79 8 304 37 305 1 177 4 362 1 307 5 83 2 363 2 256 4 181 1 183 1 368 2 371 4 257 1 316 1 138 1 186 1 375 3 263 1 324 1 325 1 
193 1 275 3 5 4 79 6 304 26 103 12 235 2 362 1 177 3 307 3 83 1 363 2 57 2 256 3 181 1 183 1 110 2 201 3 368 2 160 1 371 3 257 1 161 14 316 1 164 1 114 4 138 2 186 1 375 2 288 2 290 2 24 3 263 1 350 2 
329 2 193 1 275 3 5 4 79 8 305 1 304 44 103 21 235 5 362 1 177 4 307 5 83 1 363 2 57 3 256 4 181 1 183 1 110 4 201 4 368 3 160 1 371 4 257 1 161 23 316 1 204 2 164 1 114 9 138 2 119 2 287 2 186 1 375 3 288 3 290 5 24 3 71 2 263 1 350 1 324 2 29 1 
329 2 193 1 275 3 5 4 79 8 305 1 304 40 103 18 235 4 362 1 177 4 307 5 83 1 363 2 57 3 256 4 181 1 183 1 110 4 201 4 368 3 160 1 371 4 257 1 161 22 316 1 204 2 164 1 114 8 138 2 119 2 287 2 186 1 375 2 288 3 290 4 24 3 71 2 263 1 350 1 324 2 29 1 
329 1 193 1 275 3 5 4 79 4 304 32 103 15 235 3 362 1 177 2 307 4 83 1 363 1 57 2 256 2 181 1 183 1 110 3 201 2 368 2 160 1 371 2 257 1 161 17 316 1 204 1 164 1 114 6 138 1 119 1 287 1 186 1 375 3 288 2 290 4 24 3 71 1 263 1 350 1 324 1 
82 1 328 1 222 1 106 1 113 1 378 1 311 1 334 1 326 1 73 1 
1 1 72 1 
328 1 222 1 106 1 291 1 378 1 62 1 334 1 326 1 65 1 
296 1 220 1 
194 1 321 1 233 1 
75 1 328 1 12 1 113 1 334 1 80 1 82 1 222 1 208 2 21 1 106 1 198 1 364 1 378 1 60 1 147 1 326 1 73 1 
75 1 328 1 12 1 113 1 334 1 80 1 82 1 222 1 208 2 21 1 106 1 198 1 364 1 378 1 60 1 147 1 326 1 73 1 
75 1 328 1 12 1 113 1 334 1 80 1 82 1 222 1 208 2 21 1 106 1 198 1 364 1 378 1 60 1 147 1 326 1 73 1 
296 1 321 1 220 1 
296 1 321 1 220 1 
194 1 233 1 
194 1 321 1 233 1 
231 1 74 1 
328 1 231 1 1 1 334 1 7 2 222 1 279 2 280 2 198 1 106 1 364 1 365 1 315 1 45 2 347 1 318 1 118 1 208 1 21 1 168 1 378 1 146 1 72 1 247 2 147 1 326 1 74 1 
52 2 53 1 124 2 359 1 218 1 79 2 304 2 103 1 7 2 177 1 279 2 256 1 130 1 312 1 182 2 201 1 87 1 344 1 239 2 240 1 371 1 284 1 13 1 161 1 45 2 139 1 15 1 187 1 248 1 121 1 294 1 
0 1 344 1 52 1 239 1 284 1 124 1 297 1 176 1 215 1 187 1 49 1 144 1 121 1 123 1 
52 1 239 1 89 1 284 1 271 1 124 1 215 1 153 1 300 2 94 1 348 1 246 1 120 1 100 1 200 1 121 1 131 1 123 1 
52 2 239 2 89 1 284 1 271 1 124 2 215 1 153 1 300 2 94 1 348 1 246 1 120 1 100 1 200 1 121 1 131 1 123 1 122 1 
52 1 239 1 89 1 271 1 284 1 124 1 215 1 92 1 153 1 300 2 94 1 348 1 246 1 100 1 200 1 121 1 131 1 
77 1 
31 1 91 1 184 1 140 1 116 1 360 1 219 1 281 1 60 1 39 1 
101 2 217 1 3 10 275 2 360 5 166 5 227 1 375 2 307 2 319 5 24 2 290 2 60 5 26 5 39 5 
31 1 21 1 196 1 137 1 364 1 60 1 
76 1 269 1 0 2 51 1 52 4 191 1 124 4 297 1 78 1 125 2 273 1 360 2 219 1 195 1 196 2 364 3 366 2 39 2 344 2 239 4 284 3 14 1 91 2 136 1 137 4 140 2 116 2 96 2 21 3 187 2 170 1 144 1 121 2 356 1 
373 1 31 1 281 1 60 1 184 1 360 1 39 1 
31 1 3 1 302 1 360 1 219 1 196 1 364 1 60 2 39 1 91 1 137 1 140 1 116 1 207 1 21 1 377 1 26 1 
0 1 51 3 52 3 191 1 101 3 3 12 275 2 8 1 104 1 196 3 281 1 60 8 341 2 344 10 239 3 11 2 284 4 163 2 115 3 116 4 16 1 166 6 19 2 21 5 69 1 24 2 290 2 26 6 121 3 28 2 122 1 31 2 124 3 213 2 125 2 217 2 360 9 219 4 307 2 364 5 366 1 132 2 39 8 91 4 137 5 184 1 140 4 96 1 227 2 375 2 319 6 187 3 323 2 149 2 
31 2 101 2 125 1 193 1 3 6 360 8 275 2 219 2 196 1 307 2 57 1 364 1 60 5 181 1 366 1 39 5 183 1 368 1 160 1 91 2 112 1 164 1 137 1 140 2 116 2 166 5 227 1 21 1 375 2 319 5 288 1 24 2 290 2 173 1 26 3 
270 1 101 2 330 1 253 1 360 2 219 1 7 1 279 1 280 1 307 2 179 1 364 1 39 2 134 1 91 1 204 1 45 1 140 1 116 1 243 1 227 1 287 1 21 1 290 1 247 1 266 1 148 1 324 1 
251 1 0 1 52 1 51 1 124 1 4 1 218 1 79 2 304 1 103 1 7 3 177 1 279 3 280 2 179 1 256 1 201 1 239 1 344 1 371 1 240 1 134 2 284 1 45 2 15 1 46 1 245 1 168 1 187 1 247 2 121 1 189 1 
329 1 31 2 91 1 125 1 3 4 140 1 116 1 360 1 166 2 219 1 319 2 60 4 26 2 366 1 39 2 
222 1 113 1 274 1 334 1 74 1 
222 1 203 1 334 1 
222 1 203 1 334 1 
222 1 203 1 334 1 
222 1 237 1 334 1 
222 1 237 1 334 1 
222 1 237 1 334 1 
222 1 334 1 
106 1 326 1 
201 1 110 3 371 1 270 1 161 5 316 1 204 1 114 5 79 2 304 10 103 5 287 2 235 2 177 1 307 2 290 2 256 1 324 2 
201 1 371 1 161 2 316 1 114 1 79 2 304 2 235 1 177 1 307 1 24 1 256 1 
110 1 201 1 371 1 161 2 316 1 114 2 275 1 79 2 304 4 103 2 235 1 177 1 375 1 307 1 290 1 24 1 256 1 
201 3 110 1 371 3 161 1 232 1 316 1 114 2 79 6 305 1 304 3 103 2 287 1 235 1 177 3 363 1 256 3 324 1 
329 1 232 1 275 2 34 1 79 10 303 1 305 1 304 31 103 16 235 4 177 5 307 4 363 2 57 3 256 5 110 5 201 5 368 3 371 5 161 15 316 1 372 1 204 2 114 9 119 1 287 3 375 2 288 1 99 1 24 2 290 4 71 1 324 3 
329 1 193 1 79 2 304 8 103 4 177 1 307 1 57 1 256 1 201 1 110 2 368 1 371 1 161 4 316 1 204 1 114 2 119 1 287 1 288 1 290 1 71 1 324 1 
329 1 193 1 275 2 34 1 79 6 304 17 103 7 235 1 177 3 307 3 363 1 57 1 256 3 181 1 201 3 110 3 183 1 368 1 160 1 371 3 161 10 316 1 204 1 164 1 114 4 119 1 287 1 375 1 288 1 24 2 290 2 71 1 324 1 
329 1 193 1 275 2 34 1 79 6 304 19 103 10 235 1 177 3 307 3 57 1 363 1 256 3 181 1 201 3 110 3 183 1 368 1 160 1 371 3 161 9 316 1 204 1 164 1 114 4 119 1 287 1 375 2 288 1 24 2 290 3 71 1 324 1 
329 1 193 1 275 2 34 1 79 6 304 17 103 7 235 2 177 3 307 3 363 1 57 1 256 3 181 1 201 3 110 3 183 1 368 1 160 1 371 3 161 10 316 1 204 1 164 1 114 5 119 1 287 1 375 1 288 1 24 2 290 2 71 1 324 1 
329 1 193 1 79 2 304 8 103 4 177 1 307 1 57 1 256 1 201 1 110 2 368 1 371 1 161 4 316 1 204 1 114 2 119 1 287 1 288 1 290 1 71 1 324 1 
193 1 275 2 79 2 304 12 103 6 235 1 177 1 307 2 57 1 256 1 181 1 201 1 110 1 183 1 368 1 160 1 371 1 161 6 316 1 164 1 114 2 375 2 288 1 24 2 290 2 
329 1 193 1 275 2 34 1 79 8 304 18 103 8 235 2 177 4 307 3 57 1 363 2 256 4 181 1 183 1 201 4 110 3 368 1 160 1 371 4 161 10 316 1 204 1 164 1 114 5 119 1 287 1 375 1 288 1 24 2 290 2 71 1 324 1 
193 1 275 3 79 8 304 16 305 1 103 7 235 3 177 4 307 3 57 1 363 2 256 4 181 1 183 1 201 4 110 3 368 1 160 1 371 4 161 9 316 1 164 1 114 6 375 2 288 1 24 3 290 2 
110 3 161 3 204 1 114 6 304 7 103 4 119 2 287 3 235 3 307 1 290 1 71 1 324 3 
329 1 193 1 275 2 79 8 304 18 305 1 103 8 235 1 177 4 307 3 57 1 363 2 256 4 181 1 183 1 201 4 110 3 368 1 160 1 371 4 161 10 316 1 204 1 164 1 114 4 119 1 287 1 375 1 288 1 24 2 290 2 71 1 324 1 
110 2 201 2 329 1 371 2 161 4 204 1 114 3 79 4 304 8 103 4 119 1 235 1 287 1 177 2 307 1 290 1 363 1 71 1 256 2 324 1 
110 2 329 1 161 3 204 1 114 2 304 6 103 3 119 1 373 1 287 1 307 1 290 1 71 1 324 1 
110 1 201 1 371 1 161 2 114 2 275 1 34 1 79 2 304 4 103 2 235 1 177 1 375 1 307 1 290 1 24 1 256 1 
103 1 368 1 161 1 288 1 57 1 304 2 
329 1 232 1 175 1 275 2 254 1 79 4 304 23 103 12 235 4 177 2 307 3 129 1 57 2 363 2 256 2 110 5 201 2 368 2 371 2 161 11 204 1 114 9 119 1 287 2 375 2 24 2 290 3 71 1 324 2 
103 1 57 1 304 1 
368 1 161 1 304 1 
201 1 110 1 371 1 161 3 114 2 217 1 275 1 34 1 79 2 304 6 103 3 235 1 177 1 375 1 307 1 24 1 290 1 256 1 
193 1 275 2 79 2 304 12 103 6 235 1 177 1 307 2 57 1 256 1 181 1 201 1 110 1 183 1 368 1 160 1 371 1 161 6 316 1 164 1 114 2 375 2 288 1 24 2 290 2 
110 1 161 3 204 1 114 2 304 6 103 3 287 1 235 1 307 1 290 1 324 1 
110 1 201 1 371 1 161 1 232 1 114 2 79 2 304 3 119 1 103 2 235 1 287 1 177 1 363 1 71 1 256 1 324 1 
7 1 279 1 168 1 10 1 45 1 158 1 174 1 
50 1 45 1 6 1 7 1 47 1 279 1 168 1 322 1 10 1 174 1 158 1 63 1 
0 1 52 4 239 4 344 1 284 1 124 4 297 1 93 1 142 1 187 1 144 1 121 1 122 1 
76 1 52 2 239 2 51 1 344 1 284 2 124 2 14 1 78 1 96 1 195 1 187 1 85 1 121 1 
0 1 239 1 52 1 284 1 271 1 246 1 124 1 300 1 94 1 121 1 
344 1 239 2 52 2 284 1 187 1 124 2 359 1 248 1 121 1 348 1 122 1 
0 1 52 4 239 5 344 3 284 2 297 1 124 5 93 1 96 1 18 1 187 2 144 1 37 1 248 1 121 2 122 1 
0 1 52 4 239 5 344 3 284 2 297 1 124 5 93 1 96 1 18 1 320 1 187 2 144 1 248 1 121 2 122 1 
373 1 0 1 344 1 239 1 52 1 284 1 187 1 297 1 124 1 144 1 121 1 
251 1 0 1 344 1 51 1 52 1 239 1 284 1 124 1 332 1 45 1 46 1 7 2 280 1 279 2 168 1 187 1 247 1 121 1 
251 1 190 1 52 1 51 2 124 1 213 1 332 1 7 2 279 2 280 1 308 1 341 1 239 1 344 3 284 1 45 2 96 1 46 1 168 1 187 2 247 2 266 1 121 1 
190 1 52 2 51 2 124 2 213 1 332 1 7 2 279 2 280 1 308 1 341 1 239 2 344 3 284 1 162 1 45 2 142 1 96 1 46 1 168 1 187 2 247 2 266 1 121 1 
0 1 51 1 52 3 239 3 344 4 31 1 11 1 284 1 124 3 213 1 137 1 115 1 142 1 95 1 96 1 21 2 105 1 187 1 364 2 60 1 341 1 121 1 28 1 
0 1 51 1 52 3 239 3 344 4 31 1 11 1 284 1 124 3 213 1 137 1 115 1 142 1 96 1 21 2 187 1 364 2 60 1 323 1 341 1 121 1 28 1 
239 1 52 1 284 1 124 1 262 1 121 1 
0 2 52 6 239 7 51 1 344 3 284 3 124 7 14 1 358 1 259 1 16 1 348 1 18 1 195 1 262 1 187 2 248 1 37 1 121 2 182 1 122 1 
211 1 251 1 229 1 51 1 52 1 329 1 124 1 332 1 4 1 102 1 218 2 79 4 304 6 103 3 7 2 177 2 279 2 280 1 307 1 256 2 313 1 110 2 201 2 87 1 344 1 239 1 240 2 371 2 161 3 284 1 204 1 114 2 45 1 139 1 119 1 46 1 287 1 245 1 168 2 290 1 187 1 71 1 247 1 352 1 324 1 121 1 122 1 
0 1 52 1 31 1 191 1 124 1 360 1 219 2 196 1 281 1 364 3 60 1 39 1 239 1 344 2 11 1 91 2 163 1 137 2 184 1 115 1 140 2 116 2 19 1 21 3 323 1 146 1 28 1 149 1 
52 2 239 2 51 1 344 2 284 2 124 2 16 1 104 1 262 1 187 1 121 1 28 1 122 1 
0 1 344 1 51 1 52 1 239 1 284 1 124 1 162 1 332 1 45 1 46 1 7 2 280 1 279 2 168 1 187 1 247 1 121 1 
52 1 239 1 51 1 344 1 284 2 124 1 14 1 259 1 16 1 96 1 195 1 187 1 121 1 
168 1 282 1 61 1 86 1 343 1 
190 1 30 1 31 1 11 1 165 1 221 1 67 1 21 2 168 1 308 1 282 2 364 2 60 1 146 1 236 1 61 2 266 1 86 1 343 2 
13 1 45 1 7 1 279 1 282 1 61 1 86 1 312 1 294 1 
190 1 11 1 165 1 221 1 67 1 308 1 282 1 236 1 61 1 266 1 86 1 343 1 
277 1 197 1 58 1 339 1 126 1 157 1 249 1 154 1 
212 1 283 1 317 1 258 2 126 2 154 1 277 2 338 1 23 1 58 4 59 1 339 3 157 4 249 1 
268 1 258 1 126 1 154 1 56 1 277 1 197 1 58 2 339 1 249 1 157 2 354 1 
314 1 212 2 317 2 126 1 154 1 277 1 338 1 197 1 58 3 339 1 249 1 157 3 
156 2 292 1 339 2 38 1 
197 1 264 1 58 1 157 1 249 1 154 1 
277 1 197 1 258 1 58 2 339 1 126 1 157 2 249 1 154 1 17 1 
370 1 
277 1 197 1 58 1 339 1 126 1 157 1 249 1 154 1 
277 1 373 1 339 1 126 1 
277 1 58 1 339 1 126 1 157 1 249 1 154 1 
35 1 58 1 333 1 
212 1 317 2 126 1 154 1 277 1 338 1 128 1 197 1 58 3 339 1 249 1 157 3 
277 1 151 1 258 1 58 2 339 1 126 1 157 2 249 1 154 1 
197 1 84 1 58 1 100 1 339 1 59 1 300 1 157 1 249 1 154 1 94 1 
197 1 58 1 339 1 126 1 157 1 249 1 154 1 
277 1 197 1 58 1 126 2 157 1 249 1 154 1 
225 1 126 1 154 2 209 1 9 1 197 1 58 2 339 1 249 2 157 2 
241 1 258 2 126 1 154 1 17 1 277 1 197 1 23 1 58 3 59 1 339 2 249 1 157 3 
258 1 126 1 300 2 154 1 94 1 81 1 277 1 246 1 197 1 58 2 339 1 100 1 249 1 157 2 200 1 
151 1 258 2 126 1 154 2 277 1 289 1 197 1 23 1 58 4 59 1 339 2 249 2 157 4 
258 1 317 1 126 1 154 1 17 1 277 1 197 1 58 3 339 1 249 1 157 3 
283 1 23 1 339 1 59 1 
339 1 126 1 

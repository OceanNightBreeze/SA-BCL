#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (109,224,320) (109,224,320) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 24 336 288 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 105 283 330 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (75,129) 119 58 352 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 24 63 181 203 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 24 308 181 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 24 63 181 203 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 24 63 181 203 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 24 63 181 203 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 105 299 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 211 303 308 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 24 336 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 348 196 303 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 348 196 303 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 24 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 24 308 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 105 299 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 105 283 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 105 178 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 105 283 330 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 4 234 1 300 1 235 2 167 2 301 1 142 2 190 1 122 1 305 1 152 1 334 7 8 1 60 1 38 5 9 1 10 1 311 3 246 1 200 1 315 1 161 9 252 1 322 9 
254 4 234 1 300 1 235 2 167 2 301 1 142 2 190 1 122 1 305 1 152 1 334 7 8 1 60 1 38 5 9 1 10 1 311 3 246 1 200 1 315 1 161 9 252 1 322 9 
254 1 334 1 8 1 38 2 10 1 167 2 311 1 142 2 315 1 122 1 161 3 322 3 252 1 
254 4 230 1 140 1 300 1 235 2 166 1 167 2 301 2 142 2 190 1 122 1 305 1 152 1 153 1 334 6 8 2 60 2 37 1 38 5 9 2 10 1 311 3 200 1 315 1 227 1 161 9 322 9 252 1 
254 4 230 1 140 1 300 1 235 2 166 1 167 2 301 2 142 2 190 1 122 1 305 1 152 1 153 1 334 6 8 2 60 2 37 1 38 5 9 2 10 1 311 3 200 1 315 1 227 1 161 9 322 9 252 1 
254 5 230 1 140 1 300 1 235 2 166 1 167 2 301 2 142 2 190 1 122 1 305 1 152 1 153 1 334 7 8 2 60 2 37 1 38 6 9 2 10 1 311 4 200 1 315 1 227 1 161 10 322 10 252 1 
254 3 230 1 140 1 300 1 235 1 166 1 167 2 301 2 142 2 190 1 122 1 305 1 152 1 153 1 334 4 8 2 60 2 37 1 38 4 9 2 10 1 311 2 315 1 227 1 161 7 322 7 252 1 
334 3 254 2 60 1 38 3 9 1 10 1 235 2 311 1 301 1 167 1 142 1 200 1 315 1 122 1 305 1 161 4 152 1 322 4 
117 1 230 1 8 1 36 1 38 1 9 1 10 1 167 1 301 1 142 1 315 1 122 1 241 1 227 1 161 2 322 2 
50 1 343 1 298 1 185 1 281 1 76 1 325 1 327 1 238 1 104 1 354 1 148 1 113 1 70 1 
232 1 
294 1 343 2 104 1 185 2 169 1 232 1 32 1 115 1 
294 2 343 5 177 1 182 1 185 5 164 2 85 1 126 1 232 1 77 1 145 2 104 2 4 2 169 1 240 1 279 1 123 1 321 1 115 1 
232 1 106 1 115 1 
232 1 361 2 31 1 
281 2 76 2 148 2 325 2 113 1 226 1 327 2 70 2 
323 1 51 1 97 1 274 1 76 3 188 1 325 2 189 1 326 1 141 1 143 1 327 3 101 1 350 1 26 1 210 1 329 2 148 2 7 1 30 2 244 1 358 2 125 1 155 1 281 2 218 1 87 1 61 1 11 1 285 1 317 1 113 1 226 1 202 1 18 2 70 2 49 2 
50 1 238 1 281 1 354 1 76 1 148 1 325 1 113 1 327 1 70 1 
50 1 20 1 71 1 295 1 343 1 201 1 27 1 185 1 76 1 232 1 222 1 327 1 70 1 115 1 
20 1 50 1 343 2 281 1 185 2 76 1 232 1 325 1 222 1 327 1 27 1 201 1 148 1 70 1 115 1 
294 1 343 1 104 1 185 1 54 1 
294 1 343 2 104 1 92 1 185 2 169 1 232 1 115 1 
294 1 343 1 185 1 
281 1 76 2 325 1 327 2 365 1 91 1 148 1 226 2 70 2 
307 1 75 1 119 1 
51 1 358 1 244 1 218 1 76 1 86 1 61 1 188 1 11 1 189 1 285 1 327 1 210 1 226 1 30 1 49 1 
51 1 244 1 358 1 218 1 75 1 61 1 76 2 188 1 325 1 11 1 189 1 285 1 327 2 210 1 79 1 148 1 150 1 30 1 70 1 49 1 
226 1 106 1 
71 1 1 1 281 1 76 5 98 1 325 4 327 5 365 1 79 1 148 4 150 2 250 1 226 1 70 5 
50 1 238 1 76 2 148 2 81 1 325 2 327 2 70 2 
281 1 76 3 148 3 150 1 325 3 226 1 327 3 70 3 
50 1 238 1 76 1 148 1 325 1 327 1 70 1 
50 1 365 1 91 1 281 1 76 1 148 1 325 1 327 1 70 1 
323 1 51 1 20 1 50 1 116 1 343 1 97 1 274 1 185 1 76 4 188 1 325 3 189 1 141 1 143 1 327 4 350 1 26 1 210 1 277 1 79 1 27 1 329 2 148 3 150 1 30 1 244 1 358 1 125 1 218 1 281 2 87 1 61 1 11 1 222 1 285 1 365 1 201 1 317 1 113 1 226 1 18 1 70 3 49 1 
71 1 76 2 148 1 150 1 250 1 325 1 226 1 327 2 70 2 
50 1 20 1 343 1 116 1 281 1 185 1 76 3 232 1 325 3 222 1 327 3 365 1 79 1 201 1 27 1 225 1 148 3 150 2 70 3 
365 1 307 1 281 1 75 1 76 2 148 2 150 1 325 2 327 2 70 2 
51 1 358 1 244 1 218 1 76 1 61 1 188 1 189 1 11 1 285 1 327 1 210 1 226 1 30 1 49 1 
358 1 244 1 218 1 76 1 61 1 189 1 11 1 285 1 327 1 210 1 351 1 226 1 30 1 293 1 49 1 
323 1 274 2 75 2 348 1 119 2 141 1 236 1 350 1 26 1 355 1 329 2 7 2 242 1 215 1 307 2 125 1 87 1 39 1 180 1 129 1 14 1 93 1 367 1 18 4 
50 1 76 1 148 1 325 1 81 1 222 1 327 1 70 1 
55 2 265 1 109 2 320 1 
55 1 224 1 109 1 
55 1 109 1 
55 1 109 1 
265 1 320 1 
265 1 320 1 
265 1 320 1 
55 1 109 1 206 1 
55 1 109 1 206 1 
55 1 109 1 206 1 
55 1 109 1 53 1 
55 1 109 1 53 1 
55 1 109 1 53 1 
296 1 343 1 72 1 184 1 185 1 76 2 99 1 325 2 327 2 55 1 148 2 5 1 151 1 82 1 264 1 217 1 42 1 88 1 109 1 224 1 271 1 368 1 226 1 70 2 
296 1 343 2 253 1 35 2 184 2 185 2 232 1 208 1 257 1 42 3 12 1 55 2 66 1 109 2 5 2 318 1 368 2 151 2 136 1 
117 1 89 1 60 1 187 2 301 2 
60 1 9 1 301 1 
117 1 9 1 301 1 
117 1 89 1 60 2 187 1 292 1 301 3 
124 1 117 1 89 1 60 1 187 1 301 2 
294 1 0 1 343 5 162 1 164 1 185 5 348 1 255 2 99 1 232 2 145 1 104 4 4 1 169 1 31 1 82 1 123 2 196 1 83 1 215 1 359 2 126 3 361 3 40 1 88 1 180 1 90 1 45 1 93 1 94 2 321 1 115 1 
294 6 343 9 183 1 162 1 185 9 164 2 348 3 232 5 77 1 54 5 145 2 104 7 4 2 353 1 169 1 212 1 31 3 123 6 196 3 83 2 215 3 359 6 126 8 361 9 338 5 40 2 88 4 266 1 180 3 93 3 249 1 94 6 114 1 321 1 115 1 
0 1 343 3 164 1 185 3 255 1 348 1 232 3 77 1 145 1 104 2 4 1 31 2 83 1 196 1 123 2 215 1 359 2 126 3 361 4 40 1 88 1 180 1 45 1 93 1 94 2 115 1 
0 1 343 4 164 1 185 4 255 2 348 2 232 4 77 1 145 1 104 3 4 1 212 1 31 3 83 1 196 2 123 4 215 2 359 4 126 5 361 7 40 1 88 2 180 2 45 1 93 2 249 1 94 4 114 1 115 1 
346 1 
11 1 106 1 62 1 
163 1 11 1 
244 1 11 1 189 1 
47 1 11 1 
11 1 189 1 
244 1 11 3 189 1 251 1 62 2 43 1 
96 1 345 1 243 1 274 3 118 1 236 3 258 1 180 1 268 1 64 1 65 1 130 1 93 1 355 2 7 4 213 1 18 7 19 2 
96 2 280 1 64 1 274 1 336 1 288 1 24 1 278 1 7 2 18 3 19 1 
96 1 345 1 274 4 233 1 236 4 258 1 350 2 26 2 355 3 329 4 7 5 213 1 262 1 357 1 125 2 87 2 180 1 268 1 64 1 130 1 65 1 93 1 18 9 19 2 
96 1 345 1 274 3 118 1 236 3 258 1 180 1 268 1 64 1 65 1 130 1 93 1 355 2 7 4 18 7 213 1 19 2 
96 1 345 1 274 3 118 1 236 3 258 1 180 1 268 1 64 1 65 1 130 1 93 1 355 2 7 4 18 7 213 1 19 2 
273 1 74 1 358 1 8 2 218 1 61 1 11 1 189 1 167 1 285 1 142 1 100 1 144 1 67 2 290 1 289 2 304 1 192 1 319 2 30 1 161 1 322 1 49 1 
117 1 197 1 358 1 8 1 60 1 218 1 61 1 220 1 9 1 301 2 167 1 142 1 168 1 103 1 67 1 315 1 289 1 248 1 6 1 170 1 292 1 30 1 319 1 161 1 322 1 49 1 
117 1 167 1 301 2 142 1 168 1 170 1 6 1 122 1 30 1 197 1 334 1 358 1 8 1 60 1 218 1 38 1 220 1 61 1 9 1 10 1 364 1 67 1 315 1 289 1 248 1 319 1 292 1 161 2 49 1 322 2 
117 1 167 1 301 2 142 1 144 1 168 1 103 1 170 1 6 1 122 1 30 1 197 1 358 1 334 2 8 1 59 1 60 1 218 1 38 1 61 1 9 1 10 1 67 1 289 1 248 1 292 1 319 1 161 3 49 1 322 3 
117 1 301 2 168 1 103 1 6 1 122 1 30 1 358 1 334 2 8 1 59 1 60 1 218 1 38 1 61 1 9 1 10 1 67 1 289 1 248 1 319 1 292 1 161 2 49 1 322 2 
228 1 
50 2 52 1 185 4 232 1 325 1 327 2 238 1 145 1 4 1 191 1 239 1 147 2 328 2 148 1 331 3 332 1 281 1 199 1 339 1 201 1 113 1 341 3 70 2 115 1 294 5 20 1 295 1 71 1 343 4 298 1 164 1 76 2 78 1 302 1 27 1 354 1 169 2 356 1 31 2 123 1 172 1 34 3 174 2 309 2 126 1 222 1 46 1 48 5 321 1 
71 1 295 1 20 1 50 1 294 5 52 1 343 4 164 1 185 4 76 1 232 1 78 1 327 1 145 1 302 1 4 1 239 1 27 1 191 1 147 2 169 2 328 2 356 1 31 2 331 3 172 1 123 1 332 1 34 3 174 2 309 2 126 1 199 1 222 1 339 1 201 1 46 1 321 1 70 1 48 5 341 3 115 1 
50 2 52 1 185 4 139 2 232 1 325 1 327 2 238 1 145 1 4 1 191 1 328 2 148 1 331 2 195 2 281 1 199 1 339 1 201 1 157 1 113 1 70 2 341 2 115 1 20 1 71 1 295 1 294 4 343 4 298 1 164 1 76 2 302 1 27 1 354 1 169 2 123 1 172 1 34 2 309 2 361 2 222 1 272 1 48 4 321 1 
50 1 52 1 273 1 185 5 232 2 189 1 327 1 100 1 145 1 4 1 191 1 239 1 147 2 328 2 331 2 61 1 11 1 199 1 285 2 339 1 201 1 160 1 341 2 70 1 115 1 294 6 295 1 71 1 20 1 343 5 164 1 76 1 260 1 302 1 27 1 169 3 31 2 30 2 123 2 83 1 172 1 34 2 174 2 175 1 358 2 309 2 218 1 126 2 361 2 222 1 366 1 272 1 321 1 48 4 49 2 
294 1 50 1 20 1 295 1 71 1 343 2 52 1 185 2 76 1 199 1 222 1 327 1 302 1 339 1 201 1 191 1 27 1 341 1 48 2 70 1 
294 1 71 1 295 1 20 1 50 1 52 1 343 3 185 3 76 1 232 1 327 1 302 1 27 1 191 1 169 1 331 1 32 1 199 1 222 1 339 1 201 1 70 1 48 3 115 1 
71 1 295 1 20 1 50 1 294 2 52 1 343 3 185 3 76 1 327 1 302 1 27 1 191 1 169 1 331 1 32 1 34 1 199 1 222 1 339 1 201 1 70 1 48 3 341 1 
71 1 295 1 294 2 20 1 50 2 52 1 343 3 298 1 185 3 76 2 232 1 165 1 325 1 327 2 238 1 302 1 191 1 27 1 354 1 169 1 148 1 331 1 32 1 34 1 281 1 199 1 222 1 339 1 201 1 113 1 70 2 48 3 341 1 115 1 
50 1 52 1 185 4 232 1 327 1 145 1 4 1 239 1 191 1 147 2 328 2 331 2 199 1 339 1 201 1 70 1 341 2 115 1 20 1 71 1 295 1 294 4 343 4 164 1 76 1 302 1 27 1 169 2 31 2 123 1 172 1 34 2 174 2 309 2 126 1 361 2 222 1 272 1 48 4 321 1 
294 4 71 1 295 1 20 1 50 1 52 1 343 4 185 4 164 1 76 1 232 1 78 1 327 1 302 1 145 1 4 1 239 1 27 1 191 1 147 2 169 2 328 2 356 1 331 2 31 2 172 1 123 1 332 1 34 2 174 2 309 2 126 1 199 1 222 1 339 1 201 1 341 2 70 1 48 4 321 1 115 1 
50 2 52 1 185 4 232 1 325 1 327 2 238 1 145 1 4 1 191 1 239 1 147 2 328 2 148 1 331 2 332 1 281 1 199 1 339 1 201 1 113 1 70 2 341 2 115 1 20 1 295 1 71 1 294 4 343 4 298 1 164 1 76 2 78 1 302 1 27 1 354 1 169 2 356 1 31 2 123 1 172 1 34 2 174 2 309 2 126 1 222 1 321 1 48 4 
50 2 52 1 185 4 139 2 232 1 325 1 327 2 238 1 145 1 4 1 191 1 328 2 148 1 331 2 195 2 281 1 199 1 339 1 201 1 157 1 291 1 113 1 70 2 341 2 115 1 20 1 295 1 71 1 294 4 343 4 298 1 164 1 76 2 78 1 302 1 27 1 354 1 169 2 123 1 172 1 34 2 309 2 361 2 222 1 131 1 321 1 48 4 
323 2 273 1 274 1 76 1 325 1 189 3 141 2 327 1 143 1 100 1 350 2 26 2 120 1 330 1 329 4 105 1 148 1 150 1 57 1 30 4 7 1 244 1 358 4 335 1 125 2 218 3 155 1 283 1 61 2 87 2 11 3 285 2 286 1 14 1 364 1 110 1 132 1 202 1 18 2 70 1 49 4 
323 1 274 2 75 1 76 1 348 1 119 1 325 1 236 1 141 1 327 1 350 1 26 1 355 1 329 2 148 1 7 1 196 1 215 1 307 1 125 1 281 1 87 1 156 1 180 1 365 1 269 1 93 1 18 3 70 1 
323 1 345 1 274 3 75 1 119 1 258 1 141 1 236 2 350 1 26 1 355 2 329 2 7 3 213 1 106 1 307 1 125 1 87 1 14 1 180 1 130 1 65 1 93 1 226 2 18 6 19 1 
323 1 280 1 125 1 274 1 75 3 87 1 119 3 141 1 350 1 26 1 352 1 269 1 329 2 278 1 7 1 18 2 58 1 
51 1 323 1 274 1 76 2 188 1 325 1 25 1 189 1 141 1 327 2 143 1 350 1 210 1 26 1 79 1 329 2 148 1 150 1 30 1 7 1 244 1 358 1 307 1 125 1 218 1 155 1 61 1 86 1 87 1 310 1 11 1 285 1 269 1 68 1 226 1 18 2 70 1 49 1 
323 3 51 2 274 10 188 2 325 1 189 2 141 3 236 8 143 1 327 3 103 1 329 6 148 1 150 1 7 10 193 2 196 2 244 2 155 1 61 2 284 1 11 2 285 1 287 2 65 1 18 20 19 1 70 1 345 1 76 3 75 7 348 2 119 7 258 1 350 3 26 3 210 2 79 1 28 1 355 4 30 3 213 1 215 2 306 1 358 3 307 7 125 3 218 2 87 3 362 2 180 3 268 4 130 1 269 1 93 3 317 2 226 2 95 2 49 3 
323 1 307 1 125 1 75 1 87 1 348 1 119 1 39 1 236 1 141 1 268 1 14 1 350 1 26 1 93 1 329 2 7 2 18 2 
323 1 215 1 307 1 125 1 274 2 75 1 87 1 119 1 236 1 141 1 14 1 180 1 350 1 26 1 355 1 329 2 18 2 242 1 
323 1 274 2 348 1 75 2 119 2 141 1 236 2 350 1 26 1 355 1 329 2 7 2 196 1 215 1 307 2 125 1 87 1 14 1 268 1 180 1 93 1 18 4 
323 1 307 1 335 1 125 1 75 1 87 1 348 1 119 1 39 1 236 1 141 1 268 1 350 1 26 1 93 1 329 2 7 2 18 2 
323 1 215 1 307 1 335 1 125 1 274 2 75 1 87 1 119 1 236 1 141 1 180 1 350 1 26 1 355 1 329 2 18 2 242 1 
323 1 274 2 348 1 75 2 119 2 141 1 236 2 350 1 26 1 355 1 329 2 7 2 196 1 215 1 335 1 307 2 125 1 87 1 268 1 180 1 93 1 18 4 
323 1 274 2 348 1 75 2 119 2 141 1 236 2 350 1 26 1 355 1 329 2 7 2 196 1 215 1 307 2 125 1 87 1 268 1 180 1 93 1 18 4 
51 1 323 1 274 1 76 1 188 1 189 1 141 1 327 1 143 1 350 1 210 1 26 1 329 2 7 1 30 1 244 1 358 1 125 1 155 1 218 1 61 1 87 1 11 1 285 1 317 1 226 1 18 2 49 1 
323 1 274 1 76 1 189 1 141 1 327 1 143 1 350 1 210 1 26 1 351 1 329 2 7 1 30 1 244 1 358 1 125 1 155 1 218 1 61 1 87 1 11 1 285 1 313 1 226 1 293 1 18 2 49 1 
323 1 274 2 348 1 75 2 119 2 141 1 236 2 350 1 26 1 355 1 329 2 7 2 196 1 215 1 307 2 125 1 87 1 268 1 180 1 269 1 93 1 18 4 
51 1 323 1 274 2 75 2 348 1 76 1 188 1 119 2 189 1 236 2 141 1 327 1 350 1 210 1 26 1 355 1 329 2 7 2 30 1 193 1 196 1 215 1 307 2 244 1 358 1 125 1 218 1 61 1 87 1 11 1 180 1 268 1 364 1 93 1 317 1 18 4 49 1 
323 1 274 1 76 1 348 1 75 1 325 1 119 1 236 1 141 1 327 1 350 1 26 1 329 2 148 1 7 2 196 1 333 1 215 1 307 1 125 1 281 1 87 1 180 1 268 1 365 1 269 1 93 1 18 3 70 1 
203 1 280 1 125 1 274 2 87 1 24 1 233 1 179 1 267 1 350 1 63 1 26 1 181 1 329 2 278 1 7 2 18 4 
203 1 280 2 308 1 125 1 274 4 24 2 87 1 233 1 179 2 267 1 350 1 63 2 26 1 181 2 329 2 278 2 7 4 18 8 
203 1 280 1 125 1 274 2 87 1 24 1 233 1 179 1 267 1 350 1 63 1 26 1 181 1 329 2 278 1 7 2 18 4 
203 1 280 1 125 1 274 2 87 1 24 1 233 1 179 1 267 1 350 1 63 1 26 1 181 1 329 2 278 1 7 2 18 4 
203 1 280 1 125 1 274 2 87 1 24 1 233 1 179 1 267 1 350 1 63 1 26 1 181 1 329 2 278 1 7 2 18 4 
55 1 253 1 109 1 184 1 256 1 5 1 208 1 368 1 151 1 136 1 
264 1 224 1 
55 1 223 1 109 1 184 1 127 1 5 1 368 1 151 1 173 1 
206 1 134 1 
16 1 316 1 53 1 
296 1 343 1 253 1 35 1 185 1 184 1 232 1 208 1 257 1 42 2 12 1 55 1 66 1 109 1 5 1 368 1 151 1 136 1 
296 1 343 1 253 1 35 1 185 1 184 1 232 1 208 1 257 1 42 2 12 1 55 1 66 1 109 1 5 1 368 1 151 1 136 1 
296 1 343 1 253 1 35 1 185 1 184 1 232 1 208 1 257 1 42 2 12 1 55 1 66 1 109 1 5 1 368 1 151 1 136 1 
16 1 206 1 134 1 
16 1 206 1 134 1 
316 1 53 1 
16 1 316 1 53 1 
72 1 217 1 
343 1 72 1 185 1 184 1 76 2 99 1 325 2 327 2 55 1 104 1 5 1 148 2 151 1 82 1 264 1 217 1 35 1 84 1 12 1 42 1 88 1 109 1 224 1 271 1 368 1 226 1 70 2 
323 1 21 1 274 1 76 2 299 1 189 2 141 1 327 2 143 1 350 1 26 1 120 1 329 2 105 1 57 1 171 1 7 1 30 2 263 1 244 1 358 2 125 1 218 2 155 1 61 1 87 1 11 2 286 1 312 1 110 1 269 1 132 1 202 2 18 2 70 2 49 2 
297 1 273 1 358 1 74 1 218 1 61 1 11 1 189 1 285 1 100 1 30 1 319 1 135 1 49 1 
117 1 358 1 60 1 218 1 61 1 9 1 301 2 209 1 168 1 103 1 146 1 248 1 170 1 292 1 30 1 319 1 135 1 49 1 
117 1 358 2 60 1 218 1 61 1 9 1 301 2 209 1 364 1 168 1 103 1 146 1 248 1 170 1 292 1 30 2 319 1 135 1 49 2 
117 1 358 1 60 1 218 1 61 1 9 1 301 2 168 1 103 1 247 1 146 1 248 1 170 1 292 1 30 1 319 1 49 1 
342 1 
51 1 323 1 97 1 274 1 76 3 188 1 325 2 189 1 141 1 143 1 327 3 350 1 26 1 210 1 329 2 148 2 30 1 358 1 244 1 125 1 281 2 218 1 87 1 61 1 11 1 285 1 317 1 113 1 226 1 18 1 70 2 49 1 
359 2 164 1 126 1 232 4 361 4 145 1 366 1 4 1 31 2 94 2 19 1 123 2 321 1 83 1 115 2 
182 1 177 1 164 1 126 1 232 1 145 1 4 1 321 1 123 1 115 1 
215 2 154 2 359 5 348 2 126 5 232 5 361 10 180 2 108 1 93 2 94 5 31 5 95 1 196 2 123 5 
294 1 343 1 185 1 169 1 232 1 115 1 
294 4 343 3 273 1 164 2 185 3 77 1 189 1 100 1 260 1 145 2 4 2 169 2 30 4 83 2 123 2 175 1 358 4 198 1 218 1 61 1 126 2 128 1 221 2 11 1 285 2 366 2 321 1 137 1 49 4 
177 1 182 1 126 1 232 1 106 1 123 1 115 1 
294 1 343 1 164 1 185 1 232 2 145 1 4 1 239 1 147 1 169 1 31 1 123 1 174 1 126 1 361 1 321 1 115 1 
182 1 185 5 232 8 189 1 145 4 102 1 56 1 4 4 196 2 244 1 154 2 61 1 11 6 285 1 62 2 108 2 15 2 201 2 112 2 251 1 115 2 294 5 343 5 22 2 163 3 164 4 348 2 80 1 169 3 30 3 31 6 33 2 83 2 123 8 215 2 177 1 358 3 359 6 218 2 126 9 128 1 361 12 221 1 363 2 180 2 364 1 366 1 93 2 94 6 321 4 95 2 49 3 
294 1 343 1 229 1 204 1 2 1 185 1 164 2 24 1 348 1 232 4 145 2 4 2 303 1 169 1 211 1 278 1 31 3 123 3 196 1 280 1 215 1 154 1 308 1 359 4 126 5 361 6 180 1 93 1 94 4 321 2 115 1 
50 1 343 1 345 1 298 1 164 1 185 1 76 1 325 1 327 1 237 1 238 1 145 1 4 1 354 1 148 1 332 1 123 2 154 2 281 1 126 2 180 1 108 1 65 1 130 1 93 2 113 1 321 1 70 1 
72 1 324 1 5 1 151 1 136 1 
5 1 245 1 151 1 
5 1 245 1 151 1 
5 1 245 1 151 1 
314 1 5 1 151 1 
314 1 5 1 151 1 
314 1 5 1 151 1 
5 1 151 1 
55 1 109 1 
345 1 125 1 274 5 87 1 233 1 236 5 237 1 268 2 180 2 350 1 26 1 130 2 65 2 355 3 93 2 329 2 7 5 18 10 
125 1 87 1 348 1 233 1 236 1 268 1 350 1 26 1 93 1 329 2 7 2 18 2 
215 1 125 1 274 2 87 1 348 1 233 1 236 2 180 1 268 1 350 1 26 1 355 1 93 1 329 2 7 2 18 4 196 1 
205 1 125 3 274 2 87 3 233 1 236 2 268 1 350 3 26 3 130 1 65 1 355 1 329 6 340 1 7 1 18 3 262 1 
280 1 205 1 125 3 274 1 336 1 87 3 24 1 233 1 350 3 26 3 329 6 278 1 7 1 18 2 69 1 
280 1 350 1 26 1 308 1 125 1 274 1 24 1 329 2 87 1 233 1 278 1 7 1 18 2 
280 1 125 2 308 1 274 1 87 2 24 1 233 1 350 2 26 2 329 4 278 1 7 1 69 1 18 2 
215 1 280 1 204 1 125 2 308 1 2 1 274 5 348 2 87 2 24 1 233 1 236 1 180 1 350 2 26 2 303 1 355 1 93 2 329 4 211 1 278 1 7 6 18 11 262 1 196 2 
280 1 350 1 26 1 308 1 125 1 274 1 24 1 329 2 87 1 233 1 278 1 7 1 18 2 
280 1 350 1 26 1 308 1 125 1 274 1 24 1 329 2 87 1 233 1 278 1 7 1 18 2 
215 1 280 1 204 1 125 1 308 1 2 1 274 4 348 2 87 1 24 1 233 1 236 1 180 1 350 1 26 1 303 1 355 1 93 2 329 2 211 1 278 1 7 6 18 10 196 2 
280 1 125 2 308 1 274 1 87 2 24 1 233 1 350 2 26 2 329 4 278 1 7 1 69 1 18 2 
280 1 205 1 125 2 308 1 274 1 87 2 24 1 233 1 350 2 26 2 329 4 278 1 7 1 18 2 
345 1 274 4 258 1 236 6 180 1 268 3 130 3 65 3 355 3 93 1 7 3 18 7 213 2 
280 1 205 1 125 2 308 1 274 1 87 2 24 1 233 1 350 2 26 2 329 4 278 1 7 1 18 2 
345 1 125 2 274 4 87 2 236 3 258 1 180 1 268 1 350 2 26 2 130 1 65 1 93 1 355 2 329 4 7 4 18 8 213 1 19 1 262 1 
345 1 274 3 258 1 236 2 180 1 130 1 65 1 355 2 93 1 7 3 213 1 18 6 19 1 106 1 
215 1 125 1 274 2 87 1 348 1 236 2 180 1 268 1 350 1 26 1 355 1 93 1 329 2 7 2 69 1 18 4 196 1 
280 1 274 1 24 1 278 1 7 1 18 2 
280 1 274 1 278 1 7 1 18 2 58 1 
274 1 278 1 18 1 
280 1 7 1 18 1 
215 1 125 1 274 3 87 1 348 1 236 3 268 1 180 1 350 1 26 1 93 1 355 2 329 2 7 3 69 1 18 6 95 1 196 1 
280 1 350 1 26 1 308 1 125 1 274 1 24 1 329 2 87 1 233 1 278 1 7 1 18 2 
345 1 274 3 236 2 180 1 268 1 130 1 65 1 93 1 355 1 7 3 18 6 
125 1 274 2 87 1 236 2 258 1 268 1 350 1 26 1 65 1 130 1 355 1 329 2 7 1 340 1 213 1 18 3 262 1 
71 1 76 1 337 1 250 1 226 1 327 1 70 1 
71 1 76 1 349 1 337 1 327 1 44 1 270 1 133 1 250 1 226 1 214 1 70 1 
364 1 273 1 358 4 17 1 218 1 61 1 149 1 11 1 189 1 30 4 285 1 100 1 49 4 
358 2 244 1 218 2 61 1 221 1 189 1 11 1 28 1 110 1 120 1 132 1 57 1 30 2 49 2 
117 1 358 1 218 1 61 1 9 1 248 1 30 1 301 1 285 1 49 1 
358 2 244 1 218 2 61 1 299 1 189 2 11 2 364 1 103 1 110 1 120 1 105 1 132 1 57 1 30 2 49 2 
358 2 244 1 218 2 61 1 283 1 189 2 11 2 285 1 364 1 110 1 120 1 105 1 132 1 57 1 30 2 49 2 
358 2 244 1 178 1 218 2 61 1 189 2 11 2 285 1 364 1 110 1 120 1 105 1 132 1 57 1 30 2 49 2 
273 1 358 1 218 1 61 1 11 1 189 1 30 1 106 1 285 1 100 1 49 1 
244 1 358 1 218 1 76 2 61 1 188 1 325 1 11 1 189 1 285 1 327 2 210 1 148 1 150 1 226 1 30 1 70 1 49 1 
20 1 50 1 76 2 188 1 325 1 189 2 327 2 210 1 148 2 150 1 30 1 358 1 244 2 218 1 61 1 221 1 11 3 222 1 107 1 47 1 226 1 70 2 49 1 
20 1 50 1 76 2 325 1 189 2 327 2 210 1 148 2 150 1 30 2 358 2 244 2 218 1 61 1 221 1 11 3 222 1 107 1 17 1 47 1 226 1 293 1 70 2 49 2 
50 1 343 1 298 1 358 1 163 1 281 1 185 1 76 1 232 1 325 1 221 1 11 1 327 1 238 1 354 1 148 1 158 1 113 1 30 1 70 1 49 1 115 1 
50 1 343 1 298 1 358 1 163 1 281 1 185 1 76 1 232 1 325 1 221 1 11 1 327 1 363 1 238 1 354 1 148 1 113 1 30 1 70 1 49 1 115 1 
358 1 218 1 61 1 30 1 49 1 259 1 
358 3 244 2 218 4 283 1 61 2 189 3 11 3 285 2 364 1 110 2 120 1 111 1 330 1 105 1 57 1 132 2 30 3 251 1 49 3 
51 1 323 2 274 3 188 1 325 1 189 1 141 2 236 2 327 2 329 4 148 1 150 1 7 3 193 1 244 1 61 1 11 1 65 1 18 6 19 1 70 1 345 1 76 2 75 1 119 1 258 1 350 2 26 2 210 1 355 2 171 1 30 1 213 1 307 1 358 1 125 2 218 1 87 2 362 1 180 1 364 1 130 1 269 1 93 1 317 1 226 2 49 1 
294 2 343 3 182 1 22 1 163 1 164 2 185 3 232 1 145 2 104 1 4 2 169 1 30 1 33 1 123 1 177 1 358 1 126 1 128 1 11 2 285 1 363 1 62 1 201 1 112 1 321 2 115 1 49 1 
358 2 244 1 218 2 61 1 189 1 11 2 62 1 259 1 364 1 56 1 30 2 251 1 49 2 
244 1 358 1 218 1 76 2 61 1 325 1 11 1 189 1 285 1 327 2 210 1 148 1 150 1 226 1 30 1 293 1 70 1 49 1 
358 1 244 1 218 2 61 1 221 1 189 1 11 1 110 1 111 1 132 1 30 1 251 1 49 1 
21 1 73 1 76 1 186 1 261 1 327 1 70 1 263 1 312 1 
176 1 138 1 186 1 
3 1 73 1 186 1 261 1 226 1 
50 1 20 1 343 2 176 1 116 1 73 2 185 2 138 1 186 1 347 1 232 1 222 1 3 2 104 1 201 1 27 1 261 2 226 1 115 1 
334 1 230 1 315 1 38 1 122 1 10 1 167 1 190 1 161 3 142 1 322 3 
254 1 282 1 38 1 311 1 
38 1 122 1 
315 1 38 1 122 1 10 1 167 1 161 1 142 1 322 1 
344 1 334 2 254 1 230 1 282 1 38 3 275 1 10 2 167 1 311 1 142 1 122 2 161 4 322 4 
334 1 38 1 234 1 10 1 167 1 142 1 276 1 315 1 122 1 159 1 161 2 322 2 
344 1 230 2 38 1 231 1 275 2 10 1 167 1 142 1 315 1 122 1 161 3 322 3 
23 2 360 1 38 2 194 1 
121 1 315 1 167 1 161 1 142 1 322 1 
334 1 315 1 38 1 122 1 10 1 167 1 190 1 161 2 142 1 322 2 
13 1 
315 1 38 1 122 1 10 1 167 1 161 1 142 1 322 1 
38 1 122 1 10 1 106 1 
38 1 122 1 10 1 167 1 161 1 142 1 322 1 
8 1 67 1 161 1 
216 1 344 1 230 2 38 1 275 1 10 1 167 1 142 1 315 1 122 1 161 3 322 3 
334 1 38 1 122 1 10 1 235 1 167 1 161 2 142 1 322 2 
254 1 60 1 38 1 9 1 167 1 301 1 142 1 315 1 305 1 161 1 322 1 
315 1 38 1 122 1 167 1 161 1 142 1 322 1 
315 1 122 2 10 1 167 1 161 1 142 1 322 1 
219 1 38 1 207 1 167 2 41 1 142 2 315 1 122 1 161 2 322 2 
334 2 254 1 38 2 10 1 300 1 167 1 311 1 142 1 190 1 315 1 122 1 161 3 322 3 
117 1 334 1 60 1 38 1 9 1 10 1 301 2 167 1 142 1 29 1 315 1 122 1 292 1 161 2 322 2 
334 2 254 1 38 2 10 1 235 1 167 2 311 1 142 2 200 1 315 1 122 1 161 4 322 4 

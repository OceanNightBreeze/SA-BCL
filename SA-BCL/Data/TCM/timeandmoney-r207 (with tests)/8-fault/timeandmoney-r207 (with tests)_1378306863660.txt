#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 195 (222,322) (222,322) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 195 (222,322) (222,322) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 195 (222,322) (222,322) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 195 (222,322) (222,322) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 164 173 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 187 (88,100) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 187 (88,100) (88,100) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 164 173 102 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 164 156 223 332 (28,134) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 111 309 148 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 111 309 148 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 111 309 148 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 111 309 148 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 111 309 148 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 184 263 129 193 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 77 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 164 49 98 93 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 164 173 247 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 164 173 256 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 111 51 339 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 111 250 240 355 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 164 156 223 332 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 111 250 240 355 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 164 156 223 332 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 164 173 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 164 173 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 164 143 310 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 164 143 310 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 164 143 310 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 164 143 310 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 164 143 310 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 111 51 339 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 187 (88,100) (88,100) 225 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 164 173 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 35 342 337 (67,253) (67,253) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 35 342 337 (67,253) (67,253) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 77 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 164 49 146 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 164 49 98 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 164 49 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 111 94 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 164 347 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 164 49 146 179 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 111 250 277 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 164 274 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 35 342 337 225 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 111 250 240 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 111 250 240 7 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 35 342 337 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 164 49 146 150 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 35 342 337 (67,253) (67,253) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 1 44 1 128 1 222 1 195 1 275 1 41 1 65 1 267 2 182 1 320 2 271 1 33 1 273 1 322 1 14 1 
44 1 313 1 128 1 222 1 195 1 275 1 41 1 65 1 267 2 182 1 320 2 271 1 33 1 273 1 322 1 14 1 
44 1 313 1 128 1 222 1 195 1 275 1 41 1 65 1 267 2 182 1 320 2 271 1 33 1 273 1 322 1 14 1 
44 1 313 1 128 1 222 1 195 1 275 1 41 1 65 1 267 2 182 1 320 2 271 1 33 1 273 1 322 1 14 1 
44 1 313 1 200 1 75 1 0 1 107 2 275 1 195 1 41 1 65 1 52 1 267 4 266 2 182 1 235 3 197 3 320 4 262 1 
44 1 200 1 128 1 275 1 233 1 41 1 65 1 52 1 267 2 182 1 89 1 197 1 320 2 271 1 286 1 14 1 
44 1 200 1 75 1 107 1 65 2 52 1 267 3 182 2 235 1 197 2 320 3 190 1 14 1 
44 1 313 1 200 1 0 1 107 4 275 1 64 1 65 2 234 1 182 2 235 7 320 9 190 1 262 1 14 1 75 3 195 1 41 1 52 1 267 9 266 2 197 5 198 1 311 1 
44 1 313 1 200 1 0 1 107 4 275 1 64 1 65 2 234 1 182 2 235 7 320 9 190 1 262 1 14 1 75 3 195 1 41 1 52 1 267 9 266 2 197 5 198 1 311 1 
77 1 283 1 333 1 
184 2 244 1 283 1 
330 2 104 2 299 2 260 1 72 2 216 2 331 2 103 1 
173 1 312 1 104 2 158 1 299 3 202 1 6 1 30 1 341 2 210 1 317 1 8 2 10 1 72 3 216 2 164 1 188 1 116 1 141 1 243 1 346 2 327 1 145 1 330 2 20 1 293 1 331 2 251 1 103 1 
88 1 330 1 104 1 299 1 187 1 72 1 216 1 331 1 103 1 
252 1 201 1 299 1 220 1 159 1 87 1 248 1 31 1 283 1 72 1 305 1 216 1 333 1 155 1 
201 1 104 1 299 1 220 2 159 2 87 1 248 1 330 1 31 1 283 1 72 1 305 1 331 1 216 1 333 1 
106 1 220 1 48 1 159 1 137 1 
54 1 106 1 220 2 48 1 159 2 283 1 43 1 333 1 
106 1 220 1 159 1 
104 1 220 1 299 1 48 1 159 1 88 1 330 1 100 1 187 1 72 1 331 1 216 1 103 1 
283 1 
54 1 81 1 106 1 220 2 48 1 159 2 283 1 333 1 
323 1 106 2 220 5 48 2 159 5 177 1 336 1 50 1 109 1 54 1 279 1 19 1 160 2 32 1 318 1 283 1 151 2 333 1 124 2 
77 1 260 1 
104 1 299 2 192 1 330 1 260 2 308 1 72 2 216 2 331 1 
134 1 55 1 97 1 
312 1 243 1 299 1 346 1 327 1 30 1 6 1 258 1 145 1 341 1 210 1 317 1 8 1 260 1 72 1 251 1 
330 3 104 3 299 3 260 1 108 1 72 3 331 1 216 3 
330 1 104 1 299 1 187 1 72 1 216 1 
330 1 104 1 299 1 192 1 308 1 72 1 305 1 216 1 331 1 
173 1 312 1 201 1 104 3 105 1 158 1 299 4 159 1 108 1 87 1 6 1 30 1 317 1 210 1 341 1 8 1 31 1 72 4 305 1 216 3 164 1 188 1 116 1 141 1 243 1 220 1 346 1 327 1 248 1 145 1 227 1 330 3 308 1 293 1 331 2 251 1 102 1 103 1 
330 1 104 1 299 2 260 1 204 1 72 2 108 1 216 2 155 1 
140 1 201 1 105 1 104 3 220 1 299 3 159 1 108 2 87 1 248 1 330 3 227 1 308 1 31 1 283 1 72 3 305 1 331 1 216 3 
104 2 299 2 108 1 97 1 330 2 134 1 308 1 72 2 331 1 216 2 
312 1 243 1 299 1 346 1 327 1 30 1 6 1 145 1 341 1 210 1 317 1 8 1 260 1 72 1 251 1 
312 1 243 1 299 1 346 1 327 1 121 1 30 1 6 1 145 1 341 1 317 1 8 1 260 1 196 1 72 1 
156 1 141 1 158 1 28 1 223 1 57 1 164 1 332 1 188 1 
330 1 104 1 299 1 72 1 305 1 237 1 216 1 87 1 
312 1 105 1 104 1 243 1 299 2 346 1 108 1 327 1 6 1 30 1 145 1 317 1 330 1 341 1 210 1 134 1 8 1 72 2 216 1 251 1 
132 1 340 1 105 1 330 4 104 4 299 5 260 1 308 1 204 1 72 5 108 2 331 1 216 5 155 1 
330 1 104 1 299 1 187 1 72 1 216 1 
324 1 3 1 
324 1 3 1 
37 1 34 1 
37 1 34 1 
37 1 34 1 
142 1 324 1 3 1 
142 1 324 1 3 1 
324 1 56 1 3 1 
324 2 37 1 292 1 3 2 34 1 217 1 
142 1 324 1 3 1 
324 1 3 1 165 1 
324 1 3 1 165 1 
324 1 3 1 165 1 
219 1 324 2 254 1 220 2 159 2 3 2 224 2 205 2 86 2 180 1 278 1 213 1 69 2 282 1 304 3 283 1 154 1 217 1 114 2 
104 2 299 2 159 1 3 1 86 1 69 1 260 1 304 1 282 1 72 2 12 1 216 2 114 1 324 1 220 1 169 1 224 1 264 1 80 1 330 2 56 1 152 1 295 1 229 1 
313 1 275 1 41 1 
89 1 275 1 41 1 
313 2 89 1 183 1 118 1 275 3 25 1 
313 1 89 1 183 1 118 1 275 2 136 1 
313 1 89 1 183 1 118 2 275 2 
156 1 127 1 58 1 232 1 106 1 159 5 336 3 109 2 338 1 7 1 184 3 160 1 283 2 240 1 306 2 220 5 287 1 48 4 244 1 223 1 54 1 329 2 19 1 250 1 151 1 152 1 353 2 229 1 295 1 333 1 199 1 124 1 
156 3 127 1 232 2 106 6 27 1 177 1 159 9 336 8 109 6 5 1 112 1 7 3 184 9 160 2 281 5 283 5 137 5 218 1 240 3 76 1 306 6 220 9 48 7 244 3 223 3 54 1 19 1 250 3 151 2 353 6 22 1 295 4 333 1 199 2 124 2 
156 1 58 1 232 1 159 3 177 1 336 3 109 2 338 1 7 1 160 1 184 4 283 3 240 1 306 2 220 3 48 2 244 2 223 1 329 1 250 1 151 1 353 2 295 1 333 1 199 1 124 1 
156 2 58 1 232 1 159 4 177 1 336 5 109 4 338 1 112 1 7 2 184 7 160 1 283 4 218 1 240 2 76 1 306 4 220 4 48 3 244 3 223 2 329 2 250 2 151 1 353 4 295 2 333 1 199 1 124 1 
145 1 77 1 15 1 
145 1 269 1 
29 1 
145 1 6 1 
312 1 145 3 259 1 15 2 300 1 6 1 
312 1 145 1 6 1 
139 1 145 1 
111 1 148 1 321 1 309 1 
111 1 148 1 321 1 309 1 
111 1 167 1 148 1 321 1 309 1 
111 1 148 1 321 1 309 1 
111 1 148 1 321 1 309 1 
313 1 44 1 200 1 60 1 2 1 45 1 275 2 65 1 30 1 181 1 182 1 89 1 341 1 317 1 235 1 8 1 320 2 284 1 14 1 74 1 346 1 221 1 245 1 41 1 289 1 52 1 267 2 197 1 123 1 25 1 
313 1 200 1 60 1 2 1 45 1 275 2 65 1 30 1 181 1 182 1 316 1 89 1 341 1 317 1 235 2 8 1 320 3 284 1 14 1 74 1 346 1 221 1 41 1 52 1 267 3 53 1 197 1 272 1 25 1 123 1 
313 1 200 1 60 1 2 1 45 1 275 2 30 1 181 1 89 1 341 1 317 1 235 2 8 1 320 2 14 1 346 1 221 1 41 1 52 1 267 2 53 1 197 1 272 1 123 1 25 1 
60 2 203 1 65 1 207 1 6 1 30 1 181 2 182 1 316 1 317 1 341 1 8 1 215 1 320 1 14 2 241 1 243 1 346 1 267 1 145 1 122 1 21 1 123 2 
313 1 44 1 60 1 2 1 45 1 275 2 65 1 30 1 181 1 182 1 89 1 341 1 317 1 8 1 320 1 284 1 14 1 74 1 346 1 221 1 245 1 41 1 267 1 272 1 123 1 25 1 
168 1 
174 2 232 1 83 2 314 1 176 1 85 1 315 1 87 1 6 1 317 1 184 2 8 2 185 2 283 2 92 1 13 4 241 1 243 2 244 2 96 1 54 3 248 1 145 1 19 1 21 1 151 1 333 1 155 1 252 1 201 1 106 6 299 1 159 5 336 2 109 2 62 1 30 1 341 2 303 1 160 1 161 1 162 1 31 1 72 1 305 1 216 1 166 1 345 2 263 1 220 5 346 2 349 2 38 2 230 2 124 1 
252 1 345 1 201 1 106 2 220 3 314 1 299 1 176 1 159 3 62 1 315 1 87 1 54 1 81 1 248 1 31 1 92 1 72 1 305 1 216 1 13 2 155 1 
252 1 201 1 106 1 220 3 314 1 299 1 176 1 159 3 62 1 315 1 87 1 54 1 81 1 248 1 185 1 31 1 283 1 92 1 72 1 305 1 216 1 333 1 13 3 155 1 
252 1 201 1 106 2 299 1 314 1 176 1 159 3 315 1 62 1 87 1 185 1 31 1 72 1 92 1 283 1 305 1 216 1 13 3 345 1 220 3 54 1 81 1 248 1 333 1 155 1 230 1 
174 2 129 1 83 2 314 1 176 1 315 1 87 1 185 4 92 1 283 5 11 1 13 6 244 2 248 1 54 3 249 1 19 1 151 1 333 5 155 1 297 1 252 1 201 1 106 7 299 1 159 5 336 1 109 1 62 1 160 1 161 1 31 1 72 1 305 1 216 1 345 4 263 1 220 5 38 2 349 2 81 1 268 1 230 4 124 1 
174 2 83 2 314 1 176 1 315 1 87 1 184 2 185 2 92 1 283 2 13 4 244 2 96 1 248 1 54 2 19 1 151 1 333 1 155 1 252 1 201 1 106 4 299 1 159 4 336 1 109 1 62 1 160 1 161 1 31 1 72 1 305 1 216 1 263 1 345 2 220 4 38 2 349 2 124 1 230 2 
174 2 252 1 201 1 106 4 83 2 129 1 299 1 314 1 176 1 159 4 336 1 109 1 315 1 62 1 87 1 160 1 185 2 161 1 31 1 283 1 72 1 92 1 11 1 305 1 216 1 13 4 345 2 263 1 220 4 244 2 349 2 38 2 54 2 248 1 19 1 151 1 333 1 155 1 230 2 297 1 124 1 
174 2 252 1 201 1 106 4 83 2 129 1 299 1 314 1 176 1 159 4 336 1 109 1 315 1 62 1 87 1 160 1 185 2 161 1 31 1 283 1 72 1 92 1 11 1 305 1 216 1 13 4 345 2 263 1 220 4 244 2 349 2 38 2 54 2 248 1 19 1 151 1 333 1 155 1 230 2 297 1 124 1 
252 1 201 1 83 1 129 1 299 1 314 1 176 1 84 1 159 2 336 1 109 1 315 1 62 1 87 1 133 1 184 1 160 1 31 1 72 1 92 1 305 1 216 1 13 2 263 1 220 2 78 1 193 1 38 1 248 1 19 1 151 1 155 1 124 1 
174 2 252 1 201 1 106 5 83 2 129 1 299 1 314 1 176 1 159 4 336 1 109 1 315 1 62 1 87 1 160 1 161 1 185 3 31 1 283 1 11 1 72 1 92 1 305 1 216 1 13 5 263 1 345 3 220 4 244 2 349 2 38 2 54 2 248 1 249 1 19 1 151 1 333 1 155 1 124 1 230 3 297 1 
174 2 252 1 201 1 106 5 83 2 129 1 299 1 314 1 176 1 159 4 336 1 109 1 315 1 62 1 87 1 160 1 161 1 185 3 31 1 283 1 11 1 72 1 92 1 305 1 216 1 13 5 263 1 345 3 220 4 244 2 349 2 38 2 54 2 248 1 249 1 19 1 151 1 333 1 155 1 124 1 230 3 297 1 
83 2 314 1 176 1 315 1 87 1 133 1 184 2 185 2 92 1 283 1 13 4 96 1 248 1 54 2 19 1 151 1 333 1 155 1 252 1 201 1 106 4 299 1 159 4 336 1 109 1 62 1 160 1 31 1 72 1 305 1 216 1 263 1 345 2 220 4 78 2 38 2 124 1 231 2 230 2 
67 1 35 1 141 1 253 1 77 1 158 1 342 1 57 1 337 1 188 1 
98 1 141 1 158 1 49 1 93 1 24 1 164 1 188 1 
173 1 141 1 105 1 104 1 158 1 299 1 108 1 247 1 330 1 72 1 216 1 24 1 164 1 188 1 
173 1 141 1 105 1 104 1 243 1 158 1 299 1 346 1 108 1 256 1 341 1 330 1 8 1 72 1 216 1 24 1 164 1 188 1 
111 1 141 1 341 1 243 1 158 1 8 1 346 1 175 1 339 1 188 1 51 1 
240 1 141 1 104 1 158 1 299 1 111 1 68 1 330 1 7 1 250 1 308 1 72 1 331 1 216 1 24 1 188 1 
111 1 240 1 141 1 158 1 250 1 57 1 188 1 355 1 
156 1 141 1 158 1 223 1 57 1 164 1 332 1 188 1 
111 1 240 1 141 1 7 1 158 1 250 1 57 1 188 1 
111 1 240 1 141 1 158 1 250 1 175 1 188 1 355 1 
156 1 141 1 158 1 175 1 223 1 164 1 332 1 188 1 
111 1 240 1 141 1 7 1 158 1 250 1 175 1 188 1 
111 1 240 1 141 1 7 1 158 1 250 1 188 1 
173 1 312 1 141 1 243 1 158 1 299 1 346 1 327 1 30 1 6 1 145 1 341 1 210 1 317 1 8 1 72 1 293 1 251 1 164 1 188 1 
173 1 312 1 141 1 243 1 158 1 299 1 346 1 327 1 121 1 30 1 6 1 145 1 341 1 317 1 8 1 196 1 72 1 164 1 188 1 47 1 
111 1 240 1 141 1 7 1 158 1 250 1 24 1 188 1 
240 1 312 1 141 1 158 1 299 1 346 1 327 1 289 1 6 1 30 1 111 1 145 1 341 1 210 1 317 1 7 1 8 1 250 1 72 1 285 1 293 1 251 1 188 1 
240 1 141 1 104 1 158 1 299 1 111 1 291 1 330 1 7 1 250 1 308 1 72 1 331 1 216 1 24 1 188 1 
4 1 46 1 164 1 143 1 310 1 188 1 189 1 171 1 
4 1 46 1 164 1 143 1 310 1 188 1 189 1 171 1 
4 1 46 1 164 1 143 1 310 1 188 1 189 1 171 1 
4 1 46 1 164 1 143 1 310 1 188 1 189 1 171 1 
4 1 46 1 164 1 143 1 310 1 188 1 189 1 171 1 
344 1 324 1 254 1 69 1 224 1 3 1 86 1 154 1 217 1 114 1 
56 1 264 1 
36 1 324 1 69 1 71 1 39 1 224 1 3 1 86 1 114 1 
219 1 324 1 254 1 220 1 159 1 3 1 224 1 205 1 86 1 180 1 213 1 69 1 282 1 304 2 283 1 154 1 217 1 114 1 
219 1 324 1 254 1 220 1 159 1 3 1 224 1 205 1 86 1 180 1 213 1 69 1 282 1 304 2 283 1 154 1 217 1 114 1 
219 1 324 1 254 1 220 1 159 1 3 1 224 1 205 1 86 1 180 1 213 1 69 1 282 1 304 2 283 1 154 1 217 1 114 1 
142 1 292 1 301 1 
142 1 292 1 301 1 
326 1 165 1 
292 1 326 1 165 1 
169 1 12 1 
104 2 299 2 159 1 205 1 3 1 63 1 86 1 180 1 69 1 260 1 304 1 72 2 12 1 216 2 114 1 324 1 220 1 169 1 48 1 224 1 264 1 80 1 330 2 56 1 152 1 295 1 229 1 
142 1 301 1 
292 1 326 1 165 1 
126 1 141 1 158 1 299 2 119 1 339 1 51 1 111 1 17 1 72 2 216 2 24 1 188 1 125 1 
313 1 74 1 2 1 346 2 221 1 275 2 131 1 41 1 289 1 30 1 89 1 317 1 341 2 8 2 186 1 272 1 354 1 25 1 123 1 
313 1 74 1 2 1 346 1 221 1 275 2 41 1 30 1 226 1 89 1 341 1 317 1 8 1 272 1 354 1 25 1 123 1 
241 1 243 1 346 1 131 1 207 1 30 1 6 1 145 1 317 1 341 1 8 1 280 1 21 1 123 1 
313 1 74 1 2 1 346 1 221 1 275 2 131 1 41 1 30 1 89 1 317 1 341 1 8 1 186 1 272 1 354 1 25 1 123 1 
172 1 
323 1 77 1 32 1 336 1 283 1 109 1 333 1 
174 1 106 1 220 1 159 1 244 1 349 1 336 1 109 1 54 1 19 1 184 1 160 1 161 1 283 2 151 1 333 1 124 1 
232 2 312 3 130 1 6 3 317 4 7 2 8 3 184 12 135 1 283 8 323 1 139 2 240 2 243 1 15 2 244 6 289 1 144 2 54 3 145 10 19 4 250 2 149 2 151 4 333 2 156 2 298 2 106 5 335 2 159 5 61 2 336 9 109 8 30 3 302 1 209 2 341 3 212 2 160 4 259 1 31 2 32 1 214 1 166 1 306 6 220 5 117 1 346 3 347 2 223 2 269 3 228 2 353 6 124 4 
232 1 156 2 335 1 106 1 159 1 336 8 109 5 179 1 209 2 7 2 184 6 160 2 283 5 238 1 343 1 94 1 240 2 166 1 242 1 306 5 220 1 244 3 288 1 49 1 223 2 54 1 146 1 307 1 19 2 250 2 151 2 353 5 23 1 333 2 124 2 
156 1 104 1 299 1 159 1 336 2 109 1 337 1 277 1 88 1 209 2 160 1 342 1 187 1 72 1 11 1 216 1 220 1 225 1 330 1 19 1 100 1 250 1 151 1 331 1 124 1 103 1 
323 1 336 1 109 1 19 1 160 1 32 1 151 1 283 1 333 1 124 1 
240 2 156 2 306 5 335 1 244 5 347 1 336 5 109 5 223 2 209 2 7 2 184 10 250 2 283 5 353 5 
54 1 106 1 220 1 159 1 283 1 333 1 
232 2 106 4 130 1 177 1 159 3 336 2 109 2 206 1 30 1 6 1 302 2 317 1 341 4 303 1 160 2 8 4 162 1 261 1 241 1 166 2 243 2 220 3 346 4 54 2 145 1 19 1 21 1 151 2 124 2 
173 1 312 1 104 2 158 1 299 3 30 1 6 1 341 1 210 1 317 1 8 1 72 3 216 2 164 1 188 1 116 1 141 1 243 1 346 1 327 1 145 1 330 2 293 1 331 2 251 1 103 1 
232 1 166 1 306 2 244 2 336 1 109 2 19 1 184 4 160 1 151 1 283 4 353 2 309 1 333 2 124 1 
69 1 224 1 138 1 
69 1 224 1 138 1 
99 1 69 1 12 1 224 1 154 1 
69 1 224 1 138 1 
113 1 69 1 224 1 
113 1 69 1 224 1 
113 1 69 1 224 1 
69 1 224 1 
324 1 3 1 
146 1 49 1 46 1 164 1 179 1 188 1 
146 1 236 1 49 1 46 1 164 1 179 1 188 2 
146 1 49 1 46 1 164 1 179 1 188 1 
146 1 49 1 46 1 164 1 179 1 188 1 
146 1 49 1 46 1 164 1 179 1 188 1 
146 1 49 1 46 1 164 1 179 1 188 1 
146 1 236 1 49 1 46 1 164 1 179 1 188 2 
146 1 49 1 46 1 294 1 164 1 179 1 188 2 
67 1 35 1 253 1 342 1 337 1 
146 1 49 1 46 1 294 1 164 1 179 1 188 2 
67 1 35 1 1 1 253 1 342 1 337 1 188 2 
67 1 35 1 253 1 77 1 342 1 337 1 
111 1 240 1 7 1 250 1 236 1 188 1 
146 1 49 1 164 1 
98 1 49 1 164 1 
49 1 164 1 
111 1 94 1 
347 1 164 1 
146 1 49 1 46 1 164 1 179 1 188 1 
111 1 250 1 277 1 
274 1 164 1 
35 1 342 1 337 1 225 1 
111 1 240 1 250 1 46 1 188 1 
111 1 240 1 7 1 250 1 46 1 188 1 
35 1 342 1 46 1 337 1 188 1 
146 1 236 1 150 1 49 1 46 1 294 1 164 1 188 3 
299 1 260 1 255 1 204 1 72 1 216 1 155 1 
334 1 115 1 325 1 299 1 255 1 204 1 328 1 90 1 260 1 72 1 216 1 155 1 
241 1 145 1 317 1 341 1 243 1 77 1 8 1 346 1 21 1 30 1 6 1 
312 1 104 1 243 1 299 2 346 1 108 1 327 1 6 1 30 1 145 1 317 1 330 1 341 1 8 1 260 1 72 2 216 1 251 1 
139 1 312 2 201 1 104 1 299 2 346 1 108 1 327 1 87 1 6 2 30 1 302 1 145 3 317 1 330 2 341 1 212 1 8 1 260 1 72 2 305 1 216 2 251 1 
139 1 312 2 201 1 104 1 299 2 346 2 108 1 327 1 87 1 6 2 121 1 30 1 302 1 145 3 317 1 330 2 341 2 212 1 8 2 260 1 70 1 72 2 305 1 216 2 
312 1 106 1 159 2 30 1 6 1 302 1 341 3 317 1 212 1 8 3 31 1 70 1 91 1 283 1 139 1 243 1 220 2 346 3 15 1 350 1 145 4 269 1 333 1 
139 1 312 1 243 1 106 1 220 2 346 3 15 1 159 2 6 1 30 1 302 1 144 1 145 4 317 1 341 3 269 1 212 1 8 3 31 1 70 1 283 1 333 1 
317 1 341 1 8 1 346 1 352 1 30 1 
312 1 157 1 59 1 243 2 346 7 257 1 16 1 289 1 265 1 6 2 30 2 145 3 341 6 18 1 317 3 8 7 259 1 9 1 20 1 352 1 272 1 
126 1 312 1 104 1 253 1 158 2 299 2 108 1 337 1 6 1 30 1 67 1 341 1 210 1 317 1 8 1 342 1 72 2 285 1 216 1 188 2 35 1 141 2 346 1 348 1 327 1 289 1 145 1 330 1 293 1 24 1 251 1 
298 1 106 2 130 1 159 3 336 1 61 1 109 1 341 1 160 2 8 1 31 1 32 1 283 1 323 1 243 1 220 3 346 1 48 1 15 1 144 1 54 1 145 2 269 1 19 2 149 1 151 2 333 1 124 2 
312 1 346 2 15 1 289 1 6 1 30 1 145 2 341 2 317 2 8 2 259 1 135 1 352 1 
241 1 243 1 346 4 289 1 6 1 30 1 145 1 211 1 317 1 341 4 8 4 70 1 21 1 
312 1 346 2 16 1 40 1 6 1 30 1 302 1 145 1 341 2 317 2 351 1 8 2 9 1 191 1 
89 1 317 1 341 1 243 1 8 1 346 1 221 1 275 1 41 1 30 1 
145 1 157 1 317 1 341 2 8 2 346 2 272 1 289 1 30 1 6 1 110 1 
241 1 157 1 243 1 346 5 257 1 289 1 265 1 6 2 30 2 302 1 145 3 211 1 341 4 317 2 8 5 21 1 
241 1 157 1 243 1 346 5 257 1 289 1 6 2 30 2 302 1 145 3 211 1 341 4 317 2 8 5 21 1 296 1 
312 1 104 1 243 1 299 2 346 1 108 1 327 1 6 1 121 1 30 1 145 1 317 1 330 1 341 1 8 1 260 1 72 2 216 1 
312 1 346 1 16 1 6 1 30 1 302 1 145 1 341 1 18 1 317 2 8 1 259 1 9 1 
147 1 260 1 319 1 194 1 82 1 
201 1 220 2 48 1 159 2 170 1 194 2 87 1 248 1 147 1 227 1 260 1 31 1 319 2 283 1 305 1 239 1 163 1 333 1 82 2 
147 1 17 1 299 1 319 1 72 1 216 1 119 1 125 1 82 1 
147 1 170 1 239 1 
200 1 77 1 197 1 52 1 
182 1 200 1 197 1 320 1 65 1 52 1 267 1 
181 1 320 1 14 1 
182 1 44 1 200 1 42 1 128 2 197 1 320 3 101 1 65 1 66 1 52 1 267 3 
182 1 200 1 235 1 197 1 320 2 65 1 52 1 266 1 267 2 
44 1 313 1 0 1 107 1 275 1 41 1 65 1 267 1 182 1 197 1 320 1 
182 1 44 1 200 1 197 1 320 1 65 1 267 1 
182 1 44 1 200 2 320 1 65 1 52 1 267 1 
182 2 44 1 200 1 270 1 197 1 73 1 320 2 95 1 65 2 267 2 
44 1 200 1 75 1 107 1 65 1 52 1 267 3 234 1 182 1 235 2 197 2 320 3 311 1 
44 1 313 1 200 1 275 2 120 1 41 1 65 1 52 1 267 2 182 1 89 1 235 1 197 1 320 2 25 1 
44 1 200 1 75 1 107 1 65 2 52 1 267 4 266 1 182 2 235 2 197 2 320 4 262 1 
182 1 44 1 200 1 197 1 320 1 65 1 52 1 267 1 
200 2 26 1 75 1 128 1 107 1 65 1 66 1 52 2 267 4 182 1 42 1 235 2 197 3 320 4 
290 1 182 1 44 1 200 1 235 1 197 1 320 2 198 1 178 1 65 1 52 1 267 2 
182 1 44 1 200 1 42 2 128 2 197 1 320 3 153 1 65 1 66 1 52 1 267 3 
208 1 197 1 276 1 
182 1 44 1 320 1 79 1 65 1 267 1 
182 1 44 1 200 1 235 1 197 1 320 2 65 1 52 1 234 1 267 2 
246 1 
182 1 44 1 200 1 197 1 320 1 65 1 52 1 267 1 
182 1 44 1 200 1 128 1 235 1 197 1 320 3 65 1 234 1 52 1 267 3 
26 1 75 1 197 1 107 1 
200 1 197 1 

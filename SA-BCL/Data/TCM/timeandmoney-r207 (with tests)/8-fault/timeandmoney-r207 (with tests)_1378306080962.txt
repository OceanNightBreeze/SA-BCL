#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 242 110 269 30 173 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 242 110 269 30 173 109 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 242 110 269 30 173 109 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 242 110 269 30 173 109 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 187 269 30 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 242 110 269 30 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (93,134,284,296) (93,134,284,296) 222 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
207 1 106 2 162 1 235 1 277 4 134 2 296 2 316 1 135 1 240 1 37 3 324 1 303 9 249 1 117 2 330 1 200 1 372 5 93 9 171 1 74 1 284 6 359 2 154 2 340 1 180 1 79 2 206 1 
207 1 106 2 162 1 235 1 277 4 134 2 296 2 316 1 135 1 240 1 37 3 324 1 303 9 249 1 117 2 330 1 200 1 372 5 93 9 171 1 74 1 284 6 359 2 154 2 340 1 180 1 79 2 206 1 
207 1 106 2 162 1 235 1 277 5 134 2 296 2 316 1 135 1 240 1 37 4 324 1 303 10 249 1 117 2 330 1 200 1 372 6 93 10 171 1 74 1 284 7 359 2 154 2 340 1 180 1 79 2 206 1 
207 1 106 2 162 1 235 1 277 3 134 2 296 2 316 1 135 1 240 1 37 2 324 1 303 7 249 1 117 2 330 1 200 1 372 4 93 7 171 1 74 1 284 4 359 2 154 1 340 1 79 2 206 1 
117 1 200 1 372 3 235 1 277 2 93 4 296 1 134 1 316 1 284 3 74 1 359 1 154 2 340 1 37 1 180 1 79 1 303 4 
207 1 128 1 106 1 200 1 372 1 162 1 235 1 93 2 267 1 296 1 134 1 316 1 359 1 351 1 79 1 303 2 
106 1 200 1 372 2 235 1 277 1 93 3 296 2 134 2 316 1 284 1 135 1 37 1 303 3 
55 1 106 1 345 1 235 1 277 4 134 2 296 2 316 1 135 1 240 1 37 3 303 9 117 1 200 1 372 5 93 9 284 7 74 1 359 1 154 2 340 1 180 1 79 1 206 1 
55 1 106 1 345 1 235 1 277 4 134 2 296 2 316 1 135 1 240 1 37 3 303 9 117 1 200 1 372 5 93 9 284 7 74 1 359 1 154 2 340 1 180 1 79 1 206 1 
29 1 189 1 194 1 
189 1 35 1 327 2 
304 2 51 2 126 2 133 2 78 1 373 2 213 1 123 2 
3 1 233 1 160 1 82 1 133 2 213 1 297 1 299 2 10 1 368 1 13 2 65 1 36 1 244 1 195 1 325 1 87 1 39 1 143 1 220 1 304 2 199 2 198 1 333 1 224 1 373 3 95 1 123 3 227 2 228 1 51 2 377 1 178 2 126 2 78 1 157 1 185 1 
304 1 63 1 51 1 126 1 331 1 70 1 133 1 373 1 213 1 123 1 
158 1 189 1 237 1 133 2 213 1 32 1 84 1 63 1 165 1 194 1 353 1 140 1 304 1 17 1 331 1 281 1 70 2 373 2 123 2 51 1 126 1 
304 2 158 1 189 1 331 1 237 1 133 2 70 2 373 2 213 1 32 1 123 2 84 2 63 1 51 2 126 2 165 1 194 1 353 2 140 1 
119 1 86 1 353 1 317 1 84 1 
119 1 189 1 194 1 181 1 353 2 317 1 361 1 84 2 
353 1 317 1 84 1 
304 1 119 1 331 1 70 1 133 1 373 1 213 1 32 1 84 1 123 1 63 1 51 1 126 1 353 1 
189 1 
119 1 189 1 378 1 194 1 353 2 317 1 361 1 84 2 
119 2 189 1 314 2 366 1 252 2 317 2 174 1 374 1 285 1 84 5 279 1 75 1 254 1 25 1 26 2 194 1 353 5 196 1 361 1 
291 1 186 1 304 1 3 1 198 1 199 1 233 1 224 1 133 1 373 2 95 1 123 2 227 1 377 1 126 1 36 1 13 1 65 1 155 1 325 1 
29 1 78 1 
362 1 304 1 121 1 133 2 373 2 123 2 51 1 126 1 78 2 
291 1 138 1 247 1 
28 1 199 1 198 1 3 1 233 1 224 1 373 1 95 1 123 1 227 1 377 1 13 1 65 1 36 1 78 1 325 1 
186 1 304 3 51 1 126 3 133 3 78 1 373 3 123 3 
304 1 63 1 126 1 70 1 133 1 373 1 123 1 
304 1 362 1 51 1 126 1 70 1 121 1 133 1 373 1 123 1 
158 1 3 1 213 1 297 1 10 1 299 2 165 1 13 1 65 1 353 1 220 1 304 3 18 1 70 2 224 1 268 1 123 4 227 1 228 1 126 3 178 1 78 1 185 1 186 1 362 1 233 1 237 1 133 3 84 1 36 1 244 1 140 1 325 1 195 1 39 1 245 1 199 1 198 1 333 1 373 4 95 1 377 1 51 2 155 1 157 1 
186 1 304 1 17 1 126 1 133 2 78 1 373 2 14 1 123 2 
186 2 362 1 158 1 304 3 189 1 237 1 70 1 133 3 373 3 84 1 123 3 215 1 51 1 126 3 165 1 155 1 353 1 140 1 245 1 
186 1 291 1 362 1 304 2 133 2 373 2 123 2 51 1 126 2 247 1 
199 1 198 1 3 1 233 1 224 1 373 1 95 1 123 1 227 1 377 1 13 1 65 1 36 1 78 1 325 1 
68 1 199 1 198 1 3 1 233 1 373 1 95 1 123 1 227 1 377 1 13 1 36 1 78 1 325 1 166 1 
291 2 343 1 160 2 58 1 297 1 264 1 111 1 299 2 10 1 192 1 242 1 216 1 138 2 244 2 139 1 195 1 39 1 220 1 247 2 169 1 228 1 339 1 178 4 272 1 
304 1 165 1 126 1 70 1 133 1 6 1 373 1 123 1 
186 2 304 4 362 1 70 1 133 4 268 1 373 4 123 4 308 1 51 1 126 4 155 1 78 1 142 1 
304 2 63 1 126 2 6 1 70 1 133 2 373 2 123 2 
102 1 8 1 
102 1 8 1 
48 1 38 1 
48 1 38 1 
48 1 38 1 
102 1 85 1 8 1 
102 2 363 1 8 2 48 1 300 1 38 1 289 1 
102 1 118 1 8 1 
102 1 85 1 8 1 
102 1 85 1 8 1 
102 1 159 1 8 1 
102 1 159 1 8 1 
102 1 159 1 8 1 
102 2 256 2 90 2 189 1 201 1 211 1 282 2 23 1 8 2 225 1 84 2 239 2 300 1 255 1 33 2 12 1 353 2 326 3 370 1 
256 1 102 1 133 2 8 1 84 1 239 1 137 1 33 1 12 1 11 1 66 1 353 1 326 1 371 1 304 2 118 1 282 1 373 2 123 2 253 1 338 1 126 2 179 1 78 1 
359 1 117 1 79 1 
359 1 128 1 79 1 
128 1 98 1 117 2 217 1 335 1 79 3 
128 1 98 1 117 1 217 1 357 1 79 2 
128 1 117 1 98 2 217 1 79 2 
314 1 189 2 132 1 131 1 57 1 58 1 366 1 317 1 84 5 279 2 110 1 192 1 242 1 35 1 194 1 353 5 371 1 327 3 169 1 250 2 119 4 20 1 21 2 252 1 174 3 96 2 338 1 76 1 179 1 26 1 361 1 275 1 
1 1 189 5 314 2 132 1 131 2 58 3 366 1 317 6 84 9 279 6 110 3 321 1 192 3 242 3 35 3 86 5 194 1 353 9 369 1 371 4 327 9 169 3 119 7 21 6 334 5 252 2 285 1 174 8 336 1 96 6 226 1 26 2 361 1 184 1 275 2 
189 3 314 1 131 1 57 1 58 1 84 3 279 2 110 1 192 1 242 1 35 2 194 1 353 3 371 1 327 4 169 1 250 1 119 2 20 1 21 2 252 1 285 1 174 3 96 2 26 1 275 1 
1 1 189 4 314 1 131 1 57 1 58 2 84 4 279 4 110 2 321 1 192 2 242 2 35 3 194 1 353 4 371 2 327 7 169 2 250 2 119 3 20 1 21 4 252 1 285 1 174 5 336 1 96 4 26 1 275 1 
248 1 29 1 95 1 
95 1 176 1 
210 1 
3 1 95 1 
248 2 3 1 209 1 325 1 95 3 298 1 
3 1 325 1 95 1 
273 1 95 1 
160 4 91 1 364 1 58 1 251 1 172 1 202 1 319 1 264 3 61 1 192 1 178 7 272 2 244 3 127 1 182 1 54 2 
160 4 91 1 364 1 58 1 251 1 172 1 202 1 319 1 264 3 61 1 192 1 178 7 272 2 244 3 127 1 182 1 54 2 
160 4 91 1 364 1 58 1 251 1 172 1 202 1 319 1 264 3 61 1 192 1 178 7 272 2 229 1 244 3 127 1 182 1 54 2 
2 1 292 1 160 16 212 1 364 5 58 4 297 1 319 2 214 1 110 3 264 10 61 2 299 2 10 1 242 3 192 4 244 15 355 1 220 1 169 3 91 1 94 1 172 1 251 2 202 1 228 1 310 4 286 3 178 31 272 5 127 1 182 2 54 3 274 1 
160 5 364 1 58 1 297 2 319 1 264 4 299 4 10 2 61 1 192 1 243 1 244 4 220 2 91 1 43 1 251 1 172 1 202 1 228 2 178 9 272 3 182 1 54 2 274 1 
128 1 233 1 106 1 235 1 31 1 134 1 296 1 261 1 316 1 64 1 13 1 323 1 114 1 303 2 16 1 246 1 199 1 198 1 117 1 200 1 372 1 93 2 335 1 284 1 124 1 227 1 203 1 359 1 79 2 183 1 
128 1 233 1 106 1 235 1 134 1 296 1 261 1 316 1 64 1 13 1 323 1 350 1 114 1 303 3 246 1 199 1 198 1 117 1 372 1 44 1 93 3 335 1 284 2 124 1 227 1 203 1 359 1 79 2 183 1 99 1 
128 1 233 1 106 1 235 1 261 1 316 1 64 1 13 1 114 1 303 2 199 1 198 1 117 1 372 1 44 1 93 2 335 1 284 2 124 1 227 1 203 1 359 1 79 2 183 1 99 1 
198 1 3 1 129 1 199 1 233 1 106 2 83 1 93 1 296 1 134 1 95 1 367 1 125 1 227 1 124 2 203 2 62 1 377 1 52 1 13 1 350 1 303 1 114 2 
128 1 233 1 106 1 134 1 296 1 261 1 64 1 13 1 323 1 114 1 303 1 16 1 246 1 199 1 198 1 117 1 200 1 93 1 335 1 124 1 227 1 203 1 359 1 79 2 183 1 99 1 
150 1 
158 1 3 1 257 1 105 1 108 2 4 1 5 1 9 4 60 1 348 1 165 1 13 2 302 1 353 5 352 1 221 2 223 1 17 1 70 1 306 2 73 2 174 2 123 1 227 2 360 1 26 1 361 3 129 1 233 1 314 1 189 3 131 1 234 2 237 1 133 1 366 1 317 6 84 5 238 2 367 1 279 2 35 2 194 2 140 1 327 2 199 2 198 1 281 1 373 1 252 1 45 1 95 1 97 1 377 2 205 2 
158 1 189 2 234 1 237 1 133 1 317 2 84 3 9 2 348 1 165 1 194 2 353 3 140 1 352 1 17 1 281 1 70 1 373 1 45 1 123 1 360 1 97 1 378 1 361 1 
158 1 17 1 189 2 281 1 237 1 70 1 133 1 306 1 373 1 45 1 9 3 84 2 123 1 97 1 360 1 348 1 165 1 194 2 352 1 140 1 353 2 
158 1 189 2 234 1 237 1 133 1 317 2 84 3 9 3 348 1 165 1 194 2 353 3 140 1 352 1 17 1 281 1 70 1 373 1 306 1 45 1 73 1 123 1 360 1 97 1 378 1 361 1 
158 1 108 2 213 1 59 1 9 5 63 1 348 1 165 1 302 1 352 1 353 5 221 2 304 1 17 1 223 1 70 2 306 3 73 4 174 1 123 2 360 1 126 1 26 1 361 3 81 1 189 4 314 1 234 4 237 1 133 2 278 1 366 1 32 1 317 7 84 5 279 1 238 2 35 2 194 4 140 1 328 1 146 1 331 1 281 1 373 2 45 1 252 1 97 1 51 1 378 1 205 2 
158 1 108 2 9 4 60 1 348 1 165 1 302 1 353 4 352 1 221 2 17 1 223 1 70 1 306 2 73 2 174 1 123 1 360 1 26 1 361 2 189 4 314 1 234 2 237 1 133 1 366 1 317 4 84 4 279 1 238 2 35 2 194 3 140 1 327 2 281 1 373 1 252 1 45 1 97 1 205 2 
158 1 81 1 108 2 314 1 189 3 234 2 237 1 133 1 366 1 317 4 59 1 84 4 9 4 238 2 279 1 348 1 165 1 35 2 302 1 194 3 353 4 140 1 352 1 221 2 328 1 223 1 17 1 281 1 70 1 306 2 373 1 73 2 45 1 252 1 174 1 123 1 360 1 97 1 26 1 205 2 361 2 
158 1 81 1 108 2 314 1 189 3 234 2 237 1 133 1 366 1 317 4 59 1 84 4 9 4 238 2 279 1 348 1 165 1 35 2 302 1 194 3 353 4 140 1 352 1 221 2 328 1 223 1 17 1 281 1 70 1 306 2 373 1 73 2 45 1 252 1 174 1 123 1 360 1 97 1 26 1 205 2 361 2 
158 1 103 1 108 2 314 1 189 3 161 2 260 1 234 2 237 1 133 1 366 1 317 4 84 4 9 4 238 2 279 1 348 1 165 1 194 3 353 4 140 1 352 1 167 2 327 2 328 1 223 1 17 1 281 1 70 1 306 2 373 1 73 2 45 1 252 1 174 1 123 1 152 1 360 1 97 1 26 1 361 2 
158 1 81 1 108 2 314 1 189 3 234 3 237 1 133 1 366 1 317 5 59 1 84 4 9 5 238 2 279 1 348 1 165 1 35 2 302 1 194 3 353 4 140 1 352 1 221 2 328 1 146 1 223 1 17 1 281 1 70 1 306 3 373 1 252 1 45 1 73 3 174 1 123 1 360 1 97 1 26 1 205 2 361 2 
158 1 81 1 108 2 314 1 189 3 234 3 237 1 133 1 366 1 317 5 59 1 84 4 9 5 238 2 279 1 348 1 165 1 35 2 302 1 194 3 353 4 140 1 352 1 221 2 328 1 146 1 223 1 17 1 281 1 70 1 306 3 373 1 252 1 45 1 73 3 174 1 123 1 360 1 97 1 26 1 205 2 361 2 
158 1 108 2 260 1 161 2 9 4 60 1 348 1 165 1 353 4 352 1 167 2 17 1 223 1 70 1 306 2 73 2 174 1 123 1 360 1 26 1 361 2 189 3 314 1 234 2 237 1 133 1 366 1 317 4 84 4 279 1 238 2 194 3 140 1 327 2 281 1 373 1 252 1 45 1 97 1 
291 1 29 1 160 3 91 1 58 1 172 1 297 1 202 1 264 2 228 1 61 1 10 1 299 2 192 1 178 6 216 1 138 1 272 2 244 3 78 2 195 1 39 1 182 1 54 1 220 1 247 1 
291 11 104 1 160 8 212 1 364 1 7 1 58 2 297 2 264 2 110 2 299 4 10 2 241 1 368 1 242 2 192 1 138 11 244 6 195 1 39 2 220 2 247 4 169 1 22 1 94 1 228 2 47 1 310 3 178 14 286 3 272 1 78 1 185 1 
186 1 28 1 3 1 233 1 188 1 160 1 133 1 297 1 10 1 241 1 299 2 368 1 36 1 65 1 13 1 244 1 325 1 195 1 39 1 220 1 247 1 304 1 198 1 199 1 224 1 373 2 95 1 123 2 227 1 228 1 377 1 271 1 126 1 178 2 155 1 78 1 232 1 185 1 
291 7 3 2 160 10 294 1 58 3 297 3 263 2 110 2 264 8 61 1 299 6 10 3 13 3 65 2 220 3 304 1 169 2 224 2 172 1 123 3 227 3 228 3 126 1 178 20 272 4 78 2 182 1 185 1 186 1 233 2 364 4 133 1 241 1 368 1 192 3 242 2 322 2 193 1 36 2 138 7 244 10 195 3 325 2 39 3 40 1 247 7 199 3 198 2 91 1 373 3 202 1 95 2 377 1 155 1 156 2 157 2 54 1 99 1 342 2 
186 1 129 1 3 2 233 2 160 1 365 1 133 1 31 1 297 2 367 1 299 4 10 2 368 1 216 1 13 8 244 1 195 2 87 2 39 2 220 2 145 1 356 1 304 1 198 2 199 8 92 1 71 1 373 1 95 3 123 1 227 7 228 2 377 2 126 1 178 2 341 1 99 1 100 1 185 1 
291 1 362 1 160 1 133 1 58 1 297 1 264 1 110 1 299 2 10 1 241 1 242 1 192 1 138 1 244 2 195 1 39 1 219 1 220 1 247 1 304 1 169 1 373 1 123 1 228 1 51 1 126 1 178 3 272 1 
291 1 160 2 364 1 58 1 297 1 264 1 228 1 10 1 299 2 339 1 242 1 178 2 216 1 138 1 195 1 39 1 220 1 247 1 
291 1 169 1 297 1 264 1 228 1 10 1 299 2 111 1 192 1 178 2 216 1 272 1 138 1 244 2 195 1 39 1 220 1 247 1 
291 2 160 2 364 1 58 1 297 1 110 1 264 2 299 2 10 1 242 1 192 1 216 1 138 2 244 2 195 1 39 1 220 1 247 2 169 1 228 1 178 4 272 1 
291 1 160 2 364 1 58 1 297 1 264 1 228 1 10 1 299 2 339 1 242 1 178 2 138 1 195 1 39 1 220 1 247 1 356 1 
291 1 169 1 297 1 264 1 228 1 10 1 299 2 111 1 192 1 178 2 272 1 138 1 244 2 195 1 39 1 220 1 247 1 356 1 
291 2 160 2 364 1 58 1 297 1 110 1 264 2 299 2 10 1 242 1 192 1 138 2 244 2 195 1 39 1 220 1 356 1 247 2 169 1 228 1 178 4 272 1 
291 2 160 2 364 1 58 1 297 1 110 1 264 2 299 2 10 1 242 1 192 1 138 2 244 2 195 1 39 1 220 1 247 2 169 1 228 1 178 4 272 1 
3 1 233 1 160 1 297 1 10 1 299 2 368 1 36 1 65 1 13 1 244 1 325 1 195 1 39 1 220 1 198 1 199 1 224 1 373 1 95 1 123 1 227 1 228 1 377 1 178 2 78 1 157 1 185 1 
3 1 233 1 160 1 297 1 10 1 299 2 368 1 36 1 13 1 244 1 325 1 195 1 166 1 39 1 220 1 68 1 198 1 199 1 373 1 95 1 123 1 227 1 228 1 151 1 377 1 178 2 78 1 185 1 
291 2 160 2 364 1 58 1 297 1 110 1 264 2 299 2 10 1 241 1 242 1 192 1 138 2 244 2 195 1 39 1 220 1 247 2 169 1 228 1 178 4 272 1 
291 2 3 1 233 1 160 2 364 1 31 1 58 1 297 1 264 2 110 1 10 1 299 2 192 1 242 1 322 1 138 2 36 1 65 1 13 1 244 2 325 1 195 1 39 1 220 1 247 2 169 1 198 1 199 1 224 1 373 1 95 1 123 1 227 1 228 1 178 4 272 1 157 1 
291 1 362 1 160 2 364 1 133 1 58 1 297 1 264 1 110 1 299 2 10 1 241 1 192 1 242 1 138 1 244 1 195 1 39 1 220 1 247 1 169 1 304 1 373 1 123 1 228 1 51 1 126 1 178 3 230 1 
276 1 160 9 212 1 364 3 109 1 58 3 297 2 110 3 264 6 299 4 10 2 242 3 192 3 34 1 244 10 354 1 220 2 89 1 169 3 19 2 43 1 94 1 173 1 228 2 310 2 178 19 286 1 77 1 272 3 231 2 
187 1 56 1 276 2 160 9 30 1 109 1 58 2 297 2 264 1 110 2 299 4 10 2 192 1 242 2 244 8 220 2 89 1 169 1 19 2 43 1 269 1 94 2 173 2 228 2 310 2 178 17 286 2 272 1 311 1 274 1 
187 1 56 1 276 2 160 15 212 1 30 1 364 2 109 1 58 4 297 3 110 4 264 4 299 6 10 3 242 4 192 3 34 1 244 15 220 3 89 1 169 3 19 3 43 1 269 1 94 3 173 1 228 3 310 4 178 30 286 3 77 1 272 2 311 1 80 1 274 1 231 1 
187 1 56 1 276 2 160 15 212 1 30 1 364 2 109 1 58 4 297 3 110 4 264 5 299 6 10 3 242 4 192 3 34 1 244 15 220 3 89 1 169 3 19 3 43 1 269 1 94 3 173 1 228 3 310 4 178 30 286 3 77 1 272 3 311 1 80 1 274 1 231 1 
187 1 56 1 276 1 160 22 212 2 30 1 364 4 109 1 58 7 297 1 110 6 264 10 61 1 299 2 10 1 242 6 192 6 244 19 220 1 89 1 169 5 19 2 91 1 43 1 22 2 269 1 94 2 172 1 202 1 173 1 228 1 310 4 178 41 286 4 272 6 311 1 182 1 54 1 
256 1 102 1 300 1 255 1 53 1 33 1 282 1 23 1 8 1 239 1 
137 1 118 1 
256 1 102 1 208 1 301 1 33 1 282 1 218 1 8 1 239 1 
102 1 256 1 90 1 189 1 201 1 282 1 23 1 8 1 225 1 84 1 239 1 300 1 255 1 12 1 33 1 353 1 326 2 370 1 
102 1 256 1 90 1 189 1 201 1 282 1 23 1 8 1 225 1 84 1 239 1 300 1 255 1 12 1 33 1 353 1 326 2 370 1 
102 1 256 1 90 1 189 1 201 1 282 1 23 1 8 1 225 1 84 1 239 1 300 1 255 1 12 1 33 1 353 1 326 2 370 1 
85 1 136 1 289 1 
85 1 136 1 289 1 
159 1 175 1 
159 1 289 1 175 1 
11 1 66 1 
256 1 102 1 258 1 133 2 8 1 84 1 239 1 137 1 33 1 11 1 66 1 353 1 326 1 370 1 371 1 304 2 90 1 119 1 118 1 282 1 373 2 123 2 253 1 338 1 179 1 126 2 78 1 
85 1 136 1 
159 1 289 1 175 1 
133 1 373 1 312 1 123 1 
128 1 198 1 199 2 117 1 233 1 295 1 191 1 346 1 31 1 261 1 335 1 227 2 203 1 359 1 13 2 323 1 79 2 183 1 99 1 
128 1 199 1 198 1 117 1 233 1 191 1 261 1 335 1 227 1 320 1 203 1 359 1 13 1 323 1 79 2 183 1 99 1 
198 1 3 1 199 1 129 1 233 1 107 1 346 1 95 1 227 1 125 1 367 1 203 1 377 1 13 1 
128 1 199 1 198 1 117 1 233 1 295 1 191 1 346 1 261 1 335 1 227 1 203 1 359 1 13 1 323 1 79 2 183 1 99 1 
15 1 
254 1 29 1 189 1 194 1 174 1 374 1 279 1 
314 1 189 2 366 1 317 1 84 1 279 1 35 1 302 1 194 1 353 1 327 1 221 1 252 1 174 1 26 1 205 1 361 1 
158 1 3 1 344 1 209 1 259 1 58 1 110 1 13 1 113 1 353 2 305 1 169 1 120 1 21 3 174 4 176 2 227 1 26 2 361 1 233 2 314 2 189 3 131 1 366 2 317 2 84 2 279 3 242 1 192 1 35 3 325 1 197 1 327 6 248 1 198 1 199 1 332 1 252 2 95 4 96 3 377 1 156 1 290 1 
187 1 56 1 314 2 189 4 30 1 366 2 58 1 317 1 84 1 279 3 110 1 242 1 192 1 349 1 35 3 113 1 194 1 353 1 327 6 169 1 21 4 269 1 94 1 252 2 174 5 96 4 310 1 286 1 26 2 311 1 361 1 
81 1 190 1 314 1 133 1 366 1 58 2 213 1 32 1 84 1 279 2 61 1 63 1 192 1 113 2 353 1 304 1 91 1 331 1 70 1 373 1 252 1 174 2 123 1 51 1 126 1 26 1 182 1 101 1 
314 1 189 1 366 1 252 1 374 1 174 1 279 1 254 1 26 1 194 1 
169 2 189 5 21 5 58 2 174 5 279 5 96 5 110 2 242 2 192 2 35 5 156 1 113 2 101 1 327 10 
189 1 194 1 353 1 317 1 84 1 361 1 
3 1 129 1 233 1 105 1 257 2 4 1 314 2 131 2 366 1 317 4 84 3 279 2 367 1 13 4 353 3 88 1 198 1 199 4 147 1 252 2 285 1 95 1 174 2 227 4 24 2 377 2 26 2 287 1 361 2 
3 1 233 1 133 2 213 1 297 1 299 2 10 1 13 1 65 1 36 1 244 1 325 1 195 1 39 1 220 1 304 2 199 1 198 1 333 1 224 1 373 3 95 1 123 3 227 1 228 1 377 1 51 2 178 1 126 2 78 1 157 1 185 1 
257 1 314 1 189 4 131 1 21 2 366 1 252 1 174 1 96 2 279 2 35 2 26 1 194 2 54 1 327 4 
256 1 282 1 46 1 
256 1 50 1 255 1 66 1 282 1 
256 1 282 1 46 1 
256 1 282 1 46 1 
256 1 282 1 72 1 
256 1 282 1 72 1 
256 1 282 1 72 1 
256 1 282 1 
102 1 8 1 
160 4 91 1 364 1 58 1 172 1 297 2 202 1 264 3 228 2 10 2 299 4 61 1 192 1 178 8 272 2 244 4 182 1 54 1 274 1 220 2 
29 1 160 3 91 1 172 1 58 1 202 1 264 2 61 1 192 1 178 6 272 2 244 3 182 1 54 1 
169 1 160 2 364 1 58 1 297 1 264 2 228 1 110 1 10 1 299 2 192 1 242 1 204 1 178 4 272 1 244 2 220 1 
169 1 160 3 212 1 364 1 94 1 58 1 110 1 264 2 310 2 192 1 242 1 178 7 286 1 272 1 244 4 
160 11 212 1 364 4 7 1 163 1 58 3 297 2 264 9 110 2 61 2 10 2 299 4 242 2 192 3 244 12 220 2 169 2 91 1 22 1 172 1 202 1 228 2 310 2 286 2 178 23 272 5 182 2 54 1 274 2 
310 1 178 1 244 1 
160 1 178 1 286 1 
169 1 160 3 364 1 58 1 297 1 228 1 110 1 264 3 299 2 10 1 242 1 192 1 204 1 178 6 272 2 244 3 156 1 220 1 
187 1 169 1 56 1 160 6 43 1 30 1 269 1 94 1 58 2 297 1 264 1 110 2 228 1 10 1 299 2 310 1 192 1 242 2 178 10 286 1 272 1 244 4 311 1 220 1 
160 3 91 1 364 1 58 1 264 2 61 1 192 1 178 6 272 1 244 3 182 1 
160 1 364 1 163 1 172 1 202 1 297 1 264 2 228 1 61 1 10 1 299 2 178 3 272 1 244 2 182 1 274 1 220 1 
160 5 190 1 91 1 43 1 364 2 58 2 297 1 228 1 264 5 299 2 10 1 61 2 192 2 178 10 272 3 244 5 182 2 220 1 
160 2 43 1 364 1 58 1 297 1 228 1 264 1 10 1 299 2 242 1 178 2 220 1 
169 1 160 2 43 1 364 1 58 1 297 1 264 2 228 1 110 1 10 1 299 2 192 1 242 1 178 4 272 1 244 2 220 1 
160 1 43 1 364 1 163 1 297 3 228 3 264 2 10 3 299 6 61 1 178 3 34 1 272 1 244 2 182 1 274 1 220 3 
2 1 160 16 212 1 364 5 163 1 58 5 297 5 214 1 110 3 264 12 61 3 299 10 10 5 242 3 192 5 34 1 244 18 355 1 220 5 169 3 91 2 43 1 94 1 172 1 202 1 228 5 310 4 204 1 178 34 286 3 272 7 182 3 54 1 274 2 
160 4 30 1 58 1 297 1 264 2 299 2 10 1 61 1 192 1 244 4 220 1 91 1 43 1 94 1 172 1 202 1 228 1 310 1 286 1 178 8 272 2 182 1 54 1 
160 6 212 1 30 1 364 1 58 2 297 2 110 1 264 3 61 1 299 4 10 2 192 1 242 1 244 5 220 2 91 1 43 1 94 1 172 1 202 1 228 2 310 2 178 11 204 1 286 1 272 2 182 1 54 1 
187 1 56 1 160 6 30 1 58 2 297 2 110 2 264 1 299 4 10 2 242 2 192 1 244 5 220 2 169 1 43 1 94 1 269 1 228 2 310 1 286 1 178 11 272 1 311 1 274 1 
187 1 169 1 56 1 160 6 43 1 30 1 269 1 94 1 58 2 297 1 264 1 110 2 228 1 10 1 299 2 310 1 192 1 242 2 178 10 286 1 272 1 244 4 311 1 220 1 
160 4 30 1 58 1 297 1 264 2 299 2 10 1 61 1 192 1 244 4 220 1 91 1 43 1 94 1 172 1 202 1 228 1 310 1 286 1 178 8 272 2 182 1 54 1 
187 1 169 1 56 1 160 6 43 1 30 1 269 1 94 1 58 2 297 1 264 1 110 2 228 1 10 1 299 2 310 1 192 1 242 2 178 10 286 1 272 1 244 4 311 1 220 1 
187 1 56 1 160 6 30 1 58 2 297 3 110 2 264 1 299 6 10 3 242 2 192 1 244 5 220 3 169 1 43 1 269 1 94 1 228 3 310 1 178 11 204 1 286 1 272 1 311 1 274 1 
187 1 56 1 160 6 30 1 58 2 297 3 110 2 264 2 299 6 10 3 242 2 192 1 34 1 244 5 220 3 169 1 43 1 269 1 94 1 228 3 310 1 178 11 286 1 272 2 311 1 274 1 
160 3 91 1 364 3 172 1 58 1 202 2 264 6 61 3 192 1 178 7 272 3 244 4 182 3 
187 1 56 1 160 6 30 1 58 2 297 3 110 2 264 1 299 6 10 3 242 2 192 1 34 1 244 5 220 3 169 1 43 1 269 1 94 1 228 3 310 1 178 11 286 1 272 1 311 1 274 1 
42 1 17 1 133 1 78 1 373 1 14 1 123 1 
42 1 27 1 17 1 133 1 283 1 373 1 123 1 309 1 153 1 78 1 141 1 14 1 
198 1 3 1 129 1 199 1 233 1 29 1 377 1 13 1 95 1 367 1 227 1 
186 1 304 1 3 1 199 1 198 1 233 1 133 1 224 1 373 2 95 1 123 2 227 1 377 1 126 1 36 1 13 1 78 1 325 1 
186 1 3 2 233 1 133 2 165 1 13 1 36 1 325 2 140 1 304 2 198 1 199 1 224 1 70 1 373 2 122 1 95 3 123 2 227 1 24 1 126 1 273 1 78 1 
186 1 3 2 233 1 133 2 165 1 13 2 36 1 325 2 140 1 166 1 304 2 198 1 199 2 70 1 373 2 122 1 95 3 123 2 227 2 337 1 24 1 126 1 273 1 78 1 
313 1 158 1 3 1 233 1 189 1 133 1 213 1 32 1 317 1 84 2 63 1 13 1 194 1 353 2 325 1 116 1 248 1 304 1 198 1 199 1 331 1 70 1 373 1 122 1 95 4 123 1 176 1 227 1 24 1 51 1 126 1 273 1 
158 1 3 1 233 1 189 1 133 1 213 1 32 1 317 1 84 2 63 1 13 1 194 1 353 2 325 1 197 1 248 1 304 1 198 1 199 1 331 1 70 1 373 1 122 1 95 4 123 1 176 1 227 1 24 1 51 1 126 1 273 1 
198 1 199 1 233 1 13 1 365 1 227 1 
199 7 3 2 198 2 233 3 209 1 148 1 365 1 92 1 31 1 71 1 95 3 227 6 375 1 377 2 13 7 87 1 325 1 168 1 99 1 100 1 145 1 
291 1 186 1 3 1 233 1 160 3 133 1 31 1 58 1 297 2 264 2 61 1 10 2 241 1 299 4 192 1 322 1 138 1 36 1 13 1 65 1 244 3 112 1 325 1 195 2 39 2 220 2 247 1 304 1 198 1 199 1 91 1 224 1 373 2 172 1 202 1 95 1 123 2 227 1 228 2 178 6 126 1 272 2 78 2 157 1 182 1 54 1 342 1 
158 1 344 1 58 2 213 1 61 1 63 1 13 1 113 2 353 3 304 1 119 1 70 1 120 1 174 4 123 1 176 1 227 1 126 1 26 2 182 1 361 1 314 2 189 2 190 1 133 1 366 2 317 2 32 1 84 3 279 5 192 2 194 2 197 1 248 1 199 1 91 1 331 1 373 1 252 2 95 2 374 1 254 1 377 1 51 1 287 1 290 1 101 1 
248 1 199 2 3 1 198 1 233 2 209 1 259 1 365 1 31 1 95 2 227 2 13 2 325 1 
337 1 329 1 198 1 3 1 129 1 199 4 233 1 377 1 13 4 31 1 95 1 367 1 227 4 
199 2 266 1 3 1 198 1 233 2 130 1 148 1 95 1 227 2 24 1 193 1 13 2 325 1 168 1 
359 1 128 1 198 1 199 1 233 1 377 1 13 1 261 1 79 1 227 1 
199 2 3 1 198 1 233 1 31 1 95 1 227 2 49 1 13 2 99 1 100 1 
329 1 129 1 199 5 3 2 198 2 233 2 92 1 31 1 95 3 367 1 227 4 24 1 377 1 13 5 145 1 100 1 
329 1 129 1 199 5 3 2 198 2 233 2 92 1 31 1 315 1 95 3 367 1 227 4 24 1 377 1 13 5 100 1 
186 1 304 1 3 1 199 1 198 1 233 1 133 1 373 2 95 1 123 2 227 1 377 1 126 1 36 1 13 1 78 1 325 1 166 1 
199 1 3 1 198 1 233 2 209 1 148 1 95 1 227 1 375 1 24 1 13 1 325 1 168 1 
265 1 164 1 293 1 312 1 
265 1 262 1 318 1 
265 1 164 1 293 1 149 1 78 1 
158 1 293 1 189 1 237 1 133 1 213 1 262 1 318 1 32 1 84 2 63 1 265 1 164 1 165 1 194 1 353 2 140 1 245 1 304 1 119 1 149 1 331 1 70 2 373 1 123 1 177 1 51 1 126 1 
29 1 372 1 235 1 316 1 
372 1 235 1 93 1 134 1 296 1 316 1 303 1 
106 1 303 1 124 1 
200 1 358 1 372 1 162 2 236 1 235 1 93 3 296 1 134 1 316 1 303 3 115 1 
154 1 372 1 235 1 93 2 134 1 296 1 316 1 303 2 284 1 
359 1 117 1 200 1 372 1 277 1 93 1 134 1 296 1 79 1 303 1 74 1 
200 1 372 1 235 1 93 1 134 1 296 1 303 1 
200 1 235 2 93 1 134 1 296 1 316 1 303 1 
200 1 372 1 235 1 69 1 93 2 296 2 134 2 307 1 347 1 303 2 
200 1 372 2 235 1 277 1 93 3 296 1 134 1 316 1 284 2 240 1 37 1 303 3 206 1 
222 1 128 1 200 1 93 2 134 1 296 1 79 1 303 1 284 1 
200 1 372 2 235 1 277 1 93 4 296 2 134 2 316 1 284 2 154 1 180 1 37 1 303 4 
200 1 372 1 235 1 93 1 134 1 296 1 316 1 303 1 
162 1 372 3 236 1 235 2 277 1 93 4 296 1 134 1 316 2 284 2 376 1 37 1 303 4 115 1 
67 1 345 1 200 1 372 1 235 1 93 2 134 1 296 1 316 1 303 2 284 1 280 1 
200 1 372 1 162 2 236 1 235 1 93 3 296 1 134 1 316 1 303 3 115 2 41 1 
0 2 372 2 170 1 288 1 
200 1 93 1 134 1 296 1 303 1 144 1 
240 1 200 1 372 1 235 1 93 2 134 1 296 1 316 1 303 2 284 1 
270 1 
200 1 372 1 235 1 93 1 134 1 296 1 316 1 303 1 
240 1 200 1 372 1 162 1 235 1 93 3 134 1 296 1 316 1 303 3 284 1 
376 1 372 1 37 1 277 1 
372 1 235 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 67 155 148 7 181 150 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 323 352 249 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (272,324) 200 67 155 148 300 355 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 332 6 317 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 332 6 317 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 332 6 317 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 332 6 317 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 332 6 317 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 67 155 148 7 217 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 67 155 148 7 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 67 155 148 300 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 67 155 148 7 181 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
138 9 218 1 320 4 114 6 80 1 350 2 164 1 100 9 24 1 121 2 144 1 330 3 103 1 230 1 27 1 256 1 128 2 304 1 365 1 151 2 366 2 312 2 19 1 339 2 176 1 95 1 341 1 266 5 
138 9 218 1 320 4 114 6 80 1 350 2 164 1 100 9 24 1 121 2 144 1 330 3 103 1 230 1 27 1 256 1 128 2 304 1 365 1 151 2 366 2 312 2 19 1 339 2 176 1 95 1 341 1 266 5 
138 10 218 1 320 5 114 7 80 1 350 2 164 1 100 10 24 1 121 2 144 1 330 4 103 1 230 1 27 1 256 1 128 2 304 1 365 1 151 2 366 2 312 2 19 1 339 2 176 1 95 1 341 1 266 6 
138 7 218 1 320 3 114 4 80 1 350 2 164 1 100 7 121 1 144 1 330 2 103 1 230 1 27 1 256 1 128 2 304 1 365 1 151 2 366 2 312 2 19 1 339 2 176 1 95 1 341 1 266 4 
138 4 256 1 128 1 304 1 320 2 114 3 350 1 151 1 164 1 100 4 24 1 312 1 19 1 339 1 176 1 121 2 330 1 266 3 
138 2 27 1 256 1 128 1 218 1 258 1 350 1 151 1 33 1 164 1 100 2 366 1 53 1 312 1 176 1 266 1 
138 3 256 1 320 1 114 1 350 2 151 2 164 1 100 3 366 1 176 1 330 1 266 2 103 1 
138 9 320 4 114 7 350 2 164 1 100 9 24 1 121 2 297 1 144 1 330 3 103 1 230 1 256 1 304 1 128 1 151 2 366 1 312 1 19 1 339 1 176 1 75 1 266 5 
138 9 320 4 114 7 350 2 164 1 100 9 24 1 121 2 297 1 144 1 330 3 103 1 230 1 256 1 304 1 128 1 151 2 366 1 312 1 19 1 339 1 176 1 75 1 266 5 
271 1 116 1 241 1 
136 2 116 1 123 1 
223 1 268 2 9 1 122 2 160 2 289 2 130 2 343 2 
180 1 268 3 243 1 79 1 160 3 289 2 85 1 185 1 292 1 223 1 189 1 122 2 89 1 195 1 198 1 278 1 146 1 9 1 11 1 201 1 130 2 335 2 171 1 172 1 235 1 237 1 134 1 74 1 238 1 35 1 76 2 342 1 343 2 38 1 177 2 282 2 215 2 
268 1 9 1 190 1 122 1 160 1 289 1 111 1 130 1 343 1 5 1 
57 1 268 1 271 1 159 1 160 1 116 1 141 1 207 1 190 1 296 1 275 1 343 1 55 1 156 1 
268 1 271 1 289 1 160 1 130 1 116 1 141 1 207 1 190 1 122 1 296 1 275 2 343 1 55 1 156 2 
205 1 10 1 275 1 204 1 156 1 
26 1 188 1 271 1 10 1 275 2 116 1 204 1 156 2 
275 1 204 1 156 1 
268 1 9 1 10 1 184 1 289 1 160 1 130 1 190 1 275 1 122 1 111 1 5 1 343 1 156 1 
116 1 
26 1 271 1 88 1 10 1 275 2 116 1 204 1 156 2 
26 1 348 1 271 1 10 2 219 1 161 1 116 1 204 2 153 1 106 2 208 1 275 5 354 2 316 1 251 1 156 5 197 2 253 1 346 1 
223 1 241 1 
146 1 268 2 272 1 79 1 201 1 289 1 160 2 130 1 171 1 185 1 293 1 189 1 74 1 35 1 89 1 76 1 343 1 177 1 282 1 345 1 
268 2 160 2 289 1 130 1 119 1 223 2 122 1 343 2 112 1 
272 1 200 1 41 1 
146 1 199 1 268 1 79 1 201 1 160 1 171 1 185 1 223 1 189 1 74 1 35 1 76 1 89 1 177 1 282 1 
57 1 268 5 289 4 160 5 130 4 22 1 119 1 223 1 293 1 122 1 343 5 90 1 345 2 91 1 
268 2 190 1 334 1 160 2 289 2 111 1 130 2 343 2 
223 1 268 3 122 1 160 3 289 3 130 3 343 3 345 1 
268 1 190 1 160 1 289 1 111 1 130 1 343 1 
119 1 268 1 190 1 122 1 160 1 289 1 130 1 343 1 112 1 
180 1 268 4 243 1 99 1 79 1 160 4 289 3 141 1 85 1 185 1 292 1 223 1 119 1 293 1 189 1 190 1 122 2 296 1 275 1 89 1 278 1 146 1 9 1 11 1 201 1 130 3 335 2 171 1 235 1 74 1 207 1 238 1 35 1 76 1 342 1 343 3 55 1 38 1 177 1 282 1 215 1 345 1 156 1 179 1 
223 1 57 1 268 2 160 2 289 1 130 1 343 2 345 1 91 1 
268 3 289 3 160 3 130 3 116 1 141 1 119 1 293 1 207 1 190 1 122 1 275 1 211 1 296 1 343 3 55 1 156 1 345 2 179 1 
119 1 268 2 272 1 41 1 122 1 160 2 289 2 130 2 343 2 345 1 
146 1 268 1 79 1 201 1 160 1 171 1 185 1 223 1 189 1 74 1 35 1 76 1 89 1 177 1 282 1 
146 1 268 1 201 1 160 1 171 1 185 1 223 1 189 1 35 1 76 1 89 1 177 1 282 1 66 1 242 1 
347 1 180 1 243 2 272 2 41 2 288 1 85 1 187 1 324 1 326 1 63 1 193 1 65 1 229 1 67 1 278 1 200 2 11 1 335 2 172 2 235 1 340 1 342 1 215 4 
268 1 190 1 296 1 334 1 160 1 289 1 130 1 343 1 
367 1 283 1 
367 1 283 1 
92 1 307 1 
92 1 307 1 
92 1 307 1 
147 1 367 1 283 1 
367 1 283 1 105 1 
367 2 213 1 92 1 283 2 307 1 152 1 
147 1 367 1 283 1 
147 1 367 1 283 1 
367 1 273 1 283 1 
367 1 273 1 283 1 
367 1 273 1 283 1 
268 2 139 1 289 2 160 2 223 1 87 1 165 1 166 1 44 1 275 1 359 1 196 1 45 1 104 1 279 1 130 2 105 1 132 1 262 1 367 1 110 1 343 2 283 1 156 1 
279 1 40 1 232 1 116 1 308 2 165 2 261 1 166 2 262 2 367 2 369 1 275 2 213 1 371 1 283 2 359 2 156 2 68 1 104 3 
312 1 339 1 128 1 
312 1 128 1 33 1 
34 1 43 1 339 2 280 1 128 3 33 1 
34 1 43 1 339 1 128 2 290 1 33 1 
34 2 43 1 339 1 128 2 33 1 
347 1 348 2 98 1 271 1 139 1 219 3 116 2 162 1 220 2 44 1 354 1 275 5 250 2 251 1 65 1 123 1 197 1 277 1 229 1 67 1 26 1 126 1 10 4 31 1 204 1 132 1 106 1 155 1 136 3 370 1 156 5 157 2 
347 3 348 6 98 2 271 1 139 4 219 8 116 5 247 5 275 9 354 2 64 1 250 6 251 1 65 3 123 3 252 1 197 2 229 3 67 3 26 1 126 2 255 1 302 1 10 7 204 6 106 2 51 1 205 5 155 3 208 1 136 9 370 1 156 9 157 6 39 1 
347 1 348 2 98 1 271 1 139 1 219 3 116 3 162 1 220 1 354 1 275 3 250 2 65 1 123 2 277 1 197 1 229 1 67 1 126 1 10 2 106 1 155 1 208 1 136 4 156 3 157 2 
347 2 348 4 98 1 271 1 139 2 219 5 116 4 162 1 220 2 354 1 275 4 64 1 250 4 65 2 123 3 197 1 277 1 229 2 67 2 126 1 255 1 10 3 106 1 51 1 155 2 136 7 208 1 156 4 157 4 
35 1 241 1 310 1 
35 1 298 1 
47 1 
35 1 201 1 185 1 
35 1 56 1 
35 1 201 1 
35 3 201 1 245 1 185 1 336 1 310 2 
347 1 113 1 243 3 127 1 303 2 288 3 83 1 60 1 337 1 172 4 186 1 49 1 193 2 329 1 276 1 215 7 229 1 
347 1 113 1 243 3 127 1 303 2 288 3 83 1 60 1 337 1 172 4 186 1 49 1 193 2 329 1 276 1 215 7 229 1 
347 1 113 1 243 3 127 1 303 2 288 3 83 1 61 1 60 1 337 1 172 4 186 1 49 1 193 2 329 1 276 1 215 7 229 1 
347 1 21 1 181 1 303 1 243 1 148 1 150 1 233 1 337 1 172 4 155 1 276 2 215 5 7 1 67 1 
347 1 180 2 113 1 243 4 288 4 60 1 83 1 85 2 118 1 186 1 328 1 193 3 276 1 329 1 229 1 278 2 303 2 127 1 11 2 335 4 71 1 172 5 337 1 215 9 
138 2 114 1 350 1 164 1 100 2 167 1 299 1 228 1 146 1 169 1 28 1 280 1 256 1 46 1 128 2 32 1 171 1 151 1 309 1 33 1 260 1 366 1 312 1 339 1 263 1 176 1 76 1 282 1 177 1 266 1 
138 3 114 2 350 1 164 1 100 3 294 1 299 1 228 1 146 1 169 1 280 1 28 1 256 1 46 1 128 2 32 1 15 1 171 1 151 1 309 1 33 1 366 1 312 1 339 1 263 1 36 1 76 1 282 1 177 1 266 1 
138 2 114 2 164 1 100 2 294 1 299 1 228 1 146 1 169 1 280 1 256 1 46 1 128 2 32 1 15 1 171 1 33 1 366 1 312 1 263 1 339 1 76 1 282 1 177 1 266 1 
146 1 138 1 201 1 46 2 171 1 350 1 151 1 366 2 100 1 236 1 189 1 263 2 35 1 108 1 353 1 36 1 210 1 76 1 214 1 177 1 282 1 178 1 299 2 
138 1 350 1 100 1 299 1 228 1 146 1 169 1 28 1 280 1 46 1 128 2 32 1 15 1 171 1 151 1 309 1 33 1 260 1 366 1 312 1 339 1 263 1 176 1 76 1 282 1 177 1 
333 1 
268 1 271 1 78 1 159 1 219 2 160 1 82 1 116 2 1 1 322 2 323 1 327 2 275 5 123 2 124 1 125 1 126 1 171 1 234 2 136 2 177 2 282 2 343 1 55 1 344 1 284 1 348 2 57 1 58 2 141 1 246 2 351 1 189 2 190 1 354 1 296 1 357 2 251 1 194 2 197 1 26 3 146 1 201 1 204 6 106 1 154 4 207 1 313 1 108 1 35 1 314 1 37 1 76 2 214 1 156 5 
26 1 57 1 268 1 78 1 159 1 160 1 204 2 141 1 351 1 154 2 207 1 88 1 190 1 314 1 296 1 275 3 357 1 55 1 343 1 156 3 344 1 124 1 
57 1 268 1 271 1 78 1 159 1 58 1 160 1 116 1 141 1 351 1 190 1 88 1 275 3 296 1 124 1 26 1 204 1 154 3 207 1 314 1 343 1 55 1 344 1 156 3 
57 1 268 1 271 1 78 1 159 1 58 1 160 1 116 1 141 1 351 1 88 1 190 1 275 3 296 1 357 1 194 1 124 1 26 1 204 2 154 3 207 1 314 1 343 1 55 1 344 1 156 3 
268 1 271 5 78 1 159 1 160 1 219 1 116 5 322 2 323 1 88 1 327 2 275 5 123 2 124 1 281 1 234 2 94 1 135 1 55 1 343 1 344 1 284 1 57 1 348 1 58 4 141 1 246 2 351 1 352 1 190 1 296 1 354 1 357 4 251 1 194 4 197 1 26 3 301 1 204 7 106 1 154 6 207 1 314 1 156 5 
268 1 271 1 78 1 159 1 160 1 219 1 116 2 322 2 323 1 327 2 275 4 123 2 124 1 234 2 136 2 55 1 343 1 344 1 284 1 57 1 348 1 58 2 141 1 246 2 351 1 190 1 296 1 354 1 357 2 251 1 194 2 197 1 26 2 204 4 106 1 154 4 207 1 314 1 313 1 156 4 
348 1 57 1 268 1 271 1 78 1 58 2 159 1 219 1 160 1 116 1 141 1 322 2 246 2 351 1 323 1 352 1 190 1 327 2 275 4 296 1 354 1 357 2 251 1 194 2 123 2 197 1 124 1 26 2 204 4 234 2 106 1 154 4 94 1 207 1 314 1 135 1 343 1 55 1 344 1 156 4 284 1 
348 1 57 1 268 1 271 1 78 1 58 2 159 1 219 1 160 1 116 1 141 1 322 2 246 2 351 1 323 1 352 1 190 1 327 2 275 4 296 1 354 1 357 2 251 1 194 2 123 2 197 1 124 1 26 2 204 4 234 2 106 1 154 4 94 1 207 1 314 1 135 1 343 1 55 1 344 1 156 4 284 1 
57 1 268 1 78 1 159 1 160 1 141 1 351 1 352 1 323 1 190 1 327 1 275 2 296 1 249 1 124 1 234 1 154 2 207 1 314 1 343 1 55 1 344 1 156 2 
348 1 57 1 268 1 271 1 78 1 159 1 58 3 219 1 160 1 116 1 141 1 322 2 246 2 351 1 323 1 352 1 190 1 327 2 354 1 275 4 296 1 357 3 251 1 194 3 123 2 197 1 124 1 26 2 301 1 204 5 234 2 106 1 154 5 94 1 207 1 314 1 135 1 343 1 55 1 344 1 156 4 284 1 
348 1 57 1 268 1 271 1 78 1 159 1 58 3 219 1 160 1 116 1 141 1 322 2 246 2 351 1 323 1 352 1 190 1 327 2 354 1 275 4 296 1 357 3 251 1 194 3 123 2 197 1 124 1 26 2 301 1 204 5 234 2 106 1 154 5 94 1 207 1 314 1 135 1 343 1 55 1 344 1 156 4 284 1 
348 1 57 1 268 1 271 1 78 1 58 2 159 1 219 1 160 1 116 1 141 1 351 1 323 1 190 1 327 2 354 1 275 4 296 1 357 2 251 1 194 2 124 1 197 1 26 2 30 2 204 4 48 2 234 2 106 1 154 4 207 1 206 1 313 1 314 1 136 2 343 1 55 1 344 1 156 4 
347 1 180 1 113 1 272 1 243 3 41 1 288 2 60 1 83 1 85 1 186 1 223 2 193 2 329 1 229 1 278 1 303 1 200 1 11 1 335 2 172 3 235 1 340 1 342 1 215 6 241 1 
347 1 21 1 278 1 180 1 300 1 272 4 200 4 243 1 148 1 11 1 335 2 85 1 233 1 172 3 235 1 173 1 155 1 355 1 342 1 215 4 67 1 
267 1 180 1 268 2 243 1 79 1 41 1 160 2 289 1 85 1 185 1 163 1 223 1 293 1 189 1 89 1 198 1 146 1 278 1 199 1 11 1 201 1 363 1 130 1 171 1 335 2 172 1 235 1 173 1 74 1 35 1 238 1 76 1 282 1 177 1 342 1 343 1 215 2 345 1 
0 2 268 3 113 1 272 7 79 2 41 7 160 3 83 1 85 3 42 1 223 2 226 2 89 2 329 1 229 3 278 3 127 4 11 3 130 1 15 1 335 6 171 2 131 2 172 10 235 3 173 1 238 1 282 3 177 3 343 1 342 3 345 1 347 3 180 3 243 10 288 8 289 1 60 1 185 2 292 2 186 1 293 1 189 1 193 4 102 1 65 2 360 2 198 1 67 2 146 2 303 1 200 7 201 2 311 1 74 2 35 2 155 2 76 3 215 20 
286 1 180 2 268 1 243 1 160 1 289 1 244 1 85 2 189 2 3 1 167 1 25 1 198 1 146 2 278 2 362 1 11 2 201 2 130 1 15 1 306 1 171 2 335 4 172 1 235 2 237 2 35 3 238 1 108 1 340 1 76 8 343 1 282 8 177 7 342 2 214 1 137 1 215 2 345 1 
347 1 180 1 269 1 268 1 272 1 243 2 41 1 288 1 289 1 160 1 85 1 119 1 122 1 193 1 65 1 67 1 229 1 278 1 200 1 11 1 130 1 335 2 172 1 235 1 173 1 155 1 342 1 343 1 215 3 
278 1 347 1 180 1 127 1 272 1 200 1 41 1 11 1 288 1 335 2 85 1 172 2 235 1 340 1 63 1 342 1 215 2 67 1 
278 1 180 1 272 1 200 1 243 2 41 1 11 1 288 1 335 2 85 1 235 1 187 1 340 1 193 1 342 1 215 2 65 1 229 1 
278 1 347 1 180 1 243 2 127 1 272 2 200 2 41 2 11 1 288 2 335 2 85 1 172 2 235 1 155 1 340 1 193 1 342 1 65 1 215 4 229 1 67 1 
278 1 347 1 180 1 127 1 272 1 200 1 362 1 41 1 11 1 288 1 335 2 85 1 172 2 235 1 63 1 342 1 215 2 67 1 
278 1 180 1 272 1 200 1 362 1 243 2 41 1 11 1 288 1 335 2 85 1 235 1 187 1 193 1 342 1 215 2 65 1 229 1 
278 1 347 1 180 1 243 2 127 1 272 2 200 2 362 1 41 2 11 1 288 2 335 2 85 1 172 2 235 1 155 1 193 1 342 1 65 1 215 4 229 1 67 1 
278 1 347 1 180 1 243 2 127 1 272 2 200 2 41 2 11 1 288 2 335 2 85 1 172 2 235 1 155 1 193 1 342 1 65 1 215 4 229 1 67 1 
180 1 268 1 243 1 79 1 160 1 85 1 185 1 292 1 223 1 189 1 89 1 198 1 146 1 278 1 11 1 201 1 171 1 335 2 172 1 235 1 74 1 35 1 238 1 76 1 282 1 177 1 342 1 215 2 
180 1 268 1 243 1 160 1 85 1 185 1 223 1 224 1 189 1 89 1 66 1 198 1 146 1 278 1 11 1 201 1 171 1 335 2 172 1 235 1 35 1 238 1 76 1 282 1 177 1 342 1 215 2 242 1 
278 1 347 1 180 1 243 2 127 1 272 2 200 2 41 2 11 1 288 2 335 2 85 1 172 2 235 1 173 1 155 1 193 1 342 1 65 1 215 4 229 1 67 1 
347 1 180 1 268 1 243 2 272 2 41 2 79 1 288 2 160 1 85 1 185 1 292 1 167 1 193 1 89 1 65 1 229 1 67 1 146 1 278 1 127 1 200 2 11 1 201 1 171 1 335 2 131 1 172 2 235 1 74 1 35 1 155 1 76 1 282 1 177 1 342 1 215 4 
347 1 180 1 268 1 243 1 272 1 41 1 288 1 289 1 160 1 85 1 119 1 122 1 65 1 229 1 67 1 278 1 127 1 200 1 11 1 130 1 335 2 172 2 235 1 50 1 173 1 155 1 342 1 343 1 215 3 
278 1 285 1 180 1 332 1 11 1 328 1 6 1 317 1 335 2 85 1 
278 1 285 1 180 1 332 1 11 1 328 1 6 1 317 1 335 2 85 1 
278 1 285 1 180 1 332 1 11 1 328 1 6 1 317 1 335 2 85 1 
278 1 285 1 180 1 332 1 11 1 328 1 6 1 317 1 335 2 85 1 
278 1 285 1 180 1 332 1 11 1 328 1 6 1 317 1 335 2 85 1 
165 1 261 1 262 1 166 1 367 1 54 1 213 1 232 1 283 1 359 1 
105 1 45 1 
165 1 262 1 166 1 52 1 367 1 4 1 283 1 364 1 359 1 
147 1 321 1 
273 1 152 1 145 1 
279 1 40 1 232 1 116 1 308 1 165 1 261 1 166 1 262 1 367 1 369 1 275 1 213 1 371 1 283 1 359 1 156 1 104 2 
279 1 40 1 232 1 116 1 308 1 165 1 261 1 166 1 262 1 367 1 369 1 275 1 213 1 371 1 283 1 359 1 156 1 104 2 
279 1 40 1 232 1 116 1 308 1 165 1 261 1 166 1 262 1 367 1 369 1 275 1 213 1 371 1 283 1 359 1 156 1 104 2 
147 1 321 1 152 1 
147 1 321 1 152 1 
273 1 145 1 
273 1 152 1 145 1 
87 1 110 1 
268 2 40 1 139 1 160 2 289 2 223 1 143 1 87 1 165 1 166 1 44 1 275 1 359 1 196 1 45 1 104 1 10 1 130 2 105 1 132 1 308 1 262 1 367 1 110 1 343 2 283 1 156 1 
180 1 268 2 243 1 160 2 85 1 356 1 25 1 198 1 146 1 278 1 11 1 201 1 231 1 203 1 171 1 335 2 16 1 172 1 17 1 235 1 173 1 237 2 35 1 238 1 76 2 282 2 342 1 343 2 177 2 137 1 215 2 
146 1 169 1 280 1 128 2 46 1 257 1 291 1 171 1 15 1 33 1 309 1 23 1 312 1 339 1 167 1 76 2 177 2 282 2 228 1 
146 1 169 1 280 1 128 2 46 1 257 1 15 1 171 1 33 1 309 1 312 1 339 1 76 1 177 1 282 1 227 1 228 1 
146 1 201 1 46 1 291 1 140 1 171 1 189 1 35 1 108 1 210 1 76 1 177 1 282 1 214 1 
146 1 169 1 280 1 128 2 46 1 257 1 291 1 15 1 171 1 33 1 309 1 23 1 312 1 339 1 76 1 177 1 282 1 228 1 
254 1 
153 1 348 1 271 1 219 1 161 1 116 1 241 1 
26 1 348 1 271 1 219 1 204 1 116 2 322 1 246 1 106 1 136 1 275 1 354 1 251 1 123 1 156 1 197 1 284 1 
77 1 270 2 271 2 219 9 161 1 116 8 167 1 275 5 123 6 229 2 126 2 170 2 129 1 171 3 338 2 136 12 96 1 177 3 282 3 56 2 347 2 348 8 59 2 245 1 141 2 185 3 189 1 62 1 354 4 251 4 250 6 298 3 65 2 197 4 360 2 67 2 146 4 26 3 201 3 305 2 204 5 310 2 153 1 106 4 72 2 73 1 35 10 155 2 37 1 265 2 76 3 156 5 216 2 157 6 
21 2 347 3 348 5 271 1 217 1 219 9 59 3 115 1 116 4 2 1 275 1 354 2 250 6 251 2 7 1 123 3 65 3 197 2 67 3 229 3 26 1 148 1 14 1 202 1 204 1 233 1 106 2 155 3 136 6 156 1 157 6 
347 2 348 2 268 1 184 1 160 1 59 2 219 2 289 1 83 1 186 1 190 1 354 1 275 1 122 1 251 1 329 1 5 1 197 1 229 1 9 1 130 1 106 1 338 1 135 1 111 1 343 1 240 1 156 1 
348 1 271 1 219 1 161 1 116 1 153 1 106 1 354 1 251 1 197 1 
347 2 348 5 59 2 219 5 116 5 338 1 155 2 136 10 250 5 123 5 65 2 360 1 157 5 67 2 229 2 
26 1 271 1 275 1 116 1 204 1 156 1 
348 2 219 2 82 1 189 2 354 2 275 3 251 1 197 2 125 1 146 1 26 2 126 2 29 1 201 1 204 4 70 1 171 1 106 2 73 2 35 1 108 1 208 1 37 2 96 1 76 4 282 4 177 4 214 1 156 3 
180 1 268 3 243 1 79 1 160 3 289 2 85 1 185 1 292 1 223 1 189 1 122 2 89 1 278 1 146 1 9 1 11 1 201 1 130 2 335 2 171 1 235 1 74 1 238 1 35 1 76 1 282 1 177 1 343 2 38 1 342 1 215 1 
348 2 126 1 271 2 303 1 219 1 116 4 106 1 136 4 354 1 37 1 250 2 251 1 123 2 197 1 157 2 
133 1 262 1 166 1 
262 1 166 1 212 1 110 1 232 1 
133 1 262 1 166 1 
133 1 262 1 166 1 
18 1 262 1 166 1 
18 1 262 1 166 1 
18 1 262 1 166 1 
262 1 166 1 
367 1 283 1 
21 1 278 1 180 1 243 1 217 1 11 1 328 1 215 2 7 1 335 2 85 1 233 1 172 1 
347 1 21 1 278 2 180 2 217 1 243 1 148 1 11 2 84 1 335 4 85 2 233 1 172 3 155 1 328 1 7 1 215 4 67 1 
347 1 278 2 21 1 180 2 217 1 243 5 11 2 288 1 115 1 71 1 335 4 85 2 233 1 172 3 2 1 155 1 193 1 328 1 65 1 7 1 215 8 229 1 67 1 
21 1 347 2 180 2 243 4 217 1 288 2 115 1 85 2 2 1 325 1 328 1 193 1 7 1 65 1 67 2 229 1 278 2 127 1 11 2 13 1 71 1 335 4 233 1 172 7 155 2 215 11 
21 1 278 1 180 1 243 1 217 1 11 1 328 1 215 2 7 1 335 2 85 1 233 1 172 1 
21 1 347 2 180 1 243 6 217 1 288 2 115 1 85 1 2 1 325 1 328 1 193 1 7 1 65 2 67 2 229 2 278 1 127 1 11 1 13 1 335 2 233 1 172 6 155 2 215 12 
347 1 21 1 278 3 180 3 217 1 243 5 11 3 288 1 115 1 71 1 335 6 84 1 85 3 233 1 172 3 2 1 155 1 193 1 328 1 65 1 7 1 215 8 229 1 67 1 
347 1 21 1 278 3 180 3 318 1 217 1 243 5 11 3 288 2 115 1 71 1 335 6 85 3 233 1 172 3 2 1 155 1 193 2 328 1 65 1 7 1 215 8 229 1 67 1 
347 1 113 2 243 4 127 3 288 6 60 1 83 1 172 3 186 3 193 3 329 3 215 7 229 1 
347 1 21 1 278 3 180 3 318 1 217 1 243 5 11 3 288 1 115 1 71 1 335 6 85 3 233 1 172 3 2 1 155 1 193 1 328 1 65 1 7 1 215 8 229 1 67 1 
347 1 278 2 180 2 113 1 303 1 243 4 127 1 11 2 288 3 83 1 60 1 335 4 71 1 85 2 172 4 186 1 193 2 329 1 215 8 229 1 
347 1 113 1 303 1 243 3 288 2 60 1 83 1 172 3 186 1 193 2 329 1 215 6 241 1 229 1 
278 1 347 1 180 1 243 2 127 1 11 1 288 2 84 1 335 2 85 1 172 2 155 1 193 1 65 1 215 4 229 1 67 1 
347 1 21 1 243 1 155 1 148 1 215 4 7 1 233 1 67 1 172 3 
347 1 21 1 300 1 243 1 155 1 148 1 215 4 233 1 67 1 172 3 
243 1 215 1 233 1 
21 1 215 1 172 1 
278 1 347 1 180 1 243 3 127 1 11 1 288 3 335 2 84 1 85 1 172 3 155 1 193 2 215 6 65 1 360 1 67 1 229 1 
21 1 347 2 180 1 243 6 217 1 288 2 115 1 85 1 2 1 325 1 328 1 193 1 7 1 65 2 67 2 229 2 278 1 127 1 11 1 13 1 335 2 233 1 172 6 155 2 215 12 
347 1 243 3 127 1 288 2 83 1 172 3 186 1 193 1 329 1 215 6 229 1 
168 1 278 1 180 1 113 1 127 1 243 2 11 1 288 2 60 1 71 1 335 2 85 1 172 1 186 1 193 1 329 1 215 3 
278 1 347 2 180 1 127 2 243 5 11 1 288 5 83 1 335 2 85 1 172 5 186 2 328 1 193 3 329 2 215 10 240 1 229 2 
278 1 347 1 180 1 127 1 11 1 288 1 335 2 85 1 172 2 328 1 215 2 67 1 
278 1 347 1 180 1 243 2 127 1 11 1 288 2 335 2 85 1 172 2 155 1 193 1 328 1 65 1 215 4 229 1 67 1 
168 1 278 3 180 3 318 1 243 2 127 1 11 3 288 2 71 1 335 6 85 3 172 1 186 1 328 1 193 1 329 1 215 3 
21 3 347 4 180 4 318 1 113 1 181 1 243 11 319 1 288 5 83 1 60 1 84 1 274 1 85 4 186 1 193 3 328 1 329 1 7 1 65 2 67 3 229 3 278 4 303 1 127 2 11 4 148 1 71 1 335 8 233 3 172 13 155 3 215 24 
223 1 57 1 268 1 160 1 343 1 221 1 91 1 
57 1 268 1 12 1 160 1 221 1 86 1 223 1 109 1 209 1 343 1 101 1 91 1 
146 1 189 1 35 1 108 1 201 1 76 1 214 1 282 1 177 1 171 1 241 1 
146 1 268 2 79 1 201 1 289 1 160 2 130 1 171 1 185 1 223 1 189 1 35 1 89 1 76 1 343 1 177 1 282 1 345 1 
146 1 268 2 79 1 201 2 289 1 160 2 130 2 171 1 185 2 223 1 72 1 73 1 190 1 35 3 296 1 89 1 76 1 55 1 343 2 177 1 282 1 56 1 345 1 
268 2 160 2 289 1 81 1 185 2 223 1 190 1 296 1 89 1 146 1 201 2 130 2 171 1 72 1 73 1 35 3 76 2 282 2 177 2 343 2 55 1 56 1 345 1 242 1 
268 1 271 1 184 1 289 1 160 1 116 1 190 1 275 1 122 1 5 1 298 1 9 1 130 1 73 1 35 1 264 1 111 1 76 1 282 1 177 1 343 1 156 1 
146 1 271 1 201 1 81 1 116 1 204 1 141 1 171 1 185 1 310 1 72 1 189 1 73 1 35 4 275 2 265 1 76 3 177 3 282 3 56 1 298 1 156 2 
146 1 76 1 244 1 282 1 177 1 171 1 
286 1 146 3 361 1 201 2 244 1 15 1 306 1 245 1 171 2 185 1 189 2 237 1 3 1 167 1 120 1 35 3 248 1 76 7 177 6 282 7 137 1 
0 1 268 2 113 1 272 1 41 1 79 1 160 2 83 1 85 2 223 2 167 1 89 1 329 1 229 1 278 2 11 2 130 1 335 4 171 1 131 1 172 3 235 2 173 1 282 1 177 1 343 1 342 2 345 1 347 1 180 2 243 3 288 2 289 1 60 1 185 1 292 1 186 1 356 1 193 2 146 1 303 1 200 1 201 1 74 1 35 1 76 1 215 6 
348 1 270 1 271 1 219 1 161 1 116 1 141 1 189 1 354 2 275 3 251 2 298 1 197 2 26 1 10 1 305 1 204 2 310 1 153 1 106 2 35 2 96 1 265 1 76 1 282 1 177 1 156 3 216 1 
77 1 146 2 201 1 244 1 245 1 171 1 185 1 310 1 167 1 35 2 76 2 177 2 282 2 
146 1 349 1 201 1 81 1 171 1 189 1 167 1 108 1 35 1 76 4 177 4 282 4 214 1 
146 2 361 1 183 1 201 1 171 1 185 1 222 1 42 1 73 1 35 1 248 1 76 2 177 2 282 2 
146 1 189 1 312 1 128 1 76 1 282 1 177 1 171 1 33 1 228 1 
146 1 201 1 231 1 15 1 171 1 167 1 35 1 76 2 177 2 282 2 137 1 
146 2 286 1 349 1 201 2 171 2 73 1 189 1 108 1 167 1 3 1 35 3 76 5 214 1 177 4 282 5 137 1 
331 1 146 2 286 1 349 1 201 2 171 2 73 1 189 1 108 1 167 1 35 3 76 5 214 1 177 4 282 5 137 1 
146 1 268 2 201 1 289 1 160 2 130 1 171 1 185 1 223 1 189 1 35 1 89 1 76 1 343 1 177 1 282 1 345 1 242 1 
146 2 73 1 361 1 248 1 35 1 120 1 201 1 76 1 282 1 177 1 171 1 245 1 185 1 
268 1 69 1 160 1 203 1 259 1 16 1 17 1 174 1 343 1 
225 1 69 1 97 1 
223 1 107 1 174 1 69 1 259 1 
271 1 69 1 10 1 116 1 141 1 259 2 223 1 225 1 107 2 174 2 207 1 190 1 296 1 275 2 192 1 97 1 55 1 156 2 179 1 
164 1 256 1 266 1 241 1 
164 1 100 1 138 1 256 1 266 1 350 1 151 1 
366 1 138 1 263 1 
138 3 27 2 256 1 117 1 350 1 151 1 100 3 164 1 368 1 175 1 176 1 266 1 
164 1 100 2 138 2 256 1 114 1 121 1 266 1 350 1 151 1 
138 1 320 1 128 1 350 1 151 1 100 1 312 1 19 1 339 1 176 1 266 1 
100 1 138 1 256 1 176 1 266 1 350 1 151 1 
164 1 100 1 138 1 256 2 176 1 350 1 151 1 
158 1 138 2 8 1 256 1 350 2 151 2 100 2 176 1 266 1 20 1 
138 3 230 1 256 1 320 1 114 2 350 1 151 1 164 1 100 3 176 1 144 1 330 1 266 2 
138 2 280 1 256 1 128 2 114 1 350 1 33 1 151 1 142 1 164 1 100 2 312 1 339 1 176 1 266 1 
138 4 256 1 320 1 114 2 350 2 151 2 164 1 100 4 24 1 176 1 121 1 330 1 266 2 
164 1 100 1 138 1 256 1 176 1 266 1 350 1 151 1 
138 4 27 1 256 2 320 1 114 2 350 1 151 1 164 2 100 4 175 1 368 1 191 1 330 1 266 3 
138 2 256 1 114 1 350 1 151 1 100 2 164 1 176 1 297 1 239 1 266 1 358 1 
138 3 287 1 27 2 256 1 350 1 151 1 100 3 164 1 368 1 175 2 176 1 266 1 
93 2 295 1 266 2 149 1 
100 1 138 1 182 1 176 1 350 1 151 1 
164 1 100 2 138 2 256 1 176 1 114 1 144 1 266 1 350 1 151 1 
315 1 
164 1 100 1 138 1 256 1 176 1 266 1 350 1 151 1 
164 1 100 3 138 3 27 1 256 1 176 1 114 1 144 1 266 1 350 1 151 1 
191 1 320 1 266 1 330 1 
256 1 266 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (43,93,145,149) (43,93,145,149) (43,93,145,149) 3 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 108 (297,340) (297,340) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 108 (297,340) (297,340) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 108 (297,340) (297,340) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 108 (297,340) (297,340) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 108 (73,262) (73,262) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (43,93,145,149) (43,93,145,149) (43,93,145,149) 3 166 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (43,93,145,149) (43,93,145,149) (43,93,145,149) 3 166 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (14,72) 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (99,296) (99,296) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (43,93,145,149) (43,93,145,149) (16,107,225) (16,107,225) (16,107,225) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (43,93,145,149) (43,93,145,149) (16,107,225) (16,107,225) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (43,93,145,149) (43,93,145,149) (16,107,225) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (133,330) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (14,72) 90 13 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (14,72) 90 55 (88,305) (88,305) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
147 1 43 2 3 1 342 1 145 2 202 1 93 2 
297 1 108 1 147 1 43 1 340 1 342 1 145 1 202 1 93 1 
297 1 108 1 147 1 43 1 340 1 342 1 145 1 202 1 93 1 
297 1 108 1 147 1 43 1 340 1 342 1 145 1 202 1 93 1 
297 1 108 1 147 1 43 1 340 1 342 1 145 1 202 1 93 1 
298 1 245 1 138 1 43 4 44 3 348 1 200 2 311 1 351 1 145 1 252 1 202 1 313 1 217 2 147 4 149 3 244 1 93 1 
108 1 147 1 43 1 348 1 249 1 342 1 73 1 145 1 202 1 262 1 93 1 
33 1 147 2 43 3 166 1 3 1 342 1 149 1 145 2 202 1 93 2 
33 1 147 2 43 3 166 1 3 1 342 1 149 1 145 2 202 1 93 2 
66 1 276 1 206 1 347 1 36 1 213 1 24 1 184 1 51 1 236 1 255 1 203 1 215 1 18 1 
294 1 
66 2 294 1 279 1 280 1 91 1 219 1 184 2 255 1 
81 1 66 5 151 1 34 1 120 2 161 1 279 1 209 1 184 5 52 1 255 2 304 1 294 1 317 1 339 1 76 2 284 2 91 1 219 2 
294 1 91 1 291 1 
294 1 196 1 205 2 
206 2 75 1 24 2 213 1 236 2 51 2 18 2 203 2 
206 2 153 2 130 1 71 1 288 1 24 2 213 1 290 1 74 1 236 2 51 2 54 2 75 1 195 1 8 1 221 1 137 1 322 1 324 1 36 1 144 1 163 2 281 1 203 2 64 1 65 1 283 1 307 1 188 1 228 1 357 2 18 2 41 2 
276 1 206 1 215 1 36 1 24 1 213 1 236 1 51 1 18 1 203 1 
66 1 206 2 46 1 208 1 4 1 213 1 24 1 236 2 51 1 215 1 294 1 7 1 276 1 347 1 36 2 302 1 184 1 203 2 91 1 261 1 18 1 
66 2 206 2 208 1 24 2 213 1 236 2 51 2 215 1 294 1 7 1 276 1 347 1 36 2 302 1 184 2 203 2 91 1 261 1 18 2 
66 1 45 1 219 1 184 1 255 1 
66 2 294 1 279 1 91 1 219 1 25 1 184 2 255 1 
66 1 219 1 184 1 
206 1 179 1 153 1 130 1 72 1 24 1 163 1 51 1 236 1 203 1 64 1 188 1 287 1 41 1 
206 2 24 1 236 2 51 1 203 2 338 1 164 1 75 2 18 1 
72 1 90 1 330 1 
9 1 153 1 130 1 71 1 36 1 163 1 64 1 75 1 188 1 41 1 
75 1 291 1 
206 5 179 2 4 1 24 4 51 4 236 5 203 5 164 1 116 1 75 1 158 1 287 1 18 1 178 1 
276 1 206 2 36 1 24 2 236 2 51 2 42 1 203 2 
206 3 75 1 179 1 24 3 18 1 236 3 51 3 203 3 
276 1 206 1 36 1 24 1 236 1 51 1 203 1 
206 1 338 1 164 1 36 1 24 1 236 1 51 1 18 1 203 1 
66 1 206 3 130 1 153 1 310 1 71 1 288 1 208 1 290 1 24 3 213 1 74 1 236 3 51 3 54 1 75 1 195 1 173 1 7 1 137 1 322 1 179 1 36 2 144 1 281 1 302 1 163 1 184 1 203 3 64 1 65 1 164 1 188 1 228 1 287 1 261 1 357 2 18 2 41 1 
206 2 75 1 116 1 179 1 4 1 24 1 236 2 51 1 203 2 
66 1 206 3 179 2 310 1 208 1 36 1 24 3 302 1 184 1 51 3 236 3 203 3 164 1 294 1 355 1 7 1 287 1 261 1 18 1 
206 2 179 1 72 1 24 2 51 2 236 2 203 2 164 1 330 1 18 1 
153 1 130 1 71 1 36 1 163 1 64 1 75 1 188 1 41 1 
153 1 21 1 155 1 210 1 163 1 282 1 236 1 203 1 64 1 75 1 218 1 17 1 319 1 356 1 41 1 
67 1 288 1 72 2 290 1 133 1 194 1 54 4 195 1 322 1 181 1 139 1 301 1 14 1 281 1 144 2 61 1 185 1 165 1 283 2 90 2 228 1 125 1 330 2 357 2 
206 1 208 1 36 1 24 1 236 1 51 1 203 1 42 1 
240 1 140 1 150 1 
39 1 240 2 140 2 335 1 79 1 156 1 
240 1 140 1 
240 1 140 1 
39 1 156 1 
39 1 156 1 
39 1 156 1 
240 1 140 1 344 1 
240 1 140 1 344 1 
240 1 140 1 344 1 
157 1 240 1 140 1 
157 1 240 1 140 1 
157 1 240 1 140 1 
66 1 206 2 300 1 85 1 140 1 182 1 24 2 312 1 184 1 254 1 236 2 51 2 203 2 257 1 214 1 40 1 186 1 28 1 75 1 240 1 242 1 128 1 229 1 150 1 
66 2 207 1 300 2 85 2 140 2 182 2 184 2 312 1 292 1 186 3 63 1 294 1 28 2 259 2 341 1 117 1 240 2 174 1 79 1 
160 1 348 2 249 1 57 2 252 1 
245 1 348 1 252 1 
245 1 348 1 249 1 
160 1 348 3 23 1 249 1 57 1 252 2 
293 1 160 1 348 2 249 1 57 1 252 1 
66 5 1 1 230 2 209 3 194 1 214 1 337 2 294 2 317 1 76 1 6 1 196 1 219 1 81 2 120 1 10 1 181 1 325 1 279 1 349 2 184 5 103 1 61 1 255 4 257 1 146 1 260 1 284 1 125 1 205 3 91 1 229 1 
66 9 1 1 45 5 22 5 209 8 194 3 135 1 337 6 272 1 294 5 317 1 339 1 76 2 6 2 196 3 177 1 219 6 81 6 120 2 35 1 10 2 181 3 279 1 201 1 349 6 184 9 61 3 224 1 255 7 260 3 284 2 125 3 205 9 91 1 229 4 
66 3 230 1 209 3 194 1 337 2 294 3 76 1 339 1 6 1 196 2 81 2 120 1 10 1 181 1 349 2 103 1 184 3 61 1 255 2 146 1 284 1 260 1 91 1 125 1 205 4 229 1 
66 4 230 2 209 5 194 2 135 1 337 4 294 4 76 1 339 1 6 1 196 3 177 1 81 4 120 1 35 1 10 1 181 2 349 4 184 4 103 1 61 2 255 3 146 1 284 1 260 2 91 1 125 2 205 7 229 2 
94 1 
70 1 155 1 291 1 
82 1 155 1 
155 1 210 1 319 1 
155 1 89 1 
155 1 319 1 
264 1 98 1 70 2 155 3 210 1 319 1 
168 1 198 1 332 1 181 1 301 3 144 3 132 1 131 1 61 1 185 2 54 7 303 1 305 1 88 1 271 1 283 4 55 2 167 1 
168 2 152 1 69 1 232 1 288 1 132 5 131 5 194 3 54 37 271 2 172 4 55 2 198 2 321 1 322 1 278 1 345 3 181 6 301 17 121 1 144 18 281 1 61 6 185 8 303 1 122 1 305 1 88 1 283 19 167 9 329 1 260 3 228 1 125 3 357 2 
168 1 198 1 321 1 299 1 322 2 181 1 109 1 288 2 301 4 132 1 131 1 144 4 281 2 61 1 185 3 54 9 305 1 88 1 271 1 283 5 55 2 167 1 228 2 357 4 
168 1 198 1 181 1 301 3 144 3 132 1 131 1 61 1 185 2 54 7 303 1 88 1 305 1 271 1 283 4 55 2 167 1 
168 1 198 1 181 1 301 3 144 3 132 1 131 1 61 1 185 2 54 7 303 1 88 1 305 1 271 1 283 4 55 2 167 1 
331 1 129 2 43 1 153 1 333 1 155 1 114 2 99 1 296 1 30 1 342 2 319 1 323 2 247 1 282 1 163 1 145 1 64 1 147 1 227 1 356 1 41 1 93 1 
129 1 43 1 153 1 191 1 23 1 112 1 114 1 342 1 119 1 245 1 323 1 348 2 249 1 163 1 282 1 252 1 145 1 202 1 16 1 225 1 147 1 106 1 107 1 356 1 41 1 93 1 
129 1 43 2 153 1 191 1 23 1 112 1 114 1 342 1 197 1 245 1 323 1 348 2 249 1 163 1 282 1 252 1 145 1 202 1 16 1 225 1 147 1 106 1 149 1 107 1 356 1 41 1 93 1 
331 1 129 1 43 3 153 1 191 1 23 1 233 1 112 1 114 1 342 1 119 1 245 1 323 1 348 2 249 1 163 1 282 1 252 1 145 1 16 1 147 2 106 1 149 2 107 1 356 1 41 1 93 1 
245 1 129 1 43 2 153 1 323 1 348 2 191 1 23 1 249 1 233 1 282 1 163 1 252 1 112 1 16 1 147 1 114 1 342 1 119 1 149 2 356 1 41 1 
169 1 
66 3 206 1 153 2 46 1 208 1 4 1 155 1 209 1 211 1 236 1 294 1 317 1 76 1 6 1 30 1 7 1 219 2 78 1 319 1 81 1 120 1 346 1 102 1 279 1 36 1 302 1 282 1 163 2 184 3 203 1 64 2 328 1 227 1 284 1 91 1 92 1 261 1 356 1 41 2 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 3 206 1 346 1 46 1 208 1 279 1 102 1 4 1 36 1 211 1 280 1 302 1 184 3 236 1 203 1 294 1 7 1 91 1 219 1 261 1 
66 2 206 1 120 1 346 1 46 1 208 1 102 1 4 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 317 1 76 1 284 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 346 1 46 1 102 1 4 1 208 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 7 1 91 1 261 1 
66 2 206 1 120 1 346 1 46 1 208 1 102 1 4 1 36 1 211 1 302 1 184 2 236 1 203 1 294 1 317 1 76 1 284 1 7 1 91 1 261 1 
0 1 206 1 153 7 47 1 48 1 155 4 288 2 210 1 24 1 290 2 236 1 51 1 134 1 54 2 195 2 30 1 119 1 319 3 80 1 197 1 322 2 179 1 12 1 199 1 324 1 250 1 282 4 163 6 281 2 144 1 253 1 203 1 64 2 65 1 165 1 283 1 307 2 227 1 148 1 228 2 356 3 41 7 357 4 
206 1 20 1 72 1 288 1 24 1 290 1 51 1 236 1 194 1 54 3 195 1 176 1 322 1 181 1 301 1 281 1 144 2 61 1 203 1 185 1 164 1 283 1 90 1 260 1 228 1 125 1 330 1 18 1 357 2 
168 1 72 1 288 1 290 1 131 1 132 1 291 1 54 6 75 2 195 1 55 1 322 1 181 1 301 2 281 1 144 3 61 1 185 2 305 1 88 1 165 1 283 3 90 1 228 1 330 1 357 2 
288 2 72 11 290 2 111 1 194 2 54 14 75 1 172 3 195 1 101 1 176 1 322 2 159 1 324 1 345 3 181 2 301 2 37 1 144 6 281 2 61 1 185 1 122 1 65 1 283 8 167 1 90 11 329 1 260 2 228 2 125 1 330 4 357 4 
206 1 266 1 130 1 153 1 288 1 290 1 24 1 236 1 51 1 54 2 75 1 195 1 176 1 322 1 9 1 11 1 179 1 324 1 163 1 281 1 144 1 38 1 203 1 64 1 65 1 283 1 188 1 228 1 287 1 330 1 41 1 357 2 
206 1 130 1 153 1 72 3 288 2 290 2 24 1 236 1 51 1 194 1 54 7 27 1 195 2 176 1 220 1 320 1 137 1 322 2 179 1 181 1 13 1 301 1 281 2 163 1 144 4 61 1 203 1 185 1 64 1 65 1 283 3 124 1 188 1 260 1 90 3 228 2 125 1 287 1 330 3 357 4 41 1 
67 1 322 1 181 1 72 1 288 1 301 1 290 1 281 1 194 1 54 2 165 1 195 1 283 2 167 1 90 1 228 1 330 1 357 2 
322 1 72 1 288 1 301 1 139 1 290 1 281 1 144 2 61 1 185 1 54 2 165 1 195 1 90 1 228 1 125 1 330 1 357 2 
288 1 72 2 290 1 194 1 54 4 195 1 322 1 181 1 301 2 281 1 144 2 61 1 185 1 165 1 283 2 167 1 260 1 90 2 228 1 125 1 330 2 357 2 
67 1 322 1 199 1 181 1 72 1 288 1 301 1 290 1 281 1 194 1 54 2 195 1 283 2 167 1 90 1 228 1 330 1 357 2 
322 1 199 1 72 1 288 1 301 1 139 1 290 1 281 1 144 2 61 1 185 1 54 2 195 1 90 1 228 1 125 1 330 1 357 2 
322 1 199 1 181 1 72 2 288 1 301 2 290 1 144 2 281 1 61 1 194 1 185 1 54 4 195 1 283 2 167 1 90 2 260 1 228 1 125 1 330 2 357 2 
322 1 181 1 72 2 288 1 301 2 290 1 144 2 281 1 61 1 194 1 185 1 54 4 195 1 283 2 167 1 90 2 260 1 228 1 125 1 330 2 357 2 
130 1 153 1 288 1 71 1 290 1 54 2 75 1 195 1 137 1 322 1 324 1 36 1 281 1 163 1 144 1 64 1 65 1 283 1 188 1 228 1 357 2 41 1 
153 1 21 1 155 1 288 1 210 1 290 1 236 1 54 2 75 1 218 1 195 1 319 1 322 1 83 1 324 1 282 1 163 1 281 1 144 1 203 1 64 1 65 1 283 1 17 1 228 1 356 1 41 1 357 2 
322 1 181 1 72 2 288 1 301 2 290 1 144 2 281 1 61 1 194 1 185 1 54 4 195 1 283 2 167 1 90 2 176 1 260 1 228 1 125 1 330 2 357 2 
130 1 153 1 72 1 288 1 290 1 194 1 54 3 195 1 197 1 320 1 137 1 322 1 181 1 301 1 281 1 163 1 144 2 61 1 185 1 283 1 188 1 260 1 90 1 228 1 125 1 330 1 41 1 357 2 
206 1 288 1 72 1 24 1 290 1 51 1 236 1 194 1 54 3 97 1 195 1 176 1 322 1 181 1 301 1 144 1 281 1 61 1 203 1 164 1 283 2 167 1 260 1 90 1 228 1 125 1 330 1 18 1 357 2 
168 1 154 1 288 3 289 1 5 4 132 1 131 1 96 1 171 2 194 4 54 41 314 1 238 1 315 1 29 1 172 4 55 1 58 1 321 1 299 1 322 3 345 3 181 5 301 8 142 1 162 1 326 1 327 1 281 3 144 21 61 5 185 4 122 3 305 1 88 1 226 1 283 20 167 4 329 1 260 4 228 3 125 4 357 6 
168 1 154 1 288 4 289 1 5 4 132 1 131 1 96 1 171 2 194 4 54 38 314 1 238 1 315 1 29 1 172 4 55 1 58 1 321 2 299 1 322 4 345 3 181 5 301 7 142 1 162 1 326 1 327 1 281 4 144 18 61 4 185 4 122 3 305 1 88 1 226 1 283 20 167 3 329 1 260 4 228 4 125 3 357 8 
168 1 154 1 288 2 289 1 5 4 132 1 131 1 96 1 171 1 194 7 54 52 238 1 315 1 172 4 55 1 58 1 321 1 299 1 322 2 345 4 181 8 301 14 142 1 162 1 37 2 326 1 327 1 281 2 144 25 61 8 185 7 122 2 305 1 88 1 226 1 283 27 167 7 329 2 260 7 228 2 125 7 357 4 
288 2 289 1 268 1 5 2 171 1 194 3 54 19 314 1 172 2 299 1 322 2 345 1 181 3 301 6 142 1 162 1 326 1 281 2 144 10 61 3 185 3 122 1 226 2 283 9 167 3 329 1 260 3 228 2 125 3 357 4 
154 1 288 3 289 1 5 4 96 1 171 2 194 3 54 26 238 1 315 1 172 2 58 1 321 2 299 1 322 3 345 2 181 3 301 4 142 1 162 2 326 1 327 1 144 12 281 3 61 2 185 2 122 2 226 1 283 14 167 2 260 3 228 3 125 2 357 6 
292 1 28 1 300 1 117 1 85 1 240 1 140 1 267 1 182 1 79 1 
128 1 150 1 
309 1 28 1 300 1 85 1 240 1 140 1 212 1 182 1 243 1 
189 1 344 1 
157 1 100 1 335 1 
66 1 207 1 300 1 85 1 140 1 182 1 312 1 184 1 292 1 186 2 63 1 294 1 28 1 259 1 117 1 240 1 174 1 79 1 
66 1 207 1 300 1 85 1 140 1 182 1 312 1 184 1 292 1 186 2 63 1 294 1 28 1 259 1 117 1 240 1 174 1 79 1 
66 1 207 1 300 1 85 1 140 1 182 1 312 1 184 1 292 1 186 2 63 1 294 1 28 1 259 1 117 1 240 1 174 1 79 1 
335 1 189 1 344 1 
335 1 189 1 344 1 
157 1 100 1 
157 1 100 1 335 1 
242 1 254 1 
66 1 206 2 24 2 236 2 51 2 214 1 28 1 75 1 240 1 242 1 274 1 300 1 85 1 140 1 182 1 184 1 254 1 203 2 255 1 257 1 186 1 40 1 63 1 259 1 229 1 128 1 150 1 
0 1 206 2 153 2 47 1 155 1 288 1 290 1 236 2 270 1 54 2 195 1 77 1 176 1 319 1 136 1 322 1 324 1 282 1 281 1 144 1 163 2 203 2 204 1 65 1 283 1 307 2 228 1 126 1 356 1 41 2 357 2 
129 1 153 1 247 1 231 1 155 1 334 1 282 1 163 1 64 1 30 1 227 1 319 1 356 1 41 1 
245 1 129 1 153 1 231 1 348 2 191 1 23 1 249 1 282 1 163 1 252 1 26 1 112 1 306 1 119 1 106 1 356 1 41 1 
245 1 129 1 153 2 231 1 348 2 191 1 23 1 249 1 282 1 163 2 252 1 26 1 112 1 306 1 119 1 106 1 356 1 41 2 197 1 
245 1 129 1 153 1 348 2 191 1 23 1 249 1 143 1 163 1 282 1 252 1 26 1 112 1 119 1 106 1 356 1 41 1 
2 1 
81 1 151 1 120 1 161 1 209 1 294 1 317 1 76 1 284 1 91 1 
81 5 181 2 13 1 209 5 349 5 61 2 194 2 256 1 337 5 294 5 260 2 196 5 205 10 125 2 127 2 
66 1 294 1 279 1 91 1 219 1 184 1 
66 3 153 4 155 1 209 2 53 1 317 1 339 1 76 2 6 2 30 1 219 4 78 2 319 1 81 2 120 2 248 1 279 2 282 1 163 4 184 3 64 2 354 2 328 1 227 1 284 2 92 1 356 1 41 4 263 1 
81 1 151 1 294 1 161 1 209 1 91 1 291 1 
66 1 209 1 294 2 317 1 76 1 196 1 219 1 81 1 120 1 279 1 350 1 184 1 286 1 284 1 285 1 205 1 91 1 
209 4 210 1 98 1 317 2 6 1 219 2 319 1 181 1 13 1 279 1 282 2 184 2 61 1 64 1 62 1 284 2 105 1 66 2 68 1 153 1 70 1 155 4 110 1 336 1 194 1 337 3 294 3 239 1 76 2 196 3 32 1 81 3 82 2 120 2 349 3 163 1 302 1 260 1 205 6 125 1 127 1 356 1 41 1 
66 1 154 1 209 8 96 1 194 2 337 5 315 1 294 5 317 2 172 1 76 2 6 1 318 1 196 3 78 1 219 1 58 1 81 5 120 2 345 1 181 2 279 1 349 5 327 1 184 1 61 2 256 1 122 1 353 1 284 2 260 2 205 6 125 2 91 2 127 2 
66 1 168 1 206 1 232 1 209 2 213 1 24 1 132 1 131 1 236 1 51 1 215 1 317 1 76 1 81 2 276 1 120 1 181 2 347 1 36 1 104 1 184 1 61 1 203 1 256 1 284 1 127 2 18 1 
137 1 206 2 322 1 130 1 153 1 288 1 290 1 213 1 24 2 144 1 281 1 163 1 74 1 51 2 236 2 203 2 54 1 64 1 65 1 75 1 195 1 188 1 228 1 357 2 18 2 41 1 
81 2 120 1 209 1 349 2 337 2 294 4 317 1 76 1 55 1 6 1 284 1 196 2 205 4 91 2 78 1 
117 1 85 1 308 1 182 1 242 1 
85 1 182 1 95 1 
85 1 182 1 95 1 
85 1 182 1 95 1 
295 1 85 1 182 1 
295 1 85 1 182 1 
295 1 85 1 182 1 
85 1 182 1 
240 1 140 1 
168 1 154 1 288 1 131 1 132 1 54 8 172 1 55 1 299 1 322 1 181 1 345 1 301 2 144 4 281 1 61 1 185 2 122 1 88 1 305 1 283 4 228 1 357 2 
168 1 154 1 288 2 132 1 131 1 194 1 54 11 172 2 55 1 299 1 322 2 277 1 345 1 181 2 301 3 144 5 281 2 61 1 185 2 122 1 305 1 88 1 283 6 167 1 329 1 260 1 228 2 357 4 
168 1 154 1 288 3 132 1 131 1 96 1 194 2 54 19 315 1 172 1 55 1 58 1 299 1 321 1 277 1 322 3 345 1 181 3 301 4 327 1 144 10 281 3 61 3 185 3 122 1 305 1 88 1 283 9 167 1 260 2 228 3 125 2 357 6 
168 1 154 1 288 3 132 1 131 1 96 1 194 2 54 17 315 1 172 1 55 1 58 1 321 1 299 1 277 1 322 3 345 1 181 3 301 5 327 1 144 7 281 3 61 2 185 3 122 1 305 1 88 1 283 10 167 2 260 2 228 3 125 1 357 6 
168 1 154 1 288 1 131 1 132 1 54 8 172 1 55 1 299 1 322 1 181 1 345 1 301 2 144 4 281 1 61 1 185 2 122 1 88 1 305 1 283 4 228 1 357 2 
154 1 288 1 96 1 194 2 54 12 315 1 172 1 58 1 299 1 322 1 345 1 181 2 301 2 327 1 144 6 281 1 61 2 185 1 122 1 283 6 167 1 260 2 228 1 125 2 357 2 
168 1 154 1 288 4 132 1 131 1 96 1 194 2 54 18 315 1 172 1 55 1 58 1 299 1 321 2 277 1 322 4 345 1 181 3 301 5 327 1 144 8 281 4 61 2 185 3 122 1 305 1 88 1 283 10 167 2 260 2 228 4 125 1 357 8 
154 1 288 4 96 1 194 3 54 16 314 1 315 1 172 1 58 1 299 1 321 2 322 4 345 1 181 3 301 6 327 1 144 7 281 4 61 2 185 3 122 1 283 9 167 3 260 3 228 4 125 2 357 8 
168 1 181 1 301 6 144 4 131 3 132 3 61 1 54 7 185 3 88 1 305 2 283 3 167 3 
168 1 154 1 288 4 132 1 131 1 96 1 194 2 54 18 314 1 315 1 172 1 55 1 58 1 299 1 321 2 322 4 345 1 181 3 301 4 327 1 144 8 281 4 61 2 185 3 122 1 305 1 88 1 283 10 167 1 260 2 228 4 125 1 357 8 
168 1 299 1 322 1 181 2 232 1 288 1 301 5 281 1 131 2 132 2 144 5 61 2 185 3 54 10 283 5 167 2 228 1 357 2 
299 1 322 1 181 1 288 1 301 1 281 1 194 1 54 2 283 2 167 1 228 1 357 2 
299 1 322 1 181 1 288 1 301 2 144 2 281 1 61 1 194 1 185 1 54 4 283 2 167 1 260 1 228 1 125 1 357 2 
321 1 299 1 322 3 265 1 288 3 301 2 144 2 281 3 131 1 132 1 54 3 185 1 314 1 283 1 167 1 228 3 357 6 
168 1 152 1 69 1 288 4 132 2 131 2 194 3 54 27 314 1 172 4 55 1 321 1 299 1 277 1 322 4 345 3 181 4 301 10 121 1 144 14 281 4 61 4 185 5 122 1 305 1 88 1 283 13 167 5 329 1 260 3 228 4 125 3 357 8 
168 1 321 1 322 2 181 1 288 2 301 3 144 4 281 2 131 1 132 1 61 1 54 8 185 2 88 1 305 1 283 4 55 1 167 1 228 2 357 4 
168 1 181 1 301 2 144 3 131 1 132 1 61 1 291 1 185 2 54 6 88 1 305 1 283 3 55 1 
277 1 322 1 181 1 288 1 301 2 144 2 281 1 61 1 194 1 185 1 54 4 283 2 167 1 260 1 228 1 125 1 357 2 
345 1 181 1 301 2 144 4 61 1 194 1 185 1 54 7 122 1 172 2 283 3 167 1 329 1 260 1 125 1 
168 1 265 1 288 2 132 2 131 2 194 2 54 23 172 2 55 1 321 2 322 2 159 1 181 3 345 2 301 9 37 1 144 12 281 2 61 3 185 5 305 1 88 1 283 11 167 4 260 2 329 1 228 2 125 2 357 4 
54 1 172 1 144 1 
54 1 283 1 345 1 
322 1 277 1 181 1 13 1 288 1 301 3 281 1 144 3 61 1 194 1 54 6 185 2 283 3 167 1 260 1 228 1 125 1 357 2 
154 1 288 1 96 1 194 2 54 12 315 1 172 1 58 1 299 1 322 1 345 1 181 2 301 2 327 1 144 6 281 1 61 2 185 1 122 1 283 6 167 1 260 2 228 1 125 2 357 2 
168 1 181 1 301 2 144 3 131 1 132 1 61 1 54 6 185 1 283 3 167 1 
321 1 322 1 265 1 288 1 301 2 132 1 131 1 144 2 281 1 185 1 54 3 305 1 88 1 283 1 167 1 228 1 357 2 
206 1 75 1 116 1 4 1 236 1 222 1 203 1 
206 1 223 1 180 1 4 1 49 1 236 1 203 1 75 1 116 1 118 1 31 1 222 1 
153 4 155 1 234 1 282 1 163 4 64 1 30 1 227 1 343 1 319 1 356 1 41 4 197 1 
246 1 153 2 12 1 48 1 155 1 250 1 210 1 163 2 282 2 134 1 354 1 319 1 356 1 41 2 
245 1 64 1 153 1 348 1 191 1 249 1 282 1 163 1 356 1 41 1 
153 2 47 1 155 1 163 2 282 1 204 1 119 1 319 1 356 1 41 2 197 1 
153 5 47 1 155 3 163 4 282 2 253 1 64 1 354 1 30 1 227 1 343 1 148 1 319 2 356 2 41 5 197 1 
153 5 47 1 155 3 163 4 282 2 253 1 237 1 64 1 354 1 30 1 227 1 343 1 319 2 356 2 41 5 197 1 
64 1 153 1 155 1 30 1 227 1 282 1 319 1 163 1 356 1 41 1 291 1 
206 1 179 1 153 1 71 1 36 1 24 1 163 1 51 1 236 1 203 1 64 1 75 1 188 1 41 1 
206 1 179 1 153 1 71 1 36 1 24 1 163 1 51 1 236 1 203 1 75 1 354 1 188 1 41 1 
206 2 153 2 21 1 155 3 208 1 234 1 210 2 24 1 235 1 236 2 51 2 75 1 319 2 179 1 36 1 163 2 282 1 203 2 354 1 17 1 89 1 356 1 261 1 41 2 
66 1 206 1 153 1 155 1 213 1 24 1 51 1 236 1 215 1 294 1 175 1 276 1 82 1 347 1 36 1 163 1 184 1 203 1 354 1 91 1 41 1 18 1 
66 2 206 1 70 1 153 1 155 4 210 1 24 1 213 1 235 1 236 1 51 1 336 1 215 1 294 1 219 1 319 1 276 1 82 1 347 1 36 1 163 1 282 1 302 1 184 2 203 1 354 1 89 1 91 1 356 1 18 1 41 1 
153 1 141 1 282 1 163 1 356 1 41 1 
153 6 47 1 155 3 250 1 210 1 163 5 282 3 253 1 134 1 64 2 98 1 307 1 148 1 119 1 319 2 356 2 80 1 41 6 190 1 197 1 
168 1 206 1 153 1 130 1 72 1 288 2 290 2 24 1 132 1 131 1 236 1 51 1 54 5 75 2 195 2 77 1 55 1 176 1 197 1 320 1 137 1 322 2 179 1 181 1 301 1 144 2 281 2 163 1 61 1 203 1 185 1 305 1 88 1 283 3 124 1 188 1 90 1 228 2 357 4 41 1 
168 1 206 1 209 4 213 1 131 1 132 1 51 1 215 1 317 2 219 2 276 1 181 2 279 1 184 3 61 2 62 1 64 1 284 2 105 1 18 1 66 3 151 1 70 1 153 1 232 1 155 2 24 1 336 1 236 1 294 2 76 2 32 1 81 5 82 1 120 2 248 1 347 1 161 1 36 1 302 1 163 1 203 1 255 1 256 1 91 2 127 2 41 1 
68 1 70 1 153 2 155 2 141 1 210 1 163 2 282 2 98 1 319 1 356 1 41 2 197 1 
206 1 179 1 153 1 21 1 155 1 210 1 24 1 282 1 163 1 51 1 236 2 203 2 64 1 75 1 17 1 319 1 356 1 41 1 
153 1 155 1 250 1 210 1 163 1 282 2 134 1 98 1 354 1 319 1 356 1 41 1 190 1 
123 1 75 1 187 1 241 1 275 1 
66 2 206 1 310 1 208 1 24 1 213 1 236 1 51 1 215 1 294 1 115 1 56 1 7 1 241 1 275 1 276 1 84 1 347 1 36 2 302 1 184 2 203 1 255 1 123 1 187 1 91 1 261 1 18 1 
136 1 206 1 270 1 236 1 203 1 187 1 241 1 126 1 275 1 
84 1 56 1 241 1 
298 1 313 1 147 1 43 1 44 1 145 1 202 1 93 1 
298 2 43 4 44 3 200 1 251 1 145 1 15 1 313 2 113 1 147 4 149 2 60 1 93 1 244 1 
33 1 298 1 43 2 44 1 145 1 202 1 216 1 313 1 147 2 316 1 149 1 93 1 
298 1 313 1 113 2 147 3 43 3 44 1 251 1 170 1 145 1 202 1 60 2 93 1 
273 1 44 2 258 1 183 2 
147 1 43 1 87 1 145 1 202 1 93 1 
298 1 313 1 352 1 147 2 43 2 44 1 149 1 145 1 202 1 93 1 
192 1 
298 1 313 1 147 1 43 1 44 1 145 1 202 1 93 1 
298 1 313 1 44 1 291 1 
298 1 313 1 147 1 43 1 44 1 145 1 93 1 
147 1 323 1 342 1 
298 1 313 1 113 1 147 3 43 3 44 1 251 1 193 1 145 1 202 1 60 2 93 1 
298 1 313 1 217 1 147 2 43 2 44 1 149 1 145 1 93 1 
245 1 147 1 43 1 44 1 348 1 200 1 351 1 252 1 145 1 202 1 93 1 
298 1 147 1 43 1 44 1 145 1 202 1 93 1 
298 2 313 1 147 1 43 1 145 1 202 1 93 1 
298 1 43 2 44 1 19 1 50 1 145 2 202 1 147 2 59 1 93 2 
298 1 43 3 44 2 200 1 145 1 202 1 269 1 313 1 352 1 147 3 149 2 93 1 244 1 
298 1 245 1 43 2 44 1 348 2 86 1 249 1 23 1 145 1 252 1 202 1 313 1 147 2 149 1 93 1 
298 1 138 1 43 4 44 2 200 1 145 2 202 1 313 1 217 1 147 4 149 2 93 2 244 1 
352 1 298 1 313 1 147 3 43 3 44 1 149 1 145 1 202 1 60 1 93 1 
44 1 200 1 15 1 244 1 
298 1 44 1 

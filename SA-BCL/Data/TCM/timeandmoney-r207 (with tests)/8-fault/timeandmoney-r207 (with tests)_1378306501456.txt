#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 264 16 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 264 74 173 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 264 74 201 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 264 73 312 216 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 264 74 292 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 199 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 264 260 80 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 264 357 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 264 74 201 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 264 357 228 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 264 74 201 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 264 74 348 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 264 74 348 287 368 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 264 74 348 287 368 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 264 74 348 287 298 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 264 357 228 125 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 264 357 228 125 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 264 74 348 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 264 74 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 230 278 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 264 74 3 17 254 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 264 74 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 264 260 80 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 14 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 264 (217,277) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 264 (104,325) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 264 (104,325) 241 257 (296,310) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 1 89 1 64 1 92 1 174 1 5 1 179 3 181 2 236 1 327 1 156 2 182 4 158 2 331 1 56 5 238 2 240 9 78 2 213 1 20 1 188 1 19 9 21 1 106 1 290 1 128 2 45 2 131 6 
198 1 89 1 64 1 92 1 174 1 5 1 179 3 181 2 236 1 327 1 156 2 182 4 158 2 331 1 56 5 238 2 240 9 78 2 213 1 20 1 188 1 19 9 21 1 106 1 290 1 128 2 45 2 131 6 
198 1 89 1 64 1 92 1 174 1 5 1 179 4 181 2 236 1 327 1 156 2 182 5 158 2 331 1 56 6 238 2 240 10 78 2 213 1 20 1 188 1 19 10 21 1 106 1 290 1 128 2 45 2 131 7 
89 1 64 1 92 1 174 1 5 1 179 2 181 1 236 1 327 1 156 2 182 3 158 2 331 1 56 4 238 2 240 7 78 2 213 1 20 1 188 1 19 7 21 1 106 1 290 1 128 2 45 2 131 4 
198 1 156 1 182 2 89 1 158 1 331 1 56 3 78 1 240 4 19 4 106 1 290 1 128 1 45 1 179 1 131 3 181 2 236 1 
156 1 56 1 331 1 238 1 92 1 78 1 240 2 19 2 188 1 106 1 338 1 290 1 128 1 45 1 291 1 196 1 
182 1 331 1 56 2 238 1 78 2 240 3 19 3 21 1 106 1 290 1 128 2 179 1 131 1 
198 1 89 1 117 1 5 1 179 3 181 2 236 1 182 4 124 1 156 1 158 1 331 1 56 5 238 1 240 9 78 2 213 1 19 9 21 1 106 1 290 1 128 2 45 1 131 7 
198 1 89 1 117 1 5 1 179 3 181 2 236 1 182 4 124 1 156 1 158 1 331 1 56 5 238 1 240 9 78 2 213 1 19 9 21 1 106 1 290 1 128 2 45 1 131 7 
14 1 299 1 282 1 
25 1 63 2 282 1 
86 2 270 2 27 1 190 2 65 2 193 2 30 1 132 2 
86 2 344 1 345 1 27 1 346 1 226 1 65 2 30 1 2 1 227 1 319 1 118 1 8 1 32 1 71 2 154 1 321 1 303 1 209 1 362 1 101 1 309 2 268 2 270 3 104 1 286 1 60 2 43 1 189 1 244 1 289 1 190 3 193 2 194 2 132 2 295 1 250 1 
86 1 98 1 270 1 33 1 204 1 190 1 65 1 193 1 30 1 132 1 
110 1 157 1 299 1 93 1 258 1 270 1 33 1 337 1 352 1 190 1 193 1 274 1 282 1 85 1 
86 1 299 1 65 1 93 2 258 1 270 1 33 1 337 2 352 1 190 1 193 1 274 1 132 1 282 1 85 1 
337 1 16 1 93 1 349 1 264 1 
337 1 74 1 93 1 349 1 264 1 173 1 
337 1 93 1 264 1 
98 1 86 1 65 1 30 1 349 1 93 1 94 1 270 1 33 1 337 1 204 1 190 1 193 1 132 1 
282 1 
201 1 337 1 74 1 93 1 349 1 264 1 
216 1 210 1 337 3 73 1 119 1 67 1 12 1 93 3 349 2 312 1 264 1 
27 1 14 1 
86 1 27 2 307 1 65 1 270 2 190 2 339 1 193 2 132 1 
302 1 177 1 187 1 
345 1 27 1 346 1 50 1 226 1 268 1 227 1 270 1 104 1 8 1 60 1 189 1 154 1 190 1 194 1 209 1 
123 1 86 3 270 3 27 1 190 3 65 1 193 3 132 3 
86 1 270 1 33 1 204 1 190 1 193 1 132 1 
86 1 270 1 33 1 307 1 190 1 339 1 65 1 193 1 132 1 
86 3 344 1 345 1 27 1 346 1 226 1 65 2 30 1 2 1 227 1 93 1 200 1 319 1 258 1 118 1 8 1 33 1 352 1 71 2 154 1 321 1 303 1 209 1 123 1 362 1 101 1 309 1 268 1 104 1 270 4 337 1 60 1 189 1 61 1 190 4 288 1 339 1 193 3 194 1 274 1 132 3 295 1 250 1 85 1 
110 1 86 1 123 1 270 2 27 1 190 2 193 2 130 1 132 1 
123 2 86 3 65 1 76 1 93 1 258 1 270 3 337 1 33 1 352 1 288 1 190 3 61 1 339 1 193 3 274 1 132 3 282 1 85 1 
123 1 86 2 65 1 187 1 270 2 190 2 339 1 177 1 193 2 132 2 
345 1 27 1 346 1 226 1 268 1 227 1 270 1 104 1 8 1 60 1 189 1 154 1 190 1 194 1 209 1 
345 1 27 1 346 1 116 1 226 1 268 1 227 1 277 1 270 1 8 1 60 1 189 1 154 1 190 1 194 1 
344 1 66 1 2 1 302 2 71 2 177 2 97 1 303 1 281 1 283 1 362 1 101 1 239 1 309 4 15 1 269 1 187 2 77 1 164 1 336 1 286 2 147 1 250 1 295 2 
86 1 270 1 33 1 352 1 190 1 140 1 193 1 132 1 
123 1 86 1 345 1 346 1 226 1 227 1 268 1 104 1 270 2 8 1 60 1 189 1 154 1 288 1 190 2 177 1 193 1 194 1 132 1 209 1 
110 1 123 2 86 4 27 1 65 1 270 5 190 5 288 1 339 1 193 5 353 1 47 1 130 1 132 4 
86 2 270 2 33 1 204 1 140 1 190 2 193 2 132 2 
249 1 293 1 
249 1 293 1 
206 1 363 1 
206 1 363 1 
206 1 363 1 
249 1 293 1 356 1 
242 1 249 1 293 1 
178 1 206 1 363 1 249 2 135 1 293 2 
249 1 293 1 356 1 
249 1 293 1 356 1 
176 1 249 1 293 1 
176 1 249 1 293 1 
176 1 249 1 293 1 
251 2 328 1 55 1 276 2 316 1 113 2 211 3 93 2 146 2 337 2 273 1 320 2 10 1 249 2 280 1 135 1 293 2 223 1 282 1 
86 2 251 1 27 1 276 1 113 1 93 1 38 1 237 1 211 1 159 1 146 1 270 2 145 1 337 1 242 1 273 1 190 2 220 1 246 1 193 2 340 1 249 1 293 1 132 2 
156 1 158 1 45 1 
156 1 45 1 196 1 
156 3 205 1 158 2 219 1 84 1 196 1 
156 2 205 1 158 1 75 1 84 1 196 1 
156 2 158 1 205 1 84 2 196 1 
337 1 74 1 292 1 93 1 349 1 264 1 
337 1 199 1 121 1 93 1 349 1 364 1 
25 2 299 1 67 1 349 2 93 3 119 1 202 2 120 1 12 1 262 2 96 1 97 1 282 3 210 1 306 1 308 1 239 1 77 1 164 1 103 3 337 3 105 1 220 1 192 2 82 1 63 4 
25 3 115 1 299 1 67 1 93 4 349 3 202 4 119 1 120 1 262 4 12 1 96 2 97 2 282 4 13 1 210 1 306 1 308 2 239 2 77 2 164 2 103 5 367 1 337 4 105 1 220 2 192 4 82 1 63 7 
8 1 14 1 155 1 
8 1 230 1 
263 1 
8 1 226 1 
305 1 8 3 49 1 189 1 226 1 155 2 
8 1 189 1 226 1 
252 1 8 1 
39 1 167 1 225 1 255 1 239 1 66 2 309 7 15 3 127 1 164 1 286 4 351 1 203 1 129 2 107 1 304 1 295 3 
39 1 167 1 225 1 255 1 239 1 66 2 309 7 15 3 127 1 164 1 286 4 351 1 203 1 129 2 107 1 304 1 295 3 
39 1 167 1 225 1 255 1 239 1 66 2 309 7 15 3 127 1 164 1 286 4 351 1 203 1 129 2 107 1 207 1 304 1 295 3 
48 4 344 1 167 2 225 5 114 3 255 2 317 1 66 5 256 1 2 1 4 1 351 2 203 1 71 2 96 3 97 3 303 1 234 1 136 1 304 2 39 1 309 31 239 4 58 1 127 1 15 10 77 3 285 1 164 4 286 16 129 3 107 1 295 15 250 1 
344 2 167 1 225 1 149 1 150 1 255 1 66 3 2 2 4 1 351 1 71 4 203 1 303 2 304 1 39 1 239 1 309 9 15 4 164 1 286 5 129 2 107 1 250 2 295 4 
345 1 1 1 227 1 152 1 153 1 231 1 122 1 265 1 156 2 360 1 158 1 56 1 331 1 238 1 268 1 126 1 240 2 78 1 19 2 60 1 271 1 106 1 219 1 290 1 128 1 45 1 194 1 108 1 131 1 196 1 
87 1 345 1 1 1 227 1 259 1 153 1 231 1 265 1 156 2 100 1 360 1 158 1 56 1 238 1 268 1 126 1 240 3 78 1 19 3 60 1 271 1 106 1 219 1 290 1 128 1 45 1 194 1 108 1 131 2 196 1 
265 1 87 1 156 2 345 1 100 1 360 1 1 1 158 1 56 1 238 1 227 1 268 1 240 2 19 2 271 1 60 1 153 1 106 1 219 1 290 1 45 1 194 1 108 1 131 2 196 1 
345 2 0 1 1 2 226 2 227 1 259 1 8 2 229 1 154 1 354 1 138 1 330 1 360 2 238 2 268 1 311 1 144 1 240 1 78 1 19 1 243 1 60 1 189 1 272 1 128 1 371 1 194 1 108 2 24 1 275 1 
265 1 156 2 345 1 100 1 360 1 1 1 158 1 331 1 238 1 227 1 126 1 268 1 78 1 240 1 19 1 271 1 60 1 153 1 231 1 219 1 128 1 45 1 194 1 108 1 122 1 196 1 
54 1 
306 1 67 1 268 1 93 1 103 1 260 1 337 1 60 1 119 1 80 1 154 1 12 1 194 1 137 1 264 1 
357 1 110 1 343 1 157 1 57 1 141 1 41 2 93 2 172 1 258 1 270 1 33 1 337 2 352 1 190 1 193 1 274 1 208 1 264 1 85 1 
110 1 343 1 299 1 93 2 172 1 258 1 201 1 33 1 352 1 208 1 264 1 282 1 157 1 74 1 57 1 141 1 41 3 270 1 337 2 190 1 218 1 193 1 274 1 85 1 
357 1 110 1 343 1 157 1 57 1 141 1 41 2 93 2 172 1 228 1 258 1 270 1 33 1 337 2 352 1 190 1 193 1 274 1 208 1 264 1 85 1 
201 1 337 1 74 1 93 1 264 1 
110 1 343 1 25 1 111 1 151 1 67 1 348 1 93 2 172 1 258 1 33 1 352 1 119 1 53 1 12 1 208 1 137 1 264 1 157 1 74 1 57 1 141 1 162 1 41 2 103 1 270 1 337 2 369 1 190 1 192 1 193 1 274 1 63 1 85 1 
110 1 343 1 25 1 111 1 112 1 151 1 67 1 348 1 93 2 172 1 258 1 33 1 352 1 119 1 53 1 12 1 208 1 137 1 264 1 157 1 74 1 57 1 141 1 162 1 41 2 103 1 270 1 287 1 337 2 368 1 369 1 190 1 192 1 193 1 274 1 85 1 
110 1 343 1 25 1 111 1 112 1 151 1 67 1 348 1 93 2 172 1 258 1 33 1 352 1 119 1 53 1 12 1 208 1 137 1 264 1 157 1 74 1 57 1 141 1 162 1 41 2 103 1 270 1 287 1 337 2 368 1 369 1 190 1 192 1 193 1 274 1 85 1 
314 1 110 1 343 1 111 1 298 1 51 1 67 1 348 1 93 2 172 1 258 1 68 1 33 1 352 1 9 1 119 1 12 1 208 1 137 1 264 1 157 1 74 1 57 1 141 1 41 2 103 1 270 1 287 1 337 2 369 1 190 1 192 1 193 1 274 1 63 1 85 1 
357 1 110 1 343 1 157 1 125 1 57 1 141 1 41 2 93 2 172 1 228 1 258 1 270 1 33 1 337 2 352 1 190 1 193 1 274 1 208 1 264 1 85 1 
357 1 110 1 343 1 157 1 125 1 57 1 141 1 41 2 93 2 172 1 228 1 258 1 270 1 33 1 337 2 352 1 190 1 193 1 274 1 208 1 264 1 85 1 
314 1 110 1 343 1 111 1 67 1 51 1 348 1 93 2 172 1 258 1 68 1 33 1 352 1 119 1 12 1 208 1 137 1 264 1 157 1 74 1 57 1 141 1 41 2 103 1 270 1 337 2 369 1 190 1 192 1 193 1 274 1 63 1 85 1 
344 1 167 1 27 2 255 1 66 2 2 1 302 1 203 1 71 2 177 1 303 1 39 1 14 1 362 1 101 1 239 1 309 6 15 2 187 1 269 1 164 1 286 3 129 1 107 1 250 1 295 3 
48 3 344 2 27 1 225 1 28 1 114 3 66 1 317 1 2 2 31 1 118 1 302 11 71 4 177 11 96 2 97 2 303 2 362 2 101 1 309 14 239 2 58 1 15 2 187 4 77 1 365 1 42 1 212 1 164 1 286 8 43 1 295 6 250 2 
86 1 344 1 345 1 27 1 346 1 226 1 50 1 227 1 2 1 8 1 118 1 71 2 154 1 235 1 303 1 209 1 123 1 362 1 101 1 333 1 309 2 268 1 187 1 365 1 104 1 270 2 286 1 60 1 189 1 43 1 190 2 288 1 193 1 194 1 148 1 132 1 250 1 295 1 
86 1 167 1 225 4 226 2 2 3 227 2 8 2 134 2 321 2 177 7 180 1 279 2 96 2 97 2 100 1 101 3 239 3 15 8 335 2 187 7 104 2 286 10 60 3 189 2 288 1 190 3 193 1 107 1 194 3 295 10 250 3 344 3 345 2 27 2 346 2 255 1 66 4 118 1 302 7 203 1 71 6 154 1 303 3 209 2 123 1 39 1 362 3 160 1 309 20 268 3 310 2 77 2 365 1 214 1 164 3 270 3 43 1 129 1 132 1 
344 1 345 2 226 2 91 1 227 1 2 1 8 2 118 1 229 1 71 2 154 1 354 1 303 1 362 1 101 1 309 2 268 2 311 1 102 1 144 1 286 1 60 2 189 1 43 1 272 1 289 1 194 2 24 1 250 1 295 1 
86 1 344 1 65 1 66 1 2 1 302 1 71 2 177 1 96 1 97 1 303 1 362 1 284 1 101 1 239 1 309 3 15 1 187 1 77 1 365 1 270 1 164 1 286 1 190 1 339 1 193 1 132 1 250 1 295 2 
344 1 225 1 362 1 101 1 309 2 239 1 2 1 15 1 187 1 269 1 302 1 286 2 71 2 177 1 147 1 97 1 303 1 250 1 
344 1 362 1 101 1 66 1 309 2 2 1 15 1 187 1 269 1 77 1 164 1 302 1 71 2 177 1 303 1 281 1 250 1 295 2 
344 1 225 1 66 1 2 1 302 2 71 2 177 2 97 1 96 1 303 1 362 1 101 1 239 1 309 4 15 2 269 1 187 2 77 1 164 1 286 2 250 1 295 2 
344 1 225 1 362 1 101 1 309 2 91 1 239 1 2 1 15 1 187 1 302 1 286 2 71 2 177 1 147 1 97 1 303 1 250 1 
344 1 362 1 101 1 66 1 309 2 91 1 2 1 15 1 187 1 77 1 164 1 302 1 71 2 177 1 303 1 281 1 250 1 295 2 
344 1 225 1 91 1 66 1 2 1 302 2 71 2 177 2 97 1 96 1 303 1 362 1 101 1 239 1 309 4 15 2 187 2 77 1 164 1 286 2 250 1 295 2 
344 1 225 1 66 1 2 1 302 2 71 2 177 2 97 1 96 1 303 1 362 1 101 1 309 4 239 1 15 2 187 2 77 1 164 1 286 2 250 1 295 2 
344 1 345 1 27 1 346 1 226 1 227 1 2 1 8 1 118 1 71 2 154 1 321 1 303 1 209 1 362 1 101 1 309 2 268 1 104 1 270 1 286 1 60 1 43 1 189 1 190 1 194 1 250 1 295 1 
344 1 345 1 27 1 346 1 226 1 116 1 227 1 2 1 277 1 8 1 118 1 71 2 154 1 303 1 362 1 101 1 309 2 268 1 270 1 286 1 60 1 43 1 189 1 190 1 194 1 46 1 250 1 295 1 
344 1 225 1 66 1 2 1 302 2 71 2 177 2 97 1 96 1 303 1 362 1 101 1 239 1 309 4 15 2 187 2 77 1 365 1 164 1 286 2 250 1 295 2 
344 1 345 1 346 1 225 1 226 1 66 1 227 1 2 1 152 1 302 2 8 1 71 2 134 1 177 2 321 1 97 1 96 1 303 1 209 1 362 1 101 1 309 4 239 1 268 1 15 2 187 2 77 1 164 1 104 1 270 1 286 2 60 1 189 1 190 1 194 1 295 2 250 1 
86 1 344 1 225 1 65 1 2 1 302 1 71 2 177 1 96 1 97 1 303 1 183 1 362 1 101 1 239 1 309 3 15 1 187 1 77 1 365 1 164 1 270 1 286 2 190 1 339 1 193 1 132 1 295 1 250 1 
48 2 344 2 225 3 90 1 114 1 149 1 169 2 66 3 317 1 2 2 171 1 301 1 350 1 175 2 71 4 96 3 97 3 303 2 329 1 266 1 332 1 309 19 239 3 58 1 15 6 77 3 164 3 286 9 250 2 295 10 
48 2 88 1 344 3 225 2 254 1 90 1 114 2 149 1 169 1 66 2 2 3 171 2 4 2 350 2 175 4 71 6 96 3 97 3 303 3 266 1 332 1 309 26 239 3 58 2 15 4 77 2 17 1 164 2 286 14 79 1 81 1 83 1 295 12 250 3 
48 4 88 1 167 1 225 4 90 1 169 1 317 1 2 3 171 2 4 1 175 4 97 4 96 4 329 1 332 1 239 5 58 3 15 8 17 1 286 20 107 1 295 21 250 3 344 3 254 1 114 3 149 1 255 1 66 4 350 1 34 1 71 6 203 1 303 3 39 1 266 1 309 41 77 4 164 5 79 1 129 1 81 1 83 1 
48 4 88 1 344 4 167 1 254 1 225 3 90 1 114 3 149 1 169 1 255 1 66 4 317 1 2 4 171 2 4 2 350 1 34 1 175 4 203 1 71 8 96 4 97 4 303 4 39 1 329 1 266 1 332 1 309 38 239 5 58 3 15 7 77 3 17 1 164 4 286 20 79 1 129 1 81 1 107 1 83 1 250 4 295 18 
48 4 88 1 344 2 167 1 254 1 225 7 90 1 114 4 149 1 169 1 255 1 66 7 317 2 2 2 171 1 4 1 350 1 175 4 203 1 71 4 96 7 97 7 303 2 39 1 266 1 332 1 309 52 239 8 58 2 15 14 77 7 17 1 42 2 164 8 286 27 79 1 129 1 81 1 107 1 83 1 250 2 295 25 
251 1 146 1 276 1 113 1 10 1 247 1 249 1 135 1 293 1 223 1 
242 1 237 1 
315 1 251 1 146 1 215 1 276 1 113 1 249 1 293 1 313 1 
251 1 328 1 55 1 276 1 316 1 113 1 211 2 93 1 146 1 337 1 273 1 320 1 10 1 249 1 135 1 293 1 223 1 282 1 
251 1 328 1 55 1 276 1 316 1 113 1 211 2 93 1 146 1 337 1 273 1 320 1 10 1 249 1 135 1 293 1 223 1 282 1 
251 1 328 1 55 1 276 1 316 1 113 1 211 2 93 1 146 1 337 1 273 1 320 1 10 1 249 1 135 1 293 1 223 1 282 1 
95 1 178 1 356 1 
95 1 178 1 356 1 
253 1 176 1 
253 1 176 1 178 1 
145 1 159 1 
251 1 86 2 27 1 276 1 113 1 93 1 349 1 320 1 324 1 38 1 55 1 237 1 211 1 159 1 270 2 146 1 145 1 337 1 242 1 190 2 220 1 246 1 340 1 193 2 249 1 293 1 132 2 
95 1 356 1 
253 1 176 1 178 1 
344 1 345 1 226 1 227 1 2 1 8 1 118 1 71 2 303 1 359 1 362 1 101 1 309 2 268 2 102 1 365 1 18 1 270 2 286 1 60 2 43 1 370 1 190 2 289 2 222 1 193 2 194 2 109 1 250 1 197 1 295 1 
156 2 345 1 100 1 1 1 158 1 227 1 268 2 334 1 126 1 152 1 60 2 271 1 52 1 153 1 219 1 45 1 194 2 23 1 196 1 
156 2 345 1 100 1 1 1 158 1 268 1 334 1 126 1 227 1 6 1 60 1 271 1 153 1 219 1 45 1 194 1 196 1 
345 2 0 1 1 1 226 2 227 1 8 2 229 1 154 1 354 1 268 1 311 1 144 1 59 1 60 1 189 1 272 1 371 1 194 1 23 1 24 1 
156 2 345 1 100 1 1 1 158 1 268 1 334 1 126 1 227 1 60 1 271 1 52 1 153 1 219 1 45 1 194 1 23 1 196 1 
170 1 
103 1 69 1 14 1 299 1 192 1 143 1 282 1 
25 1 74 1 151 1 67 1 162 1 103 1 119 1 53 1 192 1 12 1 63 1 137 1 264 1 
305 1 345 2 226 1 227 1 67 1 268 1 8 1 60 1 189 1 119 1 230 1 154 1 278 1 12 1 194 1 322 1 137 1 
48 1 25 3 254 1 114 1 299 1 67 1 3 1 202 4 119 1 262 4 12 1 96 1 97 1 137 1 264 1 282 4 74 1 161 1 239 1 58 1 77 1 17 1 103 5 164 1 192 2 81 1 63 6 
86 1 167 1 112 1 255 1 65 1 30 1 67 1 93 1 94 1 7 1 33 1 119 1 204 1 12 1 137 1 98 1 39 1 161 2 239 2 270 1 164 1 103 2 337 1 190 1 221 1 192 2 193 1 132 1 
299 1 67 1 143 1 103 1 69 1 119 1 192 1 12 1 137 1 282 1 
25 5 161 2 239 2 335 1 77 2 7 1 164 2 103 5 202 5 192 5 262 5 96 2 97 2 63 10 282 5 
74 1 264 1 
306 1 268 1 67 1 103 1 260 1 60 1 119 1 80 1 154 1 194 1 12 1 323 1 137 1 264 1 
86 2 344 1 345 1 27 1 346 1 226 1 65 2 30 1 2 1 227 1 319 1 118 1 8 1 71 2 154 1 321 1 303 1 209 1 362 1 101 1 309 1 268 1 270 3 104 1 60 1 189 1 190 3 193 2 194 1 132 2 295 1 250 1 
25 2 306 1 299 2 67 1 103 1 70 1 202 2 119 1 129 1 192 2 262 2 12 1 63 4 137 1 282 4 
276 1 113 1 232 1 
163 1 145 1 276 1 113 1 223 1 
276 1 113 1 232 1 
276 1 113 1 232 1 
276 1 113 1 139 1 
276 1 113 1 139 1 
276 1 113 1 139 1 
276 1 113 1 
249 1 293 1 
39 1 344 2 167 1 225 1 255 1 239 1 309 8 66 2 2 2 15 3 4 1 164 1 286 4 71 4 203 1 129 1 107 1 303 2 295 4 250 2 
39 1 167 1 14 1 255 1 66 2 239 1 309 6 15 2 164 1 286 3 203 1 129 1 107 1 295 3 
344 1 133 1 225 1 66 1 239 1 309 4 2 1 15 2 77 1 164 1 286 2 71 2 96 1 97 1 303 1 295 2 250 1 
48 2 225 1 114 1 66 1 309 7 317 1 239 1 58 1 15 2 77 1 164 1 286 3 96 1 97 1 295 4 
48 2 344 1 167 2 225 2 114 2 255 2 317 1 66 4 2 1 31 1 4 1 203 1 71 2 97 2 96 2 303 1 39 1 239 3 309 20 15 6 77 2 42 1 164 3 286 10 129 1 107 1 295 10 250 1 
48 1 309 1 295 1 
286 1 114 1 309 1 
344 1 133 1 225 1 309 6 239 1 66 2 2 1 15 3 335 1 77 1 164 1 286 3 71 2 96 1 97 1 303 1 250 1 295 3 
48 1 344 1 88 1 225 1 254 1 114 1 149 1 66 1 2 1 71 2 96 2 97 2 303 1 309 12 239 2 58 1 15 2 77 2 17 1 164 2 286 6 79 1 81 1 295 6 250 1 
39 1 167 1 225 1 255 1 239 1 309 6 66 1 15 2 164 1 286 3 295 3 
344 1 167 1 225 1 255 1 66 1 309 3 2 1 15 2 4 1 286 1 71 2 203 1 44 1 107 1 303 1 295 2 250 1 
344 1 39 1 167 2 225 2 149 1 255 2 66 3 309 10 239 2 2 1 15 5 164 2 286 5 71 2 221 1 303 1 250 1 295 5 
344 1 225 1 149 1 239 1 309 2 2 1 15 1 286 2 71 2 97 1 303 1 250 1 
344 1 225 1 149 1 66 1 239 1 309 4 2 1 15 2 77 1 164 1 286 2 71 2 96 1 97 1 303 1 295 2 250 1 
344 3 329 1 167 1 225 1 149 1 255 1 309 3 66 1 2 3 15 2 4 1 286 1 71 6 44 1 303 3 295 2 250 3 
48 4 344 5 167 3 133 1 225 5 114 3 149 1 255 3 256 1 317 1 66 7 2 5 4 2 203 1 71 10 96 3 97 3 136 1 303 5 39 2 329 1 309 34 239 5 58 1 15 12 77 3 285 1 164 5 286 16 44 1 129 1 107 1 295 18 250 5 
48 1 344 1 167 1 254 1 114 1 149 1 255 1 66 2 2 1 71 2 203 1 303 1 39 1 239 1 309 8 58 1 15 2 164 1 286 4 129 1 107 1 295 4 250 1 
48 2 344 2 167 1 133 1 254 1 225 1 114 1 149 1 255 1 66 2 317 1 2 2 203 1 71 4 96 1 97 1 303 2 39 1 309 11 239 2 58 1 15 3 164 1 286 6 129 1 107 1 295 5 250 2 
48 1 344 3 88 1 167 1 133 1 225 1 254 1 114 1 149 1 255 1 66 3 2 3 4 1 203 1 71 6 96 2 97 2 303 3 39 1 309 19 239 3 58 1 15 4 77 2 17 1 164 3 286 9 79 1 129 1 81 1 107 1 295 10 250 3 
48 1 344 3 88 1 167 1 133 1 225 2 254 1 114 1 149 1 255 1 66 3 2 3 4 1 203 1 71 6 96 2 97 2 303 3 39 1 309 17 239 3 58 1 15 5 77 1 17 1 164 2 286 10 79 1 129 1 81 1 107 1 295 7 250 3 
48 1 344 1 167 1 254 1 114 1 149 1 255 1 66 2 2 1 71 2 203 1 303 1 39 1 239 1 309 8 58 1 15 2 164 1 286 4 129 1 107 1 295 4 250 1 
48 1 344 1 88 1 225 1 254 1 114 1 149 1 66 1 2 1 71 2 96 2 97 2 303 1 309 12 239 2 58 1 15 2 77 2 17 1 164 2 286 6 79 1 81 1 295 6 250 1 
48 1 88 1 344 4 167 1 133 1 225 2 254 1 114 1 149 1 255 1 66 3 2 4 4 2 203 1 71 8 96 2 97 2 303 4 39 1 309 18 239 3 58 1 15 5 77 1 17 1 164 2 286 10 79 1 129 1 81 1 107 1 295 8 250 4 
48 1 88 1 344 4 225 3 254 1 114 1 149 1 66 3 2 4 4 2 71 8 96 3 97 3 303 4 329 1 309 16 239 3 58 1 15 6 77 2 17 1 164 2 286 9 79 1 81 1 295 7 250 4 
39 1 167 3 225 3 255 3 309 7 66 3 239 1 15 6 164 1 286 3 203 1 107 2 295 4 
48 1 88 1 344 4 167 1 225 1 254 1 114 1 149 1 255 1 66 3 2 4 4 2 203 1 71 8 96 2 97 2 303 4 39 1 329 1 309 18 239 3 58 1 15 4 77 1 17 1 164 2 286 10 79 1 129 1 81 1 107 1 295 8 250 4 
110 1 270 1 27 1 184 1 190 1 193 1 130 1 
110 1 99 1 27 1 40 1 184 1 300 1 318 1 270 1 190 1 193 1 130 1 294 1 
8 1 60 1 14 1 272 1 154 1 226 1 194 1 268 1 24 1 
123 1 86 1 345 1 27 1 346 1 226 1 268 1 227 1 270 2 104 1 8 1 60 1 189 1 154 1 190 2 193 1 194 1 132 1 
86 1 252 1 345 1 27 1 224 1 346 1 226 2 227 1 8 3 33 1 352 1 123 1 268 1 104 1 270 2 60 1 189 2 190 2 191 1 193 2 194 1 274 1 132 2 
86 1 252 1 345 1 27 1 224 1 346 1 226 2 227 1 277 1 8 3 33 1 352 1 123 1 268 2 270 2 60 2 189 2 190 2 191 1 62 1 193 2 194 2 274 1 132 2 
8 1 337 1 60 1 224 1 230 1 217 1 194 1 268 1 93 1 264 1 
8 1 337 1 60 1 224 1 230 1 194 1 268 1 93 1 264 1 325 1 
345 1 60 1 72 1 227 1 194 1 268 1 
305 1 345 3 100 1 297 1 185 1 226 2 268 6 227 2 311 1 152 1 8 3 60 7 245 1 189 1 154 2 289 1 72 1 222 1 36 1 194 7 354 1 
86 1 344 2 167 1 345 1 27 2 346 1 226 1 255 1 66 2 227 1 2 2 152 1 302 1 8 1 203 1 71 4 134 1 177 1 321 1 303 2 209 1 123 1 39 1 362 2 101 2 309 6 239 1 268 1 310 1 15 2 187 1 365 1 164 1 270 2 104 1 286 3 60 1 189 1 370 1 190 2 129 1 193 1 107 1 194 1 132 1 295 3 250 2 
296 1 67 1 268 1 349 1 93 1 257 1 241 1 8 1 337 1 60 1 119 1 230 1 154 1 12 1 194 1 323 1 137 1 264 1 325 1 
305 1 345 2 226 1 268 1 227 1 8 1 60 1 189 1 72 1 194 1 263 1 155 1 322 1 
345 2 226 2 227 1 268 2 311 1 144 1 152 1 8 2 229 1 60 2 189 1 154 1 272 1 194 2 354 1 24 1 
345 2 224 1 226 1 160 1 268 2 227 1 311 1 144 1 8 1 60 2 229 1 189 1 194 2 354 1 
156 1 345 1 60 1 153 1 154 1 45 1 227 1 194 1 268 1 196 1 
345 1 100 1 226 1 268 2 227 1 152 1 8 1 60 2 222 1 194 2 109 1 
345 3 297 1 226 3 227 2 152 1 8 4 229 1 154 1 36 1 354 1 268 2 311 1 144 1 60 3 189 1 272 1 222 1 194 3 24 1 
345 3 226 3 227 2 152 1 8 4 229 1 154 1 11 1 36 1 354 1 268 2 311 1 144 1 60 3 189 1 272 1 222 1 194 3 24 1 
123 1 86 1 345 1 27 1 346 1 226 1 268 1 227 1 277 1 270 2 8 1 60 1 189 1 154 1 190 2 193 1 194 1 132 1 
305 1 345 2 224 1 185 1 226 1 268 1 227 1 311 1 8 1 60 1 189 1 194 1 354 1 
326 1 270 1 18 1 359 1 190 1 193 1 267 1 142 1 197 1 
326 1 347 1 248 1 
326 1 27 1 29 1 267 1 142 1 
326 1 26 1 27 1 299 1 347 1 29 2 142 2 267 2 349 1 93 2 258 1 33 1 337 2 352 1 61 1 248 1 274 1 282 1 85 1 
14 1 106 1 56 1 290 1 
19 1 106 1 56 1 290 1 128 1 240 1 78 1 
360 1 238 1 240 1 
168 1 56 1 331 1 92 2 78 1 240 3 19 3 106 1 128 1 290 1 22 1 342 1 
19 2 106 1 56 1 290 1 128 1 131 1 181 1 240 2 78 1 
156 1 182 1 19 1 158 1 56 1 331 1 128 1 45 1 236 1 240 1 78 1 
19 1 106 1 56 1 331 1 128 1 240 1 78 1 
19 1 106 2 331 1 290 1 128 1 240 1 78 1 
56 1 361 1 331 1 78 2 240 2 19 2 106 1 128 2 233 1 341 1 
182 1 331 1 56 2 78 1 240 3 213 1 5 1 19 3 106 1 290 1 128 1 179 1 131 2 
156 2 158 1 56 1 331 1 78 1 240 2 19 2 106 1 219 1 290 1 128 1 45 1 355 1 131 1 196 1 
198 1 182 1 331 1 56 2 78 2 240 4 19 4 106 1 290 1 128 2 179 1 131 2 181 1 
19 1 106 1 56 1 331 1 290 1 128 1 240 1 78 1 
182 1 168 1 56 3 92 1 240 4 78 1 19 4 106 2 290 2 128 1 22 1 179 1 195 1 131 2 
358 1 124 1 56 1 331 1 186 1 78 1 240 2 19 2 106 1 128 1 290 1 131 1 
168 2 56 1 331 1 92 2 78 1 240 3 19 3 106 1 128 1 35 1 290 1 22 1 
366 1 261 1 56 2 165 2 
19 1 331 1 128 1 240 1 78 1 37 1 
19 2 106 1 56 1 331 1 290 1 128 1 131 1 240 2 78 1 5 1 
166 1 
19 1 106 1 56 1 331 1 290 1 128 1 240 1 78 1 
331 1 56 1 92 1 78 1 240 3 5 1 19 3 106 1 128 1 290 1 131 1 
182 1 56 1 179 1 195 1 
106 1 56 1 

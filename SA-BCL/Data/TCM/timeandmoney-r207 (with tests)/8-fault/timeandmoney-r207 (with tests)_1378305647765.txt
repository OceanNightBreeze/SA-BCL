#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 351 67 56 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 351 303 56 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 351 67 302 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 351 67 56 157 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 351 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 256 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 351 303 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 351 303 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 180 1 27 1 260 9 211 1 102 1 133 1 135 2 110 3 162 1 357 2 335 6 337 2 113 1 366 2 245 1 310 4 205 1 116 2 176 1 314 2 119 5 97 1 224 1 316 2 37 1 152 1 126 9 
41 1 180 1 27 1 260 9 211 1 102 1 133 1 135 2 110 3 162 1 357 2 335 6 337 2 113 1 366 2 245 1 310 4 205 1 116 2 176 1 314 2 119 5 97 1 224 1 37 1 316 2 152 1 126 9 
41 1 180 1 27 1 260 10 211 1 102 1 133 1 135 2 110 4 162 1 357 2 335 7 337 2 113 1 366 2 245 1 310 5 205 1 116 2 176 1 314 2 119 6 97 1 224 1 37 1 316 2 152 1 126 10 
41 1 180 1 27 1 260 7 211 1 102 1 133 1 135 2 110 2 162 1 357 2 335 4 337 2 113 1 366 2 245 1 310 3 205 1 116 2 314 2 119 4 97 1 224 1 37 1 316 1 152 1 126 7 
41 1 27 1 260 4 366 1 102 1 310 2 116 1 176 1 314 1 110 1 119 3 162 1 357 1 37 1 316 2 126 4 335 3 337 1 
41 1 27 1 113 1 260 2 366 1 342 1 116 1 95 1 314 1 119 1 135 1 162 1 357 1 224 1 251 1 126 2 
41 1 27 1 260 3 245 1 310 1 116 2 135 1 110 1 119 2 162 1 357 2 126 3 335 1 
41 1 27 1 184 1 260 9 211 1 366 1 102 1 245 1 205 1 310 4 65 1 116 2 176 1 314 1 119 5 135 1 110 3 162 1 357 2 316 2 37 1 126 9 335 7 337 1 
41 1 27 1 184 1 260 9 211 1 366 1 102 1 245 1 205 1 310 4 65 1 116 2 176 1 314 1 119 5 135 1 110 3 162 1 357 2 316 2 37 1 126 9 335 7 337 1 
0 1 309 1 169 1 
215 1 305 2 309 1 
179 2 76 2 323 2 304 1 297 2 24 2 10 1 118 2 
179 3 255 1 323 2 299 1 301 1 129 1 353 1 234 2 107 1 159 1 108 1 161 1 331 1 304 1 265 2 10 1 83 1 198 1 12 2 69 1 92 2 17 1 289 1 146 1 291 2 118 2 76 2 275 1 249 1 223 1 295 1 317 1 297 3 253 1 24 2 320 1 322 1 
179 1 76 1 323 1 85 1 244 1 304 1 15 1 297 1 24 1 118 1 
179 1 0 1 243 1 219 1 185 1 244 1 309 1 75 1 237 1 98 1 8 1 297 1 360 1 24 1 
179 1 0 1 323 1 243 2 219 1 185 1 244 1 309 1 118 1 76 1 237 1 98 1 8 2 297 1 24 1 
243 1 270 1 121 1 340 1 8 1 
170 1 0 1 243 2 270 1 340 1 309 1 53 1 8 2 
243 1 270 1 8 1 
179 1 323 1 85 1 243 1 244 1 15 1 340 1 118 1 76 1 304 1 8 1 350 1 297 1 24 1 
309 1 
170 1 0 1 243 2 270 1 340 1 309 1 261 1 8 2 
170 1 0 1 243 5 270 2 202 1 89 1 340 2 309 1 145 1 247 2 312 1 94 2 109 1 274 1 120 2 163 1 8 5 196 1 318 1 
10 1 169 1 
99 1 179 2 323 1 45 1 118 1 76 1 297 2 24 2 10 2 
14 1 32 1 300 1 
179 1 12 1 69 1 299 1 255 1 301 1 92 1 17 1 156 1 234 1 108 1 161 1 331 1 297 1 10 1 322 1 
179 2 12 1 69 1 255 1 299 1 323 1 14 1 301 1 92 1 17 1 234 1 236 1 76 1 108 1 161 1 331 1 297 2 24 1 322 1 112 1 
236 1 179 3 76 3 323 3 297 3 24 3 118 1 10 1 
179 1 76 1 323 1 85 1 244 1 297 1 24 1 
99 1 179 1 76 1 323 1 244 1 45 1 297 1 24 1 118 1 
179 4 255 1 299 1 323 3 301 1 185 1 45 1 353 1 234 1 159 1 236 1 108 1 161 1 237 1 331 1 333 1 304 1 195 1 8 1 265 2 10 1 83 1 112 1 69 1 12 1 243 1 219 1 244 1 92 1 17 1 289 1 291 1 118 2 76 3 275 1 249 1 223 1 295 1 98 1 297 4 253 1 24 3 320 1 322 1 
179 2 76 1 236 1 323 1 122 1 297 2 360 1 24 2 10 1 
179 3 323 3 243 1 219 1 185 1 244 1 45 1 309 1 118 1 236 2 76 3 237 1 333 1 98 1 177 1 8 1 297 3 24 3 112 1 
179 2 323 2 14 1 300 1 45 1 118 1 236 1 76 2 297 2 24 2 
179 1 12 1 69 1 299 1 255 1 301 1 92 1 17 1 234 1 161 1 108 1 331 1 297 1 10 1 322 1 
179 1 12 1 299 1 255 1 301 1 92 1 17 1 234 1 30 1 161 1 108 1 331 1 150 1 297 1 10 1 
352 1 300 2 353 2 107 2 4 1 159 1 32 2 263 1 51 1 238 1 265 2 14 2 16 1 308 1 289 1 290 1 291 4 115 1 117 1 275 1 294 1 223 1 253 1 320 1 
179 1 76 1 323 1 237 1 244 1 365 1 297 1 24 1 
179 5 323 4 339 1 45 1 118 1 236 2 76 4 122 1 284 1 297 5 360 1 24 5 10 1 112 1 
179 2 76 2 323 2 85 1 244 1 365 1 297 2 24 2 
324 1 269 1 
324 1 269 1 
332 1 23 1 
332 1 23 1 
332 1 23 1 
324 1 269 1 370 1 
324 1 269 1 370 1 
324 1 269 1 370 1 
324 1 269 1 3 1 
5 1 324 1 269 1 
72 1 324 2 269 2 332 1 20 1 23 1 
324 1 269 1 3 1 
324 1 269 1 3 1 
324 2 269 2 243 2 271 1 309 1 173 1 221 1 46 1 174 2 329 1 19 2 315 2 277 1 20 1 151 3 124 2 8 2 372 2 229 1 
179 2 323 2 324 1 181 1 42 1 29 1 325 1 5 1 262 1 8 1 239 1 10 1 269 1 243 1 271 1 76 2 19 1 315 1 151 1 124 1 62 1 297 2 372 1 24 2 
314 1 366 1 337 1 
314 1 251 1 366 1 
128 1 136 1 280 1 251 1 366 3 337 2 
128 1 136 1 251 1 187 1 366 2 337 1 
128 2 136 1 251 1 366 2 337 1 
170 1 0 1 243 4 270 1 87 1 88 1 340 3 309 1 190 1 358 1 8 4 127 1 
170 1 0 1 243 4 270 2 340 3 309 1 367 1 327 1 48 1 358 1 121 1 8 4 127 1 
0 1 257 1 64 2 190 1 325 1 215 2 263 1 358 1 305 4 34 1 8 3 196 3 199 2 243 3 87 1 88 1 16 1 308 1 340 2 309 3 145 1 117 1 247 1 94 1 120 1 318 2 
0 1 257 2 64 4 104 1 190 1 325 2 215 3 263 2 358 1 305 7 34 1 8 4 196 5 199 4 243 4 87 1 88 2 16 2 308 2 340 3 309 4 145 1 343 1 117 2 247 1 94 1 120 1 39 1 318 4 
108 1 363 1 169 1 
108 1 96 1 
252 1 
108 1 301 1 
255 1 363 2 108 3 301 1 7 1 281 1 
255 1 108 1 301 1 
108 1 21 1 
242 1 286 1 155 1 353 3 144 1 115 3 291 7 117 1 107 4 31 1 294 2 263 1 38 2 216 1 371 1 359 1 307 1 
242 1 286 1 155 1 353 3 144 1 115 3 291 7 117 1 107 4 31 1 294 2 263 1 38 2 216 1 371 1 359 1 307 1 
242 1 286 1 155 1 353 3 144 1 115 3 291 7 117 1 107 4 31 1 330 1 294 2 263 1 38 2 216 1 371 1 359 1 307 1 
257 3 155 2 353 15 105 1 107 16 191 4 31 2 263 4 216 1 359 1 265 2 35 3 307 5 242 2 286 1 16 3 308 3 36 1 144 1 18 1 291 31 115 10 117 4 275 1 347 1 294 5 223 1 38 3 278 1 371 2 78 1 351 1 253 1 320 1 
242 1 286 1 36 1 155 1 58 1 144 1 353 4 115 4 291 9 117 1 107 5 31 1 275 2 294 3 263 1 223 2 38 2 216 1 371 1 40 1 265 4 253 2 307 1 320 2 
41 1 299 1 258 1 230 1 27 1 260 2 280 1 188 1 234 1 161 1 68 1 135 1 162 1 357 1 164 1 335 1 337 1 336 1 12 1 362 1 366 2 92 1 116 1 314 1 119 1 348 1 251 1 279 1 126 2 374 1 
41 1 299 1 258 1 230 1 260 3 280 1 188 1 234 1 355 1 161 1 135 1 162 1 357 1 164 1 335 2 337 1 336 1 12 1 362 1 366 2 92 1 116 1 314 1 346 1 293 1 119 1 348 1 251 1 126 3 374 1 
41 1 299 1 258 1 260 2 280 1 234 1 161 1 135 1 162 1 164 1 335 2 336 1 337 1 12 1 362 1 366 2 92 1 346 1 314 1 293 1 119 1 348 1 251 1 126 2 374 1 
299 1 258 2 301 1 260 1 234 1 158 1 355 1 108 1 161 1 135 2 357 1 164 2 12 1 71 1 362 2 142 1 74 1 114 1 92 1 17 1 116 1 250 1 126 1 
299 1 258 1 230 1 27 1 260 1 280 1 188 1 234 1 161 1 68 1 135 1 357 1 164 1 337 1 336 1 12 1 362 1 366 2 92 1 116 1 314 1 293 1 348 1 251 1 126 1 374 1 
26 1 
179 1 0 1 185 1 234 2 47 1 49 4 237 1 282 1 8 5 196 2 240 1 241 1 12 2 243 5 244 1 90 1 92 2 246 2 17 2 93 1 247 1 248 1 94 1 98 1 297 1 210 2 24 1 25 2 298 1 299 1 28 2 301 1 354 2 66 1 158 1 108 1 161 1 215 2 305 2 166 1 34 1 360 1 170 3 71 1 270 6 219 1 309 2 311 2 75 1 274 1 120 1 123 2 225 1 318 2 319 1 
179 1 28 1 185 1 261 1 47 1 49 2 237 1 282 1 8 3 360 1 241 1 170 1 243 3 219 1 270 2 244 1 75 1 98 1 297 1 24 1 319 1 298 1 
179 1 0 1 185 1 261 1 47 1 49 3 237 1 282 1 8 3 360 1 241 1 170 1 243 3 270 1 219 1 244 1 309 1 75 1 98 1 297 1 24 1 319 1 298 1 25 1 
179 1 0 1 28 1 185 1 261 1 47 1 49 3 237 1 282 1 8 3 360 1 241 1 170 1 243 3 219 1 270 2 244 1 309 1 246 1 75 1 98 1 297 1 24 1 319 1 298 1 25 1 
179 1 178 1 0 5 28 4 185 1 261 1 354 2 47 1 49 6 215 2 237 1 282 1 52 1 8 5 196 1 360 1 241 1 70 1 170 3 243 5 270 7 219 1 244 1 90 1 309 5 246 4 311 2 75 1 247 1 248 1 94 1 274 1 120 1 349 1 98 1 123 2 79 1 297 1 210 2 24 1 318 1 25 4 319 1 298 1 
179 1 0 1 185 1 47 1 49 4 237 1 282 1 8 4 196 1 241 1 243 4 244 1 90 1 246 2 93 1 247 1 248 1 94 1 98 1 297 1 24 1 210 2 298 1 25 2 28 2 354 2 215 2 305 2 360 1 170 2 219 1 270 4 309 2 311 2 75 1 274 1 120 1 123 2 319 1 318 1 
179 1 0 1 28 2 185 1 354 2 47 1 49 4 215 2 237 1 282 1 52 1 8 4 196 1 360 1 241 1 170 2 70 1 243 4 270 4 219 1 244 1 90 1 309 1 246 2 311 2 75 1 247 1 248 1 94 1 274 1 120 1 98 1 123 2 297 1 79 1 210 2 24 1 25 2 318 1 319 1 298 1 
179 1 0 1 28 2 185 1 354 2 47 1 49 4 215 2 237 1 282 1 52 1 8 4 196 1 360 1 241 1 170 2 70 1 243 4 270 4 219 1 244 1 90 1 309 1 246 2 311 2 75 1 247 1 248 1 94 1 274 1 120 1 98 1 123 2 297 1 79 1 210 2 24 1 25 2 318 1 319 1 298 1 
179 1 0 1 153 2 28 2 43 1 185 1 47 1 49 4 237 1 282 1 305 2 8 4 196 1 360 1 241 1 170 2 70 1 243 4 270 4 219 1 244 1 204 2 309 1 246 2 341 1 311 2 75 1 247 1 248 1 94 1 274 1 120 1 98 1 209 1 297 1 210 2 24 1 25 2 318 1 319 1 298 1 
179 1 0 1 28 3 185 1 354 2 47 1 49 5 215 2 237 1 282 1 52 1 8 4 196 1 360 1 241 1 170 2 70 1 243 4 219 1 270 5 244 1 90 1 309 1 246 3 311 2 75 1 247 1 248 1 94 1 274 1 120 1 349 1 98 1 123 2 79 1 297 1 210 2 24 1 318 1 319 1 298 1 25 3 
179 1 0 1 28 3 185 1 354 2 47 1 49 5 215 2 237 1 282 1 52 1 8 4 196 1 360 1 241 1 170 2 70 1 243 4 219 1 270 5 244 1 90 1 309 1 246 3 311 2 75 1 247 1 248 1 94 1 274 1 120 1 349 1 98 1 123 2 79 1 297 1 210 2 24 1 318 1 319 1 298 1 25 3 
179 1 0 1 43 1 185 1 47 1 49 4 237 1 282 1 8 4 196 1 241 1 243 4 244 1 204 2 246 2 93 1 247 1 248 1 94 1 98 1 297 1 24 1 210 2 298 1 25 2 153 2 28 2 305 2 360 1 170 2 219 1 270 4 309 1 311 2 75 1 274 1 120 1 319 1 318 1 
300 1 353 3 4 1 107 3 159 1 32 1 263 1 216 1 265 2 169 1 10 2 242 1 14 1 286 1 144 1 289 1 115 2 291 6 117 1 275 1 294 2 223 1 38 1 371 1 253 1 320 1 
256 1 257 2 101 1 300 4 353 6 105 1 107 8 191 3 159 1 32 11 263 2 265 4 35 3 10 1 83 1 307 1 285 1 14 11 16 2 308 1 289 2 146 1 206 1 115 2 291 14 117 1 77 1 275 2 294 1 223 2 351 1 253 2 320 2 
179 2 255 1 299 1 323 1 101 1 301 1 300 1 212 1 353 1 156 1 234 1 107 1 159 1 236 1 108 1 161 1 331 1 283 1 265 2 10 1 112 1 83 1 267 1 69 1 12 1 92 1 17 1 289 1 291 2 146 1 76 1 275 1 223 1 297 2 24 1 253 1 322 1 320 1 
12 1 179 1 323 1 101 1 92 1 220 1 17 1 289 1 234 1 236 1 76 1 159 1 275 1 223 1 297 1 253 1 265 2 24 1 112 1 320 1 
179 1 323 1 299 2 1 1 301 2 353 1 234 8 4 1 107 1 236 1 159 2 158 1 6 1 161 2 108 3 111 1 265 4 83 1 198 2 268 1 12 8 71 1 92 7 17 2 289 2 146 1 291 2 76 1 147 1 208 1 275 2 293 1 223 2 279 1 125 1 297 1 24 1 253 2 320 2 
179 1 323 1 257 1 101 1 300 1 45 1 353 2 107 1 159 1 32 1 263 1 265 2 14 1 201 1 16 1 308 1 289 1 115 1 291 3 118 1 117 1 76 1 275 1 294 1 223 1 297 1 253 1 24 1 320 1 
14 1 300 1 16 1 289 1 290 1 115 1 291 2 4 1 107 2 159 1 275 1 32 1 263 1 223 1 265 2 253 1 307 1 320 1 
14 1 352 1 300 1 308 1 353 2 289 1 115 1 291 2 117 1 4 1 159 1 275 1 294 1 32 1 223 1 265 2 253 1 320 1 
257 1 300 2 353 2 107 2 4 1 159 1 32 2 263 1 265 2 307 1 14 2 16 1 308 1 289 1 291 4 115 2 117 1 275 1 294 1 223 1 253 1 320 1 
14 1 300 1 16 1 289 1 290 1 115 1 291 2 107 2 159 1 147 1 275 1 32 1 263 1 223 1 265 2 253 1 307 1 320 1 
14 1 352 1 300 1 308 1 353 2 289 1 115 1 291 2 117 1 159 1 147 1 275 1 294 1 32 1 223 1 265 2 253 1 320 1 
257 1 300 2 353 2 107 2 159 1 32 2 263 1 265 2 307 1 14 2 16 1 308 1 289 1 291 4 115 2 117 1 147 1 275 1 294 1 223 1 253 1 320 1 
257 1 300 2 353 2 107 2 159 1 32 2 263 1 265 2 307 1 14 2 16 1 308 1 289 1 291 4 115 2 117 1 275 1 294 1 223 1 253 1 320 1 
179 1 255 1 299 1 301 1 353 1 234 1 107 1 159 1 161 1 108 1 331 1 265 2 10 1 83 1 69 1 12 1 92 1 17 1 289 1 146 1 291 2 275 1 223 1 295 1 297 1 253 1 322 1 320 1 
179 1 255 1 299 1 301 1 353 1 30 1 234 1 107 1 159 1 161 1 108 1 331 1 265 2 10 1 83 1 12 1 73 1 92 1 17 1 289 1 146 1 291 2 275 1 223 1 150 1 297 1 253 1 320 1 
257 1 101 1 300 2 353 2 107 2 159 1 32 2 263 1 265 2 307 1 14 2 16 1 308 1 289 1 291 4 115 2 117 1 275 1 294 1 223 1 253 1 320 1 
179 1 255 1 299 1 257 1 300 2 301 1 353 2 234 1 107 2 159 1 161 1 108 1 32 2 331 1 263 1 265 2 217 1 307 1 69 1 12 1 14 2 16 1 308 1 92 1 289 1 115 2 291 4 117 1 275 1 294 1 223 1 295 1 279 1 297 1 253 1 322 1 320 1 
179 1 323 1 257 1 101 1 300 1 45 1 353 1 107 2 159 1 32 1 263 1 265 2 307 1 14 1 16 1 308 1 289 1 115 1 60 1 291 3 117 1 118 1 76 1 275 1 223 1 297 1 253 1 24 1 320 1 
257 3 231 2 183 1 186 1 353 10 105 1 157 1 107 9 191 2 67 1 263 3 265 4 168 1 35 1 307 3 56 1 16 3 172 1 308 3 291 19 115 6 117 3 275 2 294 3 223 2 351 1 40 1 253 2 63 2 320 2 
231 1 56 2 353 2 291 4 157 1 107 2 191 1 275 1 67 2 223 1 351 1 40 1 35 1 168 1 265 2 253 1 320 1 
257 2 231 3 186 1 353 11 105 1 157 1 107 10 191 4 302 1 67 2 303 1 263 2 265 4 168 1 35 3 307 2 56 1 16 2 172 1 308 2 291 21 115 3 117 2 275 2 294 1 223 2 351 3 40 1 253 2 63 1 320 2 
257 2 231 2 186 1 353 9 105 1 157 1 107 8 191 3 302 1 67 2 263 2 265 4 168 1 35 2 307 2 56 1 16 2 172 1 308 2 291 17 115 4 117 2 275 2 294 2 223 2 351 2 40 1 253 2 63 1 320 2 
242 1 286 1 231 1 56 1 144 1 353 4 115 1 291 9 157 1 117 1 107 5 191 1 275 1 294 1 67 1 263 1 223 1 38 1 216 1 371 1 40 1 351 1 35 1 168 1 265 2 253 1 320 1 
324 1 269 1 19 1 315 1 277 1 20 1 171 1 124 1 372 1 329 1 
5 1 239 1 
324 1 269 1 141 1 19 1 148 1 315 1 124 1 372 1 373 1 
324 1 269 1 243 1 271 1 309 1 173 1 221 1 46 1 174 1 329 1 19 1 315 1 277 1 20 1 151 2 8 1 124 1 372 1 
324 1 269 1 243 1 271 1 309 1 173 1 221 1 46 1 174 1 329 1 19 1 315 1 277 1 20 1 151 2 8 1 124 1 372 1 
324 1 269 1 243 1 271 1 309 1 173 1 221 1 46 1 174 1 329 1 19 1 315 1 277 1 20 1 151 2 8 1 124 1 372 1 
72 1 370 1 222 1 
72 1 370 1 222 1 
288 1 3 1 
72 1 288 1 3 1 
181 1 62 1 
179 2 323 2 324 1 181 1 42 1 29 1 325 1 5 1 262 1 8 1 239 1 10 1 269 1 243 1 340 1 221 1 174 1 76 2 19 1 315 1 151 1 124 1 62 1 297 2 22 1 372 1 24 2 
370 1 222 1 
72 1 288 1 3 1 
179 2 299 1 101 1 301 1 353 1 106 1 234 2 328 1 131 1 107 1 159 1 161 1 108 1 6 1 356 1 111 1 265 2 83 1 198 2 12 2 92 2 289 1 146 1 291 2 275 1 223 1 297 2 24 2 253 1 321 1 320 1 
12 2 299 1 362 1 230 1 280 1 366 2 92 2 234 2 314 1 161 1 293 1 33 1 251 1 348 1 165 1 279 1 337 1 336 1 138 1 
12 1 299 1 362 1 230 1 280 1 366 2 92 1 234 1 61 1 314 1 161 1 293 1 33 1 251 1 348 1 337 1 336 1 
12 1 299 1 71 1 362 1 301 1 74 1 92 1 103 1 17 1 234 1 158 1 161 1 108 1 138 1 
12 1 299 1 362 1 230 1 280 1 366 2 92 1 234 1 314 1 161 1 293 1 33 1 251 1 348 1 165 1 337 1 336 1 138 1 
154 1 
0 1 109 1 163 1 309 1 196 1 318 1 169 1 
170 1 0 1 243 1 270 1 90 1 309 2 354 1 247 1 94 1 274 1 215 1 120 1 305 1 123 1 8 1 196 1 318 1 
12 1 299 2 255 1 301 1 92 1 17 1 281 1 234 1 247 1 94 1 161 1 108 2 274 1 96 1 120 1 194 1 226 1 
257 2 0 2 80 1 64 5 66 1 233 1 191 1 215 3 303 1 263 2 305 6 34 1 8 1 196 8 55 1 9 2 35 1 361 1 170 1 199 5 243 1 270 1 16 2 308 2 309 5 247 2 117 2 94 2 273 1 274 2 120 2 276 1 351 1 228 1 318 5 
179 1 323 1 80 1 214 1 263 2 304 1 8 1 196 2 9 2 242 1 85 1 243 1 244 1 15 1 144 1 247 1 117 1 118 1 76 1 94 1 274 1 120 1 350 1 371 1 297 1 79 1 24 1 318 2 
0 1 309 1 247 1 94 1 109 1 274 1 120 1 163 1 196 1 318 1 
257 2 80 1 199 5 64 5 16 2 308 2 309 5 117 2 160 1 215 5 263 2 305 10 196 5 9 2 318 5 
170 1 0 1 243 1 270 1 309 1 8 1 
299 1 100 1 259 1 301 1 234 4 66 2 158 1 161 1 108 1 34 2 8 3 306 1 196 2 240 1 12 4 170 2 71 1 243 3 270 4 92 4 17 2 145 1 247 2 345 2 94 2 274 1 120 2 225 1 318 2 
179 3 323 2 299 1 255 1 301 1 353 1 234 1 159 1 161 1 108 1 331 1 304 1 265 2 10 1 83 1 12 1 69 1 92 1 17 1 289 1 291 1 118 2 76 2 275 1 249 1 223 1 295 1 297 3 253 1 24 2 322 1 320 1 
0 2 199 2 64 2 309 4 66 1 247 1 94 1 274 1 215 2 120 1 38 1 305 4 34 1 196 1 318 2 
296 1 124 1 372 1 
296 1 124 1 372 1 
296 1 124 1 372 1 
91 1 124 1 372 1 
369 1 181 1 277 1 124 1 372 1 
91 1 124 1 372 1 
91 1 124 1 372 1 
124 1 372 1 
324 1 269 1 
242 1 286 1 36 1 144 1 353 4 291 8 115 3 117 1 107 4 275 2 294 2 263 1 223 2 38 1 216 1 371 1 265 4 253 2 307 1 320 2 
242 1 286 1 353 3 144 1 115 2 291 6 117 1 107 3 294 2 263 1 38 1 216 1 371 1 169 1 
257 1 16 1 308 1 353 2 115 2 291 4 117 1 107 2 275 1 294 1 263 1 223 1 149 1 265 2 253 1 320 1 307 1 
191 1 353 1 291 2 351 1 35 1 107 1 
257 2 256 1 353 9 105 1 107 9 191 2 263 3 216 1 35 2 265 2 307 1 242 1 285 1 286 1 16 2 308 2 36 1 144 1 291 18 115 4 117 3 275 1 294 3 223 1 38 1 371 1 253 1 320 1 
191 1 353 1 291 1 
291 1 35 1 107 1 
257 1 16 1 308 1 353 3 291 6 115 3 117 1 107 3 275 1 160 1 294 2 263 1 223 1 149 1 253 1 265 2 320 1 307 1 
257 2 353 6 107 6 191 1 303 1 263 2 35 1 265 2 307 1 361 1 16 2 308 2 291 12 115 2 117 2 275 1 273 1 294 1 276 1 223 1 351 1 40 1 253 1 228 1 320 1 
242 1 144 1 353 3 291 6 115 2 117 1 107 3 294 1 263 1 371 1 307 1 
242 1 286 1 36 1 353 2 115 2 291 3 107 1 207 1 275 1 294 1 223 1 216 1 371 1 265 2 253 1 307 1 320 1 
242 2 353 5 144 1 115 5 291 10 117 2 107 5 275 1 214 1 294 3 263 2 223 1 371 2 40 1 253 1 265 2 320 1 307 2 
16 1 291 2 115 1 107 2 275 1 263 1 223 1 40 1 265 2 253 1 320 1 307 1 
257 1 16 1 308 1 353 2 115 2 291 4 117 1 107 2 275 1 294 1 263 1 223 1 40 1 265 2 253 1 320 1 307 1 
242 1 36 1 172 1 353 2 291 3 115 2 207 1 107 1 275 3 294 1 223 3 371 1 40 1 265 6 253 3 320 3 307 1 
257 3 353 18 105 1 107 16 191 4 263 5 216 1 265 10 35 3 307 5 242 3 286 1 16 3 36 2 172 1 308 3 144 2 18 1 291 34 115 12 117 5 207 1 347 1 275 5 294 7 223 5 38 1 149 1 278 1 371 3 351 1 40 1 253 5 320 5 
257 2 353 4 107 7 191 1 303 1 263 2 35 1 265 4 307 1 361 1 16 2 36 1 308 1 291 11 115 2 117 1 275 2 273 1 294 1 276 1 223 2 351 1 40 1 253 2 228 1 320 2 
257 3 353 5 105 1 107 9 191 2 303 1 263 3 265 6 35 1 307 2 361 1 16 3 36 1 308 1 291 14 115 3 117 1 273 1 275 3 294 1 276 1 223 3 149 1 351 1 40 1 253 3 228 1 320 3 
353 1 291 2 107 1 191 1 275 1 303 1 223 1 40 1 351 1 265 2 253 1 35 1 320 1 
257 2 353 7 107 10 191 1 303 1 263 3 216 1 35 1 265 6 307 2 361 1 242 1 286 1 16 2 36 1 308 1 144 1 291 17 115 5 117 2 275 3 273 1 294 3 276 1 223 3 38 1 149 1 371 1 351 1 40 1 253 3 228 1 320 3 
257 2 353 4 107 7 191 1 303 1 263 2 35 1 265 4 307 1 361 1 16 2 36 1 308 1 291 11 115 2 117 1 275 2 273 1 294 1 276 1 223 2 351 1 40 1 253 2 228 1 320 2 
353 1 291 2 107 1 191 1 275 1 303 1 223 1 40 1 351 1 265 2 253 1 35 1 320 1 
257 2 353 8 107 10 191 1 303 1 263 3 216 1 265 8 35 1 307 2 361 1 242 1 286 1 16 2 308 1 36 2 144 1 291 18 115 5 117 2 273 1 275 4 294 3 276 1 223 4 38 1 149 1 371 1 351 1 40 1 253 4 228 1 320 4 
257 3 353 7 107 9 191 1 303 1 263 3 265 8 35 1 307 3 361 1 16 3 172 1 308 2 36 2 291 16 115 6 117 2 273 1 275 4 294 3 276 1 223 4 351 1 40 1 253 4 228 1 320 4 
242 3 286 2 353 4 144 1 291 7 115 6 117 1 107 3 294 3 263 1 216 1 371 3 307 3 
257 2 353 8 107 10 191 1 303 1 263 3 216 1 265 8 35 1 307 1 361 1 242 1 286 1 16 2 172 1 308 1 36 2 144 1 291 18 115 4 117 2 273 1 275 4 294 3 276 1 223 4 38 1 371 1 351 1 40 1 253 4 228 1 320 4 
179 1 122 1 197 1 297 1 24 1 360 1 10 1 
179 1 338 1 232 1 2 1 326 1 122 1 197 1 297 1 360 1 24 1 10 1 254 1 
158 1 12 1 299 1 71 1 161 1 108 1 301 1 92 1 17 1 234 1 169 1 
179 2 12 1 255 1 299 1 323 1 301 1 92 1 17 1 234 1 236 1 76 1 108 1 161 1 331 1 297 2 24 1 10 1 322 1 
179 2 12 1 255 2 299 1 323 1 185 1 301 2 244 1 92 1 344 1 234 1 345 1 236 1 76 2 108 3 161 1 237 1 331 1 21 1 297 2 24 2 10 1 322 1 
179 2 323 1 299 1 255 2 301 2 185 1 234 2 236 1 161 1 108 3 237 1 134 1 331 1 10 1 12 2 244 1 92 2 344 1 345 1 76 2 150 1 297 2 21 1 24 2 
299 1 255 1 0 1 301 1 234 3 192 1 161 1 108 4 134 1 8 2 12 3 363 1 243 2 270 1 92 3 309 1 17 1 344 1 272 1 345 1 96 1 98 1 21 1 
12 3 0 1 255 1 299 1 363 1 182 1 243 2 301 1 270 1 309 1 92 3 17 1 344 1 234 3 345 1 108 4 161 1 134 1 96 1 98 1 8 2 21 1 
12 1 299 1 161 1 208 1 92 1 234 1 
268 1 12 7 255 1 299 3 1 1 301 2 92 6 17 2 281 1 234 7 175 1 208 1 6 1 193 1 108 3 161 2 293 1 279 1 125 1 81 1 198 1 
179 2 323 1 234 1 131 1 236 1 331 1 10 2 12 1 242 1 139 1 286 1 14 1 92 1 144 1 289 2 291 6 294 2 295 1 297 2 253 2 24 1 299 1 255 1 101 1 300 1 301 1 353 3 107 3 159 2 161 1 108 1 32 1 263 1 216 1 265 4 217 1 69 1 115 2 117 1 76 1 275 2 223 2 38 1 279 1 371 1 322 1 320 2 
0 1 100 1 182 1 189 1 234 1 109 1 108 2 163 1 8 3 196 1 266 1 11 1 12 1 170 1 363 1 243 3 270 2 340 1 309 1 92 1 17 1 247 2 94 2 274 2 120 2 96 1 98 1 318 1 
12 2 255 1 299 2 363 1 301 1 92 2 281 1 234 2 208 1 108 2 161 1 279 1 226 1 
12 4 299 1 71 1 301 1 92 4 59 1 17 1 234 4 158 1 108 1 161 1 134 1 279 1 
12 2 255 1 299 2 301 1 364 1 203 1 92 2 234 2 345 1 175 1 108 1 161 1 81 1 137 1 
12 1 299 1 314 1 161 1 251 1 348 1 366 1 92 1 17 1 234 1 
12 2 299 1 161 1 108 1 6 1 293 1 301 1 92 2 279 1 234 2 321 1 
12 5 71 1 299 2 1 1 301 2 92 4 59 1 17 1 234 5 345 1 158 1 6 1 108 3 161 2 279 1 125 1 
12 5 218 1 71 1 299 2 301 2 92 4 59 1 17 1 234 5 345 1 158 1 6 1 108 3 161 2 279 1 125 1 
179 2 12 1 255 1 299 1 323 1 301 1 92 1 17 1 234 1 236 1 76 1 108 1 161 1 331 1 150 1 297 2 24 1 10 1 
12 1 255 1 299 2 301 1 92 1 281 1 234 1 345 1 175 1 193 1 108 1 161 1 81 1 
84 1 57 1 227 1 10 1 82 1 
0 1 84 2 243 2 185 1 219 1 244 1 57 1 340 1 309 1 44 1 368 1 237 1 333 1 98 1 8 2 167 1 227 2 10 1 82 2 
179 1 84 1 356 1 57 1 297 1 106 1 24 1 328 1 82 1 
84 1 219 1 185 1 244 1 57 1 368 1 237 1 333 1 98 1 167 1 227 1 82 1 
41 1 119 1 162 1 169 1 
41 1 119 1 162 1 260 1 357 1 126 1 116 1 
135 1 164 1 126 1 
41 1 27 1 113 2 260 3 116 1 313 1 292 1 119 1 162 1 357 1 54 1 126 3 
41 1 119 1 162 1 260 2 357 1 316 1 126 2 335 1 116 1 
27 1 260 1 366 1 102 1 310 1 116 1 314 1 119 1 357 1 126 1 337 1 
41 1 27 1 119 1 260 1 357 1 126 1 116 1 
41 2 27 1 162 1 260 1 357 1 126 1 116 1 
41 1 200 1 27 1 119 1 86 1 260 2 357 2 126 2 116 2 132 1 
41 1 27 1 260 3 211 1 205 1 310 1 116 1 110 1 119 2 162 1 357 1 126 3 335 2 
41 1 27 1 260 2 280 1 366 2 116 1 314 1 119 1 162 1 357 1 251 1 264 1 126 2 335 1 337 1 
41 1 27 1 260 4 310 1 116 2 176 1 110 1 119 2 162 1 357 2 316 1 126 4 335 2 
41 1 27 1 119 1 162 1 260 1 357 1 126 1 116 1 
41 2 13 1 113 1 260 4 310 1 116 1 292 1 110 1 119 3 162 2 357 1 54 1 126 4 335 2 
41 1 27 1 287 1 260 2 65 1 116 1 119 1 162 1 357 1 334 1 126 2 335 1 
41 1 27 1 143 1 113 2 260 3 116 1 292 1 119 1 162 1 357 1 54 2 126 3 
50 1 119 2 130 1 213 2 
27 1 140 1 260 1 357 1 126 1 116 1 
41 1 27 1 119 1 162 1 260 2 357 1 211 1 126 2 335 1 116 1 
235 1 
41 1 27 1 119 1 162 1 260 1 357 1 126 1 116 1 
41 1 27 1 113 1 260 3 211 1 116 1 119 1 162 1 357 1 126 3 335 1 
13 1 119 1 110 1 310 1 
41 1 119 1 

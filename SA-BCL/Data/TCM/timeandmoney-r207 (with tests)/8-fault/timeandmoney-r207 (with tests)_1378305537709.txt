#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 60 (111,186,347) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 51 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (173,261,288) (173,261,288) 202 352 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 84 243 6 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 84 243 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 84 243 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 84 243 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 84 243 6 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (3,180,211,218) (3,180,211,218) 338 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
16 1 273 4 103 1 148 2 224 1 340 5 73 1 279 2 18 2 3 2 4 1 283 1 180 9 327 1 258 1 210 1 211 6 82 3 30 9 31 1 120 1 353 2 240 1 218 2 91 2 312 1 222 1 244 1 
16 1 273 4 103 1 148 2 224 1 340 5 73 1 279 2 18 2 3 2 4 1 283 1 180 9 327 1 258 1 210 1 211 6 82 3 30 9 31 1 120 1 353 2 240 1 218 2 312 1 91 2 222 1 244 1 
16 1 273 5 103 1 148 2 224 1 340 6 73 1 279 2 18 2 3 2 4 1 283 1 180 10 327 1 258 1 210 1 211 7 82 4 30 10 31 1 120 1 353 2 240 1 218 2 312 1 91 2 222 1 244 1 
16 1 273 3 148 2 224 1 340 4 73 1 279 2 18 2 3 2 4 1 283 1 180 7 327 1 258 1 210 1 211 4 82 2 30 7 31 1 120 1 353 2 240 1 218 2 312 1 91 1 222 1 244 1 
273 2 103 1 148 1 340 3 82 1 73 1 30 4 279 1 31 1 120 1 353 1 3 1 218 1 91 2 180 4 327 1 211 3 222 1 
148 1 350 1 340 1 73 1 30 2 31 1 280 1 3 1 18 1 353 1 240 1 283 1 218 1 180 2 97 1 222 1 
273 1 340 2 82 1 73 1 30 3 31 1 3 2 18 1 218 2 180 3 210 1 211 1 222 1 
273 4 276 1 103 1 224 1 148 1 340 5 73 1 279 1 18 1 3 2 180 9 327 1 210 1 211 7 82 3 30 9 31 1 264 1 120 1 353 1 218 2 91 2 222 1 244 1 
273 4 276 1 103 1 224 1 148 1 340 5 73 1 279 1 18 1 3 2 180 9 327 1 210 1 211 7 82 3 30 9 31 1 264 1 120 1 353 1 218 2 91 2 222 1 244 1 
332 1 181 1 67 1 
237 2 57 1 181 1 
76 2 11 2 32 2 52 2 93 1 185 2 169 2 107 1 
196 1 316 1 198 1 299 1 105 1 107 1 76 2 231 2 326 2 232 1 130 1 78 1 256 1 80 1 259 2 213 1 117 1 160 2 26 1 185 3 139 1 28 1 290 1 66 1 292 1 142 1 11 3 32 2 52 2 168 2 93 1 169 2 241 1 95 1 55 1 355 1 146 1 
197 1 348 1 76 1 11 1 32 1 52 1 277 1 93 1 185 1 169 1 
261 1 173 1 
277 1 35 2 185 1 288 2 67 1 173 1 230 1 76 1 266 1 32 1 11 1 52 1 169 1 181 1 346 1 
155 1 238 1 35 1 288 1 301 1 
155 1 46 1 125 1 238 1 35 2 288 2 181 1 67 1 
155 1 35 1 288 1 
197 1 348 1 238 1 277 1 288 1 35 1 185 1 38 1 76 1 32 1 11 1 52 1 93 1 169 1 
181 1 
155 1 125 1 238 1 35 2 288 2 42 1 181 1 67 1 
125 1 238 2 7 2 246 1 288 5 35 5 64 1 250 1 67 1 281 1 155 2 251 1 205 1 53 1 112 1 178 2 242 1 181 1 195 2 
332 1 107 1 
134 1 185 2 107 2 153 1 76 1 11 2 32 1 52 2 169 1 
354 1 136 1 287 1 
259 1 198 1 117 1 160 1 185 1 290 1 28 1 292 1 107 1 142 1 11 1 168 1 146 1 256 1 23 1 80 1 
259 1 117 1 198 1 160 1 136 1 185 2 28 1 290 1 292 1 142 1 76 1 50 1 11 2 52 1 168 1 169 1 219 1 146 1 256 1 80 1 
101 1 298 1 134 1 185 5 317 1 107 1 76 4 50 1 11 5 32 1 52 5 169 4 219 2 122 1 
197 1 76 2 11 2 135 1 52 2 277 1 185 2 169 2 
76 3 32 1 11 3 52 3 185 3 169 3 219 1 107 1 
197 1 76 1 11 1 52 1 277 1 185 1 169 1 
153 1 76 1 11 1 32 1 52 1 134 1 277 1 185 1 169 1 
196 1 198 1 277 1 35 1 105 1 107 1 173 1 230 1 76 3 343 1 231 2 326 1 232 1 78 1 256 1 80 1 346 1 259 1 213 1 117 1 160 1 134 1 185 4 288 1 139 1 28 1 290 1 66 1 292 1 142 1 192 1 266 1 50 1 32 2 11 4 52 3 168 1 93 1 169 3 95 1 219 1 55 1 355 1 146 1 
101 1 76 1 11 2 52 2 185 2 169 1 219 1 122 1 107 1 
330 1 134 1 277 1 35 1 288 1 185 3 173 1 230 1 192 1 76 3 266 1 50 1 32 1 11 3 52 3 169 3 219 2 181 1 346 1 
134 1 136 1 185 2 354 1 76 2 32 1 11 2 52 2 169 2 219 1 
259 1 198 1 117 1 160 1 185 1 290 1 28 1 292 1 107 1 142 1 11 1 168 1 146 1 256 1 80 1 
259 1 117 1 160 1 185 1 28 1 292 1 107 1 142 1 295 1 11 1 168 1 14 1 146 1 256 1 80 1 
196 1 245 1 228 1 252 1 231 2 232 1 326 4 130 2 255 1 22 1 236 1 260 1 213 1 287 2 136 2 66 2 118 1 354 2 314 1 95 1 55 1 355 1 193 1 272 1 
266 1 76 1 11 1 52 1 135 1 277 1 185 1 169 1 
176 1 111 1 
176 1 111 1 
60 1 347 1 
60 1 347 1 
60 1 347 1 
176 1 111 1 333 1 
176 1 111 1 186 1 
60 1 176 1 111 1 347 1 
176 1 111 1 333 1 
176 1 111 1 333 1 
176 1 111 1 257 1 
176 1 111 1 257 1 
176 1 111 1 257 1 
71 1 72 1 35 1 151 1 40 1 107 1 229 1 108 1 174 1 76 2 303 1 176 1 111 1 115 1 235 1 288 1 185 2 137 1 186 1 11 2 52 2 311 1 169 2 69 1 
235 3 34 1 72 2 288 2 35 2 137 2 39 1 191 1 166 1 310 2 145 1 176 2 111 2 311 2 69 2 114 1 115 1 181 1 234 1 
353 1 148 1 279 1 
353 1 148 1 350 1 
89 1 148 3 350 1 83 1 9 1 279 2 
102 1 148 2 350 1 83 1 9 1 279 1 
148 2 350 1 83 1 279 1 9 2 
71 1 124 2 125 1 57 1 246 1 300 1 35 5 149 1 36 1 151 1 281 2 108 1 155 1 252 1 207 1 178 1 20 1 255 1 132 1 181 2 260 1 237 3 7 1 238 4 288 5 215 1 118 1 293 2 67 1 334 2 53 3 195 1 
274 1 124 6 125 1 57 3 246 1 17 1 35 9 301 5 36 2 151 4 281 6 155 6 251 1 252 3 207 3 178 2 20 2 61 5 345 1 255 3 181 5 260 3 237 9 238 7 183 1 7 2 288 9 215 1 291 1 118 3 293 6 67 1 53 8 337 1 195 2 
124 2 57 2 149 1 35 3 36 1 151 1 281 2 251 1 252 1 207 1 178 1 20 1 255 1 132 1 181 3 260 1 237 4 238 2 7 1 288 3 118 1 67 1 293 2 334 1 53 3 195 1 
274 1 124 4 57 3 35 4 149 1 36 1 151 2 281 4 251 1 252 2 207 2 178 1 20 1 255 2 345 1 132 1 181 4 260 2 237 7 7 1 238 3 288 4 118 2 67 1 293 4 334 2 53 5 337 1 195 1 
286 1 332 1 80 1 
265 1 80 1 
49 1 
146 1 28 1 80 1 
0 1 80 1 
146 1 80 1 
286 2 177 1 146 1 28 1 201 1 80 3 
260 1 284 1 214 1 104 1 37 1 263 1 66 3 190 1 227 1 228 3 252 1 326 7 193 2 130 4 270 1 157 1 182 2 
260 1 284 1 214 1 104 1 37 1 263 1 66 3 190 1 227 1 228 3 252 1 326 7 193 2 130 4 270 1 157 1 182 2 
260 1 284 1 214 1 104 1 37 1 263 1 66 3 190 1 227 1 228 3 68 1 252 1 326 7 193 2 130 4 270 1 157 1 182 2 
196 1 223 1 104 1 37 2 227 2 228 10 2 1 75 1 252 4 207 3 231 2 232 1 326 31 130 16 254 1 255 3 157 5 182 3 284 1 47 1 25 1 260 4 213 1 306 3 214 1 188 1 263 2 190 2 66 15 140 4 118 3 95 1 270 1 193 5 
147 1 196 1 213 1 51 1 231 2 232 1 95 1 326 1 130 1 263 1 227 1 182 1 
58 1 148 2 1 1 340 1 73 1 279 1 3 1 18 1 175 1 180 2 211 1 259 1 158 1 117 1 160 1 81 1 350 1 30 2 292 1 31 1 119 1 353 1 89 1 296 1 168 1 218 1 54 1 56 1 335 1 222 1 
148 2 1 1 340 1 73 1 279 1 3 1 18 1 175 1 180 3 233 1 211 2 259 1 158 1 116 1 117 1 160 1 81 1 350 1 30 3 292 1 31 1 119 1 353 1 89 1 296 1 168 1 218 1 269 1 56 1 335 1 
148 2 1 1 340 1 73 1 279 1 18 1 180 2 233 1 211 2 259 1 158 1 117 1 160 1 81 1 350 1 30 2 292 1 31 1 119 1 353 1 89 1 296 1 168 1 269 1 335 1 
199 1 1 2 3 1 18 2 128 1 322 1 180 1 79 1 256 1 80 1 259 1 116 1 117 1 160 1 292 1 30 1 119 2 163 1 168 1 218 1 146 1 335 2 15 1 
148 2 1 1 279 1 3 1 18 1 175 1 180 1 233 1 259 1 158 1 117 1 160 1 81 1 350 1 30 1 292 1 119 1 353 1 89 1 296 1 168 1 218 1 54 1 56 1 335 1 222 1 
96 1 
125 1 246 1 35 2 202 1 173 1 281 1 155 2 322 1 178 1 20 1 129 1 256 2 80 1 259 2 117 1 160 2 7 1 288 2 261 1 138 1 352 1 292 1 141 1 144 1 168 2 53 1 146 1 15 1 195 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
155 1 125 1 35 2 288 2 261 1 138 1 42 1 202 1 352 1 173 1 123 1 
7 1 246 1 288 1 35 1 261 1 138 1 202 1 352 1 173 1 178 1 195 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
35 1 288 1 261 1 138 1 202 1 352 1 173 1 123 1 
7 1 246 1 288 1 35 1 261 1 138 1 202 1 352 1 173 1 178 1 195 1 123 1 
196 1 104 1 37 1 228 2 107 2 252 1 231 2 232 1 326 6 130 3 22 1 182 1 284 1 260 1 213 1 332 1 214 1 136 1 287 1 190 1 66 3 354 1 95 1 55 1 355 1 193 2 
196 2 59 1 318 1 107 1 228 2 252 1 325 1 304 1 207 2 231 4 232 2 326 14 130 8 254 1 255 1 157 1 260 2 213 2 306 3 287 11 136 11 26 1 188 1 139 1 66 6 140 3 118 2 354 4 268 1 95 2 193 1 55 2 355 1 
196 1 198 1 247 1 318 1 107 1 76 1 19 1 231 2 232 1 326 2 130 1 256 1 23 1 80 1 305 1 259 1 117 1 213 1 160 1 185 2 26 1 28 1 290 1 139 1 66 1 292 1 142 1 354 1 50 1 11 2 52 1 168 1 169 1 219 1 95 1 55 1 355 1 146 1 
37 1 318 1 319 2 228 8 76 1 231 6 232 3 326 20 130 10 233 1 182 1 80 2 284 1 8 2 287 7 136 7 185 3 139 1 290 2 190 1 85 1 292 2 142 2 50 1 11 3 52 1 95 3 193 4 55 3 146 2 196 3 198 2 339 2 104 1 105 2 249 1 107 2 342 2 252 3 207 2 255 2 256 1 157 4 259 3 260 3 213 3 117 2 160 3 214 1 26 1 28 2 66 10 118 2 167 1 354 7 168 3 169 1 219 1 355 3 
196 2 299 2 58 1 341 1 76 1 322 1 156 1 206 1 5 1 231 4 232 2 326 2 130 1 233 1 22 1 256 2 80 3 45 1 259 7 117 2 213 2 160 8 184 1 185 1 26 1 139 1 66 1 292 2 11 1 52 1 168 8 313 1 169 1 219 1 95 2 55 2 355 2 146 2 15 1 
196 1 297 1 318 1 228 1 76 1 252 1 207 1 231 2 232 1 326 3 130 1 255 1 260 1 213 1 134 1 136 1 287 1 185 1 66 2 118 1 354 1 32 1 11 1 52 1 169 1 95 1 193 1 55 1 355 1 
236 1 196 1 260 1 213 1 136 1 287 1 118 1 228 1 354 1 231 2 326 2 95 1 232 1 355 1 55 1 130 2 22 1 157 1 
196 1 213 1 136 1 287 1 66 2 228 1 354 1 252 1 231 2 326 2 95 1 232 1 193 1 355 1 55 1 255 1 22 1 272 1 
196 1 260 1 213 1 136 2 287 2 66 2 118 1 228 2 354 2 252 1 207 1 231 2 326 4 95 1 232 1 193 1 355 1 55 1 130 2 255 1 22 1 157 1 
236 1 196 1 260 1 213 1 136 1 287 1 184 1 118 1 228 1 354 1 231 2 326 2 95 1 232 1 355 1 55 1 130 2 157 1 
196 1 213 1 136 1 287 1 184 1 66 2 228 1 354 1 252 1 231 2 326 2 95 1 232 1 193 1 355 1 55 1 255 1 272 1 
196 1 260 1 213 1 136 2 287 2 184 1 66 2 118 1 228 2 354 2 252 1 207 1 231 2 326 4 95 1 232 1 193 1 355 1 55 1 130 2 255 1 157 1 
196 1 260 1 213 1 136 2 287 2 66 2 118 1 228 2 354 2 252 1 207 1 231 2 95 1 232 1 326 4 193 1 355 1 55 1 130 2 255 1 157 1 
196 1 198 1 105 1 107 1 231 2 326 2 232 1 130 1 256 1 80 1 259 1 117 1 213 1 160 1 26 1 185 1 28 1 290 1 139 1 66 1 292 1 142 1 11 1 168 1 95 1 355 1 55 1 146 1 
196 1 107 1 231 2 326 2 232 1 130 1 256 1 80 1 259 1 117 1 213 1 160 1 26 1 185 1 28 1 139 1 66 1 292 1 142 1 295 1 11 1 168 1 121 1 95 1 14 1 355 1 55 1 146 1 
196 1 260 1 213 1 136 2 287 2 318 1 66 2 118 1 228 2 354 2 252 1 207 1 231 2 326 4 95 1 232 1 193 1 355 1 55 1 130 2 255 1 157 1 
196 1 198 1 339 1 58 1 105 1 228 2 252 1 207 1 231 2 326 4 232 1 130 2 255 1 157 1 80 1 259 1 260 1 117 1 213 1 160 1 136 2 287 2 185 1 28 1 290 1 66 2 118 1 292 1 142 1 354 2 11 1 168 1 95 1 193 1 355 1 55 1 146 1 
196 1 318 1 228 1 76 1 252 1 207 1 231 2 232 1 326 3 130 2 255 1 157 1 260 1 213 1 134 1 287 1 136 1 185 1 66 1 118 1 354 1 32 1 11 1 52 1 169 1 95 1 55 1 355 1 221 1 
147 1 6 1 196 1 213 1 231 2 243 1 232 1 95 1 84 1 262 1 
147 1 6 1 196 1 213 1 231 2 243 1 232 1 95 1 84 1 262 1 
147 1 6 1 196 1 213 1 231 2 243 1 232 1 95 1 84 1 262 1 
147 1 6 1 196 1 213 1 231 2 243 1 232 1 95 1 84 1 262 1 
147 1 6 1 196 1 213 1 231 2 243 1 232 1 95 1 84 1 262 1 
34 1 72 1 176 1 111 1 311 1 69 1 137 1 39 1 48 1 234 1 
229 1 186 1 
72 1 176 1 111 1 311 1 69 1 137 1 220 1 43 1 351 1 
302 1 333 1 
257 1 328 1 98 1 
235 2 34 1 72 1 288 1 35 1 137 1 39 1 191 1 310 1 145 1 176 1 111 1 311 1 69 1 114 1 115 1 181 1 234 1 
235 2 34 1 72 1 288 1 35 1 137 1 39 1 191 1 310 1 145 1 176 1 111 1 311 1 69 1 114 1 115 1 181 1 234 1 
235 2 34 1 72 1 288 1 35 1 137 1 39 1 191 1 310 1 145 1 176 1 111 1 311 1 69 1 114 1 115 1 181 1 234 1 
302 1 333 1 328 1 
302 1 333 1 328 1 
257 1 98 1 
257 1 328 1 98 1 
174 1 303 1 
71 1 72 1 35 1 151 1 40 1 107 1 229 1 108 1 174 1 76 2 77 1 303 1 176 1 111 1 235 1 238 1 185 2 288 1 137 1 186 1 310 1 11 2 145 1 52 2 311 1 169 2 69 1 
196 1 299 2 318 1 110 1 231 2 113 1 232 1 326 2 130 1 80 1 45 1 259 2 117 1 213 1 160 2 185 2 26 1 289 1 139 1 66 1 292 1 309 1 11 2 52 2 168 2 313 1 95 1 55 1 355 1 146 1 100 1 
259 2 158 1 117 1 160 2 148 2 58 1 350 1 1 1 161 1 279 1 292 1 164 1 353 1 89 1 175 1 296 1 168 2 315 1 233 1 
259 1 158 1 117 1 160 1 148 2 350 1 1 1 161 1 279 1 292 1 353 1 89 1 109 1 175 1 296 1 168 1 233 1 
259 1 117 1 160 1 1 1 292 1 164 1 239 1 128 1 322 1 168 1 146 1 256 1 15 1 80 1 
259 1 158 1 117 1 160 1 148 2 350 1 1 1 161 1 279 1 292 1 164 1 353 1 89 1 175 1 296 1 168 1 315 1 233 1 
336 1 
332 1 53 1 64 1 181 1 250 1 67 1 281 1 
125 1 57 1 246 1 35 1 281 1 155 1 178 1 181 2 237 1 7 1 288 1 189 1 29 1 67 1 86 1 53 1 195 1 
124 6 125 3 171 1 0 2 172 1 35 5 281 8 74 2 230 2 179 2 178 4 177 1 80 10 181 8 133 1 237 12 286 2 7 4 288 5 292 4 293 6 90 1 144 1 53 9 92 2 146 3 195 4 246 4 57 6 58 1 250 1 106 2 155 5 342 2 252 2 253 2 207 2 21 2 20 2 208 2 255 2 256 1 259 3 260 2 117 3 212 2 160 3 27 1 64 1 28 3 118 2 67 2 265 3 168 3 
124 5 125 1 126 1 246 2 57 3 225 1 35 1 74 1 281 5 155 1 252 2 207 2 20 1 21 2 178 2 254 1 255 2 181 5 331 1 260 2 237 6 306 1 7 2 288 1 162 1 140 1 118 2 293 5 67 2 144 1 53 8 94 1 12 1 13 1 195 2 
197 1 246 1 277 1 35 1 37 1 38 1 74 1 281 2 76 1 252 1 21 2 178 1 284 1 260 2 348 1 7 1 185 1 288 1 190 1 294 1 11 1 32 1 33 1 52 1 53 2 93 1 169 1 195 1 
7 1 246 1 64 1 250 1 281 1 67 1 53 1 178 1 195 1 181 1 
260 2 124 5 237 10 57 5 118 2 74 1 281 5 293 5 342 1 252 2 207 2 53 5 21 2 255 2 181 5 
155 1 125 1 35 1 288 1 181 1 67 1 
125 2 246 1 35 3 281 2 155 4 322 1 251 1 344 1 178 2 20 2 129 1 256 2 80 1 259 4 117 1 159 1 160 4 7 2 288 3 27 1 292 1 141 1 90 2 144 2 168 4 53 2 146 1 15 1 195 2 
196 1 198 1 105 1 107 1 76 2 231 2 326 1 232 1 78 1 256 1 80 1 259 1 213 1 117 1 160 1 185 3 139 1 290 1 28 1 66 1 292 1 142 1 11 3 32 2 52 2 168 1 93 1 169 2 95 1 355 1 55 1 146 1 
124 2 237 4 7 1 57 2 246 1 293 2 281 2 67 2 144 1 53 1 178 1 20 1 182 1 195 1 181 4 
320 1 311 1 69 1 
303 1 311 1 69 1 203 1 234 1 
320 1 311 1 69 1 
320 1 311 1 69 1 
165 1 311 1 69 1 
165 1 311 1 69 1 
165 1 311 1 69 1 
311 1 69 1 
176 1 111 1 
260 1 284 1 196 2 213 2 214 1 104 1 37 1 66 4 190 1 228 3 75 1 252 1 231 4 326 8 95 2 232 2 130 4 193 2 157 1 182 1 
284 1 260 1 332 1 214 1 104 1 37 1 66 3 190 1 228 2 252 1 326 6 193 2 130 3 182 1 
196 1 260 1 213 1 66 2 118 1 228 2 321 1 252 1 207 1 231 2 95 1 232 1 326 4 193 1 130 2 255 1 157 1 
260 1 306 1 188 1 66 4 140 2 118 1 228 2 252 1 207 1 326 7 193 1 130 3 255 1 254 1 157 1 
196 2 104 1 59 1 37 2 228 9 75 2 252 3 325 1 207 2 231 4 326 23 232 2 130 11 255 2 157 4 182 1 62 1 284 1 260 3 306 2 213 2 214 1 188 1 190 2 66 12 118 2 140 2 95 2 193 5 
326 1 66 1 140 1 
306 1 326 1 130 1 
196 1 260 1 213 1 66 3 118 1 228 3 321 1 342 1 252 1 207 1 231 2 232 1 95 1 326 6 130 3 193 2 255 1 157 1 
147 1 196 1 126 1 228 2 252 2 207 2 231 2 326 12 232 1 130 6 254 1 255 2 157 1 260 2 331 1 306 1 213 1 162 1 66 6 140 1 118 2 12 1 95 1 193 1 13 1 
260 1 284 1 252 1 326 6 193 1 130 3 37 1 157 1 190 1 66 3 228 2 
62 1 196 1 213 1 214 1 104 1 37 1 190 1 66 2 228 2 75 1 231 2 326 3 95 1 232 1 130 1 193 1 157 1 
147 1 196 1 284 1 260 2 213 1 37 2 190 2 66 5 228 5 252 2 33 1 231 2 232 1 95 1 326 10 193 3 130 5 157 2 
147 1 196 1 260 1 213 1 118 1 228 1 231 2 95 1 232 1 326 2 130 2 157 1 
147 1 196 1 260 1 213 1 66 2 118 1 228 2 252 1 207 1 231 2 95 1 232 1 326 4 193 1 130 2 255 1 157 1 
62 1 147 1 196 3 213 3 37 1 66 2 190 1 10 1 228 2 75 1 231 6 326 3 95 3 232 3 193 1 130 1 157 1 
147 1 196 5 223 1 104 1 37 3 2 1 228 12 75 2 321 1 252 5 207 3 231 10 232 5 326 34 130 16 254 1 255 3 157 5 182 1 62 1 284 2 47 1 260 5 213 5 306 3 214 1 188 1 190 3 66 18 140 4 10 1 118 3 95 5 193 7 
147 1 196 1 126 1 104 1 37 1 228 2 252 1 231 2 326 8 232 1 130 4 254 1 182 1 260 1 284 1 306 1 213 1 214 1 66 4 190 1 140 1 95 1 193 2 
147 1 196 2 126 1 104 1 37 1 228 3 321 1 252 1 207 1 231 4 326 11 232 2 130 6 254 1 157 1 182 1 284 1 260 2 213 2 306 1 214 1 188 1 190 1 66 5 140 2 118 1 95 2 193 2 
147 1 196 3 126 1 104 1 37 1 228 4 75 1 321 1 252 3 207 2 231 6 326 19 232 3 130 9 254 1 255 2 157 1 182 1 284 1 260 3 331 1 306 1 213 3 214 1 162 1 190 1 66 10 140 1 118 2 12 1 95 3 13 1 193 3 
147 1 196 3 126 1 104 1 37 1 228 5 75 1 321 1 252 2 207 2 231 6 326 17 232 3 130 10 254 1 255 1 157 2 182 1 284 1 260 3 331 1 306 1 213 3 214 1 162 1 190 1 66 7 140 1 118 2 12 1 95 3 193 3 13 1 
147 1 196 1 126 1 104 1 37 1 228 2 252 1 231 2 326 8 232 1 130 4 254 1 182 1 260 1 284 1 306 1 213 1 214 1 66 4 190 1 140 1 95 1 193 2 
147 1 196 1 126 1 228 2 252 2 207 2 231 2 326 12 232 1 130 6 254 1 255 2 157 1 260 2 331 1 306 1 213 1 162 1 66 6 140 1 118 2 12 1 95 1 193 1 13 1 
147 1 196 4 126 1 104 1 37 1 228 5 75 2 321 1 252 2 207 2 231 8 326 18 232 4 130 10 254 1 255 1 157 2 182 1 284 1 331 1 260 3 213 4 306 1 214 1 162 1 190 1 66 8 140 1 118 2 12 1 95 4 13 1 193 3 
147 1 196 4 126 1 228 6 75 2 252 2 207 3 231 8 326 16 232 4 130 9 254 1 255 2 157 3 331 1 260 3 213 4 306 1 162 1 66 7 140 1 10 1 118 3 12 1 95 4 13 1 193 3 
284 1 260 1 214 2 104 1 37 3 66 4 190 3 228 6 252 1 326 7 193 3 130 3 157 3 
147 1 196 4 126 1 104 1 37 1 228 4 75 2 252 2 207 2 231 8 326 18 232 4 130 10 254 1 255 1 157 1 182 1 284 1 331 1 260 3 213 4 306 1 214 1 162 1 190 1 66 8 140 1 10 1 118 2 12 1 95 4 13 1 193 3 
101 1 11 1 52 1 185 1 122 1 226 1 107 1 
101 1 285 1 185 1 226 1 107 1 204 1 154 1 323 1 11 1 52 1 122 1 24 1 
259 1 117 1 322 1 332 1 160 1 168 1 146 1 15 1 256 1 292 1 80 1 
259 1 117 1 160 1 185 2 28 1 290 1 292 1 107 1 142 1 76 1 11 2 52 1 168 1 169 1 219 1 146 1 256 1 80 1 
0 1 277 1 107 1 76 2 80 3 346 1 259 1 117 1 160 1 185 2 290 1 28 2 292 1 142 1 90 1 266 1 11 2 52 2 168 1 92 1 169 1 219 1 146 2 
0 1 277 1 107 1 76 2 80 3 346 1 259 2 117 1 160 2 185 2 28 2 292 1 142 1 87 1 90 1 266 1 11 2 52 2 168 2 92 1 169 1 219 1 14 1 146 2 
0 1 35 2 127 1 155 1 230 1 256 1 80 4 181 1 259 3 117 1 286 1 160 3 288 2 28 1 292 1 67 1 87 1 265 1 90 1 168 3 92 1 146 1 170 1 
259 3 117 1 160 3 286 1 0 1 288 2 35 2 28 1 292 1 67 1 87 1 230 1 155 1 90 1 265 1 168 3 92 1 208 1 146 1 256 1 181 1 80 4 
259 1 117 1 160 1 168 1 341 1 292 1 
259 6 117 2 160 7 307 1 299 1 58 1 341 1 150 1 28 1 292 3 156 1 267 1 206 1 168 7 5 1 177 1 146 2 233 1 256 2 80 3 45 1 
196 2 198 1 339 1 58 1 104 1 37 1 318 1 105 1 107 2 228 2 76 1 252 1 231 4 326 6 113 1 232 2 130 3 182 1 80 1 259 1 260 1 284 1 117 1 213 2 160 1 8 1 214 1 136 1 287 1 185 2 28 1 290 1 66 3 190 1 292 1 142 1 354 1 11 2 52 1 168 1 169 1 219 1 95 2 193 2 55 2 355 2 146 1 
125 1 246 2 35 3 250 1 106 1 281 1 155 2 230 1 253 1 178 2 179 1 208 1 256 1 181 1 80 2 259 1 160 1 286 1 7 2 238 1 288 3 64 1 27 1 67 1 265 1 53 1 168 1 195 2 
259 2 117 1 286 1 160 2 171 1 58 1 341 1 28 1 292 2 168 2 177 1 146 1 80 2 
259 4 117 1 160 4 58 1 200 1 292 1 87 1 322 1 168 4 146 1 256 1 15 1 80 1 
259 2 117 1 160 2 349 1 307 1 150 1 28 1 249 1 292 2 90 1 168 2 271 1 146 1 80 1 
259 1 353 1 117 1 160 1 296 1 148 1 168 1 350 1 256 1 292 1 
259 2 117 1 160 2 168 2 58 1 146 1 233 1 292 1 80 1 45 1 100 1 
259 4 117 2 160 5 58 1 200 1 292 2 90 1 322 1 168 5 206 1 5 1 146 2 15 1 256 1 80 3 45 1 
259 4 117 2 160 5 58 1 63 1 200 1 292 2 90 1 322 1 168 5 5 1 146 2 15 1 256 1 80 3 45 1 
259 1 117 1 160 1 185 2 28 1 292 1 107 1 142 1 76 1 11 2 52 1 168 1 169 1 219 1 14 1 146 1 256 1 80 1 
259 1 117 1 160 1 307 1 150 1 28 1 292 2 90 1 267 1 168 1 177 1 146 1 80 1 
324 1 278 1 131 1 107 1 99 1 
238 1 277 1 278 1 288 2 35 2 308 1 187 1 107 1 67 1 173 1 230 1 192 1 266 1 324 2 131 2 181 1 346 1 70 1 99 2 
278 1 185 1 289 1 110 1 309 1 324 1 11 1 52 1 99 1 
278 1 308 1 70 1 
332 1 340 1 73 1 31 1 
3 1 218 1 340 1 180 1 73 1 30 1 31 1 
18 1 335 1 30 1 
340 1 65 1 152 1 73 1 30 3 31 1 3 1 282 1 283 2 218 1 180 3 222 1 
3 1 218 1 91 1 340 1 180 2 73 1 211 1 30 2 31 1 
353 1 273 1 3 1 148 1 218 1 340 1 180 1 279 1 30 1 120 1 222 1 
3 1 218 1 340 1 180 1 30 1 31 1 222 1 
3 1 218 1 180 1 73 1 30 1 31 2 222 1 
3 1 218 1 180 1 216 1 248 1 30 1 222 1 
273 1 224 1 340 2 82 1 73 1 30 3 31 1 3 1 218 1 180 3 211 2 222 1 244 1 
3 1 218 1 148 1 350 1 180 2 211 1 338 1 30 1 222 1 
273 1 103 1 340 2 82 1 73 1 30 4 31 1 3 2 218 2 91 1 180 4 211 2 222 1 
3 1 218 1 340 1 180 1 73 1 30 1 31 1 222 1 
273 1 275 1 340 3 82 1 152 1 73 2 30 4 31 2 3 1 282 1 283 1 218 1 180 4 211 2 
340 1 73 1 30 2 31 1 264 1 3 1 217 1 218 1 180 2 44 1 211 1 222 1 
340 1 152 1 73 1 30 3 31 1 3 1 282 2 283 2 218 1 180 3 209 1 222 1 
88 1 143 1 340 2 194 2 
3 1 218 1 41 1 180 1 30 1 222 1 
3 1 218 1 340 1 180 2 73 1 211 1 30 2 31 1 244 1 222 1 
329 1 
3 1 218 1 340 1 180 1 73 1 30 1 31 1 222 1 
3 1 283 1 218 1 340 1 180 3 73 1 211 1 30 3 244 1 31 1 222 1 
273 1 275 1 340 1 82 1 
340 1 31 1 

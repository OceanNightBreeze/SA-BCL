#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (171,232) (170,177) (170,177) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (171,232) (170,177) (170,177) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (171,232) (170,177) (170,177) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (171,232) (170,177) (170,177) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (171,232) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (171,232) 161 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (171,232) 161 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 361 11 110 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 283 214 151 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 1 24 1 115 1 173 1 232 1 177 1 12 1 70 1 146 1 287 2 118 2 369 1 170 1 171 1 109 1 138 1 
162 1 24 1 115 1 173 1 232 1 177 1 12 1 70 1 146 1 287 2 118 2 369 1 170 1 171 1 109 1 138 1 
162 1 24 1 115 1 173 1 232 1 177 1 12 1 70 1 146 1 287 2 118 2 369 1 170 1 171 1 109 1 138 1 
162 1 24 1 115 1 173 1 232 1 177 1 12 1 70 1 146 1 287 2 118 2 369 1 170 1 171 1 109 1 138 1 
349 1 162 1 24 1 90 2 285 1 12 1 70 1 315 3 146 1 287 4 272 1 217 2 118 4 94 1 369 1 306 1 87 1 7 3 
349 1 324 1 162 1 24 1 302 1 115 1 173 1 315 1 70 1 12 1 146 1 287 2 248 1 272 1 118 2 138 1 
24 1 162 1 232 1 287 1 146 1 118 1 
24 1 162 1 232 1 158 1 287 2 146 1 7 1 161 1 118 2 
24 1 162 1 232 1 158 1 287 2 146 1 7 1 161 1 118 2 
84 1 17 1 89 1 
318 1 89 1 193 2 
60 2 282 2 320 2 321 1 345 1 143 2 47 2 26 2 
202 1 50 1 0 2 114 1 51 1 156 1 351 1 258 2 92 1 93 1 260 1 26 2 282 2 95 1 333 1 266 1 363 1 60 3 215 1 143 3 101 1 289 1 273 1 274 1 14 1 275 1 15 1 64 1 41 2 320 2 321 1 345 1 150 1 223 1 18 2 47 2 21 2 
60 1 282 1 320 1 345 1 143 1 127 1 47 1 235 1 253 1 26 1 
60 1 141 1 143 1 168 1 84 1 216 1 102 1 282 1 357 1 184 1 89 1 243 1 253 1 264 1 
60 1 141 1 143 1 168 2 84 1 102 1 26 1 282 1 320 1 357 1 47 1 89 1 243 1 253 1 264 2 
311 1 135 1 168 1 290 1 264 1 
311 1 168 2 84 1 295 1 89 1 290 1 219 1 264 2 
168 1 290 1 264 1 
311 1 60 1 168 1 143 1 235 1 26 1 343 1 282 1 320 1 345 1 127 1 47 1 253 1 264 1 
89 1 
311 1 168 2 84 1 133 1 295 1 89 1 290 1 264 2 
311 2 100 1 165 1 174 1 188 1 168 5 84 1 103 1 105 1 290 2 147 1 295 1 284 1 89 1 263 2 22 2 79 2 264 5 265 1 
321 1 17 1 
60 2 143 2 71 1 157 1 26 1 282 2 320 1 321 2 47 1 
77 1 189 1 116 1 
60 1 215 1 0 1 114 1 51 1 143 1 351 1 258 1 92 1 273 1 274 1 275 1 15 1 321 1 18 1 252 1 
60 3 63 1 282 3 320 1 321 1 143 3 47 3 26 3 
60 1 282 1 143 1 127 1 47 1 253 1 26 1 
60 1 282 1 320 1 143 1 47 1 71 1 157 1 253 1 26 1 
202 1 50 1 129 1 114 1 0 1 51 1 351 1 258 1 92 1 260 1 157 1 26 3 282 3 95 1 357 1 243 1 333 1 31 1 264 1 363 1 60 4 215 1 141 1 143 4 168 1 101 1 102 1 289 1 273 1 274 1 14 1 275 1 292 1 15 1 63 1 41 1 320 2 321 1 345 1 223 1 18 1 47 3 21 2 253 1 
60 2 63 1 282 2 321 1 143 2 216 1 339 1 47 1 26 1 
129 1 60 3 141 1 168 1 143 3 269 1 102 1 157 1 26 3 292 1 63 2 282 3 320 1 357 1 47 3 89 1 243 1 253 1 264 1 
60 2 63 1 282 2 77 1 320 1 143 2 116 1 47 2 157 1 26 2 
60 1 215 1 0 1 114 1 51 1 143 1 351 1 258 1 92 1 273 1 274 1 275 1 15 1 321 1 18 1 
60 1 215 1 0 1 114 1 143 1 351 1 258 1 92 1 273 1 274 1 15 1 169 1 307 1 321 1 18 1 
111 1 50 1 116 2 77 2 95 1 308 1 333 1 8 1 334 1 363 1 189 2 364 1 101 1 289 2 194 1 14 1 106 1 41 4 150 2 152 1 296 1 21 2 348 1 154 1 
60 1 282 1 143 1 47 1 243 1 310 1 253 1 26 1 
129 1 60 2 215 1 114 1 0 1 51 1 143 2 351 1 258 1 92 1 26 1 273 1 274 1 275 1 15 1 63 1 282 1 77 1 18 1 47 1 
60 5 129 1 83 1 143 5 216 1 339 1 157 1 26 4 63 2 282 5 320 1 321 1 47 4 10 1 
60 2 282 2 143 2 127 1 47 2 310 1 253 1 26 2 
27 1 309 1 
27 1 309 1 
256 1 206 1 
256 1 206 1 
256 1 206 1 
27 1 309 1 78 1 
27 1 323 1 309 1 
27 2 142 1 256 1 309 2 206 1 2 1 
27 1 309 1 78 1 
27 1 309 1 78 1 
27 1 44 1 309 1 
27 1 44 1 309 1 
27 1 44 1 309 1 
322 2 254 1 312 3 168 2 74 1 2 1 126 1 27 2 196 1 197 2 148 1 332 1 251 2 359 2 199 2 309 2 211 1 89 1 264 2 
322 1 323 1 132 1 352 1 91 1 74 1 26 2 27 1 282 2 137 1 309 1 244 1 264 1 60 2 312 1 168 1 143 2 367 1 197 1 321 1 42 1 251 1 47 2 199 1 
369 1 12 1 70 1 
324 1 12 1 70 1 
369 2 324 1 70 3 140 1 128 1 221 1 
369 1 324 1 107 1 70 2 140 1 128 1 
369 1 324 1 70 2 128 1 140 2 
113 1 279 2 25 2 352 1 91 1 281 1 358 1 185 2 284 3 263 1 79 1 264 5 334 1 311 4 82 1 124 1 188 1 168 5 144 1 84 1 364 1 271 1 103 2 290 1 193 3 318 1 194 1 42 1 296 1 295 1 89 2 22 1 
113 1 174 1 25 6 352 4 281 3 135 5 185 6 284 8 263 2 79 2 264 9 334 3 311 7 82 2 124 2 168 9 188 1 84 1 364 3 365 5 103 6 104 1 290 6 291 1 193 9 318 3 194 3 250 1 36 1 296 3 295 1 65 1 297 1 89 5 22 2 
174 1 279 1 352 1 25 2 281 1 185 2 284 3 263 1 79 1 264 3 334 1 311 2 82 1 124 1 168 3 84 1 144 1 364 1 271 1 103 2 193 4 318 2 194 1 296 1 89 3 22 1 
174 1 279 2 25 4 352 2 281 2 185 4 284 5 263 1 79 1 264 4 334 2 311 3 82 1 124 1 168 4 84 1 144 1 364 2 271 1 103 4 104 1 193 7 318 3 194 2 36 1 296 2 297 1 89 4 22 1 
17 1 227 1 274 1 
238 1 274 1 
259 1 
215 1 274 1 
215 1 338 1 92 1 34 1 227 2 274 3 
215 1 92 1 274 1 
267 1 274 1 
81 1 326 1 280 1 52 1 289 3 249 2 192 1 194 1 136 1 41 7 330 1 241 1 150 4 45 1 296 1 348 2 8 3 
81 1 326 1 280 1 52 1 289 3 249 2 192 1 194 1 136 1 41 7 330 1 241 1 150 4 45 1 296 1 348 2 8 3 
81 1 326 1 280 1 52 1 289 3 249 2 192 1 194 1 136 1 41 7 330 1 241 1 150 4 45 1 296 1 201 1 348 2 8 3 
50 1 326 1 350 1 136 1 330 1 283 1 241 1 5 1 333 1 8 2 363 1 81 1 214 1 101 1 289 3 85 1 249 1 41 6 150 3 45 2 224 1 20 1 21 2 348 1 
50 2 326 1 280 1 52 1 136 1 241 1 57 1 333 2 8 4 363 2 81 1 101 2 289 4 249 2 192 1 194 1 41 9 150 5 45 1 296 1 224 1 21 4 348 3 229 1 
349 1 300 1 324 1 24 1 0 1 173 1 351 1 258 1 69 1 70 2 118 2 120 1 7 1 97 1 162 1 163 1 336 1 315 1 12 1 287 2 146 1 272 1 221 1 369 1 15 1 370 1 18 1 19 1 294 1 48 1 
349 1 300 1 324 1 24 1 0 1 173 1 351 1 258 1 69 1 70 2 118 3 7 2 97 1 162 1 163 1 336 1 315 1 12 1 287 3 288 1 272 1 35 1 221 1 369 1 15 1 16 1 18 1 19 1 294 1 48 1 
349 1 300 1 324 1 0 1 173 1 351 1 258 1 69 1 70 2 118 2 7 2 97 1 163 1 336 1 315 1 12 1 287 2 272 1 35 1 221 1 15 1 369 1 16 1 18 1 294 1 
300 2 215 1 162 1 24 1 163 2 0 1 173 2 336 2 351 1 258 1 327 1 288 1 287 1 118 1 273 1 274 1 15 1 222 1 371 1 18 1 209 1 226 1 299 1 
300 1 324 1 24 1 0 1 173 1 351 1 258 1 69 1 70 2 118 1 97 1 162 1 163 1 336 1 12 1 287 1 146 1 35 1 221 1 369 1 15 1 370 1 18 1 19 1 294 1 48 1 
167 1 
0 2 175 1 180 2 282 1 183 1 184 1 4 1 284 2 243 1 9 1 60 1 335 1 141 1 188 1 143 1 103 2 102 1 290 6 191 1 193 2 15 1 344 4 18 2 295 3 347 2 22 1 253 1 68 2 301 1 155 1 351 1 258 2 304 2 356 2 357 1 209 1 360 1 361 1 263 1 79 1 264 5 215 1 268 1 164 2 124 1 168 5 84 1 216 1 273 2 274 1 318 2 39 1 222 1 373 2 89 2 
301 1 175 1 133 1 282 1 180 1 357 1 184 1 4 1 243 1 9 1 264 3 60 1 141 1 143 1 168 3 216 1 102 1 191 1 290 2 344 2 295 1 253 1 
301 1 175 1 133 1 282 1 356 1 357 1 184 1 4 1 243 1 9 1 264 3 60 1 141 1 143 1 168 3 84 1 216 1 102 1 290 1 191 1 344 3 295 1 89 1 253 1 
301 1 175 1 133 1 282 1 180 1 356 1 357 1 184 1 4 1 243 1 9 1 264 3 60 1 141 1 164 1 143 1 168 3 84 1 216 1 102 1 191 1 290 2 344 3 295 1 89 1 253 1 
68 2 301 1 175 1 133 1 205 1 304 2 207 1 282 1 180 4 356 4 357 1 184 1 4 1 284 1 243 1 361 1 263 1 79 1 9 1 264 5 335 1 60 1 313 1 141 1 164 4 11 1 188 1 168 5 143 1 84 5 216 1 103 1 102 1 191 1 290 7 318 2 344 6 295 3 373 2 374 1 89 5 347 2 22 1 253 1 
175 1 282 1 180 2 184 1 4 1 243 1 284 1 9 1 335 1 60 1 141 1 143 1 188 1 102 1 103 1 191 1 290 4 193 2 344 4 295 2 22 1 347 2 253 1 68 2 301 1 304 2 356 2 357 1 263 1 361 1 79 1 264 4 164 2 168 4 84 1 216 1 318 2 39 1 373 2 89 2 
68 2 301 1 175 1 304 2 180 2 282 1 356 2 357 1 184 1 4 1 284 1 243 1 361 1 263 1 9 1 79 1 264 4 335 1 60 1 164 2 141 1 313 1 11 1 143 1 168 4 188 1 84 1 216 1 103 1 102 1 290 4 191 1 318 2 344 4 295 2 373 2 89 1 374 1 347 2 22 1 253 1 
68 2 301 1 175 1 304 2 180 2 282 1 356 2 357 1 184 1 4 1 284 1 243 1 361 1 263 1 9 1 79 1 264 4 335 1 60 1 164 2 141 1 313 1 11 1 143 1 168 4 188 1 84 1 216 1 103 1 102 1 290 4 191 1 318 2 344 4 295 2 373 2 89 1 374 1 347 2 22 1 253 1 
301 1 203 1 175 1 282 1 357 1 184 1 4 1 284 1 243 1 361 1 263 1 9 1 79 1 264 2 60 1 141 1 11 1 143 1 168 2 188 1 216 1 103 1 102 1 191 1 368 1 344 2 373 1 110 1 347 1 22 1 253 1 
68 2 301 1 175 1 304 2 207 1 282 1 180 3 356 3 357 1 184 1 4 1 284 1 243 1 361 1 263 1 79 1 9 1 264 4 335 1 60 1 313 1 141 1 164 3 11 1 188 1 143 1 168 4 84 1 216 1 103 1 102 1 191 1 290 5 318 2 344 5 295 2 373 2 89 1 374 1 347 2 22 1 253 1 
68 2 301 1 175 1 304 2 207 1 282 1 180 3 356 3 357 1 184 1 4 1 284 1 243 1 361 1 263 1 79 1 9 1 264 4 335 1 60 1 313 1 141 1 164 3 11 1 188 1 143 1 168 4 84 1 216 1 103 1 102 1 191 1 290 5 318 2 344 5 295 2 373 2 89 1 374 1 347 2 22 1 253 1 
301 1 175 1 282 1 357 1 184 1 4 1 284 1 243 1 361 1 263 1 9 1 79 1 264 2 60 1 141 1 188 1 168 2 143 1 216 1 103 1 102 1 191 1 368 1 344 2 373 1 347 1 22 1 253 1 
50 1 280 1 116 1 52 1 77 1 136 1 95 1 241 1 333 1 8 2 363 1 189 1 101 1 289 3 249 1 192 1 14 1 194 1 106 1 41 6 321 2 150 3 17 1 296 1 21 2 348 2 
202 1 50 2 230 1 130 1 116 2 328 1 281 2 77 6 95 1 283 2 8 1 333 2 363 2 334 1 189 6 364 2 247 1 13 1 101 2 289 5 85 2 14 2 194 2 293 1 64 1 38 1 41 12 321 1 150 7 296 1 21 4 348 1 253 1 
50 1 129 1 202 1 114 1 0 1 51 1 351 1 116 1 130 1 258 1 92 1 26 1 282 1 95 1 139 1 333 1 363 1 60 2 215 1 143 2 101 1 289 1 273 1 274 1 275 1 14 1 15 1 86 1 63 1 64 1 41 2 321 1 150 1 198 1 18 1 252 1 47 1 21 2 
49 1 129 1 50 3 326 1 0 1 280 1 51 2 52 1 130 1 92 2 234 2 281 2 282 1 136 1 95 3 241 1 8 5 333 3 334 2 60 3 143 3 189 7 190 2 101 3 289 10 249 1 192 1 14 3 194 3 15 2 63 1 64 1 150 10 18 1 296 3 21 6 348 4 23 2 202 1 114 2 351 2 116 7 258 1 260 2 26 1 77 7 213 1 363 3 215 2 364 2 273 1 274 2 275 2 41 20 321 2 47 1 225 2 
50 2 202 1 325 1 0 7 176 1 351 2 258 8 239 1 26 1 282 1 28 1 95 2 120 1 209 1 98 1 333 2 266 2 363 2 60 1 215 2 143 1 101 2 289 1 35 1 273 2 274 3 14 2 15 2 63 1 106 1 64 1 222 1 149 1 41 2 346 1 150 1 18 8 47 1 21 4 
50 1 116 1 130 1 157 1 26 1 281 1 282 1 77 1 95 1 8 1 333 1 363 1 334 1 60 1 189 1 143 1 246 1 364 1 101 1 289 2 14 1 194 1 320 1 41 3 150 1 296 1 47 1 21 2 348 1 
363 1 111 1 50 1 326 1 189 1 116 1 364 1 101 1 14 1 194 1 106 1 77 1 41 2 95 1 150 2 21 2 8 1 333 1 
363 1 334 1 50 1 189 1 116 1 101 1 289 2 14 1 106 1 77 1 41 2 95 1 296 1 21 2 348 1 8 1 333 1 154 1 
50 1 326 1 116 2 281 1 77 2 95 1 333 1 8 2 363 1 334 1 189 2 364 1 101 1 289 2 194 1 14 1 106 1 41 4 150 2 296 1 21 2 348 1 
363 1 111 1 50 1 326 1 189 1 116 1 364 1 101 1 14 1 194 1 77 1 41 2 149 1 95 1 150 2 21 2 8 1 333 1 
363 1 334 1 50 1 189 1 116 1 101 1 289 2 14 1 77 1 41 2 149 1 95 1 296 1 21 2 348 1 8 1 333 1 154 1 
50 1 326 1 116 2 281 1 77 2 95 1 333 1 8 2 363 1 334 1 189 2 364 1 101 1 289 2 194 1 14 1 149 1 41 4 150 2 296 1 21 2 348 1 
334 1 363 1 50 1 326 1 189 2 116 2 364 1 101 1 289 2 281 1 14 1 194 1 77 2 41 4 95 1 150 2 296 1 21 2 348 1 8 2 333 1 
50 1 202 1 114 1 0 1 51 1 351 1 258 1 92 1 260 1 95 1 333 1 363 1 60 1 215 1 143 1 101 1 289 1 273 1 274 1 275 1 14 1 15 1 64 1 41 2 321 1 150 1 18 1 21 2 
50 1 202 1 114 1 0 1 351 1 258 1 92 1 73 1 307 1 95 1 333 1 363 1 60 1 215 1 143 1 101 1 289 1 273 1 274 1 14 1 15 1 64 1 169 1 41 2 321 1 150 1 18 1 21 2 
50 1 326 1 130 1 116 2 281 1 77 2 95 1 333 1 8 2 363 1 334 1 189 2 364 1 101 1 289 2 194 1 14 1 41 4 150 2 296 1 21 2 348 1 
50 1 326 1 114 1 0 1 51 1 116 2 351 1 258 1 92 1 260 1 281 1 77 2 95 1 120 1 8 2 333 1 334 1 363 1 60 1 215 1 189 2 143 1 190 1 364 1 101 1 289 2 274 1 194 1 275 1 14 1 15 1 41 4 150 2 18 1 296 1 21 2 348 1 
50 1 326 1 130 1 116 1 157 1 26 1 281 1 282 1 77 1 95 1 8 1 333 1 334 1 363 1 60 1 143 1 189 1 270 1 364 1 101 1 289 1 14 1 194 1 320 1 41 3 150 2 296 1 47 1 21 2 
50 2 326 2 303 1 237 1 281 3 181 1 283 2 56 1 57 1 8 5 333 2 186 1 363 2 334 3 214 2 123 4 364 3 101 2 85 3 289 13 220 2 194 3 195 1 293 1 37 1 41 25 150 12 151 1 296 3 21 4 298 1 348 3 
50 3 326 2 257 1 303 1 237 1 3 1 281 3 181 2 283 2 55 1 56 1 57 1 8 4 333 3 186 2 363 3 334 2 123 4 214 2 364 3 101 3 289 12 85 2 218 1 220 1 194 3 195 1 41 26 150 14 151 1 224 2 296 2 21 6 348 2 
50 3 326 3 280 1 52 1 237 1 281 4 3 1 181 2 136 1 283 3 241 1 55 1 56 1 57 1 333 3 8 7 186 1 334 4 101 3 289 21 249 1 192 1 194 5 293 1 195 1 150 20 151 1 296 5 21 6 348 4 298 1 257 1 303 1 362 1 363 3 123 4 214 3 364 4 85 4 218 1 220 1 41 41 224 1 
50 4 326 2 280 1 52 1 257 1 303 1 237 1 3 1 281 4 136 1 181 2 283 3 241 1 55 1 56 1 57 1 362 1 8 6 333 4 186 1 363 4 334 3 214 3 123 4 364 4 101 4 85 4 289 18 249 1 218 1 220 1 192 1 194 5 195 1 293 1 41 38 150 20 151 1 224 2 296 4 21 8 298 1 348 4 
50 2 326 5 280 3 52 3 257 1 303 1 237 1 328 1 3 1 281 5 136 3 181 1 283 3 241 3 55 1 56 1 57 1 333 2 8 12 186 1 363 2 334 5 123 4 214 2 364 5 101 2 85 3 289 24 249 3 218 1 220 1 192 3 194 8 195 1 293 1 41 52 150 28 151 1 224 1 296 8 21 4 348 7 
126 1 27 1 322 1 197 1 251 1 309 1 199 1 211 1 6 1 2 1 
323 1 132 1 
27 1 322 1 197 1 251 1 309 1 199 1 210 1 353 1 134 1 
322 1 254 1 312 2 168 1 74 1 2 1 126 1 27 1 197 1 148 1 332 1 251 1 359 1 199 1 309 1 211 1 89 1 264 1 
322 1 254 1 312 2 168 1 74 1 2 1 126 1 27 1 197 1 148 1 332 1 251 1 359 1 199 1 309 1 211 1 89 1 264 1 
322 1 254 1 312 2 168 1 74 1 2 1 126 1 27 1 197 1 148 1 332 1 251 1 359 1 199 1 309 1 211 1 89 1 264 1 
142 1 29 1 78 1 
142 1 29 1 78 1 
61 1 44 1 
142 1 61 1 44 1 
244 1 367 1 
322 1 323 1 132 1 352 1 91 1 26 2 27 1 282 2 332 1 359 1 137 1 309 1 244 1 264 1 60 2 311 1 312 1 143 2 168 1 125 1 367 1 197 1 321 1 42 1 251 1 199 1 47 2 
29 1 78 1 
142 1 61 1 44 1 
50 1 202 1 325 1 0 2 176 1 351 1 130 1 258 2 282 2 95 1 119 1 333 1 266 2 363 1 60 2 215 1 143 2 286 1 316 1 101 1 341 1 289 1 274 1 14 1 15 1 64 1 41 2 150 1 277 1 18 2 21 2 
324 1 0 2 336 1 351 1 258 2 69 1 12 1 70 2 35 1 221 1 369 1 15 1 120 1 96 1 54 1 18 2 19 1 97 1 228 1 
324 1 0 1 336 1 351 1 258 1 69 1 12 1 70 2 35 1 221 1 369 1 15 1 18 1 262 1 19 1 97 1 228 1 
215 1 0 1 336 1 351 1 258 1 145 1 273 1 274 1 15 1 222 1 54 1 18 1 209 1 226 1 
324 1 0 1 336 1 351 1 258 1 69 1 12 1 70 2 35 1 221 1 369 1 15 1 96 1 54 1 18 1 19 1 97 1 228 1 
112 1 
100 1 84 1 17 1 284 1 89 1 103 1 105 1 
68 1 335 1 168 1 188 1 84 1 103 1 304 1 290 1 193 1 318 1 295 1 89 2 284 1 263 1 22 1 79 1 264 1 
0 1 351 2 25 3 258 1 234 1 53 1 92 1 238 2 281 1 242 1 185 3 284 4 263 2 79 2 264 2 59 1 334 1 215 1 141 1 124 1 168 2 188 2 364 1 338 1 103 3 290 2 273 1 193 6 274 4 194 1 318 3 15 1 276 1 18 1 108 1 296 1 295 1 46 1 89 3 227 1 22 2 67 1 
214 1 188 1 25 1 103 1 85 1 193 2 318 1 283 1 151 1 185 1 89 1 284 1 263 1 22 1 79 1 
313 1 255 1 168 1 188 1 136 1 241 1 263 1 22 1 79 1 264 1 66 1 
100 1 188 1 84 1 103 1 105 1 89 1 284 1 263 1 22 1 79 1 
334 1 364 1 25 2 103 2 281 1 193 4 194 1 318 2 296 1 185 2 89 2 284 2 
168 1 84 1 295 1 89 1 290 1 264 1 
0 4 174 1 155 1 131 1 351 1 258 4 209 1 360 2 284 2 263 2 79 2 58 1 264 3 215 1 268 1 124 2 188 1 168 3 366 1 103 2 273 2 290 4 274 1 15 1 222 1 18 4 295 2 372 2 22 2 
202 1 50 1 0 1 114 1 51 1 351 1 258 1 92 1 260 1 26 2 282 2 95 1 333 1 363 1 60 3 215 1 143 3 101 1 289 1 273 1 274 1 275 1 14 1 15 1 41 1 320 2 321 1 345 1 223 1 18 1 47 2 21 2 
124 1 188 1 84 1 103 1 193 2 318 1 185 1 360 1 284 1 89 2 263 1 22 1 79 1 
197 1 245 1 251 1 
126 1 197 1 251 1 236 1 367 1 
197 1 245 1 251 1 
197 1 245 1 251 1 
197 1 251 1 329 1 
197 1 251 1 329 1 
197 1 251 1 329 1 
197 1 251 1 
27 1 309 1 
363 2 50 2 326 1 280 1 52 1 101 2 289 4 249 1 192 1 194 1 41 8 136 1 150 4 241 1 296 1 224 1 21 4 348 2 8 3 333 2 
280 1 52 1 289 3 249 1 192 1 194 1 136 1 41 6 241 1 150 3 17 1 296 1 348 2 8 2 
334 1 363 1 50 1 326 1 364 1 101 1 317 1 289 2 281 1 194 1 41 4 150 2 296 1 21 2 348 1 8 2 333 1 
214 1 41 2 283 1 150 1 289 1 85 1 
50 1 255 1 326 1 280 1 52 1 328 1 281 2 136 2 283 2 241 2 8 5 333 1 334 2 363 1 364 2 13 1 101 1 289 9 85 2 249 1 192 1 194 3 293 1 41 18 150 9 296 3 224 1 21 2 348 4 
41 1 289 1 85 1 
41 1 283 1 150 1 
363 1 334 1 50 1 326 2 364 1 234 1 101 1 317 1 289 3 281 1 194 1 41 6 150 3 296 1 21 2 348 2 333 1 8 4 
50 1 326 1 257 1 281 2 3 1 283 1 55 1 57 1 333 1 8 2 363 1 334 2 214 1 364 2 101 1 289 6 85 1 218 1 194 2 41 12 150 6 151 1 296 2 21 2 348 1 
326 1 280 1 289 3 194 1 41 6 136 1 150 3 241 1 296 1 348 1 8 2 
363 1 50 1 326 1 52 1 101 1 289 2 192 1 136 1 41 3 150 1 241 1 224 1 5 1 21 2 348 1 8 2 333 1 
136 1 255 1 241 1 348 1 8 1 
363 1 50 1 326 1 364 1 101 1 194 1 41 2 150 2 21 2 57 1 333 1 8 1 
334 1 363 1 50 1 326 1 364 1 101 1 289 2 281 1 194 1 41 4 150 2 296 1 21 2 348 1 57 1 8 2 333 1 
363 3 50 3 326 1 101 3 289 2 41 3 136 1 241 1 150 1 224 1 5 1 21 6 298 1 57 1 348 1 333 3 8 2 
50 4 255 1 326 4 280 1 52 1 136 3 283 1 241 3 5 1 57 1 8 8 333 4 363 4 214 1 101 4 317 1 289 9 85 1 192 1 194 2 41 17 150 8 296 2 224 1 20 1 21 8 298 1 348 4 
50 2 255 1 326 3 280 1 52 1 257 1 281 2 3 1 136 2 283 1 241 2 55 1 57 1 333 2 8 7 363 2 334 1 214 1 364 2 101 2 289 6 85 1 249 1 218 1 192 1 194 3 41 16 150 10 151 1 224 1 296 2 21 4 348 4 
50 3 326 1 280 1 52 1 257 1 3 1 281 2 136 1 283 1 241 1 55 1 57 1 333 3 8 4 363 3 334 1 214 1 364 2 101 3 317 1 289 7 85 1 249 1 218 1 192 1 194 3 41 17 150 10 151 1 224 1 296 2 21 6 348 3 
50 3 326 1 280 1 52 1 257 1 3 1 281 2 136 1 283 1 241 1 55 1 57 1 333 3 8 4 363 3 334 2 214 1 364 2 101 3 317 1 289 10 85 1 249 1 218 1 192 1 194 3 41 19 150 9 151 1 296 3 224 1 21 6 348 3 
50 3 326 2 280 1 52 1 257 1 281 2 3 1 136 1 283 1 241 1 55 1 57 1 333 3 8 5 363 3 334 1 214 1 364 2 101 3 317 1 289 7 85 1 249 1 218 1 192 1 194 3 41 17 150 10 151 1 224 1 296 2 21 6 348 3 
50 2 255 1 326 3 280 1 52 1 257 1 281 2 3 1 136 2 283 1 241 2 55 1 57 1 333 2 8 7 363 2 334 1 214 1 364 2 101 2 289 6 85 1 249 1 218 1 192 1 194 3 41 16 150 10 151 1 224 1 296 2 21 4 348 4 
50 1 326 1 257 1 281 2 3 1 283 1 55 1 57 1 333 1 8 2 363 1 334 2 214 1 364 2 101 1 289 6 85 1 218 1 194 2 41 12 150 6 151 1 296 2 21 2 348 1 
50 4 326 2 280 1 52 1 257 1 3 1 281 2 136 1 283 1 241 1 55 1 57 1 333 4 8 5 363 4 334 1 214 1 364 2 101 4 317 1 289 8 85 1 249 1 218 1 192 1 194 3 41 18 150 10 151 1 296 2 224 2 21 8 348 3 
50 4 326 3 257 1 3 1 281 3 283 1 55 1 57 1 333 4 8 6 363 4 334 2 214 1 364 3 101 4 289 7 85 1 218 1 194 3 41 16 150 9 151 1 296 2 224 2 21 8 298 1 348 3 
326 3 280 1 52 2 289 4 192 1 194 1 41 7 136 3 241 3 150 3 296 1 348 3 8 6 
50 4 326 1 280 1 52 1 257 1 3 1 281 2 136 1 283 1 241 1 55 1 57 1 333 4 8 4 363 4 334 1 214 1 364 2 101 4 289 8 85 1 249 1 218 1 192 1 194 3 41 18 150 10 151 1 296 2 224 2 21 8 298 1 348 3 
60 1 143 1 339 1 216 1 117 1 247 1 282 1 321 1 253 1 
60 1 143 1 204 1 339 1 216 1 247 1 178 1 117 1 282 1 355 1 321 1 240 1 159 1 253 1 
15 1 215 1 222 1 0 1 351 1 17 1 18 1 209 1 258 1 273 1 274 1 
60 2 215 1 114 1 0 1 51 1 143 2 351 1 258 1 92 1 26 1 273 1 274 1 15 1 63 1 282 1 321 1 18 1 47 1 
267 1 60 2 215 2 114 1 0 1 51 1 143 2 351 1 258 1 92 2 26 2 274 3 15 1 63 1 282 2 321 1 357 1 18 1 47 1 200 1 372 1 243 1 253 1 
267 1 60 2 215 2 114 1 0 2 143 2 351 1 258 2 92 2 26 2 274 3 75 1 15 1 63 1 282 2 169 1 321 1 357 1 18 2 47 1 200 1 372 1 243 1 253 1 
267 1 215 1 141 1 0 3 314 1 168 2 84 1 351 1 258 3 92 1 1 1 238 1 273 1 290 1 274 4 75 1 15 1 18 3 200 1 372 1 89 1 227 1 264 2 
267 1 215 1 141 1 0 3 168 2 84 1 351 1 258 3 92 1 238 1 273 1 290 1 274 4 75 1 15 1 18 3 46 1 200 1 372 1 89 1 227 1 264 2 
15 1 0 1 351 1 18 1 258 1 239 1 
215 2 325 1 0 6 351 3 338 1 258 7 179 1 92 1 239 1 35 1 273 2 274 3 15 2 28 1 40 1 346 1 120 1 18 7 98 1 80 1 266 1 
50 2 0 1 51 1 280 1 130 1 52 1 92 1 282 1 136 1 95 2 241 1 333 2 8 2 60 2 143 2 189 1 190 1 286 1 101 2 289 3 249 1 192 1 14 2 194 1 15 1 63 1 150 3 18 1 296 1 21 4 348 2 23 1 114 1 116 1 351 1 258 1 260 1 26 1 77 1 120 1 363 2 215 1 274 1 275 1 41 6 321 2 47 1 
0 1 258 1 238 1 242 1 284 1 263 2 79 2 58 1 264 3 311 1 100 1 141 1 188 2 168 3 84 1 103 1 105 1 273 1 290 2 274 2 18 1 108 1 46 1 295 1 89 1 227 1 22 2 67 1 
215 1 0 2 351 2 338 1 258 2 53 1 92 1 239 1 274 2 15 1 120 1 18 2 227 1 
215 1 0 4 187 1 351 1 258 4 273 1 274 1 75 1 15 1 222 1 120 1 18 4 209 1 
215 1 99 1 0 2 62 1 351 2 258 2 92 1 274 1 15 1 40 1 18 2 372 1 30 1 80 1 
324 1 15 1 0 1 351 1 18 1 258 1 12 1 70 1 97 1 273 1 
215 1 325 1 0 2 351 1 258 2 341 1 35 1 274 1 15 1 120 1 18 2 
215 2 325 1 0 4 187 1 351 2 258 5 273 1 274 3 15 2 222 1 28 1 120 1 346 1 18 5 209 1 372 1 
215 2 325 1 0 4 187 1 351 2 258 5 273 1 274 3 15 2 222 1 120 1 346 1 18 5 209 1 160 1 372 1 
60 2 215 1 114 1 0 1 143 2 351 1 258 1 92 1 26 1 273 1 274 1 15 1 63 1 282 1 169 1 321 1 18 1 47 1 
215 1 0 1 351 2 338 1 258 1 179 1 92 1 274 1 15 1 40 1 18 1 372 1 80 1 
60 1 143 1 233 1 316 1 282 1 119 1 182 1 277 1 172 1 
33 1 172 1 278 1 
321 1 182 1 233 1 172 1 212 1 
311 1 141 1 231 1 168 2 84 1 233 2 33 1 102 1 292 1 321 1 357 1 182 2 172 1 278 1 89 1 243 1 212 2 253 1 264 2 
349 1 17 1 315 1 272 1 
349 1 24 1 162 1 315 1 287 1 272 1 118 1 
163 1 173 1 118 1 
32 1 349 1 162 1 24 1 315 1 340 1 146 1 287 3 272 1 118 3 88 1 138 2 
349 1 24 1 162 1 90 1 315 1 287 2 7 1 272 1 118 2 
162 1 24 1 285 1 315 1 70 1 12 1 146 1 287 1 217 1 118 1 369 1 
24 1 162 1 315 1 287 1 146 1 272 1 118 1 
349 1 24 1 162 1 287 1 146 1 272 2 118 1 
162 2 24 2 315 1 146 1 287 2 272 1 305 1 118 2 153 1 122 1 
349 1 162 1 24 1 166 1 315 2 146 1 287 3 272 1 217 1 118 3 261 1 94 1 7 2 
349 1 324 1 162 1 24 1 315 1 70 2 12 1 146 1 287 2 272 1 118 2 221 1 369 1 121 1 7 1 
349 1 162 2 24 2 90 1 315 2 146 1 287 4 272 1 217 1 118 4 94 1 87 1 7 2 
349 1 24 1 162 1 315 1 287 1 146 1 272 1 118 1 
349 2 162 1 24 1 340 1 315 3 287 4 272 2 217 1 118 4 94 1 76 1 88 1 138 1 7 2 
349 1 319 1 24 1 162 1 158 1 315 1 72 1 287 2 146 1 7 1 272 1 118 2 
349 1 162 1 24 1 340 1 315 1 146 1 287 3 272 1 118 3 342 1 88 2 138 2 
331 1 337 1 208 2 315 2 
24 1 162 1 287 1 146 1 354 1 118 1 
349 1 24 1 162 1 315 1 287 2 146 1 7 1 272 1 118 2 261 1 
43 1 
349 1 24 1 162 1 315 1 287 1 146 1 272 1 118 1 
349 1 24 1 162 1 315 1 138 1 287 3 146 1 7 1 272 1 118 3 261 1 
94 1 76 1 315 1 217 1 
315 1 272 1 

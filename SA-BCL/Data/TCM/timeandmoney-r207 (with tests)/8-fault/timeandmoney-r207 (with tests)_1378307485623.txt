#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 372 68 326 30 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 355 9 339 1 92 2 61 2 95 9 5 1 307 2 156 1 63 1 137 1 289 1 67 2 208 2 271 4 8 1 245 1 101 3 11 1 181 1 330 1 15 1 14 1 143 6 165 2 192 1 314 5 317 2 
0 1 355 9 339 1 92 2 61 2 95 9 5 1 307 2 156 1 63 1 137 1 289 1 67 2 208 2 271 4 8 1 245 1 101 3 11 1 181 1 330 1 15 1 14 1 143 6 165 2 192 1 314 5 317 2 
0 1 355 10 339 1 92 2 61 2 95 10 5 1 307 2 156 1 63 1 137 1 289 1 67 2 208 2 271 5 8 1 245 1 101 4 11 1 181 1 330 1 15 1 14 1 143 7 165 2 192 1 314 6 317 2 
0 1 355 7 339 1 92 2 61 2 95 7 5 1 307 2 156 1 137 1 289 1 67 1 208 2 271 3 8 1 245 1 101 2 11 1 181 1 330 1 15 1 14 1 143 4 165 2 192 1 314 4 317 2 
11 1 355 4 143 3 165 1 92 1 61 1 5 1 95 4 156 1 63 1 137 1 67 2 271 2 314 3 208 1 317 1 245 1 101 1 
11 1 355 2 14 1 165 1 92 1 75 1 61 1 5 1 95 2 307 1 156 1 176 1 314 1 317 1 135 1 8 1 
11 1 355 3 330 1 143 1 92 2 61 2 5 1 95 3 307 1 156 1 271 1 314 2 101 1 
0 1 355 9 339 1 92 2 61 2 95 9 5 1 307 1 156 1 137 1 63 1 67 2 271 4 208 1 245 1 101 3 11 1 330 1 184 1 143 7 165 1 314 5 317 1 26 1 
0 1 355 9 339 1 92 2 61 2 95 9 5 1 307 1 156 1 137 1 63 1 67 2 271 4 208 1 245 1 101 3 11 1 330 1 184 1 143 7 165 1 314 5 317 1 26 1 
174 1 224 1 368 1 
174 1 210 2 254 1 
338 2 256 2 220 1 55 2 195 1 82 2 247 2 367 2 
168 1 338 2 152 1 203 1 55 2 235 2 119 1 155 2 284 1 358 1 287 1 325 1 65 2 68 2 326 1 348 1 247 3 10 1 12 1 250 1 220 1 76 1 367 2 167 1 42 1 256 2 108 1 372 2 259 1 150 1 315 1 373 1 193 1 194 1 195 1 82 3 48 1 
249 1 338 1 256 1 117 1 70 1 220 1 55 1 82 1 247 1 367 1 
338 1 217 1 117 1 17 1 301 1 344 1 147 1 174 1 224 1 371 1 189 1 134 1 82 1 247 1 
338 1 217 1 117 1 17 2 55 1 301 1 344 1 367 1 174 1 224 1 256 1 371 2 134 1 82 1 247 1 
50 1 371 1 158 1 17 1 269 1 
338 1 87 1 117 1 55 1 236 1 269 1 174 1 158 1 70 1 247 1 249 1 17 2 220 1 367 1 224 1 256 1 371 2 228 1 82 1 
371 1 158 1 17 1 
249 1 338 1 87 1 117 1 17 1 220 1 55 1 269 1 367 1 256 1 371 1 70 1 82 1 247 1 
174 1 
354 1 338 1 87 1 117 1 55 1 269 1 174 1 158 1 70 1 247 1 249 1 17 2 220 1 367 1 224 1 256 1 371 2 228 1 82 1 
278 1 338 1 87 1 116 2 117 1 89 2 55 1 341 1 322 4 237 1 238 2 269 2 174 2 158 2 70 1 34 1 159 1 247 1 249 1 350 1 103 1 37 1 128 1 16 1 220 1 17 5 367 1 41 1 256 1 224 2 370 2 371 5 149 1 335 2 228 1 264 5 82 1 115 2 
195 1 368 1 
338 2 40 1 55 1 367 1 256 1 188 1 82 2 195 2 247 2 
304 1 157 1 142 1 
168 1 12 1 119 1 167 1 42 1 284 1 65 1 372 1 326 1 68 1 315 1 193 1 124 1 195 1 82 1 247 1 
304 1 168 1 338 1 12 1 39 1 55 1 119 1 167 1 42 1 284 1 255 1 256 1 65 1 372 1 326 1 68 1 315 1 193 1 82 2 247 2 
338 5 232 1 39 2 40 1 55 4 147 1 223 1 367 1 78 1 256 4 255 1 82 5 195 1 247 5 
338 2 256 2 216 1 117 1 70 1 55 2 82 2 247 2 
338 3 256 3 39 1 55 3 195 1 82 3 367 1 247 3 
338 1 256 1 117 1 70 1 55 1 82 1 247 1 
338 1 256 1 188 1 117 1 40 1 55 1 82 1 247 1 367 1 
168 1 338 3 117 1 55 3 235 2 119 1 344 1 155 1 284 1 358 1 325 1 65 1 326 1 68 1 348 1 247 4 10 1 12 1 250 1 217 1 39 1 73 1 40 1 17 1 220 1 301 1 76 1 367 2 167 1 187 1 42 1 256 3 255 1 371 1 259 1 372 1 134 1 150 1 315 1 373 1 193 1 194 1 195 1 82 4 
338 2 256 1 39 1 55 1 195 1 82 2 147 1 223 1 247 2 
338 3 217 1 39 2 117 1 73 1 40 1 17 1 55 3 301 1 344 1 367 1 21 1 174 1 255 1 256 3 371 1 134 1 82 3 247 3 
304 1 338 2 256 2 39 1 142 1 40 1 55 2 82 2 247 2 367 1 
168 1 12 1 119 1 167 1 42 1 284 1 65 1 372 1 326 1 68 1 315 1 193 1 195 1 82 1 247 1 
310 1 168 1 281 1 167 1 42 1 284 1 65 1 372 1 326 1 68 1 315 1 193 1 195 1 82 1 247 1 
304 2 337 1 116 1 2 1 89 1 234 1 203 2 235 2 155 4 358 1 325 1 157 2 125 1 348 2 127 1 250 1 299 1 142 2 219 1 109 1 150 1 373 1 80 1 194 1 
338 1 256 1 216 1 117 1 55 1 82 1 344 1 247 1 
43 1 221 1 
43 1 221 1 
199 1 172 1 
199 1 172 1 
199 1 172 1 
43 1 329 1 221 1 
43 1 221 1 166 1 
31 1 199 1 43 2 347 1 172 1 221 2 
43 1 329 1 221 1 
43 1 329 1 221 1 
285 1 43 1 221 1 
285 1 43 1 221 1 
285 1 43 1 221 1 
230 1 305 1 86 1 338 2 202 1 55 2 283 1 204 1 241 1 247 2 161 1 13 1 298 1 17 1 221 1 129 1 366 1 166 1 256 2 43 1 371 1 148 1 195 1 82 2 
85 1 303 1 274 1 215 1 86 2 305 3 327 1 13 2 17 2 221 2 58 2 174 1 239 1 43 2 204 1 241 2 371 2 148 2 347 1 
208 1 317 1 165 1 
176 1 317 1 165 1 
240 1 306 1 176 1 88 1 208 2 165 3 
214 1 240 1 306 1 176 1 208 1 165 2 
240 1 306 2 176 1 208 1 165 2 
116 1 2 1 202 1 89 1 342 1 322 3 93 1 238 1 269 4 283 1 174 2 62 2 158 1 138 1 99 1 210 3 213 2 296 2 37 1 104 1 107 1 17 5 254 1 129 1 224 1 370 1 371 5 44 1 335 1 80 1 228 1 264 2 
338 1 87 1 50 1 117 1 118 1 55 1 269 2 174 1 158 1 70 1 9 1 247 1 249 1 17 2 220 1 145 1 367 1 224 1 256 1 371 2 82 1 
116 1 2 1 89 1 322 3 342 1 269 2 238 1 174 3 62 2 138 1 210 4 213 1 296 2 103 1 104 1 107 1 17 3 254 2 129 1 224 1 370 1 371 3 44 1 335 1 80 1 264 2 
116 2 2 2 89 2 90 1 322 5 342 2 238 1 269 3 174 4 62 4 207 1 138 1 210 7 213 2 296 4 140 1 103 1 104 1 17 4 107 1 254 3 129 2 224 1 370 1 371 4 44 1 335 1 80 2 264 4 
324 1 315 1 368 1 
226 1 315 1 
280 1 
167 1 315 1 193 1 
315 1 262 1 
167 1 315 1 
167 1 324 2 363 1 315 3 139 1 193 1 
29 1 265 2 231 1 116 1 252 1 128 1 89 1 153 1 234 2 203 4 185 1 41 1 155 7 125 3 159 1 160 1 348 3 
29 1 265 2 231 1 116 1 252 1 128 1 89 1 153 1 234 2 203 4 185 1 41 1 155 7 125 3 159 1 160 1 348 3 
29 1 265 2 231 1 116 1 252 1 128 1 89 1 153 1 234 2 203 4 185 1 146 1 41 1 155 7 125 3 159 1 160 1 348 3 
29 2 265 3 231 1 116 4 201 1 2 3 233 1 153 5 89 4 234 5 203 16 235 2 4 3 268 1 342 3 155 31 325 1 206 1 159 2 125 10 100 1 160 2 348 15 312 4 250 1 252 1 128 1 141 1 185 1 41 2 150 1 45 1 373 1 80 3 
29 1 265 2 231 1 116 3 89 3 234 5 153 4 203 9 237 1 235 4 155 16 325 2 125 9 159 2 160 1 348 7 250 2 252 1 128 2 144 1 41 2 369 1 150 2 45 1 373 2 
28 1 168 1 355 2 88 1 3 1 92 1 61 1 95 2 5 1 284 1 307 1 156 1 33 1 65 1 176 1 68 1 66 1 208 1 294 1 177 1 11 1 143 1 165 2 18 1 22 1 372 1 314 1 317 1 229 1 84 1 
28 1 168 1 355 3 88 1 92 1 61 1 95 3 284 1 307 1 156 1 33 1 65 1 122 1 176 1 68 1 66 1 208 1 294 1 177 1 35 1 11 1 143 2 165 2 18 1 332 1 22 1 372 1 314 1 317 1 229 1 
168 1 355 2 88 1 95 2 284 1 307 1 156 1 33 1 65 1 176 1 68 1 66 1 208 1 294 1 177 1 35 1 11 1 143 2 165 2 18 1 332 1 22 1 372 1 314 1 317 1 
168 1 355 1 300 1 92 1 167 1 61 1 22 2 95 1 284 1 307 2 257 1 190 1 122 1 65 1 372 1 326 1 68 1 315 1 294 2 211 1 177 2 113 1 49 1 
28 1 168 1 355 1 88 1 165 2 3 1 18 1 92 1 61 1 5 1 95 1 22 1 284 1 307 1 33 1 176 1 65 1 372 1 66 1 68 1 208 1 294 1 317 1 177 1 229 1 35 1 
163 1 
168 2 279 1 356 1 322 1 30 1 238 1 284 3 288 1 65 2 68 2 326 2 158 2 244 1 37 1 104 1 38 1 17 2 167 2 370 1 371 2 372 2 315 2 335 1 228 1 193 1 81 1 264 1 113 1 49 1 
354 1 338 1 117 1 56 1 344 1 96 1 158 2 7 1 126 1 247 1 217 1 328 2 17 3 164 1 301 1 147 1 225 1 371 3 189 1 134 1 228 1 82 1 
338 1 354 1 117 1 343 1 344 1 174 1 96 1 158 1 7 1 126 1 247 1 217 1 328 3 17 3 164 1 301 1 147 1 225 1 224 1 371 3 189 1 134 1 228 1 82 1 
354 1 338 1 117 1 56 1 343 1 344 1 96 1 121 1 158 2 7 1 126 1 247 1 217 1 328 3 17 3 164 1 301 1 147 1 225 1 371 3 189 1 134 1 228 1 82 1 
338 2 117 2 55 1 56 4 343 2 344 1 121 4 158 7 70 1 7 1 126 1 217 1 162 1 220 1 17 5 164 1 222 2 19 1 224 1 225 1 134 1 228 3 82 2 354 1 87 1 170 1 322 1 238 1 174 1 175 1 96 1 98 1 293 2 247 2 249 1 361 1 36 2 37 1 328 4 182 2 301 1 365 1 254 2 367 1 147 1 256 1 370 1 371 5 189 1 335 1 264 1 
338 2 117 2 55 1 56 2 343 2 344 1 121 2 158 4 70 1 7 1 210 2 126 1 217 1 220 1 17 4 164 1 222 2 225 1 224 1 134 1 228 2 82 2 87 1 170 1 322 1 238 1 175 1 174 1 96 1 293 2 247 2 249 1 36 2 37 1 328 4 182 2 301 1 254 2 367 1 147 1 256 1 370 1 371 4 189 1 335 1 264 1 196 1 
338 1 170 1 117 1 56 2 322 1 343 2 344 1 238 1 174 1 175 1 96 1 121 2 98 1 158 4 293 2 7 1 126 1 247 1 36 2 361 1 217 1 37 1 182 2 328 4 17 4 164 1 222 2 301 1 254 2 365 1 147 1 224 1 225 1 370 1 371 4 189 1 134 1 335 1 228 2 264 1 82 1 
338 2 117 2 55 1 56 2 343 2 344 1 121 2 158 4 70 1 7 1 126 1 217 1 220 1 17 4 164 1 222 2 225 1 224 1 134 1 228 2 82 2 87 1 170 1 322 1 238 1 175 1 174 1 96 1 98 1 293 2 247 2 249 1 361 1 36 2 37 1 328 4 182 2 301 1 365 1 254 2 367 1 147 1 256 1 370 1 371 4 189 1 335 1 264 1 
338 1 217 1 328 2 117 1 17 2 267 1 164 1 301 1 344 1 147 1 96 1 225 1 371 2 189 1 134 1 7 1 126 1 82 1 247 1 
338 2 117 2 55 1 56 3 343 3 344 1 121 3 158 5 70 1 7 1 126 1 217 1 162 1 220 1 17 4 164 1 222 2 225 1 224 1 134 1 228 2 82 2 87 1 170 1 322 1 238 1 175 1 174 1 96 1 98 1 293 2 247 2 249 1 361 1 36 2 37 1 328 5 182 2 301 1 365 1 254 2 367 1 147 1 256 1 370 1 371 4 189 1 335 1 264 1 
338 2 117 2 55 1 56 3 343 3 344 1 121 3 158 5 70 1 7 1 126 1 217 1 162 1 220 1 17 4 164 1 222 2 225 1 224 1 134 1 228 2 82 2 87 1 170 1 322 1 238 1 175 1 174 1 96 1 98 1 293 2 247 2 249 1 361 1 36 2 37 1 328 5 182 2 301 1 365 1 254 2 367 1 147 1 256 1 370 1 371 4 189 1 335 1 264 1 
338 1 200 1 117 1 56 1 343 1 344 1 59 1 121 1 158 2 7 1 210 2 126 1 217 1 17 3 164 1 225 1 224 1 134 1 228 1 82 1 322 1 238 1 174 1 175 1 96 1 293 2 247 1 37 1 328 3 182 2 301 1 147 1 370 1 371 3 189 1 335 1 263 2 264 1 196 1 
304 1 265 1 231 1 116 1 234 2 89 1 203 3 235 2 155 6 358 1 325 1 157 1 159 1 125 2 348 3 250 1 252 1 128 1 299 1 142 1 41 1 368 1 150 1 373 1 194 1 195 2 
304 11 116 2 340 1 2 1 153 1 234 1 89 1 203 8 268 1 91 1 235 4 4 3 342 2 323 1 155 14 358 2 325 2 157 11 125 2 212 1 348 6 312 3 250 2 141 1 142 4 76 1 108 1 150 2 373 2 80 2 194 1 195 1 136 1 
168 1 338 1 55 1 203 1 235 2 119 1 60 1 155 2 284 1 358 1 65 1 325 1 68 1 326 1 242 1 124 1 212 1 247 2 348 1 12 1 250 1 362 1 39 1 142 1 76 1 167 1 42 1 256 1 255 1 108 1 372 1 315 1 150 1 373 1 193 1 194 1 195 1 82 2 
265 1 304 7 338 1 116 3 2 2 154 1 153 4 55 1 203 10 342 2 119 2 155 20 64 2 65 3 68 3 157 7 159 1 212 1 125 8 348 10 12 2 128 1 76 1 167 2 275 1 315 2 80 2 82 3 168 2 231 1 234 4 89 3 235 6 94 2 284 2 358 3 325 3 326 1 35 1 247 3 250 3 252 1 39 1 142 7 41 1 42 2 255 1 256 1 108 1 372 3 260 2 259 2 261 1 150 3 373 3 193 2 194 3 111 2 195 2 
168 2 338 1 318 1 152 2 55 1 203 1 235 4 120 1 155 2 284 2 358 2 65 8 325 2 68 7 326 2 35 1 247 1 348 1 311 1 250 2 297 1 39 1 299 1 218 1 76 1 167 2 256 1 108 1 372 8 227 1 315 3 150 2 46 1 373 2 194 2 82 1 113 1 84 1 49 1 
304 1 338 1 116 1 2 1 234 1 89 1 55 1 203 1 235 2 342 1 155 3 358 1 325 1 157 1 125 1 212 1 247 1 348 2 250 1 142 1 40 1 367 1 256 1 150 1 373 1 80 1 194 1 82 1 83 1 
304 1 337 1 250 1 116 1 299 1 142 1 153 1 203 2 235 2 155 2 358 1 325 1 157 1 150 1 373 1 80 1 194 1 125 1 
304 1 250 1 299 1 142 1 2 1 234 1 89 1 235 2 155 2 358 1 325 1 157 1 109 1 150 1 373 1 194 1 125 1 348 2 
304 2 250 1 116 1 299 1 2 1 142 2 234 1 89 1 153 1 203 2 235 2 342 1 155 4 358 1 325 1 157 2 150 1 373 1 80 1 194 1 125 2 348 2 
304 1 337 1 250 1 116 1 142 1 153 1 203 2 235 2 155 2 358 1 227 1 325 1 157 1 150 1 373 1 80 1 194 1 125 1 
304 1 250 1 142 1 2 1 234 1 89 1 235 2 155 2 358 1 227 1 325 1 157 1 109 1 150 1 373 1 194 1 125 1 348 2 
304 2 250 1 116 1 2 1 142 2 234 1 89 1 153 1 203 2 235 2 342 1 155 4 358 1 227 1 325 1 157 2 150 1 373 1 80 1 194 1 125 2 348 2 
304 2 250 1 116 1 2 1 142 2 234 1 89 1 153 1 203 2 235 2 342 1 155 4 358 1 325 1 157 2 150 1 373 1 80 1 194 1 125 2 348 2 
168 1 203 1 235 2 119 1 155 2 284 1 358 1 65 1 325 1 68 1 326 1 247 1 348 1 12 1 250 1 76 1 167 1 42 1 108 1 259 1 372 1 315 1 150 1 373 1 193 1 194 1 195 1 82 1 
168 1 203 1 281 1 235 2 155 2 284 1 358 1 65 1 325 1 68 1 326 1 247 1 348 1 310 1 250 1 76 1 167 1 42 1 79 1 108 1 372 1 315 1 150 1 373 1 193 1 194 1 195 1 82 1 
304 2 250 1 116 1 2 1 142 2 234 1 89 1 153 1 203 2 235 2 342 1 155 4 358 1 325 1 157 2 150 1 373 1 80 1 194 1 125 2 212 1 348 2 
304 2 168 1 116 1 2 1 234 1 89 1 153 1 203 2 235 2 342 1 119 1 155 4 94 1 284 1 358 1 65 1 325 1 157 2 68 1 125 2 348 2 247 1 12 1 250 1 142 2 167 1 42 1 259 1 372 1 315 1 150 1 80 1 373 1 193 1 194 1 82 1 84 1 
304 1 338 1 116 1 2 1 89 1 153 1 55 1 203 2 235 2 342 1 282 1 155 3 358 1 325 1 157 1 125 1 212 1 348 1 247 1 250 1 142 1 40 1 367 1 256 1 150 1 373 1 80 1 194 1 82 1 
198 1 116 3 2 3 234 3 153 3 89 3 203 9 268 1 235 4 4 1 342 3 357 1 155 19 325 2 295 1 125 6 348 10 248 2 349 1 312 2 250 2 253 1 141 1 351 2 364 1 144 1 150 2 373 2 80 3 336 1 
198 1 116 3 2 2 153 2 234 2 89 2 203 14 235 6 268 2 4 2 342 3 357 1 57 1 155 26 325 3 292 1 295 2 178 1 125 4 348 12 248 1 349 2 251 1 250 3 312 2 351 4 364 1 144 1 258 1 276 1 45 2 150 3 373 3 80 3 
265 1 198 1 116 5 2 4 153 4 203 20 342 4 4 3 268 3 57 1 155 41 125 8 159 1 348 21 349 2 312 4 128 1 351 4 74 1 276 1 80 4 231 1 89 5 234 4 235 6 357 1 325 3 292 1 295 1 178 1 248 1 250 3 251 1 252 1 141 1 364 1 144 1 41 1 258 1 150 3 45 1 373 3 336 1 
265 1 231 1 198 1 116 5 2 3 234 4 153 3 89 4 203 20 268 3 235 8 4 3 342 4 357 1 57 1 155 38 325 4 292 1 178 1 295 1 159 1 125 7 348 18 248 1 349 2 251 1 312 4 250 4 252 1 128 1 141 1 351 4 364 1 144 1 74 1 41 1 258 1 276 1 45 2 150 4 373 4 80 4 336 1 
265 1 231 1 198 1 116 8 340 2 2 7 234 7 153 7 89 8 203 27 268 2 235 4 4 4 342 7 357 1 57 1 155 52 325 2 292 1 178 1 295 1 159 1 125 14 348 25 248 1 349 1 251 1 312 4 250 2 252 1 128 1 141 2 351 4 364 1 144 1 41 1 258 1 276 1 45 1 150 2 373 2 80 7 
239 1 215 1 43 1 86 1 241 1 13 1 148 1 347 1 221 1 114 1 
366 1 166 1 
333 1 43 1 86 1 241 1 13 1 148 1 266 1 221 1 173 1 
329 1 47 1 
31 1 285 1 24 1 
85 1 303 1 274 1 215 1 86 1 305 2 13 1 17 1 221 1 58 1 174 1 239 1 43 1 204 1 371 1 241 1 148 1 347 1 
85 1 303 1 274 1 215 1 86 1 305 2 13 1 17 1 221 1 58 1 174 1 239 1 43 1 204 1 371 1 241 1 148 1 347 1 
85 1 303 1 274 1 215 1 86 1 305 2 13 1 17 1 221 1 58 1 174 1 239 1 43 1 204 1 371 1 241 1 148 1 347 1 
31 1 329 1 47 1 
31 1 329 1 47 1 
285 1 24 1 
31 1 285 1 24 1 
230 1 161 1 
230 1 86 1 305 1 338 2 202 1 55 2 58 1 269 1 283 1 205 1 241 1 247 2 274 1 161 1 13 1 298 1 17 1 221 1 129 1 366 1 166 1 43 1 256 2 371 1 148 1 195 1 82 2 
168 1 338 2 320 1 152 2 203 1 235 2 155 2 284 1 358 1 65 2 325 1 68 2 360 1 212 1 247 2 348 1 250 1 297 1 76 1 167 1 131 1 132 1 108 1 372 2 315 1 150 1 46 1 373 1 194 1 82 2 27 1 
28 1 168 1 169 1 88 1 165 2 18 1 22 1 284 1 32 1 176 1 65 2 372 2 68 2 66 1 208 1 317 1 302 1 35 1 84 1 
28 1 168 1 88 1 165 2 18 1 22 1 32 1 284 1 176 1 65 1 372 1 68 1 66 1 208 1 316 1 317 1 35 1 
168 1 169 1 167 1 22 1 284 1 345 1 65 1 372 1 190 1 326 1 68 1 315 1 113 1 49 1 
28 1 168 1 169 1 88 1 165 2 18 1 22 1 284 1 32 1 176 1 65 1 372 1 68 1 66 1 208 1 317 1 302 1 35 1 
53 1 
174 1 224 1 16 1 341 1 322 1 264 1 368 1 
338 1 87 1 170 1 117 1 55 1 322 1 238 1 174 1 158 1 70 1 210 1 247 1 249 1 36 1 37 1 220 1 17 1 222 1 254 1 367 1 256 1 224 1 370 1 371 1 335 1 228 1 264 1 82 1 
168 1 116 1 2 1 89 1 342 1 322 4 238 2 174 3 284 2 62 3 65 1 158 2 68 1 326 1 139 1 210 6 359 1 246 1 72 1 296 3 217 1 37 2 104 1 331 1 17 2 254 3 130 1 167 1 23 1 370 2 371 2 226 2 191 1 372 1 335 2 315 3 80 1 228 1 193 1 264 3 111 1 115 1 
197 1 338 1 116 2 117 1 2 2 55 1 342 2 4 1 268 1 57 1 62 5 158 1 70 1 210 6 312 1 17 1 220 1 224 2 276 1 80 2 228 1 353 1 82 1 278 1 279 1 87 1 89 2 322 8 238 2 174 5 292 1 178 1 247 1 249 1 296 5 37 2 104 1 254 3 367 1 256 1 258 1 370 2 371 1 335 2 264 5 115 2 
278 1 338 1 116 2 87 1 117 1 89 1 55 1 237 1 322 2 238 1 70 1 159 1 247 1 249 1 37 1 128 1 17 1 220 1 365 1 41 1 367 1 256 1 370 1 371 1 335 1 264 2 82 1 115 2 
37 1 16 1 341 1 322 1 238 1 174 1 224 1 370 1 335 1 264 1 
278 1 296 5 116 2 2 2 89 2 342 2 322 5 254 5 174 5 62 5 80 2 111 1 264 5 210 10 115 2 
249 1 338 1 87 1 117 1 220 1 17 1 55 1 367 1 174 1 256 1 224 1 371 1 158 1 70 1 228 1 82 1 247 1 
279 1 104 1 37 1 17 1 322 1 30 1 238 1 370 1 288 1 371 1 65 2 372 2 158 2 326 2 68 2 334 1 335 1 228 1 264 1 
168 1 338 2 55 2 235 2 119 1 155 1 284 1 358 1 325 1 65 1 68 1 326 1 348 1 247 3 10 1 12 1 250 1 220 1 76 1 367 2 167 1 42 1 256 2 372 1 259 1 150 1 315 1 373 1 193 1 194 1 195 1 82 3 
265 1 296 2 279 1 37 1 104 1 322 1 254 2 238 1 174 4 62 2 224 2 370 1 335 1 210 4 264 2 
241 1 13 1 25 1 
215 1 161 1 241 1 13 1 123 1 
241 1 13 1 25 1 
241 1 13 1 25 1 
241 1 13 1 20 1 
241 1 13 1 20 1 
241 1 13 1 20 1 
241 1 13 1 
43 1 221 1 
265 1 231 1 116 1 250 2 252 1 128 1 89 1 153 1 234 2 203 4 235 4 41 1 155 8 325 2 150 2 45 1 373 2 125 3 159 1 348 4 
265 1 231 1 116 1 252 1 128 1 234 2 89 1 203 3 368 1 41 1 155 6 159 1 125 2 348 3 
250 1 116 1 2 1 234 1 89 1 106 1 153 1 203 2 235 2 342 1 155 4 325 1 150 1 373 1 80 1 125 2 348 2 
312 2 116 1 141 1 2 1 234 1 89 1 153 1 203 3 268 1 4 1 342 1 155 7 80 1 125 2 348 4 
265 1 231 1 116 3 2 2 340 1 153 4 89 3 234 5 203 11 342 2 4 2 235 4 155 23 323 1 325 2 209 1 159 2 125 9 348 12 312 2 250 2 252 1 128 1 141 1 41 2 45 2 150 2 80 2 373 2 
155 1 312 1 348 1 
155 1 203 1 4 1 
250 1 116 1 2 1 106 1 153 1 89 1 234 2 203 3 235 2 342 1 155 6 325 1 150 1 373 1 80 1 111 1 125 3 348 3 
116 2 2 2 153 1 89 2 234 1 203 6 4 1 268 1 235 2 342 2 57 1 155 12 325 1 292 1 178 1 125 2 348 6 312 1 250 1 144 1 258 1 276 1 150 1 373 1 80 2 
116 1 128 1 89 1 234 1 153 1 203 3 41 1 155 6 159 1 125 2 348 3 
231 1 250 1 252 1 153 1 234 1 203 1 235 2 41 1 155 3 325 1 45 1 150 1 373 1 209 1 125 2 159 1 348 2 
250 1 116 2 128 1 234 3 153 2 89 2 203 5 235 2 144 1 237 1 41 2 155 10 325 1 150 1 373 1 159 2 125 5 348 5 
250 1 116 1 153 1 203 2 144 1 235 2 155 2 325 1 150 1 373 1 80 1 125 1 
250 1 116 1 2 1 234 1 89 1 153 1 203 2 144 1 235 2 342 1 155 4 325 1 150 1 373 1 80 1 125 2 348 2 
250 3 234 1 153 1 203 1 144 1 235 6 41 1 155 3 325 3 45 1 150 3 373 3 209 1 336 1 159 1 125 2 348 2 
265 1 231 1 116 5 201 1 2 3 153 5 89 5 234 7 203 16 268 1 235 10 4 3 342 3 155 34 206 1 325 5 209 1 159 3 100 1 125 12 348 18 312 4 250 5 252 1 128 2 141 1 106 1 144 1 41 3 45 2 150 5 373 5 80 3 336 1 
265 1 231 1 116 1 89 1 234 2 203 4 4 1 268 1 235 2 155 8 325 1 292 1 159 1 125 2 348 4 312 1 250 1 252 1 128 1 144 1 41 1 150 1 373 1 
265 1 231 1 116 2 89 1 234 2 153 1 203 6 268 1 235 4 4 1 342 1 155 11 325 2 292 1 159 1 125 3 348 5 312 2 250 2 252 1 128 1 141 1 106 1 144 1 41 1 150 2 373 2 80 1 
265 1 231 1 116 3 2 2 153 1 89 3 234 3 203 9 4 1 268 1 235 6 342 2 57 1 155 19 325 3 292 1 178 1 159 1 125 4 348 10 312 1 250 3 252 1 128 1 106 1 144 1 41 1 258 1 276 1 150 3 45 1 373 3 80 2 
265 1 231 1 116 3 2 1 153 2 89 2 234 3 203 10 4 1 268 1 235 6 342 2 57 1 155 17 325 3 292 1 178 1 159 1 125 5 348 7 312 1 250 3 252 1 128 1 106 1 144 1 41 1 258 1 276 1 45 1 150 3 373 3 80 2 
265 1 231 1 116 1 89 1 234 2 203 4 4 1 268 1 235 2 155 8 325 1 292 1 159 1 125 2 348 4 312 1 250 1 252 1 128 1 144 1 41 1 150 1 373 1 
116 2 2 2 153 1 89 2 234 1 203 6 4 1 268 1 235 2 342 2 57 1 155 12 325 1 292 1 178 1 125 2 348 6 312 1 250 1 144 1 258 1 276 1 150 1 373 1 80 2 
265 1 231 1 116 3 2 1 153 2 89 2 234 3 203 10 268 1 235 8 4 1 342 2 57 1 155 18 325 4 292 1 178 1 159 1 125 5 348 8 312 1 250 4 252 1 128 1 106 1 144 1 41 1 258 1 276 1 150 4 45 2 373 4 80 2 
116 3 2 2 153 3 89 2 234 3 203 9 268 1 235 8 4 1 342 3 57 1 155 16 325 4 292 1 178 1 125 6 348 7 312 1 250 4 144 1 258 1 276 1 150 4 45 2 373 4 80 3 336 1 
231 2 116 1 252 1 128 1 89 1 234 3 153 3 203 3 41 3 155 7 159 3 125 6 348 4 
265 1 231 1 116 3 2 1 153 1 89 2 234 3 203 10 268 1 235 8 4 1 342 2 57 1 155 18 325 4 292 1 178 1 159 1 125 4 348 8 312 1 250 4 252 1 128 1 144 1 41 1 258 1 276 1 150 4 45 2 373 4 80 2 336 1 
338 1 243 1 195 1 82 1 247 1 147 1 223 1 
338 1 105 1 223 1 147 1 277 1 291 1 243 1 374 1 195 1 309 1 82 1 247 1 
167 1 284 1 168 1 372 1 65 1 68 1 326 1 315 1 113 1 49 1 368 1 
168 1 338 1 39 1 55 1 119 1 167 1 42 1 284 1 256 1 65 1 372 1 326 1 68 1 315 1 193 1 195 1 82 2 247 2 
168 1 338 2 117 1 55 2 119 1 344 1 284 1 97 1 65 1 68 1 247 2 39 1 167 2 42 1 256 1 372 1 134 1 315 3 262 1 193 2 151 1 195 1 82 2 
168 1 338 2 52 1 117 1 55 2 281 1 344 1 284 1 97 1 65 2 68 2 247 2 39 1 167 2 42 1 256 1 372 2 134 1 315 3 262 1 193 2 151 1 195 1 82 2 
338 1 87 1 117 1 55 1 174 1 97 1 324 1 65 1 158 1 68 1 70 1 247 1 249 1 217 1 17 2 220 1 186 1 367 1 224 1 256 1 226 1 371 2 372 1 315 2 82 1 
338 1 87 1 117 1 55 1 174 1 97 1 65 1 158 1 68 1 70 1 359 1 247 1 249 1 217 1 17 2 220 1 367 1 224 1 256 1 226 1 371 2 372 1 315 1 82 1 
284 1 168 1 311 1 372 1 65 1 68 1 
311 1 168 2 297 1 318 1 152 1 38 1 218 1 77 1 167 2 120 1 284 3 65 7 372 7 326 2 68 6 315 3 244 1 139 1 193 1 35 1 84 1 
304 1 265 1 168 1 231 1 338 1 116 1 89 1 234 2 203 3 55 1 235 4 119 1 155 6 94 1 284 1 358 2 325 2 65 1 157 1 68 1 125 2 159 1 212 1 348 3 247 2 12 1 250 2 252 1 128 1 39 1 142 1 41 1 167 1 131 1 42 1 256 1 372 1 260 1 259 1 315 1 150 2 373 2 193 1 194 2 195 2 82 2 84 1 
338 1 116 2 117 1 341 1 55 1 269 1 65 1 158 2 68 1 70 1 159 1 72 1 217 1 128 1 16 1 17 3 220 1 130 1 224 2 23 1 226 1 315 1 228 1 82 1 278 1 87 1 89 2 237 1 322 4 238 2 174 2 326 1 359 1 247 1 249 1 37 2 41 1 367 1 256 1 370 2 371 3 372 1 334 1 335 2 264 5 115 2 
311 1 168 1 167 1 284 2 324 1 65 2 372 2 191 1 68 2 315 2 139 1 193 1 84 1 
168 1 319 1 52 1 167 1 284 1 65 4 372 4 326 1 68 4 315 1 113 1 84 1 49 1 
168 1 356 1 38 1 154 1 167 1 284 2 97 1 65 2 372 2 68 2 315 1 244 1 81 1 193 1 
284 1 168 1 176 1 372 1 65 1 68 1 326 1 317 1 165 1 18 1 
168 1 297 1 167 1 284 1 65 2 372 2 68 2 315 1 360 1 84 1 35 1 
168 2 297 1 319 1 218 1 167 2 120 1 284 2 97 1 65 5 372 5 326 1 68 4 315 3 113 1 49 1 84 1 
168 2 297 1 319 1 218 1 167 2 284 2 97 1 65 5 372 5 290 1 326 1 68 4 315 3 113 1 49 1 84 1 
168 1 338 1 39 1 55 1 281 1 167 1 42 1 284 1 256 1 65 1 372 1 326 1 68 1 315 1 193 1 195 1 82 2 247 2 
168 1 38 1 77 1 167 1 284 2 97 1 65 1 372 1 68 1 315 1 244 1 139 1 193 1 
1 1 321 1 54 1 272 1 195 1 
217 1 180 1 1 2 117 1 321 2 54 2 73 1 17 2 301 1 344 1 313 1 269 1 174 1 224 1 371 2 134 1 272 1 195 1 112 1 
338 1 1 1 320 1 54 1 132 1 272 1 27 1 82 1 247 1 
272 1 112 1 313 1 
11 1 156 1 314 1 368 1 
61 1 95 1 11 1 355 1 156 1 314 1 92 1 
307 1 355 1 294 1 
61 1 95 3 5 1 11 1 346 1 355 3 156 1 133 1 183 1 14 2 314 1 92 1 
61 1 95 2 11 1 355 2 156 1 67 1 314 1 143 1 92 1 
355 1 165 1 92 1 61 1 5 1 95 1 137 1 271 1 314 1 208 1 317 1 
61 1 95 1 5 1 11 1 355 1 314 1 92 1 
61 1 95 1 5 1 11 2 355 1 156 1 92 1 
11 1 355 2 171 1 92 2 61 2 5 1 95 2 352 1 314 1 110 1 
0 1 11 1 355 3 339 1 143 2 92 1 61 1 5 1 95 3 156 1 271 1 314 2 101 1 
273 1 11 1 355 2 88 1 143 1 165 2 92 1 61 1 5 1 95 2 156 1 176 1 314 1 208 1 317 1 
11 1 355 4 143 2 92 2 61 2 5 1 95 4 156 1 63 1 67 1 271 1 314 2 101 1 
61 1 95 1 5 1 11 1 355 1 156 1 314 1 92 1 
11 2 355 4 14 1 143 2 92 1 61 1 95 4 346 1 133 1 156 2 271 1 314 3 308 1 101 1 
61 1 95 2 5 1 11 1 102 1 355 2 156 1 270 1 314 1 143 1 26 1 92 1 
11 1 355 3 14 2 92 1 61 1 5 1 95 3 346 2 133 1 156 1 314 1 69 1 
71 1 179 1 314 2 6 2 
61 1 95 1 5 1 355 1 51 1 92 1 
61 1 0 1 95 2 5 1 11 1 355 2 156 1 314 1 143 1 92 1 
286 1 
61 1 95 1 5 1 11 1 355 1 156 1 314 1 92 1 
61 1 0 1 95 3 5 1 11 1 355 3 156 1 14 1 314 1 143 1 92 1 
314 1 271 1 308 1 101 1 
11 1 314 1 

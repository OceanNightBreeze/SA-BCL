#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (128,191) 71 (165,241) (165,241) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (128,191) 71 (165,241) (165,241) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (128,191) 71 (165,241) (165,241) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (128,191) 71 (165,241) (165,241) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 303 296 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (59,83) (27,185) (27,185) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (26,196,290,362) (26,196,290,362) (254,318,351) (254,318,351) (254,318,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (26,196,290,362) (26,196,290,362) (254,318,351) (254,318,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (26,196,290,362) (26,196,290,362) (254,318,351) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (26,196,290,362) (26,196,290,362) (254,318,351) (254,318,351) (254,318,351) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 213 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 120 209 335 354 218 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 120 209 335 354 218 34 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 120 209 335 354 218 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (59,83) (59,83) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (59,83) (27,185) (27,185) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (59,83) (27,185) (27,185) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (59,83) (27,185) (27,185) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 303 296 200 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 120 209 335 354 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 120 209 335 354 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 120 209 335 354 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 213 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 71 1 50 1 191 1 348 1 241 1 290 1 196 1 154 1 26 1 2 1 
165 1 71 1 50 1 191 1 348 1 241 1 290 1 196 1 154 1 26 1 2 1 
165 1 71 1 50 1 191 1 348 1 241 1 290 1 196 1 154 1 26 1 2 1 
165 1 71 1 50 1 191 1 348 1 241 1 290 1 196 1 154 1 26 1 2 1 
135 1 348 4 42 1 350 3 362 3 154 1 163 1 286 1 141 1 220 2 181 1 290 4 196 1 26 1 309 1 169 2 98 1 311 1 
348 2 350 1 42 1 297 1 271 1 154 1 162 1 286 1 2 1 50 1 181 1 290 2 196 1 26 1 66 1 98 1 
348 3 350 2 362 1 154 1 286 1 128 1 50 1 290 3 196 2 26 2 169 1 98 1 311 1 
198 1 42 1 362 7 154 1 286 1 128 1 50 1 181 1 289 1 290 9 26 2 135 1 348 9 350 5 163 1 141 1 220 2 221 1 375 1 196 2 309 1 169 4 98 1 311 3 
198 1 42 1 362 7 154 1 286 1 128 1 50 1 181 1 289 1 290 9 26 2 135 1 348 9 350 5 163 1 141 1 220 2 221 1 375 1 196 2 309 1 169 4 98 1 311 3 
0 1 213 1 307 1 
0 1 124 1 267 2 
123 1 235 2 257 2 152 2 324 2 363 1 216 2 273 2 
123 1 336 1 100 1 151 2 43 1 152 2 270 2 363 1 103 1 317 1 273 2 205 1 288 1 235 3 159 1 23 1 25 1 324 2 346 2 29 1 347 1 257 2 136 2 85 1 214 1 370 1 58 1 11 1 216 3 281 1 90 1 35 1 332 1 222 2 378 1 244 1 67 1 
312 1 235 1 257 1 152 1 137 1 324 1 363 1 216 1 272 1 273 1 
312 1 0 1 216 1 273 1 233 1 166 1 235 1 304 1 307 1 252 1 310 1 263 1 108 1 41 1 
312 1 0 1 257 1 152 1 216 1 273 1 233 1 166 1 235 1 304 1 307 1 324 1 310 1 108 2 41 2 
180 1 298 1 108 1 287 1 41 1 
0 1 298 1 307 1 329 1 108 2 287 1 265 1 41 2 
298 1 108 1 41 1 
312 1 257 1 137 1 152 1 363 1 216 1 272 1 273 1 287 1 330 1 235 1 324 1 108 1 41 1 
0 1 
0 1 207 1 298 1 307 1 108 2 287 1 265 1 41 2 
238 1 359 1 0 1 339 1 298 2 155 2 232 1 250 2 287 2 182 1 106 1 307 1 53 1 308 1 108 5 7 1 170 2 265 1 41 5 
346 1 29 1 347 1 257 1 43 1 85 1 152 1 136 1 11 1 216 2 317 1 273 1 281 1 274 1 235 2 167 1 25 1 222 1 262 1 67 1 
123 1 213 1 
123 2 256 1 257 1 152 1 216 2 273 2 282 1 235 2 324 1 
167 1 110 1 61 1 
123 1 346 1 29 1 347 1 43 1 136 1 85 1 11 1 216 1 317 1 281 1 177 1 235 1 25 1 222 1 67 1 
123 1 257 4 256 1 152 4 216 5 273 5 371 1 319 1 274 2 235 5 324 1 262 1 263 1 224 1 
312 1 235 2 257 2 152 2 216 2 272 1 273 2 211 1 
123 1 274 1 235 3 257 3 152 3 324 1 216 3 273 3 
312 1 235 1 257 1 152 1 216 1 272 1 273 1 
282 1 312 1 235 1 257 1 256 1 152 1 324 1 216 1 273 1 
123 1 336 1 312 1 100 1 151 1 43 1 152 3 270 2 363 1 103 1 317 1 273 3 233 1 274 1 205 1 288 1 235 4 159 1 280 1 25 1 324 2 108 1 326 1 346 1 29 1 347 1 256 1 257 3 85 1 136 1 58 1 11 1 216 4 281 1 35 1 166 1 304 1 222 1 378 1 262 1 310 1 244 1 67 1 41 1 
123 1 274 1 235 2 257 1 152 1 216 2 263 1 273 2 319 1 
312 1 256 1 0 1 257 3 152 3 49 1 216 3 273 3 233 1 274 2 166 1 235 3 280 1 304 1 324 1 262 1 310 1 108 1 41 1 
274 1 235 2 257 2 256 1 167 1 152 2 324 1 216 2 273 2 110 1 
123 1 346 1 29 1 347 1 43 1 136 1 85 1 11 1 216 1 317 1 281 1 235 1 25 1 222 1 67 1 
123 1 346 1 29 1 347 1 239 1 136 1 85 1 216 1 317 1 281 1 235 1 300 1 25 1 222 1 67 1 
336 1 226 1 72 1 100 1 151 4 270 2 74 1 20 1 203 1 288 1 159 1 107 1 187 1 109 1 110 2 192 1 31 1 214 2 61 2 35 1 167 2 120 1 378 1 244 2 
312 1 235 1 257 1 152 1 304 1 216 1 273 1 211 1 
223 1 283 1 
223 1 283 1 
357 1 174 1 
357 1 174 1 
357 1 174 1 
223 1 325 1 283 1 
223 1 325 1 283 1 
223 1 264 1 283 1 
357 1 174 1 115 1 223 2 89 1 283 2 
223 1 325 1 283 1 
223 1 145 1 283 1 
223 1 145 1 283 1 
223 1 145 1 283 1 
57 1 257 1 296 1 199 1 152 1 369 1 46 1 144 1 216 1 273 1 21 1 235 1 373 1 303 1 291 1 379 1 108 1 41 1 
0 1 199 1 369 2 46 2 127 1 59 1 144 2 21 2 195 1 185 1 27 1 291 2 108 2 41 2 
135 1 42 1 181 1 
42 1 181 1 297 1 
135 2 331 1 292 1 181 3 297 1 278 1 
135 1 292 1 181 2 297 1 278 1 40 1 
135 1 292 1 181 2 297 1 278 2 
72 1 124 1 0 2 267 3 268 2 155 1 101 1 105 2 250 1 232 1 287 4 5 1 53 2 186 1 187 1 108 5 209 1 134 1 238 3 255 1 57 1 192 1 86 1 298 1 373 1 120 1 307 1 377 2 379 1 170 1 265 1 41 5 
72 3 124 3 0 5 267 9 1 5 314 1 268 6 101 1 155 2 48 1 232 1 250 2 287 7 176 1 180 5 182 1 53 6 186 2 344 1 187 3 108 9 209 3 238 8 255 2 57 4 192 3 298 6 120 3 358 1 307 1 377 6 39 1 170 2 41 9 265 1 
72 1 0 3 124 2 267 4 268 2 155 1 105 1 250 1 287 2 182 1 186 1 53 2 187 1 108 3 209 1 134 1 238 3 255 1 57 1 192 1 86 1 307 1 120 1 377 2 170 1 41 3 
72 2 0 4 124 3 267 7 314 1 268 4 155 1 48 1 105 2 250 1 287 3 182 1 186 1 53 4 187 2 108 4 209 2 134 1 238 5 255 1 57 2 192 2 86 1 307 1 120 2 377 4 39 1 170 1 41 4 
75 1 213 1 281 1 
184 1 281 1 
44 1 
317 1 67 1 281 1 
63 1 281 1 
67 1 281 1 
75 2 147 1 77 1 317 1 67 1 281 3 
72 3 151 15 269 2 230 1 19 1 322 2 188 1 109 4 327 1 84 1 192 3 31 5 214 8 36 1 93 1 244 7 69 2 95 2 
72 3 151 15 269 2 230 1 19 1 322 2 188 1 109 4 327 1 84 1 192 3 31 7 214 8 36 1 93 3 244 7 69 2 95 2 
72 3 151 15 269 2 230 1 19 1 322 2 24 1 188 1 109 4 327 1 84 1 192 3 31 5 214 8 36 1 93 1 244 7 69 2 95 2 
336 1 72 6 100 1 151 41 269 3 270 2 230 1 19 1 178 4 288 1 322 2 187 3 188 1 55 1 109 7 209 3 212 1 327 2 84 2 192 6 258 1 31 14 214 21 164 1 91 1 35 1 36 1 374 1 260 3 120 3 242 1 93 7 244 20 95 3 69 3 
336 2 72 3 100 2 151 17 229 1 269 2 270 4 19 1 288 2 322 2 188 1 109 5 327 1 84 1 192 3 31 7 214 9 35 2 36 1 242 1 94 1 93 2 244 8 69 2 95 2 
346 1 254 1 161 1 348 1 136 1 351 1 362 1 315 1 154 1 231 1 318 1 50 1 290 2 64 1 196 1 222 1 26 1 79 1 28 1 
346 1 161 1 348 2 136 1 351 1 362 2 47 1 231 1 318 1 158 1 50 1 275 1 290 3 64 1 196 1 222 1 26 1 79 1 28 1 
346 1 158 1 50 1 161 1 348 1 136 1 64 1 290 2 362 2 222 1 47 1 231 1 318 1 28 1 
346 1 347 1 348 1 85 1 136 1 193 1 285 1 231 2 281 1 50 2 3 1 62 1 275 1 290 1 64 2 25 1 196 1 222 1 26 1 67 1 68 1 28 2 160 1 
346 1 254 1 161 1 348 1 136 1 351 1 362 1 154 1 231 1 318 1 158 1 50 1 290 2 64 1 196 1 222 1 26 1 79 1 28 1 
204 1 
99 2 0 2 246 1 153 1 155 1 285 1 250 1 51 2 3 1 53 2 252 1 56 2 108 5 346 2 255 1 347 1 298 6 216 1 219 2 116 2 166 1 304 1 307 1 222 2 310 1 263 1 67 1 170 1 16 1 265 3 122 4 266 2 312 1 124 2 267 2 18 1 175 1 232 1 273 1 233 1 179 1 235 1 366 2 277 1 25 2 237 1 80 1 238 2 136 2 85 1 240 1 32 1 142 1 281 1 41 5 
122 2 312 1 18 1 246 1 153 1 273 1 233 1 235 1 207 1 252 1 237 1 108 3 298 2 32 1 216 1 166 1 116 1 304 1 310 1 263 1 41 3 265 1 
122 3 312 1 0 1 18 1 246 1 153 1 273 1 233 1 235 1 207 1 252 1 237 1 56 1 108 3 298 1 32 1 216 1 166 1 304 1 307 1 310 1 263 1 41 3 265 1 
122 3 312 1 0 1 18 1 246 1 153 1 273 1 233 1 235 1 366 1 207 1 252 1 237 1 56 1 108 3 298 2 32 1 216 1 166 1 116 1 304 1 307 1 310 1 263 1 265 1 41 3 
99 1 0 1 152 1 246 1 153 1 155 1 250 1 201 1 51 1 207 1 252 1 53 1 54 1 56 1 108 4 257 1 298 5 216 2 219 1 116 3 166 1 304 1 306 1 307 1 310 1 263 1 170 1 265 2 122 3 312 2 266 1 171 1 124 1 18 1 363 1 272 1 273 2 232 1 233 1 235 2 366 3 324 1 237 1 80 1 238 1 137 1 32 1 87 1 142 1 330 1 41 4 
99 2 0 2 246 1 153 1 155 1 250 1 51 2 252 1 53 1 56 2 108 4 298 4 216 1 219 2 166 1 116 2 304 1 307 1 310 1 263 1 170 1 265 2 122 4 312 1 266 2 124 2 18 1 267 2 273 1 232 1 233 1 235 1 366 2 237 1 80 1 238 1 240 1 32 1 142 1 41 4 
99 1 0 1 152 1 246 1 153 1 155 1 250 1 51 1 252 1 53 1 54 1 56 1 108 3 257 1 298 2 216 2 219 1 166 1 116 1 304 1 306 1 307 1 310 1 263 1 170 1 265 1 122 3 312 2 266 1 171 1 124 1 18 1 363 1 272 1 232 1 273 2 233 1 235 2 366 1 324 1 237 1 80 1 238 1 137 1 32 1 142 1 330 1 41 3 
99 1 0 1 152 1 246 1 153 1 155 1 250 1 51 1 252 1 53 1 54 1 56 1 108 3 257 1 298 2 216 2 219 1 166 1 116 1 304 1 306 1 307 1 310 1 263 1 170 1 265 1 122 3 312 2 266 1 171 1 124 1 18 1 363 1 272 1 232 1 273 2 233 1 235 2 366 1 324 1 237 1 80 1 238 1 137 1 32 1 142 1 330 1 41 3 
0 1 152 1 246 1 153 1 155 1 102 1 250 1 51 1 252 1 53 1 56 1 108 3 111 1 257 1 298 2 216 2 166 1 116 1 304 1 306 1 307 1 310 1 263 1 170 1 265 1 122 3 312 2 266 1 18 1 267 1 172 1 363 1 364 1 272 1 232 1 273 2 233 1 235 2 366 1 324 1 237 1 238 1 137 1 32 1 33 1 142 1 330 1 41 3 
99 1 0 1 152 1 246 1 153 1 155 1 250 1 201 1 51 1 252 1 53 1 54 1 56 2 108 3 257 1 298 3 216 2 219 1 116 2 166 1 304 1 306 1 307 1 310 1 263 1 170 1 265 1 122 4 312 2 266 1 171 1 124 1 18 1 363 1 272 1 273 2 232 1 233 1 235 2 366 2 324 1 237 1 80 1 238 1 137 1 32 1 142 1 330 1 41 3 
99 1 0 1 152 1 246 1 153 1 155 1 250 1 201 1 51 1 252 1 53 1 54 1 56 2 108 3 257 1 298 3 216 2 219 1 116 2 166 1 304 1 306 1 307 1 310 1 263 1 170 1 265 1 122 4 312 2 266 1 171 1 124 1 18 1 363 1 272 1 273 2 232 1 233 1 235 2 366 2 324 1 237 1 80 1 238 1 137 1 32 1 142 1 330 1 41 3 
0 1 246 1 153 1 155 1 250 1 51 2 252 1 53 1 56 2 108 4 298 4 216 1 166 1 116 2 304 1 307 1 310 1 263 1 170 1 265 2 122 4 312 1 266 2 18 1 267 2 172 2 364 2 273 1 232 1 233 1 235 1 366 2 237 1 238 1 240 1 32 1 33 1 142 1 41 4 
336 1 123 2 72 1 100 1 151 6 269 1 270 2 19 1 74 1 288 1 322 1 159 1 109 2 110 1 192 1 31 2 213 1 214 3 61 1 35 1 36 1 167 1 378 1 244 3 95 1 69 1 
123 1 336 2 72 1 100 2 151 14 270 4 178 3 288 2 159 2 279 1 187 1 55 1 109 1 81 1 209 2 110 4 112 1 295 1 192 2 113 1 31 2 370 1 214 8 58 1 61 11 91 1 35 2 167 11 260 3 120 2 378 1 93 1 244 6 
123 1 336 1 100 1 43 1 151 2 152 1 270 2 317 1 273 1 177 1 274 1 288 1 235 2 159 1 25 1 110 1 346 1 29 1 347 1 112 1 257 1 85 1 136 1 370 1 214 1 58 1 11 1 216 2 353 1 88 1 281 1 35 1 92 1 222 1 378 1 262 1 244 1 67 1 
336 3 100 3 151 28 43 2 152 1 284 1 103 2 288 3 159 3 109 6 110 7 209 2 346 1 253 1 112 1 347 2 257 1 214 14 58 1 299 1 11 2 216 3 61 7 356 2 167 7 305 2 222 1 120 2 262 1 69 1 67 2 123 3 312 1 72 5 269 2 270 6 19 1 273 1 317 2 274 1 130 2 235 3 322 2 25 1 187 2 188 1 82 2 29 2 192 5 31 7 136 1 85 2 370 1 281 2 35 3 36 1 378 3 93 1 244 14 95 2 
336 2 100 2 151 2 152 1 315 1 270 4 285 1 74 1 273 1 129 1 158 1 274 1 3 1 235 1 288 2 159 2 25 2 346 8 347 2 257 1 85 2 136 7 370 1 214 1 58 1 12 1 216 1 281 3 35 2 372 1 332 2 65 1 118 1 14 1 222 8 333 1 378 2 244 1 67 2 
336 1 72 1 100 1 151 3 152 1 270 2 273 1 288 1 235 1 159 1 324 1 187 1 109 1 110 1 209 1 112 1 257 1 256 1 192 1 31 1 214 1 216 1 61 1 35 1 167 1 194 1 120 1 378 1 244 2 
336 1 100 1 151 2 192 1 31 1 214 2 270 2 74 1 20 1 61 1 35 1 288 1 167 1 159 1 120 1 378 1 93 1 110 1 
336 1 226 1 72 1 100 1 151 2 31 1 270 2 74 1 61 1 35 1 288 1 167 1 159 1 378 1 187 1 109 1 244 2 110 1 
336 1 72 1 100 1 151 4 270 2 74 1 288 1 159 1 187 1 109 1 209 1 110 2 192 1 31 2 214 2 61 2 35 1 167 2 120 1 378 1 93 1 244 2 
336 1 100 1 151 2 192 1 31 1 214 2 270 2 20 1 61 1 35 1 288 1 167 1 159 1 14 1 120 1 378 1 93 1 110 1 
336 1 226 1 72 1 100 1 151 2 31 1 270 2 61 1 35 1 288 1 167 1 159 1 14 1 378 1 187 1 109 1 244 2 110 1 
336 1 72 1 100 1 151 4 192 1 31 2 214 2 270 2 61 2 35 1 288 1 167 2 159 1 14 1 120 1 187 1 378 1 93 1 109 1 244 2 110 2 209 1 
336 1 72 1 100 1 192 1 151 4 31 2 214 2 270 2 61 2 35 1 288 1 167 2 159 1 120 1 187 1 378 1 93 1 109 1 244 2 110 2 209 1 
123 1 336 1 100 1 151 2 43 1 270 2 103 1 317 1 235 1 288 1 159 1 25 1 346 1 29 1 347 1 85 1 136 1 214 1 370 1 58 1 11 1 216 1 281 1 35 1 222 1 378 1 244 1 67 1 
123 1 336 1 70 1 100 1 151 2 270 2 317 1 235 1 288 1 159 1 25 1 346 1 29 1 347 1 239 1 85 1 136 1 214 1 370 1 58 1 216 1 281 1 35 1 300 1 222 1 378 1 244 1 67 1 
336 1 72 1 112 1 100 1 151 4 192 1 31 2 214 2 270 2 61 2 35 1 288 1 167 2 159 1 120 1 187 1 378 1 93 1 109 1 244 2 110 2 209 1 
336 1 72 1 100 1 151 4 43 1 315 1 270 2 103 1 317 1 235 1 288 1 159 1 187 1 109 1 110 2 209 1 346 1 29 1 347 1 192 1 31 2 85 1 136 1 214 2 11 1 216 1 61 2 281 1 35 1 356 1 167 2 120 1 222 1 378 1 93 1 244 2 67 1 
336 1 337 1 72 1 100 1 151 3 152 1 270 2 273 1 288 1 235 1 159 1 324 1 187 1 209 1 110 1 112 1 257 1 256 1 192 1 31 1 214 2 216 1 61 1 35 1 167 1 120 1 378 1 93 1 244 1 
336 3 100 3 151 41 342 1 288 3 251 1 55 1 109 3 209 4 210 1 293 1 214 20 218 1 354 1 13 1 260 3 120 4 261 4 69 1 72 5 227 1 125 1 229 1 269 1 270 6 19 1 178 4 322 1 187 4 190 2 192 5 31 7 138 1 34 1 91 3 35 3 36 1 242 1 376 1 93 4 244 21 335 1 95 1 
336 3 72 3 100 3 125 1 151 30 229 1 270 6 178 4 342 1 288 3 251 1 187 3 55 1 109 3 209 4 210 1 293 1 190 2 192 4 138 1 31 5 214 15 34 1 218 1 354 1 91 3 35 3 13 1 260 3 120 4 376 1 242 1 261 3 93 2 244 15 335 1 
336 1 72 6 100 1 125 1 151 41 269 1 229 1 270 2 19 1 178 4 288 1 322 1 251 1 279 2 187 5 55 2 109 6 209 6 293 1 190 1 192 7 138 1 31 10 214 22 34 1 218 1 354 1 91 2 35 1 36 1 260 4 120 6 261 2 93 4 244 19 69 1 95 1 335 1 
336 2 72 3 100 2 125 1 151 19 229 1 270 4 178 2 342 1 288 2 206 1 187 3 55 1 109 3 209 3 210 2 190 1 192 3 31 6 214 9 34 1 218 1 91 1 35 2 260 1 120 3 376 1 261 2 93 3 244 10 
336 2 72 1 100 2 125 1 151 17 229 1 270 4 178 2 288 2 251 1 187 1 109 1 209 2 190 2 293 1 192 2 31 1 138 1 214 9 34 1 218 2 354 1 91 2 35 2 260 2 120 2 242 1 261 2 244 8 335 1 
83 1 21 1 369 1 46 1 59 1 291 1 
303 1 
21 1 369 1 361 1 46 1 291 1 
37 1 
143 1 
0 1 199 1 369 1 46 1 127 1 59 1 144 2 21 1 195 1 185 1 27 1 291 1 108 1 41 1 
0 1 199 1 369 1 46 1 127 1 59 1 144 2 21 1 195 1 185 1 27 1 291 1 108 1 41 1 
0 1 199 1 369 1 46 1 127 1 59 1 144 2 21 1 195 1 185 1 27 1 291 1 108 1 41 1 
37 1 
37 1 
143 1 
143 1 
9 1 334 1 
57 1 296 1 369 1 46 1 200 1 127 1 144 1 287 1 21 1 373 1 195 1 303 1 291 1 379 1 108 1 41 1 
336 1 100 1 151 2 270 2 249 1 273 2 235 2 288 1 159 1 183 1 346 2 347 1 112 1 294 1 85 1 136 2 370 1 214 1 58 1 217 1 216 2 281 1 35 1 372 1 332 2 118 1 222 2 378 1 244 1 67 1 121 1 
346 2 161 1 349 1 313 1 136 2 315 1 231 1 158 1 52 1 222 2 79 1 
346 1 161 1 136 1 231 1 158 1 52 1 222 1 6 1 79 1 
346 1 347 1 349 1 85 1 136 1 285 1 231 1 202 1 281 1 3 1 25 1 222 1 67 1 160 1 
346 1 158 1 161 1 349 1 313 1 52 1 136 1 222 1 79 1 231 1 
367 1 
238 1 0 1 106 1 213 1 307 1 53 1 7 1 
99 1 124 1 0 2 267 1 155 1 250 1 232 1 53 1 80 1 108 1 238 1 298 1 219 1 307 1 170 1 265 1 41 1 
0 8 340 2 155 4 248 2 250 4 106 1 53 8 108 5 7 1 209 2 8 2 346 3 255 2 347 4 114 1 298 5 10 1 166 2 63 2 117 2 305 2 307 2 222 3 120 2 67 3 170 4 265 3 17 1 72 2 124 6 267 12 173 2 268 6 315 1 316 2 317 3 232 4 234 1 75 2 179 1 22 2 77 1 184 3 25 1 187 2 238 9 192 2 85 3 136 3 281 10 146 2 148 1 377 6 41 5 
72 2 126 1 124 3 0 5 267 6 268 5 340 2 155 2 250 2 232 2 341 1 178 1 179 1 251 1 53 5 187 2 108 1 209 2 238 8 255 1 293 1 192 2 138 1 298 1 354 1 91 1 146 1 260 1 120 2 307 2 377 5 335 1 170 2 41 1 265 1 
312 1 72 1 171 1 152 1 340 2 269 1 155 1 363 1 272 1 250 1 232 1 273 1 235 1 322 1 53 2 324 1 188 1 108 1 238 2 257 1 192 2 137 1 216 1 330 1 146 1 95 1 170 1 41 1 
238 1 0 1 155 1 232 1 250 1 106 1 53 1 307 1 7 1 170 1 
238 5 72 2 124 5 0 5 267 10 192 2 268 5 340 2 146 1 305 1 120 2 53 5 377 5 187 2 209 2 
0 1 298 1 307 1 108 1 41 1 265 1 
245 1 228 1 175 1 155 2 285 1 317 1 250 2 232 1 179 2 3 1 277 1 182 1 131 1 25 2 53 2 108 3 346 4 238 2 347 3 255 2 85 2 136 4 114 2 259 1 298 4 281 2 119 1 148 1 222 4 243 1 67 2 170 2 265 2 41 3 
123 1 336 1 100 1 151 1 43 1 152 2 270 2 363 1 103 1 273 2 317 1 205 1 288 1 235 3 159 1 25 1 324 2 346 1 29 1 347 1 257 2 136 1 85 1 58 1 11 1 216 3 281 1 35 1 222 1 378 1 244 1 67 1 
238 1 255 1 124 2 0 4 267 4 268 2 155 1 232 1 250 1 179 1 53 2 307 2 377 2 69 1 170 1 
21 1 291 1 365 1 
21 1 291 1 365 1 
21 1 132 1 78 1 334 1 291 1 
21 1 291 1 365 1 
21 1 291 1 345 1 
21 1 291 1 345 1 
21 1 291 1 345 1 
21 1 291 1 
223 1 283 1 
336 1 72 3 100 1 151 16 229 1 269 2 270 2 19 1 178 1 288 1 322 2 188 1 109 4 192 3 31 5 214 8 354 1 91 1 35 1 36 1 260 1 93 1 244 8 69 1 95 2 
336 2 72 3 100 2 151 19 269 2 229 1 270 4 19 1 178 2 288 2 322 2 188 1 55 1 109 4 209 1 189 1 192 4 31 6 214 10 354 1 91 1 35 2 36 1 260 1 120 1 93 2 244 9 69 1 95 2 
336 3 72 5 100 3 151 27 269 2 229 1 270 6 19 1 178 1 288 3 322 2 251 1 187 2 188 1 109 5 209 2 189 1 293 1 192 5 138 1 31 7 214 13 354 1 91 1 35 3 36 1 260 1 120 2 242 1 93 2 244 14 69 1 95 2 335 1 
336 1 72 1 293 1 100 1 192 2 151 10 31 1 138 1 214 6 229 1 270 2 354 1 91 1 35 1 178 1 288 1 251 1 260 1 120 2 187 1 109 1 244 4 335 1 209 2 
336 1 72 3 100 1 151 16 229 1 269 2 270 2 19 1 178 1 288 1 322 2 188 1 109 4 192 3 31 5 214 8 354 1 91 1 35 1 36 1 260 1 93 1 244 8 69 1 95 2 
336 1 72 2 100 1 151 12 229 1 270 2 178 1 288 1 251 1 187 2 109 1 209 2 293 1 192 2 138 1 31 2 214 6 354 1 91 1 35 1 260 1 120 2 93 1 244 6 335 1 
336 3 72 1 100 3 151 11 229 1 270 6 178 1 288 3 251 1 187 1 109 1 209 2 189 1 293 1 192 2 138 1 31 1 214 6 354 1 91 1 35 3 260 1 120 2 242 1 244 5 335 1 
336 4 72 2 100 4 151 16 229 1 270 8 178 1 342 1 288 4 251 1 187 2 109 3 209 3 293 1 192 3 138 1 31 6 214 9 354 1 91 1 35 4 260 1 120 3 242 2 93 3 244 7 335 1 
72 1 151 7 192 1 31 6 269 3 214 3 19 2 36 1 322 1 93 3 244 4 109 3 95 3 
336 3 72 1 100 3 151 11 229 1 270 6 178 1 342 1 288 3 251 1 187 1 109 1 209 2 293 1 192 2 138 1 31 1 214 6 354 1 91 1 35 3 260 1 120 2 242 1 244 5 335 1 
336 2 72 3 100 2 151 18 269 2 270 4 19 1 288 2 322 2 188 1 109 4 192 3 31 7 214 9 35 2 36 1 242 1 93 3 244 9 95 2 69 1 
72 1 192 1 151 6 31 2 213 1 269 1 214 3 19 1 36 1 322 1 244 3 109 2 69 1 95 1 
189 1 336 1 72 1 100 1 192 1 151 4 31 2 214 2 270 2 35 1 288 1 120 1 187 1 93 1 109 1 244 2 209 1 
72 1 151 7 192 1 31 2 214 3 91 1 178 2 260 1 120 1 187 1 55 1 93 1 109 1 244 4 209 1 
336 1 72 5 100 1 151 26 269 2 270 2 19 1 178 2 288 1 322 2 279 1 187 2 188 1 55 1 109 5 209 2 295 1 192 5 31 7 214 13 35 1 36 1 260 2 120 2 242 1 93 2 244 13 69 1 95 2 
178 1 151 1 244 1 
151 1 214 1 260 1 
336 1 189 1 72 1 100 1 151 6 192 1 31 3 214 3 270 2 35 1 288 1 305 1 120 1 187 1 93 1 244 3 109 2 209 1 
336 1 72 2 100 1 151 12 229 1 270 2 178 1 288 1 251 1 187 2 109 1 209 2 293 1 192 2 138 1 31 2 214 6 354 1 91 1 35 1 260 1 120 2 93 1 244 6 335 1 
72 1 192 1 151 6 31 2 214 3 269 1 322 1 93 1 244 3 109 1 95 1 
336 1 100 1 151 3 31 2 214 1 269 1 270 2 19 1 35 1 36 1 288 1 242 1 93 1 109 1 244 2 95 1 96 1 
336 1 72 2 100 1 151 10 192 2 31 5 229 1 269 2 214 5 270 2 35 1 288 1 322 1 188 1 93 2 109 3 244 5 95 2 
336 1 100 1 192 1 151 2 31 1 229 1 214 2 270 2 35 1 288 1 120 1 93 1 
336 1 72 1 100 1 192 1 151 4 31 2 229 1 214 2 270 2 35 1 288 1 120 1 187 1 93 1 109 1 244 2 209 1 
336 3 100 3 151 3 31 2 229 1 269 1 214 1 270 6 35 3 342 1 288 3 242 1 93 1 244 2 109 1 96 1 95 1 
336 4 72 5 100 4 151 32 269 2 229 1 270 8 19 1 178 3 342 1 288 4 322 2 187 2 188 1 109 5 209 2 212 1 189 1 258 1 192 5 31 9 214 16 164 1 91 1 35 4 36 1 260 3 120 2 242 1 93 4 244 16 69 1 95 2 
123 1 312 1 284 1 216 1 273 1 319 1 235 1 15 1 263 1 
123 1 312 1 284 1 216 1 273 1 319 1 4 1 235 1 76 1 323 1 15 1 263 1 197 1 150 1 
346 1 347 1 3 1 85 1 136 1 213 1 25 1 222 1 285 1 67 1 281 1 
123 1 346 1 29 1 347 1 257 1 43 1 152 1 136 1 85 1 216 2 317 1 273 1 281 1 274 1 235 2 25 1 222 1 67 1 
123 1 312 1 43 1 152 2 248 1 273 2 317 2 274 1 235 2 346 1 29 1 347 1 257 1 85 1 136 1 114 1 216 2 281 3 63 1 304 1 222 1 310 1 67 2 
123 1 312 1 152 2 248 1 273 2 317 2 274 1 235 2 133 1 346 2 29 1 347 1 257 1 85 1 136 2 114 1 216 2 281 3 300 1 63 1 304 1 222 2 310 1 67 2 
0 1 248 1 317 1 75 1 276 1 184 1 25 1 108 2 133 1 346 3 328 1 347 1 85 1 136 3 114 1 298 1 281 4 166 1 63 1 222 3 307 1 67 1 41 2 
133 1 346 3 347 1 0 1 136 3 173 1 85 1 114 1 298 1 248 1 317 1 281 4 75 1 166 1 63 1 25 1 184 1 307 1 222 3 108 2 67 1 41 2 
346 1 129 1 347 1 85 1 136 1 222 1 
346 7 347 3 136 6 85 2 315 1 12 1 317 1 281 3 129 1 158 1 332 1 131 1 65 1 77 1 118 1 25 2 119 1 222 7 333 1 225 1 67 2 
336 2 100 2 43 1 151 14 152 1 284 1 103 1 288 2 159 2 109 4 110 1 346 1 112 1 347 1 257 1 214 7 11 1 216 2 217 1 61 1 356 1 167 1 222 1 67 1 69 1 123 3 312 1 72 3 269 2 315 1 270 4 19 1 273 1 317 1 274 1 130 1 235 2 322 2 188 1 29 1 192 3 136 1 85 1 31 5 281 1 35 2 36 1 378 2 93 1 244 7 95 2 
0 1 173 1 155 2 316 1 250 2 232 2 287 1 75 1 22 1 106 1 25 1 184 1 53 1 108 3 7 1 346 1 238 1 136 1 298 2 281 2 166 1 117 1 307 1 222 1 148 1 170 2 41 3 265 1 
346 2 347 2 136 2 85 1 315 1 317 1 281 2 75 1 129 1 234 1 77 1 222 2 67 1 
133 1 346 4 347 1 136 4 85 1 315 1 285 1 281 1 3 1 168 1 25 1 222 4 67 1 
346 2 347 2 245 1 360 1 136 2 85 1 114 1 259 1 317 1 281 1 131 1 119 1 222 2 67 1 
346 1 347 1 42 1 181 1 297 1 85 1 136 1 25 1 222 1 157 1 
346 2 347 1 294 1 136 2 85 1 315 1 281 1 158 1 118 1 222 2 67 1 
346 5 347 2 136 4 85 2 114 1 315 1 285 1 281 3 3 1 168 1 65 1 25 1 118 1 222 5 333 1 67 2 
346 5 347 2 136 4 85 2 114 1 315 1 285 1 281 3 3 1 168 1 65 1 25 1 118 1 222 5 149 1 67 2 
123 1 346 1 29 1 347 1 257 1 152 1 136 1 85 1 216 2 317 1 273 1 281 1 274 1 235 2 300 1 25 1 222 1 67 1 
346 1 347 2 136 1 85 1 114 1 317 1 281 1 131 1 77 1 119 1 222 1 225 1 67 1 
235 1 183 1 45 1 249 1 156 1 216 1 273 1 121 1 60 1 
320 1 368 1 60 1 
123 1 45 1 156 1 208 1 60 1 
123 1 312 1 368 1 0 1 45 2 352 1 156 2 60 1 287 1 233 1 320 1 166 1 304 1 280 1 307 1 310 1 108 2 208 2 41 2 
350 1 213 1 286 1 98 1 
348 1 350 1 290 1 196 1 26 1 286 1 98 1 
50 1 348 1 28 1 
355 1 321 1 348 3 350 1 302 1 290 3 271 2 196 1 154 1 26 1 286 1 98 1 
220 1 348 2 350 1 290 2 362 1 196 1 26 1 286 1 98 1 
135 1 348 1 42 1 181 1 350 1 290 1 196 1 154 1 26 1 141 1 169 1 
348 1 350 1 290 1 196 1 154 1 26 1 98 1 
348 1 290 1 196 1 154 1 26 1 286 1 98 2 
73 1 348 2 350 1 154 1 139 1 290 2 196 2 26 2 98 1 97 1 
348 3 198 1 350 2 362 2 154 1 286 1 290 3 375 1 196 1 26 1 169 1 98 1 311 1 
135 1 348 2 350 1 42 1 297 1 247 1 362 1 154 1 286 1 331 1 181 2 290 2 196 1 26 1 98 1 
348 4 350 2 362 2 154 1 286 1 220 1 290 4 196 2 26 2 309 1 169 1 98 1 311 1 
348 1 350 1 290 1 196 1 154 1 26 1 286 1 98 1 
30 1 348 4 350 3 362 2 271 1 286 2 355 1 302 1 290 4 196 1 26 1 169 1 98 2 311 1 
348 2 350 1 362 1 154 1 215 1 286 1 221 1 38 1 290 2 196 1 26 1 98 1 
355 1 348 3 350 1 301 1 302 2 290 3 271 2 196 1 154 1 26 1 286 1 98 1 
343 2 338 1 350 2 236 1 
348 1 290 1 140 1 196 1 154 1 26 1 
348 2 350 1 375 1 290 2 362 1 196 1 154 1 26 1 286 1 98 1 
104 1 
348 1 350 1 290 1 196 1 154 1 26 1 286 1 98 1 
348 3 350 1 375 1 290 3 362 1 271 1 196 1 154 1 26 1 286 1 98 1 
30 1 350 1 169 1 311 1 
350 1 98 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 68 128 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 68 337 149 269 (57,135) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 68 96 23 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 68 96 23 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 68 96 23 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 68 96 23 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 68 96 23 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (12,76,214) (42,203,316) (42,203,316) (42,203,316) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 259 231 241 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 68 128 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 68 337 149 229 162 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 68 128 22 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 68 337 149 269 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 68 337 149 269 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 68 128 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 68 128 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 329 (144,160) (144,160) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 68 55 278 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 68 55 278 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 68 55 278 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 68 55 278 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 68 55 278 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 68 128 22 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (12,76,214) (12,76,214) (12,76,214) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 93 8 235 (91,124) (91,124) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 68 185 299 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 68 185 44 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 68 185 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 68 337 149 229 162 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 68 337 348 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 93 8 235 (91,124) (91,124) 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 68 337 149 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 68 337 149 229 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 93 8 235 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 68 185 299 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 93 8 235 (91,124) (91,124) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 68 185 299 119 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 360 270 285 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 360 131 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
125 1 296 1 277 1 146 9 97 1 280 1 230 1 283 2 326 1 173 2 261 1 11 1 35 1 190 5 107 2 176 2 16 1 63 4 113 6 178 2 179 1 271 9 48 1 344 1 345 2 50 2 222 3 51 1 
125 1 296 1 277 1 146 9 97 1 280 1 230 1 283 2 326 1 173 2 261 1 11 1 35 1 190 5 107 2 176 2 16 1 63 4 113 6 178 2 179 1 271 9 48 1 344 1 345 2 50 2 222 3 51 1 
125 1 296 1 277 1 146 10 97 1 280 1 230 1 283 2 326 1 173 2 261 1 11 1 35 1 190 6 107 2 176 2 16 1 63 5 113 7 178 2 179 1 271 10 48 1 344 1 345 2 50 2 222 4 51 1 
125 1 296 1 277 1 146 7 97 1 280 1 230 1 283 2 326 1 173 2 261 1 11 1 35 1 190 4 107 2 176 2 16 1 63 3 113 4 178 2 179 1 271 7 48 1 344 1 345 2 50 1 222 2 
190 3 146 4 277 1 16 1 176 1 63 2 113 3 178 1 271 4 283 1 326 1 173 1 48 1 345 1 261 1 50 2 222 1 51 1 
253 1 163 1 190 1 107 1 146 2 16 1 176 1 178 1 271 2 301 1 179 1 283 1 326 1 345 1 261 1 11 1 
190 2 107 1 146 3 16 1 176 2 63 1 280 1 113 1 271 3 326 1 345 2 261 1 222 1 
296 1 146 9 97 1 277 1 170 1 280 1 151 1 283 1 326 1 173 1 261 1 190 5 107 1 176 2 16 1 63 4 113 7 178 1 271 9 48 1 345 2 50 2 222 3 51 1 
296 1 146 9 97 1 277 1 170 1 280 1 151 1 283 1 326 1 173 1 261 1 190 5 107 1 176 2 16 1 63 4 113 7 178 1 271 9 48 1 345 2 50 2 222 3 51 1 
79 1 268 1 84 1 
180 1 343 2 268 1 
317 2 209 2 356 2 233 1 224 2 187 2 94 2 358 1 
128 1 72 1 321 1 147 1 224 3 323 1 202 1 204 1 187 2 99 1 209 3 233 1 328 1 154 1 307 1 306 1 263 1 329 1 289 1 290 1 312 1 356 2 88 2 39 1 358 1 43 1 315 1 317 2 68 1 293 1 69 2 294 1 320 1 160 1 92 1 361 2 94 2 
164 1 36 1 317 1 209 1 356 1 224 1 169 1 187 1 94 1 358 1 
164 1 36 1 356 2 224 2 193 1 169 2 187 1 268 1 358 1 114 1 208 1 77 1 317 1 79 1 209 2 260 1 175 1 94 1 
164 1 36 1 356 2 322 1 224 2 193 1 169 2 226 1 187 2 268 1 358 1 114 1 208 1 317 2 79 1 209 2 260 1 94 2 
67 1 213 1 322 1 226 1 134 1 
67 1 213 1 37 1 79 1 322 2 226 2 268 1 281 1 
67 1 322 1 226 1 
213 1 164 1 36 1 356 1 322 1 224 1 169 1 226 1 187 1 358 1 114 1 317 1 209 1 94 1 
268 1 
67 1 213 1 37 1 79 1 322 2 226 2 245 1 268 1 
123 1 213 2 183 1 37 1 332 2 199 1 38 2 242 1 322 5 56 1 226 5 4 1 268 1 27 1 67 2 79 1 105 1 82 1 71 2 
233 1 84 1 
356 2 224 2 256 1 187 1 317 1 209 2 274 1 233 2 94 1 
108 1 140 1 135 1 
329 1 290 1 321 1 312 1 224 1 323 1 88 1 352 1 99 1 69 1 209 1 320 1 233 1 92 1 328 1 361 1 
329 1 290 1 108 1 321 1 312 1 356 1 224 2 323 1 88 1 187 1 218 1 99 1 133 1 69 1 209 2 320 1 92 1 328 1 361 1 94 1 
54 1 335 1 356 5 224 5 256 1 187 4 218 2 77 1 317 1 133 1 46 1 209 5 233 1 94 4 
126 1 36 1 209 2 356 2 224 2 169 1 187 2 94 2 
317 1 209 3 356 3 233 1 224 3 187 3 218 1 94 3 
36 1 209 1 356 1 224 1 169 1 187 1 94 1 
317 1 209 1 356 1 274 1 224 1 169 1 256 1 187 1 94 1 
356 2 193 1 224 2 169 1 256 1 187 2 218 1 112 1 208 1 133 1 317 1 209 2 141 1 260 1 94 2 
77 1 335 1 209 2 356 2 233 1 224 2 187 1 94 1 218 1 
208 1 133 1 209 1 200 1 356 1 260 1 141 1 193 1 224 1 169 1 187 1 94 1 218 1 
108 1 356 2 224 2 256 1 187 2 218 1 317 1 209 2 135 1 94 2 
329 1 290 1 321 1 312 1 224 1 323 1 88 1 99 1 69 1 209 1 320 1 233 1 92 1 328 1 361 1 
321 1 312 1 224 1 323 1 88 1 111 1 99 1 248 1 69 1 209 1 320 1 233 1 92 1 328 1 361 1 
289 1 72 1 108 1 110 1 202 1 57 1 39 1 204 1 337 1 269 1 205 1 149 1 20 1 43 2 68 1 32 1 140 1 294 2 135 1 306 1 307 1 61 1 
126 1 209 1 356 1 193 1 224 1 169 1 187 1 94 1 
29 1 15 1 
29 1 15 1 
182 1 234 1 
182 1 234 1 
182 1 234 1 
29 1 15 1 148 1 
29 1 15 1 220 1 
29 2 24 1 182 1 255 1 15 2 234 1 
29 1 15 1 148 1 
29 1 15 1 148 1 
29 1 15 1 81 1 
29 1 15 1 81 1 
29 1 15 1 81 1 
252 1 322 1 224 2 226 1 324 1 187 2 29 1 28 1 258 1 150 1 209 2 60 1 174 1 233 1 9 1 356 2 15 1 243 1 215 1 177 1 339 1 273 1 220 1 94 2 
252 1 24 1 156 1 1 1 191 1 15 2 322 2 226 2 279 1 215 2 268 1 338 1 29 2 258 2 132 2 273 2 174 3 9 2 80 1 
178 1 283 1 173 1 
253 1 178 1 283 1 
253 1 178 3 173 2 116 1 266 1 155 1 
253 1 237 1 178 2 173 1 266 1 155 1 
253 1 178 2 173 1 266 1 155 2 
123 3 199 2 322 5 226 5 325 1 130 1 28 1 149 1 229 1 172 1 102 1 79 1 32 1 60 1 82 1 213 4 238 1 332 1 37 1 62 2 38 1 110 1 267 2 17 1 337 1 268 2 67 1 177 1 180 1 343 3 120 2 71 1 
164 1 322 2 224 1 169 1 226 2 58 1 187 1 79 1 209 1 134 1 213 2 36 1 86 1 356 1 268 1 358 1 67 1 114 1 317 1 250 1 94 1 
123 3 199 2 322 3 226 3 325 1 4 1 149 1 172 1 229 1 79 1 102 1 32 1 60 1 213 2 238 1 332 1 38 1 62 2 110 1 267 1 268 3 337 1 180 2 343 4 120 2 71 1 
123 5 199 4 322 4 226 4 325 1 4 1 149 2 172 1 229 2 79 1 102 1 32 2 60 2 287 1 213 3 34 1 238 1 332 1 62 4 38 1 110 2 267 2 268 4 337 2 180 3 21 1 343 7 120 4 71 1 
331 1 320 1 84 1 
320 1 216 1 
310 1 
99 1 320 1 328 1 
47 1 320 1 
99 1 320 1 
223 1 331 2 99 1 196 1 320 3 328 1 
23 1 68 1 96 1 357 1 
23 1 68 1 96 1 357 1 
23 1 68 1 96 1 357 1 347 1 
23 1 68 1 96 1 357 1 
23 1 68 1 96 1 357 1 
275 1 12 1 309 1 107 1 13 1 146 1 16 1 176 1 203 1 42 1 292 1 316 1 271 1 249 1 345 1 
253 1 0 1 275 1 146 3 203 1 283 1 326 1 173 1 304 1 261 1 12 1 190 1 309 1 107 1 312 1 176 1 88 1 42 1 18 1 113 2 178 2 292 1 271 3 69 1 116 1 249 1 345 1 92 1 121 1 361 1 
253 1 0 1 146 2 283 1 326 1 173 1 304 1 261 1 12 1 190 1 309 1 107 1 312 1 88 1 42 1 113 2 178 2 292 1 271 2 69 1 116 1 249 1 92 1 121 1 361 1 
265 1 309 2 107 2 312 1 146 1 176 1 323 1 194 1 257 1 88 1 18 1 99 1 292 2 271 1 69 1 104 1 320 1 70 1 249 2 345 1 92 1 83 1 361 1 
253 1 0 1 275 1 146 1 203 1 283 1 173 1 12 1 309 1 107 1 312 1 176 1 16 1 88 1 42 1 178 2 292 1 316 1 271 1 69 1 116 1 249 1 345 1 92 1 121 1 361 1 
195 1 
95 2 322 4 323 2 224 1 325 1 226 4 5 2 99 1 104 1 189 2 153 1 330 1 332 1 193 1 67 6 69 2 118 2 343 2 197 1 346 2 71 1 251 1 198 1 123 2 73 2 199 2 169 1 351 2 208 1 77 1 209 1 259 1 260 1 302 1 82 1 83 1 175 1 355 1 264 1 85 1 37 3 38 1 312 1 356 1 88 2 41 1 268 1 45 2 180 2 320 1 92 1 142 1 361 2 
355 1 85 1 37 1 356 1 322 2 193 1 224 1 169 1 226 2 351 1 245 1 67 2 208 1 77 1 209 1 302 1 260 1 142 1 153 1 175 1 
355 1 85 1 356 1 322 1 193 1 224 1 169 1 226 1 208 1 77 1 209 1 302 1 260 1 189 1 142 1 153 1 346 1 175 1 
322 2 224 1 226 2 169 1 351 1 208 1 77 1 209 1 260 1 302 1 189 1 153 1 175 1 355 1 85 1 37 1 356 1 193 1 245 1 67 2 45 1 142 1 346 1 
95 2 322 4 224 2 226 4 187 1 5 2 59 1 231 1 189 3 153 1 332 1 193 1 245 1 67 7 114 1 118 2 161 1 197 1 346 3 71 1 123 1 164 1 73 2 199 1 169 2 351 4 208 1 77 1 79 2 209 2 259 1 302 1 260 1 82 1 175 1 355 1 85 1 36 1 37 3 38 1 356 2 268 2 313 1 358 1 317 1 45 4 180 2 49 1 142 1 94 1 
95 2 322 3 224 1 226 3 5 2 189 2 153 1 332 1 193 1 67 4 118 2 343 2 197 1 346 2 71 1 123 1 73 2 199 1 169 1 351 2 208 1 77 1 79 1 209 1 259 1 302 1 260 1 82 1 175 1 355 1 85 1 37 2 38 1 356 1 41 1 268 2 180 2 45 2 142 1 
123 1 95 2 73 2 199 1 322 3 224 1 226 3 169 1 351 2 5 2 208 1 77 1 79 1 231 1 209 1 259 1 260 1 302 1 189 2 153 1 82 1 175 1 355 1 85 1 37 2 332 1 38 1 356 1 193 1 268 1 67 4 45 2 180 2 118 2 49 1 142 1 161 1 197 1 346 2 71 1 
123 1 95 2 73 2 199 1 322 3 224 1 226 3 169 1 351 2 5 2 208 1 77 1 79 1 231 1 209 1 259 1 260 1 302 1 189 2 153 1 82 1 175 1 355 1 85 1 37 2 332 1 38 1 356 1 193 1 268 1 67 4 45 2 180 2 118 2 49 1 142 1 161 1 197 1 346 2 71 1 
355 1 85 1 95 1 241 1 356 1 322 1 193 1 224 1 169 1 226 1 5 1 208 1 77 1 231 1 209 1 259 1 302 1 260 1 142 1 153 1 175 1 
123 1 95 2 73 2 199 1 322 3 224 1 226 3 169 1 351 3 5 2 208 1 77 1 79 1 231 1 209 1 59 1 259 1 260 1 302 1 189 3 82 1 153 1 175 1 355 1 85 1 37 2 332 1 38 1 356 1 193 1 268 1 67 5 180 2 45 3 118 2 49 1 197 1 142 1 161 1 346 3 71 1 
123 1 95 2 73 2 199 1 322 3 224 1 226 3 169 1 351 3 5 2 208 1 77 1 79 1 231 1 209 1 59 1 259 1 260 1 302 1 189 3 82 1 153 1 175 1 355 1 85 1 37 2 332 1 38 1 356 1 193 1 268 1 67 5 180 2 45 3 118 2 49 1 197 1 142 1 161 1 346 3 71 1 
123 1 95 2 199 1 322 3 224 1 226 3 169 1 351 2 5 2 208 1 77 1 79 1 7 2 209 1 259 1 260 1 302 1 189 2 10 2 153 1 82 1 175 1 286 1 355 1 85 1 37 2 332 1 38 1 356 1 193 1 41 1 268 1 67 4 45 2 343 2 142 1 346 2 71 1 
124 1 289 1 72 1 348 1 202 1 39 1 204 1 337 1 89 1 68 1 91 1 8 1 306 1 307 1 235 1 143 1 61 1 84 1 
188 1 289 1 72 1 202 1 221 1 39 1 204 1 307 1 306 1 
289 1 128 1 311 1 72 1 356 1 224 1 202 1 39 1 187 1 204 1 218 1 171 1 188 1 43 1 315 1 133 1 68 1 294 1 209 1 307 1 306 1 94 1 
144 1 72 2 321 1 224 2 323 1 298 1 202 2 204 2 187 1 149 1 99 1 188 1 30 1 229 1 133 1 209 2 210 1 328 1 135 1 306 2 307 2 329 1 290 1 289 2 108 1 312 1 356 1 88 1 39 2 337 1 218 1 43 2 315 1 68 1 69 1 140 1 294 2 320 1 160 1 92 1 162 1 361 1 94 1 
289 1 128 1 72 1 323 1 202 1 88 1 39 1 204 1 207 1 68 1 69 1 22 1 306 1 307 1 361 1 
289 1 72 1 356 1 224 1 202 1 256 1 39 1 187 1 204 1 337 1 149 1 19 1 188 1 229 1 317 1 68 1 209 1 306 1 307 1 94 1 
149 1 289 1 68 1 72 1 202 1 39 1 204 1 337 1 269 1 307 1 306 1 61 1 
289 1 72 1 108 1 110 1 202 1 39 1 204 1 205 1 89 1 43 2 32 1 140 1 294 2 135 1 306 1 307 1 143 1 61 1 
149 1 289 1 229 1 68 1 72 1 202 1 39 1 204 1 337 1 307 1 306 1 61 1 
149 1 207 1 289 1 68 1 72 1 202 1 39 1 204 1 337 1 269 1 307 1 306 1 
289 1 72 1 108 1 110 1 202 1 39 1 204 1 205 1 207 1 89 1 43 2 32 1 140 1 294 2 135 1 306 1 307 1 143 1 
149 1 207 1 289 1 229 1 68 1 72 1 202 1 39 1 204 1 337 1 307 1 306 1 
149 1 289 1 229 1 68 1 72 1 202 1 39 1 204 1 337 1 307 1 306 1 
128 1 72 1 321 1 323 1 224 1 202 1 204 1 99 1 209 1 233 1 328 1 306 1 307 1 329 1 290 1 289 1 312 1 88 1 39 1 43 1 315 1 68 1 69 1 294 1 320 1 160 1 92 1 361 1 
128 1 72 1 321 1 323 1 224 1 202 1 204 1 99 1 209 1 233 1 328 1 106 1 306 1 307 1 289 1 312 1 88 1 39 1 111 1 43 1 315 1 248 1 68 1 69 1 294 1 320 1 92 1 361 1 
149 1 188 1 289 1 229 1 68 1 72 1 202 1 39 1 204 1 337 1 307 1 306 1 
329 1 144 1 13 1 160 1 
289 1 72 1 356 1 224 1 202 1 256 1 39 1 187 1 228 1 204 1 337 1 149 1 188 1 229 1 317 1 68 1 209 1 306 1 307 1 94 1 
288 1 289 1 72 1 55 1 278 1 349 1 202 1 39 1 43 1 115 1 68 1 294 1 284 1 307 1 
288 1 289 1 72 1 55 1 278 1 349 1 202 1 39 1 43 1 115 1 68 1 294 1 284 1 307 1 
288 1 289 1 72 1 55 1 278 1 349 1 202 1 39 1 43 1 115 1 68 1 294 1 284 1 307 1 
288 1 289 1 72 1 55 1 278 1 349 1 202 1 39 1 43 1 115 1 68 1 294 1 284 1 307 1 
288 1 289 1 72 1 55 1 278 1 349 1 202 1 39 1 43 1 115 1 68 1 294 1 284 1 307 1 
29 1 24 1 258 1 156 1 1 1 78 1 273 1 15 1 9 1 215 1 
220 1 324 1 
29 1 258 1 239 1 192 1 273 1 15 1 9 1 215 1 66 1 
148 1 206 1 
247 1 255 1 81 1 
252 1 24 1 156 1 1 1 191 1 322 1 15 1 226 1 279 1 215 1 268 1 338 1 29 1 258 1 132 1 273 1 174 2 9 1 
252 1 24 1 156 1 1 1 191 1 322 1 15 1 226 1 279 1 215 1 268 1 338 1 29 1 258 1 132 1 273 1 174 2 9 1 
252 1 24 1 156 1 1 1 191 1 322 1 15 1 226 1 279 1 215 1 268 1 338 1 29 1 258 1 132 1 273 1 174 2 9 1 
255 1 148 1 206 1 
255 1 148 1 206 1 
247 1 81 1 
247 1 255 1 81 1 
339 1 150 1 
254 1 322 1 224 2 226 1 324 1 187 2 29 1 28 1 258 1 132 1 150 1 209 2 60 1 174 1 233 1 9 1 213 1 356 2 15 1 243 1 215 1 338 1 177 1 339 1 273 1 220 1 94 2 
289 1 128 1 72 1 2 1 356 2 137 1 224 2 202 1 39 1 227 1 204 1 65 1 188 1 68 1 209 2 22 1 307 1 306 1 
275 1 214 1 0 1 76 1 12 1 309 1 354 1 69 1 13 1 88 1 361 1 
253 1 0 1 275 1 12 1 309 1 312 1 88 1 178 2 76 1 318 1 283 1 69 1 173 1 116 1 92 1 121 1 361 1 
309 1 312 1 323 1 88 1 217 1 99 1 354 1 69 1 104 1 320 1 70 1 92 1 361 1 83 1 
253 1 0 1 214 1 275 1 12 1 309 1 312 1 88 1 178 2 76 1 354 1 283 1 69 1 173 1 116 1 92 1 121 1 361 1 
353 1 
123 1 183 1 79 1 199 1 242 1 268 1 84 1 
123 1 73 1 199 1 322 1 226 1 79 1 82 1 332 1 37 1 38 1 268 2 67 1 180 1 118 1 343 1 197 1 71 1 
183 1 53 1 223 1 145 2 322 5 323 1 325 2 186 1 226 5 149 2 99 1 229 2 232 1 328 1 331 2 332 4 13 1 62 6 110 2 242 1 337 2 67 5 291 1 69 1 343 12 120 6 162 2 71 4 198 1 123 9 165 2 199 8 26 2 167 2 79 2 32 2 82 4 262 2 37 3 312 1 38 4 87 2 88 1 138 2 216 3 268 8 314 2 180 6 320 6 92 2 361 1 
198 1 123 8 25 1 199 5 166 1 322 1 185 1 167 2 325 1 226 1 225 1 350 1 299 1 149 2 75 1 229 2 79 2 32 2 211 1 82 2 37 1 332 2 62 5 38 2 110 2 138 1 268 5 337 2 67 1 180 3 343 6 120 5 119 1 181 1 71 2 
332 1 38 1 322 1 167 1 226 1 8 1 342 1 49 1 82 1 235 1 71 1 
123 1 183 1 332 1 38 1 199 1 242 1 268 1 79 1 82 1 71 1 
123 5 199 5 62 5 110 2 167 2 138 1 337 2 268 5 149 2 229 2 180 5 32 2 343 10 120 5 162 1 
67 1 37 1 79 1 322 1 226 1 268 1 
123 2 198 2 127 1 199 2 322 3 323 2 325 2 226 3 4 1 99 1 104 1 82 1 83 1 264 1 332 2 37 2 312 1 38 2 88 4 67 4 291 1 159 2 69 4 341 1 320 1 92 1 361 4 251 1 71 2 
72 1 321 1 323 1 224 3 202 1 187 2 204 1 99 1 209 3 233 1 328 1 307 1 306 1 329 1 289 1 290 1 312 1 356 2 88 1 39 1 358 1 43 1 315 1 317 2 69 1 293 1 294 1 320 1 160 1 92 1 361 1 94 2 
123 1 198 1 332 1 62 2 199 2 38 1 96 1 325 1 268 4 180 2 79 2 343 4 120 2 82 1 71 1 
258 1 9 1 157 1 
258 1 150 1 1 1 103 1 9 1 
258 1 9 1 157 1 
258 1 9 1 157 1 
258 1 276 1 9 1 
258 1 276 1 9 1 
258 1 276 1 9 1 
258 1 9 1 
29 1 15 1 
124 1 289 2 72 2 202 2 244 1 39 2 89 1 91 1 8 1 93 1 307 2 235 1 143 1 
124 1 89 1 68 1 91 1 8 1 348 1 337 1 235 1 143 1 84 1 
149 1 289 1 229 1 68 1 72 1 212 1 202 1 39 1 337 1 307 1 
43 1 68 1 294 1 185 1 181 1 299 1 
43 1 44 1 68 1 294 1 185 1 181 1 
43 1 294 1 181 1 
68 1 185 1 
149 1 43 1 229 1 68 1 294 1 162 1 337 1 
288 1 289 1 72 1 185 1 202 1 39 1 299 1 43 1 68 1 294 1 119 1 181 1 307 1 
68 1 348 1 337 1 
124 1 289 1 72 1 240 1 244 1 202 1 39 1 89 1 43 1 91 1 8 1 294 1 93 1 235 1 307 1 143 1 
89 1 8 1 342 1 235 1 143 1 
149 1 288 1 289 1 68 1 72 1 202 1 39 1 337 1 307 1 
149 1 288 1 289 1 229 1 68 1 72 1 202 1 39 1 337 1 307 1 
288 1 289 2 72 2 129 1 202 2 39 2 89 1 8 1 93 1 307 2 235 1 143 1 
288 1 289 3 72 3 129 1 185 1 202 3 39 3 299 1 43 1 90 1 68 1 294 1 212 1 181 1 307 3 
288 1 289 1 72 1 185 1 202 1 39 1 299 1 43 1 68 1 294 1 119 1 181 1 307 1 
288 1 289 2 72 2 185 1 202 2 39 2 299 1 43 1 68 1 294 1 212 1 119 1 181 1 307 2 
288 1 289 1 72 1 185 1 202 1 39 1 299 1 43 1 68 1 294 1 119 1 181 1 307 1 
288 1 289 1 72 1 185 1 202 1 39 1 299 1 43 1 68 1 294 1 119 1 181 1 307 1 
288 1 289 1 72 1 185 1 202 1 39 1 299 1 43 1 68 1 294 1 119 1 181 1 307 1 
288 1 289 1 72 1 185 1 202 1 39 1 299 1 43 1 68 1 294 1 119 1 181 1 307 1 
288 1 289 2 72 2 185 1 202 2 39 2 299 1 43 1 68 1 294 1 212 1 119 1 181 1 307 2 
288 1 289 2 72 2 129 1 185 1 202 2 39 2 299 1 43 1 68 1 294 1 119 1 181 1 307 2 
124 1 89 1 91 1 8 1 93 1 235 1 143 1 
288 1 289 2 72 2 129 1 185 1 202 2 39 2 299 1 43 1 68 1 294 1 119 1 181 1 307 2 
77 1 152 1 209 1 335 1 356 1 233 1 224 1 
136 1 297 1 335 1 356 1 224 1 158 1 100 1 77 1 152 1 209 1 233 1 327 1 
99 1 69 1 312 1 104 1 320 1 323 1 92 1 88 1 83 1 361 1 84 1 
290 1 321 1 312 1 356 1 224 2 323 1 88 1 187 1 218 1 99 1 69 1 209 2 320 1 233 1 92 1 328 1 361 1 94 1 
290 1 321 1 312 1 356 2 193 1 224 2 169 1 88 1 187 2 218 1 208 1 99 2 159 1 69 1 6 1 47 1 209 2 320 3 233 1 92 1 328 2 361 1 94 1 
321 1 312 1 356 2 193 1 224 2 169 1 88 2 187 2 64 1 218 1 111 1 208 1 99 2 159 1 69 2 6 1 47 1 209 2 320 3 233 1 92 1 328 2 361 2 94 1 
322 2 26 1 323 1 226 2 99 1 79 1 6 1 303 1 328 1 331 1 312 1 88 3 64 1 216 1 268 1 67 1 159 1 69 3 47 1 320 4 92 1 295 1 361 3 
331 1 312 1 26 1 322 2 323 1 226 2 88 3 64 1 268 1 216 1 314 1 67 1 99 1 159 1 79 1 69 3 6 1 47 1 320 4 92 1 328 1 361 3 
69 1 312 1 117 1 92 1 88 1 361 1 
223 1 13 1 312 1 323 2 88 2 270 1 74 1 99 1 101 1 69 2 285 1 320 1 92 2 360 1 328 1 305 1 361 2 
289 1 72 1 13 1 356 1 137 1 224 1 202 1 39 1 187 1 204 1 218 1 188 1 209 1 307 1 306 1 94 1 
123 1 183 1 165 1 199 1 145 1 322 3 26 1 323 1 226 3 79 1 82 2 262 1 213 1 331 1 332 2 37 1 38 2 242 1 88 1 268 1 216 1 314 1 67 2 291 1 69 1 320 2 361 1 71 2 
53 1 223 1 331 1 13 1 312 1 88 1 99 1 69 1 117 1 320 2 92 2 328 1 361 1 
308 1 13 1 312 1 323 1 201 1 88 1 99 1 101 1 69 1 320 1 92 2 328 1 305 1 361 1 83 1 
308 1 312 1 201 1 88 2 99 1 101 1 159 1 69 2 340 1 320 1 92 2 328 1 305 1 361 2 
253 1 178 1 283 1 69 1 312 1 323 1 92 1 88 1 121 1 361 1 
0 1 69 1 13 1 88 1 361 1 
69 1 13 1 323 1 88 1 361 1 
69 1 13 1 323 1 88 1 360 1 361 1 131 1 
321 1 312 1 356 1 224 2 323 1 88 1 187 1 218 1 111 1 99 1 69 1 209 2 320 1 233 1 92 1 328 1 361 1 94 1 
223 1 312 1 88 1 74 1 99 1 101 1 159 1 69 1 320 1 92 2 328 1 305 1 361 1 
52 1 233 1 98 1 122 1 139 1 
52 1 164 1 322 1 224 1 226 1 169 2 98 1 187 1 300 1 282 1 208 1 79 1 209 1 260 1 33 1 213 1 36 1 356 1 193 1 139 1 268 1 358 1 114 1 317 1 141 1 122 1 94 1 
2 1 356 1 224 1 98 1 227 1 139 1 65 1 209 1 122 1 
300 1 282 1 139 1 
190 1 326 1 261 1 84 1 
190 1 271 1 326 1 146 1 345 1 176 1 261 1 
292 1 107 1 146 1 
236 1 190 1 146 3 16 1 176 1 246 1 271 3 359 1 326 1 345 1 261 1 11 2 
113 1 190 1 271 2 326 1 146 2 345 1 176 1 261 1 50 1 
190 1 146 1 277 1 16 1 176 1 63 1 178 1 271 1 283 1 173 1 345 1 
190 1 271 1 146 1 345 1 176 1 16 1 261 1 
271 1 326 1 146 1 345 1 176 1 16 1 261 2 
190 1 14 1 3 1 146 2 16 1 176 2 271 2 31 1 345 2 261 1 
296 1 190 2 146 3 97 1 16 1 176 1 63 1 113 2 271 3 326 1 345 1 261 1 222 1 
253 1 190 1 146 2 16 1 176 1 113 1 178 2 271 2 283 1 326 1 272 1 116 1 173 1 345 1 261 1 
190 2 146 4 16 1 176 2 63 1 113 2 271 4 326 1 345 2 261 1 50 1 222 1 51 1 
190 1 271 1 326 1 146 1 345 1 176 1 16 1 261 1 
236 1 190 3 146 4 176 1 63 1 113 2 271 4 359 1 326 2 319 1 345 1 261 2 222 1 11 1 
190 1 109 1 146 2 16 1 176 1 168 1 170 1 113 1 271 2 326 1 345 1 261 1 
236 2 190 1 146 3 16 1 176 1 336 1 271 3 359 1 326 1 345 1 261 1 11 2 
219 1 184 1 190 2 334 2 
333 1 271 1 146 1 345 1 176 1 16 1 
113 1 190 1 271 2 326 1 97 1 146 2 345 1 176 1 16 1 261 1 
40 1 
190 1 271 1 326 1 146 1 345 1 176 1 16 1 261 1 
113 1 190 1 271 3 326 1 97 1 146 3 345 1 176 1 16 1 261 1 11 1 
190 1 319 1 63 1 222 1 
190 1 261 1 

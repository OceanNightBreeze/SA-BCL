#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 186 66 340 59 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 23 34 362 252 79 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 23 34 362 252 79 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 23 34 362 252 79 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 23 34 362 252 79 184 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (75,118) 352 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (75,118) 352 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (75,118) 67 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (75,118) 67 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 23 34 362 252 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 368 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 368 164 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 3 99 1 124 2 254 1 253 2 367 1 342 1 245 2 38 3 39 1 143 1 189 1 223 1 
309 1 287 9 289 1 99 2 124 5 216 2 38 9 245 2 342 1 219 1 39 3 315 1 104 2 131 1 223 1 322 1 155 2 250 1 158 1 254 1 253 2 367 6 231 2 230 1 143 4 115 1 189 1 354 1 
309 1 287 9 289 1 99 2 124 5 216 2 38 9 245 2 342 1 219 1 39 3 315 1 104 2 131 1 223 1 322 1 155 2 250 1 158 1 254 1 253 2 367 6 231 2 230 1 143 4 115 1 189 1 354 1 
309 1 287 10 289 1 99 2 124 6 216 2 38 10 245 2 342 1 219 1 39 4 315 1 104 2 131 1 223 1 322 1 155 2 250 1 158 1 254 1 253 2 367 7 231 2 230 1 143 5 115 1 189 1 354 1 
309 1 287 7 289 1 99 2 124 4 216 2 38 7 245 2 342 1 219 1 39 2 315 1 104 2 131 1 223 1 322 1 155 1 250 1 158 1 254 1 253 2 367 4 231 2 230 1 143 3 189 1 354 1 
309 1 287 4 124 3 254 1 253 1 367 3 216 1 342 1 245 1 38 4 231 1 39 1 143 2 115 1 189 1 104 1 354 1 155 2 
287 2 124 1 99 1 254 1 253 1 216 1 342 1 245 1 38 2 217 1 315 1 189 1 104 1 208 1 47 1 322 1 
261 1 309 1 287 9 99 1 124 5 216 1 38 9 245 2 342 1 219 1 39 3 104 1 223 1 155 2 250 1 254 1 253 2 367 7 231 1 143 4 115 1 189 1 354 1 284 1 
261 1 309 1 287 9 99 1 124 5 216 1 38 9 245 2 342 1 219 1 39 3 104 1 223 1 155 2 250 1 254 1 253 2 367 7 231 1 143 4 115 1 189 1 354 1 284 1 
13 1 196 1 215 1 183 1 331 1 128 1 293 1 6 1 45 1 305 1 108 1 235 1 336 1 201 1 
307 1 
296 1 128 2 196 2 84 1 307 1 199 1 235 1 205 1 
296 1 337 2 123 2 196 5 53 1 187 2 128 5 44 1 197 1 105 1 95 1 146 1 84 2 307 1 199 1 225 1 235 2 168 1 375 1 
130 1 307 1 199 1 
186 2 294 1 307 1 
6 2 13 2 45 2 290 1 305 1 215 2 336 2 201 2 
98 2 171 2 290 1 311 1 35 2 37 1 313 1 215 2 264 1 2 1 4 2 58 1 220 1 6 3 45 2 61 1 12 1 201 2 88 1 50 2 13 2 326 1 178 1 159 1 275 1 203 1 257 1 299 1 22 1 279 1 280 1 334 1 116 1 305 1 336 3 169 1 120 1 
6 1 13 1 45 1 305 1 108 1 215 1 336 1 183 1 201 1 331 1 
13 1 196 1 292 1 266 1 361 1 6 1 128 1 70 1 108 1 307 1 199 1 308 1 192 1 336 1 
13 1 196 2 292 1 215 1 266 1 361 1 128 2 6 1 45 1 70 1 108 1 307 1 199 1 336 1 201 1 
128 1 196 1 84 1 265 1 235 1 
296 1 232 1 128 2 196 2 84 1 307 1 199 1 235 1 
128 1 196 1 84 1 
370 1 6 2 13 2 45 1 290 2 319 1 215 1 336 2 201 1 
81 1 33 1 353 1 
50 1 98 1 178 1 290 1 35 1 275 1 257 1 299 1 2 1 58 1 6 1 103 1 334 1 116 1 336 1 12 1 
130 1 290 1 
50 1 13 1 98 1 178 1 35 1 215 1 275 1 299 1 257 1 2 1 58 1 334 1 6 2 116 1 81 1 132 1 336 2 12 1 201 1 156 1 
6 3 13 3 45 1 290 1 132 1 215 3 336 3 201 3 
6 1 13 1 108 1 215 1 336 1 183 1 201 1 
6 1 13 1 370 1 45 1 319 1 108 1 215 1 336 1 201 1 
98 1 171 1 290 1 311 1 196 1 37 1 35 1 292 1 149 1 313 1 215 3 264 1 2 1 266 1 4 2 58 1 220 1 361 1 6 4 128 1 45 2 132 1 108 1 133 1 12 1 201 3 156 1 88 1 50 1 13 3 178 1 159 1 275 1 299 1 257 1 22 1 334 1 370 1 116 1 70 1 305 1 336 4 169 1 120 1 
310 1 6 2 13 2 290 1 215 1 132 1 192 1 336 2 201 1 
13 3 196 1 292 1 215 3 266 1 361 1 370 1 128 1 6 3 45 1 70 1 108 1 132 2 133 1 307 1 336 3 201 3 72 1 156 1 
13 2 215 2 353 1 370 1 6 2 45 1 81 1 132 1 336 2 201 2 
50 1 98 1 178 1 290 1 35 1 275 1 257 1 299 1 2 1 58 1 6 1 334 1 116 1 336 1 12 1 
50 1 98 1 178 1 290 1 51 1 35 1 299 1 2 1 58 1 267 1 6 1 334 1 116 1 336 1 12 1 
88 1 87 1 30 1 170 1 177 1 171 4 311 1 125 1 33 2 313 1 159 1 173 1 353 2 4 2 206 1 220 1 22 2 23 1 198 1 81 2 48 1 61 2 285 1 169 1 
6 1 13 1 70 1 108 1 215 1 68 1 336 1 201 1 
310 1 13 5 290 1 214 1 215 4 150 1 6 5 370 1 45 1 132 2 192 1 336 5 201 4 156 1 
6 2 13 2 68 1 108 1 215 2 336 2 183 1 201 2 
14 2 75 1 118 1 157 1 180 1 343 2 
14 1 312 1 343 1 
14 1 343 1 
14 1 343 1 
157 1 180 1 
157 1 180 1 
157 1 180 1 
14 1 330 1 343 1 
14 1 330 1 343 1 
14 1 330 1 343 1 
14 1 373 1 343 1 
14 1 373 1 343 1 
14 1 373 1 343 1 
14 2 272 1 75 1 196 2 172 2 141 1 18 2 343 2 258 1 20 2 316 1 41 3 128 2 190 1 83 1 107 2 307 1 364 2 121 1 
262 1 290 1 196 1 312 1 36 1 215 2 343 1 5 1 41 1 128 1 6 2 60 1 107 1 364 1 201 2 13 2 271 1 14 1 139 1 18 1 20 1 144 1 336 2 121 1 
325 2 104 2 208 1 231 1 359 1 
104 1 216 1 231 1 
104 1 208 1 216 1 
325 1 104 3 208 1 359 1 231 2 52 1 
325 1 104 2 208 1 8 1 359 1 231 1 
30 1 337 1 123 1 32 1 196 5 34 1 341 1 173 1 314 1 128 5 60 1 197 3 294 1 270 1 84 1 134 2 199 1 225 2 87 1 296 1 227 1 139 1 349 2 185 2 144 1 186 3 187 1 53 1 23 1 282 1 307 2 235 4 
337 1 196 6 341 1 293 1 6 1 197 3 294 1 108 1 199 1 201 1 296 1 202 1 13 1 349 2 23 1 305 1 307 3 30 1 73 1 32 1 123 1 34 1 215 1 265 3 173 1 314 1 128 6 45 1 84 4 134 2 225 2 87 1 139 2 140 3 183 1 331 1 53 1 187 1 186 3 336 1 235 5 239 1 
30 1 337 1 123 1 196 3 34 1 341 1 173 1 314 1 128 3 105 1 197 3 294 2 270 1 134 2 199 1 225 2 87 1 227 1 139 1 349 2 185 1 187 1 186 4 23 1 307 3 235 2 
30 2 337 1 123 1 196 4 34 2 341 1 173 2 314 1 128 4 105 1 197 5 294 3 270 1 134 4 199 1 225 4 87 2 138 1 65 1 227 1 139 2 229 1 349 4 185 2 186 7 187 1 23 2 307 4 235 3 
92 1 
130 1 11 1 58 1 
58 1 29 1 
2 1 58 1 
334 1 127 1 283 1 2 1 11 2 58 3 
334 1 2 1 58 1 
304 1 58 1 
30 1 170 3 297 1 240 2 171 7 255 1 173 1 360 1 317 1 22 3 7 1 268 1 209 1 234 1 61 4 306 1 285 2 260 1 
30 4 170 10 242 3 171 31 240 3 311 1 34 3 76 1 360 2 173 4 4 2 80 1 317 5 220 1 268 2 7 2 61 16 347 1 88 1 87 3 297 1 112 4 159 1 182 1 22 15 23 3 372 1 234 1 209 2 191 1 306 1 356 1 285 5 260 1 
30 1 170 4 171 9 240 2 311 2 173 1 360 1 4 4 220 2 317 1 268 1 7 1 129 1 61 5 347 1 88 2 297 1 159 2 300 1 22 4 209 1 306 1 285 3 260 1 
30 1 170 3 297 1 240 2 171 7 173 1 360 1 317 1 22 3 7 1 268 1 209 1 234 1 61 4 306 1 285 2 260 1 
30 1 170 3 297 1 240 2 171 7 173 1 360 1 317 1 22 3 7 1 268 1 209 1 234 1 61 4 306 1 285 2 260 1 
50 1 287 1 98 1 178 1 251 2 241 1 99 2 213 1 35 1 366 2 253 1 245 1 38 1 2 1 351 1 58 1 57 1 116 1 371 1 154 1 12 1 176 2 28 1 
74 1 98 1 287 1 99 1 35 1 78 1 216 1 38 1 245 1 342 1 218 1 102 1 42 1 104 2 295 1 12 1 176 1 50 1 251 1 366 1 253 1 231 1 52 1 116 1 208 1 24 1 
74 1 98 1 287 2 124 1 99 1 35 1 78 1 216 1 38 2 245 1 342 1 218 1 42 1 104 2 295 1 12 1 176 1 324 1 50 1 251 1 366 1 254 1 253 1 367 1 231 1 52 1 189 1 116 1 208 1 24 1 
74 1 98 1 287 3 124 1 99 1 35 1 78 1 216 1 38 3 245 1 218 1 102 1 104 2 295 1 12 1 176 1 50 1 251 1 366 1 254 1 253 1 367 2 231 1 69 1 52 1 351 1 189 1 116 1 208 1 24 1 
74 1 98 1 287 2 124 1 99 1 35 1 216 1 38 2 102 1 104 2 295 1 12 1 176 1 50 1 251 1 366 1 254 1 367 2 69 1 231 1 52 1 189 1 116 1 208 1 24 1 
165 1 
98 2 337 1 241 1 196 5 341 1 292 1 1 4 2 1 58 1 6 1 197 2 294 2 108 1 154 1 199 1 12 1 109 1 296 3 13 1 66 1 111 1 298 2 161 2 350 1 116 1 70 1 71 1 307 2 26 1 308 1 211 1 119 1 123 1 35 2 77 1 266 1 361 1 174 2 128 5 84 6 225 2 49 1 136 2 50 2 178 2 273 1 329 2 142 1 186 2 53 1 187 1 96 2 97 2 192 1 336 1 
296 1 136 1 13 1 196 3 273 1 1 2 292 1 77 1 350 1 205 1 266 1 361 1 128 3 6 1 70 1 84 2 108 1 308 1 192 1 336 1 211 1 119 1 
196 3 292 1 1 3 77 1 266 1 361 1 6 1 128 3 84 1 108 1 199 1 296 1 13 1 273 1 350 1 329 1 205 1 70 1 307 1 336 1 192 1 308 1 211 1 119 1 
196 3 292 1 1 3 77 1 266 1 361 1 6 1 128 3 108 1 84 2 199 1 296 1 136 1 13 1 273 1 298 1 350 1 329 1 205 1 70 1 307 1 336 1 192 1 308 1 211 1 119 1 
337 1 288 1 123 1 196 5 291 1 340 1 292 1 1 6 77 1 266 1 361 1 43 1 174 2 128 5 6 1 197 1 294 2 84 7 108 1 199 5 225 1 109 1 296 3 136 4 13 1 66 1 113 1 273 1 298 4 161 2 350 1 329 4 205 1 187 1 53 1 70 1 96 2 97 2 307 5 192 1 308 1 336 1 211 1 119 1 
337 1 196 4 1 4 292 1 6 1 197 1 294 2 108 1 199 1 109 1 296 2 13 1 66 1 111 1 298 2 350 1 161 2 70 1 307 2 308 1 211 1 119 1 123 1 77 1 266 1 361 1 128 4 174 2 84 4 225 1 136 2 273 1 329 2 53 1 187 1 186 2 96 2 97 2 336 1 192 1 
288 1 337 1 123 1 196 4 340 1 292 1 1 4 77 1 266 1 361 1 43 1 174 2 6 1 128 4 197 1 294 2 84 4 108 1 199 1 225 1 109 1 136 2 296 2 13 1 66 1 273 1 298 2 161 2 350 1 329 2 53 1 187 1 70 1 96 2 307 1 97 2 336 1 192 1 308 1 211 1 119 1 
288 1 337 1 123 1 196 4 340 1 292 1 1 4 77 1 266 1 361 1 43 1 174 2 6 1 128 4 197 1 294 2 84 4 108 1 199 1 225 1 109 1 136 2 296 2 13 1 66 1 273 1 298 2 161 2 350 1 329 2 53 1 187 1 70 1 96 2 307 1 97 2 336 1 192 1 308 1 211 1 119 1 
338 1 337 1 123 1 196 2 340 1 292 1 1 2 77 1 266 1 361 1 59 1 6 1 128 2 197 1 108 1 225 1 226 1 13 1 66 1 365 1 273 1 161 1 350 1 186 1 53 1 187 1 70 1 97 1 336 1 192 1 308 1 211 1 119 1 
337 1 288 1 123 1 196 4 291 1 340 1 292 1 1 5 77 1 266 1 361 1 43 1 174 2 6 1 128 4 197 1 294 2 108 1 84 5 199 1 225 1 109 1 296 2 136 3 13 1 66 1 273 1 298 3 161 2 350 1 329 3 187 1 53 1 70 1 96 2 307 1 97 2 336 1 192 1 308 1 211 1 119 1 
337 1 288 1 123 1 196 4 291 1 340 1 292 1 1 5 77 1 266 1 361 1 43 1 174 2 6 1 128 4 197 1 294 2 108 1 84 5 199 1 225 1 109 1 296 2 136 3 13 1 66 1 273 1 298 3 161 2 350 1 329 3 187 1 53 1 70 1 96 2 307 1 97 2 336 1 192 1 308 1 211 1 119 1 
338 2 337 1 123 1 196 4 292 1 1 4 77 1 266 1 40 2 361 1 128 4 6 1 197 1 84 4 108 1 199 1 225 1 136 2 296 2 13 1 66 1 365 1 111 1 273 1 298 2 161 2 350 1 329 2 186 2 187 1 53 1 70 1 307 1 97 2 308 1 192 1 336 1 211 1 119 1 
98 7 171 2 241 1 263 1 0 1 311 2 35 8 215 1 313 2 264 1 2 2 58 3 4 4 102 1 220 2 6 1 198 1 61 1 345 1 132 1 154 1 63 1 200 1 12 2 324 1 201 1 50 8 88 2 13 1 178 2 159 2 163 1 22 1 279 2 280 1 116 2 336 1 167 1 169 2 
30 1 170 1 171 3 311 1 33 1 34 1 313 1 215 1 173 1 4 2 220 1 6 1 344 1 81 1 45 1 61 1 201 1 64 1 88 1 87 1 13 1 159 1 353 1 22 2 370 1 23 1 336 1 285 1 169 1 
30 1 170 2 171 6 240 1 311 1 290 2 33 1 313 1 360 1 173 1 4 2 220 1 130 1 198 1 81 1 61 3 88 1 297 1 159 1 353 1 22 3 209 1 306 1 285 2 169 1 260 1 
30 1 170 2 171 14 242 3 290 1 311 2 33 11 34 2 76 1 313 2 264 1 173 2 4 4 317 1 220 2 221 1 344 1 81 11 61 8 88 2 87 1 112 3 228 1 159 2 276 1 353 4 22 6 280 1 23 2 356 1 285 1 236 1 169 1 
286 1 98 1 171 2 290 1 311 1 35 1 313 1 215 1 264 1 2 1 58 1 4 2 220 1 103 1 6 2 344 1 61 1 132 1 12 1 201 1 156 1 50 1 88 1 13 1 178 1 274 1 275 1 159 1 328 1 299 1 257 1 353 1 22 1 334 1 280 1 116 1 336 2 169 1 
98 3 240 1 290 2 2 2 4 6 58 2 102 1 6 3 344 1 106 2 61 10 12 2 201 1 156 1 297 1 13 1 159 3 257 2 299 2 114 2 353 7 22 10 23 2 116 2 209 1 306 1 260 1 169 3 30 3 170 8 171 20 311 3 33 7 35 3 37 2 34 2 215 1 313 3 264 1 360 1 173 3 220 3 317 4 81 7 82 2 132 1 85 1 50 3 88 3 87 2 178 1 275 2 332 1 280 1 334 2 233 1 55 2 336 3 285 4 
88 1 170 1 171 2 311 1 33 1 125 1 313 1 159 1 173 1 353 1 4 2 317 1 220 1 23 1 198 1 81 1 61 2 169 1 
88 1 87 1 30 1 170 1 177 1 171 2 311 1 33 1 313 1 159 1 353 1 4 2 220 1 22 2 198 1 81 1 285 1 169 1 
30 1 170 2 171 4 311 1 33 2 34 1 313 1 173 1 4 2 220 1 317 1 198 1 81 2 61 2 88 1 87 1 159 1 353 2 22 2 23 1 285 1 169 1 
88 1 170 1 171 2 311 1 33 1 125 1 313 1 159 1 173 1 353 1 4 2 317 1 220 1 23 1 81 1 61 2 167 1 169 1 
88 1 87 1 30 1 170 1 177 1 171 2 311 1 33 1 313 1 159 1 353 1 4 2 220 1 22 2 81 1 285 1 167 1 169 1 
30 1 170 2 171 4 311 1 33 2 34 1 313 1 173 1 4 2 220 1 317 1 81 2 61 2 88 1 87 1 159 1 353 2 22 2 23 1 167 1 285 1 169 1 
30 1 87 1 88 1 170 2 171 4 311 1 33 2 34 1 313 1 159 1 173 1 353 2 4 2 317 1 220 1 22 2 23 1 81 2 61 2 285 1 169 1 
98 1 171 2 290 1 311 1 37 1 35 1 313 1 264 1 2 1 58 1 4 2 220 1 6 1 61 1 12 1 50 1 88 1 178 1 275 1 159 1 299 1 257 1 22 1 280 1 334 1 116 1 336 1 169 1 
98 1 171 2 290 1 311 1 35 1 313 1 264 1 2 1 58 1 4 2 220 1 267 1 6 1 61 1 224 1 12 1 50 1 88 1 178 1 51 1 159 1 299 1 22 1 280 1 334 1 116 1 336 1 169 1 
30 1 170 2 171 4 311 1 33 2 34 1 313 1 173 1 4 2 220 1 317 1 344 1 81 2 61 2 88 1 87 1 159 1 353 2 22 2 23 1 285 1 169 1 
30 1 170 2 98 1 171 4 311 1 33 2 37 1 35 1 34 1 313 1 173 1 2 1 58 1 4 2 317 1 220 1 6 1 81 2 82 1 61 2 12 1 324 1 87 1 50 1 88 1 275 1 159 1 299 1 257 1 353 2 22 2 23 1 334 1 116 1 336 1 285 1 169 1 
30 1 170 1 193 1 171 3 311 1 33 1 34 1 313 1 215 1 173 1 4 2 317 1 220 1 6 1 344 1 45 1 81 1 61 2 201 1 87 1 88 1 13 1 159 1 353 1 22 1 370 1 23 1 336 1 169 1 
30 3 170 6 171 19 242 1 311 2 212 1 244 1 339 1 34 3 76 1 79 1 173 3 4 4 220 2 317 3 129 1 61 9 135 1 88 2 87 3 112 2 159 2 204 2 93 2 184 1 302 1 22 10 23 3 356 1 285 3 
88 1 242 2 171 11 112 2 311 1 34 1 252 1 339 2 76 2 159 1 79 2 204 2 173 1 184 1 4 2 220 1 22 5 23 1 129 1 362 1 61 6 9 1 135 1 
30 2 170 3 171 24 242 3 311 2 244 1 339 2 34 3 76 3 79 1 173 3 4 4 220 2 317 2 129 1 362 1 61 12 9 1 135 1 88 2 87 2 112 4 252 1 159 2 204 3 93 1 184 1 302 1 22 12 23 3 25 1 356 1 285 1 
30 2 170 4 171 24 242 3 311 2 244 1 339 2 34 3 76 3 79 1 173 3 4 4 220 2 317 2 129 1 362 1 61 12 9 1 135 1 88 2 87 2 112 4 252 1 159 2 204 3 93 1 184 1 302 1 22 12 23 3 25 1 356 1 285 2 
30 5 170 9 240 1 171 36 242 4 311 1 339 1 34 5 76 2 79 1 360 1 173 6 4 2 220 1 317 4 129 1 362 1 61 19 9 1 135 1 88 1 87 4 297 1 112 4 252 1 228 2 159 1 204 2 184 1 22 17 23 5 209 1 306 1 356 2 285 5 260 1 
14 1 75 1 107 1 141 1 363 1 364 1 18 1 343 1 258 1 20 1 
312 1 36 1 
151 1 14 1 101 1 107 1 364 1 18 1 343 1 376 1 20 1 
14 1 272 1 75 1 196 1 172 1 141 1 18 1 343 1 258 1 20 1 316 1 41 2 128 1 190 1 107 1 307 1 364 1 121 1 
14 1 272 1 75 1 196 1 172 1 141 1 18 1 343 1 258 1 20 1 316 1 41 2 128 1 190 1 107 1 307 1 364 1 121 1 
14 1 272 1 75 1 196 1 172 1 141 1 18 1 343 1 258 1 20 1 316 1 41 2 128 1 190 1 107 1 307 1 364 1 121 1 
118 1 330 1 352 1 
118 1 330 1 352 1 
373 1 67 1 
118 1 373 1 67 1 
262 1 271 1 
262 1 290 1 172 1 196 1 312 1 36 1 215 2 343 1 5 1 41 1 6 2 128 1 60 1 107 1 364 1 201 2 271 1 13 2 272 1 14 1 139 1 181 1 18 1 20 1 144 1 336 2 235 1 
330 1 352 1 
118 1 373 1 67 1 
98 2 171 2 263 1 311 1 35 2 313 1 264 1 2 1 58 1 4 2 220 1 6 2 344 1 222 1 61 1 63 1 12 1 50 2 88 1 137 1 90 1 13 2 159 1 19 1 333 1 22 1 279 2 280 1 116 1 336 2 169 1 
50 1 98 1 178 1 241 1 35 1 213 1 2 1 277 1 58 1 116 1 281 1 154 1 12 1 176 1 
50 1 74 1 98 1 35 1 358 1 216 1 231 1 52 1 218 1 102 1 104 2 281 1 116 1 208 1 295 1 175 1 12 1 176 1 
50 2 74 1 98 2 35 2 358 1 216 1 231 1 52 1 218 1 102 1 104 2 116 1 281 1 208 1 295 1 175 1 12 1 176 1 324 1 
50 1 74 1 98 1 35 1 358 1 216 1 231 1 52 1 218 1 102 1 104 2 116 1 208 1 295 1 346 1 12 1 176 1 
27 1 
337 1 123 1 53 1 187 1 197 1 199 1 307 1 225 1 168 1 375 1 
87 2 30 2 34 2 349 5 114 1 173 2 186 10 23 2 54 2 197 5 294 5 134 5 307 5 225 5 147 1 
296 1 128 1 196 1 84 1 307 1 199 1 
98 4 337 2 195 2 123 2 194 1 241 1 196 3 35 4 341 2 2 1 58 1 128 3 105 1 197 2 84 4 154 1 348 1 49 1 225 2 12 1 50 4 296 2 178 2 187 2 53 1 116 1 71 1 335 1 26 2 
197 1 130 1 307 1 199 1 225 1 168 1 375 1 
337 1 123 1 196 1 174 1 128 1 197 1 294 1 84 1 199 1 225 1 109 1 296 1 187 1 53 1 186 1 96 1 307 2 
98 3 337 4 195 1 194 1 196 5 100 2 341 2 2 3 58 10 3 2 197 9 294 6 199 2 12 4 11 2 296 3 16 2 256 1 349 6 114 2 301 2 23 2 116 3 304 2 355 2 26 1 307 8 168 1 29 3 30 2 123 4 35 3 34 2 173 2 266 2 128 5 84 5 321 1 134 6 225 8 323 2 324 1 50 3 87 2 178 1 278 1 53 4 187 4 186 12 334 3 54 2 283 1 147 2 375 1 
30 2 337 1 123 1 242 1 34 2 76 1 173 2 197 6 294 1 362 1 134 4 9 1 225 4 87 2 112 1 252 1 349 4 369 1 186 2 187 1 53 1 23 2 307 1 56 1 
30 1 337 1 288 1 123 1 196 1 215 1 360 1 173 2 6 1 128 1 293 1 197 2 45 1 108 1 225 2 201 1 13 1 183 1 331 1 187 1 53 1 54 2 209 1 305 1 336 1 147 1 237 1 260 1 
98 1 171 1 290 1 311 1 35 1 37 1 215 2 313 1 264 1 2 1 4 2 58 1 220 1 6 3 45 2 12 1 201 2 88 1 50 1 13 2 178 1 159 1 275 1 257 1 299 1 22 1 334 1 116 1 305 1 336 3 169 1 120 1 
337 1 240 1 123 1 341 1 349 2 186 4 53 1 187 1 197 1 294 2 134 2 199 2 307 4 26 1 225 2 
262 1 259 1 107 1 141 1 364 1 
107 1 62 1 364 1 
107 1 62 1 364 1 
107 1 62 1 364 1 
17 1 107 1 364 1 
17 1 107 1 364 1 
17 1 107 1 364 1 
107 1 364 1 
14 1 343 1 
88 1 30 2 170 5 171 10 311 1 159 1 360 2 173 2 4 2 220 1 317 2 22 5 129 1 209 2 61 5 237 1 285 3 260 1 
88 1 170 1 171 2 311 1 159 1 173 1 4 2 220 1 317 1 23 1 129 1 61 2 
30 1 87 1 88 1 170 2 171 4 311 1 34 1 159 1 173 1 4 2 220 1 317 1 22 2 23 1 129 1 61 2 285 1 
88 3 170 2 171 3 357 1 311 3 244 1 159 3 360 1 4 6 220 3 317 1 22 2 129 1 209 1 61 1 347 1 285 1 
30 5 170 12 240 1 171 34 242 3 357 1 311 5 244 1 34 3 76 1 360 3 173 5 80 1 4 10 220 5 317 5 129 1 61 16 248 1 347 2 88 5 87 3 297 1 112 4 159 5 182 1 22 18 23 3 372 1 209 3 306 1 356 1 285 7 260 2 
30 1 170 2 240 1 242 1 171 8 311 1 76 1 173 1 360 1 4 2 220 1 129 1 61 4 88 1 297 1 112 1 252 1 159 1 22 4 209 1 306 1 285 2 260 1 
30 1 170 3 240 1 171 11 242 1 311 2 34 1 76 1 360 1 173 2 4 4 220 2 317 1 129 1 61 6 248 1 88 2 297 1 112 2 252 1 159 2 22 5 23 1 209 1 306 1 356 1 285 2 260 1 
88 1 171 5 242 1 311 1 112 1 34 1 252 1 76 1 159 1 173 1 4 2 220 1 22 2 23 1 129 1 362 1 61 3 9 1 
88 1 171 5 242 1 311 1 112 1 34 1 252 1 76 1 159 1 173 1 4 2 220 1 22 2 23 1 129 1 362 1 61 3 9 1 
30 1 170 2 240 1 242 1 171 8 311 1 76 1 173 1 360 1 4 2 220 1 129 1 61 4 88 1 297 1 112 1 252 1 159 1 22 4 209 1 306 1 285 2 260 1 
88 1 171 5 242 1 311 1 112 1 34 1 252 1 76 1 159 1 173 1 4 2 220 1 22 2 23 1 129 1 362 1 61 3 9 1 
88 2 242 1 171 5 311 2 112 1 34 1 252 1 76 1 159 2 173 1 4 4 220 2 22 2 23 1 129 1 362 1 61 3 9 1 248 1 
88 2 242 1 171 5 311 2 112 1 34 1 244 1 252 1 76 1 159 2 173 1 4 4 220 2 22 2 23 1 129 1 362 1 61 3 9 1 
30 1 297 2 170 6 171 7 360 3 173 1 317 3 22 4 209 3 61 3 306 1 285 3 260 1 
88 2 242 1 171 5 311 2 112 1 34 1 244 1 252 1 76 1 159 2 173 1 4 4 220 2 22 2 23 1 129 1 362 1 61 3 9 1 
30 1 88 2 170 3 297 1 240 1 171 8 311 2 159 2 173 1 360 1 4 4 317 1 220 2 22 4 209 1 61 4 306 1 347 1 285 2 260 1 
30 1 297 1 170 2 240 1 171 6 360 1 173 1 22 3 130 1 209 1 61 3 306 1 285 2 260 1 
30 1 87 1 88 1 170 2 171 4 311 1 34 1 159 1 173 1 4 2 220 1 317 1 22 2 23 1 61 2 248 1 285 1 
30 1 87 1 170 2 171 7 242 1 112 2 34 1 76 1 173 1 317 1 22 4 23 1 61 3 356 1 285 1 
30 3 170 9 240 1 242 2 171 23 311 2 357 1 34 2 360 2 173 3 4 4 317 4 220 2 61 11 347 2 87 2 88 2 297 1 112 2 228 1 159 2 22 12 23 2 209 2 306 1 356 1 236 1 285 5 260 1 
22 1 171 1 112 1 
171 1 242 1 61 1 
88 1 87 1 30 1 170 3 171 6 311 1 34 1 159 1 114 1 173 1 4 2 220 1 317 1 22 3 23 1 61 3 248 1 285 2 
88 1 171 5 242 1 311 1 112 1 34 1 252 1 76 1 159 1 173 1 4 2 220 1 22 2 23 1 129 1 362 1 61 3 9 1 
30 1 170 2 171 6 173 1 360 1 317 1 22 3 209 1 61 3 285 1 260 1 
88 1 170 2 297 1 171 3 357 1 311 1 159 1 360 1 4 2 317 1 220 1 22 2 209 1 61 1 306 1 347 1 285 1 
6 1 13 1 310 1 290 1 336 1 192 1 86 1 
207 1 148 1 15 1 327 1 247 1 
50 4 98 4 178 1 122 1 241 1 35 4 160 1 2 1 58 1 116 1 154 1 12 1 324 1 
50 2 31 1 98 2 89 1 195 1 179 1 35 2 2 1 58 1 334 1 188 1 116 1 233 1 12 2 
50 1 74 1 104 1 98 1 116 1 178 1 208 1 35 1 216 1 12 1 
50 2 98 2 263 1 35 2 2 1 58 1 102 1 116 1 222 1 12 1 324 1 
50 5 98 4 178 1 195 1 241 1 0 1 263 1 35 5 160 1 2 2 58 3 116 2 154 1 12 2 200 1 324 1 
50 5 98 4 178 1 110 1 195 1 241 1 263 1 35 5 160 1 2 2 58 3 116 2 154 1 12 2 200 1 324 1 
50 1 98 1 116 1 130 1 178 1 241 1 35 1 154 1 2 1 12 1 58 1 
50 1 13 1 98 1 178 1 290 1 35 1 215 1 275 1 299 1 2 1 58 1 334 1 6 2 116 1 132 1 336 2 12 1 201 1 
50 1 13 2 98 1 195 1 290 1 35 1 215 2 275 1 299 1 2 2 3 1 58 3 361 1 334 2 6 2 304 1 116 1 70 1 108 1 132 1 336 2 12 1 201 1 
98 2 122 1 195 1 290 1 35 2 215 2 2 2 58 3 3 1 361 1 267 1 6 2 132 1 108 1 12 1 201 1 50 2 13 2 299 1 334 2 116 1 304 1 70 1 336 2 
98 1 195 1 196 2 35 1 215 1 246 1 266 1 58 2 6 1 128 2 293 1 45 1 108 1 84 1 199 1 11 1 201 1 50 1 13 1 183 1 331 1 305 1 307 1 336 1 29 1 
50 3 98 3 178 1 122 1 195 1 196 2 35 3 2 1 266 1 3 1 58 4 334 1 128 2 304 1 116 1 84 1 307 1 199 1 12 1 323 1 11 1 29 1 
50 1 98 1 116 1 35 1 345 1 12 1 
50 7 31 1 98 6 178 2 263 1 0 1 35 7 2 2 163 1 58 3 102 1 279 1 334 1 188 1 116 2 345 1 283 1 166 1 200 1 12 3 324 1 
98 1 240 1 290 2 2 1 4 4 58 1 6 2 344 1 106 1 61 3 12 1 201 1 297 1 13 1 159 2 257 1 299 1 353 1 19 1 22 3 116 1 209 1 306 1 169 2 260 1 30 1 170 2 171 6 311 2 33 1 37 1 35 1 215 1 313 2 360 1 173 1 220 2 81 1 82 1 132 1 324 1 50 1 88 2 275 1 334 1 336 2 285 2 
98 1 337 2 123 2 194 1 196 3 35 1 266 1 58 2 128 3 197 1 84 2 199 1 225 1 323 1 11 1 50 1 296 1 178 1 16 1 301 1 187 2 53 2 355 1 307 1 235 1 168 1 375 1 29 1 
50 2 98 2 35 2 2 1 278 1 58 2 334 1 116 1 345 1 283 1 11 1 12 2 324 1 
50 1 13 1 98 1 178 1 290 1 35 1 215 1 299 1 2 1 58 1 267 1 334 1 6 2 116 1 132 1 336 2 12 1 201 1 
50 1 31 1 98 1 195 1 35 1 2 1 58 1 334 1 188 1 116 1 283 1 166 1 12 2 
46 1 153 1 368 1 333 1 
164 1 145 1 46 1 
46 2 153 1 368 1 333 1 
164 1 128 1 145 1 196 1 46 2 243 1 153 1 235 1 368 1 333 1 
189 1 287 1 124 1 254 1 253 1 38 1 245 1 342 1 
287 4 124 3 126 1 254 2 253 1 367 2 162 1 38 4 245 1 39 1 143 1 315 1 94 1 189 2 
261 1 287 2 124 1 254 1 253 1 367 1 342 1 245 1 38 2 189 1 269 1 249 1 
287 3 124 1 126 2 253 1 254 1 342 1 245 1 38 3 315 2 94 1 189 1 152 1 
318 1 117 1 124 2 10 2 
287 1 253 1 91 1 38 1 245 1 342 1 
189 1 287 2 124 1 254 1 253 1 367 1 38 2 245 1 342 1 250 1 
320 1 
189 1 287 1 124 1 254 1 253 1 38 1 245 1 342 1 
189 1 130 1 124 1 254 1 
189 1 287 1 124 1 254 1 253 1 38 1 245 1 
251 1 99 1 38 1 
189 1 94 1 287 3 124 1 126 1 254 1 253 1 38 3 245 1 342 1 238 1 315 2 
189 1 287 2 124 1 254 1 253 1 367 1 38 2 245 1 155 1 
309 1 287 1 124 1 253 1 216 1 342 1 245 1 38 1 231 1 143 1 104 1 
287 1 124 1 254 1 253 1 38 1 245 1 342 1 
189 1 287 1 254 2 253 1 38 1 245 1 342 1 
287 2 124 1 254 1 253 2 342 1 245 2 38 2 303 1 374 1 210 1 
287 3 124 2 254 1 253 1 367 2 342 1 245 1 38 3 219 1 39 1 143 1 189 1 250 1 
287 2 124 1 254 1 253 1 367 1 216 1 342 1 245 1 38 2 231 1 52 1 21 1 189 1 104 2 208 1 
287 4 124 2 254 1 253 2 367 2 342 1 245 2 38 4 39 1 143 1 115 1 189 1 155 1 
189 1 287 3 124 1 254 1 253 1 367 1 38 3 245 1 342 1 250 1 315 1 
124 1 162 1 143 1 39 1 
124 1 254 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 305 (175,294) (175,294) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 305 (175,294) (175,294) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 305 (175,294) (175,294) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 305 (175,294) (175,294) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 305 (120,306) (120,306) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (105,157,174,280) (105,157,174,280) (105,157,174,280) 242 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (105,157,174,280) (105,157,174,280) (105,157,174,280) 242 23 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (105,157,174,280) (105,157,174,280) (105,157,174,280) 242 23 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) 343 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 304 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) 343 136 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 259 128 113 (21,320) 29 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 40 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 251 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 259 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 259 128 75 246 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 259 128 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 351 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (105,157,174,280) (105,157,174,280) (77,260,295) (77,260,295) (77,260,295) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (105,157,174,280) (105,157,174,280) (77,260,295) (77,260,295) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (105,157,174,280) (105,157,174,280) (77,260,295) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 259 217 228 (45,194) (263,270) (263,270) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 259 217 228 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 304 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) (241,281) (235,331) 111 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 259 217 228 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 259 128 113 (21,320) 29 170 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) (241,281) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 259 207 178 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 259 217 228 (45,194) (45,194) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 259 128 75 39 330 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 259 217 228 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) 343 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 40 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 259 128 113 (21,320) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 251 (21,320) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 251 (18,134) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 259 128 75 311 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 259 128 113 (18,134) 349 (241,281) (241,281) (235,331) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 251 (18,134) 215 1 (235,331) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 259 128 75 39 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 259 217 228 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 259 128 198 187 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 259 207 178 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 259 207 354 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 259 207 98 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 259 128 113 (21,320) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 259 128 75 311 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 305 1 157 1 34 1 174 1 175 1 280 1 159 1 294 1 
118 1 305 1 157 1 34 1 174 1 175 1 280 1 159 1 294 1 
118 1 305 1 157 1 34 1 174 1 175 1 280 1 159 1 294 1 
118 1 305 1 157 1 34 1 174 1 175 1 280 1 159 1 294 1 
157 1 27 1 300 1 280 4 105 3 159 1 129 1 140 1 95 3 162 1 3 1 318 1 34 4 174 1 253 1 268 2 323 2 286 1 
118 1 305 1 157 1 120 1 65 1 306 1 34 1 174 1 280 1 159 1 286 1 
242 1 118 1 157 2 34 1 174 2 280 2 159 1 
23 1 242 1 118 1 122 1 157 2 34 2 174 2 105 1 280 3 159 1 
23 1 242 1 118 1 122 1 157 2 34 2 174 2 105 1 280 3 159 1 
121 1 184 1 40 1 
121 1 153 1 185 2 
10 2 342 1 308 2 49 2 148 1 36 2 51 2 48 2 
10 1 343 1 342 1 113 1 308 1 128 1 259 1 68 1 15 1 48 1 241 1 16 1 349 1 348 2 134 1 172 1 163 2 49 1 36 1 208 1 51 1 262 2 244 1 
10 1 342 1 203 1 298 1 308 1 49 1 36 1 51 1 96 1 48 1 
10 1 74 1 195 1 184 1 104 1 130 1 203 1 121 1 49 1 243 1 51 1 191 1 339 1 63 1 
74 2 10 1 308 1 195 1 184 1 130 2 48 1 203 1 121 1 49 1 36 1 51 1 191 1 339 1 63 1 
74 1 334 1 119 1 138 1 130 1 
333 1 74 2 334 1 119 1 121 1 184 1 313 1 130 2 
74 1 334 1 130 1 
74 1 10 1 342 1 119 1 298 1 308 1 130 1 48 1 203 1 49 1 36 1 51 1 96 1 234 1 
121 1 
74 2 334 1 303 1 119 1 121 1 184 1 313 1 130 2 
74 5 99 2 296 1 119 2 184 1 287 1 13 1 313 1 130 5 267 1 115 2 334 2 188 1 70 1 121 1 124 1 126 1 182 1 41 2 
148 1 40 1 
10 2 25 1 54 1 308 1 148 2 48 1 49 2 36 1 51 2 
164 1 112 1 209 1 
349 1 348 1 134 1 304 1 113 1 172 1 163 1 128 1 208 1 259 1 262 1 15 1 
10 3 82 1 308 3 49 3 148 1 36 3 51 3 48 1 
10 1 203 1 298 1 308 1 49 1 36 1 51 1 
10 1 25 1 203 1 54 1 308 1 49 1 36 1 51 1 48 1 
74 1 54 1 195 1 82 1 203 1 163 1 36 3 208 1 339 1 63 1 255 1 10 3 343 1 342 1 113 1 308 3 128 1 259 1 130 1 48 2 15 1 241 1 349 1 348 1 134 1 172 1 290 1 49 3 51 3 191 1 262 1 136 1 
10 2 82 1 308 1 49 2 148 1 36 1 243 1 51 2 94 1 
74 1 10 3 54 1 308 3 195 1 79 1 130 1 48 1 82 2 203 1 121 1 290 1 49 3 36 3 51 3 191 1 339 1 63 1 255 1 
10 1 54 1 308 1 49 1 36 1 51 1 209 1 48 1 
349 1 348 1 134 1 113 1 172 1 163 1 128 1 208 1 259 1 262 1 15 1 
29 1 348 1 113 1 172 1 163 1 21 1 128 1 208 1 259 1 262 1 15 1 
112 1 12 1 279 1 150 1 345 1 179 1 17 2 352 1 59 1 143 1 221 1 322 2 252 1 144 1 209 1 232 2 
10 1 203 1 308 1 49 1 36 1 51 1 63 1 52 1 
10 1 113 1 308 1 128 1 259 1 15 1 348 1 349 1 134 1 82 1 172 1 163 1 49 1 36 1 208 1 51 1 262 1 255 1 
10 5 54 1 308 4 148 1 301 1 48 1 94 1 200 1 82 2 49 5 36 4 243 1 51 5 255 1 
10 2 203 1 298 1 308 2 49 2 36 2 51 2 52 1 
132 1 168 1 
132 1 168 1 
4 1 261 1 
4 1 261 1 
4 1 261 1 
132 1 341 1 168 1 
132 1 196 1 168 1 
169 1 132 2 4 1 277 1 261 1 168 2 
132 1 341 1 168 1 
132 1 341 1 168 1 
132 1 101 1 168 1 
132 1 101 1 168 1 
132 1 101 1 168 1 
74 2 275 1 277 1 278 1 28 1 44 1 130 2 168 2 266 2 132 2 81 2 171 3 121 1 222 1 284 2 223 2 62 2 88 1 226 1 
74 1 196 1 81 1 141 1 283 1 230 1 284 1 36 2 62 1 88 1 10 2 213 1 308 2 148 1 309 1 344 1 130 1 168 1 132 1 171 1 72 1 223 1 49 2 51 2 
3 1 140 1 286 1 
65 1 140 1 286 1 
336 1 3 2 65 1 302 1 356 1 286 3 
336 1 3 1 65 1 293 1 302 1 286 2 
336 1 3 1 65 1 302 2 286 2 
99 1 298 1 57 1 103 1 107 1 8 2 182 3 234 1 10 1 308 1 184 1 150 1 313 1 114 1 312 2 185 4 153 2 115 1 188 2 70 1 72 1 272 2 74 5 119 4 334 1 203 1 121 1 36 1 38 1 87 1 89 1 41 1 256 1 342 1 347 1 130 5 48 1 352 1 219 1 49 1 51 1 96 1 
74 2 119 2 298 1 138 1 334 1 250 1 203 1 121 1 36 1 234 1 10 1 342 1 308 1 184 1 92 1 130 2 48 1 218 1 49 1 51 1 96 1 
99 1 74 3 119 2 298 1 57 1 107 1 203 1 121 1 36 1 38 1 87 1 8 1 182 1 234 1 41 1 10 1 342 1 256 1 308 1 184 1 287 1 114 1 312 1 130 3 185 1 48 1 115 1 219 1 188 2 72 1 49 1 51 1 96 1 272 1 
99 1 74 2 119 1 327 1 57 1 107 1 38 1 87 1 8 1 182 1 41 1 256 1 287 1 312 1 114 1 130 2 185 1 115 1 219 1 188 2 72 1 272 1 
84 1 40 1 
251 1 
47 1 
259 1 
75 1 246 1 128 1 259 1 
128 1 259 1 
351 1 
155 1 127 1 91 1 56 1 328 1 248 1 314 1 73 1 285 2 33 1 224 1 322 1 192 1 
155 1 127 1 91 1 56 1 328 1 248 1 314 1 73 1 285 2 33 1 224 1 322 1 192 1 
155 1 127 1 91 1 56 1 328 1 310 1 248 1 314 1 73 1 285 2 224 1 33 1 322 1 192 1 
326 1 328 1 248 1 150 3 106 1 314 10 239 1 69 1 107 3 337 1 161 4 17 10 352 3 219 3 142 1 31 3 73 3 285 4 33 2 322 20 38 3 225 1 192 1 
155 1 56 1 328 1 248 1 279 1 107 2 179 1 337 1 204 1 33 1 285 5 232 2 64 1 165 1 91 1 345 1 314 6 17 5 352 2 221 1 73 2 224 1 322 11 176 1 192 3 
295 1 118 1 157 1 77 1 105 1 280 2 159 1 140 1 3 1 338 1 163 1 34 1 86 1 208 1 340 1 286 2 65 1 186 1 260 1 133 1 348 1 172 1 292 1 174 1 262 1 356 1 325 1 
295 1 118 1 157 1 77 1 280 3 105 2 140 1 199 1 83 1 3 1 338 1 163 1 60 1 34 2 86 1 208 1 340 1 286 2 65 1 133 1 348 1 172 1 292 1 174 1 262 1 356 1 325 1 
118 1 65 1 77 1 105 2 280 2 140 1 199 1 348 1 133 1 3 1 338 1 172 1 163 1 60 1 292 1 34 1 208 1 86 1 262 1 356 1 286 2 340 1 
118 2 270 1 157 1 156 1 45 1 228 1 280 1 259 1 217 1 15 1 348 1 133 2 83 1 163 1 34 1 174 1 86 2 262 1 263 1 340 2 
295 1 118 1 157 1 77 1 280 1 159 1 140 1 3 1 338 1 163 1 60 1 34 1 86 1 208 1 340 1 286 2 65 1 260 1 133 1 348 1 172 1 292 1 174 1 262 1 356 1 325 1 
357 1 
74 2 99 1 297 1 228 1 313 1 114 1 259 1 130 2 217 1 15 2 115 1 348 2 334 2 188 1 5 1 70 1 163 2 135 1 182 1 262 2 41 1 
74 3 10 1 76 1 227 1 195 1 276 1 197 2 104 1 313 1 130 3 265 1 303 1 334 2 203 1 355 1 49 1 125 1 191 1 243 1 51 1 63 1 339 1 
74 3 76 1 276 1 195 1 197 3 78 1 104 1 265 1 334 1 303 1 203 1 121 1 125 1 339 1 63 1 10 1 184 1 313 1 130 3 49 1 355 1 51 1 243 1 191 1 
74 3 76 1 276 1 195 1 227 1 197 3 78 1 104 1 265 1 303 1 334 2 203 1 121 1 125 1 109 1 339 1 63 1 10 1 184 1 313 1 130 3 49 1 355 1 51 1 243 1 191 1 
99 1 100 1 137 2 55 1 227 4 104 1 265 1 303 1 109 4 7 2 63 1 182 1 10 1 184 5 66 1 313 3 153 2 115 1 188 1 70 1 191 1 243 1 74 5 274 1 76 1 195 1 276 1 197 6 78 4 282 2 201 2 334 7 203 1 121 5 125 1 339 1 41 1 130 5 346 1 216 1 49 1 355 1 50 1 51 1 
99 1 74 4 137 2 76 1 55 1 264 1 227 2 276 1 195 1 197 4 78 2 104 1 265 1 282 2 201 2 334 4 203 1 121 2 125 1 109 2 7 2 182 1 339 1 63 1 41 1 10 1 184 1 313 2 130 4 185 2 153 2 216 1 115 1 188 1 70 1 355 1 49 1 243 1 51 1 191 1 
99 1 74 4 274 1 100 1 137 2 76 1 55 1 227 2 276 1 195 1 197 4 78 2 104 1 265 1 282 2 201 2 334 4 203 1 121 1 125 1 109 2 7 2 182 1 339 1 63 1 41 1 10 1 184 1 313 2 130 4 346 1 153 2 216 1 115 1 188 1 70 1 49 1 355 1 51 1 243 1 191 1 
99 1 74 4 274 1 100 1 137 2 76 1 55 1 227 2 276 1 195 1 197 4 78 2 104 1 265 1 282 2 201 2 334 4 203 1 121 1 125 1 109 2 7 2 182 1 339 1 63 1 41 1 10 1 184 1 313 2 130 4 346 1 153 2 216 1 115 1 188 1 70 1 49 1 355 1 51 1 243 1 191 1 
99 1 74 4 100 1 76 1 247 1 227 2 276 1 195 1 197 4 78 2 104 1 265 1 282 2 201 2 334 4 203 1 121 1 125 1 109 2 182 1 339 1 63 1 269 1 307 2 41 1 10 1 214 1 184 1 313 2 130 4 185 2 216 1 115 1 188 1 70 1 49 1 355 1 51 1 243 1 191 1 97 2 
99 1 274 1 74 4 100 1 137 2 76 1 55 1 276 1 195 1 227 3 197 5 78 3 104 1 265 1 282 2 201 2 334 5 203 1 121 1 125 1 109 3 7 2 182 1 339 1 63 1 41 1 10 1 184 1 313 2 130 4 346 1 153 2 216 1 115 1 188 1 70 1 49 1 355 1 50 1 51 1 243 1 191 1 
99 1 274 1 74 4 100 1 137 2 76 1 55 1 276 1 195 1 227 3 197 5 78 3 104 1 265 1 282 2 201 2 334 5 203 1 121 1 125 1 109 3 7 2 182 1 339 1 63 1 41 1 10 1 184 1 313 2 130 4 346 1 153 2 216 1 115 1 188 1 70 1 49 1 355 1 50 1 51 1 243 1 191 1 
99 1 74 4 76 1 264 1 247 1 227 2 276 1 195 1 197 4 78 2 104 1 265 1 282 2 201 2 334 4 203 1 121 1 125 1 109 2 182 1 339 1 63 1 307 2 41 1 10 1 184 1 313 2 130 4 185 2 216 1 115 1 188 1 70 1 355 1 49 1 243 1 51 1 191 1 97 2 
155 1 12 1 56 1 91 1 279 1 345 1 179 1 143 1 221 1 285 1 224 1 252 1 40 1 192 1 232 2 
279 2 106 1 179 2 107 2 108 1 202 1 161 2 203 1 32 1 143 2 31 2 61 1 285 1 252 1 38 2 209 7 232 4 145 1 164 6 112 7 148 1 345 2 314 6 271 1 17 3 219 2 221 2 173 1 73 1 322 9 
329 1 279 1 179 1 82 1 304 1 163 1 143 1 252 1 36 1 37 1 208 1 255 1 110 1 145 1 232 2 164 1 10 1 113 1 308 1 128 1 259 1 345 1 314 1 15 1 14 1 349 1 348 1 134 1 17 1 172 1 221 1 49 1 173 1 322 2 51 1 262 1 
279 1 281 1 179 1 82 1 143 1 163 1 252 1 36 1 208 1 255 1 145 1 232 2 111 1 10 1 235 1 113 1 308 1 128 1 259 1 345 1 15 1 241 1 349 1 348 1 134 1 17 1 172 1 221 1 49 1 173 1 322 1 51 1 262 1 
149 1 279 1 228 1 259 1 314 1 345 1 217 1 14 1 179 1 15 1 16 1 348 2 17 1 317 1 143 1 221 1 163 2 173 1 322 2 252 1 262 2 232 2 
24 1 54 1 279 1 179 1 107 1 143 1 285 1 252 1 36 1 38 1 209 1 232 2 145 1 164 1 10 1 112 1 308 1 150 1 345 1 314 1 48 1 17 2 219 1 352 1 221 1 49 1 322 3 51 1 192 1 
112 1 12 1 279 1 345 1 314 2 179 1 107 1 30 1 219 1 143 1 221 1 322 2 252 1 209 1 232 2 
112 1 12 1 279 1 150 1 345 1 179 1 17 2 352 1 143 1 221 1 322 2 252 1 144 1 209 1 232 2 
112 1 12 1 279 1 345 1 314 2 179 1 107 1 219 1 143 1 221 1 322 2 252 1 38 1 209 1 232 2 
112 1 149 1 279 1 345 1 314 2 179 1 107 1 30 1 219 1 143 1 221 1 322 2 252 1 209 1 232 2 
112 1 149 1 279 1 150 1 345 1 179 1 17 2 352 1 143 1 221 1 322 2 252 1 144 1 209 1 232 2 
112 1 149 1 279 1 345 1 314 2 179 1 107 1 219 1 143 1 221 1 322 2 252 1 38 1 209 1 232 2 
112 1 279 1 345 1 314 2 179 1 107 1 219 1 143 1 221 1 252 1 322 2 38 1 209 1 232 2 
349 1 348 1 134 1 113 1 172 1 163 1 128 1 208 1 259 1 262 1 15 1 241 1 
29 1 348 1 170 1 113 1 172 1 163 1 21 1 128 1 208 1 259 1 262 1 15 1 
112 1 279 1 345 1 314 2 179 1 107 1 219 1 143 1 221 1 322 2 252 1 38 1 209 1 145 1 232 2 
113 1 128 1 259 1 281 1 186 1 241 1 348 1 349 1 134 1 163 1 172 1 208 1 262 1 
54 1 279 1 179 1 107 1 143 1 285 1 252 1 36 1 38 1 209 1 232 2 145 1 10 1 164 1 112 1 308 1 345 1 240 1 314 2 48 1 219 1 221 1 73 1 49 1 322 2 51 1 
245 3 158 2 279 2 139 1 106 1 179 2 107 4 181 1 337 1 161 4 31 3 285 5 38 4 210 1 232 4 183 1 212 1 64 1 237 1 150 4 239 3 345 2 314 15 93 1 289 1 17 17 219 4 352 4 316 1 221 2 319 1 73 3 291 1 322 32 192 2 116 1 193 1 
245 3 158 2 279 2 139 1 106 1 179 2 107 4 181 1 337 2 161 4 31 3 285 6 38 4 210 1 232 4 183 1 212 1 64 1 237 1 150 3 239 3 345 2 314 16 93 1 289 1 17 15 219 4 352 3 316 1 221 2 319 1 73 3 291 1 322 31 192 3 116 1 193 1 
245 3 155 1 56 1 158 1 279 1 139 1 106 2 179 1 107 7 181 1 337 1 161 4 31 4 61 2 285 13 38 7 210 1 232 2 183 1 212 1 64 1 91 1 150 7 239 2 345 1 314 23 93 1 289 1 17 22 219 7 352 7 316 1 221 1 319 1 73 7 291 1 224 1 322 45 192 6 116 1 
245 2 158 1 279 2 139 1 106 1 179 2 107 3 161 2 31 1 285 6 38 3 232 4 183 1 64 1 150 3 239 1 345 2 314 9 17 10 219 3 352 3 221 2 319 1 73 3 291 2 322 19 192 3 116 1 273 1 193 1 
245 2 158 2 279 1 139 1 179 1 107 2 181 1 337 2 161 2 31 2 285 2 38 2 210 1 232 2 183 1 212 1 64 1 150 1 345 1 314 10 239 2 93 1 289 1 17 8 352 1 219 2 316 1 221 1 73 1 319 1 291 1 322 18 192 1 116 2 
132 1 81 1 277 1 223 1 284 1 62 1 28 1 226 1 168 1 146 1 
230 1 196 1 
132 1 81 1 6 1 223 1 284 1 62 1 46 1 258 1 168 1 
74 1 275 1 277 1 28 1 44 1 130 1 168 1 266 1 132 1 81 1 171 2 121 1 222 1 284 1 223 1 62 1 88 1 226 1 
74 1 275 1 277 1 28 1 44 1 130 1 168 1 266 1 132 1 81 1 171 2 121 1 222 1 284 1 223 1 62 1 88 1 226 1 
74 1 275 1 277 1 28 1 44 1 130 1 168 1 266 1 132 1 81 1 171 2 121 1 222 1 284 1 223 1 62 1 88 1 226 1 
169 1 341 1 350 1 
169 1 341 1 350 1 
101 1 26 1 
169 1 101 1 26 1 
141 1 283 1 
74 1 119 1 275 1 196 1 266 1 81 1 141 1 283 1 230 1 284 1 62 1 36 2 10 2 213 1 308 2 43 1 148 1 309 1 344 1 130 1 168 1 132 1 171 1 72 1 49 2 223 1 51 2 
341 1 350 1 
169 1 101 1 26 1 
178 1 102 1 279 1 179 1 163 2 143 1 252 1 207 1 211 1 145 1 232 2 10 2 151 1 259 1 345 1 314 1 14 1 16 2 348 2 17 1 317 1 189 1 221 1 49 2 173 1 322 2 51 2 262 2 
65 1 257 1 140 1 186 1 348 2 3 1 338 1 172 1 163 2 229 1 60 1 292 1 35 1 208 1 86 1 262 2 356 1 286 2 325 1 
147 1 65 1 140 1 348 1 3 1 338 1 163 1 172 1 60 1 292 1 35 1 86 1 208 1 262 1 356 1 286 2 325 1 
194 1 45 1 228 1 259 1 15 1 217 1 348 1 163 1 229 1 86 1 262 1 
65 1 257 1 140 1 348 1 3 1 338 1 163 1 229 1 172 1 60 1 292 1 35 1 208 1 86 1 262 1 356 1 286 2 325 1 
58 1 
188 1 296 1 121 1 184 1 13 1 40 1 182 1 
74 1 99 1 137 1 55 1 184 1 313 1 130 1 185 1 153 1 115 1 334 1 188 1 70 1 121 2 7 1 182 1 41 1 
99 1 75 1 128 1 330 1 259 1 15 1 115 1 348 1 70 1 163 1 39 1 262 1 41 1 
99 1 107 2 181 1 161 1 31 1 38 2 182 6 41 1 212 1 150 2 312 5 239 1 185 3 93 1 115 1 289 1 188 4 219 2 352 2 70 1 316 1 272 5 
99 1 274 1 74 1 155 1 298 1 103 1 107 2 203 1 204 1 36 1 182 2 89 2 41 1 234 1 10 1 342 1 165 1 308 1 91 1 130 1 48 1 115 1 188 2 352 1 70 1 49 1 51 1 96 1 
99 1 296 1 184 1 13 1 115 1 188 1 70 1 121 1 182 1 41 1 
188 2 219 1 38 1 312 1 185 1 272 1 107 1 
74 1 334 1 121 1 184 1 313 1 130 1 
99 1 74 1 297 1 228 1 334 2 5 1 163 2 182 1 41 1 114 1 313 1 259 1 130 1 15 2 217 1 115 1 348 2 188 1 70 1 220 1 135 1 262 2 
10 1 343 1 342 1 113 1 308 1 128 1 259 1 48 1 15 1 241 1 349 1 348 1 134 1 172 1 163 1 49 1 36 1 208 1 51 1 262 1 
99 1 184 1 114 1 185 1 115 1 188 1 70 1 5 1 121 1 182 1 272 1 41 1 
81 1 205 1 223 1 
81 1 0 1 141 1 223 1 28 1 
81 1 205 1 223 1 
81 1 205 1 223 1 
81 1 223 1 67 1 
81 1 223 1 67 1 
81 1 223 1 67 1 
81 1 223 1 
132 1 168 1 
212 1 64 1 155 1 91 1 56 1 279 1 314 1 345 1 239 1 179 1 161 1 17 1 221 1 31 1 285 1 224 1 322 2 192 1 232 2 
155 1 56 1 279 2 106 1 179 2 107 1 161 2 31 1 285 2 38 1 232 4 212 1 64 1 91 1 239 1 345 2 314 3 315 1 17 2 219 1 221 2 73 1 224 1 322 5 192 1 
279 2 179 2 107 2 181 1 161 1 337 1 31 1 285 2 38 2 232 4 212 1 64 1 150 2 239 1 345 2 314 6 315 1 93 1 289 1 17 7 219 2 352 2 316 1 221 2 73 1 322 13 192 1 
279 2 179 2 107 2 181 1 337 1 161 1 31 1 285 2 38 2 232 4 212 1 64 1 150 1 239 1 345 2 314 7 315 1 93 1 17 4 289 1 219 2 352 1 316 1 221 2 73 1 322 11 192 1 
212 1 64 1 155 1 91 1 56 1 279 1 314 1 345 1 239 1 179 1 161 1 17 1 221 1 31 1 285 1 224 1 322 2 192 1 232 2 
279 1 179 1 107 2 181 1 161 1 31 1 285 2 38 2 232 2 212 1 64 1 150 2 239 1 345 1 314 6 93 1 17 6 289 1 219 2 352 2 316 1 221 1 73 1 322 12 192 1 
279 2 179 2 107 2 181 1 161 1 337 2 31 1 285 2 38 2 232 4 212 1 64 1 150 1 239 1 345 2 314 7 315 1 93 1 289 1 17 5 219 2 352 1 316 1 221 2 73 1 322 12 192 1 
279 2 179 2 107 2 181 1 161 1 337 2 31 1 285 4 38 2 232 4 212 1 64 1 150 1 239 1 345 2 314 7 93 1 289 1 17 5 219 2 352 1 316 1 221 2 73 2 322 12 192 2 193 1 
155 2 56 1 91 2 314 1 17 1 73 2 224 2 285 4 322 2 192 2 
279 2 179 2 107 2 181 1 161 1 337 2 31 1 285 2 38 2 232 4 212 1 64 1 150 1 239 1 345 2 314 7 93 1 289 1 17 5 219 2 352 1 316 1 221 2 73 1 322 12 192 1 193 1 
155 1 56 1 279 1 179 1 107 2 337 1 204 1 285 4 232 2 165 1 91 1 345 1 314 5 17 5 352 2 221 1 73 2 224 1 322 10 192 2 
155 1 285 1 91 1 224 1 56 1 40 1 192 1 
150 1 279 1 345 1 314 2 315 1 179 1 107 1 17 2 352 1 219 1 221 1 73 1 285 2 322 4 38 1 192 1 232 2 
150 1 106 1 239 1 314 3 107 1 161 2 17 4 352 1 219 1 31 1 73 1 285 2 322 7 38 1 192 1 
155 1 56 1 106 1 107 4 161 2 337 1 204 1 31 2 32 1 61 1 285 5 38 2 165 1 91 1 150 2 314 10 17 10 352 4 219 2 73 2 224 1 322 20 192 3 
17 1 161 1 322 1 
31 1 322 1 314 1 
279 1 150 1 345 1 314 3 315 1 179 1 107 1 17 3 219 1 352 1 221 1 73 1 285 3 20 1 322 6 38 1 192 2 232 2 
279 1 179 1 107 2 181 1 161 1 31 1 285 2 38 2 232 2 212 1 64 1 150 2 239 1 345 1 314 6 93 1 17 6 289 1 219 2 352 2 316 1 221 1 73 1 322 12 192 1 
165 1 155 1 91 1 314 3 107 1 17 3 352 1 73 1 285 2 322 6 192 1 
337 1 17 1 322 1 231 1 
64 1 155 2 165 1 91 2 279 1 345 1 314 5 179 1 107 2 17 5 352 2 204 1 221 1 73 2 285 5 322 10 192 3 232 2 
64 1 279 1 345 1 314 2 179 1 107 1 219 1 221 1 73 1 285 1 322 2 232 2 
64 1 150 1 279 1 345 1 314 2 179 1 107 1 17 2 352 1 219 1 221 1 73 1 285 2 322 4 38 1 192 1 232 2 
64 1 155 1 91 1 279 2 345 2 314 1 179 2 337 1 17 2 221 2 73 1 285 2 322 3 231 1 192 1 193 1 232 4 
155 1 56 1 279 3 179 3 107 4 337 1 161 3 204 1 142 1 31 3 285 6 38 2 232 6 64 1 165 1 91 1 150 2 239 1 345 3 314 12 315 1 69 1 17 12 219 2 352 4 221 3 73 3 224 1 322 24 225 1 192 3 193 1 
10 1 49 1 148 1 51 1 243 1 152 1 94 1 
10 1 148 1 152 1 2 1 94 1 335 1 49 1 321 1 243 1 51 1 117 1 9 1 
348 1 163 1 228 1 40 1 259 1 262 1 217 1 15 1 
10 1 113 1 308 1 128 1 259 1 15 1 348 1 82 1 134 1 163 1 172 1 49 1 36 1 208 1 51 1 262 1 
10 1 113 1 308 1 42 1 128 1 259 1 348 1 82 1 134 1 163 1 172 1 49 1 36 1 208 1 51 1 262 1 
10 1 113 1 308 1 42 1 128 1 259 1 348 1 82 1 163 1 172 1 49 1 36 1 21 1 208 1 51 1 262 1 
348 1 74 1 163 1 42 1 320 1 251 1 262 1 130 1 
348 1 74 1 18 1 163 1 42 1 251 1 262 1 130 1 
348 1 53 1 172 1 163 1 208 1 262 1 
348 1 75 1 163 1 128 1 311 1 259 1 262 1 15 1 
279 1 281 1 179 1 82 1 143 1 163 1 252 1 36 1 208 1 145 1 232 2 10 1 235 1 113 1 308 1 128 1 259 1 345 1 186 1 241 1 348 1 349 1 134 1 172 1 189 1 221 1 49 1 51 1 262 1 
74 1 99 1 119 1 215 1 331 1 130 1 1 1 15 1 348 1 115 1 220 1 70 1 18 1 163 1 251 1 262 1 41 1 
348 1 75 1 53 1 163 1 128 1 39 1 259 1 262 1 
348 2 163 2 228 1 259 1 262 2 217 1 186 1 15 1 
348 1 163 1 11 1 128 1 259 1 198 1 262 1 187 1 
348 1 338 1 172 1 163 1 65 1 208 1 262 1 140 1 286 1 15 1 
348 2 178 1 163 2 60 1 207 1 259 1 262 2 186 1 
348 2 354 1 163 2 207 1 259 1 262 2 186 1 15 1 
348 2 163 2 207 1 259 1 262 2 186 1 15 1 98 1 
10 1 113 1 308 1 128 1 259 1 15 1 348 1 82 1 163 1 172 1 49 1 36 1 21 1 208 1 51 1 262 1 
348 1 75 1 163 1 42 1 128 1 311 1 259 1 262 1 
236 1 299 1 148 1 22 1 206 1 
74 2 119 1 236 2 195 1 184 1 299 1 148 1 130 2 160 1 180 1 203 1 121 1 290 1 85 1 206 2 22 2 191 1 63 1 339 1 
10 1 236 1 49 1 299 1 206 1 102 1 51 1 151 1 211 1 
203 1 236 1 290 1 195 1 299 1 22 1 206 1 85 1 191 1 63 1 339 1 160 1 
95 1 318 1 27 1 40 1 
95 1 318 1 157 1 27 1 34 1 174 1 280 1 
133 1 118 1 34 1 
332 2 95 1 353 1 318 1 166 1 157 1 190 1 27 1 34 3 174 1 280 3 159 1 
95 1 318 1 157 1 27 1 34 2 174 1 105 1 280 2 323 1 
157 1 280 1 159 1 140 1 95 1 162 1 3 1 34 1 174 1 268 1 286 1 
95 1 318 1 157 1 34 1 174 1 280 1 159 1 
318 2 157 1 27 1 34 1 174 1 280 1 159 1 
177 1 157 2 280 2 159 1 95 1 318 1 19 1 34 2 174 2 254 1 
157 1 27 1 280 3 105 2 159 1 249 1 288 1 95 2 318 1 34 3 174 1 253 1 268 1 
157 1 65 1 27 1 238 1 280 2 105 1 159 1 140 1 95 1 3 1 318 1 34 2 174 1 286 2 356 1 
157 2 27 1 300 1 280 4 105 2 159 1 95 2 318 1 34 4 174 2 253 1 268 1 323 1 
95 1 318 1 157 1 27 1 34 1 174 1 280 1 159 1 
166 1 157 1 27 2 105 2 280 4 332 1 95 3 353 1 318 2 34 4 174 1 253 1 268 1 154 1 
95 1 318 1 122 1 157 1 27 1 34 2 174 1 105 1 280 2 159 1 324 1 80 1 
332 2 95 1 353 1 318 1 166 2 157 1 123 1 27 1 34 3 174 1 280 3 159 1 
90 1 95 2 167 1 233 2 
157 1 34 1 174 1 280 1 159 1 131 1 
95 1 318 1 157 1 27 1 34 2 174 1 105 1 280 2 249 1 159 1 
71 1 
95 1 318 1 157 1 27 1 34 1 174 1 280 1 159 1 
157 1 27 1 105 1 280 3 159 1 249 1 332 1 95 1 318 1 34 3 174 1 
95 1 268 1 253 1 154 1 
95 1 318 1 

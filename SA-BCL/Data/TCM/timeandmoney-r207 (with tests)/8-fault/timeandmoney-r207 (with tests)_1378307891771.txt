#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 140 (20,298,321) (41,45,291) (41,45,291) (41,45,291) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (66,149) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 336 362 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 140 (20,298,321) (20,298,321) (20,298,321) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 185 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
113 1 32 1 243 2 155 3 109 1 9 3 209 1 210 1 269 1 225 2 271 1 85 1 338 1 
178 2 113 2 32 3 155 9 71 1 308 2 73 1 9 9 236 2 140 2 209 4 210 1 338 6 265 1 213 1 42 1 293 1 76 1 243 2 368 1 195 1 109 1 25 1 110 1 225 2 269 1 271 1 85 1 
178 2 113 2 32 3 155 9 71 1 308 2 73 1 9 9 236 2 140 2 209 4 210 1 338 6 265 1 213 1 42 1 293 1 76 1 243 2 368 1 195 1 109 1 25 1 110 1 225 2 269 1 271 1 85 1 
178 2 113 2 32 4 155 10 71 1 308 2 73 1 9 10 236 2 140 2 209 5 210 1 338 7 265 1 213 1 42 1 293 1 76 1 243 2 368 1 195 1 109 1 25 1 110 1 225 2 269 1 271 1 85 1 
178 2 113 2 32 2 155 7 71 1 308 1 73 1 9 7 236 2 140 2 209 3 210 1 338 4 265 1 213 1 42 1 76 1 243 2 368 1 195 1 109 1 25 1 110 1 225 2 269 1 271 1 85 1 
265 1 178 1 293 1 32 1 76 1 243 1 155 4 308 2 109 1 9 4 236 1 140 1 209 2 210 1 269 1 225 1 271 1 338 3 
57 1 178 1 113 1 243 1 155 2 71 1 312 1 109 1 9 2 40 1 140 1 110 1 210 1 269 1 225 1 271 1 
178 1 113 1 32 3 155 9 0 1 308 2 73 1 9 9 236 1 209 4 140 1 210 1 338 7 265 1 42 1 293 1 76 1 243 2 109 1 374 1 225 2 269 1 271 1 85 1 
178 1 113 1 32 3 155 9 0 1 308 2 73 1 9 9 236 1 209 4 140 1 210 1 338 7 265 1 42 1 293 1 76 1 243 2 109 1 374 1 225 2 269 1 271 1 85 1 
241 1 294 1 357 1 217 1 246 1 173 1 186 1 52 1 197 1 287 1 315 1 63 1 191 1 131 1 
200 1 
302 1 194 1 357 1 63 2 200 1 30 1 106 1 246 2 
65 2 274 1 194 1 266 1 357 2 307 1 246 5 106 2 107 1 320 1 7 2 360 2 128 1 188 1 176 1 63 5 97 1 200 1 30 1 
194 1 253 1 200 1 
101 2 232 1 200 1 
52 2 287 2 197 1 315 2 309 1 131 2 191 2 173 2 
91 1 226 1 356 1 306 1 279 1 309 1 204 1 283 1 5 1 235 1 332 1 52 2 333 1 139 1 287 3 96 1 315 2 167 1 191 2 364 2 242 1 168 1 146 1 294 1 147 1 14 1 170 1 44 2 173 3 78 1 249 2 80 2 342 1 46 1 197 1 131 2 326 1 87 2 177 1 
186 1 241 1 52 1 294 1 287 1 197 1 315 1 131 1 191 1 173 1 
273 1 294 1 194 1 215 1 132 1 173 1 246 1 150 1 287 1 263 1 315 1 63 1 200 1 363 1 
294 1 194 1 215 1 132 1 246 2 173 1 150 1 52 1 287 1 263 1 315 1 191 1 131 1 63 2 200 1 
357 1 63 1 161 1 106 1 246 1 
241 1 294 1 194 1 357 1 217 1 173 1 246 2 106 1 186 1 52 1 287 1 197 1 300 1 315 1 131 1 191 1 63 2 30 1 200 1 
63 1 106 1 246 1 
91 1 226 1 147 1 156 1 306 1 279 1 204 1 78 1 173 2 21 1 52 1 249 1 80 1 342 1 139 1 287 2 142 1 315 1 131 1 87 1 
52 1 287 2 68 1 82 1 315 2 309 2 131 1 191 1 173 2 
92 1 142 1 149 1 
91 1 242 1 226 1 294 1 317 1 147 1 306 1 279 1 309 1 204 1 173 1 78 1 249 1 80 1 342 1 139 1 287 1 87 1 
253 1 309 1 
273 1 68 1 156 2 309 1 105 1 173 5 6 1 21 1 52 4 287 5 56 1 315 5 131 4 191 1 
186 1 52 2 67 1 294 1 287 2 315 2 131 2 173 2 
52 3 287 3 156 1 315 3 191 1 309 1 131 3 173 3 
186 1 52 1 294 1 287 1 315 1 131 1 173 1 
52 1 294 1 287 1 68 1 82 1 315 1 131 1 191 1 173 1 
91 1 226 1 68 1 132 1 156 1 306 1 279 1 309 1 204 1 283 1 5 1 235 1 52 3 139 1 261 1 287 4 263 1 315 3 167 1 191 2 364 1 146 1 294 1 147 1 14 1 215 1 16 1 170 1 44 2 78 1 173 4 246 1 150 1 21 1 249 1 80 1 342 1 46 1 197 1 131 3 63 1 326 1 87 1 177 1 
273 1 6 1 52 1 287 2 156 1 315 2 309 1 131 1 173 2 
294 1 215 1 68 1 132 1 156 2 280 1 246 1 173 3 21 1 150 1 52 3 261 1 287 3 263 1 315 3 191 1 63 1 131 3 200 1 
68 1 156 1 149 1 173 2 52 2 287 2 142 1 315 2 191 1 131 2 
91 1 242 1 226 1 294 1 147 1 306 1 279 1 309 1 204 1 173 1 78 1 249 1 80 1 342 1 139 1 287 1 87 1 
91 1 242 1 294 1 147 1 304 1 306 1 3 1 309 1 204 1 173 1 78 1 249 1 80 1 342 1 139 1 287 1 87 1 
115 1 92 2 66 1 358 1 5 1 259 1 235 1 260 1 208 1 39 1 361 1 142 2 167 1 364 4 192 1 168 2 146 1 148 1 149 2 44 2 46 1 255 1 326 1 177 2 
52 1 67 1 294 1 287 1 263 1 315 1 131 1 173 1 
247 1 163 1 254 1 
247 2 353 1 163 2 257 1 102 1 203 1 
247 1 163 1 
247 1 163 1 
257 1 203 1 
257 1 203 1 
257 1 203 1 
247 1 163 1 4 1 
247 1 163 1 4 1 
247 1 163 1 4 1 
247 1 252 1 163 1 
247 1 252 1 163 1 
247 1 252 1 163 1 
330 1 69 1 160 1 309 1 52 2 287 2 163 1 190 1 315 2 124 1 193 1 77 1 245 1 172 1 19 1 246 1 173 2 247 1 196 1 224 1 254 1 131 2 63 1 86 1 
124 3 77 1 330 2 159 1 172 2 102 1 160 2 19 2 246 2 118 1 233 1 247 2 136 1 163 2 165 2 349 1 63 2 200 1 74 1 
178 2 236 1 180 2 40 1 95 1 
178 1 236 1 140 1 
178 1 40 1 140 1 
178 3 250 1 236 2 180 1 40 1 95 1 
178 2 236 1 180 1 40 1 337 1 95 1 
65 1 201 1 115 1 357 4 232 1 117 2 358 1 184 1 234 1 7 1 10 2 260 1 360 1 188 3 189 1 193 1 100 2 194 1 148 1 101 3 218 1 106 1 246 5 320 1 23 1 299 1 224 1 176 2 63 5 86 1 30 1 200 2 
65 2 201 2 115 3 357 7 232 3 117 6 358 3 161 5 234 3 7 2 10 6 260 3 360 2 188 8 211 1 164 1 189 2 194 1 266 1 148 3 101 9 106 6 370 5 246 9 126 1 320 1 299 1 323 1 47 1 26 1 176 6 86 4 63 9 200 5 30 1 
65 1 201 1 115 1 357 2 232 2 358 1 117 2 184 1 7 1 234 1 360 1 260 1 10 2 188 3 189 1 100 1 194 1 148 1 266 1 101 4 218 1 246 3 176 2 63 3 86 1 200 3 
65 1 201 1 115 2 357 3 232 3 117 4 358 2 184 1 7 1 234 2 10 4 360 1 260 2 188 5 189 1 100 2 194 1 148 2 101 7 266 1 218 1 246 4 126 1 323 1 47 1 176 4 63 4 86 2 200 4 
55 1 
139 1 253 1 182 1 
366 1 139 1 
91 1 342 1 139 1 
139 1 166 1 
342 1 139 1 
91 1 342 1 139 3 230 1 375 1 182 2 
154 1 168 4 148 1 258 1 70 1 171 1 331 1 260 1 322 1 208 2 286 2 39 3 313 1 346 1 288 1 143 1 177 2 364 6 
154 2 31 3 90 1 49 1 115 2 258 1 70 5 358 2 135 1 5 1 331 2 234 2 235 1 208 8 260 5 39 13 286 3 313 3 238 1 288 1 143 1 167 1 12 1 364 38 212 1 99 1 168 19 148 5 44 2 322 3 223 3 346 2 46 1 177 19 
154 1 49 1 258 1 70 1 331 1 5 2 235 2 260 1 208 4 39 5 286 2 313 1 143 1 167 2 364 10 168 5 148 1 216 1 44 4 322 1 46 2 346 1 301 1 177 5 
154 1 168 4 148 1 258 1 70 1 331 1 260 1 322 1 208 2 286 2 39 3 313 1 346 1 288 1 143 1 177 2 364 6 
154 1 168 4 148 1 258 1 70 1 331 1 260 1 322 1 208 2 286 2 39 3 313 1 346 1 288 1 143 1 364 7 177 3 
113 2 228 1 181 2 155 1 306 1 1 2 9 1 54 1 139 1 239 1 75 1 144 1 169 2 147 1 243 1 78 1 249 1 80 1 222 1 342 1 130 1 225 1 87 1 
178 2 113 1 202 1 181 1 155 1 1 1 306 1 9 1 236 1 207 1 40 1 140 1 41 1 291 1 169 1 243 1 20 1 78 1 297 1 249 1 45 1 80 1 250 1 225 1 269 1 87 1 
178 2 113 1 202 1 169 1 243 1 155 1 181 1 306 1 1 1 78 1 20 1 297 1 45 1 249 1 250 1 9 1 80 1 236 1 40 1 140 1 269 1 225 1 41 1 28 1 291 1 87 1 
178 2 113 1 202 1 181 1 155 3 1 1 306 1 9 3 236 1 207 1 40 1 140 1 210 1 338 2 291 1 169 1 243 1 17 1 20 1 78 1 297 1 249 1 45 1 109 1 250 1 80 1 222 1 225 1 271 1 348 1 87 1 
178 2 113 1 181 1 155 2 1 1 306 1 9 2 207 1 236 1 40 1 140 1 210 1 338 2 291 1 169 1 17 1 20 1 78 1 297 1 249 1 109 1 80 1 250 1 271 1 348 1 87 1 
58 1 
89 1 273 1 228 1 132 1 2 1 232 2 133 1 183 1 7 1 188 2 139 1 287 1 189 1 290 2 240 2 147 2 294 1 194 1 101 2 104 1 106 6 246 5 150 1 249 2 342 1 24 2 199 2 63 5 200 2 30 3 153 4 65 1 355 1 158 2 306 1 116 2 205 2 72 1 33 1 360 1 263 1 315 1 75 1 363 1 365 1 215 1 78 1 173 1 219 1 320 1 80 2 129 1 176 2 48 1 87 2 
273 1 302 1 294 1 215 1 132 1 355 1 2 1 133 1 104 1 33 1 106 2 246 3 173 1 150 1 287 1 263 1 199 1 315 1 63 3 30 1 153 2 363 1 
273 1 302 1 132 1 355 1 2 1 133 1 33 1 287 1 263 1 315 1 363 1 294 1 215 1 194 1 104 1 106 1 173 1 246 3 150 1 24 1 63 3 200 1 30 1 153 3 
273 1 302 1 132 1 355 1 2 1 133 1 33 1 287 1 263 1 315 1 290 1 363 1 294 1 215 1 194 1 104 1 173 1 246 3 106 2 150 1 24 1 199 1 63 3 30 1 200 1 153 3 
273 1 89 1 132 1 2 1 278 1 133 1 232 2 50 1 284 1 7 1 188 1 287 1 290 4 240 2 294 1 194 5 104 1 246 5 106 7 150 1 24 4 199 4 63 5 30 3 200 5 153 6 65 1 302 1 355 1 158 2 116 2 72 1 205 2 33 1 35 1 360 1 263 1 315 1 363 1 215 1 319 1 173 1 320 1 176 1 
273 1 89 1 132 1 2 1 133 1 232 2 7 1 188 1 287 1 290 2 240 2 294 1 194 1 101 2 104 1 246 4 106 4 150 1 24 2 199 2 63 4 30 2 200 2 153 4 65 1 355 1 158 2 116 2 72 1 205 2 33 1 360 1 263 1 315 1 363 1 215 1 173 1 320 1 129 1 176 1 
89 1 273 1 65 1 132 1 355 1 158 2 2 1 116 2 232 2 133 1 205 2 72 1 33 1 50 1 35 1 7 1 360 1 188 1 287 1 263 1 315 1 290 2 240 2 363 1 294 1 194 1 215 1 104 1 319 1 106 4 173 1 246 4 150 1 320 1 24 2 176 1 199 2 63 4 200 1 30 2 153 4 
89 1 273 1 65 1 132 1 355 1 158 2 2 1 116 2 232 2 133 1 205 2 72 1 33 1 50 1 35 1 7 1 360 1 188 1 287 1 263 1 315 1 290 2 240 2 363 1 294 1 194 1 215 1 104 1 319 1 106 4 173 1 246 4 150 1 320 1 24 2 176 1 199 2 63 4 200 1 30 2 153 4 
89 1 273 1 65 1 179 2 132 1 355 1 158 2 2 1 133 1 205 2 33 1 35 1 7 1 360 1 188 1 287 1 263 1 315 1 290 2 363 1 294 1 194 1 215 1 296 2 101 2 267 1 104 1 106 4 173 1 246 4 150 1 320 1 81 1 24 2 344 1 176 1 199 2 63 4 200 1 30 2 153 4 
89 1 273 1 65 1 132 1 355 1 158 2 2 1 116 2 278 1 232 2 133 1 205 2 72 1 50 1 33 1 35 1 7 1 360 1 188 1 287 1 263 1 315 1 290 3 240 2 363 1 294 1 194 1 215 1 104 1 319 1 173 1 246 4 106 5 320 1 150 1 24 3 176 1 199 3 63 4 200 1 30 2 153 5 
89 1 273 1 65 1 132 1 355 1 158 2 2 1 116 2 278 1 232 2 133 1 205 2 72 1 50 1 33 1 35 1 7 1 360 1 188 1 287 1 263 1 315 1 290 3 240 2 363 1 294 1 194 1 215 1 104 1 319 1 173 1 246 4 106 5 320 1 150 1 24 3 176 1 199 3 63 4 200 1 30 2 153 5 
273 1 89 1 179 2 132 1 2 1 133 1 7 1 188 1 287 1 290 2 294 1 194 1 101 2 296 2 104 1 246 4 106 4 150 1 24 2 199 2 63 4 30 2 200 1 153 4 65 1 355 1 158 2 205 2 33 1 360 1 263 1 315 1 363 1 215 1 267 1 173 1 320 1 129 1 176 1 
91 1 351 1 228 1 306 3 283 1 5 1 285 1 235 1 332 1 139 2 141 1 122 1 96 1 289 1 167 1 75 1 364 2 316 1 146 1 168 1 147 1 44 2 78 2 249 2 80 2 342 2 46 1 87 2 326 1 177 1 
92 1 115 1 68 1 358 1 5 1 234 1 235 1 52 1 208 1 260 1 39 1 287 1 121 1 142 1 315 1 191 1 167 1 364 3 146 1 168 1 148 1 149 1 44 2 173 1 372 1 46 1 131 1 326 1 177 2 
154 1 92 1 258 1 309 2 5 1 235 1 208 1 260 1 39 1 286 1 313 1 142 1 361 1 143 1 167 1 364 5 146 1 168 3 148 1 149 1 44 2 322 1 46 1 253 1 326 1 177 2 
31 3 92 11 115 1 70 1 309 1 358 2 283 1 51 1 5 2 234 2 235 2 208 1 260 2 39 2 334 1 237 1 142 11 96 1 167 2 364 14 212 1 98 1 146 1 168 8 148 1 149 4 44 4 372 1 223 3 46 2 175 1 326 2 177 6 
145 1 168 1 146 1 156 1 149 1 44 2 5 1 173 1 21 1 52 1 235 1 372 1 62 1 287 1 46 1 96 1 315 1 167 1 131 1 326 1 364 1 
91 2 227 1 226 2 92 7 279 2 283 1 5 3 234 2 52 1 235 3 286 1 139 2 287 3 142 7 238 1 96 1 143 1 242 1 146 3 13 2 294 1 147 1 14 2 148 5 59 2 149 7 21 1 249 1 342 2 154 2 115 2 156 1 258 1 70 1 306 2 309 3 204 2 358 2 310 1 260 5 208 6 39 7 313 2 315 1 167 3 364 28 168 14 44 6 173 3 78 2 80 1 372 1 322 2 46 3 373 2 83 2 131 1 87 1 326 3 177 14 
92 1 146 1 168 2 70 1 149 1 44 2 358 1 5 1 259 1 235 1 260 1 39 1 46 1 142 1 361 1 167 1 326 1 364 2 
92 1 146 1 115 1 148 1 149 1 44 2 5 1 235 1 208 1 39 1 46 1 142 1 361 1 255 1 167 1 326 1 364 2 177 2 
92 2 115 1 70 1 358 1 5 1 234 1 235 1 260 1 208 1 39 2 361 1 142 2 167 1 364 4 168 2 146 1 148 1 149 2 44 2 46 1 326 1 177 2 
92 1 146 1 168 2 70 1 149 1 44 2 358 1 5 1 259 1 235 1 260 1 39 1 46 1 122 1 142 1 167 1 326 1 364 2 
92 1 146 1 115 1 148 1 149 1 44 2 5 1 235 1 208 1 39 1 46 1 122 1 142 1 255 1 167 1 326 1 364 2 177 2 
92 2 115 1 70 1 358 1 5 1 234 1 235 1 260 1 208 1 39 2 122 1 142 2 167 1 364 4 168 2 146 1 148 1 149 2 44 2 46 1 326 1 177 2 
115 1 92 2 146 1 168 2 148 1 70 1 149 2 44 2 358 1 5 1 234 1 235 1 208 1 260 1 39 2 46 1 142 2 167 1 326 1 177 2 364 4 
91 1 226 1 306 1 279 1 309 1 204 1 283 1 5 1 235 1 139 1 287 1 96 1 167 1 364 2 242 1 168 1 146 1 294 1 147 1 14 1 44 2 78 1 173 1 249 1 80 1 342 1 46 1 87 1 326 1 177 1 
91 1 304 1 306 1 3 1 309 1 204 1 283 1 5 1 235 1 139 1 287 1 167 1 364 1 242 1 146 1 294 1 147 1 44 2 78 1 371 1 173 1 249 1 80 1 342 1 46 1 87 1 326 1 177 1 
92 2 115 1 70 1 358 1 5 1 234 1 235 1 260 1 208 1 39 2 142 2 167 1 364 4 168 2 146 1 148 1 149 2 44 2 372 1 46 1 326 1 177 2 
91 1 226 1 115 1 92 2 306 1 279 1 358 1 204 1 5 1 234 1 235 1 208 1 260 1 39 1 139 1 287 1 142 2 167 1 364 4 168 2 146 1 14 1 148 1 59 1 149 2 44 2 78 1 173 1 249 1 80 1 342 1 46 1 28 1 87 1 326 1 177 2 
115 1 92 1 68 1 70 1 358 1 5 1 311 1 234 1 235 1 52 1 260 1 39 1 287 1 142 1 315 1 191 1 167 1 364 3 146 1 168 2 148 1 149 1 44 2 173 1 372 1 46 1 131 1 326 1 177 1 
31 3 49 1 115 4 275 3 70 3 134 1 358 4 206 1 34 1 5 3 234 4 235 3 53 1 208 2 260 4 39 5 262 1 237 1 336 1 167 3 362 1 364 32 212 3 168 15 148 4 44 6 18 2 79 1 248 1 251 1 221 1 343 1 223 4 46 3 84 1 301 1 177 17 
31 3 49 2 115 3 275 4 70 3 134 1 358 4 206 1 34 1 5 4 234 4 235 4 53 1 208 3 260 4 39 6 262 1 237 1 336 1 167 4 362 1 364 33 212 3 168 17 148 3 44 8 18 2 79 1 248 1 251 1 221 1 343 1 223 4 46 4 84 1 301 1 177 16 
154 1 31 4 49 1 115 6 275 3 258 1 70 6 134 1 358 6 206 1 34 1 5 2 234 6 235 2 208 7 260 7 286 1 39 13 313 1 334 2 262 1 237 2 336 1 143 1 167 2 362 1 364 47 212 2 168 24 148 7 44 4 18 1 79 1 248 1 322 1 221 1 343 1 223 4 46 2 84 1 301 1 177 23 
31 1 115 3 275 2 70 3 358 3 34 1 5 2 234 3 235 2 8 1 53 1 208 3 260 3 39 6 237 1 336 2 167 2 362 1 364 19 212 1 168 9 148 3 44 4 18 1 79 1 343 1 223 2 46 2 301 1 177 10 
31 2 49 2 115 2 275 3 70 1 134 1 358 3 34 1 5 3 206 1 234 3 235 3 208 1 260 3 39 2 262 1 336 1 167 3 362 1 364 24 212 2 168 13 148 2 44 6 18 2 79 1 248 1 221 1 343 2 46 3 223 2 84 1 301 1 177 11 
247 1 136 1 114 1 163 1 330 1 159 1 172 1 102 1 160 1 19 1 
254 1 69 1 
247 1 151 1 174 1 163 1 330 1 172 1 160 1 281 1 19 1 
335 1 4 1 
353 1 252 1 152 1 
124 2 77 1 330 1 159 1 172 1 102 1 160 1 246 1 19 1 118 1 247 1 136 1 163 1 165 1 349 1 63 1 200 1 74 1 
124 2 77 1 330 1 159 1 172 1 102 1 160 1 246 1 19 1 118 1 247 1 136 1 163 1 165 1 349 1 63 1 200 1 74 1 
124 2 77 1 330 1 159 1 172 1 102 1 160 1 246 1 19 1 118 1 247 1 136 1 163 1 165 1 349 1 63 1 200 1 74 1 
353 1 335 1 4 1 
353 1 335 1 4 1 
252 1 152 1 
353 1 252 1 152 1 
245 1 190 1 
330 1 357 1 69 1 231 1 160 1 309 1 118 1 52 2 287 2 163 1 190 1 165 1 315 2 124 1 193 1 245 1 172 1 173 2 246 1 19 1 247 1 196 1 224 1 254 1 63 1 86 1 131 2 
93 1 306 1 283 1 5 1 36 1 235 1 332 2 139 1 287 2 141 1 96 1 315 2 123 1 167 1 364 2 146 1 168 1 43 1 44 2 78 1 173 2 249 2 127 1 80 2 372 1 342 1 46 1 87 2 326 1 88 1 177 1 
169 1 147 1 256 1 228 1 306 1 277 1 78 1 249 1 80 1 342 1 139 1 87 1 239 1 75 1 
178 2 202 1 169 1 256 1 306 1 20 1 78 1 298 1 297 1 321 1 249 1 250 1 80 1 236 1 207 1 40 1 140 1 87 1 
178 2 202 1 169 1 256 1 306 1 78 1 20 1 298 1 297 1 321 1 249 2 250 1 80 2 236 1 207 1 40 1 140 1 28 1 87 2 
178 2 202 1 169 1 15 1 306 1 20 1 78 1 297 1 321 1 249 1 250 1 80 1 236 1 207 1 40 1 140 1 87 1 
325 1 
65 1 274 1 194 1 107 1 320 1 7 1 360 1 188 1 176 1 200 1 
115 2 354 2 101 10 148 2 232 5 358 2 117 5 234 2 138 1 260 2 10 5 188 5 373 1 176 5 200 5 
194 1 63 1 200 1 30 1 246 1 106 1 
65 2 228 1 305 1 306 1 183 1 7 2 360 2 139 1 188 2 189 2 75 1 365 2 318 1 147 2 266 1 78 1 106 4 246 3 320 1 249 4 80 4 342 1 61 1 270 2 176 2 48 1 63 3 87 4 30 2 
107 1 188 1 274 1 194 1 253 1 176 1 200 1 
65 1 116 1 232 1 72 1 7 1 360 1 188 1 240 1 194 1 101 1 106 1 246 1 320 1 176 1 63 1 200 2 30 1 
91 1 366 1 65 1 147 1 230 1 306 2 78 1 185 1 359 1 320 1 7 1 249 1 80 1 342 1 360 1 139 2 87 1 
31 1 65 2 115 2 354 1 134 1 232 3 117 5 358 2 206 1 7 2 234 2 10 5 360 2 260 2 188 7 262 1 212 1 194 1 101 6 148 2 369 1 246 1 106 1 320 2 248 1 223 1 176 4 84 1 63 1 30 1 200 4 
154 1 65 1 354 2 50 1 186 1 7 1 52 1 138 1 360 1 260 2 188 2 287 1 313 1 238 1 315 1 191 1 241 1 294 1 148 1 217 1 173 1 246 1 320 1 322 1 197 1 176 2 63 1 131 1 
91 1 226 1 306 1 279 1 309 1 204 1 283 1 5 1 52 2 235 1 139 1 287 3 315 2 167 1 191 2 364 1 146 1 147 1 14 1 170 1 44 2 173 3 78 1 249 1 80 1 342 1 46 1 197 1 131 2 87 1 326 1 177 1 
65 1 354 1 232 2 117 2 7 1 360 1 10 2 188 2 286 1 189 1 365 1 194 2 101 4 320 1 176 2 200 4 
136 1 268 1 190 1 172 1 160 1 
328 1 172 1 160 1 
328 1 172 1 160 1 
328 1 172 1 160 1 
327 1 172 1 160 1 
327 1 172 1 160 1 
327 1 172 1 160 1 
172 1 160 1 
247 1 163 1 
31 1 154 1 258 1 5 1 235 1 260 1 208 1 286 1 39 1 313 1 262 1 143 1 167 1 364 7 212 1 168 4 148 1 44 2 322 1 223 1 46 1 301 1 177 3 
154 1 31 1 258 1 70 1 358 1 5 2 234 1 235 2 208 1 260 2 286 1 39 2 313 1 262 1 237 1 143 1 167 2 364 10 212 1 168 6 148 1 44 4 322 1 223 2 46 2 301 1 29 1 177 4 
31 1 49 1 115 2 70 1 134 1 358 2 5 3 206 1 234 2 235 3 260 2 208 1 39 2 262 1 167 3 364 13 212 1 168 6 148 2 44 6 248 1 223 1 46 3 84 1 301 1 29 1 177 7 
31 1 49 1 115 1 70 1 134 1 358 2 5 3 206 1 234 2 235 3 260 2 208 1 39 2 262 1 167 3 364 11 212 1 168 7 148 1 44 6 248 1 223 1 46 3 84 1 301 1 29 1 177 4 
31 1 154 1 258 1 5 1 235 1 260 1 208 1 286 1 39 1 313 1 262 1 143 1 167 1 364 7 212 1 168 4 148 1 44 2 322 1 223 1 46 1 301 1 177 3 
31 1 115 2 70 1 134 1 358 2 5 1 206 1 234 2 235 1 260 2 208 1 39 2 262 1 167 1 364 12 212 1 168 6 148 2 44 2 248 1 223 1 46 1 84 1 301 1 177 6 
31 1 49 2 115 1 70 1 134 1 358 2 5 4 206 1 234 2 235 4 260 2 208 1 39 2 262 1 167 4 364 12 212 1 168 7 148 1 44 8 248 1 223 1 46 4 84 1 301 1 29 1 177 5 
31 1 49 2 115 1 70 2 134 1 358 2 5 4 206 1 234 2 235 4 53 1 260 2 208 2 39 4 262 1 167 4 364 12 212 1 168 7 148 1 44 8 248 1 223 1 46 4 84 1 301 1 177 5 
154 1 168 3 148 1 258 2 70 3 322 3 208 3 260 1 39 6 313 3 143 1 177 4 364 7 
31 1 49 2 115 1 70 1 134 1 358 2 5 4 206 1 234 2 235 4 53 1 260 2 208 1 39 2 262 1 167 4 364 12 212 1 168 7 148 1 44 8 248 1 223 1 46 4 84 1 301 1 177 5 
154 1 168 5 148 2 70 2 44 2 5 1 235 1 322 2 208 3 260 2 39 5 46 1 313 2 238 1 167 1 301 1 364 10 177 5 
168 2 70 1 44 2 358 1 5 1 235 1 260 1 39 1 46 1 301 1 167 1 364 2 
115 1 168 2 148 1 70 1 44 2 358 1 5 1 234 1 235 1 208 1 260 1 39 2 46 1 301 1 167 1 177 2 364 4 
49 1 168 1 70 1 44 6 5 3 235 3 53 1 322 1 208 1 39 2 347 1 46 3 313 1 301 1 167 3 177 2 364 3 
154 2 90 1 31 3 49 2 115 3 258 1 70 5 358 3 135 1 5 5 234 3 235 5 53 1 260 5 208 6 286 1 39 11 313 3 237 1 143 1 167 5 12 1 364 33 212 1 168 16 148 5 44 10 322 3 347 1 223 4 46 5 301 1 29 1 177 17 
154 1 49 1 168 4 148 1 258 1 70 1 44 4 5 2 235 2 260 1 208 1 322 1 286 1 39 2 46 2 313 1 143 1 167 2 177 3 364 7 
154 1 168 3 148 1 258 1 322 1 208 1 260 1 286 1 39 1 313 1 253 1 143 1 177 2 364 5 
115 1 168 2 148 1 70 1 44 2 358 1 5 1 234 1 235 1 208 1 260 1 39 2 46 1 167 1 29 1 177 2 364 4 
31 1 212 1 115 1 168 3 148 1 70 1 358 1 234 1 208 1 260 1 39 2 223 2 237 1 177 4 364 7 
154 1 31 2 49 2 115 2 258 1 70 4 358 2 5 2 234 2 235 2 260 3 208 4 286 1 39 8 313 2 334 1 237 1 143 1 167 2 364 22 168 11 148 3 44 4 322 2 223 2 46 2 347 1 175 1 177 11 
223 1 364 1 177 1 
31 1 168 1 364 1 
168 3 115 1 148 1 70 1 44 2 358 1 5 1 234 1 235 1 260 1 208 2 39 3 46 1 373 1 167 1 29 1 177 3 364 6 
31 1 115 2 70 1 134 1 358 2 5 1 206 1 234 2 235 1 260 2 208 1 39 2 262 1 167 1 364 12 212 1 168 6 148 2 44 2 248 1 223 1 46 1 84 1 301 1 177 6 
154 1 168 3 148 1 70 1 260 1 322 1 208 1 39 2 313 1 364 6 177 3 
49 1 168 1 258 1 70 1 44 2 5 1 235 1 208 1 322 1 39 2 313 1 347 1 46 1 143 1 167 1 177 2 364 3 
273 1 6 1 287 1 264 1 315 1 309 1 173 1 
273 1 303 1 309 1 173 1 340 1 6 1 162 1 287 1 120 1 264 1 315 1 11 1 
91 1 351 1 316 1 147 1 228 1 306 3 78 2 285 1 249 2 80 2 342 2 139 2 289 1 28 1 87 2 75 1 
91 1 316 1 351 1 306 2 78 1 285 1 137 1 249 1 80 1 342 1 139 1 289 1 87 1 
178 1 147 1 306 1 78 1 297 1 249 1 80 1 40 1 140 1 87 1 
93 1 306 1 78 1 249 2 80 2 127 1 207 1 342 1 139 1 28 1 87 2 
91 1 64 1 351 1 316 1 147 1 228 1 306 4 282 1 78 3 285 1 249 2 80 3 127 1 342 3 139 4 289 1 28 1 75 1 87 3 
91 1 64 1 351 1 316 1 147 1 228 1 306 4 78 3 285 1 249 2 80 3 127 1 342 3 139 4 324 1 289 1 28 1 75 1 87 3 
249 1 80 1 342 1 139 1 147 1 228 1 253 1 306 1 75 1 87 1 78 1 
91 1 156 1 306 1 279 1 204 1 309 1 52 1 139 1 287 2 315 1 242 1 147 1 294 1 78 1 173 2 249 1 80 1 342 1 131 1 87 1 
91 2 229 1 156 1 306 1 279 1 309 1 204 1 52 2 139 3 287 2 263 1 315 2 166 1 242 1 294 2 215 1 78 1 173 2 249 1 80 1 342 2 270 1 131 1 87 1 
91 2 229 1 156 1 306 1 3 1 309 1 204 1 52 2 139 3 287 2 263 1 315 2 166 1 242 1 294 2 215 1 78 1 173 2 249 1 80 1 342 2 270 1 131 1 87 1 
91 1 229 1 132 1 306 1 182 1 186 1 52 1 38 1 139 4 287 1 315 1 191 1 166 1 241 1 366 1 294 1 194 1 217 1 173 1 78 1 106 1 246 2 22 1 249 1 80 1 342 1 197 1 270 1 131 1 63 2 87 1 200 1 
132 1 276 1 182 1 186 1 52 1 139 2 287 1 315 1 191 1 241 1 366 1 294 1 194 1 217 1 173 1 106 1 246 2 249 1 80 1 197 1 270 1 63 2 131 1 87 1 200 1 
306 1 78 1 249 1 80 1 111 1 87 1 
91 1 292 1 351 1 147 1 230 1 306 2 78 1 249 1 80 1 342 1 139 1 289 1 87 1 
154 1 91 1 226 1 92 1 156 1 258 1 306 1 279 1 309 2 204 1 5 2 235 2 52 1 260 1 208 2 286 1 39 2 139 1 313 1 287 2 142 1 143 1 315 1 123 1 167 2 364 6 168 3 146 2 14 1 148 1 59 1 149 1 44 4 78 1 173 2 249 1 372 1 80 1 322 1 342 1 46 2 83 1 28 1 131 1 326 2 87 1 177 3 
65 2 352 1 274 1 276 1 132 1 305 1 357 1 182 1 7 2 360 2 188 1 139 2 366 1 147 1 194 1 246 3 106 2 220 1 107 1 320 2 249 1 80 1 176 1 198 1 63 3 200 1 87 1 30 1 
91 1 230 1 306 2 182 1 359 1 78 1 249 1 80 1 342 1 139 2 55 1 111 1 87 1 
91 1 156 1 306 1 3 1 204 1 309 1 52 1 139 1 287 2 315 1 242 1 147 1 294 1 78 1 173 2 249 1 80 1 342 1 131 1 87 1 
91 1 292 1 351 1 230 1 306 2 78 1 249 1 80 1 342 1 139 1 270 1 289 1 87 1 
37 1 367 1 314 1 309 1 60 1 
294 1 367 2 194 1 215 1 132 1 157 1 357 1 103 1 309 1 60 1 246 2 37 2 150 1 341 1 261 1 314 2 263 1 63 2 200 1 
36 1 37 1 367 1 287 1 43 1 315 1 60 1 88 1 173 1 
341 1 103 1 60 1 
109 1 9 1 243 1 155 1 210 1 225 1 269 1 271 1 
339 1 350 1 32 1 243 1 155 4 71 1 17 1 109 2 9 4 209 1 210 2 225 1 271 2 338 2 
214 1 243 1 155 2 329 1 0 1 9 2 109 1 210 1 269 1 225 1 271 1 338 1 
350 1 339 2 243 1 155 3 295 1 71 2 9 3 109 1 210 1 269 1 225 1 271 1 
187 2 244 1 210 2 119 1 
9 1 243 1 155 1 125 1 225 1 269 1 
109 1 9 2 243 1 155 2 210 1 225 1 269 1 271 1 338 1 73 1 
94 1 
109 1 9 1 243 1 155 1 210 1 225 1 269 1 271 1 
109 1 253 1 210 1 271 1 
109 1 9 1 243 1 155 1 210 1 225 1 271 1 
113 1 155 1 1 1 
350 1 339 1 243 1 155 3 71 2 9 3 109 1 210 1 269 1 225 1 271 1 27 1 
109 1 9 2 243 1 155 2 210 1 225 1 271 1 308 1 338 1 
178 1 265 1 9 1 236 1 243 1 140 1 209 1 155 1 225 1 269 1 
9 1 243 1 155 1 210 1 225 1 269 1 271 1 
109 1 9 1 243 1 155 1 225 1 269 1 271 2 
112 1 243 2 155 2 9 2 345 1 210 1 269 1 225 2 271 1 272 1 
42 1 32 1 243 1 155 3 73 1 109 1 9 3 209 1 210 1 269 1 225 1 271 1 338 2 
178 2 243 1 155 2 108 1 109 1 9 2 250 1 236 1 40 1 140 1 210 1 269 1 225 1 271 1 338 1 
293 1 32 1 243 2 155 4 308 1 109 1 9 4 209 1 210 1 269 1 225 2 271 1 338 2 
109 1 9 3 243 1 155 3 210 1 225 1 269 1 271 1 71 1 338 1 73 1 
9 1 32 1 209 1 155 1 338 1 
210 1 271 1 

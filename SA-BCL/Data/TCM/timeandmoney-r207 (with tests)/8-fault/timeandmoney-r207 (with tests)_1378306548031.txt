#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) (204,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (204,249) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) (204,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (7,173,182,287) (7,173,182,287) (7,173,182,287) 197 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 20 260 242 113 290 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 20 260 242 113 290 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 20 260 242 113 290 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 20 260 242 113 290 140 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 20 260 242 113 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 197 1 182 1 287 1 
281 1 240 1 35 1 
152 2 35 1 75 1 
124 2 0 2 179 2 320 2 256 2 191 1 224 2 39 1 
116 2 77 1 0 2 247 1 198 1 44 1 165 1 121 1 293 1 46 1 207 1 169 1 124 3 126 1 300 1 256 3 53 1 306 1 179 2 64 2 181 1 224 2 313 1 66 1 185 1 277 1 186 2 234 1 149 1 106 1 320 2 108 1 191 1 155 1 284 2 160 2 39 1 
124 1 0 1 317 1 179 1 320 1 256 1 224 1 12 1 156 1 39 1 
0 1 264 1 221 1 41 1 183 1 124 1 317 1 301 1 256 1 240 1 35 1 327 1 326 1 261 1 
0 1 221 2 264 2 179 1 41 1 224 1 183 1 124 1 317 1 320 1 256 1 240 1 35 1 327 1 326 1 
221 1 264 1 196 1 43 1 29 1 
221 2 264 2 268 1 196 1 43 1 11 1 240 1 35 1 
221 1 264 1 43 1 
0 1 264 1 221 1 179 1 196 1 224 1 124 1 317 1 320 1 256 1 32 1 12 1 156 1 39 1 
35 1 
221 2 264 2 268 1 196 1 43 1 112 1 240 1 35 1 
264 5 221 5 268 1 288 1 196 2 43 2 184 2 227 1 88 1 168 2 6 1 296 1 298 1 71 1 211 2 240 1 35 1 194 1 15 1 
281 1 191 1 
0 2 179 1 224 1 124 2 320 1 256 2 258 1 191 2 246 1 
190 1 114 1 315 1 
198 1 121 1 313 1 185 1 46 1 186 1 149 1 124 1 106 1 9 1 256 1 53 1 191 1 284 1 155 1 160 1 
0 1 198 1 120 1 121 1 224 1 313 1 185 1 46 1 186 1 149 1 124 2 106 1 320 1 50 1 256 2 53 1 190 1 155 1 284 1 160 1 
124 3 0 3 179 1 320 3 50 1 256 3 191 1 224 3 
124 1 0 1 317 1 320 1 256 1 224 1 12 1 
124 1 0 1 317 1 179 1 320 1 256 1 224 1 258 1 246 1 
116 2 77 1 0 3 247 1 41 1 198 1 44 1 120 1 165 1 121 1 46 1 207 1 169 1 124 4 172 1 256 4 50 1 53 1 258 1 264 1 221 1 179 2 64 1 181 1 224 3 183 1 313 1 66 1 185 1 277 1 186 1 149 1 106 1 317 1 320 3 108 1 191 1 155 1 284 1 327 1 326 1 160 1 329 1 39 1 
124 2 0 2 320 1 256 2 50 1 191 1 224 1 232 1 261 1 
0 3 221 1 264 1 179 1 41 1 120 1 224 3 183 1 252 1 124 3 317 1 320 3 50 2 256 3 258 1 35 1 327 1 326 1 329 1 
0 2 179 1 224 2 124 2 320 2 50 1 256 2 258 1 190 1 114 1 
198 1 121 1 313 1 46 1 185 1 186 1 149 1 124 1 106 1 256 1 53 1 191 1 284 1 155 1 160 1 
272 1 121 1 46 1 185 1 186 1 149 1 124 1 106 1 69 1 256 1 53 1 191 1 284 1 155 1 160 1 
116 2 77 1 247 1 44 1 199 1 165 1 294 1 212 1 257 1 213 1 97 1 20 1 64 4 145 1 312 1 66 2 277 1 315 2 234 2 235 1 322 1 108 1 190 2 114 2 
124 1 0 1 317 1 320 1 321 1 256 1 224 1 326 1 
0 5 179 1 120 1 224 4 232 1 48 1 124 5 320 4 50 2 256 5 239 1 258 1 191 1 261 1 
124 2 0 2 317 1 320 2 321 1 256 2 224 2 12 1 
130 1 94 1 
130 1 94 1 
153 1 223 1 
153 1 223 1 
153 1 223 1 
130 1 251 1 94 1 
130 1 251 1 94 1 
130 1 226 1 94 1 
95 1 153 1 223 1 130 2 5 1 94 2 
130 1 251 1 94 1 
130 1 94 1 67 1 
130 1 94 1 67 1 
130 1 94 1 67 1 
310 1 264 2 221 2 222 2 139 2 21 1 118 2 4 2 102 1 5 1 84 1 10 1 130 2 35 1 94 2 158 2 286 1 309 1 161 3 
0 2 118 1 4 1 124 2 125 1 128 1 130 1 256 2 94 1 221 1 264 1 138 1 222 1 62 1 22 1 224 2 102 1 226 1 276 1 320 2 191 1 285 1 158 1 161 1 
99 1 109 1 76 1 
99 1 109 1 14 1 
253 1 99 3 24 1 45 1 14 1 76 2 
253 1 63 1 99 2 24 1 14 1 76 1 
253 1 99 2 24 2 14 1 76 1 
196 4 43 1 203 1 168 1 88 3 131 1 211 1 212 1 213 1 260 1 218 1 15 2 263 2 138 1 221 5 264 5 20 1 267 1 268 1 62 1 22 1 145 1 65 1 184 1 314 2 152 3 240 1 193 2 192 1 35 2 194 1 75 1 
196 7 43 6 203 2 168 2 88 8 296 1 208 1 8 1 303 1 131 2 211 2 212 3 213 3 260 3 177 1 15 6 221 9 264 9 20 3 268 1 62 4 145 3 65 1 184 2 314 6 29 5 152 9 70 5 110 1 33 1 240 1 193 6 35 5 194 1 75 3 
196 2 203 1 168 1 88 3 296 1 131 1 211 1 212 1 213 1 260 1 15 2 263 1 221 3 264 3 267 1 20 1 62 1 145 1 184 1 314 2 152 4 240 1 35 3 192 1 193 2 75 2 
196 3 203 1 168 1 88 5 296 1 208 1 303 1 131 1 211 1 212 2 213 2 260 2 15 4 263 2 221 4 264 4 267 1 20 2 62 2 145 2 184 1 314 4 152 7 110 1 240 1 35 4 193 4 192 1 75 3 
281 1 92 1 185 1 
185 1 187 1 
307 1 
155 1 185 1 
17 1 210 1 53 1 155 1 92 2 185 3 
53 1 155 1 185 1 
214 1 185 1 
16 1 97 2 141 1 64 7 81 1 145 1 3 1 292 1 294 3 66 3 87 2 233 1 234 4 31 1 212 1 90 1 308 1 
16 1 97 2 141 1 64 7 81 1 145 1 3 1 292 1 294 3 66 3 87 2 233 1 234 4 31 1 212 1 90 1 308 1 
16 1 97 2 141 1 64 7 81 1 145 1 3 1 292 1 294 3 225 1 66 3 87 2 233 1 234 4 31 1 212 1 90 1 308 1 
116 2 77 1 195 3 2 1 247 1 81 1 44 1 3 2 292 2 294 10 206 1 87 3 171 1 212 4 90 1 213 3 260 3 308 1 16 5 220 1 18 4 20 3 97 5 141 2 64 31 145 4 66 15 233 2 150 1 234 16 68 1 108 1 31 1 162 1 
116 4 77 2 247 2 81 1 44 2 3 1 292 1 294 4 87 2 212 1 308 1 16 1 97 3 141 1 64 9 145 1 66 4 233 1 279 1 234 5 151 1 108 2 31 1 162 1 
7 1 178 1 197 1 182 1 287 1 
7 1 178 1 182 1 204 1 287 1 
7 1 178 1 173 1 249 1 
7 1 178 1 182 1 204 1 287 1 
7 1 178 1 197 1 182 1 287 1 
217 1 
0 1 78 1 85 1 86 1 88 2 168 1 256 1 174 1 13 2 261 1 15 2 262 1 96 2 264 5 268 3 266 1 184 1 183 1 185 1 186 2 278 1 106 1 282 1 284 2 35 2 38 2 194 1 117 2 41 1 43 6 200 1 202 1 46 1 124 1 299 1 301 1 131 1 304 2 211 1 51 1 54 1 215 1 221 5 311 4 149 2 317 1 318 2 152 2 238 2 155 1 240 1 327 1 326 1 160 2 75 2 
262 1 0 1 96 1 264 3 221 3 268 1 311 2 266 1 41 1 43 2 85 1 183 1 86 1 124 1 317 1 301 1 256 1 51 1 112 1 326 1 327 1 261 1 
262 1 0 1 264 3 221 3 268 1 311 3 266 1 41 1 43 1 85 1 183 1 86 1 124 1 317 1 238 1 301 1 256 1 51 1 112 1 240 1 35 1 326 1 327 1 261 1 
0 1 41 1 43 2 85 1 86 1 124 1 301 1 256 1 51 1 304 1 261 1 262 1 221 3 264 3 96 1 268 1 266 1 311 3 183 1 317 1 238 1 112 1 240 1 327 1 326 1 35 1 
0 1 85 1 86 1 168 1 88 1 256 1 174 1 13 2 261 1 15 1 262 1 96 4 264 5 265 1 268 3 266 1 183 1 184 1 112 1 35 5 194 1 38 2 289 1 117 2 41 1 43 7 124 1 297 1 301 1 304 4 51 1 211 1 215 1 221 5 311 6 317 1 318 2 238 4 240 5 326 1 327 1 243 1 157 1 75 2 
0 1 117 2 41 1 43 4 200 1 85 1 86 1 88 1 168 1 124 1 301 1 256 1 304 2 51 1 211 1 174 1 13 2 215 1 261 1 15 1 262 1 96 2 221 4 264 4 268 2 266 1 311 4 184 1 183 1 317 1 318 2 152 2 238 2 240 1 35 2 327 1 326 1 38 2 194 1 75 2 
0 1 117 2 289 1 41 1 43 4 85 1 86 1 88 1 168 1 124 1 297 1 301 1 256 1 304 2 51 1 211 1 174 1 13 2 215 1 261 1 15 1 262 1 96 2 221 4 264 4 268 2 266 1 311 4 184 1 183 1 317 1 318 2 238 2 240 1 35 1 327 1 326 1 157 1 38 2 194 1 75 2 
0 1 117 2 289 1 41 1 43 4 85 1 86 1 88 1 168 1 124 1 297 1 301 1 256 1 304 2 51 1 211 1 174 1 13 2 215 1 261 1 15 1 262 1 96 2 221 4 264 4 268 2 266 1 311 4 184 1 183 1 317 1 318 2 238 2 240 1 35 1 327 1 326 1 157 1 38 2 194 1 75 2 
0 1 289 1 41 1 43 4 85 1 122 2 86 1 88 1 168 1 124 1 301 1 256 1 304 2 51 1 211 1 174 1 259 1 13 2 261 1 15 1 262 1 96 2 221 4 264 4 268 2 266 1 311 4 184 1 183 1 147 1 317 1 318 2 152 2 238 2 240 1 35 1 327 1 326 1 328 1 194 1 115 2 
0 1 117 2 289 1 41 1 43 5 85 1 86 1 88 1 168 1 124 1 297 1 301 1 256 1 211 1 51 1 304 3 174 1 13 2 215 1 261 1 15 1 262 1 221 4 264 4 265 1 96 3 268 2 266 1 311 5 184 1 183 1 317 1 318 2 238 3 240 1 35 1 327 1 326 1 157 1 38 2 194 1 75 2 
0 1 117 2 289 1 41 1 43 5 85 1 86 1 88 1 168 1 124 1 297 1 301 1 256 1 211 1 51 1 304 3 174 1 13 2 215 1 261 1 15 1 262 1 221 4 264 4 265 1 96 3 268 2 266 1 311 5 184 1 183 1 317 1 318 2 238 3 240 1 35 1 327 1 326 1 157 1 38 2 194 1 75 2 
0 1 41 1 43 4 200 1 85 1 122 2 86 1 88 1 168 1 124 1 301 1 256 1 304 2 51 1 211 1 174 1 13 2 261 1 15 1 262 1 96 2 221 4 264 4 268 2 266 1 311 4 184 1 183 1 317 1 318 2 152 2 238 2 240 1 35 1 327 1 326 1 328 1 194 1 115 2 
116 2 77 1 247 1 81 1 44 1 199 1 165 1 292 1 294 2 87 1 212 1 308 1 97 2 141 1 64 6 145 1 66 3 277 1 315 1 234 3 281 1 108 1 31 1 190 1 191 2 114 1 
116 4 77 2 195 3 2 1 247 2 291 1 44 2 165 2 293 1 166 1 294 2 206 2 207 1 123 1 212 3 57 1 213 1 260 3 16 1 18 4 97 1 20 3 64 17 145 1 66 7 277 1 315 13 234 10 108 2 191 1 190 13 74 1 114 4 
77 1 0 1 116 2 247 1 198 1 44 1 120 1 83 1 121 1 165 1 293 1 46 1 207 1 124 2 9 1 89 1 256 2 50 1 53 1 64 2 224 1 313 1 185 1 66 1 186 1 277 1 149 1 234 1 106 1 236 1 320 1 108 1 191 1 155 1 284 1 74 1 160 1 114 1 
0 1 77 3 247 3 163 1 81 1 165 3 87 1 169 2 256 3 260 2 16 4 98 1 97 4 20 2 274 1 27 2 185 2 186 3 277 3 106 2 108 3 31 1 191 2 284 3 190 7 37 2 114 7 116 6 198 2 120 1 44 3 292 1 121 2 293 1 294 8 46 2 207 1 124 3 127 2 50 1 53 2 212 3 56 1 213 2 308 1 141 1 64 20 145 3 224 1 313 2 228 2 66 10 315 7 149 1 234 10 320 1 155 2 74 1 160 3 
0 1 116 4 77 2 78 1 247 2 164 1 199 1 44 2 165 2 293 1 202 1 46 2 207 1 124 1 126 2 256 1 50 1 134 1 64 2 274 1 101 1 224 1 229 1 185 3 66 1 231 1 186 8 277 2 148 1 28 1 104 1 149 2 234 1 106 2 320 1 108 2 284 7 155 2 160 8 
116 2 77 1 0 1 247 1 44 1 165 1 294 1 47 1 124 1 256 1 258 1 212 1 213 1 260 1 97 1 179 1 20 1 64 3 145 1 224 1 66 2 277 1 315 1 234 1 320 1 108 1 190 1 74 1 114 1 
16 1 77 1 116 2 20 1 247 1 64 2 199 1 44 1 165 1 294 1 277 1 315 1 234 2 235 1 108 1 190 1 212 1 114 1 
77 1 116 2 97 1 247 1 64 2 199 1 44 1 145 1 165 1 294 1 312 1 66 2 277 1 315 1 108 1 190 1 213 1 114 1 
16 1 77 1 116 2 97 1 20 1 247 1 64 4 145 1 199 1 44 1 165 1 294 2 66 2 277 1 315 2 234 2 108 1 190 2 212 1 213 1 260 1 114 2 
16 1 77 1 116 2 20 1 247 1 64 2 44 1 165 1 294 1 277 1 315 1 28 1 234 2 235 1 108 1 190 1 212 1 114 1 
77 1 116 2 97 1 247 1 64 2 44 1 145 1 165 1 294 1 312 1 66 2 277 1 315 1 28 1 108 1 190 1 213 1 114 1 
16 1 77 1 116 2 97 1 20 1 247 1 64 4 145 1 44 1 165 1 294 2 66 2 277 1 315 2 28 1 234 2 108 1 190 2 212 1 213 1 260 1 114 2 
16 1 77 1 116 2 97 1 20 1 247 1 64 4 145 1 44 1 165 1 294 2 66 2 277 1 315 2 234 2 108 1 190 2 212 1 213 1 260 1 114 2 
77 1 116 2 247 1 198 1 44 1 121 1 165 1 293 1 46 1 169 1 207 1 124 1 256 1 53 1 64 2 313 1 185 1 66 1 186 1 277 1 234 1 149 1 106 1 108 1 191 1 155 1 284 1 160 1 
77 1 116 2 247 1 64 1 44 1 165 1 66 1 186 1 277 1 207 1 149 1 317 1 30 1 108 1 191 1 284 1 160 1 330 1 
16 1 77 1 116 2 97 1 20 1 247 1 64 4 145 1 44 1 165 1 294 2 66 2 277 1 315 2 234 2 108 1 190 2 212 1 213 1 260 1 74 1 114 2 
77 1 116 2 247 1 198 1 44 1 121 1 165 1 294 2 46 1 169 1 124 1 127 1 256 1 53 1 212 1 213 1 260 1 16 1 97 1 20 1 64 4 145 1 101 1 313 1 66 2 185 1 186 1 277 1 315 2 234 2 106 1 108 1 190 2 284 1 155 1 160 1 114 2 
116 2 77 1 0 1 247 1 44 1 165 1 294 1 124 1 256 1 258 1 212 1 213 1 305 1 260 1 16 1 179 1 20 1 64 3 145 1 224 1 66 1 277 1 315 1 234 2 320 1 108 1 190 1 74 1 114 1 
116 4 77 2 195 1 2 1 40 1 247 2 290 1 44 2 294 6 206 1 129 1 212 3 213 3 260 3 216 1 16 3 18 2 97 3 20 3 180 1 269 2 140 1 64 19 145 3 103 1 66 10 279 1 234 9 105 2 108 2 
77 1 116 2 195 2 18 2 20 1 2 2 40 2 247 1 140 1 290 2 64 11 44 1 275 1 66 5 234 6 279 1 105 2 129 1 108 1 212 1 113 1 260 1 242 1 
116 4 77 2 195 3 2 3 40 2 247 2 290 1 44 2 294 3 206 2 129 1 212 4 213 2 260 4 59 1 16 2 18 5 97 1 20 4 269 1 180 1 140 1 64 27 145 2 103 1 275 1 66 13 279 1 234 14 105 3 108 2 113 1 242 1 
116 4 77 2 195 3 2 3 40 2 247 2 290 1 44 2 294 5 206 2 129 1 212 4 213 3 260 4 59 1 16 2 18 5 97 3 20 4 269 1 180 1 140 1 64 29 145 3 103 1 275 1 66 15 279 1 234 14 105 3 108 2 113 1 242 1 
116 2 77 1 195 4 2 2 40 1 247 1 290 1 81 1 44 1 292 1 166 2 294 9 87 1 206 2 129 1 212 6 213 4 260 5 308 1 16 4 18 4 97 5 20 5 141 1 140 1 64 36 145 5 275 1 66 17 279 1 234 19 105 2 108 1 31 1 113 1 242 1 
222 1 21 1 118 1 130 1 154 1 4 1 5 1 158 1 94 1 286 1 
226 1 276 1 
270 1 222 1 118 1 302 1 130 1 4 1 245 1 158 1 94 1 
310 1 264 1 221 1 222 1 139 1 21 1 118 1 4 1 102 1 5 1 84 1 130 1 35 1 94 1 158 1 286 1 309 1 161 2 
310 1 264 1 221 1 222 1 139 1 21 1 118 1 4 1 102 1 5 1 84 1 130 1 35 1 94 1 158 1 286 1 309 1 161 2 
310 1 264 1 221 1 222 1 139 1 21 1 118 1 4 1 102 1 5 1 84 1 130 1 35 1 94 1 158 1 286 1 309 1 161 2 
95 1 251 1 146 1 
95 1 251 1 146 1 
159 1 67 1 
95 1 159 1 67 1 
125 1 285 1 
0 2 119 1 196 1 118 1 4 1 84 1 124 2 125 1 128 1 130 1 256 2 94 1 221 1 264 1 138 1 139 1 222 1 62 1 22 1 224 2 226 1 276 1 320 2 191 1 285 1 158 1 161 1 
251 1 146 1 
95 1 159 1 67 1 
77 1 0 2 116 2 79 1 247 1 82 1 164 1 44 1 165 1 293 1 46 1 207 1 124 2 126 2 256 2 19 1 271 1 64 2 229 1 185 1 66 1 186 2 277 1 234 1 106 1 108 1 155 1 284 2 325 1 74 1 160 2 
136 1 248 1 99 2 42 1 143 1 274 1 101 1 45 1 46 1 186 2 316 1 106 1 280 1 109 1 284 2 14 1 160 2 76 1 135 1 
136 1 248 1 99 2 143 1 274 1 45 1 46 1 186 1 316 1 106 1 254 1 109 1 284 1 14 1 160 1 76 1 135 1 
78 1 42 1 143 1 202 1 46 1 185 1 186 1 149 1 106 1 155 1 284 1 91 1 93 1 160 1 
136 1 248 1 99 2 42 1 143 1 274 1 45 1 46 1 186 1 316 1 106 1 280 1 109 1 284 1 14 1 160 1 76 1 135 1 
273 1 
281 1 240 1 227 1 35 1 88 1 6 1 15 1 
117 1 43 1 88 1 168 1 211 1 215 1 15 1 264 1 221 1 268 1 184 1 152 1 240 1 35 2 194 1 38 1 75 1 
43 1 46 2 168 2 88 4 49 1 255 1 131 1 211 2 53 1 212 1 55 1 213 1 260 1 15 3 221 1 264 1 17 1 20 1 268 1 145 1 184 2 228 1 314 3 230 1 185 3 186 1 187 2 149 1 106 1 152 6 319 1 324 1 189 1 284 1 155 1 34 1 35 3 193 3 160 1 194 2 75 3 
195 1 2 1 88 6 168 1 211 1 212 2 213 2 260 2 15 4 18 1 61 1 20 2 145 2 184 1 275 1 314 4 152 2 113 1 193 4 35 1 242 1 36 1 194 1 75 1 
0 1 1 1 292 1 168 1 88 2 124 1 256 1 211 1 212 2 12 1 58 1 308 1 15 2 221 1 264 1 179 1 141 1 145 1 224 1 184 1 317 1 320 1 324 2 32 1 156 1 157 1 194 1 39 1 
184 1 227 1 168 1 88 1 6 1 211 1 240 1 35 1 194 1 15 1 
1 1 20 2 145 2 228 1 314 5 88 5 152 10 324 2 212 2 213 2 260 2 193 5 35 5 15 5 75 5 
221 1 264 1 268 1 43 1 240 1 35 1 
78 1 43 4 201 1 202 1 46 3 168 2 88 2 296 1 170 1 299 1 131 2 53 1 211 2 54 1 175 1 15 2 137 2 264 3 221 3 268 2 25 1 26 1 184 2 185 2 186 4 149 2 106 2 72 1 282 2 155 2 284 4 73 1 160 4 194 1 
116 2 0 2 77 1 247 1 198 1 44 1 121 1 165 1 46 1 207 1 169 1 124 3 256 3 53 1 179 2 64 1 181 1 224 2 313 1 66 1 185 1 186 1 277 1 149 1 106 1 320 2 108 1 191 1 284 1 155 1 160 1 39 1 
184 1 314 2 87 1 168 1 88 1 152 4 131 1 211 1 282 1 240 2 193 2 35 4 194 1 75 2 15 2 
237 1 222 1 158 1 
237 1 222 1 158 1 
209 1 125 1 222 1 21 1 158 1 
237 1 222 1 158 1 
222 1 158 1 188 1 
222 1 158 1 188 1 
222 1 158 1 188 1 
222 1 158 1 
130 1 94 1 
16 1 77 2 116 4 97 2 247 2 141 1 64 8 81 1 145 1 44 2 292 1 294 3 66 4 87 1 234 4 108 2 31 1 212 1 308 1 162 1 
97 2 141 1 64 6 281 1 81 1 145 1 31 1 212 1 292 1 294 2 66 3 87 1 308 1 234 3 
77 1 116 2 16 1 97 1 20 1 247 1 64 4 145 1 44 1 294 2 66 2 234 2 108 1 212 1 213 1 133 1 260 1 
16 1 18 2 195 1 97 1 2 1 20 1 64 7 145 1 294 2 66 4 206 1 234 3 212 1 213 1 260 1 
77 2 116 4 195 2 247 2 81 1 44 2 292 2 294 9 166 1 87 1 206 1 123 1 212 3 213 2 260 2 308 1 16 4 18 2 20 2 97 5 141 2 64 23 145 3 66 12 234 11 108 2 31 1 241 1 162 2 
18 1 64 1 66 1 
195 1 64 1 234 1 
116 2 77 1 16 1 20 1 97 2 247 1 64 6 44 1 145 1 294 3 228 1 66 3 234 3 108 1 212 1 213 1 133 1 260 1 
77 1 116 2 18 1 195 1 20 1 2 1 247 1 64 5 44 1 275 1 66 2 234 3 279 1 108 1 212 1 113 1 260 1 242 1 
16 1 97 1 141 1 64 6 145 1 292 1 294 2 66 3 234 3 212 1 308 1 
16 1 77 1 116 2 97 1 141 1 247 1 64 3 81 1 44 1 292 1 294 2 66 2 234 1 108 1 31 1 241 1 162 1 
116 2 77 1 16 2 97 3 247 1 141 2 64 10 44 1 145 2 292 2 294 5 66 5 279 1 234 5 108 1 212 2 58 1 308 1 
77 1 116 2 16 1 20 1 247 1 64 2 44 1 294 1 279 1 234 2 108 1 212 1 
77 1 116 2 16 1 97 1 20 1 247 1 64 4 145 1 44 1 294 2 66 2 279 1 234 2 108 1 212 1 213 1 260 1 
77 3 116 6 16 1 97 1 247 3 141 1 64 3 44 3 292 1 103 1 294 2 66 2 279 1 234 1 108 3 241 1 162 1 
116 10 77 5 195 3 2 1 247 5 81 1 44 5 292 3 294 12 87 1 206 1 171 1 212 5 213 3 133 1 260 3 308 2 220 1 16 5 18 4 20 3 97 7 141 3 64 34 145 5 103 1 66 18 150 1 279 1 234 16 108 5 31 1 241 1 162 2 
116 2 77 1 195 1 2 1 247 1 81 1 44 1 292 1 294 2 87 1 206 1 212 2 260 1 308 1 18 2 97 2 20 1 141 1 64 11 145 1 66 5 279 1 234 6 108 1 31 1 113 1 
116 4 77 2 195 1 2 1 247 2 81 1 44 2 292 1 294 3 87 1 206 1 212 2 133 1 260 1 308 1 16 1 18 2 97 2 20 1 141 1 64 11 145 1 66 5 279 1 234 6 108 2 31 1 113 1 
77 1 116 2 18 1 195 1 20 1 2 1 247 1 64 5 44 1 275 1 66 2 234 3 279 1 108 1 212 1 113 1 260 1 242 1 
77 1 116 2 18 1 195 1 20 1 2 1 247 1 64 5 44 1 275 1 66 2 234 3 279 1 108 1 212 1 113 1 260 1 242 1 
116 2 77 1 195 1 2 1 247 1 81 1 44 1 292 1 294 2 87 1 206 1 212 2 260 1 308 1 18 2 97 2 20 1 141 1 64 11 145 1 66 5 279 1 234 6 108 1 31 1 113 1 
77 1 116 2 18 1 195 1 20 1 2 1 247 1 64 5 44 1 275 1 66 2 234 3 279 1 108 1 212 1 113 1 260 1 242 1 
77 2 116 4 195 1 18 1 20 1 2 1 247 2 64 5 44 2 275 1 66 2 234 3 279 1 108 2 212 1 113 1 260 1 242 1 133 1 
77 2 116 4 195 1 18 1 20 1 2 1 247 2 64 5 44 2 275 1 103 1 66 2 234 3 279 1 108 2 212 1 113 1 260 1 242 1 
16 3 97 3 141 3 64 7 81 1 145 1 292 3 294 6 66 4 234 3 31 2 212 1 308 1 
77 2 116 4 195 1 18 1 20 1 2 1 247 2 64 5 44 2 275 1 103 1 66 2 234 3 279 1 108 2 212 1 113 1 260 1 242 1 
124 1 0 1 256 1 191 1 205 1 232 1 261 1 
0 1 60 1 250 1 205 1 295 1 232 1 124 1 256 1 191 1 283 1 244 1 261 1 
106 1 78 1 281 1 155 1 284 1 202 1 46 1 185 1 160 1 186 1 149 1 
0 1 198 1 121 1 224 1 185 1 46 1 186 1 149 1 124 2 106 1 320 1 50 1 256 2 53 1 191 1 155 1 284 1 160 1 
0 2 198 1 121 1 167 1 46 1 124 2 256 2 50 1 53 2 214 1 137 1 224 2 183 1 185 3 186 1 106 1 317 1 320 1 191 1 284 1 155 2 326 1 160 1 
0 2 121 1 167 1 46 1 124 2 256 2 50 1 53 2 214 1 137 1 144 1 272 1 224 2 183 1 185 3 186 2 106 1 317 1 320 1 191 1 284 2 155 2 326 1 160 2 
0 1 124 1 256 1 12 1 176 1 137 1 221 1 264 1 179 1 224 1 185 1 187 1 186 1 317 1 320 1 32 1 284 1 240 1 35 1 156 1 160 1 39 1 
0 1 124 1 256 1 12 1 137 1 221 1 264 1 179 1 224 1 185 1 187 1 186 1 317 1 320 1 32 1 284 1 34 1 240 1 35 1 156 1 160 1 39 1 
106 1 284 1 46 1 160 1 186 1 231 1 
17 1 23 1 164 1 274 1 101 1 25 1 185 3 46 3 231 1 186 7 148 1 104 1 149 2 126 1 106 2 72 1 53 1 284 6 155 2 160 7 134 1 
77 2 0 1 116 4 247 2 198 1 81 1 44 2 292 1 121 1 165 2 294 2 46 1 87 1 169 1 124 2 127 1 256 2 50 1 53 1 212 1 308 1 97 2 141 1 64 6 145 1 224 1 101 1 27 1 313 1 66 3 185 1 277 2 186 1 315 1 234 3 106 1 320 1 108 2 31 1 190 1 191 2 155 1 284 1 325 1 74 1 160 1 114 1 
0 1 1 1 168 2 88 4 6 1 255 1 256 1 175 1 12 1 15 5 264 2 268 1 179 1 184 2 185 1 187 1 186 1 32 1 284 1 34 1 35 2 194 2 39 1 196 1 43 1 292 1 124 1 49 1 211 2 212 2 58 1 308 1 221 2 141 1 145 2 224 1 227 1 230 1 149 1 317 1 320 1 324 2 240 2 156 1 160 1 
17 1 101 1 185 2 46 2 231 1 186 2 106 1 189 1 53 1 284 2 155 1 92 1 160 2 
78 1 144 1 101 1 202 1 46 1 185 1 186 4 149 1 106 1 132 1 284 4 155 1 160 4 
137 1 201 1 25 1 26 1 185 1 46 2 186 2 106 1 72 1 53 1 284 2 155 1 56 1 160 2 
106 1 248 1 99 1 109 1 284 1 14 1 46 1 160 1 186 1 149 1 
106 1 82 1 164 1 155 1 274 1 284 2 101 1 46 1 185 1 160 2 186 2 
137 1 78 1 164 1 101 1 202 1 185 3 46 2 186 5 148 1 149 1 104 1 106 2 132 1 284 4 155 2 160 5 
137 1 78 1 80 1 164 1 101 1 202 1 185 3 46 2 186 5 149 1 104 1 106 2 132 1 284 4 155 2 160 5 
0 1 272 1 121 1 224 1 185 1 46 1 186 1 149 1 124 2 106 1 320 1 50 1 256 2 53 1 191 1 155 1 284 1 160 1 
137 1 17 1 23 1 25 1 185 1 46 2 186 1 106 1 72 1 53 1 284 1 155 1 160 1 
124 1 0 1 19 1 79 1 107 1 271 1 323 1 256 1 100 1 
100 1 111 1 52 1 
107 1 323 1 100 1 191 1 219 1 
264 2 221 2 41 1 196 1 142 1 100 1 183 1 317 1 107 2 323 2 52 1 111 1 191 1 240 1 35 1 326 1 327 1 219 2 329 1 

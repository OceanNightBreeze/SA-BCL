#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) 199 144 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) 199 314 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (80,287) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 182 285 169 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 182 285 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) (3,177,264) 234 230 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 81 117 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (80,287) (80,287) 168 (302,319) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (80,287) (80,287) 168 (201,283) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (80,287) (80,287) (3,177,264) 199 269 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 139 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 2 91 1 132 1 1 1 305 2 179 5 5 1 49 1 226 1 56 1 196 1 241 9 198 1 324 1 244 1 15 2 65 3 205 2 245 1 118 9 208 1 330 1 21 1 210 4 75 2 126 2 29 2 129 6 
38 2 91 1 132 1 1 1 305 2 179 5 5 1 49 1 226 1 56 1 196 1 241 9 198 1 324 1 244 1 15 2 65 3 205 2 245 1 118 9 208 1 330 1 21 1 210 4 75 2 126 2 29 2 129 6 
38 2 91 1 132 1 1 1 305 2 179 6 5 1 49 1 226 1 56 1 196 1 241 10 198 1 324 1 244 1 15 2 65 4 205 2 245 1 118 10 208 1 330 1 21 1 210 5 75 2 126 2 29 2 129 7 
38 2 91 1 132 1 1 1 305 2 179 4 5 1 49 1 226 1 56 1 196 1 241 7 198 1 244 1 15 2 65 2 205 2 245 1 118 7 208 1 330 1 21 1 210 3 75 2 126 2 29 1 129 4 
38 1 132 1 198 1 324 1 65 1 1 1 305 1 179 3 205 1 118 4 208 1 49 1 210 2 75 1 126 1 29 2 129 3 241 4 
38 1 244 1 15 1 1 1 179 1 305 1 205 1 118 2 208 1 226 1 49 1 126 1 235 1 149 1 241 2 338 1 
15 1 65 1 1 1 179 2 205 2 245 1 118 3 208 1 49 1 210 1 126 2 129 1 241 3 
38 1 132 1 91 1 198 1 324 1 15 1 65 3 1 1 305 1 179 5 205 2 245 1 118 9 208 1 330 1 249 1 49 1 210 4 75 1 126 2 29 2 290 1 129 7 241 9 
38 1 132 1 91 1 198 1 324 1 15 1 65 3 1 1 305 1 179 5 205 2 245 1 118 9 208 1 330 1 249 1 49 1 210 4 75 1 126 2 29 2 290 1 129 7 241 9 
139 1 
124 1 242 2 28 1 
74 2 0 1 170 2 229 2 255 2 221 2 4 1 185 2 
260 1 0 1 170 3 134 1 173 2 174 1 221 2 4 1 180 2 185 2 146 1 187 2 8 1 229 2 103 1 268 1 237 1 13 1 272 1 319 1 197 1 111 1 243 1 325 1 202 2 116 1 209 1 72 1 250 1 74 2 165 1 288 1 255 3 168 1 86 2 335 1 337 1 
74 1 170 1 229 1 255 1 221 1 4 1 282 1 14 1 185 1 320 1 
170 1 287 1 92 1 177 1 80 1 255 1 3 1 282 1 185 1 
74 1 170 1 229 1 287 1 177 1 80 1 255 1 221 1 282 1 185 1 
155 1 54 1 203 1 82 1 264 1 
190 1 113 1 28 1 54 1 203 1 316 1 82 2 264 2 
203 1 82 1 264 1 
170 1 221 1 4 1 282 1 185 1 264 1 74 1 188 1 229 1 54 1 255 1 82 1 14 1 320 1 
28 1 
190 1 9 1 113 1 28 1 54 1 203 1 82 2 264 2 
109 1 135 1 171 1 113 1 157 1 203 2 264 5 71 1 212 1 98 1 50 1 190 1 28 1 54 2 127 2 82 5 256 1 58 2 108 2 
139 1 
154 1 170 2 0 2 200 1 221 1 185 2 74 1 229 1 255 2 
37 1 46 1 143 1 
0 1 170 1 243 1 325 1 116 1 180 1 209 1 250 1 187 1 102 1 255 1 168 1 272 1 86 1 319 1 337 1 
37 1 170 2 243 1 325 1 221 1 116 1 180 1 209 1 185 1 250 1 214 1 187 1 229 1 255 2 168 1 272 1 86 1 319 1 151 1 337 1 
170 5 0 1 92 1 200 1 221 4 185 5 308 1 74 1 23 1 214 1 229 4 25 1 255 5 151 2 
170 2 229 2 115 1 255 2 221 2 282 1 185 2 320 1 
74 1 0 1 170 3 229 3 255 3 221 3 185 3 151 1 
170 1 229 1 255 1 221 1 282 1 185 1 320 1 
74 1 154 1 170 1 229 1 200 1 255 1 221 1 282 1 185 1 
170 2 199 1 200 1 177 1 221 2 282 1 185 2 144 1 74 1 214 1 229 2 287 1 80 1 255 2 151 1 
0 1 170 2 229 1 92 1 25 1 255 2 221 1 185 2 151 1 
214 1 199 1 170 1 229 1 287 1 177 1 80 1 255 1 221 1 314 1 282 1 185 1 151 1 
37 1 170 2 200 1 221 2 46 1 185 2 74 1 229 2 255 2 151 1 
0 1 170 1 243 1 325 1 116 1 180 1 209 1 250 1 187 1 255 1 168 1 272 1 86 1 319 1 337 1 
0 1 170 1 243 1 325 1 116 1 180 1 96 1 283 1 209 1 250 1 187 1 255 1 168 1 272 1 86 1 
37 2 173 4 140 1 46 2 143 2 146 1 8 1 233 1 268 1 312 1 237 2 111 1 327 1 202 2 281 1 279 1 120 1 251 1 165 2 288 1 30 1 335 1 87 1 296 1 
170 1 229 1 80 1 255 1 221 1 115 1 282 1 185 1 
276 1 70 1 
276 1 70 1 
6 1 191 1 
6 1 191 1 
6 1 191 1 
276 1 240 1 70 1 
276 1 240 1 70 1 
276 1 240 1 70 1 
110 1 276 1 70 1 
6 1 40 1 276 2 191 1 70 2 34 1 
79 1 276 1 70 1 
79 1 276 1 70 1 
79 1 276 1 70 1 
62 1 285 1 169 1 276 1 82 1 182 1 292 1 70 1 264 1 
62 1 285 1 276 1 182 1 292 1 70 1 
75 1 38 1 305 1 
38 1 305 1 235 1 
75 2 301 1 38 3 235 1 32 1 161 1 
75 1 38 2 235 1 32 1 238 1 161 1 
75 1 38 2 235 1 32 2 161 1 
42 1 97 1 264 5 98 2 265 1 50 1 190 1 233 1 54 4 312 1 58 1 108 1 321 1 61 1 242 3 64 1 113 1 203 1 281 1 19 2 248 1 69 1 212 3 124 1 253 1 164 2 28 2 167 2 127 1 82 5 296 1 300 1 
97 4 264 9 98 6 265 3 145 5 50 1 190 1 233 3 54 7 312 3 317 1 239 1 58 2 150 1 108 2 242 9 64 2 155 5 113 1 157 1 203 6 281 3 206 1 19 6 69 1 212 8 213 1 124 3 28 5 167 6 127 2 82 9 296 3 33 1 300 2 
42 1 97 1 264 3 265 1 98 2 190 1 233 1 54 2 312 1 58 1 108 1 64 1 242 4 157 1 281 1 19 2 212 3 124 2 253 1 164 1 28 3 127 1 167 2 82 3 296 1 300 1 
42 1 97 2 264 4 265 2 98 4 190 1 233 2 54 3 312 2 58 1 150 1 108 1 242 7 64 1 157 1 281 2 206 1 19 4 212 5 124 3 253 1 164 2 28 4 167 4 127 1 82 4 296 2 33 1 300 1 
139 1 
250 1 247 1 
106 1 
250 1 325 1 209 1 
250 1 148 1 
250 1 325 1 
250 3 163 1 325 1 254 1 128 2 209 1 
133 1 173 7 175 1 176 2 281 1 279 3 222 1 223 1 158 1 100 1 11 1 165 4 312 1 289 1 237 3 87 2 35 1 
133 1 173 7 175 1 176 2 281 1 279 3 222 1 223 1 158 1 100 1 11 1 165 4 312 1 289 1 237 3 87 2 35 1 
133 1 173 7 175 1 176 2 281 1 279 3 222 1 223 1 158 1 100 1 11 1 165 4 312 1 289 1 216 1 237 3 87 2 35 1 
133 2 173 31 176 3 175 5 222 2 223 2 224 4 265 3 146 1 228 1 100 1 8 1 7 1 233 3 11 1 268 1 311 3 312 4 236 1 237 15 194 1 153 1 112 1 202 2 281 4 279 10 158 1 331 1 165 16 289 2 335 1 87 5 296 3 35 1 
133 1 173 9 176 2 175 1 222 1 223 1 146 2 228 1 189 1 8 2 53 1 11 1 268 2 312 1 237 4 202 4 281 1 279 4 158 1 165 5 289 1 335 2 87 3 35 1 
131 1 38 2 301 1 1 1 179 1 305 1 178 1 43 1 180 1 49 1 187 1 267 1 310 1 235 1 195 1 241 2 243 1 15 1 156 1 116 1 18 1 205 1 67 1 118 2 208 1 75 1 126 1 86 1 129 1 89 1 
301 1 131 1 38 2 1 1 179 1 305 1 43 1 180 1 225 1 187 1 267 1 310 1 235 1 195 1 241 3 243 1 15 1 66 1 116 1 18 1 205 1 67 1 118 3 208 1 75 1 126 1 86 1 129 2 297 1 89 1 
131 1 38 2 301 1 1 1 179 1 305 1 43 1 180 1 225 1 187 1 310 1 235 1 195 1 241 2 243 1 15 1 116 1 18 1 67 1 118 2 208 1 75 1 86 1 129 2 297 1 
131 2 43 2 180 1 44 1 187 1 272 1 241 1 275 1 243 1 15 2 325 1 66 1 116 1 18 2 205 1 118 1 284 1 250 1 125 1 215 1 126 1 86 1 294 1 
131 1 38 2 301 1 305 1 43 1 180 1 225 1 49 1 187 1 267 1 310 1 235 1 195 1 241 1 243 1 15 1 156 1 116 1 18 1 205 1 67 1 118 1 75 1 126 1 86 1 89 1 
12 1 
90 1 170 1 92 1 304 1 177 1 3 1 180 2 185 1 47 1 264 2 98 1 50 1 187 2 230 1 234 1 272 2 58 1 108 1 243 1 275 1 113 1 325 1 116 1 203 2 282 1 329 1 284 1 212 1 250 1 287 1 80 1 255 1 127 1 82 2 86 2 336 1 300 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 113 1 304 1 177 1 203 1 3 1 282 1 329 1 185 1 264 2 230 1 287 1 9 1 234 1 80 1 255 1 82 2 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 50 1 230 1 287 1 234 1 80 1 255 1 127 1 82 1 58 1 108 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 230 1 287 1 234 1 80 1 255 1 82 1 
170 1 92 1 304 1 177 1 3 1 282 1 329 1 185 1 264 1 50 1 230 1 287 1 234 1 80 1 255 1 127 1 82 1 58 1 108 1 
146 1 8 1 111 1 268 1 288 1 202 2 139 1 120 1 335 1 
37 11 0 1 173 14 175 1 261 1 46 4 224 3 143 11 265 2 146 2 8 2 233 2 268 2 311 3 312 1 57 1 237 6 197 1 153 1 111 1 202 4 279 2 281 2 246 1 331 1 72 1 211 1 288 2 165 8 291 1 335 2 87 1 296 1 
0 1 170 2 39 1 173 2 221 1 261 1 180 1 46 1 185 1 187 1 146 1 8 1 229 1 102 1 268 1 237 1 272 1 319 1 151 1 197 1 322 1 243 1 111 1 325 1 116 1 202 2 209 1 72 1 250 1 214 1 288 1 255 2 165 1 168 1 86 1 335 1 258 1 337 1 
0 2 170 3 173 20 176 1 175 4 261 1 180 3 185 1 265 2 187 3 8 3 11 1 104 1 268 3 272 1 197 1 274 2 111 3 202 6 116 2 281 3 279 8 209 2 22 1 214 1 288 3 289 1 296 2 35 1 130 2 37 7 133 1 134 2 303 1 221 1 46 7 225 1 143 7 146 3 229 1 233 2 312 3 315 2 237 10 151 1 319 2 243 2 325 2 158 1 72 1 250 2 255 3 333 2 165 10 168 2 86 3 335 3 87 4 337 2 
170 1 173 2 174 2 178 1 221 1 180 8 142 1 185 1 225 1 187 7 146 2 229 1 8 2 268 2 237 1 272 2 151 1 197 1 243 2 111 2 275 1 325 2 116 2 202 4 328 1 120 1 284 1 72 1 250 3 76 1 78 1 27 1 334 1 332 1 255 1 288 2 165 1 86 8 335 2 
37 1 170 1 219 1 173 3 221 1 261 1 46 1 185 1 143 1 265 1 146 1 8 1 229 1 233 1 268 1 312 1 237 2 200 1 111 1 202 2 279 1 281 1 74 1 288 1 255 1 165 1 335 1 87 1 296 1 
37 1 111 1 173 2 175 1 202 2 279 1 281 1 120 1 46 1 143 1 146 1 8 1 233 1 288 1 268 1 165 2 30 1 335 1 
37 1 111 1 173 2 327 1 202 2 279 1 120 1 46 1 143 1 146 1 8 1 288 1 268 1 312 1 237 2 335 1 87 1 296 1 
37 2 173 4 175 1 46 2 143 2 265 1 146 1 8 1 233 1 268 1 312 1 237 2 111 1 202 2 281 1 279 2 120 1 165 2 288 1 335 1 87 1 296 1 
37 1 111 1 173 2 175 1 202 2 279 1 281 1 46 1 142 1 143 1 146 1 8 1 233 1 288 1 268 1 165 2 30 1 335 1 
37 1 111 1 173 2 327 1 202 2 279 1 46 1 142 1 143 1 146 1 8 1 288 1 268 1 312 1 237 2 335 1 87 1 296 1 
37 2 173 4 175 1 46 2 142 1 143 2 265 1 146 1 8 1 233 1 268 1 312 1 237 2 111 1 202 2 281 1 279 2 165 2 288 1 335 1 87 1 296 1 
37 2 173 4 175 1 46 2 143 2 265 1 146 1 8 1 233 1 268 1 312 1 237 2 111 1 202 2 281 1 279 2 165 2 288 1 335 1 87 1 296 1 
0 1 134 1 170 1 173 2 180 1 187 1 146 1 8 1 268 1 237 1 272 1 319 1 197 1 243 1 111 1 325 1 116 1 202 2 209 1 72 1 250 1 165 1 255 1 288 1 168 1 86 1 335 1 337 1 
0 1 170 1 173 2 96 1 180 1 187 1 146 1 8 1 268 1 237 1 272 1 197 1 243 1 111 1 325 1 116 1 202 2 283 1 209 1 72 1 250 1 165 1 255 1 288 1 168 1 86 1 335 1 88 1 
37 2 173 4 175 1 261 1 46 2 143 2 265 1 146 1 8 1 233 1 268 1 312 1 237 2 111 1 202 2 281 1 279 2 165 2 288 1 335 1 87 1 296 1 
37 2 134 1 170 1 173 4 175 1 178 1 180 1 46 2 143 2 265 1 187 1 146 1 8 1 233 1 268 1 312 1 315 1 237 2 319 1 243 1 111 1 325 1 116 1 202 2 279 2 281 1 209 1 250 1 165 2 255 1 288 1 168 1 86 1 335 1 87 1 296 1 337 1 
37 1 170 1 173 3 175 1 221 1 261 1 46 1 185 1 143 1 99 1 265 1 146 1 8 1 229 1 233 1 268 1 312 1 237 1 200 1 111 1 202 2 279 1 281 1 74 1 288 1 255 1 165 2 335 1 296 1 
173 13 175 2 94 1 45 1 224 2 265 2 146 2 8 2 53 1 233 2 268 2 313 1 311 1 312 2 271 1 237 7 318 1 323 1 153 1 63 1 202 4 281 2 279 4 331 1 162 1 165 6 293 1 335 2 87 2 296 2 
220 1 173 20 41 1 175 1 94 2 141 1 224 2 265 2 228 2 146 3 8 3 53 1 233 2 268 3 313 1 312 1 311 2 237 9 318 2 323 1 202 6 279 2 281 2 162 1 331 2 122 1 165 11 31 1 257 1 293 3 335 3 87 1 296 1 
173 9 175 1 94 1 45 1 224 2 265 1 146 2 8 2 53 1 233 1 268 2 313 1 311 1 312 1 237 5 318 1 323 1 153 1 202 4 281 1 279 2 331 1 162 1 165 4 293 1 335 2 87 1 296 1 
173 9 175 1 94 1 45 1 224 2 265 1 146 2 8 2 53 1 233 1 268 2 313 1 311 1 312 1 237 5 318 1 323 1 153 1 202 4 281 1 279 2 331 1 162 1 165 4 293 1 335 2 87 1 296 1 
133 1 220 1 173 46 176 1 41 1 175 6 94 1 141 1 224 4 265 6 228 1 146 2 8 2 53 1 233 6 11 1 268 2 313 1 311 4 312 7 237 22 318 1 323 1 153 2 202 4 281 7 279 12 158 1 331 2 162 1 122 1 165 24 289 1 31 1 257 1 291 2 293 3 335 2 87 6 296 6 35 1 
170 2 173 2 174 2 2 1 306 1 261 1 180 2 185 2 146 1 187 2 8 1 268 1 237 1 105 1 197 1 243 1 111 1 325 1 116 1 202 2 121 1 72 1 250 1 76 1 332 1 288 1 255 2 165 1 86 2 85 1 335 1 
301 1 38 2 243 1 305 1 178 1 116 1 43 1 204 1 67 1 180 2 207 1 225 1 160 1 75 1 187 2 267 1 310 1 235 1 86 2 
301 1 38 2 243 1 305 1 43 1 116 1 67 1 180 1 207 1 225 1 75 1 187 1 77 1 267 1 310 1 235 1 86 1 
243 1 275 1 325 1 277 1 116 1 43 1 180 1 160 1 284 1 250 1 187 1 215 1 272 1 86 1 
301 1 38 2 243 1 305 1 116 1 43 1 204 1 67 1 180 1 207 1 225 1 160 1 75 1 187 1 267 1 310 1 235 1 86 1 
147 1 
139 1 
183 1 264 1 98 1 50 1 190 1 192 1 58 1 108 1 242 1 113 1 16 1 203 1 212 1 124 1 28 2 127 1 82 1 
171 1 93 1 178 1 95 2 180 3 184 2 264 5 265 2 98 8 187 3 190 2 10 1 272 1 108 4 109 1 113 3 114 2 278 1 116 4 203 5 280 2 281 2 19 6 209 3 212 9 124 6 28 8 127 4 128 2 296 2 300 2 299 2 302 2 50 4 52 2 309 2 148 2 233 2 312 2 58 4 242 12 243 3 325 3 247 3 159 1 250 10 163 1 333 2 167 6 82 5 86 3 84 2 336 1 339 1 
220 1 141 1 224 1 264 1 98 5 265 2 50 2 190 2 309 2 233 2 55 1 311 1 312 2 193 1 58 2 108 2 242 6 113 1 203 1 281 2 19 5 331 1 212 8 122 1 124 3 28 5 167 5 127 2 82 1 31 1 257 1 336 1 296 2 300 1 299 1 
133 1 170 1 221 1 4 1 185 1 264 1 98 2 50 1 188 1 229 1 309 2 312 1 270 1 58 1 14 1 108 1 320 1 281 2 282 1 20 1 212 2 74 1 255 1 289 1 127 1 82 1 299 1 35 1 
109 1 171 1 98 1 212 1 50 1 190 1 28 1 127 1 58 1 108 1 
242 10 281 2 19 5 265 2 98 5 212 5 124 5 309 2 233 2 28 5 333 1 167 5 312 2 296 2 299 1 
190 1 113 1 28 1 203 1 82 1 264 1 
90 1 180 4 47 1 264 3 98 2 50 1 187 4 58 2 272 2 108 2 152 1 243 1 275 1 325 1 113 2 278 2 157 1 116 1 203 4 159 1 284 1 212 2 250 1 24 1 127 2 82 3 86 4 336 2 300 2 
0 1 170 3 134 1 173 1 221 2 4 1 180 1 185 2 146 1 187 1 8 1 229 2 103 1 268 1 237 1 272 1 319 1 197 1 243 1 111 1 325 1 202 2 116 1 209 1 74 2 250 1 255 3 288 1 168 1 86 1 335 1 337 1 
242 4 176 1 19 2 98 2 212 1 50 1 124 2 190 2 28 4 167 2 127 1 58 1 108 1 336 1 300 1 
62 1 182 1 
62 1 182 1 
62 1 182 1 
62 1 182 1 
62 1 182 1 
62 1 182 1 
62 1 182 1 
62 1 182 1 
276 1 70 1 
133 1 173 8 176 1 175 1 202 4 281 1 279 3 158 1 146 2 228 1 8 2 11 1 165 4 268 2 312 1 289 1 237 4 335 2 87 2 35 1 
139 1 
173 4 175 1 17 1 202 2 279 2 281 1 265 1 146 1 8 1 233 1 268 1 165 2 312 1 237 2 335 1 87 1 296 1 
153 1 173 7 175 1 281 1 279 2 331 1 224 2 265 1 233 1 165 3 312 1 311 1 237 4 87 1 296 1 
133 2 173 23 176 1 175 4 224 2 265 2 228 2 146 2 8 2 233 2 11 1 268 2 311 2 312 3 237 12 153 1 202 4 279 9 281 3 158 1 211 1 252 1 165 11 289 2 291 1 335 2 87 5 296 2 35 1 
173 1 237 1 224 1 
173 1 165 1 311 1 
173 6 175 1 17 1 202 2 281 1 279 3 265 1 146 1 8 1 233 1 268 1 333 1 165 3 312 1 237 3 335 1 87 2 296 1 
173 12 220 1 175 1 141 1 224 1 265 2 146 1 8 1 53 1 233 2 268 1 311 1 312 2 237 6 202 2 281 2 279 2 331 1 122 1 165 6 31 1 257 1 335 1 87 1 296 2 
133 1 173 6 175 1 281 1 279 2 165 3 312 1 289 1 237 3 87 1 35 1 
133 1 173 3 175 1 202 2 279 2 158 1 228 1 146 1 252 1 8 1 11 1 165 1 268 1 289 1 237 2 335 1 87 1 
133 2 173 10 175 2 202 2 279 5 281 2 20 1 146 1 8 1 53 1 268 1 165 5 289 2 312 2 237 5 335 1 87 3 35 1 
173 2 175 1 202 2 281 1 279 1 146 1 53 1 8 1 233 1 268 1 165 2 335 1 
173 4 175 1 202 2 279 2 281 1 265 1 146 1 53 1 8 1 233 1 268 1 165 2 312 1 237 2 335 1 87 1 296 1 
133 1 173 3 175 1 202 6 279 2 45 1 228 1 146 3 252 1 53 1 8 3 268 3 165 1 289 1 237 2 335 3 87 1 
133 3 173 34 176 1 175 5 45 1 224 4 265 3 228 2 146 5 8 5 53 1 233 3 11 1 268 5 311 3 312 5 236 1 237 18 194 1 153 1 112 1 17 1 202 10 281 5 279 12 158 1 331 1 252 1 165 16 289 3 335 5 87 7 296 3 35 2 
133 1 173 8 176 1 224 1 146 1 8 1 53 1 11 1 268 1 312 1 311 1 237 4 202 2 281 1 279 2 158 1 331 1 165 4 289 1 31 1 335 1 87 2 35 1 
133 1 173 11 176 1 175 1 224 2 265 1 146 2 53 1 8 2 233 1 11 1 268 2 312 1 311 1 237 5 153 1 17 1 202 4 281 2 279 3 158 1 331 1 165 6 289 1 31 1 335 2 87 2 35 1 
133 1 220 1 173 19 176 1 175 1 141 1 224 1 265 2 146 3 228 1 8 3 53 1 233 2 11 1 268 3 311 1 312 3 237 10 17 1 202 6 281 3 279 4 158 1 331 1 122 1 165 9 289 1 31 1 257 1 335 3 87 3 296 2 35 1 
133 1 173 17 220 1 176 1 175 2 141 1 224 1 265 2 228 1 146 3 8 3 53 1 233 2 11 1 268 3 311 1 312 2 237 7 17 1 202 6 281 3 279 5 158 1 331 1 122 1 165 10 289 1 31 1 257 1 335 3 87 3 296 1 35 1 
133 1 173 8 176 1 224 1 146 1 8 1 53 1 11 1 268 1 312 1 311 1 237 4 202 2 281 1 279 2 158 1 331 1 165 4 289 1 31 1 335 1 87 2 35 1 
173 12 220 1 175 1 141 1 224 1 265 2 146 1 8 1 53 1 233 2 268 1 311 1 312 2 237 6 202 2 281 2 279 2 331 1 122 1 165 6 31 1 257 1 335 1 87 1 296 2 
133 1 220 1 173 18 176 1 175 2 141 1 224 1 265 2 146 4 228 2 8 4 53 1 233 2 11 1 268 4 311 1 312 2 237 8 17 1 202 8 281 3 279 5 158 1 331 1 122 1 165 10 289 1 31 1 257 1 335 4 87 3 296 1 35 1 
220 1 173 16 175 3 45 1 141 1 224 1 265 3 146 4 228 2 53 1 8 4 233 3 268 4 311 1 312 2 237 7 202 8 281 3 279 6 331 1 122 1 165 9 31 1 257 1 335 4 87 3 296 2 
133 3 173 7 175 3 279 6 281 1 158 2 11 1 165 3 312 1 289 3 237 4 87 3 35 1 
133 1 220 1 173 18 176 1 175 1 45 1 141 1 224 1 265 2 146 4 228 2 53 1 8 4 233 2 11 1 268 4 311 1 312 2 237 8 202 8 281 3 279 4 158 1 331 1 122 1 165 10 289 1 31 1 257 1 335 4 87 3 296 1 35 1 
0 1 170 1 92 1 25 1 255 1 81 1 185 1 
101 1 232 1 166 1 117 1 81 1 263 1 
187 1 139 1 180 1 86 1 272 1 
0 1 170 2 243 1 325 1 221 1 116 1 180 1 209 1 185 1 250 1 187 1 229 1 255 2 168 1 272 1 86 1 151 1 319 1 
170 1 243 1 325 1 221 1 116 1 278 1 282 1 180 1 209 1 185 1 250 1 187 1 229 1 287 1 80 1 255 1 168 1 86 1 151 1 319 1 
170 1 243 1 325 1 221 1 116 1 278 1 282 1 180 1 283 1 209 1 185 1 250 1 187 1 229 1 287 1 80 1 255 1 168 1 86 1 151 1 
243 1 325 1 136 1 114 1 201 1 116 1 278 1 203 1 180 3 247 1 209 1 264 2 250 4 52 1 187 3 190 1 148 1 28 1 82 2 272 1 86 3 128 1 298 1 
302 1 243 1 325 1 114 1 116 1 278 1 203 1 180 3 247 1 209 1 264 2 250 4 52 1 187 3 190 1 148 1 28 1 82 2 272 1 86 3 128 1 298 1 
187 1 243 1 334 1 116 1 180 1 86 1 
243 2 325 2 174 1 178 1 116 3 328 1 180 7 181 1 209 1 225 1 250 3 187 6 163 1 78 1 286 1 26 1 27 1 334 1 332 1 272 2 86 7 
37 1 133 1 0 2 170 2 134 1 173 6 176 1 221 1 178 1 306 1 261 1 180 1 46 1 185 1 143 1 146 2 187 1 8 2 229 1 11 1 268 2 312 1 315 1 237 3 151 1 319 1 274 1 243 1 111 2 325 1 116 1 202 4 281 1 279 2 158 1 209 1 250 1 165 3 288 2 255 2 289 1 168 1 86 1 335 2 87 2 337 1 35 1 
171 1 302 1 180 1 95 1 184 1 264 3 98 1 50 2 187 1 190 1 54 1 272 1 58 2 108 2 109 1 113 1 114 1 203 2 280 1 247 1 159 1 212 1 250 2 28 1 127 2 82 3 86 1 128 1 
243 1 325 1 178 1 116 2 180 2 209 1 250 2 187 2 163 1 10 1 334 1 128 1 86 2 
275 1 243 1 325 1 178 1 116 1 180 4 284 1 227 1 250 1 187 4 272 1 86 4 298 1 
36 1 243 1 303 1 325 1 278 1 116 2 180 2 181 1 209 1 250 1 187 2 26 1 83 1 86 2 
38 1 187 1 243 1 305 1 235 1 116 1 67 1 180 1 86 1 272 1 
243 1 325 1 178 1 116 1 180 2 225 1 250 1 187 2 332 1 86 2 105 1 
275 1 243 2 325 2 178 1 278 1 116 2 328 1 180 5 284 1 227 1 250 3 187 4 27 1 332 1 272 1 86 5 
275 1 243 2 325 2 178 1 278 1 116 2 180 5 284 1 227 1 51 1 250 3 187 4 27 1 332 1 272 1 86 5 
0 1 170 2 243 1 325 1 221 1 116 1 180 1 283 1 209 1 185 1 250 1 187 1 229 1 255 2 168 1 272 1 86 1 151 1 
243 1 325 1 278 1 116 2 180 1 181 1 209 1 250 1 187 1 163 1 286 1 26 1 86 1 
0 1 170 1 2 1 282 1 119 2 121 1 185 1 123 1 255 1 217 1 85 1 295 1 
199 1 170 1 177 1 2 1 138 1 282 1 119 2 121 1 185 1 264 1 123 1 287 1 54 1 80 1 255 1 269 1 82 1 85 1 295 1 259 1 
123 1 295 1 
269 1 119 1 259 1 
139 1 
126 1 1 1 179 1 205 1 118 1 208 1 241 1 
15 1 18 1 118 1 
126 1 1 1 179 1 205 1 118 3 208 1 262 1 218 1 59 1 241 3 226 2 49 1 
126 1 1 1 29 1 179 1 205 1 118 2 208 1 129 1 241 2 
38 1 198 1 179 1 305 1 205 1 118 1 49 1 210 1 75 1 126 1 241 1 
126 1 1 1 179 1 205 1 118 1 241 1 49 1 
126 1 1 2 205 1 118 1 208 1 241 1 49 1 
1 1 137 1 179 1 205 2 307 1 118 2 49 1 231 1 126 2 241 2 
91 1 65 1 1 1 179 2 205 1 118 3 208 1 330 1 49 1 210 1 126 1 129 2 241 3 
38 2 301 1 1 1 179 1 305 1 205 1 118 2 208 1 49 1 73 1 75 1 126 1 235 1 129 1 241 2 
324 1 65 1 1 1 179 2 205 2 118 4 208 1 49 1 210 1 126 2 29 1 129 2 241 4 
126 1 1 1 179 1 205 1 118 1 208 1 241 1 49 1 
172 1 65 1 1 2 179 3 205 1 118 4 262 1 208 2 226 1 210 1 126 1 129 2 59 1 241 4 
126 1 326 1 1 1 179 1 290 1 205 1 118 2 208 1 129 1 241 2 49 1 186 1 
1 1 179 1 205 1 118 3 262 2 208 1 49 1 226 2 126 1 273 1 59 1 241 3 
179 2 68 1 107 2 60 1 
126 1 205 1 118 1 241 1 48 1 49 1 
91 1 126 1 1 1 179 1 205 1 118 2 208 1 129 1 241 2 49 1 
266 1 
126 1 1 1 179 1 205 1 118 1 208 1 241 1 49 1 
91 1 126 1 1 1 179 1 205 1 118 3 208 1 129 1 241 3 226 1 49 1 
172 1 65 1 179 1 210 1 
1 1 179 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 185 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 289 167 317 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 289 167 317 201 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
331 1 249 1 243 1 268 1 9 1 278 2 222 1 55 3 149 3 166 2 151 1 233 1 297 2 
331 2 77 2 78 1 222 3 84 1 55 9 151 1 174 1 176 1 268 1 243 6 9 1 32 1 113 1 297 2 249 4 207 1 278 5 346 2 347 2 305 1 350 2 101 1 231 1 149 9 166 2 51 1 233 1 
331 2 77 2 78 1 222 3 84 1 55 9 151 1 174 1 176 1 268 1 243 6 9 1 32 1 113 1 297 2 249 4 207 1 278 5 346 2 347 2 305 1 350 2 101 1 231 1 149 9 166 2 51 1 233 1 
331 2 77 2 78 1 222 4 84 1 55 10 151 1 174 1 176 1 268 1 243 7 9 1 32 1 113 1 297 2 249 5 207 1 278 6 346 2 347 2 305 1 350 2 101 1 231 1 149 10 166 2 51 1 233 1 
331 2 77 2 78 1 222 2 84 1 55 7 151 1 174 1 176 1 268 1 243 4 9 1 32 1 113 1 297 2 249 3 207 1 278 4 346 1 347 2 350 2 101 1 231 1 149 7 166 2 51 1 233 1 
77 1 249 2 207 1 222 1 346 2 278 3 347 1 305 1 55 4 151 1 350 1 268 1 243 3 9 1 32 1 166 1 149 4 297 1 
78 1 77 1 331 1 171 1 278 1 264 1 55 2 151 1 350 1 328 1 268 1 9 1 231 1 166 1 149 2 297 1 
331 1 77 1 353 1 222 3 55 9 151 1 174 1 176 1 243 7 268 1 9 1 32 1 297 2 39 1 249 4 207 1 278 5 346 2 347 1 305 1 350 1 149 9 166 2 233 1 
331 1 77 1 353 1 222 3 55 9 151 1 174 1 176 1 243 7 268 1 9 1 32 1 297 2 39 1 249 4 207 1 278 5 346 2 347 1 305 1 350 1 149 9 166 2 233 1 
343 1 227 1 193 1 252 1 18 1 146 1 325 1 108 1 85 1 162 1 163 1 119 1 273 1 312 1 
320 1 
343 1 226 1 227 1 193 1 252 1 18 2 356 1 146 1 325 2 108 1 173 1 280 1 85 1 162 1 163 1 119 1 273 1 312 1 320 1 
226 1 61 2 334 2 17 1 18 5 196 1 356 2 308 1 325 5 6 1 241 2 280 1 369 1 154 1 102 1 187 1 320 1 352 1 312 2 
226 1 122 1 320 1 
204 2 180 1 320 1 
108 2 227 2 162 2 163 2 119 1 252 2 367 1 273 2 
0 1 283 2 1 1 105 1 313 1 333 1 316 1 108 2 152 1 131 1 287 1 33 1 273 2 362 1 88 1 299 2 227 3 89 1 40 1 344 1 142 2 302 1 252 2 116 1 367 1 228 1 214 2 162 3 163 2 282 1 48 2 74 1 119 1 232 1 120 1 123 1 190 1 
108 1 227 1 85 1 162 1 163 1 193 1 119 1 252 1 273 1 146 1 
226 1 227 1 42 1 206 1 252 1 364 1 18 1 146 1 325 1 47 1 162 1 134 1 289 1 320 1 
226 1 227 1 206 1 252 1 364 1 18 2 325 2 146 1 108 1 47 1 162 1 134 1 163 1 273 1 320 1 
198 1 18 1 356 1 325 1 312 1 
226 1 280 1 110 1 18 2 356 1 320 1 325 2 312 1 
18 1 356 1 325 1 
227 2 205 1 14 1 252 2 367 1 146 1 108 1 162 2 163 1 256 1 273 1 
300 1 8 1 194 1 
299 1 227 1 1 1 89 1 313 1 344 1 142 1 333 1 367 1 209 1 131 1 162 1 48 1 232 1 120 1 88 1 
299 1 300 1 89 1 1 1 227 2 344 1 313 1 142 1 333 1 252 1 131 1 162 2 163 1 48 1 371 1 59 1 232 1 120 1 273 1 88 1 
367 1 122 1 
227 3 252 3 14 1 367 1 146 1 108 1 162 3 163 3 59 1 273 3 
227 1 162 1 163 1 193 1 252 1 273 1 146 1 
227 1 205 1 252 1 146 1 108 1 162 1 163 1 256 1 273 1 
283 1 1 1 313 1 333 1 316 1 108 2 152 1 131 1 134 1 339 1 33 1 59 1 273 3 88 1 299 1 89 1 227 4 62 1 344 1 302 1 142 1 206 1 252 3 116 1 364 1 18 1 367 1 146 1 325 1 228 1 47 1 214 2 162 4 163 3 282 1 48 1 74 1 119 1 371 1 256 1 232 1 120 1 123 1 190 1 
227 2 162 2 289 1 163 1 252 2 59 1 367 1 167 1 273 1 
227 3 62 1 206 1 252 3 364 1 18 1 325 1 146 1 108 1 47 1 162 3 134 1 163 3 269 1 371 1 256 1 59 2 273 3 320 1 
227 2 300 1 252 2 194 1 108 1 162 2 163 2 59 1 256 1 273 2 
299 1 227 1 1 1 89 1 313 1 344 1 142 1 333 1 367 1 131 1 162 1 48 1 232 1 120 1 88 1 
299 1 227 1 1 1 89 1 221 1 344 1 142 1 333 1 367 1 310 1 162 1 48 1 232 1 120 1 88 1 
283 4 170 1 194 2 82 1 316 1 240 1 152 1 111 1 8 2 33 1 292 1 35 1 179 1 362 2 300 2 363 1 68 1 228 1 214 2 74 2 330 1 22 1 123 1 190 1 
227 1 20 1 162 1 163 1 252 1 364 1 273 1 146 1 
227 2 14 1 252 2 367 1 146 1 108 1 162 2 163 2 59 1 256 1 273 2 
227 2 20 1 162 2 163 2 193 1 252 2 273 2 146 1 
148 1 141 1 237 1 
98 1 72 1 141 2 124 1 126 1 237 2 
141 1 237 1 
141 1 237 1 
72 1 126 1 
72 1 126 1 
72 1 126 1 
141 1 237 1 279 1 
141 1 237 1 279 1 
141 1 237 1 279 1 
141 1 237 1 307 1 
141 1 237 1 307 1 
141 1 237 1 307 1 
200 1 141 2 3 2 63 1 237 2 365 1 195 1 18 2 57 2 325 2 98 1 338 2 100 2 112 1 270 1 245 3 36 1 138 2 320 1 
3 1 52 1 237 1 57 1 286 1 245 1 138 1 60 1 273 2 227 2 141 1 301 1 252 2 365 1 94 1 18 1 367 1 325 1 148 1 100 1 162 2 163 2 117 1 186 1 
69 2 77 2 328 1 347 1 342 1 
350 1 77 1 347 1 
350 1 77 1 328 1 
69 1 79 1 77 3 328 1 347 2 342 1 
69 1 77 2 328 1 347 1 238 1 342 1 
52 1 193 1 334 1 106 1 240 1 241 1 108 1 154 1 7 1 292 1 341 1 343 1 61 1 204 4 250 2 252 1 18 5 308 3 211 1 213 1 162 1 163 1 119 1 168 1 312 4 352 2 258 2 125 2 29 1 82 1 356 1 85 1 35 1 180 2 273 1 320 1 226 1 227 1 41 1 325 5 146 1 280 1 
52 1 193 1 334 1 240 1 241 1 108 1 198 2 154 1 7 1 292 1 343 1 61 1 204 4 252 1 18 5 208 1 308 3 211 1 213 1 162 1 163 1 119 1 118 2 168 1 312 4 352 2 218 1 258 2 125 2 29 1 82 1 356 3 85 1 35 1 180 2 273 1 320 1 226 1 227 1 41 1 325 5 146 1 280 1 
258 1 52 1 125 1 193 1 29 1 106 1 334 1 82 1 240 1 241 1 6 1 108 1 85 1 341 1 273 1 320 1 343 1 226 1 227 1 61 1 204 1 250 1 252 1 18 3 146 1 325 3 308 1 211 1 213 1 162 1 163 1 119 1 312 2 352 2 
258 1 125 1 52 1 29 1 334 1 106 1 82 1 240 1 241 1 6 1 341 1 61 1 204 1 250 1 185 1 18 2 325 2 308 1 211 1 213 1 312 1 352 2 
191 1 
147 1 122 1 88 1 
155 1 88 1 
333 1 88 1 
147 2 344 1 333 1 15 1 4 1 88 3 
344 1 333 1 88 1 
143 1 88 1 
323 1 283 7 284 1 26 1 363 2 80 1 156 1 53 1 240 1 68 3 153 2 74 3 294 1 35 1 114 1 178 1 360 1 362 4 
283 31 26 1 80 2 261 1 29 3 53 2 81 4 82 3 316 1 337 1 240 4 152 1 153 3 31 1 267 1 294 1 292 3 114 1 35 4 178 1 360 2 362 16 323 5 363 5 156 2 277 1 68 10 228 1 19 1 214 2 49 1 74 15 257 3 123 1 
323 1 283 9 26 1 182 1 363 3 80 1 156 1 53 1 316 2 240 1 68 4 172 1 228 2 152 2 153 2 214 4 49 1 74 4 294 1 35 1 178 1 360 1 362 5 123 2 
323 1 283 7 26 1 363 2 80 1 156 1 53 1 240 1 68 3 153 2 74 3 294 1 35 1 114 1 360 1 178 1 362 4 
323 1 283 7 26 1 363 2 80 1 156 1 53 1 240 1 68 3 153 2 74 3 294 1 35 1 114 1 360 1 178 1 362 4 
331 2 299 1 1 1 260 1 142 1 333 1 157 1 335 1 55 1 265 2 5 1 70 1 161 1 48 1 199 2 166 1 149 1 232 1 120 1 297 1 88 1 319 1 139 2 
79 1 77 2 298 1 331 1 299 1 1 1 246 1 142 1 64 1 347 1 45 1 55 1 265 1 56 1 326 1 350 1 328 1 48 1 268 1 199 1 293 1 166 1 149 1 120 1 297 1 139 1 
331 1 77 2 79 1 1 1 265 1 55 2 151 1 56 1 243 1 268 1 9 1 199 1 293 1 297 1 139 1 299 1 298 1 142 1 64 1 278 1 347 1 16 1 45 1 326 1 350 1 48 1 328 1 149 2 166 1 120 1 
79 1 331 1 77 2 1 1 265 1 55 3 151 1 56 1 243 2 9 1 199 1 293 1 297 1 139 1 299 1 298 1 246 1 247 1 142 1 64 1 278 1 347 1 326 1 350 1 161 1 48 1 328 1 149 3 166 1 120 1 
79 1 77 2 298 1 299 1 331 1 1 1 246 1 247 1 142 1 64 1 278 1 347 1 55 2 265 1 151 1 350 1 328 1 48 1 243 2 9 1 199 1 293 1 149 2 120 1 139 1 
259 1 
1 1 235 2 333 1 334 1 335 1 107 1 197 2 241 1 154 1 289 1 11 2 296 1 299 2 61 1 202 2 204 2 303 1 206 1 345 4 157 1 252 1 304 1 18 5 308 2 213 1 162 1 120 1 121 1 352 2 28 1 263 2 315 1 223 1 356 6 134 1 180 2 37 2 88 1 320 5 226 4 227 1 183 2 142 2 42 1 144 1 364 1 184 1 95 1 325 5 146 1 280 3 47 1 48 2 232 2 234 1 
235 1 28 1 315 1 223 1 107 1 356 1 134 1 289 1 320 2 226 2 227 1 42 1 206 1 345 2 252 1 364 1 184 1 18 2 325 2 146 1 47 1 162 1 
28 1 315 1 223 1 107 1 356 1 173 1 134 1 289 1 320 3 226 3 227 1 183 1 42 1 206 1 345 3 252 1 364 1 184 1 18 3 325 3 146 1 280 1 47 1 162 1 
235 1 28 1 315 1 223 1 107 1 356 2 173 1 134 1 289 1 320 3 226 3 227 1 202 1 183 1 42 1 206 1 345 3 252 1 364 1 184 1 18 3 325 3 146 1 280 1 47 1 162 1 
235 4 193 1 334 1 107 1 241 1 197 2 108 1 154 1 289 1 242 1 11 2 296 1 343 1 61 1 202 4 345 6 206 1 303 1 252 2 18 5 348 1 308 1 162 2 163 1 119 1 75 1 352 1 127 1 28 1 263 2 315 1 223 1 356 7 266 1 173 1 85 1 134 1 180 2 273 1 37 2 320 8 226 8 227 2 183 4 42 1 364 1 184 1 146 2 325 5 280 3 47 1 
235 2 334 1 107 1 241 1 197 2 154 1 289 1 11 2 296 1 61 1 202 2 204 2 345 4 206 1 303 1 252 1 304 1 18 4 308 1 162 1 352 1 28 1 263 2 315 1 223 1 356 4 134 1 180 2 37 2 320 5 226 5 227 1 183 2 42 1 364 1 184 1 146 1 325 4 280 2 47 1 
235 2 28 1 263 2 334 1 315 1 223 1 107 1 356 4 266 1 197 2 241 1 154 1 134 1 289 1 242 1 11 2 180 2 37 2 296 1 320 5 226 5 227 1 61 1 202 2 183 2 303 1 42 1 206 1 345 4 252 1 364 1 184 1 18 4 308 1 325 4 146 1 280 2 47 1 162 1 75 1 352 1 
235 2 193 1 334 1 107 1 241 1 197 2 108 1 154 1 242 1 289 1 11 2 296 1 343 1 61 1 202 2 345 4 206 1 303 1 252 2 18 4 308 1 162 2 163 1 119 1 75 1 352 1 28 1 263 2 315 1 223 1 266 1 356 4 85 1 134 1 180 2 273 1 37 2 320 5 226 5 227 2 183 2 42 1 364 1 184 1 146 2 325 4 280 2 47 1 
235 2 193 1 334 1 107 1 241 1 197 2 108 1 154 1 289 1 291 1 340 1 343 1 61 1 202 2 204 2 345 4 206 1 303 1 252 2 65 2 18 4 308 1 162 2 163 1 119 1 352 1 28 1 314 1 263 2 315 1 223 1 266 1 356 4 85 1 133 2 134 1 273 1 320 5 226 5 227 2 183 2 42 1 364 1 184 1 146 2 325 4 280 2 47 1 
235 3 193 1 334 1 107 1 241 1 197 2 108 1 154 1 289 1 242 1 11 2 296 1 343 1 61 1 202 3 345 5 206 1 303 1 252 2 18 4 348 1 308 1 162 2 163 1 119 1 75 1 352 1 28 1 263 2 315 1 223 1 356 5 266 1 85 1 134 1 180 2 273 1 37 2 320 6 226 6 227 2 183 3 42 1 364 1 184 1 146 2 325 4 280 2 47 1 
235 3 28 1 263 2 334 1 315 1 223 1 107 1 266 1 356 5 197 2 241 1 154 1 134 1 242 1 289 1 11 2 180 2 37 2 296 1 320 6 226 6 61 1 227 1 202 3 183 3 303 1 42 1 206 1 345 5 252 1 364 1 184 1 18 4 348 1 308 1 325 4 146 1 280 2 47 1 162 1 75 1 352 1 
235 2 193 1 334 1 107 1 241 1 197 2 108 1 154 1 289 1 291 1 343 1 61 1 202 2 204 2 345 4 206 1 303 1 252 2 65 2 304 1 18 4 308 1 162 2 163 1 119 1 352 1 28 1 263 2 315 1 223 1 356 4 85 1 133 2 134 1 273 1 320 5 226 5 227 2 183 2 42 1 364 1 184 1 146 2 325 4 280 2 47 1 
1 2 283 2 333 2 316 2 335 1 152 2 287 2 33 2 59 1 273 1 38 1 88 3 362 1 274 1 299 7 246 1 227 1 276 1 40 1 142 8 252 1 157 1 116 1 16 1 228 2 162 1 214 4 230 1 163 1 48 8 164 1 370 1 74 1 22 1 165 1 232 2 120 2 123 2 190 2 
283 3 169 1 29 1 194 1 82 1 316 1 240 1 108 1 152 1 8 1 33 1 292 1 35 1 273 1 362 1 300 1 227 1 363 1 252 1 68 1 228 1 214 2 162 1 163 1 74 2 256 1 76 1 123 1 190 1 
283 6 26 1 53 1 194 1 316 1 240 1 152 1 153 1 8 1 33 1 294 1 35 1 178 1 362 3 300 1 363 2 156 1 367 2 68 2 228 1 214 2 74 3 22 1 122 1 123 1 190 1 
283 14 220 1 261 1 29 2 81 3 82 2 194 4 316 2 337 1 240 2 357 1 152 2 8 11 10 1 33 2 292 1 35 1 362 8 323 1 300 11 40 1 363 1 116 1 367 1 68 2 228 2 214 4 74 6 216 1 76 1 257 3 123 2 190 1 
1 1 283 2 313 1 333 1 194 1 316 1 239 1 131 1 152 1 33 1 59 1 273 1 88 1 362 1 299 1 89 1 227 2 40 1 344 1 142 1 252 1 116 1 367 1 209 1 228 1 21 1 162 2 214 2 48 1 163 1 329 1 74 1 371 1 232 1 76 1 120 1 123 1 190 1 
283 20 1 2 53 1 333 2 194 7 285 1 240 3 152 3 153 1 8 7 58 1 294 1 292 2 59 1 299 3 246 1 300 7 344 2 156 1 302 2 252 1 116 1 68 8 214 6 162 3 163 1 74 10 351 2 76 1 120 2 123 3 25 2 26 1 313 2 355 1 29 2 82 2 316 3 30 2 131 2 33 3 35 3 178 1 273 1 88 2 362 10 227 3 89 2 323 4 40 1 363 4 142 3 91 2 367 2 228 3 48 3 371 1 232 1 190 3 
323 1 300 1 283 2 194 1 82 1 316 1 240 1 68 1 228 1 152 1 214 2 8 1 33 1 330 1 22 1 190 1 123 1 362 2 
300 1 283 2 170 1 363 1 194 1 316 1 68 1 228 1 152 1 214 2 8 1 74 2 33 1 292 1 22 1 35 1 190 1 123 1 
283 4 29 1 82 1 194 2 316 1 240 1 152 1 8 2 33 1 292 1 35 1 362 2 300 2 323 1 363 1 68 2 228 1 214 2 74 2 22 1 123 1 190 1 
323 1 300 1 283 2 194 1 82 1 316 1 240 1 68 1 228 1 152 1 214 2 8 1 33 1 330 1 165 1 190 1 123 1 362 2 
300 1 283 2 170 1 363 1 194 1 316 1 68 1 228 1 152 1 214 2 8 1 74 2 33 1 292 1 165 1 35 1 190 1 123 1 
283 4 29 1 82 1 194 2 316 1 240 1 152 1 8 2 33 1 292 1 35 1 362 2 300 2 323 1 363 1 68 2 228 1 214 2 74 2 165 1 123 1 190 1 
283 4 29 1 82 1 194 2 316 1 240 1 152 1 8 2 33 1 292 1 35 1 362 2 300 2 323 1 363 1 68 2 228 1 214 2 74 2 123 1 190 1 
283 2 1 1 313 1 333 1 316 1 131 1 152 1 33 1 362 1 88 1 299 1 89 1 227 1 40 1 344 1 302 1 142 1 116 1 367 1 228 1 162 1 214 2 48 1 74 1 232 1 120 1 190 1 123 1 
283 2 1 1 221 1 333 1 316 1 152 1 318 1 33 1 362 1 88 1 299 1 89 1 227 1 40 1 344 1 142 1 116 1 367 1 310 1 228 1 162 1 214 2 48 1 74 1 232 1 120 1 190 1 123 1 
283 4 29 1 82 1 194 2 316 1 240 1 152 1 8 2 33 1 292 1 35 1 362 2 300 2 323 1 363 1 68 2 228 1 214 2 74 2 76 1 123 1 190 1 
283 4 1 1 313 1 29 1 333 1 194 2 82 1 316 1 30 1 240 1 131 1 152 1 8 2 33 1 292 1 35 1 362 2 88 1 299 1 323 1 300 2 89 1 227 1 363 1 344 1 302 1 142 1 16 1 68 2 228 1 162 1 214 2 48 1 74 2 120 1 190 1 123 1 
283 3 29 1 82 1 194 1 316 1 240 1 108 1 152 1 8 1 33 1 292 1 35 1 273 1 362 2 323 1 227 1 300 1 252 1 68 1 228 1 214 2 162 1 163 1 74 1 256 1 76 1 372 1 123 1 190 1 
283 13 262 1 261 1 29 2 81 2 82 2 316 2 337 1 240 2 172 1 152 2 290 1 244 1 292 2 35 2 87 1 362 6 323 2 363 2 253 1 159 1 96 1 68 4 228 2 214 4 74 7 188 1 217 1 257 1 123 2 
283 20 2 1 262 1 29 2 81 2 82 2 316 3 337 2 240 2 172 1 152 3 290 1 244 3 34 1 292 1 35 1 86 1 87 1 362 11 323 1 13 1 363 1 366 1 253 2 349 1 68 2 96 2 228 3 214 6 49 2 74 9 257 2 123 3 
283 9 262 1 261 1 29 1 81 2 82 1 316 2 337 1 240 1 172 1 152 2 290 1 244 1 292 1 35 1 87 1 362 4 323 1 363 1 253 1 96 1 68 2 228 2 214 4 74 5 188 1 257 1 123 2 
283 9 262 1 261 1 29 1 81 2 82 1 316 2 337 1 240 1 172 1 152 2 290 1 244 1 292 1 35 1 87 1 362 4 323 1 363 1 253 1 96 1 68 2 228 2 214 4 74 5 188 1 257 1 123 2 
283 46 2 1 26 1 262 1 261 2 29 6 53 1 81 4 82 6 316 2 337 2 240 7 172 1 357 2 152 2 153 1 290 1 244 3 294 1 34 1 292 6 86 1 35 7 178 1 87 1 362 24 13 1 323 6 363 6 156 1 366 1 253 1 349 1 96 1 68 12 228 2 214 4 49 1 74 22 257 4 123 2 
98 1 141 1 3 1 100 1 54 1 237 1 112 1 36 1 138 1 57 1 
148 1 94 1 
141 1 3 1 100 1 73 1 115 1 358 1 237 1 138 1 57 1 
141 1 3 1 63 1 237 1 365 1 195 1 18 1 325 1 57 1 98 1 338 1 100 1 112 1 270 1 245 2 36 1 138 1 320 1 
141 1 3 1 63 1 237 1 365 1 195 1 18 1 325 1 57 1 98 1 338 1 100 1 112 1 270 1 245 2 36 1 138 1 320 1 
141 1 3 1 63 1 237 1 365 1 195 1 18 1 325 1 57 1 98 1 338 1 100 1 112 1 270 1 245 2 36 1 138 1 320 1 
124 1 281 1 279 1 
124 1 281 1 279 1 
327 1 307 1 
327 1 124 1 307 1 
60 1 286 1 
3 1 52 1 237 1 57 1 286 1 338 1 245 1 138 1 60 1 273 2 227 2 141 1 63 1 301 1 252 2 94 1 18 1 367 1 325 1 99 1 148 1 162 2 100 1 163 2 117 1 186 1 312 1 
281 1 279 1 
327 1 124 1 307 1 
1 1 283 2 333 1 236 1 83 1 316 1 152 1 132 1 287 2 33 1 272 1 88 1 362 1 299 2 227 2 40 1 142 2 252 2 116 1 67 1 228 1 162 2 214 2 230 1 48 2 370 1 74 1 76 1 120 1 123 1 190 1 
299 1 1 1 260 1 142 1 324 1 333 1 157 1 335 1 66 1 48 1 199 1 232 1 120 1 88 1 
79 1 77 2 299 1 298 1 246 1 181 1 1 1 142 1 64 1 347 1 66 1 56 1 350 1 328 1 48 1 50 1 199 1 120 1 
79 1 77 2 299 2 298 1 1 1 246 1 181 1 142 2 64 1 347 1 16 1 66 1 56 1 350 1 328 1 48 2 50 1 199 1 120 1 
79 1 77 2 299 1 298 1 246 1 1 1 142 1 64 1 347 1 306 1 56 1 350 1 328 1 48 1 50 1 199 1 120 1 
27 1 
226 1 61 1 334 1 17 1 241 1 308 1 369 1 154 1 352 1 320 1 
258 1 204 1 125 1 29 1 82 1 240 1 352 2 
226 1 280 1 18 1 356 1 320 1 325 1 
1 1 333 1 334 2 335 1 356 4 6 1 241 2 109 1 154 1 88 1 12 1 299 4 61 2 90 2 251 1 142 4 157 1 144 1 18 3 308 2 325 3 280 2 213 2 48 4 232 2 120 1 121 2 234 1 352 2 
226 1 369 1 17 1 122 1 308 1 320 1 352 1 
334 1 356 1 241 1 154 1 11 1 180 1 296 1 37 1 320 2 226 1 61 1 204 1 18 1 308 1 325 1 280 1 352 1 
258 2 1 1 125 2 29 1 333 1 82 1 334 2 4 1 240 1 356 2 241 2 154 2 288 1 224 1 155 2 88 4 299 1 61 2 204 2 344 1 142 1 206 1 91 1 158 1 18 2 325 2 308 2 280 1 147 1 160 1 97 1 212 1 213 1 48 1 232 1 189 1 120 2 352 3 
258 5 2 1 125 5 29 2 81 1 334 1 82 2 337 1 240 2 241 1 154 1 292 2 86 1 35 2 13 1 61 1 204 3 366 1 308 6 349 1 257 1 352 4 
193 1 53 1 334 1 240 2 241 1 108 1 154 1 85 1 7 1 294 1 35 1 273 1 343 1 227 1 61 1 156 1 252 1 18 1 146 1 325 1 308 2 309 1 162 1 163 1 119 1 75 1 168 2 352 2 
283 1 1 1 313 1 333 1 316 1 108 2 152 1 131 1 33 1 273 2 88 1 299 1 227 3 89 1 344 1 142 1 302 1 252 2 116 1 367 1 228 1 214 2 162 3 48 1 163 2 282 1 74 1 119 1 232 1 120 1 190 1 123 1 
226 1 258 1 61 1 204 1 334 1 241 1 308 1 154 1 213 1 121 1 352 1 320 1 
3 1 112 1 295 1 286 1 57 1 
3 1 103 1 57 1 
3 1 103 1 57 1 
3 1 103 1 57 1 
140 1 3 1 57 1 
140 1 3 1 57 1 
140 1 3 1 57 1 
3 1 57 1 
141 1 237 1 
323 2 283 10 363 3 156 2 53 2 316 1 240 2 172 1 68 5 228 1 309 1 152 1 214 2 74 5 294 1 35 2 123 1 362 5 
283 2 323 1 82 1 316 1 240 1 172 1 68 1 228 1 152 1 214 2 123 1 362 2 
283 4 323 1 363 1 29 1 82 1 316 1 240 1 68 2 172 1 228 1 152 1 214 2 74 2 292 1 35 1 123 1 362 2 
283 3 323 1 363 1 156 1 53 1 316 3 172 1 68 2 228 3 152 3 214 6 49 1 74 2 136 1 188 1 123 3 362 1 
283 34 26 1 261 1 29 3 53 3 81 4 82 3 316 5 337 1 240 5 172 1 152 5 153 1 31 1 267 1 294 2 292 3 35 5 136 1 178 1 362 16 323 5 363 7 156 3 277 1 68 12 46 1 228 5 214 10 49 2 74 18 188 1 257 3 123 5 
283 8 323 1 26 1 363 2 156 1 53 1 316 2 240 1 68 3 228 2 152 2 153 1 214 4 49 1 74 4 294 1 35 1 178 1 362 4 123 2 
283 6 153 1 26 1 363 2 156 1 74 3 53 1 294 1 35 1 178 1 240 1 122 1 362 3 68 2 
283 4 323 1 363 1 29 1 82 1 316 1 240 1 68 2 46 1 228 1 152 1 214 2 74 2 292 1 35 1 123 1 362 2 
283 7 323 1 363 1 261 1 29 1 81 2 82 1 337 1 240 1 68 2 74 4 292 1 35 1 257 1 362 3 
283 23 220 1 26 1 261 1 29 2 53 2 81 2 82 2 316 2 240 3 357 1 152 2 153 1 294 1 292 2 35 3 136 1 178 1 362 11 323 4 363 5 156 2 68 9 228 2 214 4 49 2 74 12 257 2 123 2 
283 1 74 1 81 1 
283 1 257 1 362 1 
283 6 323 1 363 2 29 1 91 1 82 1 316 1 240 1 68 3 228 1 46 1 152 1 214 2 74 3 292 1 35 1 123 1 362 3 
283 12 2 1 29 2 81 1 82 2 316 1 337 1 240 2 172 1 152 1 292 2 86 1 35 2 362 6 323 1 13 1 363 1 366 1 68 2 349 1 228 1 214 2 74 6 257 1 123 1 
283 6 323 1 363 1 156 1 53 1 240 1 68 2 74 3 294 1 35 1 362 3 
323 1 283 3 26 1 363 1 156 1 53 1 316 1 68 2 228 1 152 1 214 2 49 1 74 2 136 1 178 1 362 1 123 1 
13 1 283 8 26 1 363 2 156 1 53 1 81 1 316 1 337 1 240 1 68 2 172 1 228 1 152 1 153 1 214 2 74 4 294 1 35 1 178 1 257 1 362 4 123 1 
283 11 26 1 261 1 29 1 53 1 81 2 82 1 316 2 337 1 240 2 172 1 152 2 153 1 294 1 35 1 178 1 362 6 13 1 323 1 363 2 156 1 68 3 228 2 46 1 214 4 74 5 257 1 123 2 
283 19 2 1 26 1 29 2 53 1 81 1 82 2 316 3 337 1 240 3 172 1 152 3 153 1 294 1 292 2 86 1 35 3 178 1 362 9 323 1 13 1 363 3 156 1 366 1 349 1 68 4 46 1 228 3 214 6 49 1 74 10 257 1 123 3 
283 17 2 1 26 1 29 2 53 1 81 1 82 2 316 3 337 1 240 3 172 1 152 3 153 1 294 1 292 1 86 1 35 2 178 1 362 10 323 2 13 1 363 3 156 1 366 1 68 5 349 1 46 1 228 3 214 6 49 1 74 7 257 1 123 3 
13 1 283 8 26 1 363 2 156 1 53 1 81 1 316 1 337 1 240 1 68 2 172 1 228 1 152 1 153 1 214 2 74 4 294 1 35 1 178 1 257 1 362 4 123 1 
283 12 2 1 29 2 81 1 82 2 316 1 337 1 240 2 172 1 152 1 292 2 86 1 35 2 362 6 323 1 13 1 363 1 366 1 68 2 349 1 228 1 214 2 74 6 257 1 123 1 
283 18 2 1 26 1 29 2 53 1 81 1 82 2 316 4 337 1 240 3 172 1 152 4 153 1 294 1 292 1 86 1 35 2 178 1 362 10 323 2 13 1 363 3 156 1 366 1 349 1 68 5 46 1 228 4 214 8 49 2 74 8 257 1 123 4 
283 16 2 1 29 3 81 1 82 3 316 4 337 1 240 3 172 1 152 4 292 2 86 1 35 2 362 9 323 3 13 1 363 3 366 1 349 1 68 6 228 4 214 8 49 2 74 7 188 1 257 1 123 4 
283 7 323 3 26 1 363 3 156 3 53 3 240 1 68 6 74 4 294 1 35 1 178 2 362 3 
283 18 2 1 26 1 29 2 53 1 81 1 82 2 316 4 337 1 240 3 172 1 152 4 153 1 294 1 292 1 86 1 35 2 178 1 362 10 323 1 13 1 363 3 156 1 366 1 349 1 68 4 228 4 214 8 49 2 74 8 188 1 257 1 123 4 
289 1 317 1 167 1 
201 1 368 1 289 1 317 1 215 1 43 1 129 1 167 1 
299 4 1 1 142 4 157 1 333 1 16 1 335 1 48 4 225 1 177 1 232 1 120 1 88 1 
299 2 1 1 90 1 344 1 354 1 142 2 333 1 128 1 285 1 48 2 135 1 23 1 120 2 88 1 
350 1 77 1 298 1 299 1 1 1 328 1 48 1 142 1 232 1 120 1 
299 2 1 1 246 1 230 1 48 2 142 2 333 1 236 1 16 1 120 1 88 1 
299 4 274 1 1 2 90 1 142 5 157 1 333 2 335 1 16 1 48 5 230 1 225 1 232 1 120 2 38 1 88 3 
299 4 274 1 1 2 90 1 142 5 192 1 157 1 333 2 335 1 16 1 48 5 230 1 225 1 232 1 120 2 88 3 
299 1 1 1 48 1 142 1 333 1 157 1 335 1 232 1 120 1 122 1 88 1 
299 1 89 1 227 2 1 1 344 1 142 1 333 1 252 1 367 1 131 1 162 2 163 1 48 1 59 1 232 1 120 1 273 1 88 1 
299 1 89 1 227 2 1 1 90 1 344 2 142 1 143 1 333 2 252 2 364 1 367 1 146 1 229 1 47 1 131 1 162 2 163 2 48 1 59 1 120 1 273 1 88 3 
299 2 89 1 227 2 1 1 90 1 344 2 142 2 143 1 333 2 252 2 364 1 367 1 146 1 229 1 310 1 47 1 162 2 163 2 48 2 177 1 59 1 120 1 273 1 88 3 
226 1 299 3 1 1 90 1 344 1 142 3 206 1 143 1 333 1 18 2 356 1 325 2 229 1 147 1 255 1 48 3 359 1 155 1 177 1 232 1 120 1 320 1 88 4 
226 1 299 3 1 1 90 1 344 1 142 3 206 1 143 1 333 1 18 2 356 1 325 2 229 1 160 1 147 1 48 3 155 1 177 1 232 1 120 1 320 1 88 4 
299 1 1 1 48 1 142 1 164 1 120 1 
274 1 299 6 246 1 1 2 276 1 344 1 354 1 142 7 333 2 128 1 16 1 4 1 287 1 230 1 48 7 164 1 271 1 232 2 120 3 38 1 88 3 
283 6 1 1 26 1 313 1 53 1 333 1 194 1 316 2 30 1 240 1 152 2 131 1 153 1 8 1 33 2 294 1 35 1 59 1 178 1 272 1 273 1 362 3 88 1 299 1 300 1 89 1 227 2 363 2 344 1 156 1 142 1 302 1 252 1 16 1 367 2 68 2 228 2 162 2 214 4 163 1 48 1 74 3 351 1 76 1 120 1 123 2 190 2 
334 2 356 2 241 2 109 1 154 2 288 1 155 1 320 1 88 2 226 1 299 1 61 2 142 1 206 1 17 1 18 3 308 1 325 3 97 1 160 1 147 1 280 1 212 1 369 1 48 1 232 1 352 1 312 1 
299 2 1 1 344 1 142 2 333 1 16 1 4 1 147 1 48 2 164 1 224 1 120 2 88 2 
299 1 89 1 227 2 1 1 344 1 142 1 333 1 252 1 367 1 310 1 162 2 163 1 48 1 59 1 232 1 120 1 273 1 88 1 
299 1 1 1 90 1 344 1 354 1 142 1 333 1 128 1 4 1 48 1 271 1 120 2 88 1 
227 1 248 1 104 1 252 1 83 1 67 1 210 1 132 1 162 1 
275 1 104 1 93 1 
210 1 248 1 104 1 332 1 367 1 
226 1 275 1 248 2 104 1 62 1 332 2 206 1 364 1 93 1 145 1 18 2 367 1 146 1 325 2 210 2 47 1 134 1 320 1 312 1 
268 1 9 1 278 1 55 1 149 1 166 1 151 1 297 1 
78 1 249 1 222 1 278 3 44 1 55 4 151 2 175 1 243 2 9 2 149 4 166 1 24 1 297 1 
219 1 39 1 243 1 268 1 9 1 278 1 150 1 55 2 149 2 166 1 151 1 297 1 
78 2 278 1 55 3 44 2 151 1 71 1 268 1 9 1 166 1 149 3 24 1 297 1 
278 2 336 1 361 2 321 1 
254 1 268 1 55 1 149 1 166 1 297 1 
174 1 243 1 268 1 9 1 278 1 55 2 149 2 166 1 151 1 297 1 
137 1 
268 1 9 1 278 1 55 1 149 1 166 1 151 1 297 1 
9 1 278 1 151 1 122 1 
9 1 278 1 55 1 149 1 166 1 151 1 297 1 
331 1 265 1 55 1 
78 2 92 1 278 1 55 3 44 1 151 1 268 1 9 1 166 1 149 3 297 1 24 1 
243 1 9 1 278 1 346 1 55 2 149 2 166 1 151 1 297 1 
350 1 77 1 249 1 268 1 207 1 278 1 347 1 55 1 149 1 166 1 297 1 
268 1 9 1 278 1 55 1 149 1 166 1 297 1 
268 1 9 2 55 1 149 1 166 1 151 1 297 1 
203 1 278 1 55 2 311 1 268 1 9 1 166 2 149 2 297 2 322 1 
249 1 222 1 278 2 55 3 151 1 174 1 176 1 268 1 243 2 9 1 166 1 149 3 297 1 
350 1 79 1 77 2 328 1 243 1 268 1 9 1 278 1 347 1 55 2 149 2 166 1 151 1 130 1 297 1 
249 1 243 2 268 1 9 1 278 2 222 1 346 1 305 1 55 4 149 4 166 2 151 1 297 2 
78 1 278 1 55 3 151 1 174 1 243 1 268 1 9 1 166 1 149 3 297 1 
175 1 249 1 278 1 222 1 
9 1 278 1 

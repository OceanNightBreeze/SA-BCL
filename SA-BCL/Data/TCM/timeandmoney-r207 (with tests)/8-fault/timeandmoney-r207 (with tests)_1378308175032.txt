#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 291 185 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 2 312 1 16 9 71 1 178 1 17 1 49 1 74 1 358 9 334 7 84 3 301 1 205 1 4 1 208 1 199 1 262 1 344 1 217 2 379 1 99 1 143 5 28 4 87 2 
43 2 312 1 16 9 71 1 178 1 17 1 49 1 74 1 358 9 334 7 84 3 301 1 205 1 4 1 208 1 199 1 262 1 344 1 217 2 379 1 99 1 143 5 28 4 87 2 
82 1 358 9 334 6 84 3 301 2 4 1 208 1 262 2 344 1 87 2 88 1 43 2 312 1 16 9 71 1 178 2 17 1 180 1 370 1 20 1 49 1 74 1 374 1 199 1 217 2 379 2 28 4 143 5 
82 1 358 9 334 6 84 3 301 2 4 1 208 1 262 2 344 1 87 2 88 1 43 2 312 1 16 9 71 1 178 2 17 1 180 1 370 1 20 1 49 1 74 1 374 1 199 1 217 2 379 2 28 4 143 5 
82 1 358 10 334 7 84 4 301 2 4 1 208 1 262 2 344 1 87 2 88 1 43 2 312 1 16 10 71 1 178 2 17 1 180 1 370 1 20 1 49 1 74 1 374 1 199 1 217 2 379 2 28 5 143 6 
82 1 358 7 334 4 84 2 301 2 4 1 208 1 262 2 344 1 87 2 88 1 43 1 312 1 16 7 71 1 178 2 17 1 180 1 370 1 20 1 49 1 374 1 199 1 217 2 379 2 28 3 143 4 
43 2 16 4 17 1 49 1 74 1 358 4 334 3 84 1 301 1 4 1 208 1 199 1 262 1 217 1 379 1 28 2 143 3 87 1 
16 2 46 1 178 1 17 1 20 1 49 1 358 2 232 1 301 1 199 1 8 1 217 1 379 1 143 1 87 1 88 1 
84 1 16 3 71 1 178 1 17 1 199 1 49 1 217 2 143 2 28 1 334 1 358 3 87 2 
160 1 297 1 305 1 
160 1 18 2 174 1 
335 2 352 2 273 2 213 1 187 1 364 2 75 2 221 2 
273 3 250 1 165 1 105 1 254 1 298 1 225 2 227 1 226 1 107 1 335 3 337 1 279 1 277 1 338 1 339 1 340 2 362 1 364 2 10 2 129 1 41 1 210 2 349 1 183 1 196 1 155 1 156 1 93 1 75 2 352 2 213 1 79 1 187 1 59 1 98 2 221 2 
335 1 130 1 352 1 273 1 213 1 214 1 364 1 284 1 75 1 221 1 
273 1 83 1 335 1 117 1 118 1 360 1 160 1 235 1 215 1 305 1 173 1 364 1 353 1 284 1 
273 1 83 1 75 1 335 1 352 1 118 1 360 1 160 1 235 2 305 1 173 2 364 1 353 1 284 1 221 1 
235 1 195 1 173 1 371 1 100 1 
160 1 235 2 6 1 305 1 142 1 173 2 371 1 100 1 
235 1 173 1 100 1 
130 1 273 1 371 1 133 1 75 1 335 1 352 1 213 1 214 1 235 1 173 1 364 1 284 1 221 1 
160 1 
160 1 235 2 1 1 305 1 142 1 173 2 371 1 100 1 
271 1 272 1 90 1 181 1 371 2 134 2 257 1 108 1 138 2 139 1 160 1 235 5 305 1 142 1 173 5 306 1 366 2 100 2 121 1 
297 1 187 1 
273 2 75 1 335 2 352 1 141 1 364 2 187 2 368 1 221 1 
150 1 94 1 241 1 
210 1 273 1 250 1 165 1 33 1 298 1 156 1 225 1 226 1 107 1 335 1 79 1 362 1 187 1 98 1 41 1 
210 1 273 2 250 1 165 1 298 1 156 1 225 1 226 1 332 1 107 1 150 1 335 2 352 1 79 1 362 1 364 1 308 1 98 1 41 1 221 1 
335 3 352 3 273 3 187 1 364 3 332 1 75 1 221 3 
335 1 352 1 273 1 214 1 364 1 284 1 221 1 
335 1 352 1 273 1 141 1 364 1 284 1 368 1 75 1 221 1 
273 4 250 1 165 1 105 1 254 1 298 1 83 1 225 1 227 1 226 1 332 1 107 1 277 1 300 1 335 4 337 1 338 1 340 2 360 1 235 1 362 1 173 1 364 3 10 1 308 1 284 1 368 1 41 1 210 1 349 1 183 1 196 1 156 1 93 1 75 2 55 1 352 3 118 1 213 1 79 1 187 1 353 1 98 1 221 3 
335 2 117 1 352 1 273 2 102 1 187 1 364 2 332 1 221 1 
273 3 83 1 332 2 242 1 75 1 335 3 300 1 352 3 118 1 360 1 160 1 235 1 173 1 364 3 353 1 284 1 308 1 368 1 221 3 
273 2 332 1 241 1 75 1 335 2 150 1 352 2 364 2 368 1 221 2 
210 1 273 1 250 1 165 1 298 1 156 1 225 1 226 1 107 1 335 1 362 1 79 1 187 1 98 1 41 1 
210 1 273 1 123 1 250 1 298 1 156 1 225 1 226 1 107 1 335 1 362 1 79 1 282 1 187 1 98 1 
162 1 105 1 254 1 227 1 258 1 63 1 150 2 151 1 338 1 340 2 10 4 175 1 238 1 44 1 349 1 183 2 132 1 265 1 93 1 94 2 241 2 50 1 321 1 59 2 
335 1 118 1 352 1 273 1 364 1 104 1 284 1 221 1 
335 5 117 1 352 4 273 5 102 1 329 1 187 1 364 5 308 1 368 1 332 2 75 1 219 1 221 4 
335 2 352 2 273 2 214 1 104 1 364 2 284 1 221 2 
189 1 54 1 
189 1 54 1 
266 1 375 1 
266 1 375 1 
266 1 375 1 
177 1 189 1 54 1 
189 1 54 1 172 1 
60 1 189 2 54 2 266 1 21 1 375 1 
177 1 189 1 54 1 
177 1 189 1 54 1 
189 1 54 1 331 1 
189 1 54 1 331 1 
189 1 54 1 331 1 
60 1 189 2 313 1 153 2 202 1 157 2 124 1 135 3 54 2 278 1 160 1 171 2 235 2 304 1 246 2 173 2 309 2 120 1 101 1 
189 1 61 1 273 2 201 1 231 1 278 1 335 2 171 1 235 1 173 1 172 1 364 2 309 1 153 1 157 1 22 1 135 1 54 1 352 2 187 1 295 1 381 1 221 2 29 1 
301 1 262 1 379 1 
301 1 46 1 379 1 
301 3 280 1 193 1 46 1 262 2 103 1 
376 1 0 1 301 1 280 1 193 1 46 1 
301 2 193 1 280 2 46 1 262 1 
271 1 272 2 224 1 3 1 201 1 168 2 275 1 258 1 125 2 85 1 233 1 359 1 235 5 305 1 173 5 174 1 366 1 40 1 311 2 44 1 18 3 181 3 132 1 371 4 134 1 50 1 138 1 160 2 142 1 100 1 381 1 295 1 
271 1 272 6 224 3 168 6 65 1 258 3 333 1 85 1 303 1 359 2 235 9 305 1 173 9 174 3 366 2 40 2 311 6 44 3 18 9 195 5 181 8 132 3 371 7 134 2 50 3 115 5 212 1 138 2 24 1 160 5 216 1 142 1 100 6 121 1 295 4 
272 2 273 1 224 1 3 1 168 2 275 1 258 1 125 1 335 1 359 1 235 3 305 1 173 3 364 1 174 2 366 1 284 1 40 1 130 1 311 2 44 1 18 4 181 3 132 1 371 2 133 1 134 1 50 1 75 1 352 1 138 1 213 1 214 1 160 3 121 1 295 1 221 1 
272 2 224 1 3 1 168 2 275 1 65 1 258 1 125 1 359 1 235 2 173 2 174 2 366 1 40 1 311 2 44 1 18 4 181 3 132 1 371 1 134 1 50 1 138 1 160 2 121 1 295 1 
260 1 297 1 79 1 
79 1 169 1 
290 1 
79 1 362 1 
260 2 250 1 194 1 79 3 362 1 112 1 
250 1 79 1 362 1 
314 1 79 1 
249 2 34 1 258 3 230 1 191 2 10 14 175 5 183 6 132 3 51 2 52 2 23 1 318 1 53 1 56 1 321 4 59 8 325 1 
249 2 34 1 258 3 230 1 191 2 10 14 175 7 183 6 132 3 51 2 52 2 23 1 318 1 53 1 56 3 321 4 59 8 325 1 
249 2 34 1 258 3 230 1 191 2 10 14 175 5 183 6 184 1 132 3 51 2 52 2 318 1 53 1 23 1 56 1 321 4 59 8 325 1 
249 3 224 3 34 2 227 1 230 1 258 6 191 3 338 1 340 2 10 40 176 4 175 14 128 1 70 1 42 1 287 1 44 3 349 1 183 19 316 1 132 6 93 1 51 2 50 3 52 3 23 1 318 1 53 2 56 7 321 7 59 21 323 1 270 3 325 1 354 1 
249 2 34 1 227 2 230 1 258 3 191 2 338 2 66 1 340 4 10 16 175 7 128 1 349 2 183 7 132 3 93 2 51 2 52 2 53 1 23 1 56 2 26 1 321 5 59 9 325 1 
30 1 200 1 103 1 225 1 228 1 226 1 334 1 358 2 357 1 107 1 301 2 109 1 302 1 262 1 87 1 210 1 16 2 178 1 46 1 17 1 154 1 49 1 198 1 25 1 199 1 217 1 379 1 98 1 143 1 188 1 
30 1 200 1 103 1 225 1 226 1 358 3 334 2 357 1 107 1 301 2 109 1 302 1 152 1 262 1 87 1 210 1 16 3 178 1 46 1 17 1 114 1 243 1 198 1 25 1 199 1 217 1 379 1 98 1 143 1 188 1 
30 1 200 1 103 1 225 1 226 1 358 2 334 2 107 1 301 2 302 1 152 1 262 1 210 1 16 2 178 1 46 1 17 1 243 1 198 1 25 1 199 1 98 1 379 1 143 1 188 1 
200 2 146 1 145 1 163 1 225 1 226 1 107 1 358 1 35 1 362 1 261 1 87 1 209 1 210 1 16 1 178 2 156 1 114 1 25 2 79 1 217 1 98 1 188 2 
30 1 200 1 103 1 225 1 228 1 226 1 358 1 357 1 107 1 301 2 109 1 302 1 262 1 87 1 210 1 16 1 178 1 46 1 49 1 243 1 198 1 25 1 217 1 379 1 98 1 188 1 
166 1 
271 1 272 1 273 1 223 1 83 1 276 1 335 1 360 1 207 2 110 1 235 4 236 2 67 3 305 1 173 4 174 2 364 1 283 1 38 1 127 1 366 1 284 1 14 1 45 2 181 1 72 3 134 1 117 1 138 1 118 1 160 1 215 1 78 1 293 1 292 5 142 2 378 1 247 3 353 1 100 5 144 1 324 2 
271 1 272 1 273 1 223 1 83 1 276 1 335 1 360 1 207 2 110 1 235 4 236 2 67 3 305 1 173 4 174 2 364 1 283 1 38 1 127 1 366 1 284 1 14 1 45 2 181 1 72 3 134 1 117 1 138 1 118 1 160 1 215 1 78 1 292 5 293 1 142 2 378 1 247 3 353 1 100 5 144 1 324 2 
271 1 272 1 273 1 223 1 335 1 235 4 110 1 236 2 67 2 283 1 284 1 18 2 72 2 117 1 118 1 160 1 292 4 78 1 247 2 248 1 353 1 83 1 360 1 36 1 305 1 173 4 364 1 366 1 47 2 181 1 134 1 138 1 215 1 142 2 378 1 218 2 100 4 144 1 324 2 
271 1 272 2 273 1 223 1 225 2 226 1 276 1 107 1 335 1 235 5 110 1 67 2 236 2 283 1 284 1 288 1 18 2 72 2 156 2 117 1 118 1 245 1 160 2 292 4 78 1 79 1 247 2 353 1 255 1 83 1 35 1 36 1 360 1 207 2 305 1 362 1 173 5 174 2 364 1 366 1 209 1 40 1 210 2 45 2 181 2 134 1 319 1 138 1 215 1 142 3 378 1 98 2 100 6 144 1 324 2 
273 1 1 1 223 1 83 1 335 1 117 1 118 1 360 1 235 3 110 1 67 1 215 1 292 2 142 1 173 3 378 1 283 1 364 1 353 1 284 1 100 2 144 1 
273 1 1 1 223 1 72 1 83 1 335 1 117 1 118 1 360 1 160 1 235 3 110 1 215 1 292 3 142 1 305 1 173 3 378 1 283 1 364 1 353 1 284 1 100 1 144 1 
273 1 1 1 223 1 83 1 335 1 360 1 110 1 235 3 67 1 305 1 173 3 364 1 283 1 284 1 72 1 117 1 118 1 160 1 215 1 292 3 142 1 378 1 247 1 353 1 100 2 144 1 
271 1 272 1 273 1 1 1 223 1 276 1 335 1 235 5 110 1 67 4 236 2 283 1 284 1 14 1 72 4 117 1 118 1 160 5 292 6 293 1 78 1 247 4 353 1 83 1 360 1 207 2 305 5 173 5 364 1 174 2 127 1 38 1 366 1 89 1 45 2 181 1 134 1 138 1 215 1 142 3 378 1 100 7 144 1 324 2 
271 1 272 1 273 1 223 1 276 1 335 1 235 4 110 1 236 2 67 2 283 1 284 1 18 2 72 2 117 1 118 1 160 2 292 4 78 1 247 2 353 1 83 1 360 1 36 1 207 2 305 1 173 4 364 1 174 2 366 1 45 2 181 1 134 1 138 1 215 1 142 2 378 1 100 4 144 1 324 2 
271 1 272 1 273 1 223 1 83 1 276 1 335 1 360 1 207 2 110 1 235 4 67 2 236 2 305 1 173 4 174 2 364 1 283 1 38 1 366 1 284 1 14 1 45 2 181 1 72 2 134 1 117 1 118 1 138 1 160 1 215 1 78 1 292 4 293 1 142 2 378 1 247 2 353 1 100 4 144 1 324 2 
271 1 272 1 273 1 223 1 83 1 276 1 335 1 360 1 207 2 110 1 235 4 67 2 236 2 305 1 173 4 174 2 364 1 283 1 38 1 366 1 284 1 14 1 45 2 181 1 72 2 134 1 117 1 118 1 138 1 160 1 215 1 78 1 292 4 293 1 142 2 378 1 247 2 353 1 100 4 144 1 324 2 
271 1 272 1 273 1 223 1 164 1 83 1 335 1 360 1 110 1 235 4 67 2 236 2 305 1 173 4 364 1 283 1 38 1 366 1 284 1 47 2 18 2 181 1 72 2 134 1 117 1 118 1 138 1 160 1 215 1 78 1 292 4 142 2 378 1 247 2 248 1 353 1 218 2 100 4 144 1 80 1 324 2 
249 1 162 1 349 1 297 1 183 2 132 1 254 1 105 1 93 1 227 1 258 1 51 1 191 1 52 1 23 1 338 1 340 2 187 2 10 5 321 2 59 3 175 2 325 1 
326 1 224 2 105 2 254 1 227 2 258 2 150 11 170 1 338 2 340 4 10 14 175 2 176 3 285 1 129 1 347 1 42 1 44 1 349 2 196 1 183 6 316 1 132 1 93 2 94 11 50 2 241 4 244 1 56 1 187 1 321 1 59 8 270 3 
273 2 250 1 165 1 33 1 298 1 105 1 254 1 225 1 226 1 227 1 332 1 107 1 335 2 338 1 340 2 362 1 364 1 10 2 308 1 41 1 347 1 129 1 210 1 15 1 349 1 196 1 183 1 156 1 73 1 93 1 241 1 352 1 79 1 187 1 59 1 98 1 221 1 220 1 
273 3 224 2 105 3 225 1 274 2 106 1 227 3 226 2 230 1 147 1 332 1 191 2 107 2 335 3 277 2 150 6 338 3 340 6 10 27 284 1 347 1 349 3 196 1 156 1 241 6 23 1 352 1 79 2 249 1 250 2 165 2 254 3 298 2 258 5 206 2 362 2 364 1 175 7 308 1 129 1 41 2 210 1 44 2 183 13 211 1 132 5 372 2 93 3 94 6 51 2 50 2 52 2 56 1 187 3 321 6 59 14 98 1 325 1 221 1 382 2 
162 1 273 1 252 1 105 2 254 2 203 1 225 8 226 2 227 2 332 1 107 2 35 1 335 1 338 2 340 4 281 1 362 2 364 1 10 2 286 1 129 1 209 1 210 8 349 2 196 1 183 1 154 1 155 2 197 1 156 2 93 2 92 1 243 1 352 1 79 3 59 1 98 7 380 1 221 1 
273 1 224 1 105 1 254 1 227 1 258 1 150 1 335 1 338 1 340 2 364 1 10 3 175 1 368 1 347 1 44 1 349 1 183 2 132 1 93 1 94 1 241 1 50 1 75 1 352 1 96 1 321 1 59 1 221 1 
162 1 349 1 254 1 105 1 93 1 227 1 94 1 63 1 258 1 241 1 50 1 150 1 338 1 56 1 340 2 10 2 175 1 59 2 
44 1 162 1 349 1 183 2 132 1 254 1 105 1 93 1 227 1 265 1 94 1 241 1 150 1 338 1 340 2 321 1 10 2 175 1 
162 1 224 1 105 1 254 1 227 1 258 1 150 2 338 1 340 2 10 4 175 2 44 1 349 1 183 2 132 1 93 1 94 2 50 1 241 2 56 1 321 1 59 2 
349 1 252 1 254 1 105 1 93 1 227 1 94 1 63 1 258 1 241 1 50 1 150 1 338 1 56 1 340 2 10 2 175 1 59 2 
44 1 349 1 252 1 183 2 132 1 254 1 105 1 93 1 227 1 265 1 94 1 241 1 150 1 338 1 340 2 321 1 10 2 175 1 
252 1 224 1 105 1 254 1 227 1 258 1 150 2 338 1 340 2 10 4 175 2 44 1 349 1 183 2 132 1 93 1 94 2 50 1 241 2 56 1 321 1 59 2 
44 1 349 1 224 1 183 2 132 1 254 1 105 1 93 1 227 1 94 2 258 1 241 2 50 1 150 2 338 1 56 1 340 2 321 1 10 4 175 2 59 2 
273 1 250 1 165 1 298 1 254 1 105 1 225 1 226 1 227 1 107 1 277 1 335 1 338 1 340 2 362 1 10 2 129 1 41 1 210 1 349 1 196 1 183 1 156 1 93 1 79 1 187 1 59 1 98 1 
210 1 349 1 273 1 123 1 250 1 183 1 196 1 105 1 254 1 298 1 156 1 225 1 227 1 93 1 226 1 107 1 335 1 338 1 340 2 192 1 79 1 362 1 282 1 187 1 10 2 59 1 98 1 129 1 
224 1 105 1 254 1 227 1 258 1 150 2 338 1 340 2 10 4 175 2 347 1 44 1 349 1 183 2 132 1 93 1 94 2 50 1 241 2 56 1 321 1 59 2 
273 1 250 1 165 1 224 1 298 1 254 1 105 1 225 1 226 1 227 1 258 1 107 1 150 2 277 1 335 1 338 1 340 2 362 1 10 4 175 2 41 1 44 1 210 1 349 1 183 2 132 1 154 1 372 1 93 1 94 2 241 2 50 1 56 1 79 1 321 1 59 2 98 1 
32 1 273 1 224 1 105 1 254 1 227 1 258 1 335 1 150 1 338 1 340 2 364 1 10 3 175 1 368 1 347 1 44 1 349 1 183 1 132 1 93 1 94 1 50 1 241 1 75 1 352 1 56 1 59 2 221 1 
249 1 31 1 355 1 167 1 224 4 62 1 227 3 64 1 258 5 191 1 148 4 338 3 66 1 340 6 10 41 176 4 175 8 128 1 11 1 42 1 263 1 44 4 349 3 91 1 183 21 317 1 316 3 132 5 93 3 158 1 51 1 50 4 52 1 23 1 95 1 137 1 186 1 56 4 267 2 321 4 59 20 270 3 325 1 
249 1 31 1 355 1 167 1 224 4 62 1 227 4 64 1 258 5 191 1 148 4 338 4 66 1 340 8 10 38 176 4 175 7 128 2 11 1 42 1 263 1 44 3 349 4 91 1 183 18 317 1 316 3 132 4 93 4 158 1 51 1 50 4 52 1 23 1 95 1 137 1 186 1 56 3 267 2 321 4 59 20 270 3 325 1 
249 1 31 1 355 1 167 1 224 7 227 2 258 8 191 1 148 4 338 2 66 1 340 4 10 52 176 4 175 14 128 1 11 1 42 2 263 1 44 7 349 2 91 1 183 25 317 1 316 2 132 8 93 2 158 1 51 1 50 7 52 1 23 1 95 1 244 2 137 1 186 1 56 7 267 1 321 7 59 27 270 4 325 1 
31 2 355 1 224 3 62 1 227 2 258 3 148 2 338 2 66 1 340 4 10 19 176 2 175 6 11 1 42 1 44 3 349 2 183 10 316 1 132 3 93 2 158 1 50 3 137 1 56 3 140 1 267 1 321 3 59 9 270 1 
31 1 355 1 167 1 224 3 227 3 258 3 148 4 338 3 66 1 340 6 10 26 175 4 176 2 128 2 11 2 263 1 44 2 349 3 91 1 183 12 132 2 316 2 317 1 93 3 158 1 50 3 95 1 137 1 186 1 56 2 267 2 321 2 59 14 270 2 
60 1 189 1 54 1 153 1 171 1 304 1 365 1 157 1 309 1 120 1 
172 1 231 1 
189 1 54 1 289 1 153 1 171 1 182 1 345 1 157 1 309 1 
60 1 189 1 313 1 153 1 157 1 124 1 135 2 278 1 54 1 160 1 235 1 171 1 304 1 246 1 173 1 309 1 120 1 101 1 
60 1 189 1 313 1 153 1 157 1 124 1 135 2 278 1 54 1 160 1 235 1 171 1 304 1 246 1 173 1 309 1 120 1 101 1 
60 1 189 1 313 1 153 1 157 1 124 1 135 2 278 1 54 1 160 1 235 1 171 1 304 1 246 1 173 1 309 1 120 1 101 1 
177 1 21 1 12 1 
177 1 21 1 12 1 
76 1 331 1 
76 1 331 1 21 1 
22 1 29 1 
189 1 61 1 273 2 251 1 201 1 124 1 231 1 335 2 235 1 171 1 173 1 172 1 364 2 309 1 153 1 371 1 157 1 22 1 135 1 54 1 352 2 246 1 187 1 295 1 381 1 29 1 221 2 
177 1 12 1 
76 1 331 1 21 1 
273 2 253 1 330 1 105 1 254 1 225 2 226 1 227 1 107 1 335 2 338 1 340 2 362 1 364 2 10 2 347 1 129 1 210 2 349 1 239 1 179 1 196 1 183 1 155 2 93 1 92 1 377 1 79 1 59 1 98 2 380 1 
210 2 30 1 46 1 222 1 154 1 103 1 225 2 226 1 107 1 243 1 301 2 109 1 302 1 363 1 262 1 343 1 379 1 98 2 188 1 
210 1 30 1 46 1 103 1 225 1 226 1 107 1 243 1 116 1 301 2 109 1 302 1 262 1 343 1 379 1 98 1 188 1 
210 1 156 1 225 1 226 1 229 1 107 1 35 1 79 1 362 1 363 1 261 1 98 1 188 1 209 1 
210 1 30 1 46 1 222 1 103 1 225 1 226 1 107 1 243 1 301 2 109 1 302 1 363 1 262 1 343 1 379 1 98 1 188 1 
369 1 
273 3 250 1 165 1 298 1 254 1 105 1 225 1 227 1 226 1 107 1 335 3 337 1 277 1 338 1 340 2 362 1 364 2 10 1 41 1 210 1 349 1 183 1 196 1 156 1 93 1 75 2 352 2 213 1 79 1 187 1 98 1 221 2 
271 1 272 1 18 2 181 1 168 1 255 1 134 1 138 1 160 2 305 1 174 1 366 1 40 1 
272 1 139 1 160 1 297 1 181 1 305 1 257 1 
271 1 272 1 276 1 207 1 235 1 305 1 173 1 174 1 366 1 45 1 18 1 181 1 134 1 138 1 160 2 142 1 100 1 
271 3 272 7 224 2 225 1 274 2 226 1 107 2 235 5 342 2 112 1 18 12 156 1 160 7 79 6 119 2 353 2 250 1 255 1 168 6 169 3 258 2 260 2 126 2 361 2 37 1 305 1 362 1 173 5 174 6 366 3 39 2 40 2 311 6 210 1 44 2 315 1 181 8 132 2 134 3 50 2 138 3 142 3 322 1 98 1 100 5 
271 2 272 5 167 1 224 2 328 1 255 1 168 5 258 2 149 1 204 1 235 1 5 2 305 2 173 1 174 3 176 1 366 2 40 1 311 5 263 1 44 2 91 1 18 6 181 8 316 1 317 1 132 2 134 2 50 2 95 1 138 2 160 5 142 1 100 1 270 1 
271 1 272 2 273 1 328 1 230 1 258 2 191 1 335 1 5 2 235 1 173 1 364 1 366 1 284 1 14 1 130 1 181 2 132 1 133 1 134 1 51 1 52 1 75 1 138 1 352 1 213 1 214 1 221 1 
271 1 272 1 181 1 134 1 257 1 138 1 139 1 160 1 305 1 366 1 
311 5 272 5 44 2 224 2 18 10 181 5 132 2 168 5 274 1 258 2 50 2 160 5 174 5 
160 1 235 1 305 1 142 1 173 1 100 1 
271 1 190 1 272 1 255 1 225 3 226 1 107 1 35 1 235 2 362 1 173 2 366 2 367 1 40 2 209 1 288 1 210 3 181 2 185 1 156 2 134 2 291 1 319 1 138 2 79 1 142 1 98 3 100 3 121 1 
171 1 68 1 157 1 
171 1 157 1 120 1 113 1 29 1 
171 1 68 1 157 1 
171 1 68 1 157 1 
171 1 307 1 157 1 
171 1 307 1 157 1 
171 1 307 1 157 1 
171 1 157 1 
189 1 54 1 
249 1 227 1 230 1 258 3 191 2 338 1 66 1 340 2 10 15 176 1 175 5 349 1 183 7 132 3 316 1 317 1 93 1 51 2 52 2 23 1 56 1 321 4 59 8 270 1 325 1 
249 1 224 1 227 2 230 1 258 4 191 2 66 1 338 2 340 4 10 18 176 2 175 6 42 1 349 2 183 8 132 3 316 1 317 1 93 2 51 2 50 1 52 2 23 1 56 2 321 4 27 1 59 10 270 1 325 1 
249 1 167 1 224 2 227 3 230 1 258 5 191 2 338 3 66 1 340 6 10 26 176 1 175 7 128 1 263 1 44 2 349 3 91 1 183 13 316 1 317 1 132 5 93 3 51 2 50 2 52 2 23 1 95 1 56 2 321 5 27 1 59 13 270 1 325 1 
249 1 167 1 224 2 227 3 230 1 258 5 191 2 338 3 66 1 340 6 10 24 176 1 175 9 128 1 263 1 44 1 349 3 91 1 183 10 316 1 317 1 132 4 93 3 51 2 50 2 52 2 23 1 95 1 56 4 321 5 27 1 59 14 270 1 325 1 
249 1 227 1 230 1 258 3 191 2 338 1 66 1 340 2 10 15 176 1 175 5 349 1 183 7 132 3 316 1 317 1 93 1 51 2 52 2 23 1 56 1 321 4 59 8 270 1 325 1 
167 1 224 2 227 1 258 2 338 1 66 1 340 2 10 12 176 1 175 2 263 1 44 2 349 1 91 1 183 6 316 1 317 1 132 2 93 1 50 2 95 1 56 1 321 1 59 6 270 1 
249 1 167 1 224 2 227 4 230 1 258 5 191 2 338 4 66 1 340 8 10 25 176 1 175 7 128 2 263 1 44 1 349 4 91 1 183 11 316 1 317 1 132 4 93 4 51 2 50 2 52 2 23 1 95 1 56 2 321 5 27 1 59 14 270 1 325 1 
167 1 224 3 62 1 227 4 258 3 66 1 338 4 340 8 10 16 176 1 175 6 128 2 263 1 44 2 349 4 91 1 183 7 316 1 317 1 132 2 93 4 50 3 95 1 56 3 321 3 59 9 270 1 
183 4 132 1 258 1 51 1 52 3 191 3 23 2 56 3 10 7 321 3 175 6 59 3 325 1 
249 1 167 1 224 2 62 1 227 4 230 1 258 5 191 2 66 1 338 4 340 8 10 25 176 1 175 7 128 2 263 1 44 1 349 4 91 1 183 11 316 1 317 1 132 4 93 4 51 2 50 2 52 2 23 1 95 1 56 2 321 5 59 14 270 1 325 1 
249 1 227 2 230 1 258 3 191 2 338 2 340 4 10 17 175 7 128 1 349 2 183 8 132 3 93 2 51 2 52 2 23 1 56 3 321 4 59 9 325 1 
249 1 297 1 183 2 132 1 258 1 51 1 52 1 191 1 23 1 321 2 10 5 175 2 59 3 325 1 
44 1 349 1 224 1 183 2 132 1 93 1 227 1 258 1 50 1 338 1 340 2 56 1 321 1 10 4 175 2 27 1 59 2 
44 1 224 1 183 4 132 1 316 1 258 1 50 1 56 1 321 1 10 7 176 2 59 3 175 2 270 1 42 1 
249 1 224 2 227 1 230 1 258 5 191 2 338 1 340 2 10 25 176 2 175 7 128 1 285 1 42 1 44 2 349 1 183 12 132 5 93 1 51 2 50 2 52 2 23 1 244 1 56 2 321 5 59 13 270 2 325 1 
183 1 10 1 176 1 
10 1 59 1 270 1 
44 1 349 1 224 1 183 3 132 1 274 1 227 1 93 1 258 1 50 1 338 1 340 2 56 1 10 6 321 2 27 1 59 3 175 3 
167 1 224 2 227 1 258 2 338 1 66 1 340 2 10 12 176 1 175 2 263 1 44 2 349 1 91 1 183 6 316 1 317 1 132 2 93 1 50 2 95 1 56 1 321 1 59 6 270 1 
183 3 132 1 258 1 51 1 52 1 191 1 56 1 10 6 321 1 59 3 175 2 
349 1 19 1 183 2 93 1 227 1 191 1 52 1 23 1 338 1 56 1 340 2 321 1 10 3 59 1 175 2 128 1 325 1 
349 1 183 5 132 2 227 1 93 1 230 1 258 2 51 1 52 2 191 2 338 1 66 1 340 2 56 2 321 3 10 10 175 5 59 5 
349 1 93 1 227 1 258 1 50 1 66 1 338 1 340 2 56 1 10 2 59 2 175 1 
44 1 349 1 224 1 183 2 132 1 93 1 227 1 258 1 50 1 66 1 338 1 340 2 56 1 321 1 10 4 175 2 59 2 
349 3 19 1 62 1 183 2 93 3 227 3 52 1 191 1 66 1 338 3 340 6 56 1 10 3 321 1 175 2 59 1 128 1 
249 1 224 2 62 1 227 4 230 1 258 5 191 2 338 4 66 1 340 8 10 31 176 3 175 9 128 1 70 1 44 2 349 4 183 15 316 1 132 5 93 4 51 2 50 2 52 2 23 1 56 4 321 5 27 1 59 16 323 1 270 3 325 1 354 1 
335 1 117 1 273 1 102 1 187 1 364 1 299 1 
273 1 264 1 131 1 102 1 327 1 356 1 299 1 335 1 117 1 187 1 364 1 13 1 
210 1 297 1 79 1 362 1 225 1 156 1 226 1 98 1 107 1 209 1 35 1 
210 1 273 2 250 1 165 1 298 1 156 1 225 1 226 1 332 1 107 1 335 2 352 1 79 1 362 1 187 1 364 1 98 1 221 1 
190 1 273 2 250 2 165 1 298 1 225 1 83 1 226 1 147 1 332 1 107 1 335 2 362 2 364 2 284 2 210 1 48 1 314 1 352 2 118 1 79 3 187 1 98 1 221 1 
190 1 273 2 250 2 298 1 225 1 83 1 226 1 147 1 332 1 107 1 335 2 362 2 282 1 364 2 284 2 210 1 48 1 314 1 352 2 118 1 79 3 187 1 98 1 221 1 
190 1 273 1 225 1 169 1 335 1 235 1 305 1 173 1 364 1 284 1 130 1 210 1 133 1 75 1 352 1 213 1 214 1 160 1 268 1 79 1 98 1 221 1 
190 1 273 1 250 1 225 1 226 1 169 1 107 1 335 1 260 1 361 1 235 2 362 1 305 1 173 2 364 1 284 1 130 1 210 1 48 1 314 1 133 1 75 1 352 1 213 1 214 1 160 1 79 4 353 1 98 1 100 1 221 1 
210 1 225 1 226 1 98 1 107 1 286 1 
210 7 348 1 250 1 154 1 155 1 197 1 203 1 156 2 225 7 226 2 107 3 243 1 341 1 281 1 362 2 79 3 58 1 98 6 112 1 286 1 380 1 
273 2 105 2 225 1 227 2 226 1 230 1 147 1 332 1 107 1 191 2 277 1 335 2 338 2 340 4 10 13 284 1 347 1 349 2 239 1 154 1 23 1 352 1 79 1 249 1 250 1 165 1 254 2 298 1 258 3 206 1 362 1 364 1 175 5 41 1 210 1 183 6 132 3 372 1 93 2 51 2 52 2 56 1 187 3 321 4 59 7 98 1 221 1 325 1 
271 2 272 1 225 1 257 1 169 1 260 1 235 3 126 1 361 1 305 1 173 3 366 2 367 1 39 1 210 1 181 1 371 1 156 1 134 2 138 2 139 1 160 1 79 2 142 1 119 1 353 1 98 1 100 2 
210 2 250 1 154 1 225 2 226 1 107 2 260 1 37 1 362 1 79 2 98 2 112 1 286 1 
210 4 240 1 154 1 156 1 225 4 226 1 107 1 35 1 362 1 79 1 98 4 69 1 209 1 
190 1 210 2 250 1 225 2 226 1 107 2 341 1 362 1 79 1 320 1 111 1 58 1 98 2 310 1 
301 1 210 1 302 1 46 1 225 1 156 1 226 1 379 1 98 1 107 1 
210 2 179 1 79 1 362 1 154 1 225 2 226 1 98 2 107 1 380 1 243 1 
190 1 210 5 240 1 154 1 156 1 225 5 197 1 226 2 35 1 107 2 281 1 362 2 79 3 98 4 209 1 380 1 
190 1 210 5 240 1 154 1 156 1 225 5 226 2 35 1 107 2 234 1 281 1 362 2 79 3 98 4 209 1 380 1 
210 1 273 2 250 1 298 1 156 1 225 1 226 1 332 1 107 1 335 2 352 1 79 1 362 1 282 1 187 1 364 1 98 1 221 1 
190 1 210 1 348 1 250 1 225 1 226 1 107 2 341 1 362 1 79 1 58 1 98 1 112 1 
273 1 253 1 330 1 259 1 335 1 377 1 97 1 364 1 346 1 
259 1 237 1 256 1 
122 1 259 1 97 1 187 1 346 1 
122 2 371 1 83 1 256 1 259 1 300 1 118 1 360 1 160 1 235 2 161 1 97 2 237 1 305 1 173 2 187 1 353 1 284 1 346 2 
16 3 17 1 20 1 49 1 334 1 358 3 199 1 217 1 344 1 143 1 87 1 
84 1 7 1 143 1 28 1 
17 1 143 1 
297 1 17 1 199 1 143 1 
16 1 17 1 199 1 217 1 143 1 358 1 87 1 
16 1 178 1 25 1 
351 1 16 3 86 1 17 1 57 1 199 1 20 2 49 1 217 1 143 1 358 3 87 1 
43 1 16 2 17 1 199 1 217 1 143 1 334 1 358 2 87 1 
301 1 16 1 208 1 262 1 49 1 217 1 379 1 143 1 28 1 358 1 87 1 
16 1 17 1 49 1 217 1 143 1 358 1 87 1 
16 1 17 2 199 1 49 1 217 1 358 1 87 1 
16 2 17 1 49 1 358 2 336 1 77 1 269 1 217 2 143 1 87 2 
84 1 312 1 16 3 17 1 199 1 49 1 344 1 217 1 143 2 28 1 334 2 358 3 87 1 
16 2 46 1 17 1 49 1 103 1 358 2 334 1 301 2 199 1 294 1 262 1 217 1 379 1 143 1 87 1 
84 1 43 1 16 4 17 1 199 1 49 1 217 2 74 1 143 2 28 1 334 2 358 4 87 2 
16 1 17 1 199 1 49 1 217 1 143 1 358 1 87 1 
16 4 17 2 20 1 334 2 358 4 84 1 351 1 57 1 7 1 199 2 217 1 28 1 143 3 87 1 
16 2 17 1 2 1 49 1 358 2 334 1 136 1 205 1 199 1 217 1 143 1 87 1 
16 3 17 1 20 2 49 1 358 3 350 1 351 2 57 1 199 1 217 1 143 1 87 1 
296 1 159 1 143 2 373 2 
16 1 9 1 49 1 217 1 358 1 87 1 
16 2 17 1 199 1 49 1 344 1 217 1 143 1 334 1 358 2 87 1 
81 1 
16 1 17 1 199 1 49 1 217 1 143 1 358 1 87 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 79 (57,299) (57,299) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 79 (57,299) (57,299) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 79 (57,299) (57,299) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 79 (57,299) (57,299) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 79 (93,202) (93,202) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 306 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 306 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (86,162) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (86,162) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (72,124) (72,124) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 18 46 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 129 109 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 129 109 228 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 129 109 228 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 129 109 228 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 18 46 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
299 1 57 1 79 1 183 1 
299 1 57 1 79 1 183 1 
299 1 57 1 79 1 183 1 
299 1 57 1 79 1 183 1 
66 1 183 1 
93 1 332 1 202 1 231 1 79 1 183 1 
122 1 183 1 
306 1 183 1 
306 1 183 1 
127 1 29 1 80 1 
123 2 335 1 80 1 
208 2 154 1 348 2 34 2 168 1 112 2 182 2 188 2 
208 2 42 1 65 1 207 1 21 1 210 1 348 2 112 2 25 1 24 2 163 1 70 1 117 1 327 1 256 2 168 1 120 1 189 1 188 2 192 2 48 1 149 1 34 3 78 1 96 1 98 1 53 1 15 2 178 2 221 1 38 1 154 1 102 1 365 1 286 1 182 3 269 1 
208 1 348 1 34 1 168 1 112 1 322 1 182 1 188 1 369 1 158 1 
260 1 34 1 87 1 195 1 95 1 290 1 322 1 80 1 127 1 39 1 81 1 343 1 182 1 188 1 
208 1 348 1 260 2 34 1 87 1 112 1 195 1 290 1 322 1 80 1 127 1 39 1 81 2 182 1 188 1 
212 1 81 1 260 1 114 1 294 1 
20 1 127 1 212 1 81 2 260 2 80 1 174 1 294 1 
81 1 260 1 294 1 
208 1 260 1 348 1 34 1 112 1 322 1 212 1 81 1 169 1 168 1 182 1 188 1 369 1 158 1 
80 1 
127 1 212 1 81 2 260 2 333 1 80 1 174 1 294 1 
260 5 350 1 35 1 150 1 351 2 253 1 323 1 80 1 200 1 294 2 164 1 127 1 212 2 81 5 41 2 143 1 270 1 174 1 248 2 
154 1 29 1 
208 1 348 1 88 1 34 2 112 1 27 1 154 2 182 2 188 2 
146 1 211 1 131 1 
65 1 207 1 21 1 34 1 24 1 98 1 15 1 178 1 70 1 38 1 128 1 154 1 286 1 120 1 182 1 269 1 
207 1 65 1 21 1 348 1 34 2 112 1 98 1 24 1 15 1 178 1 70 1 38 1 364 1 28 1 286 1 120 1 131 1 182 2 269 1 188 1 
303 1 208 1 348 4 349 1 34 5 112 4 95 1 27 1 154 1 364 2 28 1 340 1 182 5 188 5 
239 1 348 2 34 2 112 2 322 1 182 2 188 2 158 1 
208 1 154 1 364 1 348 3 34 3 112 3 182 3 188 3 
348 1 34 1 112 1 322 1 182 1 188 1 158 1 
208 1 27 1 348 1 88 1 34 1 112 1 322 1 182 1 188 1 
207 1 65 1 208 2 21 1 210 1 348 3 87 1 112 3 290 1 322 1 25 1 24 1 163 1 70 1 117 1 254 1 27 1 256 2 28 1 168 1 120 1 189 1 188 3 192 1 48 1 50 1 260 1 34 4 195 1 78 1 96 1 98 1 53 1 15 1 178 1 221 1 38 1 39 1 154 1 364 1 81 1 286 1 182 4 269 1 
303 1 154 1 348 1 364 1 34 2 112 1 95 1 182 2 188 2 
208 1 260 1 348 3 34 3 87 1 112 3 195 1 322 1 290 1 13 1 80 1 39 1 254 1 27 1 81 1 364 2 28 1 182 3 188 3 
208 1 348 2 34 2 211 1 112 2 27 1 364 1 182 2 131 1 188 2 
65 1 207 1 21 1 34 1 24 1 98 1 15 1 178 1 70 1 38 1 154 1 286 1 120 1 182 1 269 1 
207 1 21 1 34 1 24 1 98 1 52 1 15 1 178 1 38 1 154 1 367 1 286 1 120 1 182 1 269 1 
319 1 210 1 211 2 25 1 352 1 233 1 163 1 117 1 214 1 327 2 256 2 171 1 358 1 189 1 48 1 192 4 146 2 53 2 54 1 100 1 130 1 345 1 131 2 132 1 
239 1 348 1 34 1 195 1 112 1 322 1 182 1 188 1 
257 1 186 1 
257 1 186 1 
89 1 144 1 
89 1 144 1 
89 1 144 1 
257 1 186 1 9 1 
257 1 186 1 9 1 
89 1 126 1 255 1 45 1 257 2 186 2 144 1 
257 1 236 1 186 1 
257 1 186 1 9 1 
285 1 257 1 186 1 
285 1 257 1 186 1 
285 1 257 1 186 1 
251 1 85 1 348 2 112 2 276 1 184 1 5 1 141 1 257 1 236 1 186 1 188 2 260 1 34 2 16 1 337 1 266 1 154 1 81 1 267 1 368 1 182 2 204 1 60 1 
238 1 251 2 260 2 161 1 276 2 184 1 80 1 139 1 337 2 5 2 104 1 255 1 81 2 257 2 328 2 246 1 368 3 186 2 19 1 
326 1 274 1 231 1 
326 1 332 1 231 1 
332 1 274 2 360 1 231 3 84 1 99 1 
40 1 332 1 274 1 360 1 231 2 84 1 
332 1 274 1 360 1 231 2 84 2 
85 1 316 1 350 1 351 1 253 2 233 1 294 1 164 3 212 4 214 1 141 1 170 1 173 2 174 1 123 3 281 1 359 1 260 5 94 2 335 1 80 2 54 1 199 1 265 1 266 1 127 1 81 5 41 1 132 1 248 1 159 2 62 1 
316 1 350 1 351 2 67 1 114 5 253 6 232 1 233 3 294 6 164 8 212 7 214 3 165 1 141 4 170 2 173 6 174 1 123 9 359 2 260 9 335 3 361 1 262 5 80 5 54 3 199 3 363 1 127 1 81 9 41 2 270 1 132 3 248 2 61 1 159 6 
351 1 253 2 233 1 164 3 212 2 214 1 141 1 170 1 173 2 281 1 123 4 359 1 260 3 94 1 335 2 80 3 54 1 199 1 127 1 81 3 41 1 270 1 132 1 248 1 62 1 159 2 
351 1 67 1 253 4 233 2 164 5 212 3 214 2 141 2 170 1 173 4 123 7 281 1 359 1 260 4 94 2 335 3 361 1 80 4 54 2 199 2 127 1 81 4 41 1 270 1 132 2 248 1 61 1 159 4 62 1 
269 1 29 1 37 1 
320 1 269 1 
224 1 
286 1 98 1 269 1 
153 1 269 1 
98 1 269 1 
179 1 147 1 286 1 98 1 269 3 37 2 
192 7 10 1 92 1 196 2 23 1 352 3 53 3 198 1 336 1 233 1 69 1 54 1 278 1 327 4 297 1 130 2 142 1 
192 7 10 1 92 1 196 2 23 1 352 3 53 3 198 1 336 1 233 1 69 1 54 1 278 1 327 4 297 1 130 2 142 1 
192 7 10 1 92 1 196 2 23 1 352 3 53 3 198 1 336 1 233 1 69 1 54 1 278 1 327 4 297 1 130 2 142 1 249 1 
317 1 210 1 23 1 352 10 69 1 163 1 233 4 278 1 117 1 213 1 214 3 256 2 327 16 297 2 119 1 300 1 6 1 142 5 189 1 30 4 192 31 10 1 148 1 92 2 196 3 53 15 336 2 198 2 199 3 54 4 152 1 284 3 130 5 132 3 
317 1 210 2 23 1 352 4 233 1 163 2 69 1 278 1 117 2 256 4 327 5 297 1 142 1 189 2 192 9 92 1 196 2 336 1 198 1 53 4 54 1 219 1 130 3 107 1 
280 1 311 1 24 1 15 1 178 1 183 1 
217 1 135 1 86 1 273 1 77 1 12 2 24 1 15 1 178 1 234 1 223 1 280 1 140 1 82 2 
234 1 217 1 135 1 280 1 77 1 82 1 24 1 12 1 162 1 15 1 178 1 
124 1 21 1 273 1 77 2 125 1 12 1 24 1 15 1 178 1 223 1 280 2 140 1 82 1 72 1 
234 1 280 1 24 1 15 1 178 1 183 1 
193 1 
21 1 260 1 350 1 351 1 24 1 15 1 178 1 294 1 164 1 81 1 41 1 170 1 18 1 46 1 248 1 
87 1 290 1 322 1 353 1 294 2 188 1 237 1 174 1 175 1 260 3 34 1 195 1 95 1 333 1 14 1 39 1 81 3 343 1 312 1 245 1 182 1 59 2 
87 1 290 1 322 1 294 1 188 1 237 1 174 1 175 1 260 3 34 1 195 1 95 1 333 1 14 1 80 1 39 1 127 1 81 3 343 1 312 1 245 1 182 1 346 1 59 3 
87 1 290 1 322 1 353 1 294 2 188 1 237 1 174 1 75 1 175 1 260 3 34 1 195 1 95 1 333 1 14 1 80 1 39 1 127 1 81 3 343 1 312 1 245 1 182 1 346 1 59 3 
205 1 350 1 87 1 351 1 290 1 322 1 253 1 292 1 353 4 294 7 164 1 356 2 167 1 188 1 237 1 174 3 74 1 75 4 175 1 260 5 34 1 218 2 195 1 304 1 95 1 333 1 335 2 362 1 14 1 80 5 220 1 127 5 39 1 81 5 41 1 343 1 312 1 245 1 182 1 157 2 346 4 288 2 248 1 59 6 
87 1 322 1 91 1 237 1 188 1 195 1 95 1 335 2 14 1 343 1 245 1 157 2 346 2 59 4 248 1 288 2 350 1 290 1 351 1 253 1 353 2 294 4 164 1 356 2 174 2 123 2 75 2 175 1 260 4 34 1 218 2 304 1 362 1 80 2 39 1 127 1 81 4 41 1 312 1 182 1 
205 1 87 1 350 1 290 1 322 1 351 1 253 1 353 2 292 1 294 4 164 1 356 2 167 1 188 1 237 1 174 2 75 2 175 1 260 4 34 1 218 2 195 1 304 1 95 1 335 2 362 1 14 1 80 1 127 1 39 1 81 4 41 1 343 1 312 1 245 1 182 1 346 2 157 2 288 2 59 4 248 1 
205 1 87 1 350 1 290 1 322 1 351 1 253 1 353 2 292 1 294 4 164 1 356 2 167 1 188 1 237 1 174 2 75 2 175 1 260 4 34 1 218 2 195 1 304 1 95 1 335 2 362 1 14 1 80 1 127 1 39 1 81 4 41 1 343 1 312 1 245 1 182 1 346 2 157 2 288 2 59 4 248 1 
205 1 318 1 87 1 350 1 290 1 322 1 351 1 90 1 253 1 26 1 353 2 294 4 164 1 356 2 8 2 188 1 237 1 174 2 75 2 123 2 175 1 260 4 34 1 195 1 95 1 362 1 14 1 80 1 151 2 127 1 39 1 81 4 41 1 343 1 312 1 245 1 182 1 346 2 288 2 59 4 248 1 
205 1 350 1 87 1 351 1 290 1 322 1 253 1 353 3 292 1 294 5 164 1 356 2 167 1 188 1 237 1 174 2 75 3 175 1 260 4 34 1 218 2 195 1 304 1 95 1 335 2 362 1 14 1 80 1 220 1 127 1 39 1 81 4 41 1 343 1 312 1 245 1 182 1 157 2 346 3 288 2 248 1 59 5 
205 1 350 1 87 1 351 1 290 1 322 1 253 1 353 3 292 1 294 5 164 1 356 2 167 1 188 1 237 1 174 2 75 3 175 1 260 4 34 1 218 2 195 1 304 1 95 1 335 2 362 1 14 1 80 1 220 1 127 1 39 1 81 4 41 1 343 1 312 1 245 1 182 1 157 2 346 3 288 2 248 1 59 5 
87 1 322 1 90 1 91 1 8 2 237 1 188 1 195 1 95 1 14 1 151 2 343 1 245 1 346 2 59 4 248 1 288 2 350 1 290 1 351 1 253 1 353 2 294 4 164 1 356 2 174 2 123 2 75 2 175 1 260 4 34 1 362 1 80 1 39 1 127 1 81 4 41 1 312 1 182 1 
319 1 210 1 211 1 25 1 23 1 352 2 69 1 163 1 233 1 278 1 117 1 256 2 327 3 297 1 29 1 189 1 48 1 192 6 146 1 92 1 196 1 53 3 54 1 154 2 130 2 131 1 
315 1 22 1 210 2 211 4 252 1 25 1 352 2 163 2 233 2 117 2 214 1 256 4 327 8 142 1 189 2 30 3 259 1 48 2 192 14 146 11 148 1 78 1 261 1 53 6 199 2 54 1 152 1 284 3 154 1 365 1 130 1 131 11 132 2 
315 1 207 1 65 1 21 1 210 1 348 1 211 1 112 1 24 1 25 1 163 1 70 1 117 1 256 2 327 1 28 1 120 1 121 1 189 1 188 1 31 1 48 1 192 2 34 2 78 1 98 1 97 1 15 1 53 1 178 1 38 1 128 1 154 1 364 1 365 1 286 1 182 2 269 1 
134 1 315 1 233 3 278 1 234 1 327 10 142 4 7 1 188 1 189 3 48 3 192 20 146 7 92 1 196 1 96 2 98 2 53 10 15 3 54 3 199 2 154 2 341 1 286 2 65 2 207 2 21 1 348 1 210 3 112 1 211 7 23 1 24 3 25 3 352 8 69 1 163 3 70 2 117 3 296 2 214 2 256 6 28 1 166 2 297 1 120 2 172 2 34 3 78 1 178 3 38 2 364 1 365 1 130 4 181 2 182 3 131 7 269 2 132 2 
319 1 207 2 289 1 21 2 348 1 210 2 112 1 137 1 24 8 25 2 163 2 234 1 117 2 256 4 327 1 120 2 188 1 189 2 190 1 48 2 192 2 34 1 78 1 98 2 15 7 53 1 178 8 180 1 102 2 339 1 364 1 365 1 56 1 311 1 156 1 182 1 269 3 58 1 108 1 
315 1 208 1 348 1 210 1 211 1 112 1 25 1 352 1 163 1 233 1 117 1 27 1 214 1 256 2 327 1 189 1 188 1 146 1 48 1 192 3 34 1 283 1 53 2 199 1 54 1 130 1 131 1 182 1 132 1 
146 1 192 2 319 1 48 1 210 1 211 1 25 1 352 1 163 1 233 1 117 1 256 2 327 2 142 1 131 1 358 1 132 1 189 1 
146 1 192 2 319 1 48 1 210 1 211 1 25 1 352 1 53 2 163 1 54 1 100 1 117 1 214 1 256 2 130 1 131 1 189 1 
319 1 210 1 211 2 25 1 352 2 233 1 163 1 117 1 214 1 327 2 256 2 142 1 189 1 48 1 192 4 146 2 53 2 199 1 54 1 130 1 131 2 132 1 
146 1 192 2 289 1 48 1 210 1 211 1 25 1 352 1 163 1 233 1 117 1 256 2 327 2 142 1 131 1 358 1 132 1 189 1 
146 1 192 2 289 1 48 1 210 1 211 1 25 1 352 1 53 2 163 1 54 1 100 1 117 1 214 1 256 2 130 1 131 1 189 1 
289 1 210 1 211 2 25 1 352 2 233 1 163 1 117 1 214 1 327 2 256 2 142 1 189 1 48 1 192 4 146 2 53 2 199 1 54 1 130 1 131 2 132 1 
210 1 211 2 25 1 352 2 233 1 163 1 117 1 214 1 327 2 256 2 142 1 189 1 192 4 48 1 146 2 53 2 199 1 54 1 130 1 131 2 132 1 
207 1 65 1 21 1 210 1 24 1 25 1 163 1 70 1 117 1 327 1 256 2 120 1 189 1 192 2 48 1 34 1 96 1 78 1 98 1 15 1 53 1 178 1 38 1 154 1 365 1 286 1 182 1 269 1 
207 1 21 1 210 1 24 1 25 1 163 1 117 1 327 1 256 2 120 1 189 1 192 2 48 1 34 1 78 1 98 1 52 1 15 1 53 1 178 1 38 1 154 1 365 1 286 1 367 1 182 1 269 1 133 1 
315 1 210 1 211 2 25 1 352 2 233 1 163 1 117 1 214 1 327 2 256 2 142 1 189 1 48 1 192 4 146 2 53 2 199 1 54 1 130 1 131 2 132 1 
207 1 65 1 210 1 211 2 24 1 25 1 352 2 233 1 163 1 70 1 296 1 117 1 214 1 327 2 256 2 142 1 120 1 189 1 146 2 192 4 48 1 34 1 96 1 98 1 53 2 15 1 178 1 54 1 199 1 38 1 311 1 286 1 130 1 131 2 182 1 132 1 269 1 
315 1 208 1 348 1 210 1 112 1 211 1 25 1 352 1 163 1 233 1 117 1 214 1 27 1 256 2 327 2 142 1 189 1 188 1 48 1 192 3 146 1 34 1 53 1 54 1 199 1 182 1 131 1 132 1 250 1 
63 1 228 1 210 2 68 1 352 6 163 2 233 3 115 1 117 2 214 3 256 4 327 9 235 2 142 3 187 2 189 2 30 2 192 19 148 1 53 10 219 1 199 3 54 3 152 1 284 1 344 1 287 1 130 3 132 3 109 1 
317 2 228 1 210 3 352 2 68 1 163 3 233 2 3 1 115 2 117 3 214 1 256 6 327 10 235 2 142 1 301 1 189 3 30 2 191 1 192 18 148 2 242 1 53 8 54 1 219 1 199 2 284 2 106 1 129 1 130 1 132 2 109 2 
63 1 317 1 228 1 210 3 68 1 352 5 163 3 233 4 3 1 115 2 117 3 214 4 256 6 327 15 235 3 142 3 187 1 301 1 189 3 30 4 191 1 192 32 148 3 242 1 53 17 219 1 199 4 54 4 152 1 284 3 310 1 106 1 344 1 129 1 130 2 132 4 109 1 
63 1 317 2 228 1 210 4 68 1 352 6 163 4 233 4 3 1 115 2 117 4 214 3 256 8 327 16 235 3 142 3 187 1 301 1 189 4 30 4 191 1 192 31 148 3 242 1 53 15 219 1 199 4 54 3 152 1 284 3 310 1 106 1 344 1 129 1 130 3 132 4 109 1 
317 1 228 1 210 2 23 1 252 2 68 1 352 11 69 1 163 2 233 7 278 1 3 1 115 1 117 2 214 5 256 4 327 23 297 1 235 2 142 5 301 1 189 2 30 4 191 1 192 42 148 2 92 1 196 1 242 1 53 19 219 1 199 6 54 6 152 2 284 4 106 1 129 1 130 6 132 6 109 1 
337 1 251 1 5 1 255 1 161 1 257 1 276 1 291 1 186 1 19 1 
236 1 204 1 
347 1 337 1 251 1 5 1 241 1 257 1 276 1 186 1 354 1 
264 1 9 1 
279 1 285 1 126 1 
238 1 251 1 260 1 161 1 276 1 184 1 80 1 139 1 337 1 5 1 255 1 81 1 257 1 328 1 246 1 368 2 186 1 19 1 
238 1 251 1 260 1 161 1 276 1 184 1 80 1 139 1 337 1 5 1 255 1 81 1 257 1 328 1 246 1 368 2 186 1 19 1 
238 1 251 1 260 1 161 1 276 1 184 1 80 1 139 1 337 1 5 1 255 1 81 1 257 1 328 1 246 1 368 2 186 1 19 1 
264 1 9 1 126 1 
264 1 9 1 126 1 
279 1 285 1 
279 1 285 1 126 1 
16 1 60 1 
251 1 85 1 348 2 112 2 276 1 139 1 293 1 212 1 5 1 141 1 328 1 257 1 236 1 186 1 188 2 260 1 34 2 16 1 337 1 266 1 154 1 81 1 267 1 368 1 182 2 204 1 60 1 
315 1 207 1 321 1 210 1 43 1 24 2 25 1 163 1 117 1 256 2 327 1 357 1 215 1 120 1 189 1 188 2 190 1 48 1 192 2 282 1 34 2 78 1 98 1 53 1 15 2 178 2 102 2 365 1 156 1 182 2 269 1 
258 1 207 1 332 1 274 1 231 2 24 2 1 1 15 2 243 1 178 2 307 1 99 1 234 1 326 1 366 1 311 1 225 1 120 1 32 1 
258 1 207 1 332 1 274 1 231 2 24 1 1 1 15 1 178 1 99 1 234 1 326 1 71 1 366 1 225 1 120 1 32 1 
207 1 21 1 137 1 98 1 24 1 15 1 243 1 178 1 244 1 366 1 120 1 269 1 58 1 330 1 
258 1 207 1 332 1 274 1 231 2 24 1 1 1 15 1 243 1 178 1 307 1 99 1 234 1 326 1 366 1 225 1 120 1 32 1 
160 1 
164 1 127 1 35 1 150 1 253 1 29 1 80 1 
350 1 351 1 253 1 294 1 164 1 174 1 123 1 260 1 218 1 304 1 335 1 80 2 127 1 81 1 41 1 157 1 248 1 
272 1 320 3 44 1 233 2 147 1 49 2 150 1 197 2 98 3 335 6 15 3 199 2 54 2 55 1 153 2 342 2 286 3 248 4 159 6 207 4 21 1 111 1 350 4 113 2 351 4 24 3 253 8 294 5 164 9 214 2 166 2 120 3 170 2 174 3 173 6 73 2 123 12 260 5 35 1 178 3 80 8 263 1 37 2 127 2 39 2 308 2 81 5 41 4 311 1 226 2 313 2 83 1 269 10 132 2 
350 2 351 2 253 4 233 2 294 1 3 1 164 7 214 2 301 1 174 1 173 5 30 1 123 6 191 1 148 1 260 1 242 1 335 3 80 4 199 2 54 2 284 1 127 1 308 1 81 1 41 2 106 1 314 1 132 2 248 2 159 5 
208 1 348 1 350 1 112 1 322 1 351 1 23 1 253 2 233 2 164 2 167 1 169 1 168 1 297 1 188 1 92 1 260 1 34 1 197 1 305 1 54 1 308 2 81 1 41 1 182 1 248 1 369 1 158 1 
350 1 35 1 150 1 351 1 253 1 80 1 164 1 127 1 41 1 248 1 
123 10 197 1 335 5 253 5 233 2 80 5 199 2 54 2 164 5 308 2 214 2 166 1 132 2 173 5 159 5 
127 1 81 1 260 1 80 1 174 1 294 1 
21 1 350 1 351 1 24 1 15 1 178 1 294 1 55 1 164 1 41 1 170 1 46 1 18 1 248 1 
208 2 65 1 207 1 21 1 210 1 348 2 112 2 24 1 25 1 163 1 70 1 117 1 256 2 168 1 120 1 188 2 189 1 192 1 48 1 34 3 78 1 96 1 98 1 53 1 15 1 178 1 221 1 38 1 154 1 286 1 182 3 269 1 
123 4 350 1 196 1 351 1 335 2 253 2 80 4 164 1 127 2 41 1 170 1 83 1 173 2 248 1 159 2 
337 1 276 1 329 1 
337 1 276 1 329 1 
337 1 176 1 276 1 19 1 16 1 
337 1 276 1 329 1 
337 1 276 1 101 1 
337 1 276 1 101 1 
337 1 276 1 101 1 
337 1 276 1 
257 1 186 1 
317 1 192 8 210 2 92 1 196 1 23 1 352 3 53 4 233 1 163 2 69 1 54 1 278 1 117 2 327 4 256 4 297 1 130 2 142 1 189 2 
192 6 92 1 196 1 23 1 352 2 53 3 69 1 233 1 54 1 278 1 327 3 297 1 130 2 29 1 
192 4 210 1 230 1 352 2 53 2 163 1 233 1 54 1 199 1 117 1 214 1 256 2 327 2 130 1 142 1 132 1 189 1 
192 7 148 1 352 2 53 4 233 1 54 1 199 1 152 1 284 1 214 1 327 3 130 1 142 1 132 1 30 2 
317 2 64 1 210 2 23 1 252 1 352 9 69 1 233 3 163 2 278 1 117 2 214 2 327 11 256 4 297 2 142 4 189 2 30 2 192 23 259 1 92 2 196 1 53 12 199 2 54 3 152 1 284 2 130 5 132 2 
192 1 53 1 30 1 
192 1 284 1 327 1 
192 6 210 1 230 1 352 3 53 3 163 1 233 1 199 1 54 1 117 1 214 1 256 2 327 3 166 1 130 2 142 1 132 1 189 1 
210 1 352 2 163 1 233 2 3 1 117 1 214 2 256 2 327 6 142 1 301 1 189 1 30 1 192 12 191 1 148 1 242 1 53 6 219 1 199 2 54 2 284 1 106 1 130 1 132 2 
192 6 92 1 23 1 352 2 53 3 233 1 54 1 327 3 297 1 130 1 142 1 
64 1 317 1 192 3 92 1 210 1 352 2 53 2 69 1 163 1 278 1 117 1 327 1 256 2 297 1 130 1 142 1 189 1 
192 10 210 1 92 2 305 1 23 1 352 5 53 5 163 1 233 2 219 1 54 2 117 1 256 2 327 5 297 2 130 3 142 2 189 1 
192 2 210 1 352 1 163 1 233 1 219 1 117 1 256 2 327 2 142 1 132 1 189 1 
192 4 210 1 352 2 53 2 163 1 233 1 54 1 219 1 199 1 117 1 214 1 256 2 327 2 130 1 142 1 132 1 189 1 
63 1 317 1 64 1 192 3 210 3 92 1 352 2 53 2 163 3 219 1 117 3 256 6 327 1 297 1 130 1 142 1 189 3 
63 1 64 1 317 2 210 5 230 1 23 2 352 12 69 1 163 5 233 5 278 1 213 1 117 5 214 3 256 10 327 16 297 3 119 1 6 1 142 5 189 5 30 4 192 34 148 1 92 3 196 1 53 18 219 1 199 3 54 5 152 1 284 3 130 7 132 3 
210 1 23 1 352 2 233 1 163 1 69 1 278 1 117 1 256 2 327 4 297 1 189 1 30 1 192 8 148 1 92 1 196 1 242 1 53 4 54 1 219 1 284 1 130 2 
210 2 230 1 23 1 352 3 69 1 163 2 233 2 278 1 117 2 256 4 327 6 297 1 142 1 189 2 30 2 192 11 148 1 92 1 196 1 242 1 53 5 54 1 219 1 199 1 152 1 284 1 130 2 132 1 
317 1 210 3 230 1 352 2 163 3 233 2 3 1 117 3 214 2 256 6 327 6 142 1 301 1 189 3 30 1 192 13 191 1 148 1 242 1 53 7 219 1 199 2 54 2 284 1 106 1 130 1 132 2 
317 1 210 3 230 1 352 2 163 3 233 2 3 1 117 3 214 1 256 6 327 7 142 1 301 1 189 3 30 1 192 11 191 1 148 1 242 1 53 4 219 1 199 2 54 1 284 1 106 1 130 1 132 2 
210 1 23 1 352 2 233 1 163 1 69 1 278 1 117 1 256 2 327 4 297 1 189 1 30 1 192 8 148 1 92 1 196 1 242 1 53 4 54 1 219 1 284 1 130 2 
210 1 352 2 163 1 233 2 3 1 117 1 214 2 256 2 327 6 142 1 301 1 189 1 30 1 192 12 191 1 148 1 242 1 53 6 219 1 199 2 54 2 284 1 106 1 130 1 132 2 
317 2 210 4 230 1 352 2 163 4 233 2 3 1 117 4 214 1 256 8 327 7 142 1 301 1 189 4 30 1 191 1 192 12 148 1 242 1 53 5 219 1 199 2 54 1 284 1 106 1 130 1 132 2 
63 1 317 2 210 4 352 4 163 4 233 2 3 1 117 4 214 1 256 8 327 7 142 2 301 1 189 4 30 1 191 1 192 12 148 1 242 1 53 5 219 1 199 2 54 1 284 1 106 1 130 2 132 2 
192 7 92 3 23 1 352 6 53 4 69 2 233 1 54 1 278 1 327 3 297 3 130 3 142 3 
63 1 317 2 210 4 352 2 163 4 233 2 3 1 117 4 214 1 256 8 327 7 142 1 301 1 189 4 30 1 191 1 192 12 148 1 242 1 53 5 219 1 199 2 54 1 284 1 106 1 130 1 132 2 
47 1 303 1 154 1 34 1 95 1 182 1 188 1 
47 1 303 1 76 1 34 1 95 1 154 1 338 1 185 1 155 1 182 1 271 1 188 1 
207 1 21 1 137 1 120 1 98 1 24 1 269 1 29 1 15 1 58 1 178 1 
207 1 21 1 348 1 34 2 112 1 98 1 24 1 15 1 178 1 70 1 38 1 154 1 364 1 286 1 120 1 182 2 269 1 188 1 
207 1 348 1 111 1 87 1 34 2 195 1 112 2 322 1 98 2 24 1 15 1 178 1 70 1 38 1 153 1 154 1 364 1 286 2 120 1 182 2 269 3 188 2 73 1 
207 1 111 1 348 1 87 1 112 2 322 1 24 2 120 1 188 2 73 1 34 2 194 1 195 1 98 2 52 1 15 2 178 2 38 1 153 1 154 1 364 1 286 2 182 2 269 3 
207 1 320 1 21 1 111 1 0 1 24 3 277 1 294 1 120 1 73 1 260 2 194 1 98 1 15 3 178 3 80 1 37 1 153 1 39 1 127 1 81 2 286 1 269 4 
207 1 21 1 320 1 260 2 111 1 194 1 98 1 24 3 15 3 178 3 80 1 294 1 37 1 127 1 39 1 153 1 81 2 342 1 286 1 120 1 269 4 73 1 
207 1 339 1 120 1 24 1 15 1 178 1 
207 3 21 2 331 1 147 1 24 7 98 2 15 6 178 7 234 1 180 1 102 1 339 1 56 1 311 1 286 1 268 1 156 1 247 1 120 2 269 3 108 1 
315 1 233 1 278 1 327 3 188 1 189 2 48 2 192 6 146 1 282 1 92 1 196 1 96 1 98 1 15 1 53 3 54 1 154 2 286 1 65 1 207 1 348 1 210 2 211 1 112 1 24 1 25 2 23 1 352 2 163 2 69 1 70 1 296 1 117 2 256 4 297 1 120 1 172 1 34 2 178 1 38 1 364 1 311 1 130 2 182 2 131 1 269 1 
21 1 320 1 350 2 351 2 113 1 24 1 253 1 294 2 164 1 212 1 174 1 49 1 260 3 35 1 150 1 15 1 178 1 80 1 55 1 37 1 127 1 39 1 81 3 41 2 342 1 226 1 269 2 248 2 
207 2 147 1 24 2 98 1 15 2 178 2 37 1 263 1 339 1 311 1 286 1 120 1 269 2 
207 1 21 1 194 1 137 1 24 4 98 1 15 4 178 4 116 1 311 1 120 1 269 1 58 1 
134 1 207 2 111 1 138 1 24 2 98 1 15 2 178 2 355 1 286 1 268 1 247 1 120 1 269 1 
207 1 326 1 21 1 332 1 231 1 120 1 24 1 15 1 178 1 32 1 
207 1 43 1 24 2 98 1 15 2 178 2 234 1 311 1 156 1 120 1 269 1 
207 2 21 1 111 1 137 1 24 5 98 2 15 4 178 5 116 1 311 1 56 1 156 1 120 2 269 3 58 1 108 1 
207 2 21 1 111 1 137 1 24 5 98 2 15 4 178 5 116 1 118 1 311 1 156 1 120 2 269 3 58 1 108 1 
207 1 21 1 348 1 34 2 112 1 98 1 24 1 52 1 15 1 178 1 38 1 154 1 364 1 286 1 120 1 182 2 269 1 188 1 
207 2 331 1 147 1 111 1 24 1 98 1 15 1 178 1 286 1 268 1 247 1 120 1 269 1 
206 1 154 1 309 1 229 1 203 1 
302 1 206 2 260 2 87 1 229 2 195 1 322 1 290 1 51 1 177 1 80 1 127 1 39 1 212 1 254 1 154 1 309 1 81 2 203 2 
321 1 309 1 34 1 357 1 229 1 215 1 203 1 182 1 188 1 
302 1 309 1 51 1 
17 1 222 1 29 1 36 1 
17 1 222 1 223 1 273 1 82 1 12 1 36 1 
136 1 77 1 12 1 
11 1 275 1 12 1 2 1 82 1 227 1 183 1 
17 1 222 1 217 1 223 1 105 1 273 1 82 2 12 2 36 1 
183 1 
183 1 
183 1 
4 1 183 1 
217 2 12 2 2 1 295 1 17 1 201 1 298 1 82 2 216 1 183 1 
332 1 231 1 183 1 
217 2 12 2 2 1 17 1 103 1 105 1 298 1 82 2 216 1 183 1 
2 1 183 1 
217 2 273 1 275 1 11 1 12 4 2 1 36 2 222 2 223 1 17 3 298 1 82 4 216 1 227 1 
110 1 240 1 217 1 33 1 12 1 2 1 82 1 183 1 
275 1 12 1 2 1 324 1 82 1 227 1 183 1 
17 2 325 1 209 2 145 1 
183 1 
217 1 82 1 12 1 2 1 295 1 183 1 
334 1 
183 1 
82 1 275 1 12 1 2 1 183 1 
17 1 298 1 216 1 2 1 
17 1 222 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 52 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
354 1 227 1 33 6 337 1 10 1 362 5 238 1 64 2 341 1 15 4 142 1 198 2 270 1 89 9 71 1 246 9 216 1 172 2 150 1 127 1 375 1 218 2 300 3 111 2 325 1 51 1 381 2 353 2 
354 1 227 1 33 6 337 1 10 1 362 5 238 1 64 2 341 1 15 4 142 1 198 2 270 1 89 9 71 1 246 9 216 1 172 2 150 1 127 1 375 1 218 2 300 3 111 2 325 1 51 1 381 2 353 2 
354 1 227 1 33 7 337 1 10 1 362 6 238 1 64 2 341 1 15 5 142 1 198 2 270 1 89 10 71 1 246 10 216 1 172 2 150 1 127 1 375 1 218 2 300 4 111 2 325 1 51 1 381 2 353 2 
354 1 227 1 33 4 337 1 10 1 362 4 238 1 64 2 15 3 142 1 198 2 270 1 89 7 71 1 246 7 216 1 172 2 150 1 127 1 375 1 218 1 300 2 111 2 325 1 51 1 381 2 353 2 
198 1 89 4 227 1 246 4 216 1 172 1 33 3 218 2 10 1 300 1 362 3 111 1 325 1 51 1 341 1 381 1 15 2 353 1 
142 1 198 1 89 2 71 1 246 2 216 1 106 1 172 1 180 1 10 1 362 1 325 1 64 1 38 1 381 1 353 1 
198 2 89 3 246 3 216 1 33 1 375 1 10 1 300 1 362 2 325 1 64 1 15 1 353 2 
354 1 227 1 33 7 10 1 362 5 238 1 64 1 341 1 15 4 198 2 89 9 246 9 216 1 172 1 93 1 375 1 218 2 178 1 300 3 111 1 325 1 51 1 381 1 353 2 
354 1 227 1 33 7 10 1 362 5 238 1 64 1 341 1 15 4 198 2 89 9 246 9 216 1 172 1 93 1 375 1 218 2 178 1 300 3 111 1 325 1 51 1 381 1 353 2 
107 1 
220 2 222 1 80 1 
298 2 185 2 324 2 301 2 373 1 159 2 98 2 189 1 
27 1 1 1 185 2 84 2 2 1 283 1 232 2 98 2 189 1 34 1 313 1 119 2 12 1 65 1 290 1 67 1 141 1 318 1 168 2 293 2 373 1 294 1 171 1 47 1 298 3 48 1 49 1 324 3 349 1 301 2 378 1 159 2 113 1 380 1 352 1 53 1 223 1 
298 1 81 1 185 1 271 1 324 1 301 1 373 1 295 1 159 1 98 1 
307 1 225 1 358 1 295 1 45 1 97 1 346 1 236 1 298 1 179 1 324 1 301 1 87 1 80 1 
225 1 185 1 358 1 295 1 45 1 97 1 98 1 236 2 298 1 179 1 324 1 301 1 87 2 159 1 80 1 
228 1 332 1 208 1 87 1 236 1 
228 1 208 1 87 2 274 1 97 1 256 1 80 1 236 2 
228 1 87 1 236 1 
81 1 271 1 185 1 208 1 373 1 295 1 233 1 98 1 236 1 298 1 324 1 87 1 301 1 159 1 
80 1 
190 1 228 1 208 1 87 2 274 1 97 1 80 1 236 2 
81 1 185 1 228 2 208 2 230 2 233 1 97 2 98 1 312 4 236 5 86 1 164 1 7 1 194 1 87 5 99 2 37 5 288 2 66 1 167 1 365 1 241 2 271 1 373 1 295 1 249 1 274 1 298 1 177 1 324 1 301 1 22 1 76 2 159 1 50 1 206 1 78 2 80 2 
107 1 
185 1 335 1 98 1 203 1 189 2 298 2 324 2 301 2 159 1 
0 1 264 1 204 1 
84 1 2 1 171 1 189 1 85 1 298 1 313 1 324 1 119 1 378 1 12 1 65 1 380 1 352 1 318 1 168 1 
0 1 185 1 2 1 84 1 44 1 171 1 298 2 313 1 324 2 301 1 12 1 378 1 119 1 159 1 65 1 213 1 380 1 352 1 318 1 168 1 
307 1 121 1 185 4 144 1 70 1 44 1 98 1 203 1 189 1 298 5 324 5 301 5 159 4 213 2 
298 2 81 1 185 2 324 2 301 2 123 1 295 1 159 2 
298 3 185 3 324 3 301 3 159 3 213 1 98 1 189 1 
298 1 81 1 185 1 324 1 301 1 295 1 159 1 
298 1 185 1 324 1 301 1 295 1 159 1 335 1 98 1 203 1 
225 1 27 1 1 1 185 3 358 1 2 1 84 1 232 1 31 1 118 1 98 2 189 1 34 1 236 1 313 1 87 1 12 1 119 1 65 1 290 1 67 1 213 1 141 1 318 1 168 1 293 2 373 1 171 1 44 1 295 1 45 1 203 1 298 4 48 1 179 1 49 1 324 4 301 3 378 1 159 3 113 1 380 1 352 1 53 1 
307 1 298 2 121 1 185 1 324 2 301 2 159 1 213 1 189 1 
225 1 185 3 358 1 90 1 295 1 44 1 45 1 31 1 98 1 203 1 236 1 298 3 179 1 324 3 87 1 301 3 159 3 213 2 80 1 
0 1 185 2 98 1 203 1 298 2 324 2 301 2 204 1 159 2 213 1 
84 1 2 1 171 1 189 1 298 1 313 1 324 1 119 1 378 1 12 1 65 1 380 1 318 1 352 1 168 1 
84 1 2 1 189 1 298 1 313 1 324 1 119 1 378 1 12 1 379 1 65 1 380 1 352 1 168 1 40 1 
0 2 27 1 1 2 308 1 282 1 232 4 34 1 285 1 264 2 288 1 290 1 141 1 39 1 199 1 293 2 74 1 47 2 49 1 350 1 204 2 113 1 78 1 278 1 132 1 
298 1 185 1 324 1 301 1 295 1 123 1 45 1 159 1 
181 1 210 1 
181 1 210 1 
135 1 303 1 
135 1 303 1 
135 1 303 1 
299 1 181 1 210 1 
299 1 181 1 210 1 
83 1 181 1 210 1 
128 1 135 1 303 1 231 1 181 2 210 2 
299 1 181 1 210 1 
63 1 181 1 210 1 
63 1 181 1 210 1 
63 1 181 1 210 1 
226 1 185 2 207 1 83 1 336 1 210 1 189 1 236 1 87 1 268 1 14 1 18 1 243 1 122 1 149 1 148 1 175 1 298 2 324 2 155 1 301 2 159 2 252 1 181 1 
345 2 231 1 149 2 336 2 56 1 175 3 210 2 236 2 75 1 61 1 87 2 155 1 77 1 265 1 252 2 181 2 268 2 17 1 80 1 
111 1 172 1 381 1 
172 1 38 1 381 1 
302 1 111 2 363 1 38 1 151 1 381 3 
370 1 302 1 111 1 38 1 151 1 381 2 
111 1 302 2 38 1 151 1 381 2 
280 1 308 1 228 1 208 4 284 1 230 1 235 1 97 1 236 5 312 3 7 1 8 2 11 1 317 1 87 5 99 1 37 2 288 1 39 1 14 1 18 1 241 1 242 1 243 1 274 1 202 2 95 2 220 3 222 1 221 1 78 1 80 2 
280 1 185 1 332 3 228 4 230 1 233 1 97 1 98 1 236 6 6 3 7 1 11 1 99 1 288 1 69 1 241 1 200 1 243 2 295 1 202 2 298 1 301 1 159 1 78 1 80 3 355 1 81 1 308 1 208 5 312 3 87 6 317 1 37 2 39 1 271 1 373 1 274 1 95 2 324 1 220 3 221 1 222 1 
280 1 308 1 208 2 284 1 230 1 97 1 236 3 312 3 8 1 87 3 317 1 99 1 37 2 288 1 66 1 39 1 241 1 242 1 243 1 202 2 95 2 220 4 222 2 221 1 78 1 80 3 
280 1 308 2 208 3 284 1 230 1 97 1 236 4 312 5 191 1 8 2 87 4 317 2 99 1 37 4 288 2 66 1 39 2 366 1 241 1 242 1 243 2 244 1 202 4 95 4 220 7 222 3 221 1 78 2 80 4 
107 1 
364 1 352 1 
115 1 
313 1 65 1 352 1 
352 1 261 1 
65 1 352 1 
258 1 313 1 65 1 92 2 108 1 352 3 
1 3 199 3 232 7 46 1 360 1 47 4 153 1 177 1 285 2 86 1 59 2 9 1 129 1 88 1 288 1 50 1 78 1 
1 3 199 3 232 7 46 1 360 1 47 4 153 1 177 1 285 2 86 1 59 2 9 1 129 1 88 1 288 1 50 1 78 1 
1 3 199 3 232 7 360 1 46 1 47 4 153 1 177 1 285 2 86 1 59 2 9 1 129 1 88 1 288 1 50 1 277 1 78 1 
27 1 1 15 308 3 161 1 162 1 359 3 260 1 232 31 360 1 86 2 59 3 285 5 361 1 9 5 316 1 317 3 88 2 288 4 290 1 141 1 39 3 199 10 293 2 372 1 105 1 46 2 47 16 153 1 176 4 177 1 129 1 50 2 113 1 78 4 
117 1 27 2 199 4 1 4 293 4 232 9 360 1 46 1 47 5 177 1 86 1 285 3 59 2 361 1 9 1 129 1 140 1 88 1 288 1 50 1 113 2 290 2 78 1 141 2 
134 1 84 1 2 1 55 1 33 1 10 1 362 1 119 1 64 1 363 1 38 1 214 1 168 1 269 1 198 1 89 2 272 1 246 2 216 1 172 1 217 1 110 1 111 1 250 1 325 1 378 1 326 1 305 1 381 2 353 1 
84 1 2 1 55 1 33 2 10 1 362 1 36 1 119 1 363 1 64 1 38 1 214 1 168 1 198 1 89 3 272 1 246 3 216 1 172 1 217 1 110 1 157 1 111 1 250 1 275 1 378 1 326 1 305 1 381 2 353 1 
84 1 2 1 55 1 33 2 10 1 362 1 36 1 119 1 64 1 363 1 38 1 214 1 168 1 89 2 272 1 246 2 216 1 172 1 217 1 110 1 111 1 275 1 378 1 326 1 381 2 
259 1 2 1 84 1 55 2 209 1 196 1 119 1 64 2 65 1 214 2 291 1 168 1 198 1 102 1 89 1 246 1 157 1 110 2 378 1 351 1 380 1 352 1 353 1 
134 1 84 1 2 1 55 1 119 1 64 1 363 1 38 1 214 1 168 1 198 1 89 1 272 1 246 1 172 1 217 1 110 1 111 1 250 1 275 1 325 1 378 1 326 1 305 1 381 2 353 1 
314 1 
225 1 280 1 331 4 330 1 228 6 2 1 136 1 230 1 97 1 236 5 58 2 7 1 192 2 99 1 239 2 65 1 340 1 16 1 241 1 145 1 146 2 296 1 295 1 201 2 346 1 109 1 298 1 21 2 301 1 251 1 352 1 80 2 307 1 259 1 357 1 358 1 84 2 209 1 312 2 263 1 87 5 37 2 119 2 168 2 273 2 45 1 274 3 179 1 220 2 324 1 378 1 222 2 380 2 130 1 224 1 
307 1 225 1 357 1 331 2 228 2 358 1 295 1 296 1 45 1 136 1 274 1 346 1 236 3 109 1 298 1 190 1 21 1 179 1 263 1 324 1 87 3 301 1 
307 1 225 1 357 1 331 3 228 1 358 1 295 1 296 1 45 1 136 1 201 1 274 1 97 1 346 1 236 3 109 1 298 1 190 1 179 1 263 1 324 1 87 3 301 1 80 1 
225 1 307 1 357 1 331 3 228 2 358 1 136 1 97 1 236 3 190 1 263 1 87 3 239 1 296 1 295 1 45 1 201 1 274 1 346 1 298 1 109 1 179 1 21 1 324 1 301 1 80 1 
225 1 331 2 185 1 228 3 136 1 3 1 230 1 97 1 233 1 98 1 236 3 190 1 7 1 139 1 99 1 239 2 16 1 241 1 292 1 295 2 296 1 346 1 298 2 109 1 21 2 301 2 159 1 80 1 307 1 81 1 357 1 358 1 312 1 263 1 87 3 37 1 271 1 373 1 45 1 274 1 179 1 324 2 131 1 
307 1 225 1 357 1 331 4 228 4 358 1 136 1 230 1 97 1 312 1 236 4 58 2 7 1 192 2 263 1 87 4 99 1 37 1 239 2 16 1 241 1 146 2 296 1 295 1 273 2 45 1 201 2 274 2 346 1 109 1 298 1 21 2 179 1 220 2 324 1 301 1 222 2 130 1 224 1 80 2 
225 1 307 1 81 1 357 1 185 1 331 2 358 1 136 1 230 1 3 1 233 1 97 1 98 1 312 1 236 2 7 1 263 1 87 2 99 1 37 1 16 1 241 1 271 1 373 1 296 1 295 2 45 1 346 1 298 2 109 1 179 1 324 2 301 2 159 1 131 1 80 1 
225 1 307 1 81 1 357 1 185 1 331 2 358 1 136 1 230 1 3 1 233 1 97 1 98 1 312 1 236 2 7 1 263 1 87 2 99 1 37 1 16 1 241 1 271 1 373 1 296 1 295 2 45 1 346 1 298 2 109 1 179 1 324 2 301 2 159 1 131 1 80 1 
225 1 185 1 331 2 228 2 136 1 230 1 97 1 233 1 98 1 236 4 58 2 7 1 192 2 338 2 99 1 241 1 295 2 296 1 73 2 297 1 346 1 109 1 298 2 301 2 159 1 253 1 80 1 307 1 81 1 357 1 160 1 358 1 312 1 263 1 87 4 37 1 271 1 319 1 373 1 45 1 274 2 179 1 324 2 220 2 130 1 
225 1 331 3 185 1 228 1 136 1 3 1 230 1 97 1 233 1 98 1 236 2 7 1 139 1 99 1 239 1 16 1 241 1 295 2 296 1 201 1 346 1 109 1 298 2 21 1 301 2 159 1 80 1 307 1 81 1 357 1 358 1 312 1 263 1 87 2 37 1 271 1 373 1 45 1 179 1 324 2 131 1 
225 1 331 3 185 1 228 1 136 1 3 1 230 1 97 1 233 1 98 1 236 2 7 1 139 1 99 1 239 1 16 1 241 1 295 2 296 1 201 1 346 1 109 1 298 2 21 1 301 2 159 1 80 1 307 1 81 1 357 1 358 1 312 1 263 1 87 2 37 1 271 1 373 1 45 1 179 1 324 2 131 1 
307 1 225 1 357 1 331 2 228 1 160 1 358 1 136 1 230 1 312 1 236 3 58 1 7 1 192 1 263 1 338 1 87 3 99 1 37 1 241 1 296 1 295 1 73 1 45 1 274 1 346 1 109 1 298 1 179 1 220 1 324 1 301 1 130 1 224 1 
27 1 49 1 293 2 290 1 113 1 107 1 278 1 141 1 34 1 
0 11 27 2 1 6 29 1 308 1 161 1 359 3 232 14 260 1 189 1 34 2 285 1 237 1 9 1 317 2 264 11 288 2 290 2 141 2 39 2 199 2 293 4 104 1 248 1 47 8 176 3 48 1 49 1 349 1 204 4 113 2 24 1 78 1 
27 1 185 1 1 1 2 1 84 1 232 2 189 1 85 1 34 1 35 1 313 1 165 1 12 1 119 1 65 1 213 1 290 1 318 1 141 1 168 1 293 2 171 1 44 1 344 1 104 1 47 1 298 2 48 1 49 1 324 2 301 1 349 1 378 1 204 1 159 1 380 1 113 1 352 1 
0 7 1 10 185 1 2 2 232 20 189 2 59 1 285 4 9 4 12 2 288 3 65 2 290 3 67 2 141 3 240 2 199 8 293 6 245 1 104 1 298 3 349 1 301 1 112 2 204 7 159 1 113 3 78 3 352 2 255 2 116 1 27 3 308 2 84 3 309 2 360 1 34 3 86 1 313 2 317 2 264 7 119 3 213 1 318 2 39 2 168 3 44 1 171 2 47 10 177 1 48 1 324 3 49 3 129 1 275 1 378 2 50 1 182 1 380 1 
27 2 259 1 184 1 28 1 185 1 1 1 333 1 2 2 84 8 232 2 209 1 34 2 119 8 100 1 65 2 213 1 290 2 141 2 269 1 168 7 343 1 169 1 369 1 293 4 294 2 47 1 298 1 48 1 324 1 49 2 301 1 349 1 275 1 378 2 159 1 380 2 113 2 278 1 352 3 
0 1 27 1 185 1 1 2 308 1 232 3 98 1 34 1 285 1 317 1 264 1 288 1 290 1 141 1 39 1 199 1 293 2 104 1 247 1 47 1 203 1 298 1 49 1 324 1 301 1 204 1 159 1 113 1 78 1 
0 1 27 1 199 1 293 2 232 2 47 2 34 1 9 1 49 1 264 1 204 1 288 1 113 1 290 1 278 1 141 1 39 1 132 1 
0 1 27 1 199 1 1 2 308 1 293 2 282 1 232 2 34 1 285 1 49 1 264 1 204 1 113 1 290 1 278 1 78 1 141 1 
0 2 27 1 1 2 308 1 232 4 34 1 285 1 9 1 317 1 264 2 288 1 290 1 39 1 141 1 199 2 293 2 47 2 49 1 204 2 113 1 278 1 78 1 
0 1 27 1 199 1 293 2 232 2 47 2 34 1 9 1 49 1 264 1 204 1 288 1 100 1 113 1 290 1 141 1 39 1 132 1 
0 1 27 1 199 1 1 2 308 1 293 2 282 1 232 2 34 1 285 1 49 1 264 1 204 1 100 1 113 1 290 1 78 1 141 1 
0 2 27 1 1 2 308 1 232 4 34 1 285 1 9 1 317 1 264 2 288 1 100 1 290 1 39 1 141 1 199 2 293 2 47 2 49 1 204 2 113 1 78 1 
0 2 27 1 1 2 308 1 232 4 34 1 285 1 9 1 317 1 264 2 288 1 290 1 39 1 141 1 199 2 293 2 47 2 49 1 204 2 113 1 78 1 
27 1 1 1 2 1 84 1 232 2 189 1 34 1 313 1 12 1 119 1 65 1 67 1 290 1 318 1 141 1 168 1 293 2 171 1 47 1 298 1 48 1 324 1 49 1 349 1 378 1 380 1 113 1 352 1 
27 1 1 1 2 1 84 1 232 2 189 1 34 1 313 1 12 1 119 1 65 1 290 1 141 1 168 1 40 1 371 1 293 2 47 1 298 1 48 1 324 1 49 1 349 1 378 1 379 1 380 1 113 1 352 1 
0 2 27 1 1 2 308 1 232 4 34 1 285 1 9 1 317 1 264 2 288 1 290 1 39 1 141 1 199 2 293 2 104 1 47 2 49 1 204 2 113 1 78 1 
0 2 27 1 1 2 308 1 2 1 84 1 232 4 34 1 285 1 9 1 313 1 317 1 264 2 288 1 12 1 119 1 65 1 67 1 290 1 39 1 318 1 141 1 168 1 269 1 199 2 293 2 171 1 47 2 298 1 324 1 49 1 204 2 378 1 112 1 113 1 78 1 352 1 
0 1 27 1 1 1 185 1 308 1 232 3 98 1 34 1 9 1 317 1 264 1 288 1 290 1 141 1 39 1 199 1 293 2 104 1 47 2 203 1 298 1 49 1 348 1 324 1 301 1 204 1 159 1 113 1 78 1 
328 2 257 1 27 2 117 1 1 10 308 3 161 1 359 1 334 1 232 19 260 1 285 3 286 1 211 1 9 3 317 3 287 2 212 1 288 3 290 2 141 2 39 3 199 6 293 4 124 1 320 1 47 9 176 2 113 2 78 3 
328 1 257 1 27 3 117 1 1 12 186 1 308 2 161 2 359 2 334 1 188 1 232 26 285 2 286 1 361 2 9 2 262 1 317 3 287 4 212 2 288 3 120 1 290 3 141 3 39 3 367 1 199 4 293 6 320 2 47 14 176 2 152 1 113 3 78 2 
328 1 1 21 186 1 334 1 188 1 232 41 285 4 59 1 286 1 9 4 287 4 288 5 290 3 141 3 199 8 293 6 152 1 113 3 78 5 257 1 117 1 27 3 308 4 161 3 359 3 260 1 360 1 86 1 361 1 211 1 262 1 317 4 212 1 120 1 39 4 367 1 320 2 173 1 47 20 176 4 177 1 129 1 50 1 
328 1 257 1 27 4 117 1 1 18 186 1 308 3 161 3 359 3 334 1 188 1 232 38 260 1 360 1 59 1 86 1 285 4 286 1 211 1 361 2 262 1 9 3 317 4 287 4 212 1 288 5 120 1 290 4 141 4 39 4 367 1 199 7 293 8 320 2 173 1 47 20 152 1 176 4 177 1 129 1 50 1 113 4 78 4 
328 1 257 1 27 2 117 1 1 25 186 1 308 7 161 2 359 4 334 1 188 1 232 52 260 2 360 1 59 1 86 1 285 7 286 1 361 1 262 1 9 7 317 7 287 4 212 1 288 8 120 1 290 2 141 2 39 7 367 1 199 14 293 4 320 1 47 27 152 1 176 4 177 1 129 1 50 1 113 2 24 2 78 8 
77 1 252 1 231 1 181 1 336 1 268 1 149 1 56 1 57 1 210 1 
83 1 148 1 
219 1 339 1 252 1 181 1 336 1 268 1 149 1 234 1 210 1 
299 1 311 1 
128 1 156 1 63 1 
345 1 231 1 149 1 336 1 56 1 175 2 210 1 236 1 75 1 61 1 155 1 87 1 77 1 265 1 252 1 181 1 268 1 80 1 
345 1 231 1 149 1 336 1 56 1 175 2 210 1 236 1 75 1 61 1 155 1 87 1 77 1 265 1 252 1 181 1 268 1 80 1 
345 1 231 1 149 1 336 1 56 1 175 2 210 1 236 1 75 1 61 1 155 1 87 1 77 1 265 1 252 1 181 1 268 1 80 1 
128 1 299 1 311 1 
128 1 299 1 311 1 
156 1 63 1 
128 1 156 1 63 1 
226 1 122 1 
226 1 207 1 185 2 208 1 83 1 336 1 210 1 189 1 236 1 315 1 61 1 87 1 268 1 14 1 18 1 243 1 122 1 345 1 149 1 148 1 175 1 298 2 324 2 301 2 252 1 159 2 181 1 
27 1 1 1 2 1 84 2 232 2 34 1 119 2 197 1 65 1 290 1 141 1 168 2 68 1 169 1 215 1 369 1 293 2 294 2 104 1 103 1 47 1 347 1 298 2 48 1 49 1 324 2 301 2 349 1 378 1 113 1 352 1 
329 1 26 1 2 1 84 2 272 1 172 1 217 1 62 1 110 1 111 1 250 1 378 1 275 1 119 2 363 1 38 1 381 2 168 2 269 1 
26 1 84 1 2 1 272 1 172 1 217 1 110 1 111 1 250 1 275 1 119 1 378 1 363 1 38 1 306 1 381 2 168 1 
329 1 259 1 2 1 84 1 374 1 209 1 110 1 378 1 119 1 65 1 351 1 380 1 352 1 168 1 
329 1 26 1 2 1 84 1 272 1 172 1 217 1 62 1 110 1 111 1 250 1 275 1 119 1 378 1 363 1 38 1 381 2 168 1 
60 1 
107 1 
228 1 230 1 97 1 312 1 236 1 7 1 87 1 99 1 37 1 16 1 241 1 146 1 273 1 274 1 220 1 222 1 80 2 
280 2 281 2 228 5 187 2 2 4 137 2 230 4 97 2 236 5 7 4 194 1 99 4 288 2 65 3 240 2 241 4 145 1 108 1 202 6 76 2 22 2 205 2 23 1 78 2 352 10 80 8 308 2 84 3 32 1 261 2 312 9 164 1 313 3 87 5 317 2 37 8 119 3 267 1 364 3 39 2 269 1 168 3 43 1 92 2 274 3 376 2 95 6 377 1 179 2 220 12 378 3 222 6 380 1 133 2 
280 1 228 1 186 1 308 2 161 1 359 1 188 1 230 2 97 2 236 1 312 8 7 2 262 1 87 1 317 2 99 2 37 5 288 2 266 1 39 2 368 1 367 1 241 2 145 1 274 1 202 5 176 1 152 1 95 5 220 6 22 1 76 2 222 3 78 2 80 5 
81 1 185 1 230 1 3 1 233 1 98 1 236 1 312 2 86 1 7 1 87 1 99 1 37 2 288 2 241 1 271 1 373 1 295 1 298 1 177 1 324 1 301 1 22 1 76 2 50 1 159 1 206 1 78 1 
241 1 230 1 97 1 312 1 164 1 7 1 194 1 99 1 37 1 80 1 
308 2 202 5 312 5 95 5 220 10 317 2 22 1 76 2 37 5 288 2 222 5 78 2 39 2 240 1 80 5 
228 1 87 1 274 1 97 1 80 1 236 1 
280 2 259 1 228 4 2 1 84 4 230 2 32 1 209 1 312 2 236 3 7 1 87 3 99 2 37 2 119 4 66 1 65 1 340 1 168 4 241 2 43 2 145 2 125 1 274 2 276 1 378 1 251 1 380 2 352 1 
27 1 1 1 185 2 84 1 2 1 232 1 98 2 189 1 34 1 313 1 119 1 12 1 65 1 290 1 67 1 141 1 318 1 168 1 293 2 373 1 171 1 298 3 48 1 324 3 49 1 301 2 378 1 159 2 113 1 380 1 53 1 352 1 
241 1 280 1 145 1 230 1 97 2 202 2 312 1 59 1 95 2 7 1 220 4 99 1 37 2 222 2 80 4 
336 1 268 1 94 1 
336 1 268 1 94 1 
226 1 77 1 336 1 268 1 254 1 
336 1 268 1 94 1 
19 1 336 1 268 1 
19 1 336 1 268 1 
19 1 336 1 268 1 
336 1 268 1 
181 1 210 1 
27 2 1 4 199 3 293 4 232 8 360 1 47 4 59 1 177 1 285 2 86 1 361 1 9 1 129 1 288 1 50 1 113 2 290 2 78 1 141 2 
107 1 
27 1 1 2 199 2 308 1 293 2 147 1 232 4 47 2 285 1 9 1 317 1 288 1 113 1 290 1 78 1 141 1 39 1 
1 4 199 2 308 1 161 1 359 1 232 7 260 1 47 3 176 2 285 1 9 1 317 1 288 1 78 1 39 1 
27 2 1 12 308 2 359 2 260 1 232 23 360 1 59 1 86 2 285 5 361 2 9 4 317 2 288 3 290 2 39 2 141 2 199 9 293 4 248 1 47 11 176 2 177 1 129 1 50 2 113 2 78 3 24 1 327 1 
1 1 232 1 176 1 
359 1 232 1 47 1 
27 1 1 3 199 3 308 1 293 2 147 1 232 6 47 3 285 2 9 1 317 1 288 1 290 1 113 1 78 1 141 1 39 1 240 1 
27 1 117 1 1 6 186 1 308 2 161 1 359 1 188 1 232 12 285 1 9 1 262 1 317 2 288 2 290 1 141 1 39 2 367 1 199 2 293 2 47 6 176 1 152 1 113 1 78 2 
1 3 199 2 232 6 47 3 177 1 86 1 285 1 9 1 288 1 50 1 78 1 
27 1 199 2 1 2 293 2 232 3 360 1 47 1 285 1 86 1 361 1 9 1 129 1 50 1 113 1 290 1 327 1 141 1 
199 6 1 6 232 12 47 6 86 2 285 3 177 1 9 3 288 2 50 2 206 1 78 2 
117 1 27 1 199 1 293 2 232 2 47 2 9 1 288 1 113 1 290 1 141 1 39 1 
117 1 27 1 1 2 199 2 308 1 293 2 232 4 47 2 285 1 9 1 317 1 288 1 113 1 290 1 78 1 141 1 39 1 
117 1 27 3 1 2 199 2 293 6 232 3 47 1 86 1 285 1 361 1 211 1 9 1 50 1 113 3 290 3 327 1 141 3 
27 5 117 1 1 18 308 3 162 1 161 1 359 3 232 34 260 1 360 1 59 1 86 3 285 7 361 2 211 1 9 5 316 1 317 3 288 5 290 5 141 5 39 3 199 12 372 1 293 10 147 1 47 16 176 4 177 2 129 1 50 3 113 5 327 1 78 5 
27 1 117 1 1 4 161 1 359 1 232 8 360 1 59 1 86 1 285 2 288 1 290 1 141 1 199 2 293 2 47 4 176 1 152 1 177 1 129 1 50 1 113 1 78 1 
117 1 27 2 1 5 161 1 359 1 232 11 260 1 360 1 59 1 285 2 86 1 9 1 317 1 288 2 290 2 141 2 39 1 199 3 293 4 147 1 47 6 176 2 152 1 177 1 129 1 50 1 113 2 78 1 
27 3 117 1 1 10 186 1 308 2 161 1 359 1 188 1 232 19 360 1 59 1 86 1 285 3 361 1 9 1 262 1 317 2 288 3 290 3 141 3 39 2 367 1 199 4 293 6 147 1 47 9 176 1 152 1 177 1 129 1 50 1 113 3 78 3 
27 3 117 1 1 7 186 1 308 1 161 1 359 1 188 1 232 17 360 1 59 1 86 1 285 3 361 1 9 2 262 1 317 2 288 3 290 3 141 3 39 2 367 1 199 5 293 6 147 1 47 10 176 1 152 1 177 1 129 1 50 1 113 3 78 2 
27 1 117 1 1 4 161 1 359 1 232 8 360 1 59 1 86 1 285 2 288 1 290 1 141 1 199 2 293 2 47 4 176 1 152 1 177 1 129 1 50 1 113 1 78 1 
27 1 117 1 1 6 186 1 308 2 161 1 359 1 188 1 232 12 285 1 9 1 262 1 317 2 288 2 290 1 141 1 39 2 367 1 199 2 293 2 47 6 176 1 152 1 113 1 78 2 
27 4 117 1 1 8 186 1 308 1 161 1 359 1 188 1 232 18 360 1 59 1 86 1 285 3 361 2 9 2 262 1 317 2 288 3 290 4 141 4 39 2 367 1 199 5 293 8 147 1 47 10 176 1 152 1 177 1 129 1 50 1 113 4 78 2 
117 1 27 4 1 7 186 1 308 2 161 1 359 1 188 1 232 16 285 3 211 1 361 2 9 3 262 1 317 3 288 3 290 4 141 4 39 3 367 1 199 6 293 8 47 9 176 1 152 1 113 4 78 2 
1 4 199 6 232 7 360 2 47 3 86 3 285 3 177 1 9 3 129 1 288 1 50 3 78 1 
117 1 27 4 1 8 186 1 308 1 161 1 359 1 188 1 232 18 360 1 59 1 86 1 285 3 211 1 361 2 9 1 262 1 317 2 288 3 290 4 141 4 39 2 367 1 199 4 293 8 47 10 176 1 152 1 177 1 129 1 50 1 113 4 78 2 
298 1 307 1 121 1 324 1 301 1 13 1 189 1 
307 1 121 1 4 1 138 1 322 1 189 1 20 1 298 1 324 1 301 1 158 1 13 1 
84 1 119 1 380 1 107 1 168 1 
185 1 2 1 84 1 189 1 298 2 313 1 324 2 301 1 12 1 119 1 378 1 159 1 65 1 213 1 380 1 352 1 318 1 168 1 
185 1 43 1 358 1 2 1 84 1 295 1 45 1 261 1 189 1 298 2 313 2 324 2 301 2 12 1 119 1 378 1 159 2 65 2 213 1 352 3 318 1 168 1 133 1 
185 1 358 1 84 2 2 1 261 1 189 1 313 2 119 2 12 1 65 2 213 1 342 1 168 2 40 1 43 1 295 1 45 1 298 2 324 2 301 2 378 1 159 2 352 3 133 1 
228 1 84 3 2 1 261 1 97 1 236 2 313 1 87 2 119 3 65 1 364 1 342 1 168 3 43 1 321 1 92 1 154 1 179 1 378 1 380 1 352 4 133 1 80 1 
43 1 228 1 2 1 84 3 92 1 97 1 261 1 236 2 376 1 179 1 313 1 87 2 119 3 378 1 65 1 380 1 364 1 352 4 342 1 168 3 80 1 133 1 
184 1 2 1 84 1 378 1 119 1 168 1 
41 1 184 1 369 1 28 1 333 1 84 7 2 3 294 1 108 1 5 1 313 1 275 1 119 7 378 2 166 1 65 2 380 2 352 3 269 1 168 6 343 1 
0 1 185 1 1 3 2 1 232 6 189 2 285 2 59 1 12 1 288 1 65 1 67 1 290 2 141 2 199 2 293 4 103 1 104 1 298 2 301 1 204 1 112 1 159 1 113 2 78 1 352 1 27 2 84 1 309 1 360 1 34 2 86 1 313 1 264 1 119 1 213 1 318 1 168 1 269 1 171 1 47 3 177 1 324 2 49 2 129 1 378 1 50 1 
208 1 281 1 228 2 84 1 230 2 137 1 32 1 97 1 312 1 236 3 164 1 7 2 194 1 87 3 99 2 37 1 119 1 364 1 168 1 241 2 92 1 274 1 376 1 179 1 205 1 380 1 352 2 80 1 
184 1 84 2 2 2 92 1 108 1 313 1 119 2 378 1 65 1 23 1 352 2 269 1 168 2 
259 1 30 1 2 1 84 4 209 1 119 4 378 1 65 1 380 1 352 1 342 1 168 4 269 1 
41 1 170 1 43 1 245 1 84 2 2 2 163 1 5 1 313 1 119 2 378 1 65 1 352 1 168 2 
2 1 84 1 272 1 378 1 119 1 172 1 38 1 380 1 381 1 168 1 
369 1 84 2 2 1 347 1 119 2 275 1 378 1 65 1 352 1 269 1 168 2 
259 1 43 1 369 1 30 1 84 5 2 2 333 1 209 1 119 5 378 2 65 2 380 1 352 3 168 4 269 1 343 1 
259 1 43 1 369 1 30 1 84 5 2 2 333 1 72 1 209 1 119 5 378 2 65 2 380 1 352 3 168 4 269 1 
185 1 2 1 84 1 189 1 298 2 313 1 324 2 301 1 12 1 119 1 378 1 159 1 65 1 213 1 380 1 352 1 168 1 40 1 
41 1 43 1 84 1 2 2 108 1 5 1 313 1 119 1 378 1 166 1 65 1 352 1 168 1 
82 1 91 1 289 1 304 1 189 1 
356 1 208 1 87 1 54 1 52 1 304 1 236 1 
298 1 68 1 215 1 82 1 324 1 301 1 197 1 304 1 289 1 
225 1 82 1 358 1 54 1 295 1 45 1 91 1 31 1 179 1 52 1 304 1 289 1 
107 1 
198 1 89 1 10 1 362 1 246 1 216 1 353 1 
89 1 64 1 214 1 
142 1 198 1 183 1 279 1 89 2 126 1 246 2 216 1 174 1 10 1 362 1 325 1 353 1 
218 1 198 1 89 2 10 1 362 1 246 2 216 1 33 1 353 1 
198 1 89 1 362 1 111 1 325 1 51 1 246 1 172 1 381 1 15 1 353 1 
198 1 89 1 10 1 362 1 325 1 246 1 353 1 
198 1 89 1 10 2 325 1 246 1 216 1 353 1 
198 2 25 1 89 2 10 1 362 1 325 1 246 2 79 1 353 2 101 1 
354 1 198 1 89 3 246 3 216 1 33 2 10 1 300 1 362 2 238 1 325 1 15 1 353 1 
198 1 89 2 310 1 246 2 216 1 172 1 33 1 10 1 362 1 111 1 325 1 363 1 38 1 381 2 353 1 
198 2 89 4 246 4 216 1 33 2 218 1 10 1 300 1 362 2 325 1 341 1 15 1 353 2 
198 1 89 1 10 1 362 1 325 1 246 1 216 1 353 1 
142 1 198 1 279 1 89 4 126 1 246 4 216 2 174 1 33 2 10 2 300 1 362 3 15 1 353 1 
323 1 198 1 193 1 89 2 10 1 362 1 325 1 246 2 216 1 33 1 93 1 353 1 
142 2 198 1 279 2 89 3 246 3 216 1 174 1 10 1 362 1 325 1 114 1 353 1 
42 1 362 2 96 2 195 1 
198 1 89 1 229 1 325 1 246 1 353 1 
198 1 89 2 10 1 362 1 238 1 325 1 246 2 216 1 33 1 353 1 
143 1 
198 1 89 1 10 1 362 1 325 1 246 1 216 1 353 1 
142 1 198 1 89 3 10 1 362 1 238 1 325 1 246 3 216 1 33 1 353 1 
300 1 362 1 126 1 15 1 
10 1 362 1 

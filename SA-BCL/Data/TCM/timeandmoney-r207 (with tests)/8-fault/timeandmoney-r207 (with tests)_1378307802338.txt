#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (111,170) (111,170) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (111,170) (111,170) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (111,170) (111,170) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (111,170) (111,170) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 237 178 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 237 178 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (207,231,284) (240,261,271) (240,261,271) (240,261,271) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (207,231,284) (240,261,271) (240,261,271) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (207,231,284) (240,261,271) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (207,231,284) (240,261,271) (240,261,271) (240,261,271) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 213 37 325 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (207,231,284) (207,231,284) (207,231,284) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (207,231,284) (207,231,284) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (207,231,284) (207,231,284) (207,231,284) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 8 1 170 1 323 1 111 1 132 1 254 1 90 1 279 1 311 1 6 1 238 1 
49 1 8 1 170 1 323 1 111 1 132 1 254 1 90 1 279 1 311 1 6 1 238 1 
49 1 8 1 170 1 323 1 111 1 132 1 254 1 90 1 279 1 311 1 6 1 238 1 
49 1 8 1 170 1 323 1 111 1 132 1 254 1 90 1 279 1 311 1 6 1 238 1 
98 1 49 2 8 1 151 1 314 1 90 1 279 2 311 1 238 1 43 1 306 1 237 1 
49 2 211 1 108 1 316 1 90 1 279 2 6 1 109 1 280 1 8 1 68 1 151 1 132 1 308 1 311 1 299 1 
49 3 252 1 314 1 316 1 90 2 156 1 279 3 6 1 306 1 8 2 68 1 151 2 311 1 
98 1 49 7 251 1 252 2 314 3 90 2 156 1 279 7 178 1 6 1 238 1 43 1 237 1 306 5 8 2 224 1 151 3 311 1 31 1 
98 1 49 7 251 1 252 2 314 3 90 2 156 1 279 7 178 1 6 1 238 1 43 1 237 1 306 5 8 2 224 1 151 3 311 1 31 1 
363 1 357 1 99 1 
322 1 357 1 4 2 
65 2 110 2 270 2 25 1 186 2 93 2 328 2 181 1 
117 1 249 1 53 1 25 1 26 1 339 1 340 2 181 1 102 1 204 1 82 1 141 2 164 1 186 2 162 2 286 1 59 1 32 1 168 1 107 1 262 1 235 1 267 1 44 1 148 1 65 3 269 1 110 2 239 1 326 2 270 2 93 3 94 1 195 2 219 1 328 2 355 1 
65 1 332 1 110 1 360 1 270 1 186 1 121 1 93 1 328 1 181 1 
330 1 357 1 88 1 263 1 39 1 337 1 121 1 363 1 65 1 150 1 57 1 93 1 345 1 328 1 
330 1 357 1 88 2 39 2 263 1 337 1 121 1 363 1 65 1 110 1 150 1 270 1 186 1 93 1 328 1 
350 1 365 1 88 1 39 1 193 1 
363 1 350 1 357 1 365 1 88 2 39 2 221 1 208 1 
365 1 88 1 39 1 
332 1 360 1 88 1 39 1 336 1 121 1 181 1 65 1 350 1 110 1 270 1 186 1 93 1 328 1 
357 1 
363 1 350 1 357 1 365 1 88 2 192 1 39 2 221 1 
301 1 357 1 23 1 289 1 88 5 39 5 221 1 28 2 214 1 363 1 350 2 365 2 143 1 377 1 95 1 145 1 246 1 21 2 260 2 
248 1 249 1 339 1 235 1 148 1 65 2 269 1 110 1 239 1 141 1 186 1 162 1 94 1 93 2 195 1 313 1 328 1 59 1 137 1 32 1 
25 1 99 1 
115 1 25 2 65 2 110 1 270 1 186 1 93 2 328 2 188 1 
344 1 313 1 62 1 
249 1 25 1 27 1 339 1 235 1 148 1 65 1 269 1 239 1 141 1 162 1 93 1 94 1 195 1 59 1 32 1 
248 2 115 1 89 1 25 1 342 1 65 5 110 4 184 1 270 1 186 4 93 5 345 1 328 5 137 1 
65 2 110 2 360 1 186 2 121 1 93 2 152 1 328 2 
248 1 65 3 110 3 270 1 25 1 186 3 93 3 328 3 
65 1 110 1 360 1 186 1 121 1 93 1 328 1 
115 1 65 1 110 1 270 1 186 1 121 1 93 1 328 1 188 1 
115 1 248 1 330 1 117 1 249 1 53 1 25 1 337 1 26 1 121 1 339 1 340 2 181 1 204 1 82 1 141 1 164 1 58 1 186 3 162 1 286 1 59 1 32 1 107 1 88 1 262 1 263 1 39 1 235 1 44 1 148 1 65 4 269 1 110 3 239 1 150 1 326 1 270 2 94 1 93 4 195 1 328 3 136 1 137 1 
248 1 65 2 110 1 89 1 25 1 186 1 93 2 345 1 328 2 
115 1 248 2 330 1 357 1 88 1 39 1 263 1 198 1 337 1 121 1 65 3 110 3 150 1 270 1 186 3 93 3 328 3 137 1 136 1 
248 1 115 1 65 2 110 2 270 1 186 2 93 2 313 1 328 2 62 1 
249 1 25 1 339 1 235 1 148 1 65 1 269 1 141 1 239 1 162 1 93 1 94 1 195 1 59 1 32 1 
315 1 25 1 235 1 148 1 65 1 269 1 141 1 239 1 162 1 310 1 93 1 94 1 195 1 59 1 32 1 
117 1 333 1 158 1 340 2 82 1 344 2 164 2 286 1 313 2 62 2 229 1 169 1 107 1 262 1 317 1 264 1 372 1 267 2 266 1 44 1 216 1 326 4 243 1 70 1 
330 1 65 1 110 1 186 1 121 1 93 1 152 1 328 1 
191 1 38 1 
191 1 38 1 
210 1 349 1 
210 1 349 1 
210 1 349 1 
201 1 191 1 38 1 
201 1 191 1 38 1 
201 1 191 1 38 1 
191 1 38 1 185 1 
149 1 210 1 349 1 51 1 191 2 38 2 
191 1 375 1 38 1 
191 1 375 1 38 1 
191 1 375 1 38 1 
116 1 52 1 24 1 25 1 5 1 75 1 179 1 367 1 186 2 185 1 14 1 88 1 38 1 39 1 40 1 65 2 110 2 191 1 324 1 133 1 93 2 135 1 20 1 328 2 
14 2 51 1 357 1 88 2 335 1 38 2 119 1 39 2 91 1 75 1 5 3 179 2 191 2 19 1 293 1 367 2 309 1 133 2 114 2 
238 1 
280 1 108 1 299 1 
280 1 299 1 238 2 348 1 
2 1 238 1 280 1 202 1 299 1 247 1 106 1 
2 2 238 1 280 1 299 1 247 1 106 1 
332 1 336 1 221 1 4 3 181 1 142 2 143 3 186 1 229 1 65 1 350 4 66 1 110 1 21 1 116 1 301 1 357 2 360 1 118 2 121 1 158 1 28 1 363 1 365 1 123 1 160 2 260 1 88 5 39 5 372 1 266 1 322 1 46 1 376 1 270 1 377 2 93 1 378 1 274 1 328 1 
332 1 336 1 221 1 4 3 181 1 143 3 186 1 229 1 65 1 350 4 66 1 110 1 193 2 21 1 116 1 301 1 357 2 360 1 118 2 121 1 158 1 28 1 363 1 364 1 365 3 123 1 160 2 260 1 88 5 39 5 372 1 266 1 373 2 322 1 174 1 270 1 377 2 93 1 378 1 274 1 328 1 
116 1 332 1 357 2 360 1 118 2 336 1 121 1 4 3 158 1 28 1 181 1 363 1 123 1 160 2 142 1 143 3 186 1 229 1 260 1 88 3 39 3 372 1 266 1 65 1 322 1 350 2 66 1 110 1 46 1 376 1 270 1 377 2 93 1 378 1 328 1 246 1 21 1 
332 1 336 1 4 7 181 1 282 1 142 2 143 5 186 1 229 2 65 1 66 2 350 3 110 1 246 1 21 1 116 2 357 4 360 1 118 4 121 1 28 1 158 2 200 1 363 1 123 1 160 4 366 1 260 1 88 4 39 4 372 2 266 2 322 3 376 1 46 1 270 1 377 4 378 1 93 1 328 1 
239 1 217 1 99 1 
67 1 239 1 
226 1 
269 1 239 1 235 1 
239 1 13 1 
239 1 235 1 
101 1 269 1 239 3 368 1 217 2 235 1 
86 1 189 1 169 3 139 1 304 1 158 1 372 1 267 4 215 1 326 7 164 3 206 1 144 1 296 1 312 1 70 2 113 2 
86 1 189 1 169 3 139 1 304 1 158 1 372 1 267 4 215 1 326 7 164 3 206 1 144 1 296 1 312 1 70 2 113 2 
86 1 189 1 169 3 139 1 304 1 158 1 372 1 267 4 215 1 326 7 164 3 206 1 144 1 296 1 312 1 70 2 113 2 105 1 
117 1 139 2 361 1 304 2 158 4 340 2 55 4 164 15 206 1 144 2 11 1 286 1 312 1 346 1 85 1 229 3 189 1 86 2 169 10 18 1 262 1 372 4 215 1 44 1 267 16 266 3 45 3 66 3 326 31 296 5 113 3 70 5 96 1 73 1 
117 2 86 1 189 1 169 4 17 1 262 2 139 1 361 1 304 1 158 1 340 4 372 1 267 5 44 2 326 9 164 4 272 1 206 1 144 1 286 2 312 1 296 1 70 3 113 2 
97 1 49 1 250 1 359 1 74 1 279 1 305 1 6 1 280 1 8 1 141 1 162 1 311 1 207 1 261 1 41 1 90 1 238 1 148 1 348 1 271 1 240 1 94 1 195 1 299 1 
97 1 49 2 250 1 74 1 279 2 305 1 6 1 306 1 280 1 8 1 141 1 162 1 207 1 261 1 128 1 41 1 90 1 238 1 148 1 348 1 268 1 241 1 240 1 94 1 195 1 299 1 
97 1 49 1 250 1 128 1 74 1 41 1 279 1 6 1 238 1 148 1 306 1 348 1 280 1 268 1 141 1 240 1 162 1 94 1 207 1 195 1 299 1 
49 1 250 2 277 1 74 2 253 1 279 1 6 2 341 1 8 1 205 1 141 1 162 1 59 1 34 1 41 2 90 1 235 1 148 1 239 1 241 1 351 1 94 1 195 1 
97 1 49 1 250 1 74 1 279 1 305 1 6 1 280 1 8 1 141 1 162 1 311 1 207 1 261 1 41 1 90 1 238 1 148 1 348 1 268 1 271 1 240 1 94 1 195 1 299 1 
22 1 
331 1 330 1 275 1 277 1 221 3 337 1 4 2 177 2 183 1 141 2 143 2 57 1 225 1 345 1 60 2 59 2 15 4 233 1 234 1 235 1 236 2 148 1 65 1 239 1 150 1 195 2 21 1 301 1 357 2 121 1 28 1 78 2 363 1 365 6 81 1 162 2 83 2 260 1 35 2 34 1 127 1 87 1 88 5 171 1 39 5 263 1 130 2 318 1 322 2 377 2 378 1 94 1 93 1 328 1 48 1 
15 2 330 1 331 1 35 1 233 1 88 3 263 1 39 3 221 1 337 1 121 1 318 1 65 1 365 2 150 1 192 1 225 1 57 1 93 1 345 1 328 1 48 1 
331 1 330 1 357 1 337 1 221 1 121 1 363 1 365 1 57 1 225 1 345 1 60 1 15 3 233 1 88 3 39 3 263 1 318 1 65 1 150 1 192 1 93 1 328 1 48 1 
331 1 330 1 357 1 221 1 337 1 121 1 363 1 365 2 57 1 225 1 345 1 83 1 60 1 15 3 35 1 233 1 88 3 39 3 263 1 318 1 65 1 150 1 192 1 93 1 328 1 48 1 
331 1 330 1 221 1 337 1 121 1 365 3 57 1 225 1 345 1 83 2 15 2 35 2 37 1 233 1 88 3 213 1 39 3 263 1 318 1 65 1 150 1 192 1 325 1 93 1 328 1 48 1 
330 1 331 1 275 1 337 1 221 2 4 2 177 2 183 1 225 1 57 1 143 1 345 1 60 2 15 4 233 1 234 1 236 2 65 1 150 1 21 1 301 1 357 2 121 1 28 1 78 2 363 1 365 4 83 2 260 1 35 2 88 4 263 1 39 4 130 2 318 1 322 2 377 1 93 1 328 1 48 1 
330 1 331 1 332 1 336 1 337 1 221 1 177 1 140 1 181 1 183 1 225 1 57 1 143 1 186 1 345 1 60 1 15 3 288 1 233 1 234 1 236 1 65 2 110 1 150 1 21 1 301 1 357 1 360 1 121 2 28 1 78 1 363 1 365 2 83 1 260 1 35 1 88 3 213 1 263 1 39 3 130 1 318 1 322 1 270 1 377 1 93 2 328 2 48 1 
330 1 331 1 332 1 336 1 337 1 221 1 177 1 140 1 181 1 183 1 225 1 57 1 143 1 186 1 345 1 60 1 15 3 288 1 233 1 234 1 236 1 65 2 110 1 150 1 21 1 301 1 357 1 360 1 121 2 28 1 78 1 363 1 365 2 83 1 260 1 35 1 88 3 213 1 263 1 39 3 130 1 318 1 322 1 270 1 377 1 93 2 328 2 48 1 
330 1 331 1 332 1 336 1 337 1 221 1 4 1 177 1 140 1 181 1 183 1 281 1 225 1 57 1 186 1 345 1 287 1 60 1 15 3 233 1 147 1 236 1 65 2 110 1 150 1 21 1 301 1 357 1 360 1 121 2 28 1 363 1 307 1 365 2 83 1 84 1 260 1 35 1 88 3 263 1 39 3 318 1 270 1 377 1 93 2 328 2 48 1 
330 1 331 1 332 1 336 1 337 1 221 1 177 1 140 1 181 1 183 1 225 1 57 1 143 1 186 1 345 1 60 2 15 4 288 1 233 1 234 1 236 1 65 2 110 1 150 1 21 1 301 1 357 1 360 1 121 2 28 1 78 1 363 1 365 3 83 2 260 1 35 2 37 1 88 3 213 1 263 1 39 3 130 1 318 1 322 1 270 1 377 1 93 2 328 2 48 1 
330 1 331 1 332 1 336 1 337 1 221 1 177 1 140 1 181 1 183 1 225 1 57 1 143 1 186 1 345 1 60 2 15 4 288 1 233 1 234 1 236 1 65 2 110 1 150 1 21 1 301 1 357 1 360 1 121 2 28 1 78 1 363 1 365 3 83 2 260 1 35 2 37 1 88 3 213 1 263 1 39 3 130 1 318 1 322 1 270 1 377 1 93 2 328 2 48 1 
330 1 331 1 275 1 337 1 221 2 4 2 177 2 183 1 281 1 225 1 57 1 345 1 287 2 60 2 15 4 233 1 236 2 65 1 150 1 21 1 301 1 357 1 121 1 28 1 363 1 365 4 83 2 84 2 260 1 35 2 88 4 263 1 39 4 318 1 377 1 93 1 328 1 48 1 
117 1 333 1 139 1 25 2 99 1 158 1 340 2 82 1 344 1 164 3 206 1 286 1 313 1 312 1 62 1 86 1 189 1 169 2 107 1 262 1 372 1 44 1 267 3 326 6 70 2 113 1 
117 2 53 1 25 1 362 1 176 1 158 1 340 4 55 3 82 2 344 11 164 6 10 1 286 2 313 11 346 1 229 2 62 4 169 2 107 1 262 2 372 2 44 2 267 8 266 1 45 3 66 2 326 14 245 1 296 1 297 1 70 1 355 1 96 1 
248 1 117 1 249 1 53 1 154 1 25 1 339 1 27 1 340 2 141 1 82 1 162 1 186 1 164 1 286 1 59 1 62 1 32 1 107 1 262 1 235 1 42 1 148 1 44 1 267 1 65 2 269 1 110 1 239 1 326 2 94 1 245 1 93 2 195 1 328 1 137 1 355 1 196 1 
0 1 53 1 139 1 339 2 340 6 7 2 141 3 344 7 186 1 286 3 59 1 62 7 229 2 189 1 107 3 235 2 148 2 65 3 66 2 110 1 239 2 294 1 245 1 195 3 296 4 113 1 70 4 355 1 248 1 117 3 249 2 356 2 25 2 26 2 158 3 82 3 257 1 164 10 162 3 206 1 312 1 313 7 32 2 86 1 169 8 262 3 369 2 129 2 372 3 44 3 267 10 266 2 268 1 269 2 326 20 93 3 94 2 328 1 137 1 
248 1 117 2 333 1 359 1 53 1 277 1 340 4 103 1 102 2 141 8 82 2 186 1 162 7 164 1 286 2 59 2 61 1 34 1 36 1 107 2 262 2 173 1 235 2 148 2 44 2 267 1 268 1 65 1 110 1 239 3 326 2 352 1 93 1 94 2 195 8 69 1 328 1 72 1 355 1 
115 1 117 1 158 1 340 2 82 1 344 1 186 1 164 2 286 1 313 1 62 1 229 1 169 1 107 1 262 1 372 1 44 1 267 1 266 1 65 1 66 1 110 1 270 1 326 3 245 1 93 1 70 1 328 1 300 1 
117 1 169 1 333 1 107 1 262 1 340 2 372 1 44 1 267 2 216 1 82 1 344 1 326 2 286 1 296 1 313 1 62 1 229 1 
117 1 169 1 333 1 107 1 262 1 317 1 158 1 340 2 44 1 266 1 82 1 344 1 326 2 164 2 286 1 313 1 70 1 62 1 
117 1 333 1 158 1 340 2 82 1 344 2 164 2 286 1 313 2 229 1 62 2 169 2 107 1 262 1 372 1 267 2 44 1 266 1 66 1 326 4 296 1 70 1 
117 1 36 1 169 1 107 1 262 1 340 2 372 1 44 1 267 2 216 1 82 1 344 1 326 2 286 1 296 1 313 1 62 1 229 1 
117 1 36 1 169 1 107 1 262 1 317 1 158 1 340 2 44 1 266 1 82 1 344 1 326 2 164 2 286 1 313 1 70 1 62 1 
117 1 158 1 340 2 82 1 344 2 164 2 286 1 313 2 229 1 62 2 36 1 169 2 107 1 262 1 372 1 267 2 44 1 266 1 66 1 326 4 296 1 70 1 
117 1 158 1 340 2 82 1 344 2 164 2 286 1 313 2 229 1 62 2 169 2 107 1 262 1 372 1 267 2 44 1 266 1 66 1 326 4 296 1 70 1 
117 1 249 1 53 1 25 1 26 1 339 1 340 2 141 1 82 1 162 1 164 1 286 1 59 1 32 1 107 1 262 1 235 1 267 1 148 1 44 1 65 1 269 1 239 1 326 2 94 1 93 1 195 1 355 1 
117 1 53 1 25 1 340 2 29 1 141 1 82 1 162 1 164 1 310 1 286 1 59 1 32 1 107 1 262 1 315 1 235 1 267 1 148 1 44 1 65 1 269 1 239 1 326 2 94 1 93 1 195 1 355 1 
117 1 158 1 340 2 82 1 344 2 164 2 286 1 313 2 229 1 62 2 169 2 107 1 262 1 372 1 267 2 44 1 266 1 66 1 326 4 245 1 296 1 70 1 
117 1 249 1 359 1 26 1 158 1 339 1 340 2 141 1 82 1 344 2 164 2 162 1 286 1 313 2 62 2 229 1 32 1 169 2 107 1 262 1 369 1 235 1 372 1 266 1 267 2 148 1 44 1 65 1 66 1 269 1 239 1 326 4 94 1 93 1 195 1 296 1 70 1 
115 1 117 1 158 1 340 2 82 1 344 1 164 1 186 1 286 1 313 1 12 1 229 1 62 1 169 1 107 1 262 1 372 1 266 1 44 1 267 2 65 1 66 1 110 1 270 1 326 3 245 1 93 1 296 1 328 1 
276 1 139 1 340 6 180 1 55 4 56 1 286 3 229 4 346 3 146 1 189 1 17 1 66 4 296 4 295 1 70 4 113 1 117 3 303 1 361 1 155 1 158 5 77 1 256 2 159 1 161 1 164 21 206 1 312 1 86 1 169 8 262 3 370 1 265 4 372 5 266 4 267 20 44 3 45 3 320 1 326 41 134 1 96 1 
117 4 276 1 303 1 139 1 361 2 155 1 158 4 77 1 180 1 340 8 256 2 56 1 159 1 55 4 161 1 164 18 206 1 286 4 312 1 146 1 346 3 229 4 86 1 189 1 169 7 17 1 262 4 370 1 265 4 372 5 44 4 267 20 266 3 320 1 45 3 66 4 326 38 134 1 295 1 296 3 113 1 70 4 96 1 
117 2 276 1 303 1 139 1 361 1 155 1 362 2 158 8 77 1 180 1 340 4 256 1 159 1 55 4 161 1 164 25 206 1 286 2 312 1 146 1 346 2 229 7 86 1 189 1 169 14 17 1 262 2 370 1 265 4 372 8 44 2 267 27 266 7 320 1 45 4 66 7 326 52 295 1 296 7 113 1 70 7 96 2 
117 2 197 1 303 2 158 3 340 4 256 1 56 1 55 2 161 1 164 10 286 2 146 1 346 1 229 3 169 6 17 1 262 2 370 1 265 2 372 3 44 2 267 9 266 3 320 1 45 1 66 3 326 19 296 3 70 3 96 1 
117 3 276 1 303 1 361 2 155 1 158 2 77 1 340 6 180 1 256 2 159 1 55 2 161 1 164 12 286 3 146 1 346 2 229 3 169 4 17 1 262 3 370 1 265 4 372 3 44 3 267 14 266 2 320 2 45 2 66 3 326 26 296 2 295 1 70 2 
14 1 51 1 191 1 38 1 367 1 119 1 309 1 133 1 120 1 179 1 
185 1 20 1 
329 1 14 1 191 1 38 1 367 1 133 1 179 1 319 1 64 1 
201 1 47 1 
149 1 212 1 375 1 
14 1 51 1 357 1 88 1 335 1 38 1 119 1 39 1 91 1 75 1 5 2 179 1 191 1 293 1 367 1 309 1 133 1 114 1 
14 1 51 1 357 1 88 1 335 1 38 1 119 1 39 1 91 1 75 1 5 2 179 1 191 1 293 1 367 1 309 1 133 1 114 1 
14 1 51 1 357 1 88 1 335 1 38 1 119 1 39 1 91 1 75 1 5 2 179 1 191 1 293 1 367 1 309 1 133 1 114 1 
149 1 201 1 47 1 
149 1 201 1 47 1 
212 1 375 1 
149 1 212 1 375 1 
24 1 40 1 
116 1 52 1 24 1 335 1 25 1 5 1 179 1 367 1 185 1 186 2 14 1 88 1 38 1 39 1 40 1 371 1 65 2 350 1 191 1 110 2 324 1 133 1 93 2 135 1 20 1 328 2 114 1 
117 1 53 1 122 1 340 2 102 2 141 2 82 1 164 1 162 2 286 1 61 1 63 1 33 1 107 1 262 1 235 1 148 1 44 1 267 1 65 2 239 1 112 1 326 2 194 1 352 1 94 1 245 1 93 2 195 2 328 2 355 1 
97 1 231 1 359 1 74 1 305 1 238 1 148 1 348 1 280 1 268 1 141 2 284 1 162 2 94 1 195 2 207 1 166 1 299 1 
97 1 74 1 305 1 238 1 148 1 348 1 280 1 268 1 141 1 284 1 162 1 94 1 195 1 207 1 220 1 299 1 
34 1 277 1 74 1 253 1 235 1 54 1 148 1 239 1 141 1 162 1 94 1 195 1 166 1 59 1 
97 1 231 1 74 1 305 1 238 1 148 1 348 1 280 1 268 1 141 1 284 1 162 1 94 1 195 1 207 1 166 1 299 1 
358 1 
363 1 357 1 289 1 143 1 377 1 99 1 145 1 
301 1 357 2 221 1 4 1 28 1 78 1 363 1 365 1 143 1 260 1 88 1 234 1 39 1 130 1 322 1 377 1 21 1 
301 1 28 1 76 1 235 1 148 2 101 1 79 1 67 1 269 1 239 2 141 1 162 1 94 1 195 1 59 1 21 1 260 1 
301 2 276 1 302 5 357 7 118 8 155 1 221 1 362 1 4 10 28 2 158 4 77 1 180 1 343 1 363 2 365 1 55 2 160 8 143 13 346 1 229 4 260 2 16 1 87 1 88 1 39 1 372 4 266 4 374 1 45 2 322 5 66 4 377 8 378 1 295 1 96 1 21 2 
301 1 302 2 332 1 360 1 139 1 336 1 121 1 28 1 158 1 181 1 343 1 30 1 143 2 186 1 206 1 260 1 288 1 86 1 88 1 39 1 372 2 65 1 110 1 270 1 377 2 93 1 328 1 21 1 
301 1 357 1 289 1 28 1 363 1 143 1 377 1 145 1 21 1 260 1 
302 2 357 5 118 5 129 1 4 10 158 2 372 2 266 2 343 1 66 2 322 5 160 5 143 5 377 5 229 2 
363 1 357 1 365 1 88 1 39 1 221 1 
153 1 301 1 277 1 221 2 28 2 365 4 141 4 9 1 143 2 162 4 59 2 230 1 260 2 209 2 127 1 34 1 87 2 88 3 171 1 39 3 235 1 148 1 239 1 377 2 94 1 378 2 195 4 246 1 21 2 
117 1 249 1 53 1 25 1 26 1 339 1 340 2 181 1 204 1 141 1 82 1 164 1 162 1 186 2 286 1 59 1 32 1 107 1 262 1 235 1 44 1 148 1 65 3 110 2 269 1 239 1 326 1 270 2 93 3 94 1 195 1 328 2 
301 1 357 4 87 1 118 2 4 4 28 1 363 2 322 2 160 2 143 1 377 2 378 1 113 1 21 1 260 1 
14 1 273 1 179 1 
14 1 273 1 179 1 
14 1 273 1 179 1 
14 1 24 1 309 1 179 1 71 1 
14 1 172 1 179 1 
14 1 172 1 179 1 
14 1 172 1 179 1 
14 1 179 1 
191 1 38 1 
117 2 189 1 86 1 169 3 262 2 361 1 139 1 158 1 340 4 372 1 267 4 44 2 326 8 164 4 206 1 286 2 296 1 312 1 113 1 70 2 
189 1 86 1 169 2 139 1 99 1 158 1 372 1 267 3 326 6 164 3 206 1 312 1 113 1 70 2 
117 1 169 2 262 1 255 1 158 1 340 2 372 1 266 1 44 1 267 2 66 1 326 4 164 2 286 1 296 1 70 1 229 1 
169 2 158 1 372 1 266 1 267 3 45 1 66 1 55 2 326 7 164 4 296 1 70 1 346 1 96 1 229 1 
117 2 139 2 361 2 362 1 176 1 158 3 340 4 55 2 164 12 206 1 227 1 286 2 312 1 229 2 86 2 189 1 169 9 262 2 372 3 267 11 266 2 44 2 45 2 66 2 326 23 296 4 113 1 70 5 96 1 
55 1 326 1 164 1 
45 1 326 1 267 1 
117 1 169 3 262 1 129 1 255 1 158 1 340 2 372 1 44 1 267 3 266 1 66 1 326 6 164 3 286 1 296 1 70 2 229 1 
117 1 276 1 155 1 158 2 340 2 180 1 77 1 55 1 164 6 286 1 346 1 229 2 169 2 17 1 262 1 372 2 44 1 267 6 266 2 45 1 66 2 326 12 296 1 295 1 70 1 
86 1 169 2 139 1 158 1 372 1 267 3 326 6 164 3 206 1 296 1 70 1 
117 1 86 1 189 1 169 2 262 1 139 1 361 1 340 2 267 1 44 1 326 3 164 2 227 1 286 1 296 1 312 1 70 1 
117 1 276 1 139 1 158 1 340 2 55 1 164 4 206 1 286 1 312 1 346 1 189 1 86 1 169 2 17 1 262 1 372 1 44 1 267 4 45 1 326 8 113 1 70 2 
117 2 276 1 139 1 255 1 158 1 340 4 55 2 164 5 206 1 286 2 312 1 346 1 229 1 86 1 189 1 169 3 17 1 262 2 372 2 44 2 267 6 45 1 66 1 326 11 296 1 113 1 70 2 96 1 
117 3 276 1 139 1 361 1 155 1 255 1 158 3 340 6 180 1 77 1 55 1 164 10 206 1 286 3 312 1 346 1 229 2 86 1 189 1 169 4 17 1 262 3 372 3 44 3 267 9 266 2 45 1 66 2 326 19 296 1 295 1 113 1 70 3 
117 3 276 1 139 1 361 1 155 1 255 1 158 2 340 6 180 1 77 1 55 1 164 7 206 1 286 3 312 1 346 1 229 2 86 1 189 1 169 5 17 1 262 3 372 3 44 3 267 10 266 1 45 1 66 2 326 17 296 2 295 1 113 1 70 3 
117 1 276 1 139 1 158 1 340 2 55 1 164 4 206 1 286 1 312 1 346 1 189 1 86 1 169 2 17 1 262 1 372 1 44 1 267 4 45 1 326 8 113 1 70 2 
117 1 276 1 155 1 158 2 340 2 180 1 77 1 55 1 164 6 286 1 346 1 229 2 169 2 17 1 262 1 372 2 44 1 267 6 266 2 45 1 66 2 326 12 296 1 295 1 70 1 
117 4 276 1 139 1 361 2 155 1 255 1 158 2 77 1 340 8 180 1 55 1 164 8 206 1 286 4 312 1 346 1 229 2 86 1 189 1 169 5 17 1 262 4 372 3 44 4 267 10 266 1 45 1 66 2 326 18 296 2 295 1 113 1 70 3 
117 4 276 1 361 2 155 1 158 2 77 1 340 8 180 1 55 1 56 1 164 7 286 4 346 1 229 3 169 6 17 1 262 4 372 3 44 4 267 9 266 2 45 1 66 3 326 16 296 3 295 1 70 3 
189 2 86 3 169 6 139 3 158 1 372 1 267 3 326 7 164 4 206 1 312 1 296 3 70 3 
117 4 276 1 139 1 361 2 155 1 158 2 77 1 340 8 180 1 55 1 56 1 164 8 206 1 286 4 312 1 346 1 229 2 86 1 189 1 169 4 17 1 262 4 372 3 44 4 267 10 266 1 45 1 66 2 326 18 296 1 295 1 113 1 70 3 
117 1 86 2 169 5 17 1 262 1 139 2 158 2 340 2 372 2 44 1 267 5 30 1 326 10 164 5 206 1 286 1 296 2 70 3 
117 1 169 1 17 1 262 1 340 2 372 1 44 1 267 2 326 2 286 1 296 1 229 1 
117 1 169 2 17 1 262 1 158 1 340 2 372 1 266 1 44 1 267 2 66 1 326 4 164 2 286 1 296 1 70 1 229 1 
117 3 86 1 169 2 17 1 262 3 361 1 139 1 340 6 44 3 267 1 56 1 326 3 164 2 227 1 286 3 296 1 70 1 
117 5 139 3 361 2 255 1 158 5 340 10 55 4 56 1 164 18 206 2 11 1 227 1 286 5 312 1 346 1 85 1 229 3 86 3 189 1 169 12 17 1 18 1 262 5 372 5 44 5 267 16 266 3 45 3 66 3 326 34 296 5 113 1 70 7 96 1 
65 1 89 1 25 1 242 1 93 1 345 1 328 1 
3 1 89 1 25 1 157 1 92 1 65 1 218 1 242 1 93 1 259 1 345 1 328 1 
34 1 277 1 239 1 141 1 162 1 94 1 99 1 195 1 235 1 59 1 148 1 
248 1 249 1 25 1 235 1 148 1 65 2 269 1 110 1 239 1 141 1 186 1 162 1 93 2 94 1 195 1 328 1 59 1 32 1 
330 1 248 1 209 1 249 1 25 1 337 1 121 1 235 2 148 1 65 2 269 2 110 1 239 3 141 1 258 1 186 2 162 1 93 2 94 1 195 1 328 2 13 1 32 1 
330 1 248 1 209 1 315 1 25 1 337 1 121 1 235 2 148 1 65 2 269 2 110 1 239 3 141 2 258 1 186 2 162 2 244 1 93 2 94 1 195 2 328 2 13 1 32 1 
209 1 50 1 357 1 88 2 263 1 39 2 235 1 148 1 363 1 190 1 269 1 67 1 365 1 141 3 239 4 258 1 217 1 162 3 244 1 94 1 195 3 59 1 13 1 
209 1 357 1 88 2 263 1 39 2 235 1 148 1 363 1 269 1 67 1 365 1 141 3 239 4 258 1 217 1 162 3 244 1 94 1 195 3 59 1 354 1 13 1 
141 1 162 1 94 1 195 1 69 1 148 1 
138 1 359 1 173 1 235 2 182 1 148 3 101 1 102 1 268 1 103 1 269 1 141 7 239 3 162 6 163 1 352 1 94 2 195 7 69 1 59 2 72 1 
248 1 117 2 249 1 359 1 139 1 25 2 26 1 158 1 339 1 340 4 7 1 82 2 141 1 344 1 164 3 186 1 162 1 206 1 286 2 313 1 312 1 62 1 32 1 33 1 86 1 189 1 169 2 107 2 262 2 369 1 235 1 372 1 267 3 148 1 44 2 65 2 269 1 110 1 239 1 326 6 94 1 245 1 93 2 195 1 113 1 70 2 328 1 
301 2 357 1 221 1 28 2 363 1 365 2 141 1 143 1 9 1 162 1 228 1 145 1 59 1 260 2 167 1 289 1 88 3 39 3 263 1 290 1 350 1 67 1 239 2 217 1 377 1 195 1 354 1 21 2 
101 1 269 1 359 1 239 2 141 2 217 1 162 2 94 1 76 1 195 2 235 1 69 1 148 2 
34 1 359 1 277 1 235 1 148 1 141 4 239 1 162 4 244 1 94 1 195 4 298 1 59 1 
209 1 138 1 235 1 182 1 148 2 347 1 269 1 80 1 141 2 239 1 162 2 294 1 94 1 195 2 
280 1 97 1 141 1 108 1 162 1 94 1 195 1 299 1 59 1 148 1 
359 1 235 1 148 1 268 1 141 2 112 1 239 1 162 2 352 1 94 1 195 2 
209 1 34 1 277 1 359 1 235 2 173 1 148 2 103 1 141 5 239 3 162 4 352 1 94 2 195 5 298 1 59 1 
209 1 34 1 277 1 359 1 334 1 235 2 173 1 148 2 141 5 239 3 162 4 352 1 94 2 195 5 298 1 59 1 
248 1 315 1 25 1 235 1 148 1 65 2 269 1 110 1 239 1 141 1 186 1 162 1 93 2 94 1 195 1 328 1 59 1 32 1 
209 1 138 1 235 1 182 1 148 2 101 1 269 1 141 1 239 1 162 1 163 1 94 1 195 1 
104 1 124 1 283 1 25 1 353 1 
330 1 357 1 88 2 263 1 39 2 25 1 337 1 121 1 199 1 338 1 363 1 350 1 104 1 150 1 124 2 283 2 327 1 353 2 136 1 
122 1 65 1 104 1 124 1 194 1 93 1 353 1 328 1 63 1 
330 1 104 1 150 1 124 1 263 1 283 1 337 1 327 1 121 1 338 1 353 1 136 1 
68 1 151 1 316 1 99 1 
49 1 8 1 68 1 151 1 316 1 90 1 279 1 
49 1 250 1 6 1 
49 3 316 1 90 1 279 3 291 1 8 1 203 1 68 1 151 1 308 2 285 1 311 1 
98 1 49 2 8 1 68 1 151 1 316 1 90 1 279 2 306 1 
49 1 8 1 151 1 314 1 90 1 279 1 311 1 238 1 43 1 
49 1 8 1 151 1 316 1 90 1 279 1 311 1 
49 1 8 1 68 1 316 2 90 1 279 1 311 1 
49 2 1 1 175 1 316 1 90 2 279 2 8 2 292 1 151 1 311 1 
49 3 252 1 314 1 316 1 90 1 279 3 306 2 8 1 68 1 224 1 151 2 311 1 31 1 
280 1 232 1 49 1 8 1 90 1 279 1 311 1 299 1 238 1 348 1 
49 4 98 1 252 1 314 1 316 1 90 2 279 4 306 2 8 2 68 1 151 2 311 1 187 1 
49 1 8 1 68 1 151 1 316 1 90 1 279 1 311 1 
49 4 252 1 314 1 316 2 90 1 279 4 306 2 291 1 321 1 8 1 203 1 68 2 151 3 308 1 
49 2 251 1 316 1 90 1 279 2 306 1 223 1 8 1 68 1 151 1 311 1 126 1 
49 3 316 1 90 1 279 3 291 2 8 1 203 1 68 1 151 1 308 2 311 1 125 1 
131 1 151 2 165 2 100 1 
49 1 8 1 90 1 222 1 279 1 311 1 
49 2 8 1 68 1 151 1 316 1 90 1 279 2 311 1 31 1 306 1 
278 1 
49 1 8 1 68 1 151 1 316 1 90 1 279 1 311 1 
49 3 8 1 68 1 151 1 308 1 316 1 90 1 279 3 311 1 31 1 306 1 
321 1 151 1 314 1 252 1 
151 1 316 1 

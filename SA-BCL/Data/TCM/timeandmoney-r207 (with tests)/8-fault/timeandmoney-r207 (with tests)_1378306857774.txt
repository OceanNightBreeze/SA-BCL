#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) (140,211) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (140,211) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) (140,211) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (4,280,291,313) (4,280,291,313) (4,280,291,313) 51 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 51 1 
263 1 144 1 240 1 
119 1 317 2 240 1 
79 2 208 2 233 1 43 2 93 2 158 2 166 2 200 1 
117 1 79 3 246 2 82 1 5 1 124 1 254 1 84 1 166 2 207 1 9 2 208 2 12 1 43 2 47 1 214 1 93 3 217 1 96 1 176 1 264 1 183 1 141 1 233 1 192 1 193 2 72 1 194 1 158 2 196 1 114 2 238 1 159 1 333 2 29 1 200 1 332 1 
39 1 79 1 208 1 232 1 43 1 93 1 158 1 272 1 166 1 200 1 
79 1 100 1 263 1 181 1 101 1 37 1 166 1 39 1 149 1 322 1 49 1 93 1 328 1 240 1 
79 1 100 1 263 1 181 1 101 2 37 1 166 1 149 2 208 1 39 1 43 1 93 1 328 1 158 1 240 1 
149 1 293 1 101 1 319 1 61 1 
149 2 263 1 210 1 293 1 101 2 260 1 61 1 240 1 
149 1 293 1 101 1 
79 1 101 1 272 1 61 1 166 1 39 1 149 1 208 1 232 1 323 1 43 1 93 1 158 1 200 1 
240 1 
149 2 263 1 293 1 120 1 101 2 260 1 61 1 240 1 
263 1 202 2 57 1 293 2 101 5 59 1 273 1 61 2 230 1 255 2 149 5 23 1 90 1 112 1 288 1 260 1 331 1 240 1 78 2 
233 1 144 1 
79 2 251 1 166 2 208 1 233 2 68 1 43 1 93 2 158 1 
278 1 173 1 116 1 
79 1 246 1 141 1 124 1 233 1 12 1 193 1 93 1 214 1 114 1 238 1 96 1 15 1 176 1 332 1 29 1 
79 5 268 1 166 5 208 4 322 1 87 2 233 1 42 1 68 1 43 1 93 5 26 1 158 4 197 1 
39 1 79 2 208 2 269 1 93 2 158 2 272 1 166 2 
79 2 246 1 124 1 141 1 166 1 208 1 87 1 12 1 193 1 214 1 26 1 93 2 158 1 114 1 96 1 238 1 176 1 29 1 332 1 116 1 
79 3 208 3 87 1 233 1 43 1 93 3 158 3 166 3 
39 1 79 1 208 1 93 1 158 1 272 1 166 1 
39 1 79 1 208 1 251 1 43 1 68 1 93 1 158 1 166 1 
79 4 1 1 246 1 37 1 82 1 5 1 124 1 254 1 166 3 9 1 208 3 39 1 87 1 12 1 43 2 214 1 93 4 217 1 96 1 176 1 100 1 264 1 181 1 183 1 101 1 141 1 149 1 233 1 192 1 68 1 193 1 236 1 72 1 26 1 328 1 158 3 196 1 114 1 238 1 159 1 333 2 29 1 332 1 200 1 
79 2 208 1 322 1 87 1 233 1 268 1 93 2 158 1 166 2 
100 1 79 3 181 1 101 1 37 1 166 3 149 1 39 1 208 3 87 2 43 1 68 1 236 1 26 1 93 3 328 1 158 3 240 1 99 1 
79 2 166 2 208 2 87 1 68 1 43 1 93 2 173 1 158 2 116 1 
79 1 246 1 141 1 124 1 233 1 12 1 193 1 93 1 214 1 114 1 238 1 96 1 176 1 332 1 29 1 
79 1 246 1 252 1 124 1 233 1 12 1 193 1 93 1 214 1 114 1 238 1 96 1 176 1 29 1 220 1 
80 1 5 1 253 1 254 1 9 4 89 1 47 2 172 1 173 2 177 1 264 1 183 1 225 1 266 1 274 1 150 1 192 1 278 2 327 1 156 1 196 1 159 2 333 2 116 2 
79 1 269 1 166 1 208 1 39 1 93 1 328 1 158 1 
121 1 77 1 
121 1 77 1 
190 1 32 1 
190 1 32 1 
190 1 32 1 
121 1 304 1 77 1 
121 1 146 1 77 1 
245 1 190 1 121 2 32 1 142 1 77 2 
121 1 304 1 77 1 
121 1 304 1 77 1 
121 1 46 1 77 1 
121 1 46 1 77 1 
121 1 46 1 77 1 
79 2 290 1 222 1 244 1 122 1 121 1 164 1 101 1 33 1 35 1 146 1 22 1 166 2 147 1 167 1 149 1 208 2 233 1 130 1 93 2 158 2 27 1 97 1 77 1 
290 2 222 1 244 2 245 1 121 2 164 2 101 2 275 1 38 1 147 2 149 2 40 2 25 1 213 1 73 1 175 1 240 1 97 3 77 2 
11 1 153 1 198 1 
11 1 198 1 55 1 
11 3 171 1 153 2 111 1 216 1 55 1 
109 1 11 2 171 1 153 1 216 1 55 1 
11 2 153 1 171 2 216 1 55 1 
202 1 119 1 293 1 249 1 126 1 255 1 127 1 167 1 89 1 90 1 130 1 44 2 172 1 48 1 260 1 219 1 221 2 263 1 224 1 101 5 266 1 317 3 273 2 61 4 22 1 149 5 67 2 71 1 327 1 329 1 331 3 240 2 78 1 
202 2 119 3 293 6 163 1 297 1 126 2 255 2 127 2 170 1 89 3 90 1 130 4 172 3 260 1 98 1 219 3 221 6 263 1 224 3 101 9 266 3 316 1 317 9 319 5 273 6 61 7 23 1 149 9 67 6 325 5 71 1 327 3 286 1 331 8 240 5 78 2 
79 1 202 1 119 2 126 1 166 1 255 1 127 1 39 1 208 1 89 1 43 1 130 1 44 1 48 1 172 1 93 1 219 1 221 2 263 1 224 1 101 3 266 1 317 4 272 1 61 2 273 2 149 3 23 1 232 1 323 1 151 1 67 2 327 1 329 1 158 1 331 3 240 3 200 1 78 1 
79 1 163 1 166 1 255 1 170 1 89 2 172 2 93 1 263 1 101 4 266 2 272 1 273 4 23 1 286 1 200 1 202 1 119 3 126 1 127 1 39 1 208 1 130 2 43 1 44 2 48 1 219 2 221 4 224 2 317 7 61 3 149 4 232 1 67 4 151 1 323 1 327 2 329 1 158 1 331 5 240 4 78 1 
66 1 214 1 144 1 
294 1 214 1 
161 1 
214 1 96 1 29 1 
326 1 214 1 
214 1 29 1 
66 2 191 1 214 3 96 1 29 1 189 1 
223 1 185 1 139 1 226 1 34 1 271 1 148 1 150 3 9 7 88 1 324 1 70 2 172 1 47 4 327 1 159 3 177 2 
223 1 185 1 139 1 226 1 34 1 271 1 148 1 150 3 9 7 88 1 324 1 70 2 172 1 47 4 327 1 159 3 177 2 
223 1 185 1 139 1 226 1 34 1 271 1 148 1 150 3 9 7 88 1 324 1 70 2 172 1 47 4 327 1 74 1 159 3 177 2 
34 2 254 1 125 1 9 31 88 2 89 3 47 16 172 4 215 1 261 4 219 3 177 5 179 1 312 1 180 1 264 1 223 2 183 1 185 1 139 5 266 3 226 1 271 2 148 1 150 10 324 1 69 1 70 3 327 4 113 1 196 1 159 15 333 2 160 3 
34 1 254 2 9 9 88 1 172 1 47 5 177 3 264 2 223 1 183 2 185 1 139 1 104 1 271 1 148 1 150 4 324 1 70 2 327 1 113 1 237 1 196 2 159 4 333 4 
291 1 313 1 110 1 280 1 51 1 
291 1 313 1 110 1 280 1 140 1 
110 1 280 1 211 1 4 1 
291 1 313 1 110 1 280 1 140 1 
291 1 313 1 110 1 280 1 51 1 
311 1 
79 1 246 2 162 1 2 1 6 2 255 1 166 1 90 1 12 2 92 1 93 1 260 3 176 1 100 1 263 1 181 1 18 1 101 5 270 1 19 1 273 2 276 1 21 1 108 4 193 2 114 2 195 1 29 1 202 1 31 1 292 1 119 2 293 6 37 1 299 2 127 1 39 1 214 1 49 1 307 2 138 1 317 2 227 1 60 2 231 2 149 5 322 1 155 2 328 1 330 1 76 2 331 2 238 1 240 2 78 1 
100 1 79 1 181 1 292 1 293 2 138 1 120 1 18 1 101 3 227 1 270 1 37 1 166 1 231 1 108 2 39 1 149 3 322 1 49 1 93 1 328 1 260 1 
79 1 292 1 293 1 120 1 37 1 166 1 299 1 39 1 93 1 49 1 260 1 100 1 181 1 263 1 138 1 18 1 101 3 227 1 270 1 108 3 149 3 322 1 328 1 240 1 
79 1 292 1 293 2 120 1 37 1 166 1 299 1 39 1 93 1 49 1 260 1 100 1 181 1 263 1 138 1 18 1 101 3 227 1 270 1 108 3 231 1 149 3 322 1 328 1 76 1 240 1 
79 1 202 1 292 1 119 2 293 7 120 1 204 1 37 1 6 2 255 1 299 4 166 1 39 1 90 1 49 1 93 1 307 2 260 3 17 1 100 1 263 5 181 1 138 1 184 1 18 1 101 5 227 1 270 1 60 2 19 1 273 1 187 1 106 1 21 1 108 6 231 4 149 5 322 1 155 2 328 1 331 1 76 4 240 5 78 1 
79 1 2 1 6 2 166 1 255 1 90 1 93 1 260 2 100 1 181 1 263 1 18 1 101 4 270 1 19 1 273 1 21 1 108 4 202 1 292 1 119 2 293 4 37 1 299 2 39 1 49 1 307 2 138 1 227 1 317 2 60 2 231 2 149 4 322 1 155 2 328 1 331 1 76 2 240 2 78 1 
79 1 202 1 292 1 293 4 119 2 37 1 204 1 6 2 299 2 166 1 255 1 39 1 90 1 93 1 49 1 307 2 260 2 100 1 263 1 181 1 138 1 18 1 101 4 227 1 270 1 60 2 19 1 273 1 187 1 106 1 21 1 231 2 108 4 149 4 322 1 155 2 328 1 76 2 331 1 240 1 78 1 
79 1 202 1 292 1 293 4 119 2 37 1 204 1 6 2 299 2 166 1 255 1 39 1 90 1 93 1 49 1 307 2 260 2 100 1 263 1 181 1 138 1 18 1 101 4 227 1 270 1 60 2 19 1 273 1 187 1 106 1 21 1 231 2 108 4 149 4 322 1 155 2 328 1 76 2 331 1 240 1 78 1 
79 1 202 1 292 1 243 1 293 4 118 2 37 1 6 2 299 2 166 1 255 1 39 1 209 2 90 1 45 1 93 1 49 1 307 2 260 2 13 1 100 1 263 1 181 1 138 1 18 1 101 4 317 2 227 1 270 1 19 1 273 1 106 1 231 2 108 4 149 4 322 1 328 1 76 2 331 1 240 1 78 1 
79 1 202 1 292 1 119 2 293 5 37 1 204 1 6 2 255 1 166 1 299 3 39 1 90 1 93 1 49 1 307 2 260 2 100 1 263 1 181 1 138 1 18 1 184 1 101 4 227 1 270 1 60 2 19 1 273 1 187 1 106 1 21 1 108 5 231 3 149 4 322 1 155 2 328 1 331 1 76 3 240 1 78 1 
79 1 202 1 292 1 119 2 293 5 37 1 204 1 6 2 255 1 166 1 299 3 39 1 90 1 93 1 49 1 307 2 260 2 100 1 263 1 181 1 138 1 18 1 184 1 101 4 227 1 270 1 60 2 19 1 273 1 187 1 106 1 21 1 108 5 231 3 149 4 322 1 155 2 328 1 331 1 76 3 240 1 78 1 
79 1 202 1 292 1 293 4 118 2 2 1 37 1 6 2 299 2 255 1 166 1 39 1 209 2 90 1 49 1 93 1 307 2 260 2 13 1 100 1 263 1 181 1 138 1 18 1 101 4 317 2 227 1 270 1 19 1 273 1 231 2 108 4 149 4 322 1 328 1 76 2 331 1 240 1 78 1 
264 1 80 1 183 1 185 1 34 1 5 1 144 1 254 1 148 1 9 6 150 2 88 1 233 2 278 1 192 1 324 1 70 1 47 3 172 1 327 1 173 1 196 1 159 3 177 2 333 2 116 1 
117 1 82 1 5 2 254 2 7 1 9 14 89 2 91 1 47 8 172 2 215 1 173 4 218 1 132 1 177 1 261 3 219 2 180 1 264 2 183 2 139 1 266 1 150 2 233 1 192 1 278 11 284 1 327 1 196 2 159 6 333 4 160 3 116 11 
30 1 79 2 117 1 246 1 203 1 124 1 5 1 82 1 254 1 166 1 208 1 9 2 87 1 12 1 47 1 214 1 93 2 173 1 96 1 176 1 15 1 264 1 183 1 141 1 63 1 233 1 192 1 193 1 284 1 26 1 158 1 114 1 196 1 238 1 159 1 29 1 332 1 333 2 
79 3 246 3 82 1 5 3 254 3 166 1 9 20 88 1 87 1 12 1 89 2 172 3 93 3 173 7 96 2 177 4 176 2 262 2 264 3 183 3 185 1 266 2 192 3 278 7 193 3 26 1 284 1 114 3 196 3 29 2 116 7 117 1 123 1 34 1 124 2 205 2 128 1 208 1 303 1 47 10 214 2 306 1 219 2 134 2 139 4 141 2 148 1 150 8 233 2 324 1 70 1 327 3 157 2 72 2 158 1 238 2 159 10 333 6 332 2 
79 1 117 1 80 1 246 7 162 1 5 2 82 1 254 2 166 1 84 2 208 1 9 2 169 1 87 1 12 2 47 1 93 1 214 3 305 1 306 1 310 1 176 2 264 2 136 1 183 2 228 1 105 1 276 1 192 2 193 8 285 1 158 1 114 8 196 2 238 2 159 1 28 1 333 4 29 2 
79 1 5 1 254 1 166 1 208 1 9 3 89 1 43 1 172 1 47 1 93 1 173 1 177 1 219 1 264 1 183 1 266 1 188 1 150 1 278 1 192 1 68 1 284 1 327 1 158 1 196 1 159 2 333 2 116 1 
264 1 80 1 183 1 225 1 139 1 5 1 254 1 150 1 9 2 278 1 192 1 89 1 172 1 47 2 173 1 196 1 333 2 116 1 
264 1 80 1 183 1 266 1 5 1 254 1 150 1 9 2 278 1 192 1 156 1 327 1 173 1 196 1 177 1 159 2 333 2 116 1 
80 1 5 1 254 1 9 4 89 1 47 2 172 1 173 2 219 1 177 1 264 1 183 1 139 1 266 1 150 2 192 1 278 2 327 1 196 1 159 2 333 2 116 2 
264 1 183 1 225 1 139 1 105 1 5 1 254 1 150 1 9 2 278 1 192 1 89 1 172 1 47 2 173 1 196 1 333 2 116 1 
264 1 183 1 266 1 105 1 5 1 254 1 150 1 9 2 278 1 192 1 156 1 327 1 173 1 196 1 177 1 159 2 333 2 116 1 
5 1 254 1 9 4 89 1 47 2 172 1 173 2 219 1 177 1 264 1 183 1 139 1 266 1 105 1 150 2 192 1 278 2 327 1 196 1 159 2 333 2 116 2 
264 1 183 1 266 1 139 1 5 1 254 1 150 2 9 4 278 2 192 1 89 1 172 1 47 2 327 1 173 2 196 1 177 1 159 2 219 1 333 2 116 2 
117 1 79 1 246 1 124 1 5 1 82 1 254 1 9 2 12 1 47 1 214 1 93 1 96 1 176 1 264 1 183 1 141 1 233 1 192 1 193 1 72 1 114 1 196 1 238 1 159 1 29 1 332 1 333 2 
117 1 79 1 246 1 295 1 124 1 252 1 5 1 82 1 254 1 9 2 12 1 47 1 214 1 93 1 96 1 176 1 220 1 264 1 183 1 233 1 192 1 193 1 114 1 196 1 238 1 159 1 29 1 333 2 
5 1 254 1 9 4 89 1 47 2 172 1 173 2 219 1 177 1 264 1 183 1 139 1 266 1 150 2 192 1 278 2 284 1 327 1 196 1 159 2 333 2 116 2 
79 1 246 1 124 1 5 1 254 1 9 4 89 1 47 2 172 1 214 1 93 1 173 2 96 1 177 1 176 1 219 1 134 1 264 1 183 1 266 1 139 1 141 1 150 2 278 2 192 1 193 1 327 1 72 1 114 1 196 1 238 1 159 2 332 1 28 1 29 1 333 2 116 2 
79 1 36 1 5 1 254 1 166 1 208 1 9 3 89 1 43 1 172 1 47 2 93 1 173 1 219 1 264 1 183 1 266 1 139 1 150 1 192 1 278 1 68 1 327 1 284 1 158 1 196 1 159 1 333 2 116 1 
0 2 254 2 85 1 9 19 168 1 257 1 89 3 47 9 172 3 215 1 177 3 261 2 219 3 180 1 264 2 182 1 314 1 183 2 139 3 266 3 104 1 277 1 150 6 279 2 154 1 327 3 196 2 159 10 333 4 160 1 
248 1 0 4 254 3 85 2 9 26 257 2 89 3 47 14 172 3 259 1 177 2 261 2 219 3 180 2 264 3 182 1 183 3 186 1 139 2 266 2 104 1 318 1 150 4 277 1 64 1 279 1 154 1 327 2 113 2 196 3 239 1 159 12 333 6 160 2 
248 1 0 4 34 1 254 3 85 1 9 41 257 2 258 1 88 1 89 4 47 20 172 5 215 1 259 1 177 4 261 4 219 4 180 3 264 3 182 1 314 1 183 3 185 1 186 1 139 4 266 4 104 1 318 1 148 1 64 1 277 1 150 8 279 1 324 1 154 1 70 1 327 5 113 1 196 3 239 1 159 21 333 6 160 3 
248 1 0 4 34 1 254 4 85 1 9 38 257 2 258 1 88 1 89 4 47 20 172 5 215 1 259 1 177 4 261 4 219 4 180 3 264 4 182 1 314 1 183 4 185 1 186 1 139 3 266 3 104 1 318 1 148 1 64 1 277 1 150 7 279 1 324 1 154 1 70 1 327 4 113 2 196 4 239 1 159 18 333 8 160 3 
248 1 0 4 34 1 254 2 85 1 9 52 257 1 88 1 89 7 47 27 172 8 215 2 259 1 132 2 177 7 261 4 219 7 180 2 264 2 182 1 183 2 185 1 186 1 139 7 266 7 104 1 318 1 148 1 64 1 277 1 150 14 279 1 324 1 154 1 70 1 327 8 113 1 196 2 239 1 159 25 333 4 160 4 
290 1 244 1 245 1 164 1 121 1 213 1 175 1 77 1 147 1 256 1 
122 1 146 1 
290 1 244 1 164 1 121 1 152 1 212 1 14 1 77 1 147 1 
304 1 309 1 
46 1 142 1 143 1 
290 1 222 1 244 1 245 1 121 1 164 1 101 1 275 1 38 1 147 1 149 1 40 1 25 1 213 1 175 1 240 1 97 2 77 1 
290 1 222 1 244 1 245 1 121 1 164 1 101 1 275 1 38 1 147 1 149 1 40 1 25 1 213 1 175 1 240 1 97 2 77 1 
290 1 222 1 244 1 245 1 121 1 164 1 101 1 275 1 38 1 147 1 149 1 40 1 25 1 213 1 175 1 240 1 97 2 77 1 
304 1 142 1 309 1 
304 1 142 1 309 1 
46 1 143 1 
46 1 142 1 143 1 
33 1 27 1 
79 2 290 1 244 1 164 1 121 1 122 1 33 1 35 1 38 1 166 2 167 1 208 2 40 1 130 1 93 2 97 1 101 1 61 1 147 1 22 1 146 1 149 1 233 1 158 2 115 1 27 1 77 1 
79 2 117 1 247 1 246 2 5 1 82 1 254 1 166 2 84 2 9 2 169 1 47 1 214 1 93 2 174 1 53 1 176 1 264 1 183 1 192 1 193 2 235 1 284 1 285 1 114 2 196 1 238 1 159 1 29 1 241 1 333 2 
246 2 250 1 65 1 11 2 24 1 153 1 111 1 193 2 283 1 306 1 114 2 52 1 238 1 198 1 176 1 54 1 55 1 16 1 28 1 
246 1 103 1 65 1 11 2 24 1 153 1 111 1 193 1 283 1 306 1 114 1 52 1 238 1 198 1 54 1 176 1 55 1 
246 1 162 1 267 1 276 1 12 1 193 1 131 1 283 1 214 1 114 1 238 1 176 1 29 1 16 1 
246 1 250 1 65 1 11 2 24 1 153 1 111 1 193 1 283 1 306 1 114 1 52 1 238 1 198 1 176 1 54 1 55 1 16 1 
234 1 
263 1 57 1 112 1 331 1 273 1 144 1 240 1 
202 1 119 1 293 1 255 1 90 1 260 1 263 1 101 1 317 1 60 1 273 1 21 1 149 1 155 1 331 1 240 2 78 1 
202 2 119 3 293 2 246 1 294 2 83 1 255 2 127 1 86 1 10 1 89 1 301 1 12 1 90 2 172 1 214 4 260 1 96 1 219 1 176 2 221 3 262 1 100 1 224 2 101 2 266 1 58 1 317 6 273 3 62 1 189 1 149 2 67 3 66 1 193 1 327 1 114 1 238 1 331 4 240 3 199 1 29 1 78 2 
202 2 248 1 293 1 119 3 298 1 127 1 255 2 90 2 89 2 172 2 259 1 260 1 261 1 219 2 221 5 180 1 263 2 224 1 101 1 266 2 317 6 318 1 273 5 107 1 149 1 64 1 151 2 67 5 327 2 330 1 331 8 239 1 240 5 160 1 78 2 
79 1 202 1 34 1 255 1 166 1 39 1 208 1 88 1 41 1 90 1 43 1 172 2 93 1 224 1 101 1 185 1 272 1 187 1 273 2 149 1 232 1 151 2 323 1 327 1 158 1 331 2 200 1 78 1 
202 1 263 1 57 1 273 1 255 1 90 1 112 1 331 1 240 1 78 1 
221 2 119 2 224 1 266 1 317 4 273 2 151 1 67 2 89 1 172 1 327 1 331 2 219 1 240 2 
149 1 263 1 293 1 101 1 260 1 240 1 
242 1 31 1 202 2 246 4 293 4 162 1 255 2 127 2 90 1 12 2 92 1 214 1 50 1 260 2 176 1 101 3 20 1 273 2 276 1 23 1 149 3 193 4 114 4 330 2 289 2 238 1 331 2 29 1 78 2 
79 3 246 1 82 1 124 1 5 1 254 1 166 2 9 1 208 2 12 1 43 2 93 3 214 1 217 1 96 1 176 1 264 1 183 1 141 1 233 1 192 1 193 1 72 1 158 2 114 1 196 1 238 1 159 1 333 2 200 1 332 1 29 1 
202 1 263 1 119 1 317 2 273 1 255 1 127 1 67 1 90 1 330 1 331 1 240 2 78 1 
244 1 164 1 8 1 
244 1 164 1 213 1 165 1 27 1 
244 1 164 1 8 1 
244 1 164 1 8 1 
244 1 164 1 75 1 
244 1 164 1 75 1 
244 1 164 1 75 1 
244 1 164 1 
121 1 77 1 
264 2 183 2 185 1 139 1 34 1 254 2 148 1 9 8 150 3 88 1 324 1 70 1 172 1 47 4 327 1 113 1 196 2 159 4 177 2 333 4 
185 1 34 1 144 1 148 1 150 2 9 6 88 1 324 1 70 1 172 1 47 3 327 1 159 3 177 2 
264 1 137 1 183 1 266 1 139 1 254 1 150 2 9 4 89 1 172 1 47 2 327 1 196 1 177 1 159 2 219 1 333 2 
180 1 266 1 139 1 9 7 150 2 89 1 47 3 172 1 327 1 215 1 177 1 261 2 159 4 219 1 160 1 
34 2 254 2 9 23 88 2 89 2 91 1 172 3 47 11 215 1 219 2 261 2 177 5 132 1 264 2 183 2 185 1 139 4 266 2 148 1 150 9 324 1 282 1 70 1 327 3 113 2 196 2 159 12 160 2 333 4 
9 1 159 1 261 1 
9 1 47 1 160 1 
262 1 264 1 137 1 183 1 139 1 266 1 254 1 9 6 150 3 89 1 172 1 47 3 327 1 196 1 159 3 219 1 177 2 333 2 
248 1 254 1 9 12 89 2 47 6 172 2 259 1 261 1 219 2 177 1 180 1 264 1 183 1 139 1 266 2 104 1 318 1 64 1 150 2 327 2 196 1 239 1 159 6 160 1 333 2 
185 1 139 1 34 1 9 6 150 2 88 1 172 1 47 3 327 1 159 3 177 1 
264 1 183 1 139 1 34 1 254 1 148 1 150 2 9 3 88 1 282 1 324 1 47 1 113 1 196 1 177 1 159 2 333 2 
264 1 183 1 185 1 139 2 104 1 34 2 254 1 150 5 9 10 88 2 41 1 47 5 172 2 327 2 196 1 177 3 159 5 333 2 
264 1 183 1 139 1 104 1 254 1 9 2 150 1 89 1 172 1 47 2 196 1 333 2 
264 1 183 1 266 1 139 1 104 1 254 1 150 2 9 4 89 1 172 1 47 2 327 1 196 1 177 1 159 2 219 1 333 2 
264 3 314 1 183 3 139 1 104 1 34 1 254 3 9 3 150 2 88 1 282 1 47 1 113 1 196 3 159 2 177 1 333 6 
34 3 254 5 9 34 88 3 89 3 47 16 172 5 215 1 261 4 219 3 177 7 312 1 179 1 180 1 264 5 137 1 314 1 183 5 185 2 139 5 266 3 104 1 148 1 150 12 324 1 282 1 69 1 70 1 327 5 113 2 196 5 159 18 333 10 160 3 
34 1 254 1 9 8 88 1 172 1 47 4 261 1 177 2 180 1 264 1 183 1 185 1 104 1 148 1 64 1 150 2 324 1 70 1 327 1 196 1 159 4 160 1 333 2 
34 1 254 2 9 11 88 1 89 1 47 6 172 2 215 1 177 2 261 2 219 1 180 1 264 2 137 1 183 2 185 1 139 1 104 1 148 1 64 1 150 3 324 1 70 1 327 1 196 2 159 5 333 4 160 1 
248 1 34 1 254 3 9 19 88 1 89 2 47 9 172 3 259 1 261 1 219 2 177 3 180 1 264 3 137 1 183 3 185 1 139 1 266 2 104 1 318 1 148 1 64 1 150 4 324 1 70 1 327 3 113 1 196 3 239 1 159 10 160 1 333 6 
248 1 34 1 254 3 9 17 88 1 89 2 47 10 172 3 259 1 261 1 219 2 177 3 180 1 264 3 137 1 183 3 185 1 139 2 266 1 104 1 318 1 148 1 64 1 150 5 324 1 70 1 327 2 113 1 196 3 239 1 159 7 160 1 333 6 
34 1 254 1 9 8 88 1 172 1 47 4 261 1 177 2 180 1 264 1 183 1 185 1 104 1 148 1 64 1 150 2 324 1 70 1 327 1 196 1 159 4 160 1 333 2 
248 1 254 1 9 12 89 2 47 6 172 2 259 1 261 1 219 2 177 1 180 1 264 1 183 1 139 1 266 2 104 1 318 1 64 1 150 2 327 2 196 1 239 1 159 6 160 1 333 2 
248 1 34 1 254 4 9 18 88 1 89 2 47 10 172 3 259 1 261 1 219 2 177 3 180 1 264 4 137 1 183 4 185 1 139 2 266 1 104 1 318 1 148 1 64 1 150 5 324 1 70 1 327 2 113 2 196 4 239 1 159 8 333 8 160 1 
248 1 254 4 9 16 89 3 47 9 172 3 259 1 261 1 219 3 177 3 180 1 264 4 183 4 314 1 139 3 266 2 104 1 318 1 64 1 150 6 327 2 113 2 196 4 239 1 159 7 333 8 160 1 
185 1 139 3 34 3 148 2 9 7 150 6 88 3 324 1 172 1 47 3 327 1 159 4 177 3 
248 1 34 1 254 4 9 18 88 1 89 2 47 10 172 3 259 1 261 1 219 2 177 3 180 1 264 4 183 4 314 1 185 1 139 1 266 1 104 1 318 1 148 1 64 1 150 4 324 1 70 1 327 2 113 2 196 4 239 1 159 8 333 8 160 1 
79 1 322 1 233 1 268 1 93 1 308 1 166 1 
79 1 268 1 229 1 320 1 300 1 166 1 322 1 233 1 281 1 93 1 95 1 308 1 
246 1 162 1 12 1 193 1 214 1 114 1 238 1 144 1 176 1 29 1 276 1 
79 2 246 1 124 1 166 1 208 1 87 1 233 1 12 1 193 1 214 1 93 2 158 1 114 1 96 1 238 1 176 1 29 1 332 1 
79 2 246 1 37 1 124 1 166 2 39 1 208 1 87 1 233 1 193 1 326 1 214 3 93 2 287 1 328 1 158 2 114 1 96 2 289 1 238 1 176 1 29 2 332 1 
79 2 246 2 3 1 37 1 124 1 166 2 39 1 208 1 87 1 233 1 193 2 326 1 214 3 93 2 287 1 328 1 158 2 114 2 96 2 289 1 238 1 176 1 29 2 220 1 
293 1 246 3 3 1 294 1 12 1 214 4 96 1 176 1 100 1 135 1 263 1 101 2 102 1 149 2 66 1 193 3 326 1 287 1 114 3 238 1 289 1 240 1 29 1 
79 1 293 1 246 1 294 1 166 1 39 1 208 1 301 1 43 1 93 1 214 2 100 1 263 1 101 2 272 1 149 2 232 1 66 1 323 1 193 1 158 1 114 1 289 1 240 1 200 1 
246 1 193 1 305 1 114 1 238 1 176 1 
201 1 136 1 246 6 265 1 228 1 84 1 189 1 129 1 12 2 193 7 214 3 305 1 306 1 285 1 114 7 96 1 238 2 310 1 176 3 28 1 29 2 
79 2 246 1 34 1 124 1 5 2 254 2 166 1 9 6 208 1 88 1 87 1 47 3 172 1 214 1 93 2 173 1 53 1 96 1 177 2 176 1 134 1 264 2 183 2 185 1 141 1 148 1 150 2 233 2 278 1 192 2 324 1 193 1 70 1 327 1 284 1 157 1 72 1 158 1 196 2 114 1 238 1 159 3 29 1 333 4 28 1 332 1 116 1 
202 2 246 1 293 2 294 1 83 1 255 2 10 1 86 1 12 1 90 2 301 1 214 2 260 1 100 1 263 1 57 1 101 3 273 1 20 1 61 1 149 3 66 1 193 1 112 1 114 1 331 1 240 1 78 2 
246 2 58 1 189 1 66 1 193 2 214 2 305 1 114 2 96 1 238 1 176 2 28 1 29 1 
246 4 162 1 3 1 276 1 321 1 12 1 193 4 214 1 114 4 238 1 176 1 28 1 29 1 
201 1 246 2 265 1 296 1 193 2 303 1 214 1 114 2 289 1 96 1 238 1 176 2 56 1 29 1 
65 1 11 1 246 1 12 1 193 1 114 1 238 1 198 1 176 1 55 1 
247 1 246 2 193 2 214 1 285 1 306 1 114 2 238 1 176 1 29 1 28 1 
136 1 246 4 162 1 276 1 321 1 12 1 193 5 214 3 285 1 114 5 289 1 238 2 310 1 176 2 28 1 29 2 
136 1 246 4 162 1 81 1 276 1 321 1 12 1 193 5 214 3 285 1 114 5 289 1 238 2 176 2 28 1 29 2 
79 2 246 1 124 1 166 1 208 1 87 1 233 1 12 1 193 1 214 1 93 2 158 1 114 1 96 1 238 1 176 1 29 1 220 1 
201 1 246 1 265 1 189 1 129 1 193 1 214 1 114 1 289 1 96 1 238 1 176 2 29 1 
233 1 315 1 178 1 206 1 133 1 
100 1 263 1 181 1 315 2 101 2 37 1 61 1 206 1 145 1 39 1 149 2 233 1 302 1 236 1 328 1 94 1 240 1 178 2 133 2 
79 1 206 1 166 1 235 1 93 1 174 1 178 1 241 1 133 1 
302 1 145 1 206 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (287,343) (287,343) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (287,343) (287,343) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (287,343) (287,343) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (287,343) (287,343) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 81 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 81 194 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 81 194 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
312 1 163 1 198 1 85 1 251 1 109 1 287 1 355 1 104 1 343 1 192 1 
312 1 163 1 198 1 85 1 251 1 109 1 287 1 355 1 104 1 343 1 192 1 
312 1 163 1 198 1 85 1 251 1 109 1 287 1 355 1 104 1 343 1 192 1 
312 1 163 1 198 1 85 1 251 1 109 1 287 1 355 1 104 1 343 1 192 1 
2 1 198 4 109 1 85 4 258 1 119 1 62 2 81 1 31 1 312 1 141 1 251 1 325 1 230 3 73 2 27 2 
198 2 2 1 109 1 85 2 119 1 32 1 192 1 312 1 163 1 251 1 52 1 292 1 377 1 27 1 117 1 357 1 
198 3 281 1 109 1 85 3 62 1 31 1 32 1 312 2 163 1 251 2 230 1 117 1 27 2 
2 1 198 9 281 1 109 1 85 9 258 1 119 1 133 1 62 4 81 1 372 1 31 3 312 2 141 1 163 1 325 1 251 2 230 7 194 1 73 2 27 4 55 1 
2 1 198 9 281 1 109 1 85 9 258 1 119 1 133 1 62 4 81 1 372 1 31 3 312 2 141 1 163 1 325 1 251 2 230 7 194 1 73 2 27 4 55 1 
93 1 149 1 245 1 
93 1 307 1 180 2 
289 2 239 1 86 2 223 2 160 2 89 2 305 1 10 2 
197 1 270 2 76 1 61 2 297 1 299 1 23 1 200 1 274 1 223 3 38 2 250 1 84 2 207 1 305 1 178 1 10 2 46 2 279 1 156 1 186 1 331 1 157 1 212 1 260 1 86 2 159 1 160 3 89 2 338 1 138 1 114 1 289 2 239 1 242 1 241 1 99 1 
345 1 375 1 289 1 239 1 86 1 223 1 160 1 89 1 354 1 10 1 
361 1 236 1 21 1 245 1 365 1 89 1 160 1 223 1 237 1 320 1 161 1 93 1 375 1 72 1 
236 1 21 2 245 1 365 2 86 1 89 1 160 1 223 1 237 1 320 1 161 1 93 1 375 1 289 1 10 1 
110 1 21 1 365 1 309 1 35 1 
56 1 93 1 110 1 21 2 245 1 365 2 334 1 35 1 
110 1 21 1 365 1 
345 1 298 1 21 1 365 1 86 1 89 1 160 1 223 1 375 1 239 1 289 1 354 1 35 1 10 1 
93 1 
56 1 93 1 110 1 94 1 21 2 245 1 365 2 35 1 
56 1 60 1 21 5 185 2 282 2 110 2 245 1 134 1 365 5 22 1 369 1 122 1 68 1 93 1 252 2 98 1 35 2 179 1 17 1 
149 1 305 1 
86 1 137 1 89 2 160 2 223 2 350 1 289 1 305 2 10 1 
135 1 284 1 269 1 
270 1 61 1 297 1 299 1 212 1 157 1 260 1 23 1 223 1 160 1 38 1 285 1 250 1 241 1 305 1 279 1 
270 1 297 1 61 1 299 1 157 1 212 1 260 1 135 1 23 1 89 1 160 2 223 2 38 1 276 1 250 1 289 1 241 1 10 1 267 1 279 1 
361 1 193 1 77 1 289 4 86 1 223 5 160 5 89 5 214 1 305 1 350 1 10 4 276 1 267 2 
345 1 26 1 375 1 289 2 223 2 160 2 89 2 10 2 
289 3 86 1 223 3 160 3 89 3 305 1 10 3 267 1 
345 1 375 1 289 1 223 1 160 1 89 1 10 1 
375 1 289 1 86 1 137 1 223 1 160 1 89 1 350 1 10 1 
197 1 270 1 76 1 297 1 61 1 299 1 21 1 23 1 200 1 274 1 223 4 320 1 38 1 247 1 350 1 276 1 250 1 84 1 207 1 305 1 178 1 10 3 46 2 279 1 236 1 186 1 331 1 157 1 212 1 365 1 260 1 86 2 237 1 160 4 89 3 338 1 161 1 162 1 375 1 289 3 239 1 242 1 241 1 267 1 
361 1 77 1 289 1 223 2 160 2 89 2 305 1 10 1 267 1 
11 1 236 1 21 1 365 1 86 1 320 1 89 3 160 3 223 3 237 1 247 1 350 1 161 1 276 1 93 1 375 1 289 3 10 3 267 2 
86 1 135 1 89 2 160 2 223 2 284 1 350 1 289 2 10 2 267 1 
270 1 61 1 297 1 299 1 212 1 157 1 260 1 23 1 223 1 160 1 38 1 250 1 241 1 305 1 279 1 
270 1 61 1 297 1 212 1 157 1 260 1 112 1 23 1 223 1 160 1 38 1 370 1 250 1 241 1 305 1 
100 1 197 1 295 1 145 1 76 1 221 1 200 2 40 1 204 1 84 4 103 1 178 1 46 2 184 1 186 1 331 1 135 2 159 2 337 1 284 2 311 1 374 1 242 1 269 2 
236 1 26 1 375 1 289 1 223 1 160 1 89 1 10 1 
80 1 238 1 
80 1 238 1 
216 1 203 1 
216 1 203 1 
216 1 203 1 
80 1 191 1 238 1 
80 1 191 1 238 1 
80 1 153 1 238 1 
53 1 80 2 216 1 203 1 219 1 238 2 
80 1 191 1 238 1 
54 1 80 1 238 1 
54 1 80 1 238 1 
54 1 80 1 238 1 
155 1 347 1 346 1 130 1 21 1 365 1 170 1 223 2 160 2 89 2 80 1 248 1 263 1 238 1 286 1 289 2 97 1 326 1 265 1 305 1 255 1 144 1 10 2 153 1 
155 2 182 2 346 2 130 2 21 2 170 2 365 2 80 2 120 1 238 2 125 1 124 1 93 1 92 1 53 1 95 1 97 1 265 3 116 1 
2 1 325 1 119 1 
2 1 119 1 357 1 
302 1 325 2 119 3 222 1 226 1 357 1 
67 1 325 1 119 2 222 1 226 1 357 1 
325 1 119 2 222 2 226 1 357 1 
56 1 295 1 347 1 21 5 245 1 22 1 122 2 252 1 278 2 28 1 307 1 180 3 233 1 105 2 29 1 184 1 131 2 132 1 282 1 185 1 110 1 365 5 369 3 337 1 263 1 70 1 93 2 374 1 167 1 315 1 35 4 144 1 
56 1 295 3 318 1 21 9 245 1 22 1 122 6 252 2 208 1 28 1 307 3 180 9 233 2 105 6 29 2 184 3 131 6 132 3 110 6 185 2 282 2 365 9 309 5 369 8 337 3 68 1 93 5 71 1 374 3 33 1 243 5 316 1 144 4 35 7 118 1 
295 1 21 3 245 1 122 2 252 1 278 1 307 2 233 1 180 4 105 2 29 1 184 1 131 2 282 1 185 1 132 1 365 3 369 3 337 1 68 1 70 1 93 3 374 1 315 1 35 2 144 1 
295 2 318 1 21 4 245 1 122 4 252 1 208 1 278 2 307 3 180 7 233 1 105 4 29 1 184 2 131 4 282 1 185 1 132 2 365 4 369 5 337 2 68 1 70 1 93 4 71 1 374 2 315 1 144 2 35 3 
149 1 7 1 241 1 
241 1 142 1 
140 1 
250 1 157 1 241 1 
241 1 327 1 
157 1 241 1 
250 1 7 2 157 1 231 1 241 3 254 1 
199 1 36 2 78 2 24 2 200 7 225 1 82 2 40 5 84 15 304 1 103 4 184 3 111 1 159 8 136 1 337 3 139 1 195 1 
199 1 36 2 78 2 24 2 200 7 225 1 82 2 40 7 84 15 304 1 103 4 184 3 111 1 159 8 136 3 337 3 139 1 195 1 
199 1 36 2 78 2 24 2 200 7 225 1 82 2 40 5 84 15 304 1 103 4 184 3 111 1 136 1 159 8 310 1 337 3 139 1 195 1 
295 3 272 1 36 2 76 1 199 2 78 3 24 3 200 20 225 1 5 1 82 3 40 14 126 4 84 41 304 1 176 1 103 7 232 1 178 1 46 2 358 1 184 6 186 1 132 3 111 2 13 3 159 21 136 7 337 6 262 1 139 1 374 3 242 1 195 1 380 1 
184 1 36 1 199 1 76 1 186 1 111 1 78 1 159 4 200 2 24 1 337 1 225 1 82 2 40 1 84 6 43 1 304 1 65 1 242 1 103 1 178 1 46 2 
270 1 19 1 2 1 61 1 198 2 119 2 23 1 38 1 302 1 325 1 251 1 230 1 277 1 27 1 234 1 357 1 128 1 183 1 85 2 109 1 212 1 336 1 264 1 32 1 69 1 312 1 163 1 314 1 96 1 117 1 
270 1 19 1 2 1 61 1 198 3 119 2 23 1 38 1 302 1 325 1 251 1 230 2 277 1 27 1 234 1 357 1 128 1 85 3 364 1 212 1 368 1 336 1 264 1 32 1 312 1 163 1 314 1 96 1 34 1 117 1 
270 1 19 1 61 1 198 2 2 1 119 2 23 1 38 1 302 1 325 1 230 2 277 1 27 1 357 1 128 1 85 2 364 1 212 1 336 1 264 1 32 1 163 1 96 1 34 1 117 1 
270 1 61 1 198 1 23 1 38 1 251 1 277 2 128 2 209 1 257 1 85 1 259 1 157 1 212 1 260 1 368 1 113 1 88 1 336 2 312 1 163 2 241 1 341 1 
270 1 19 1 2 1 61 1 198 1 119 2 23 1 38 1 302 1 325 1 251 1 277 1 234 1 357 1 128 1 183 1 85 1 109 1 364 1 212 1 336 1 264 1 312 1 163 1 314 1 96 1 
224 1 
270 2 38 2 223 1 320 1 122 2 228 2 322 1 42 2 44 1 328 1 329 1 180 2 236 1 330 2 185 1 282 1 283 4 88 1 89 1 237 1 91 2 51 1 93 2 15 2 241 1 344 1 56 3 61 2 21 5 245 1 22 1 23 1 246 1 148 1 252 1 307 2 359 1 257 1 29 1 361 1 157 1 110 6 212 1 365 5 260 2 366 1 367 1 369 2 160 1 161 1 375 1 166 1 72 1 115 2 74 2 
56 1 236 1 361 1 110 2 21 3 283 2 365 3 320 1 246 1 89 1 160 1 223 1 237 1 161 1 148 1 51 1 42 1 94 1 375 1 166 1 72 1 359 1 
56 1 21 3 245 1 223 1 246 1 320 1 148 1 359 1 361 1 236 1 330 1 110 1 365 3 283 3 237 1 160 1 89 1 161 1 51 1 93 1 375 1 94 1 72 1 166 1 
56 1 21 3 245 1 223 1 246 1 320 1 148 1 42 1 359 1 361 1 236 1 330 1 110 2 365 3 283 3 237 1 160 1 89 1 161 1 51 1 93 1 94 1 375 1 72 1 166 1 15 1 
56 3 21 5 245 5 22 1 246 1 223 1 320 1 122 1 174 1 228 2 351 1 148 1 229 1 42 4 44 1 252 1 307 2 359 1 361 1 236 1 129 1 330 4 282 1 185 1 110 7 365 5 283 6 158 1 369 1 89 1 160 1 237 1 161 1 91 2 51 1 93 5 94 1 375 1 72 1 166 1 15 4 115 2 74 2 344 1 
320 1 223 1 122 1 228 2 42 2 44 1 328 1 180 2 236 1 330 2 185 1 282 1 283 4 237 1 89 1 91 2 51 1 93 2 15 2 344 1 56 2 21 4 245 1 22 1 246 1 148 1 252 1 307 2 359 1 361 1 110 4 365 4 369 1 160 1 161 1 375 1 166 1 72 1 115 2 74 2 
56 2 21 4 245 1 22 1 223 1 246 1 320 1 122 1 174 1 228 2 351 1 148 1 42 2 44 1 252 1 307 2 359 1 361 1 236 1 129 1 330 2 110 4 282 1 185 1 365 4 283 4 369 1 237 1 160 1 89 1 161 1 91 2 51 1 93 1 375 1 72 1 166 1 15 2 115 2 74 2 344 1 
56 2 21 4 245 1 22 1 223 1 246 1 320 1 122 1 174 1 228 2 351 1 148 1 42 2 44 1 252 1 307 2 359 1 361 1 236 1 129 1 330 2 110 4 282 1 185 1 365 4 283 4 369 1 237 1 160 1 89 1 161 1 91 2 51 1 93 1 375 1 72 1 166 1 15 2 115 2 74 2 344 1 
56 2 58 1 21 4 245 1 22 1 223 1 246 1 320 1 172 1 122 1 228 2 351 1 148 1 42 2 44 1 252 1 8 2 180 2 359 1 280 1 361 1 236 1 330 2 110 4 282 1 185 1 365 4 283 4 369 1 237 1 160 1 89 1 188 2 161 1 91 2 51 1 93 1 375 1 72 1 166 1 15 2 
56 2 21 4 245 1 22 1 223 1 246 1 320 1 122 1 174 1 228 2 351 1 148 1 42 3 44 1 252 1 307 2 359 1 361 1 236 1 129 1 330 3 282 1 185 1 110 5 365 4 283 5 158 1 369 1 237 1 160 1 89 1 161 1 91 2 51 1 93 1 375 1 72 1 166 1 15 3 115 2 74 2 344 1 
56 2 21 4 245 1 22 1 223 1 246 1 320 1 122 1 174 1 228 2 351 1 148 1 42 3 44 1 252 1 307 2 359 1 361 1 236 1 129 1 330 3 282 1 185 1 110 5 365 4 283 5 158 1 369 1 237 1 160 1 89 1 161 1 91 2 51 1 93 1 375 1 72 1 166 1 15 3 115 2 74 2 344 1 
56 2 21 4 245 1 22 1 246 1 223 1 320 1 172 1 122 1 228 2 148 1 42 2 44 1 252 1 8 2 328 1 180 2 359 1 361 1 236 1 330 2 110 4 282 1 185 1 365 4 283 4 369 1 89 1 160 1 237 1 188 2 161 1 91 2 51 1 93 1 375 1 72 1 166 1 15 2 
197 1 76 1 36 1 221 1 78 1 24 1 200 3 225 1 82 1 40 2 149 1 84 6 304 1 103 2 178 1 305 2 46 2 184 1 186 1 331 1 135 1 159 3 284 1 337 1 242 1 269 1 
197 2 295 1 76 2 3 1 200 6 5 1 40 2 41 1 126 3 253 1 84 14 207 1 103 1 305 1 178 2 46 4 358 1 184 1 186 2 331 1 132 2 12 1 135 11 13 3 136 1 159 8 337 2 284 4 114 1 374 2 242 2 18 1 269 11 
197 1 270 1 297 1 61 1 76 1 299 1 23 1 200 1 38 1 223 2 4 1 276 1 250 1 84 2 207 1 177 1 305 1 178 1 10 1 46 2 279 1 154 1 157 1 212 1 186 1 331 1 260 1 159 1 160 2 89 1 284 1 285 1 114 1 289 1 241 1 242 1 267 1 18 1 
0 1 270 1 36 2 76 3 78 2 37 2 274 2 38 1 223 3 121 1 225 1 82 1 40 7 276 1 173 1 84 28 178 3 10 1 46 6 279 2 184 5 331 3 186 3 132 2 135 7 136 1 89 1 284 7 337 5 289 1 242 3 241 2 195 1 18 1 197 3 295 2 146 2 61 1 297 2 299 2 23 2 24 2 200 14 202 2 250 2 304 1 207 1 103 6 305 3 360 2 212 2 157 2 260 1 159 14 160 3 114 1 374 2 375 1 267 1 269 7 
75 1 197 2 270 7 1 1 61 8 76 2 221 1 23 2 275 1 200 1 223 1 38 8 323 1 84 2 207 1 178 2 10 1 46 4 257 1 364 1 212 2 186 2 331 2 157 2 260 2 87 1 159 1 88 1 160 1 89 1 69 1 114 1 289 1 376 1 164 1 241 3 242 2 99 2 267 1 
197 1 295 1 76 1 200 2 223 1 350 1 40 1 84 3 103 1 178 1 10 1 46 2 184 1 186 1 331 1 132 1 135 1 86 1 159 1 89 1 160 1 284 1 337 1 374 1 289 1 165 1 242 1 269 1 18 1 
197 1 76 1 331 1 186 1 221 1 135 1 136 1 159 2 284 1 337 1 40 1 204 1 374 1 84 2 242 1 178 1 46 2 269 1 
197 1 145 1 295 1 76 1 184 1 331 1 186 1 221 1 135 1 200 2 284 1 40 1 84 2 242 1 103 1 178 1 46 2 269 1 
197 1 295 1 76 1 221 1 200 2 40 2 84 4 103 1 178 1 46 2 184 1 132 1 186 1 331 1 135 2 159 2 136 1 337 1 284 2 374 1 242 1 269 2 
197 1 76 1 331 1 186 1 135 1 87 1 136 1 159 2 284 1 337 1 40 1 204 1 374 1 84 2 242 1 178 1 46 2 269 1 
197 1 145 1 295 1 76 1 184 1 331 1 186 1 135 1 87 1 200 2 284 1 40 1 84 2 242 1 103 1 178 1 46 2 269 1 
197 1 295 1 76 1 200 2 40 2 84 4 103 1 178 1 46 2 184 1 132 1 186 1 331 1 87 1 135 2 159 2 136 1 337 1 284 2 374 1 242 1 269 2 
197 1 295 1 184 1 76 1 331 1 186 1 132 1 135 2 136 1 159 2 200 2 284 2 337 1 40 2 374 1 84 4 242 1 103 1 178 1 46 2 269 2 
197 1 270 1 297 1 61 1 76 1 299 1 23 1 274 1 200 1 38 1 223 1 250 1 84 2 207 1 305 1 178 1 46 2 279 1 157 1 212 1 331 1 186 1 260 1 159 1 160 1 114 1 241 1 242 1 
197 1 270 1 297 1 61 1 76 1 23 1 200 1 38 1 223 1 250 1 84 2 207 1 305 1 178 1 46 2 106 1 157 1 212 1 331 1 186 1 260 1 112 1 159 1 370 1 160 1 114 1 241 1 242 1 
197 1 295 1 76 1 200 2 40 2 84 4 103 1 178 1 46 2 184 1 132 1 186 1 331 1 135 2 159 2 136 1 337 1 284 2 374 1 242 1 18 1 269 2 
197 1 295 1 270 1 297 1 61 1 76 1 299 1 23 1 200 2 274 1 38 1 223 1 40 2 250 1 84 4 103 1 178 1 46 2 279 1 360 1 184 1 212 1 157 1 331 1 186 1 132 1 135 2 136 1 159 2 160 1 284 2 337 1 69 1 374 1 241 1 242 1 269 2 
197 1 295 1 76 1 244 1 200 1 223 1 350 1 40 1 84 3 178 1 10 1 46 2 184 1 186 1 331 1 132 1 86 1 135 1 136 1 159 2 89 1 160 1 337 1 284 1 374 1 289 1 242 1 18 1 269 1 
220 1 295 2 147 1 76 2 348 1 200 7 63 1 5 1 40 4 126 2 84 13 9 1 65 1 103 2 178 2 46 4 358 1 181 1 184 2 332 1 186 2 132 2 13 1 159 6 136 2 337 2 374 2 242 2 16 1 143 1 
220 3 295 1 147 2 76 3 348 2 200 9 5 2 40 2 6 1 126 2 84 20 9 1 65 1 103 1 178 3 46 6 181 1 184 1 186 3 132 2 13 2 136 1 159 11 337 2 373 1 50 1 374 2 290 1 242 3 143 1 266 1 380 2 379 1 
220 1 295 1 147 1 76 2 348 1 200 5 5 1 40 2 126 2 84 9 9 1 65 1 103 1 178 2 46 4 358 1 181 1 184 1 186 2 132 1 13 1 159 4 136 1 337 1 374 1 242 2 16 1 143 1 
220 1 295 1 147 1 76 2 348 1 200 5 5 1 40 2 126 2 84 9 9 1 65 1 103 1 178 2 46 4 358 1 181 1 184 1 186 2 132 1 13 1 159 4 136 1 337 1 374 1 242 2 16 1 143 1 
220 3 295 6 147 1 36 1 76 2 348 1 78 1 3 2 24 1 200 22 225 1 82 1 5 2 40 12 6 1 126 4 84 46 304 1 9 1 65 1 103 6 178 2 46 4 358 2 181 1 184 7 186 2 132 6 13 4 159 24 136 6 337 7 373 1 50 1 374 6 290 1 242 2 143 1 266 1 380 1 379 1 
125 1 155 1 346 1 130 1 20 1 53 1 95 1 170 1 80 1 238 1 
248 1 153 1 
155 1 249 1 346 1 130 1 170 1 261 1 80 1 349 1 238 1 
271 1 191 1 
175 1 54 1 219 1 
155 1 182 1 346 1 130 1 21 1 365 1 170 1 80 1 120 1 238 1 125 1 124 1 93 1 92 1 53 1 95 1 97 1 265 2 
155 1 182 1 346 1 130 1 21 1 365 1 170 1 80 1 120 1 238 1 125 1 124 1 93 1 92 1 53 1 95 1 97 1 265 2 
155 1 182 1 346 1 130 1 21 1 365 1 170 1 80 1 120 1 238 1 125 1 124 1 93 1 92 1 53 1 95 1 97 1 265 2 
271 1 219 1 191 1 
271 1 219 1 191 1 
175 1 54 1 
175 1 54 1 219 1 
326 1 255 1 
346 1 347 1 300 1 21 1 170 1 223 2 80 1 248 1 124 1 326 1 305 1 255 1 10 2 153 1 155 1 182 1 130 1 365 1 160 2 89 2 263 1 238 1 286 1 289 2 265 1 35 1 144 1 
197 1 270 2 61 2 76 1 23 1 319 1 275 1 200 1 38 2 223 2 323 1 205 1 84 2 207 1 178 1 46 2 308 1 212 1 157 1 331 1 186 1 159 1 160 2 89 2 90 1 371 1 114 1 241 1 242 1 99 2 18 1 
270 2 107 1 2 1 61 2 212 1 364 1 211 1 119 2 23 1 38 2 264 1 69 1 302 1 325 1 64 1 314 1 96 1 357 1 128 1 
270 1 2 1 61 1 364 1 212 1 119 2 23 1 38 1 264 1 302 1 325 1 64 1 314 1 96 1 150 1 357 1 128 1 
270 1 257 1 61 1 212 1 157 1 211 1 260 1 23 1 113 1 88 1 38 1 241 1 152 1 128 1 
270 1 107 1 2 1 61 1 364 1 211 1 212 1 119 2 23 1 38 1 264 1 302 1 325 1 64 1 314 1 96 1 357 1 128 1 
66 1 
60 1 93 1 149 1 245 1 134 1 369 1 122 1 
56 1 21 1 110 1 185 1 282 1 245 1 365 1 22 1 369 1 122 1 93 2 252 1 115 1 180 1 307 1 74 1 344 1 
270 1 38 1 320 1 122 3 180 6 131 3 184 1 185 2 282 2 132 1 335 1 337 1 14 1 93 3 339 1 240 1 142 2 241 3 56 1 57 1 295 1 146 1 61 1 21 2 22 2 23 2 250 1 303 1 252 2 254 1 256 1 307 3 105 3 29 1 212 1 157 1 110 2 260 1 365 2 369 4 217 1 374 1 
56 1 295 2 21 1 245 2 22 2 122 5 5 1 6 1 126 1 352 1 206 1 252 2 329 1 180 6 307 3 105 5 29 1 108 1 131 5 184 2 110 1 282 2 185 2 132 2 365 1 13 1 369 8 337 2 373 1 50 1 93 5 374 2 240 2 290 1 379 1 
345 1 36 1 298 1 21 1 78 1 22 1 24 1 223 1 122 2 206 1 252 1 354 1 10 1 129 1 184 1 282 1 185 1 365 1 86 1 369 2 160 1 89 1 337 2 375 1 239 1 289 1 240 2 195 1 
60 1 185 1 282 1 134 1 245 1 22 1 369 1 122 1 93 1 252 1 
295 2 146 1 131 5 184 2 132 2 369 5 337 2 122 5 93 5 374 2 206 1 240 2 180 10 307 5 105 5 
56 1 93 1 21 1 110 1 245 1 365 1 
56 2 270 4 61 4 21 3 22 1 23 1 38 4 39 1 122 2 322 1 252 2 353 1 356 1 329 2 29 2 257 1 363 2 212 1 157 1 282 2 185 2 110 4 260 2 365 3 366 1 88 1 369 2 68 1 241 1 
197 1 270 1 76 1 61 1 297 1 299 1 23 1 200 1 274 1 38 1 223 3 250 1 84 1 207 1 305 1 178 1 10 2 46 2 279 1 186 1 212 1 157 1 331 1 260 1 86 2 160 3 89 2 338 1 289 2 239 1 242 1 241 1 
29 1 131 2 185 1 282 1 245 2 22 1 369 1 122 2 82 1 93 4 252 1 329 1 307 2 180 4 105 2 
218 1 130 1 170 1 
218 1 130 1 170 1 
130 1 210 1 95 1 170 1 326 1 
218 1 130 1 170 1 
130 1 170 1 168 1 
130 1 170 1 168 1 
130 1 170 1 168 1 
130 1 170 1 
80 1 238 1 
76 2 36 2 78 2 24 2 200 9 225 1 82 1 40 7 84 18 304 1 103 4 178 2 46 4 184 3 186 2 136 3 159 9 337 3 242 2 195 1 380 1 
36 1 184 1 78 1 159 3 200 3 24 1 337 1 225 1 82 1 40 2 149 1 84 6 304 1 103 2 
295 1 184 1 76 1 186 1 132 1 171 1 159 2 136 1 200 2 337 1 40 2 374 1 84 4 242 1 103 1 178 1 46 2 
295 1 184 1 132 1 13 1 159 3 136 1 200 4 337 1 5 1 40 2 126 2 374 1 84 7 103 1 358 1 
295 2 36 2 76 1 78 2 3 1 24 2 200 13 225 1 82 1 40 7 126 2 84 26 253 1 304 1 103 5 178 1 358 1 46 2 184 5 132 2 186 1 13 2 159 13 136 2 337 5 374 2 242 1 195 1 380 1 
126 1 84 1 200 1 
84 1 13 1 159 1 
295 1 146 1 76 1 184 1 186 1 132 1 171 1 159 3 136 1 200 3 337 1 40 3 374 1 84 6 242 1 103 2 178 1 46 2 
295 2 76 1 200 6 5 1 40 2 6 1 126 1 84 12 65 1 103 1 178 1 46 2 184 2 186 1 132 2 13 1 136 1 159 6 337 2 373 1 50 1 374 2 290 1 242 1 379 1 
36 1 184 1 78 1 159 3 136 1 200 3 24 1 337 1 40 2 84 6 103 1 
30 1 76 1 186 1 78 1 159 1 136 1 24 1 200 2 225 1 40 2 84 3 304 1 242 1 103 1 178 1 380 1 46 2 
76 1 36 1 184 2 186 1 78 2 136 2 159 5 24 2 200 5 337 2 40 5 84 10 242 1 65 1 103 3 178 1 195 1 46 2 
76 1 186 1 159 2 136 1 337 1 40 1 374 1 84 2 65 1 242 1 178 1 46 2 
295 1 184 1 76 1 186 1 132 1 159 2 136 1 200 2 337 1 40 2 374 1 84 4 65 1 242 1 103 1 178 1 46 2 
30 1 76 3 186 3 78 1 136 1 159 1 200 2 24 1 40 2 84 3 65 1 242 3 103 1 16 1 178 3 380 1 46 6 
295 2 272 1 36 2 76 4 78 2 171 1 24 2 200 16 225 1 82 1 5 1 40 9 126 3 84 32 304 1 65 1 103 5 232 1 178 4 46 8 184 5 186 4 132 2 13 3 159 16 136 4 337 5 262 1 374 2 242 4 195 1 16 1 380 1 
76 1 36 2 78 2 200 8 24 2 225 1 82 1 5 1 40 5 126 1 84 16 304 1 65 1 103 4 178 1 46 2 184 3 186 1 13 1 136 1 159 8 337 3 242 1 195 1 379 1 
36 2 76 2 78 2 171 1 24 2 200 9 225 1 82 1 5 1 40 6 126 2 84 19 304 1 65 1 103 4 178 2 46 4 358 1 184 3 186 2 132 1 13 1 159 10 136 2 337 4 374 1 242 2 195 1 379 1 
295 2 36 2 76 3 78 2 171 1 24 2 200 14 225 1 82 1 5 1 40 7 6 1 126 1 84 27 304 1 65 1 103 5 178 3 46 6 184 5 186 3 132 2 13 1 136 2 159 13 337 5 373 1 50 1 374 2 290 1 242 3 195 1 379 1 380 1 
295 1 36 2 76 3 78 2 171 1 24 2 200 11 225 1 82 1 5 1 40 9 6 1 126 1 84 25 304 1 65 1 103 5 178 3 46 6 184 4 186 3 132 2 13 1 136 4 159 14 337 5 373 1 50 1 374 2 290 1 242 3 195 1 380 1 379 1 
76 1 36 2 78 2 200 8 24 2 225 1 82 1 5 1 40 5 126 1 84 16 304 1 65 1 103 4 178 1 46 2 184 3 186 1 13 1 136 1 159 8 337 3 242 1 195 1 379 1 
295 2 76 1 200 6 5 1 40 2 6 1 126 1 84 12 65 1 103 1 178 1 46 2 184 2 186 1 132 2 13 1 136 1 159 6 337 2 373 1 50 1 374 2 290 1 242 1 379 1 
295 1 36 2 76 4 78 2 171 1 24 2 200 12 225 1 82 1 5 1 40 7 6 1 126 1 84 26 304 1 65 1 103 5 178 4 46 8 184 4 186 4 132 2 13 1 136 2 159 14 337 5 373 1 50 1 374 2 290 1 242 4 195 1 379 1 380 2 
295 2 76 4 200 7 5 1 40 6 6 1 126 1 84 16 65 1 103 3 178 4 46 8 184 2 186 4 132 3 13 1 136 3 159 9 337 3 373 1 50 1 374 3 290 1 242 4 16 1 379 1 380 2 
184 1 36 1 78 3 136 3 159 3 200 4 24 3 337 1 225 1 40 6 84 7 304 2 103 3 
295 1 36 2 76 4 78 2 24 2 200 12 225 1 82 1 5 1 40 7 6 1 126 1 84 26 304 1 65 1 103 5 178 4 46 8 184 4 186 4 132 2 13 1 136 2 159 14 337 5 373 1 50 1 374 2 290 1 242 4 195 1 16 1 379 1 380 2 
361 1 77 1 79 1 223 1 160 1 89 1 305 1 
361 1 77 1 47 1 79 1 213 1 89 1 160 1 223 1 301 1 305 1 293 1 196 1 
270 1 257 1 149 1 61 1 212 1 157 1 260 1 23 1 88 1 241 1 38 1 
270 1 297 1 61 1 157 1 212 1 260 1 23 1 89 1 160 2 223 2 38 1 250 1 289 1 241 1 305 1 10 1 267 1 279 1 
270 1 236 1 297 1 61 1 157 2 363 1 212 1 23 1 89 2 160 2 223 2 38 1 161 1 123 1 250 2 375 1 289 1 241 3 327 1 305 1 10 2 267 1 279 1 
270 2 236 1 297 1 61 2 157 2 363 1 212 1 112 1 23 1 89 2 160 2 223 2 38 2 189 1 161 1 123 1 250 2 375 1 289 1 241 3 327 1 305 1 10 2 267 1 
345 1 270 2 61 2 298 1 21 2 245 1 23 1 223 1 38 2 320 1 123 1 250 1 7 1 327 1 354 1 10 1 212 1 110 1 363 1 157 1 260 1 365 2 86 1 160 1 89 1 215 1 93 1 375 1 289 1 239 1 288 1 241 4 142 1 
345 1 270 1 61 1 298 1 21 2 245 1 223 1 320 1 38 1 354 1 10 1 110 1 363 1 365 2 86 1 160 1 89 1 14 1 93 1 375 1 239 1 289 1 241 1 142 1 
75 1 270 1 61 1 212 1 23 1 38 1 
75 1 270 6 1 1 61 7 364 1 333 1 157 2 212 2 260 2 23 3 275 1 38 7 49 1 69 1 250 1 376 1 164 1 99 1 241 3 254 1 151 1 
270 1 76 2 36 2 78 2 274 1 38 1 223 2 121 1 225 1 82 1 40 5 84 14 178 2 10 1 46 4 279 1 184 3 331 2 186 2 135 1 136 1 89 1 284 1 90 1 337 3 289 1 242 2 241 1 195 1 18 1 197 2 61 1 297 1 299 1 23 1 24 2 200 7 202 1 250 1 304 1 103 4 305 3 360 1 212 1 157 1 159 7 160 2 69 1 375 1 267 1 269 1 
270 1 36 1 78 1 320 1 38 1 223 1 39 1 122 5 10 1 184 2 185 2 282 2 134 1 86 1 89 1 337 2 14 1 93 2 339 1 239 1 289 1 240 2 241 1 142 1 195 1 345 1 56 1 60 1 61 1 298 1 21 3 245 2 22 2 24 1 303 1 206 1 252 2 354 1 110 2 365 3 260 1 369 4 160 1 217 1 375 1 35 1 
75 1 270 2 61 2 157 1 212 1 23 2 38 2 335 1 69 1 250 1 7 1 241 2 254 1 
270 4 257 1 296 1 61 4 157 1 212 1 260 1 23 1 88 1 38 4 189 1 69 1 241 1 
270 2 61 2 363 1 333 1 157 1 212 1 23 2 201 1 38 2 49 1 250 1 102 1 45 1 241 1 
270 1 2 1 61 1 212 1 119 1 96 1 260 1 23 1 38 1 357 1 
69 1 270 2 61 2 212 1 157 1 364 1 23 1 319 1 241 1 275 1 38 2 
270 4 257 1 1 1 296 1 61 5 363 1 157 2 212 2 260 1 88 1 23 2 275 1 38 5 69 1 376 1 241 3 
270 4 257 1 296 1 61 5 363 1 157 2 212 2 260 1 88 1 23 2 275 1 38 5 69 1 340 1 376 1 241 3 
270 1 297 1 61 1 157 1 212 1 260 1 112 1 23 1 89 1 160 2 223 2 38 1 250 1 289 1 241 1 305 1 10 1 267 1 
270 1 61 1 333 1 363 1 157 1 212 1 23 2 38 1 49 1 250 1 241 1 254 1 151 1 
101 1 48 1 305 1 342 1 268 1 
236 1 21 2 362 1 245 1 365 2 101 2 48 2 320 1 237 1 247 1 161 1 25 1 93 1 375 1 291 1 305 1 35 1 342 1 268 2 
308 1 205 1 101 1 48 1 223 1 160 1 89 1 371 1 342 1 
362 1 342 1 25 1 
149 1 27 1 117 1 32 1 
312 1 198 1 85 1 251 1 27 1 117 1 32 1 
163 1 198 1 336 1 
235 1 59 1 198 3 109 1 85 3 32 1 312 1 321 1 251 1 52 2 27 1 117 1 
312 1 198 2 85 2 251 1 230 1 73 1 27 1 117 1 32 1 
312 1 141 1 2 1 198 1 325 1 85 1 251 1 109 1 119 1 62 1 27 1 
312 1 198 1 85 1 251 1 109 1 27 1 32 1 
312 1 198 1 85 1 251 1 109 1 117 1 32 2 
312 2 169 1 83 1 198 2 85 2 251 2 109 1 127 1 27 1 32 1 
198 3 109 1 85 3 133 1 62 1 372 1 31 1 32 1 312 1 251 1 230 2 117 1 27 2 
198 2 2 1 109 1 85 2 119 2 32 1 312 1 313 1 302 1 251 1 325 1 230 1 27 1 117 1 357 1 
198 4 109 1 85 4 258 1 62 1 31 1 32 1 312 2 251 2 230 2 73 1 117 1 27 2 
312 1 198 1 85 1 251 1 109 1 27 1 117 1 32 1 
59 1 198 4 85 4 62 1 31 1 32 2 321 1 312 1 251 1 52 1 230 2 117 2 27 3 294 1 
198 2 109 1 85 2 32 1 312 1 251 1 230 1 27 1 378 1 55 1 117 1 317 1 
59 2 198 3 109 1 85 3 32 1 321 1 312 1 251 1 324 1 52 2 27 1 117 1 
273 1 27 2 190 2 227 1 
312 1 198 1 85 1 251 1 109 1 306 1 
312 1 198 2 85 2 251 1 109 1 230 1 133 1 27 1 117 1 32 1 
187 1 
312 1 198 1 85 1 251 1 109 1 27 1 117 1 32 1 
198 3 109 1 85 3 133 1 32 1 312 1 251 1 52 1 230 1 117 1 27 1 
62 1 27 1 31 1 294 1 
27 1 32 1 

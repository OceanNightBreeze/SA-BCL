#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (140,254,258,342,360) (60,330) (60,330) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (140,254,258,342,360) (60,330) (60,330) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (140,254,258,342,360) (60,330) (60,330) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (140,254,258,342,360) (60,330) (60,330) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (140,254,258,342,360) (148,326) (148,326) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 78 222 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 78 222 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (54,71,275,309) (54,71,275,309) (3,126,181) (3,126,181) (3,126,181) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (54,71,275,309) (54,71,275,309) (3,126,181) (3,126,181) (3,126,181) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (54,71,275,309) (54,71,275,309) (3,126,181) (3,126,181) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (54,71,275,309) (54,71,275,309) (3,126,181) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (163,166) (163,166) (36,188) 103 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 246 93 20 127 53 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 246 93 20 127 53 220 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 246 93 20 127 53 220 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 246 93 20 127 53 220 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 13 297 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 320 20 127 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 246 93 20 127 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (54,71,275,309) (54,71,275,309) 266 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
82 1 71 1 289 3 189 1 255 1 293 1 123 2 260 1 308 1 309 2 275 3 54 2 31 1 
82 1 289 1 189 1 241 1 330 1 120 1 258 1 309 1 275 1 229 1 54 1 115 1 367 1 164 1 60 1 
82 1 289 1 189 1 241 1 330 1 120 1 258 1 309 1 275 1 229 1 54 1 115 1 367 1 164 1 60 1 
82 1 289 1 189 1 241 1 330 1 120 1 258 1 309 1 275 1 229 1 54 1 115 1 367 1 164 1 60 1 
82 1 289 1 189 1 241 1 330 1 120 1 258 1 309 1 275 1 229 1 54 1 115 1 367 1 164 1 60 1 
82 1 71 1 289 2 241 1 120 1 123 1 90 1 309 1 275 2 229 1 54 1 78 1 284 1 31 1 
275 1 309 1 82 1 289 1 189 1 54 1 241 1 326 1 115 1 120 1 148 1 283 1 258 1 
82 1 71 5 289 7 189 1 241 1 120 1 255 2 293 1 123 3 90 1 309 2 275 7 229 1 336 1 247 1 54 2 78 1 284 1 67 1 31 3 222 1 
82 1 71 5 289 7 189 1 241 1 120 1 255 2 293 1 123 3 90 1 309 2 275 7 229 1 336 1 247 1 54 2 78 1 284 1 67 1 31 3 222 1 
178 1 129 1 98 1 85 1 354 1 340 1 152 1 172 1 204 1 327 1 106 1 95 1 155 1 250 1 
302 1 
44 1 302 1 271 1 84 1 111 1 327 1 155 2 152 2 
44 2 302 1 157 2 1 1 314 2 119 1 84 1 111 1 75 2 245 1 152 5 343 1 145 1 348 1 134 1 233 1 327 2 155 5 318 1 
302 1 111 1 238 1 
302 1 276 1 122 2 
98 2 85 1 205 1 354 2 340 2 95 2 250 2 172 2 
110 1 85 1 354 3 192 1 172 3 316 1 8 1 133 1 176 2 299 1 263 1 95 2 136 1 319 1 46 1 179 1 98 2 321 2 359 1 340 2 21 2 322 1 361 2 213 1 274 1 146 1 184 2 125 1 25 1 163 1 205 1 280 1 28 1 107 1 167 1 250 2 206 1 
204 1 178 1 129 1 98 1 85 1 354 1 340 1 95 1 250 1 172 1 
81 1 302 1 111 1 354 1 172 1 273 1 152 1 52 1 304 1 204 1 337 1 250 1 155 1 108 1 
81 1 302 1 98 1 111 1 354 1 340 1 172 1 273 1 152 2 304 1 204 1 337 1 95 1 155 2 250 1 
44 1 351 1 327 1 155 1 152 1 
44 1 302 1 84 1 99 1 111 1 327 1 155 2 152 2 
44 1 155 1 152 1 
176 1 184 1 321 1 322 1 369 1 
290 1 98 1 354 2 340 1 172 2 11 1 205 2 95 1 250 2 
114 1 4 1 200 1 
46 1 321 1 354 1 192 1 359 1 322 1 172 1 316 1 40 1 184 1 176 1 263 1 205 1 280 1 28 1 206 1 
205 1 238 1 
98 3 205 1 354 3 340 1 95 3 250 3 15 1 172 3 
204 1 129 1 98 1 354 1 95 1 250 1 172 1 
204 1 290 1 98 1 11 1 354 1 340 1 95 1 250 1 172 1 
290 1 98 1 354 1 340 1 95 1 250 1 369 1 172 1 
177 1 98 1 205 1 354 2 95 1 250 2 108 1 15 1 172 2 
369 1 
290 1 98 2 354 2 4 1 340 1 172 2 95 2 250 2 15 1 200 1 
46 1 321 1 354 1 192 1 359 1 322 1 172 1 316 1 184 1 176 1 263 1 205 1 280 1 28 1 206 1 
46 1 321 1 354 1 192 1 359 1 322 1 172 1 316 1 184 1 176 1 64 1 263 1 205 1 28 1 96 1 
0 1 110 2 4 2 88 1 8 1 132 1 114 2 299 2 94 1 200 2 47 1 179 1 21 2 74 1 213 1 361 4 362 1 146 1 246 1 125 1 281 1 167 1 221 1 168 1 
204 1 352 1 98 1 354 1 95 1 250 1 273 1 172 1 
290 1 98 2 354 2 340 1 144 1 172 2 204 1 205 1 95 2 369 1 250 2 15 1 
204 1 352 1 129 1 98 2 354 2 95 2 250 2 172 2 
2 1 116 1 112 1 
24 1 2 2 187 1 79 1 112 2 333 1 
2 1 112 1 
2 1 112 1 
24 1 187 1 
24 1 187 1 
24 1 187 1 
32 1 2 1 112 1 
32 1 2 1 112 1 
32 1 2 1 112 1 
2 1 112 1 87 1 
2 1 112 1 87 1 
2 1 112 1 87 1 
302 1 2 2 73 1 112 2 356 2 333 1 152 2 261 1 262 1 92 2 147 1 153 1 105 1 279 3 197 2 57 2 285 1 155 2 338 2 
2 1 354 2 356 1 112 1 152 1 172 2 195 1 63 1 92 1 116 1 95 2 155 1 338 1 98 2 243 1 101 1 147 1 366 1 162 1 205 1 279 1 57 1 282 1 250 2 
268 1 229 1 120 2 86 2 283 1 
229 1 241 1 120 1 
241 1 120 1 283 1 
268 1 347 1 229 2 120 3 86 1 283 1 
268 1 229 1 120 2 357 1 86 1 283 1 
0 1 252 1 83 1 314 1 84 1 111 1 131 1 152 5 88 1 227 2 210 2 134 3 230 2 93 1 94 1 155 5 318 2 44 1 270 1 302 2 157 1 137 1 75 1 122 3 101 1 246 1 104 1 276 1 348 1 366 1 162 1 327 4 
0 3 83 1 351 5 314 2 84 1 331 1 111 1 131 2 152 9 6 1 88 3 210 6 134 8 230 6 93 3 94 3 155 9 318 6 44 6 302 5 157 2 138 1 137 2 75 2 212 5 122 9 343 1 246 3 276 3 348 1 161 1 366 4 349 1 327 7 149 1 
0 1 252 1 314 1 111 1 131 1 152 3 88 1 227 1 134 3 210 2 230 2 93 1 94 1 155 3 318 2 302 3 270 1 157 1 137 1 75 1 122 4 343 1 246 1 276 2 366 1 327 2 
0 2 252 1 314 1 111 1 131 1 152 4 88 2 227 2 210 4 134 5 230 4 93 2 94 2 155 4 318 4 302 4 270 1 157 1 137 1 75 1 122 7 343 1 246 2 276 3 161 1 366 2 349 1 327 3 149 1 
355 1 
46 1 329 1 238 1 
46 1 13 1 
46 1 359 1 
46 3 329 2 359 1 28 1 256 1 109 1 
46 1 359 1 28 1 
22 1 46 1 
110 3 49 1 74 2 361 7 214 1 88 1 174 1 89 1 306 1 228 2 299 4 365 1 94 1 26 1 69 1 312 1 370 1 168 3 
0 3 313 1 110 15 39 1 174 1 89 1 8 1 88 4 228 3 298 1 299 16 93 3 65 3 94 4 135 1 199 1 69 2 267 1 201 4 49 1 21 2 74 5 361 31 214 2 146 1 217 1 246 3 306 5 365 2 125 1 167 1 312 1 370 2 168 10 
313 1 110 4 173 1 88 1 8 2 89 1 174 1 228 2 299 5 94 1 69 1 21 4 74 3 323 1 361 9 214 1 146 2 306 1 125 2 365 1 167 2 370 1 312 1 168 4 
110 3 49 1 74 2 361 7 214 1 88 1 174 1 89 1 306 1 228 2 299 4 365 1 94 1 69 1 370 1 312 1 168 3 
110 3 49 1 74 2 361 7 214 1 88 1 174 1 89 1 306 1 228 2 299 4 365 1 94 1 69 1 370 1 312 1 168 3 
289 1 37 2 189 2 192 1 257 1 194 1 316 1 334 1 176 1 264 1 46 1 240 2 321 1 359 1 322 1 346 1 184 1 275 1 309 1 77 1 54 1 27 1 80 2 
239 1 82 1 71 1 289 1 189 1 321 1 37 1 240 1 181 1 3 1 183 1 309 1 275 2 184 1 176 1 76 1 54 1 126 1 80 1 
239 1 82 1 71 1 289 1 189 1 321 1 37 1 240 1 181 1 3 1 183 1 218 1 309 1 275 2 184 1 176 1 54 1 126 1 80 1 
239 1 71 2 289 2 189 1 321 1 37 1 240 1 181 1 3 1 332 1 183 1 346 1 309 1 275 3 184 1 176 1 76 1 54 1 80 1 
71 2 289 1 321 1 37 1 240 1 189 1 3 1 332 1 183 1 275 2 184 1 176 1 76 1 80 1 
211 1 
225 1 111 1 192 1 294 1 152 5 7 1 337 1 14 1 117 1 198 1 155 5 302 2 157 1 159 2 121 1 75 1 122 2 304 1 348 1 77 1 204 1 27 1 165 2 250 1 81 1 169 4 170 1 314 1 84 3 131 1 354 1 315 2 172 1 316 1 175 2 41 2 176 2 134 2 265 2 318 2 44 6 46 1 321 2 359 1 322 2 51 1 273 1 52 1 363 2 184 2 276 2 56 1 277 1 368 1 108 1 
81 1 169 2 170 1 225 1 84 1 354 1 172 1 152 3 337 1 117 1 198 1 155 3 44 2 271 1 273 1 52 1 304 1 363 1 204 1 250 1 368 1 108 1 
81 1 169 3 170 1 225 1 84 1 354 1 111 1 172 1 152 3 337 1 117 1 198 1 155 3 44 1 302 1 271 1 273 1 52 1 304 1 204 1 165 1 250 1 368 1 108 1 
81 1 169 3 170 1 84 1 225 1 354 1 111 1 172 1 152 3 175 1 337 1 117 1 198 1 155 3 44 2 302 1 271 1 273 1 52 1 304 1 363 1 204 1 165 1 250 1 368 1 108 1 
81 1 169 2 170 1 129 1 85 1 225 1 84 1 111 1 354 2 152 3 172 2 175 2 337 1 117 1 95 1 198 1 155 3 44 3 17 1 302 1 271 1 178 1 98 1 340 1 273 1 52 1 304 1 215 1 363 2 204 2 106 1 250 2 368 1 108 1 
225 1 111 1 152 4 7 1 337 1 14 1 117 1 198 1 155 4 302 2 157 1 159 2 75 1 122 2 304 1 348 1 204 1 165 2 250 1 81 1 169 4 170 1 314 1 84 2 354 1 172 1 315 2 175 2 41 2 134 1 265 2 318 1 44 4 273 1 52 1 363 2 276 2 56 1 368 1 108 1 
81 1 169 4 33 1 170 1 314 1 84 2 225 1 111 1 354 1 315 2 172 1 152 4 175 2 41 2 134 1 337 1 14 1 117 1 198 1 265 2 155 4 318 1 44 4 302 1 157 1 159 2 75 1 142 1 341 1 273 1 52 1 304 1 363 2 276 2 348 1 204 1 56 1 165 2 250 1 368 1 108 1 
81 1 169 4 33 1 170 1 314 1 84 2 225 1 111 1 354 1 315 2 172 1 152 4 175 2 41 2 134 1 337 1 14 1 117 1 198 1 265 2 155 4 318 1 44 4 302 1 157 1 159 2 75 1 142 1 341 1 273 1 52 1 304 1 363 2 276 2 348 1 204 1 56 1 165 2 250 1 368 1 108 1 
81 1 169 4 170 1 314 1 288 1 84 2 225 1 190 1 111 1 354 1 292 2 172 1 152 4 175 2 41 2 134 1 337 1 117 1 198 1 265 2 155 4 318 1 44 4 302 1 157 1 339 1 75 1 142 1 122 2 273 1 52 1 304 1 363 2 348 1 204 1 56 1 165 2 29 2 250 1 368 1 108 1 
81 1 169 5 33 1 170 1 314 1 84 2 225 1 111 1 354 1 315 2 172 1 152 4 175 3 41 2 134 1 337 1 14 1 117 1 198 1 265 2 155 4 318 1 44 5 302 1 157 1 159 2 75 1 142 1 341 1 273 1 52 1 304 1 215 1 363 3 276 2 348 1 204 1 56 1 165 3 250 1 368 1 108 1 
81 1 169 5 33 1 170 1 314 1 84 2 225 1 111 1 354 1 315 2 172 1 152 4 175 3 41 2 134 1 337 1 14 1 117 1 198 1 265 2 155 4 318 1 44 5 302 1 157 1 159 2 75 1 142 1 341 1 273 1 52 1 304 1 215 1 363 3 276 2 348 1 204 1 56 1 165 3 250 1 368 1 108 1 
225 1 111 1 292 2 152 4 7 1 337 1 117 1 198 1 155 4 302 1 157 1 339 1 75 1 122 2 304 1 348 1 204 1 29 2 165 2 250 1 81 1 169 4 170 1 314 1 84 2 354 1 172 1 175 2 41 2 134 1 265 2 318 1 44 4 273 1 52 1 363 2 56 1 368 1 108 1 
110 1 291 1 354 1 192 2 172 1 316 2 8 2 176 8 299 1 9 1 317 1 358 1 95 1 15 1 46 3 47 1 98 1 321 8 179 2 359 2 322 2 21 4 213 2 361 2 146 2 274 1 218 1 184 7 76 1 77 1 125 2 25 2 278 1 55 1 27 1 107 1 167 2 350 1 250 1 
0 1 290 1 110 2 354 1 4 1 38 1 172 1 8 1 88 1 114 1 299 1 93 1 94 1 95 1 200 1 98 1 179 1 340 1 74 1 21 2 213 1 361 3 146 1 344 1 246 1 125 1 167 1 250 1 168 1 
110 3 4 1 89 1 8 1 174 1 88 1 114 1 228 1 299 3 94 1 238 1 69 1 200 1 47 1 179 1 21 2 74 2 213 1 361 6 146 1 125 1 365 1 205 2 167 1 312 1 168 2 
0 1 110 6 4 4 193 1 39 1 8 2 88 1 114 11 299 8 93 2 65 3 94 2 199 1 200 11 18 1 201 3 179 2 74 1 21 4 213 1 361 14 274 1 146 2 344 1 246 2 306 1 364 1 125 2 205 1 107 1 167 2 59 1 168 2 
45 1 328 1 110 1 179 1 21 2 361 2 213 1 274 1 344 1 8 1 146 1 299 1 125 1 107 1 167 1 369 1 
188 1 110 1 321 1 179 1 21 2 322 1 361 1 213 1 274 1 344 1 8 1 146 1 103 1 184 1 176 1 125 1 163 1 166 1 167 1 369 1 
47 1 179 1 4 1 21 2 361 2 213 1 8 1 146 1 132 1 246 1 306 1 114 1 299 2 125 1 94 1 167 1 168 1 200 1 
0 1 47 1 110 2 179 1 4 1 74 1 21 2 361 2 213 1 362 1 8 1 146 1 88 1 114 1 125 1 167 1 168 1 200 1 
0 1 110 2 4 2 8 1 88 1 114 2 299 2 93 1 94 1 200 2 47 1 179 1 21 2 74 1 213 1 361 4 246 1 146 1 306 1 125 1 167 1 168 2 
179 1 4 1 21 2 361 2 213 1 8 1 146 1 132 1 246 1 306 1 114 1 299 2 125 1 55 1 94 1 167 1 168 1 200 1 
0 1 110 2 179 1 4 1 74 1 21 2 361 2 213 1 362 1 8 1 146 1 88 1 114 1 125 1 55 1 167 1 168 1 200 1 
0 1 110 2 4 2 8 1 88 1 114 2 299 2 93 1 94 1 200 2 179 1 21 2 74 1 213 1 361 4 246 1 146 1 306 1 125 1 55 1 167 1 168 2 
0 1 110 2 179 1 4 2 74 1 21 2 213 1 361 4 88 1 8 1 146 1 246 1 306 1 114 2 299 2 125 1 93 1 94 1 167 1 168 2 200 2 
110 1 192 1 354 1 172 1 316 1 8 1 176 1 299 1 263 1 46 1 321 1 179 1 359 1 322 1 21 2 361 2 213 1 146 1 274 1 184 1 125 1 163 1 205 1 280 1 28 1 107 1 167 1 206 1 
110 1 192 1 354 1 5 1 172 1 316 1 8 1 176 1 299 1 64 1 263 1 96 1 46 1 321 1 179 1 359 1 322 1 21 2 361 2 213 1 146 1 274 1 184 1 125 1 205 1 28 1 107 1 167 1 
0 1 110 2 4 2 8 1 88 1 114 2 299 2 93 1 94 1 200 2 179 1 21 2 74 1 213 1 361 4 246 1 146 1 344 1 306 1 125 1 167 1 168 2 
0 1 110 2 192 1 354 1 4 2 172 1 316 1 88 1 8 1 114 2 176 1 299 2 263 1 93 1 94 1 200 2 46 1 321 1 179 1 359 1 74 1 21 2 361 4 213 1 246 1 146 1 306 1 218 1 184 1 125 1 163 1 280 1 28 1 166 1 167 1 206 1 168 2 
0 1 110 1 290 1 354 1 4 1 172 1 88 1 8 1 114 1 299 2 93 1 94 1 95 1 200 1 98 1 179 1 340 1 21 2 213 1 361 3 146 1 344 1 246 1 306 1 102 1 125 1 167 1 250 1 168 1 
0 3 110 10 39 1 173 1 113 1 335 1 8 2 88 3 299 9 301 1 93 3 65 1 94 3 118 1 199 1 156 2 139 2 201 2 74 3 21 4 361 19 146 2 246 3 306 3 53 1 125 2 311 1 167 2 220 1 168 6 
313 1 0 1 110 8 173 1 88 1 8 2 299 9 93 2 65 2 94 2 118 1 199 2 156 2 320 1 201 2 20 1 74 1 21 4 361 17 160 1 146 2 246 2 305 1 53 2 125 2 311 2 167 2 220 1 168 1 127 1 
313 1 0 3 110 15 39 1 209 1 173 1 113 1 8 3 88 3 299 15 301 1 93 4 65 3 94 4 118 1 199 3 156 3 139 1 320 1 201 4 20 1 74 2 21 6 160 1 361 30 146 3 246 4 305 1 306 2 53 1 125 3 311 2 167 3 220 1 127 1 168 4 
313 1 0 3 110 15 39 1 209 1 173 1 113 1 8 3 88 3 299 15 301 1 93 4 65 3 94 4 118 1 199 3 156 3 139 1 320 1 201 4 20 1 74 3 21 6 160 1 361 30 146 3 246 4 305 1 306 2 53 1 125 3 311 2 167 3 220 1 127 1 168 5 
0 5 110 19 193 2 39 2 173 1 174 1 89 1 8 1 88 6 228 1 299 22 93 6 65 4 94 7 118 1 199 2 69 1 156 2 320 1 201 4 20 1 74 6 21 2 160 1 361 41 146 1 246 6 305 1 306 4 365 1 53 1 125 1 311 1 167 1 220 1 312 1 127 1 168 10 
224 1 262 1 92 1 2 1 73 1 57 1 356 1 112 1 338 1 333 1 
116 1 282 1 
269 1 345 1 23 1 92 1 2 1 57 1 356 1 112 1 338 1 
302 1 2 1 73 1 112 1 356 1 333 1 152 1 261 1 262 1 147 1 92 1 105 1 279 2 197 1 57 1 285 1 155 1 338 1 
302 1 2 1 73 1 112 1 356 1 333 1 152 1 261 1 262 1 147 1 92 1 105 1 279 2 197 1 57 1 285 1 155 1 338 1 
302 1 2 1 73 1 112 1 356 1 333 1 152 1 261 1 262 1 147 1 92 1 105 1 279 2 197 1 57 1 285 1 155 1 338 1 
296 1 32 1 79 1 
296 1 32 1 79 1 
325 1 87 1 
79 1 325 1 87 1 
195 1 243 1 
2 1 354 2 356 1 112 1 172 2 152 1 261 1 195 1 63 1 92 1 116 1 197 1 95 2 155 1 338 1 98 2 242 1 243 1 101 1 366 1 162 1 205 1 279 1 327 1 57 1 282 1 250 2 
296 1 32 1 
79 1 325 1 87 1 
110 1 192 1 354 2 172 2 316 1 8 1 176 2 299 1 358 1 154 1 46 1 272 1 321 2 179 1 359 1 21 2 100 1 143 1 50 1 213 1 361 2 344 1 146 1 274 1 184 2 125 1 25 2 107 1 167 1 350 1 250 2 
70 1 46 1 321 1 192 1 359 1 322 1 316 1 334 1 184 1 176 1 77 1 234 1 27 1 80 1 
70 1 307 1 239 1 176 1 184 1 76 1 321 1 30 1 183 1 80 1 
70 1 239 1 321 2 183 1 218 1 307 1 184 2 176 2 76 1 30 1 80 1 
239 1 253 1 321 1 183 1 184 1 176 1 76 1 30 1 80 1 
62 1 
302 1 157 1 1 1 314 1 111 1 75 1 348 1 134 1 233 1 318 1 
0 2 302 5 158 1 130 2 122 10 246 2 88 2 276 5 210 5 134 5 230 5 93 2 235 1 94 2 318 5 
44 1 302 1 84 1 111 1 155 1 152 1 
314 2 84 2 192 1 207 1 131 2 294 2 152 3 316 1 176 4 134 2 12 1 68 1 155 3 318 2 44 4 157 2 46 1 321 4 359 1 121 1 75 2 322 2 51 1 343 1 184 4 348 1 77 1 27 1 286 2 
302 1 134 1 1 1 233 1 111 1 238 1 318 1 
314 1 84 1 111 1 315 1 152 1 134 1 14 1 155 1 318 1 44 1 302 2 157 1 159 1 75 1 122 1 276 1 348 1 
157 1 46 1 314 1 321 1 192 1 359 1 182 1 75 1 322 1 256 1 316 1 297 1 184 1 176 1 348 1 13 1 28 1 
0 1 314 2 130 1 84 1 111 1 152 1 88 1 210 4 134 5 230 4 93 1 65 1 94 1 155 1 199 1 43 1 318 3 44 1 302 4 157 2 320 1 201 1 20 1 75 2 122 6 160 1 246 1 305 1 348 2 276 3 127 1 
314 1 129 1 130 2 85 1 354 1 172 1 152 1 174 1 88 1 134 2 94 2 95 1 155 1 69 1 318 2 157 1 178 1 158 1 98 1 340 1 75 1 341 1 219 1 348 1 204 1 365 1 106 1 250 1 
110 1 85 1 354 3 192 1 172 3 316 1 8 1 176 1 263 1 95 2 136 1 46 1 321 1 98 2 179 1 359 1 340 2 21 2 322 1 361 1 213 1 274 1 146 1 184 1 125 1 163 1 205 1 280 1 28 1 167 1 250 2 206 1 
302 4 157 1 314 1 131 1 111 2 75 1 122 4 294 1 228 1 276 2 348 1 210 2 134 1 230 2 318 2 
61 1 195 1 73 1 57 1 356 1 
57 1 356 1 223 1 
57 1 356 1 223 1 
57 1 356 1 223 1 
42 1 57 1 356 1 
42 1 57 1 356 1 
42 1 57 1 356 1 
57 1 356 1 
2 1 112 1 
110 5 21 2 74 3 361 10 173 1 146 1 8 1 174 1 88 2 306 2 219 1 299 5 125 1 365 2 94 2 167 1 69 2 168 5 
21 2 361 2 173 1 8 1 146 1 246 1 306 1 299 2 125 1 94 1 167 1 168 1 
0 1 110 2 74 1 21 2 361 4 173 1 88 1 8 1 146 1 246 1 306 1 299 2 125 1 93 1 94 1 167 1 168 2 
313 1 110 2 21 6 74 1 361 3 173 1 8 3 146 3 306 1 299 1 125 3 365 1 301 1 66 1 167 3 69 1 168 2 
313 2 0 3 34 1 110 18 39 1 173 1 174 2 89 1 8 5 88 5 228 1 299 16 301 1 93 3 65 3 66 1 94 5 135 1 199 1 69 3 267 1 201 4 21 10 74 7 361 34 217 1 146 5 246 3 306 5 365 3 125 5 167 5 312 1 168 12 
313 1 110 4 74 2 21 4 361 8 88 1 174 1 8 2 146 2 89 1 306 1 228 1 299 4 125 2 365 1 94 1 167 2 312 1 69 1 168 3 
110 3 74 2 361 6 89 1 174 1 88 1 228 1 299 3 365 1 94 1 238 1 312 1 69 1 168 2 
0 1 34 1 110 2 74 1 21 2 361 4 88 1 8 1 146 1 246 1 306 1 299 2 125 1 93 1 94 1 167 1 168 2 
0 1 201 2 110 4 74 1 39 1 361 7 88 1 246 1 306 1 299 3 93 1 65 1 94 1 199 1 168 2 
0 2 313 2 110 12 39 1 193 1 174 1 89 1 88 3 8 2 228 1 299 11 93 2 65 2 94 3 66 1 69 2 201 2 74 5 21 4 361 23 246 2 146 2 306 4 364 1 365 2 125 2 167 2 312 1 168 9 
110 1 201 1 361 1 
299 1 65 1 361 1 
0 1 34 1 110 3 21 2 74 2 361 6 146 1 8 1 246 1 88 1 306 1 299 3 125 1 93 1 235 1 94 1 167 1 168 3 
0 1 320 1 201 1 110 4 20 1 74 1 21 2 160 1 361 10 173 1 88 1 246 2 8 1 146 1 305 1 299 6 125 1 93 2 65 1 94 2 167 1 199 1 168 1 127 1 
110 3 74 1 361 6 174 1 88 1 306 1 299 3 365 1 94 1 69 1 168 2 
313 1 110 2 74 1 21 2 361 3 8 1 146 1 89 1 306 1 299 1 365 1 125 1 66 1 167 1 69 1 312 1 168 2 
110 4 173 1 88 1 8 1 89 1 174 1 228 1 299 4 65 1 94 1 199 1 69 1 201 1 21 2 74 2 361 8 146 1 125 1 365 1 167 1 312 1 127 1 168 2 
34 1 110 5 39 1 173 1 88 1 174 1 89 1 8 2 228 1 299 6 93 1 65 1 94 2 199 1 69 1 201 2 74 2 21 4 361 11 146 2 246 1 306 1 365 1 125 2 167 2 312 1 127 1 168 3 
313 1 0 1 320 1 201 1 110 5 20 1 74 1 21 4 160 1 361 11 173 1 88 1 246 2 8 2 146 2 305 1 299 6 125 2 93 2 65 1 94 2 167 2 199 1 168 1 127 1 
0 1 320 1 201 1 110 4 20 1 74 1 21 2 160 1 361 10 173 1 88 1 246 2 8 1 146 1 305 1 299 6 125 1 93 2 65 1 94 2 167 1 199 1 168 1 127 1 
110 4 173 1 88 1 8 1 89 1 174 1 228 1 299 4 65 1 94 1 199 1 69 1 201 1 21 2 74 2 361 8 146 1 125 1 365 1 167 1 312 1 127 1 168 2 
0 1 320 1 201 1 110 4 20 1 74 1 21 2 160 1 361 10 173 1 88 1 246 2 8 1 146 1 305 1 299 6 125 1 93 2 65 1 94 2 167 1 199 1 168 1 127 1 
313 1 0 1 34 1 320 1 201 1 110 5 20 1 74 1 21 6 160 1 361 11 173 1 88 1 246 2 8 3 146 3 305 1 299 6 125 3 93 2 65 1 94 2 167 3 199 1 168 1 127 1 
313 1 0 1 320 1 201 1 110 5 20 1 74 2 21 6 160 1 361 11 173 1 88 1 246 2 8 3 146 3 305 1 299 6 125 3 93 2 301 1 65 1 94 2 167 3 199 1 168 2 127 1 
110 4 74 3 361 7 88 1 89 1 174 1 306 3 299 3 365 3 94 1 312 2 69 3 168 6 
313 1 0 1 320 1 201 1 110 5 20 1 74 1 21 6 160 1 361 11 173 1 88 1 246 2 8 3 146 3 305 1 299 6 125 3 93 2 301 1 65 1 94 2 167 3 199 1 168 1 127 1 
124 1 177 1 205 1 354 1 250 1 108 1 172 1 
150 1 354 1 172 1 216 1 203 1 196 1 124 1 177 1 205 1 186 1 250 1 108 1 
218 1 176 4 184 4 46 1 77 1 321 4 192 1 359 1 27 1 322 1 249 1 251 1 316 1 
46 1 321 2 48 1 359 1 192 1 244 1 324 1 316 2 184 2 176 2 248 1 28 1 286 1 16 1 
287 1 321 1 241 1 192 1 120 1 322 1 316 1 184 1 176 1 283 1 
46 1 321 2 359 1 192 1 100 1 316 1 218 1 184 2 176 2 76 1 350 1 
46 3 321 5 359 2 192 2 322 1 316 2 218 1 184 4 176 5 77 1 9 1 317 1 27 1 249 1 350 1 286 1 
46 3 321 5 359 2 192 2 322 1 226 1 316 2 218 1 184 4 176 5 77 1 317 1 27 1 249 1 350 1 286 1 
176 1 184 1 46 1 77 1 321 1 192 1 359 1 27 1 322 1 238 1 316 1 
46 1 98 1 321 1 359 1 354 2 192 1 322 1 172 2 316 1 184 1 176 1 263 1 205 1 280 1 28 1 95 1 250 1 15 1 
81 1 192 1 354 2 171 1 172 2 316 1 176 1 263 1 95 2 15 1 46 3 321 1 98 1 359 2 273 1 22 1 184 1 204 1 205 1 280 1 28 2 250 2 286 1 
81 1 46 3 98 1 321 2 359 2 354 2 192 1 171 1 273 1 172 2 316 1 22 1 184 2 176 2 204 1 64 1 263 1 205 1 28 2 95 2 250 2 15 1 286 1 251 1 
44 1 302 1 46 4 321 3 329 1 111 1 359 1 192 1 322 1 171 1 152 2 202 1 304 1 316 1 22 1 184 3 176 3 13 1 28 1 155 2 286 1 251 1 97 1 
44 1 302 1 46 4 321 3 329 1 191 1 111 1 359 1 192 1 322 1 171 1 152 2 304 1 316 1 22 1 184 3 176 3 13 1 28 1 155 2 286 1 251 1 
176 1 184 1 321 1 291 1 192 1 316 1 
46 3 321 7 291 1 359 2 192 2 322 2 256 1 324 1 316 3 218 1 184 6 176 7 76 1 310 1 9 1 25 1 278 1 248 1 317 1 28 1 350 1 
110 3 188 1 192 1 354 2 4 1 172 2 316 1 88 1 174 1 89 1 8 2 114 1 228 1 176 1 299 3 263 1 94 1 95 1 15 1 69 1 200 1 46 1 179 2 98 1 321 1 359 1 74 2 21 4 143 1 361 6 213 2 344 1 146 2 218 1 184 1 365 1 125 2 163 1 205 2 280 1 28 1 166 1 167 2 250 1 206 1 312 1 168 2 
1 1 314 2 36 1 329 1 191 1 84 1 111 1 207 1 152 3 176 1 134 1 233 1 13 1 155 3 318 1 44 2 302 1 157 2 303 1 46 2 321 1 322 1 75 2 304 1 184 1 348 2 327 1 58 1 
46 1 329 1 321 1 291 1 359 1 192 1 182 1 256 1 355 1 316 1 184 1 176 1 28 1 
46 1 98 1 321 1 359 1 354 2 192 1 322 1 172 2 316 1 184 1 176 1 64 1 263 1 205 1 28 1 95 1 250 1 15 1 
46 1 321 1 359 1 192 1 256 1 324 1 316 2 184 1 176 1 310 1 248 1 28 1 286 1 
35 1 272 1 19 1 354 1 50 1 172 1 300 1 154 1 250 1 
300 1 236 1 141 1 
35 1 185 1 300 1 19 1 
35 1 185 1 300 1 10 1 19 1 327 1 236 1 141 1 155 1 152 1 
260 1 308 1 275 1 309 1 82 1 289 1 54 1 123 1 
71 2 289 4 254 1 140 1 255 1 258 1 259 1 123 3 260 2 308 2 275 4 309 1 54 1 31 1 
260 1 308 1 275 2 309 1 82 1 71 1 247 1 289 2 54 1 232 1 208 1 123 1 
82 1 289 3 254 2 140 1 342 1 258 2 123 1 260 1 309 1 275 3 308 1 54 1 
91 1 237 2 123 2 128 1 
275 1 309 1 82 1 289 1 54 1 295 1 
260 1 308 1 275 2 309 1 82 1 71 1 289 2 54 1 67 1 123 1 
151 1 
260 1 308 1 275 1 309 1 82 1 289 1 54 1 123 1 
260 1 308 1 238 1 123 1 
260 1 308 1 275 1 309 1 289 1 54 1 123 1 
289 1 189 1 240 1 
260 1 308 1 275 3 309 1 82 1 289 3 54 1 254 1 140 1 360 1 258 2 123 1 
260 1 308 1 275 2 309 1 71 1 289 2 54 1 284 1 123 1 
82 1 289 1 241 1 120 1 123 1 90 1 309 1 275 1 229 1 54 1 31 1 
260 1 275 1 309 1 82 1 289 1 54 1 123 1 
260 2 308 1 275 1 309 1 82 1 289 1 54 1 
260 1 275 2 309 2 82 1 289 2 231 1 353 1 54 2 72 1 123 1 
82 1 71 2 289 3 255 1 123 2 260 1 308 1 309 1 275 3 336 1 54 1 67 1 31 1 
347 1 275 2 309 1 82 1 71 1 229 1 289 1 54 1 241 1 120 2 283 1 266 1 
82 1 71 2 289 4 180 1 255 1 123 2 260 1 308 1 309 2 275 4 54 2 284 1 31 1 
260 1 308 1 275 3 309 1 82 1 71 1 289 3 54 1 67 1 258 1 123 1 
255 1 31 1 259 1 123 1 
260 1 123 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (188,257) (188,257) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 185 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 208 102 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 301 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 184 89 65 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 184 89 65 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 24 288 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 184 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 184 89 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 134 315 243 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 134 315 243 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 134 315 207 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (188,257) (188,257) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (188,257) (188,257) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (188,257) (188,257) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 87 261 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 336 (15,203) 17 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 197 135 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (195,215) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (1,182) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (313,323) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 2 299 1 2 5 224 1 308 1 310 1 309 1 131 2 226 1 132 1 57 4 269 1 16 7 196 1 68 9 200 1 70 1 206 1 286 9 32 1 246 1 80 2 162 3 164 1 
44 2 299 1 2 5 224 1 308 1 310 1 309 1 131 2 226 1 132 1 57 4 269 1 16 7 196 1 68 9 200 1 70 1 206 1 286 9 32 1 246 1 80 2 162 3 164 1 
299 1 44 2 2 5 3 1 220 1 224 1 308 1 310 1 309 2 226 1 131 2 57 4 269 2 103 1 16 6 19 1 196 1 198 1 68 9 200 1 70 1 206 2 286 9 246 1 80 2 85 1 164 2 162 3 
299 1 44 2 2 5 3 1 220 1 224 1 308 1 310 1 309 2 226 1 131 2 57 4 269 2 103 1 16 6 19 1 196 1 198 1 68 9 200 1 70 1 206 2 286 9 246 1 80 2 85 1 164 2 162 3 
299 1 44 2 2 6 3 1 220 1 224 1 308 1 310 1 309 2 226 1 131 2 57 5 269 2 103 1 16 7 19 1 196 1 198 1 68 10 200 1 70 1 206 2 286 10 246 1 80 2 85 1 164 2 162 4 
44 2 2 4 3 1 220 1 224 1 308 1 310 1 309 2 226 1 131 1 57 3 269 2 103 1 16 4 19 1 196 1 198 1 68 7 200 1 70 1 206 2 286 7 246 1 80 2 85 1 164 2 162 2 
299 1 44 1 2 3 68 4 224 1 206 1 308 1 310 1 309 1 286 4 131 2 226 1 57 2 269 1 80 1 16 3 196 1 162 1 
44 1 2 1 68 2 3 1 149 1 224 1 206 1 310 1 286 2 159 1 269 1 80 1 59 1 85 1 196 1 164 1 
44 2 2 2 68 3 70 1 224 1 310 1 286 3 57 1 80 2 16 1 196 1 164 1 162 1 
221 1 
142 1 167 1 71 1 225 1 76 1 158 1 77 1 14 1 234 1 104 1 191 1 
142 1 167 2 71 1 201 1 225 1 76 1 247 1 158 1 77 1 58 1 234 1 104 1 
167 1 20 1 
167 1 20 1 
167 1 
167 1 20 1 
167 1 20 1 
63 1 165 1 113 1 167 2 5 1 20 1 
72 1 221 1 
119 1 67 1 71 2 201 1 72 2 247 1 77 2 58 1 234 2 
130 1 140 1 7 1 
147 1 276 1 72 1 202 1 151 1 51 2 264 2 287 1 133 1 267 1 313 1 12 1 77 1 115 2 332 1 234 1 81 1 61 1 193 1 
147 1 276 1 71 1 202 1 151 1 237 1 51 1 264 1 133 1 267 1 313 1 12 1 247 1 77 2 115 1 140 1 58 1 234 2 61 1 298 1 
119 1 166 1 302 1 278 1 71 5 201 1 72 1 237 2 247 4 77 5 58 4 234 5 191 1 298 1 
142 1 247 2 71 2 108 1 77 2 58 2 283 1 234 2 
247 3 71 3 201 1 77 3 72 1 58 3 234 3 237 1 
142 1 247 1 71 1 77 1 58 1 283 1 234 1 
142 1 119 1 67 1 247 1 71 1 77 1 201 1 58 1 234 1 
142 1 119 1 120 1 321 1 167 1 71 2 201 1 237 1 225 1 76 1 247 2 158 1 77 2 58 2 104 1 234 2 298 1 
302 1 247 1 71 2 77 2 72 1 58 1 234 2 191 1 237 1 
142 1 321 1 167 1 71 1 237 1 225 1 290 1 76 1 247 1 158 1 77 1 58 1 234 1 104 1 298 1 
119 1 71 2 201 1 237 1 130 1 247 2 77 2 140 1 58 2 234 2 
147 1 276 1 72 1 202 1 151 1 51 1 264 1 313 1 267 1 133 1 12 1 77 1 115 1 234 1 61 1 
1 1 147 1 276 1 72 1 202 1 51 1 264 1 267 1 133 1 12 1 77 1 115 1 234 1 253 1 61 1 
0 4 122 1 47 1 49 1 170 1 7 2 52 1 54 1 130 2 312 1 140 2 21 1 62 1 146 1 110 1 284 2 244 1 34 2 291 2 249 1 331 1 334 1 41 1 86 1 
142 1 247 1 71 1 77 1 108 1 58 1 104 1 234 1 
36 1 255 1 
36 1 255 1 
229 1 144 1 
229 1 144 1 
229 1 144 1 
36 1 322 1 255 1 
36 1 322 1 255 1 
46 1 36 1 255 1 
179 1 229 1 144 1 36 2 255 2 318 1 
36 1 322 1 255 1 
36 1 60 1 255 1 
36 1 60 1 255 1 
36 1 60 1 255 1 
300 1 87 1 148 1 167 1 71 1 90 1 109 1 157 1 36 1 55 1 247 1 77 1 58 1 234 1 255 1 
300 2 257 1 148 1 167 2 169 1 90 2 109 2 157 2 36 2 55 2 188 1 297 1 255 2 
269 1 206 1 309 1 
269 1 59 1 206 1 
328 1 230 1 269 3 152 1 59 1 309 2 
328 1 230 1 269 2 40 1 59 1 309 1 
230 1 328 2 269 2 59 1 309 1 
167 1 20 1 285 1 
167 2 204 1 281 1 185 1 20 2 
165 1 63 1 167 2 5 1 208 1 154 1 112 1 113 1 37 1 251 1 20 1 
165 1 63 1 167 1 5 1 208 1 154 1 112 1 113 1 37 1 251 1 102 1 
12 1 221 1 155 1 
12 1 92 1 
26 1 
133 1 12 1 61 1 
217 1 12 1 
12 1 61 1 
133 1 12 3 325 1 250 1 61 1 155 2 
0 7 47 1 259 1 304 1 173 1 205 1 129 2 9 1 242 1 75 1 34 3 312 2 291 4 79 1 331 3 272 1 62 1 
0 7 47 1 259 1 304 1 173 1 205 1 129 2 9 1 242 1 75 1 34 3 312 2 291 4 79 1 331 3 272 1 62 1 
0 7 47 1 259 1 304 1 173 1 205 1 129 2 9 1 242 1 75 1 34 3 312 2 180 1 291 4 79 1 331 3 272 1 62 1 
0 8 197 1 301 1 47 1 262 2 304 2 129 1 177 1 9 1 75 1 228 1 312 1 34 4 291 4 292 1 252 1 331 2 334 1 41 1 62 1 
0 9 47 1 49 2 170 2 304 1 173 1 205 1 284 4 153 1 129 2 9 1 242 1 54 2 75 1 312 3 34 4 291 5 39 1 79 1 331 4 272 1 117 1 21 2 62 1 
44 1 2 1 4 1 50 1 224 1 6 1 264 1 51 1 310 1 309 1 269 2 16 1 190 1 59 1 192 1 235 1 196 1 145 1 68 2 276 1 202 1 152 1 206 1 286 2 115 1 161 1 80 1 164 1 163 1 43 1 
44 1 2 1 4 1 50 1 224 1 6 1 264 1 51 1 310 1 309 1 11 1 269 2 16 2 190 1 59 1 235 1 22 1 68 3 276 1 150 1 202 1 152 1 206 1 286 3 115 1 161 1 80 1 164 1 163 1 43 1 
2 1 4 1 50 1 224 1 6 1 264 1 51 1 310 1 309 1 269 2 16 2 59 1 235 1 22 1 68 2 276 1 150 1 202 1 152 1 206 1 286 2 115 1 161 1 164 1 43 1 
44 1 48 1 68 1 147 1 276 1 28 1 168 1 260 1 202 1 263 1 6 2 51 1 264 1 286 1 289 1 12 1 11 1 115 1 80 1 161 2 61 1 235 2 164 2 
44 1 4 1 50 1 6 1 264 1 51 1 309 1 269 2 190 1 59 1 192 1 235 1 196 1 22 1 68 1 276 1 202 1 152 1 206 1 286 1 115 1 161 1 80 1 164 1 163 1 43 1 
233 1 
142 1 65 1 167 2 71 1 89 1 305 1 128 1 225 1 53 1 76 1 158 1 137 1 77 1 184 1 14 1 104 1 234 1 191 1 316 1 
142 1 65 1 167 2 71 1 89 1 305 1 128 1 225 1 53 1 76 1 158 1 137 1 77 1 184 1 14 1 104 1 234 1 191 1 316 1 
218 1 167 2 128 1 305 1 5 1 225 1 53 1 134 1 97 1 136 1 137 1 138 1 14 1 234 1 104 1 191 1 316 1 63 1 142 1 71 1 31 1 112 1 113 1 76 1 158 1 77 1 116 1 
63 1 147 1 24 1 167 1 5 1 51 1 264 1 154 1 112 1 113 1 288 1 115 1 116 1 
142 1 167 2 71 1 305 1 128 1 225 1 53 1 76 1 158 1 137 1 77 1 184 1 14 1 104 1 234 1 191 1 316 1 
142 1 167 2 71 1 305 1 128 1 225 1 53 1 311 1 76 1 158 1 137 1 77 1 14 1 104 1 234 1 191 1 316 1 
142 1 167 2 71 1 89 1 305 1 128 1 225 1 53 1 76 1 158 1 137 1 77 1 184 1 14 1 104 1 234 1 191 1 316 1 
167 1 
218 1 167 2 128 1 305 1 5 1 225 1 53 1 134 1 136 1 137 1 14 1 234 1 104 1 191 1 316 1 273 1 63 1 142 1 275 1 71 1 31 1 112 1 113 1 76 1 158 1 77 1 116 1 
218 1 167 2 128 1 305 1 5 1 225 1 53 1 93 1 134 1 315 1 136 1 137 1 14 1 234 1 104 1 191 1 316 1 273 1 142 1 63 1 275 1 71 1 31 1 112 1 243 1 113 1 76 1 158 1 77 1 116 1 
218 1 167 2 128 1 305 1 5 1 225 1 53 1 93 1 134 1 315 1 136 1 137 1 14 1 234 1 104 1 191 1 316 1 273 1 142 1 63 1 275 1 71 1 31 1 112 1 243 1 113 1 76 1 158 1 77 1 116 1 
218 1 167 2 128 1 305 1 5 1 225 1 53 1 134 1 97 1 315 1 136 1 137 1 100 1 138 1 14 1 234 1 104 1 191 1 316 1 142 1 63 1 71 1 207 1 31 1 112 1 113 1 76 1 158 1 77 1 116 1 
0 6 47 1 49 1 170 1 221 1 173 1 7 1 129 1 54 1 130 1 312 2 140 1 272 1 21 1 62 1 146 1 72 2 205 1 284 2 242 1 244 1 34 3 291 3 249 1 79 1 331 2 
0 14 45 1 47 2 49 2 170 2 262 3 222 1 7 11 177 3 9 1 54 2 228 1 130 4 312 1 140 11 194 1 21 2 62 1 197 1 146 2 72 1 236 1 284 4 324 1 34 6 244 1 291 8 252 2 331 2 333 1 334 1 213 1 41 2 
0 2 45 1 49 1 170 1 222 1 54 1 130 1 58 1 234 1 21 1 194 1 142 1 319 1 146 1 71 1 72 1 284 2 237 1 74 1 244 1 34 1 247 1 291 1 38 1 77 1 295 1 298 1 
0 20 170 3 173 1 174 1 264 3 7 7 9 4 267 2 268 1 12 2 183 1 15 2 105 2 272 1 194 1 21 3 271 2 22 1 276 2 202 2 205 1 284 6 34 10 291 10 115 3 41 2 298 1 45 1 47 3 123 2 49 3 222 1 51 3 129 1 54 3 130 7 312 4 313 2 133 2 140 7 58 1 234 3 61 2 62 3 146 3 147 1 71 1 72 2 151 2 237 1 242 1 244 3 247 1 77 3 79 1 252 2 331 8 334 2 337 2 
0 2 256 1 216 1 45 1 49 2 170 2 260 1 263 1 264 8 51 7 8 1 54 2 12 3 13 1 98 1 58 1 234 1 21 2 194 1 193 2 61 2 22 1 145 1 146 2 147 2 276 2 71 1 202 2 284 4 237 1 239 1 240 1 244 2 34 1 247 1 291 1 249 1 77 1 115 8 
119 1 0 3 47 1 49 1 170 1 222 1 7 1 54 1 130 1 312 1 232 1 140 1 58 1 234 1 21 1 62 1 146 1 71 1 201 1 284 2 244 1 34 2 247 1 291 1 77 1 252 1 331 1 334 1 41 1 
0 2 146 1 47 1 49 1 170 1 284 2 7 1 9 1 54 1 130 1 244 1 291 2 249 1 331 1 140 1 41 1 21 1 86 1 
0 2 122 1 146 1 49 1 170 1 284 2 7 1 54 1 130 1 312 1 244 1 34 2 249 1 331 1 140 1 334 1 21 1 62 1 
0 4 47 1 49 1 170 1 7 2 9 1 54 1 130 2 312 1 140 2 21 1 62 1 146 1 284 2 244 1 34 2 291 2 249 1 252 1 331 2 334 1 41 1 
0 2 146 1 47 1 49 1 170 1 284 2 7 1 9 1 240 1 54 1 130 1 244 1 291 2 331 1 140 1 41 1 21 1 86 1 
0 2 122 1 146 1 49 1 170 1 284 2 7 1 240 1 54 1 130 1 312 1 244 1 34 2 331 1 140 1 334 1 21 1 62 1 
0 4 47 1 49 1 170 1 7 2 9 1 54 1 130 2 312 1 140 2 21 1 62 1 146 1 284 2 240 1 244 1 34 2 291 2 252 1 331 2 334 1 41 1 
0 4 47 1 49 1 170 1 7 2 9 1 54 1 130 2 312 1 140 2 21 1 62 1 146 1 284 2 244 1 34 2 291 2 252 1 331 2 334 1 41 1 
0 2 45 1 49 1 170 1 264 1 51 1 54 1 133 1 267 1 313 1 12 1 234 1 105 1 194 1 61 1 21 1 146 1 147 1 276 1 72 1 202 1 151 1 284 2 244 1 34 1 291 1 115 1 77 1 
0 2 1 1 45 1 49 1 170 1 264 1 51 1 54 1 133 1 267 1 12 1 234 1 194 1 61 1 21 1 146 1 147 1 276 1 72 1 202 1 284 2 244 1 34 1 291 1 115 1 77 1 253 1 118 1 
0 4 47 1 49 1 170 1 222 1 7 2 9 1 54 1 130 2 312 1 140 2 21 1 62 1 146 1 284 2 244 1 34 2 291 2 252 1 331 2 334 1 41 1 
0 4 47 1 49 1 170 1 7 2 264 1 51 1 9 1 54 1 130 2 312 1 133 1 267 1 313 1 12 1 140 2 234 1 105 1 271 1 61 1 21 1 62 1 145 1 146 1 276 1 202 1 151 1 284 2 34 2 244 1 291 2 115 1 77 1 252 1 331 2 334 1 41 1 
119 1 0 3 47 1 49 1 170 1 222 1 7 1 9 1 54 1 94 1 130 1 140 1 58 1 234 1 21 1 62 1 146 1 71 1 201 1 284 2 34 1 244 1 247 1 291 2 77 1 252 1 331 1 334 1 41 1 
0 41 170 3 262 4 173 1 175 1 176 1 177 3 178 1 9 4 96 1 99 1 270 1 21 3 272 1 197 3 284 6 205 1 34 21 114 1 291 20 39 1 294 1 41 4 214 1 117 1 47 5 219 1 49 3 129 1 54 3 228 1 312 4 135 1 62 5 317 1 320 2 242 1 252 4 78 4 79 1 329 1 331 8 334 4 
0 38 47 5 219 1 49 4 170 4 262 4 173 1 175 1 176 1 178 1 129 1 177 3 9 3 54 4 228 1 312 4 96 1 135 1 99 1 270 1 272 1 21 4 317 1 62 4 197 3 320 2 205 1 284 8 242 1 34 18 114 1 291 20 39 2 329 1 79 1 78 4 252 4 331 7 294 1 334 3 41 4 214 1 117 1 
0 52 47 8 219 1 49 2 170 2 262 4 173 1 175 1 176 1 178 1 129 1 177 4 9 7 54 2 228 2 312 7 96 1 135 1 99 1 270 1 272 1 21 2 317 1 62 8 197 2 320 1 205 1 284 4 324 2 242 1 34 25 114 1 291 27 39 1 79 1 78 4 252 7 331 14 294 1 334 7 41 7 117 1 
0 19 47 3 49 2 170 2 262 2 175 1 176 1 178 2 177 1 9 3 54 2 228 1 312 3 99 1 21 2 317 1 62 3 197 1 320 1 23 1 284 4 34 10 291 9 329 1 78 2 252 3 331 6 334 3 41 3 117 1 
0 26 47 3 219 1 49 3 170 3 262 2 175 1 176 1 178 1 177 2 9 2 54 3 312 2 96 1 135 1 99 1 270 1 21 3 62 2 317 2 197 2 320 2 284 6 34 12 114 1 291 14 39 2 78 4 252 3 331 4 294 1 334 2 41 3 117 1 
300 1 55 1 36 1 231 1 90 1 109 1 141 1 254 1 255 1 318 1 
46 1 258 1 
300 1 211 1 55 1 36 1 124 1 90 1 282 1 109 1 255 1 
322 1 209 1 
179 1 277 1 60 1 
300 1 257 1 148 1 167 1 169 1 90 1 109 1 157 2 36 1 55 1 188 1 297 1 255 1 
300 1 257 1 148 1 167 1 169 1 90 1 109 1 157 2 36 1 55 1 188 1 297 1 255 1 
300 1 257 1 148 1 167 1 169 1 90 1 109 1 157 2 36 1 55 1 188 1 297 1 255 1 
179 1 322 1 209 1 
179 1 322 1 209 1 
277 1 60 1 
179 1 277 1 60 1 
111 1 18 1 
300 1 87 1 167 1 169 1 90 1 261 1 109 1 157 1 36 1 55 1 297 1 255 1 20 1 
0 2 45 1 49 1 170 1 222 1 264 2 51 2 265 1 54 1 314 1 12 1 13 1 98 1 234 2 61 1 21 1 194 1 193 2 146 1 106 1 276 1 69 1 71 2 202 1 284 2 244 1 34 1 291 1 115 2 77 2 212 1 
22 1 66 1 145 1 276 1 4 1 202 1 152 1 206 1 51 2 264 2 6 1 223 1 309 1 115 2 269 2 330 1 59 1 190 1 43 1 
22 1 276 1 4 1 202 1 152 1 206 1 51 1 264 1 6 1 309 1 115 1 269 2 330 1 59 1 190 1 42 1 43 1 
66 1 48 1 147 1 276 1 260 1 202 1 126 1 263 1 51 1 264 1 6 1 12 1 115 1 61 1 
22 1 66 1 276 1 4 1 202 1 152 1 206 1 51 1 264 1 6 1 223 1 309 1 115 1 269 2 330 1 59 1 190 1 43 1 
82 1 
112 1 63 1 113 1 125 1 116 1 5 1 31 1 154 1 
221 1 215 1 195 1 31 1 
273 1 112 1 63 1 113 1 275 1 116 1 5 1 31 1 
63 1 147 1 276 1 203 1 202 2 92 1 5 1 51 1 264 1 154 1 112 1 241 1 113 1 133 1 12 2 325 1 115 1 116 1 336 1 17 1 61 1 
112 1 197 1 63 1 113 1 135 1 262 1 116 1 5 1 177 1 31 1 
63 1 143 1 47 2 167 1 88 1 5 1 205 1 173 1 93 1 31 2 112 1 113 1 248 2 79 1 116 1 62 1 
63 1 113 1 116 1 5 1 195 1 31 1 
112 1 47 1 252 1 334 1 41 1 62 1 31 1 
147 1 115 1 264 1 51 1 
55 1 91 1 109 1 
55 1 91 1 109 1 
245 1 55 1 109 1 111 1 254 1 
55 1 91 1 109 1 
55 1 109 1 266 1 
55 1 109 1 266 1 
55 1 109 1 266 1 
55 1 109 1 
36 1 255 1 
0 8 47 1 49 1 170 1 262 1 173 1 129 1 177 1 54 1 312 2 135 1 21 1 272 1 62 1 197 1 284 2 205 1 242 1 34 4 291 4 79 1 331 2 117 1 
0 11 47 2 49 2 170 2 262 2 173 1 129 1 177 1 9 1 54 2 228 1 312 2 135 1 186 1 272 1 21 2 62 1 197 1 205 1 284 4 242 1 34 5 291 6 79 1 252 1 331 3 41 1 117 1 
0 19 47 3 219 1 49 3 170 3 262 1 173 1 129 1 177 1 9 1 54 3 312 3 96 1 135 1 270 1 186 1 272 1 21 3 62 3 197 1 205 1 284 6 242 1 34 10 114 1 291 9 39 1 79 1 252 2 331 4 334 2 41 2 117 1 
0 17 47 3 219 1 49 3 170 3 262 1 173 1 129 1 177 1 9 2 54 3 312 3 96 1 135 1 270 1 186 1 272 1 21 3 62 2 197 1 205 1 284 6 242 1 34 7 114 1 291 10 39 1 79 1 252 2 331 5 334 1 41 2 117 1 
0 8 47 1 49 1 170 1 262 1 173 1 129 1 177 1 54 1 312 2 135 1 21 1 272 1 62 1 197 1 284 2 205 1 242 1 34 4 291 4 79 1 331 2 117 1 
0 12 47 2 219 1 49 1 170 1 262 1 177 1 9 1 54 1 312 1 96 1 135 1 270 1 21 1 62 2 197 1 284 2 34 6 114 1 291 6 252 2 331 2 334 2 41 2 117 1 
0 18 47 3 219 1 49 4 170 4 262 1 173 1 129 1 177 1 9 2 54 4 312 3 96 1 135 1 270 1 186 1 272 1 21 4 62 2 197 1 205 1 284 8 242 1 34 8 114 1 291 10 39 2 79 1 252 2 331 5 334 1 41 2 117 1 
0 16 47 3 219 1 49 4 170 4 262 1 177 1 9 3 54 4 312 3 96 1 135 1 270 1 21 4 62 2 197 1 284 8 34 7 114 1 291 9 39 2 329 1 252 3 331 6 334 2 41 3 117 1 
0 7 47 1 205 3 173 3 9 3 242 1 34 4 312 3 291 3 79 1 331 6 272 2 62 1 
0 18 47 3 219 1 49 4 170 4 262 1 173 1 129 1 177 1 9 1 54 4 312 3 96 1 135 1 270 1 272 1 21 4 62 2 197 1 205 1 284 8 242 1 34 8 114 1 291 10 39 2 79 1 329 1 252 2 331 4 334 1 41 2 117 1 
0 8 47 1 49 2 170 2 284 4 205 1 173 1 129 1 9 1 54 2 242 1 34 4 312 2 291 4 39 1 79 1 331 3 21 2 272 1 62 1 
0 6 47 1 221 1 205 1 173 1 129 1 242 1 34 3 312 2 291 3 79 1 331 2 272 1 62 1 
0 4 47 1 49 1 170 1 284 2 9 1 54 1 312 1 34 2 291 2 252 1 331 2 334 1 186 1 41 1 21 1 62 1 
197 1 0 7 47 1 262 2 177 1 9 1 228 1 312 1 34 4 291 3 252 1 331 2 334 1 41 1 62 1 
0 23 47 3 49 2 170 2 262 2 173 2 129 1 177 2 9 4 54 2 228 1 312 5 272 1 21 2 62 3 107 1 236 1 205 2 284 4 324 1 242 1 34 12 291 11 39 2 79 1 252 2 331 9 334 2 41 2 
0 1 34 1 262 1 
0 1 291 1 177 1 
0 6 47 1 49 1 170 1 284 2 9 1 54 1 34 3 312 2 291 3 252 1 331 3 334 1 186 1 41 1 21 1 337 1 62 1 
0 12 47 2 219 1 49 1 170 1 262 1 177 1 9 1 54 1 312 1 96 1 135 1 270 1 21 1 62 2 197 1 284 2 34 6 114 1 291 6 252 2 331 2 334 2 41 2 117 1 
0 6 47 1 205 1 173 1 9 1 34 3 312 1 291 3 79 1 331 2 62 1 
0 3 49 1 107 1 170 1 173 1 205 1 284 2 9 1 54 1 242 1 312 1 34 2 291 1 39 1 331 2 272 1 21 1 
143 1 0 10 47 2 49 1 170 1 284 2 205 2 173 2 9 2 54 1 312 3 34 5 291 5 79 1 331 5 21 1 117 1 62 2 
0 2 47 1 49 1 170 1 284 2 9 1 54 1 291 2 331 1 41 1 117 1 21 1 
0 4 47 1 49 1 170 1 284 2 9 1 54 1 312 1 34 2 291 2 252 1 331 2 334 1 41 1 117 1 21 1 62 1 
0 3 49 3 107 1 170 3 284 6 205 1 173 1 9 1 54 3 34 2 312 1 291 1 39 1 329 1 331 2 117 1 21 3 
0 12 47 2 49 3 170 3 262 1 173 1 177 1 9 2 54 3 312 2 186 1 21 3 272 1 62 2 197 1 143 1 284 6 205 1 242 1 34 6 291 6 292 1 79 1 329 1 331 4 117 1 
302 1 71 1 77 1 72 1 127 1 234 1 191 1 
302 1 71 1 72 1 127 1 306 1 238 1 210 1 35 1 139 1 77 1 234 1 191 1 
12 1 147 1 276 1 260 1 115 1 202 1 221 1 263 1 264 1 51 1 61 1 
147 1 276 1 71 1 72 1 202 1 237 1 51 1 264 1 133 1 267 1 313 1 12 1 247 1 77 2 115 1 58 1 234 2 61 1 
217 1 171 1 264 1 51 1 227 1 313 1 267 1 133 2 12 3 58 1 234 2 104 1 61 2 142 1 276 1 71 2 72 1 202 1 237 1 76 1 247 2 115 1 77 2 
1 1 217 1 171 1 307 1 264 2 51 2 227 1 267 1 133 2 12 3 58 1 234 2 104 1 61 2 142 1 276 1 71 2 72 1 202 1 237 1 76 1 247 2 115 2 77 2 
227 1 182 1 12 1 167 1 115 1 92 1 264 1 51 1 
227 1 12 1 167 1 115 1 92 1 323 1 264 1 51 1 
256 1 276 1 115 1 202 1 264 1 51 1 
147 1 276 1 303 1 202 2 51 1 264 1 95 1 133 1 325 1 12 1 115 1 101 1 61 1 
0 6 47 1 49 2 170 2 173 1 222 1 7 1 51 1 264 1 129 1 54 2 130 1 312 2 133 1 267 1 313 1 12 1 140 1 58 1 15 1 234 2 105 1 272 1 61 1 21 2 271 1 62 1 145 1 146 2 276 1 71 1 72 2 202 1 205 1 284 4 151 1 237 1 242 1 34 3 244 2 291 3 247 1 77 2 115 1 79 1 331 2 212 1 
167 1 20 1 
256 1 145 1 276 1 202 2 51 2 264 2 155 1 241 1 133 1 325 1 12 2 115 2 61 1 
145 1 147 1 276 1 260 1 202 1 263 1 307 1 51 4 264 4 12 1 115 4 335 1 61 1 
276 1 303 1 202 2 51 1 264 1 30 1 95 1 133 1 12 1 115 1 183 1 293 1 61 1 
147 1 276 1 115 1 269 1 202 1 59 1 206 1 264 1 51 1 43 1 
22 1 145 1 276 1 202 1 51 2 264 2 314 1 12 1 98 1 115 2 61 1 
145 1 147 1 276 2 260 1 202 2 263 1 51 4 264 5 8 1 239 1 227 1 12 3 98 1 115 5 335 1 61 2 
145 1 147 1 276 2 260 1 202 2 263 1 172 1 51 4 264 5 8 1 227 1 12 3 98 1 115 5 335 1 61 2 
1 1 147 1 276 1 71 1 72 1 202 1 237 1 51 1 264 1 133 1 267 1 12 1 247 1 77 2 115 1 58 1 234 2 61 1 
276 1 303 1 202 2 51 1 264 1 227 1 95 1 133 1 325 1 12 1 115 1 101 1 61 1 
181 1 326 1 72 1 280 1 296 1 
142 1 321 1 199 1 167 2 72 1 280 2 225 1 33 1 181 1 326 2 76 1 158 1 327 1 104 1 296 2 20 1 
106 1 69 1 71 1 280 1 265 1 181 1 326 1 77 1 234 1 
33 1 181 1 327 1 
44 1 2 1 68 3 200 1 80 1 16 1 224 1 310 1 85 1 196 1 286 3 
2 1 27 1 57 1 162 1 
2 1 224 1 
2 1 221 1 224 1 310 1 
44 1 2 1 68 1 80 1 224 1 310 1 286 1 
68 1 161 1 164 1 
44 1 2 1 68 3 224 1 310 1 286 3 10 1 56 1 80 1 187 1 196 1 85 2 
44 1 131 1 2 1 68 2 80 1 16 1 224 1 310 1 286 2 
44 1 226 1 2 1 68 1 57 1 269 1 80 1 206 1 309 1 196 1 286 1 
44 1 2 1 68 1 80 1 224 1 196 1 286 1 
44 1 68 1 80 1 224 2 310 1 196 1 286 1 
44 2 64 1 2 1 68 2 274 1 80 2 224 1 84 1 196 1 286 2 
44 1 2 2 68 3 200 1 224 1 310 1 286 3 246 1 57 1 80 1 16 2 196 1 162 1 
44 1 2 1 68 2 29 1 152 1 224 1 206 1 310 1 309 1 286 2 269 2 80 1 16 1 59 1 196 1 
44 2 299 1 2 2 68 4 224 1 310 1 286 4 131 1 57 1 80 2 16 2 196 1 162 1 
44 1 2 1 68 1 80 1 224 1 310 1 196 1 286 1 
44 1 2 3 68 4 27 1 224 2 310 2 286 4 10 1 57 1 80 1 16 2 187 1 85 1 162 1 
44 1 2 1 68 2 224 1 310 1 73 1 286 2 132 1 80 1 16 1 189 1 196 1 
44 1 2 1 121 1 68 3 224 1 310 1 286 3 10 2 80 1 187 1 196 1 85 2 
156 1 2 2 25 1 83 2 
44 1 68 1 160 1 80 1 196 1 286 1 
44 1 2 1 68 2 200 1 80 1 16 1 224 1 310 1 196 1 286 2 
279 1 
44 1 2 1 68 1 80 1 224 1 310 1 196 1 286 1 

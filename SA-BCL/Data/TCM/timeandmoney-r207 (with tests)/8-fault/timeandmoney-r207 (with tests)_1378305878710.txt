#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 244 55 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 244 55 178 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 187 166 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 2 245 1 194 1 221 1 195 1 222 4 1 1 76 2 130 2 80 5 82 1 256 1 83 1 313 1 271 1 30 2 317 1 298 1 108 9 60 3 214 2 319 1 320 9 278 6 140 2 43 1 16 1 285 2 
67 2 245 1 194 1 221 1 195 1 222 4 1 1 76 2 130 2 80 5 82 1 256 1 83 1 313 1 271 1 30 2 317 1 298 1 108 9 60 3 214 2 319 1 320 9 278 6 140 2 43 1 16 1 285 2 
67 2 245 1 194 1 221 1 195 1 222 5 1 1 76 2 130 2 80 6 82 1 256 1 83 1 313 1 271 1 30 2 317 1 298 1 108 10 60 4 214 2 319 1 320 10 278 7 140 2 43 1 16 1 285 2 
67 2 245 1 194 1 221 1 195 1 222 3 1 1 76 1 130 2 80 4 82 1 256 1 83 1 313 1 271 1 30 2 298 1 108 7 60 2 214 2 319 1 320 7 278 4 140 2 43 1 16 1 285 2 
271 1 67 1 245 1 194 1 222 2 30 1 317 1 298 1 108 4 60 1 214 1 320 4 278 3 140 1 76 2 130 1 80 3 43 1 
271 1 67 1 313 1 257 1 195 1 298 1 108 2 214 1 320 2 140 1 80 1 130 1 43 1 114 1 118 1 285 1 
271 1 67 2 222 1 298 1 108 3 60 1 214 2 320 3 278 1 80 2 43 1 83 1 285 1 
67 2 245 1 194 1 222 4 76 2 80 5 130 1 83 1 271 1 259 1 30 1 317 1 298 1 108 9 60 3 214 2 319 1 320 9 278 7 140 1 43 1 359 1 16 1 285 1 
67 2 245 1 194 1 222 4 76 2 80 5 130 1 83 1 271 1 259 1 30 1 317 1 298 1 108 9 60 3 214 2 319 1 320 9 278 7 140 1 43 1 359 1 16 1 285 1 
186 1 167 1 281 1 
119 2 167 1 20 1 
154 1 174 1 233 2 229 2 346 2 276 2 94 2 192 2 
288 1 226 1 46 1 127 1 197 1 94 2 228 1 95 1 173 1 252 2 305 1 97 1 174 1 229 3 255 2 99 1 100 1 151 1 354 2 202 1 258 1 296 1 102 2 154 1 233 3 274 2 276 2 318 1 185 1 236 1 110 1 111 1 346 2 85 1 159 1 325 1 192 2 
270 1 312 1 174 1 232 1 233 1 229 1 346 1 276 1 94 1 192 1 
203 1 270 1 133 1 167 1 54 1 233 1 262 1 94 1 265 1 215 1 281 1 229 1 303 1 28 1 
203 1 270 1 133 2 167 1 54 2 233 1 276 1 94 1 265 1 215 1 281 1 229 1 346 1 303 1 192 1 
133 1 54 1 136 1 132 1 153 1 
133 2 0 1 167 1 54 2 281 1 136 1 330 1 132 1 
133 1 54 1 132 1 
270 1 312 1 133 1 54 1 232 1 233 1 136 1 125 1 276 1 94 1 174 1 229 1 346 1 192 1 
167 1 
133 2 0 1 167 1 54 2 281 1 136 1 304 1 132 1 
133 5 0 1 167 1 54 5 208 2 136 2 107 2 264 1 350 1 253 1 279 1 281 1 77 1 79 1 190 2 161 1 142 1 152 1 132 2 
233 2 274 1 46 1 276 1 197 1 94 1 95 1 173 1 252 1 185 1 128 1 38 1 332 1 305 1 97 1 229 2 100 1 151 1 354 1 192 1 
186 1 154 1 
154 2 233 2 84 1 276 1 94 2 292 1 229 2 346 1 192 1 
35 1 128 1 131 1 
154 1 233 1 274 1 46 1 197 1 95 1 252 1 173 1 185 1 305 1 97 1 229 1 100 1 355 1 354 1 151 1 
332 1 154 1 233 3 229 3 346 1 276 3 94 3 192 3 
270 1 312 1 233 1 229 1 276 1 94 1 192 1 
270 1 292 1 233 1 229 1 346 1 276 1 84 1 94 1 192 1 
226 1 46 1 197 1 94 3 228 1 95 1 173 1 252 1 305 1 332 1 97 1 174 1 229 4 255 2 99 1 100 1 151 1 354 1 203 1 270 1 133 1 258 1 296 1 52 1 102 1 154 1 54 1 233 4 274 1 84 1 276 3 265 1 215 1 185 1 38 1 236 1 110 1 111 1 346 2 85 1 303 1 347 1 325 1 192 3 
332 1 154 1 233 2 229 2 262 1 334 1 276 1 94 2 192 1 
133 1 270 1 203 1 167 1 54 1 233 3 84 1 276 3 94 3 265 1 215 1 38 1 332 2 229 3 346 1 303 1 117 1 347 1 192 3 
233 2 84 1 276 2 94 2 332 1 128 1 229 2 131 1 346 1 192 2 
154 1 233 1 274 1 46 1 197 1 95 1 252 1 173 1 185 1 305 1 97 1 229 1 100 1 354 1 151 1 
154 1 135 1 233 1 274 1 46 1 197 1 95 1 252 1 173 1 185 1 97 1 229 1 321 1 354 1 151 1 
286 1 287 1 226 1 127 2 128 2 75 1 81 1 268 1 131 2 255 2 99 1 177 1 258 2 102 4 181 1 157 1 234 1 35 2 342 1 236 1 110 1 302 1 85 1 325 1 
270 1 203 1 233 1 229 1 276 1 94 1 323 1 192 1 
45 1 154 1 233 5 262 1 276 4 84 1 94 5 332 2 38 1 229 5 346 1 334 1 283 1 192 4 
270 1 312 1 233 2 229 2 276 2 94 2 323 1 192 2 
314 1 98 1 
314 1 98 1 
164 1 309 1 
164 1 309 1 
164 1 309 1 
73 1 314 1 98 1 
314 1 98 1 10 1 
164 1 314 2 98 2 309 1 225 1 5 1 
73 1 314 1 98 1 
73 1 314 1 98 1 
314 1 98 1 266 1 
314 1 98 1 266 1 
314 1 98 1 266 1 
244 1 314 1 98 1 55 1 51 1 337 1 
244 1 133 1 314 1 98 1 54 1 55 1 51 1 337 1 178 1 
140 1 30 1 130 1 
140 1 130 1 114 1 
343 1 139 1 30 2 56 1 130 3 114 1 
343 1 306 1 30 1 56 1 130 2 114 1 
343 2 30 1 56 1 130 2 114 1 
286 1 348 1 119 3 287 1 0 1 167 2 247 1 249 2 122 2 169 1 20 1 350 3 294 1 129 1 356 1 132 1 133 5 29 1 208 1 54 5 136 4 8 2 157 1 107 1 59 1 234 1 13 1 300 1 279 1 281 1 190 1 161 2 
286 3 163 5 348 2 119 9 287 3 0 1 247 4 167 5 249 6 224 1 20 3 227 1 71 1 350 8 129 2 77 1 132 6 153 5 133 9 29 1 54 9 208 2 155 1 136 7 8 6 157 3 107 2 234 3 280 1 300 3 279 1 357 1 281 1 190 2 161 6 
286 1 348 1 287 1 119 4 167 3 247 1 122 1 249 2 169 1 20 2 350 3 129 1 77 1 133 3 208 1 54 3 136 2 8 2 59 1 107 1 157 1 234 1 300 1 281 1 190 1 161 2 
286 2 348 1 119 7 287 2 167 4 247 2 249 4 122 2 224 1 169 1 20 3 350 5 129 1 77 1 133 4 208 1 54 4 155 1 136 3 8 4 107 1 59 1 157 2 234 2 300 2 281 1 357 1 190 1 161 4 
186 1 310 1 197 1 
216 1 197 1 
66 1 
197 1 151 1 
173 1 165 1 40 1 310 2 197 3 151 1 
173 1 197 1 151 1 
272 1 197 1 
258 1 287 1 102 3 207 1 32 1 338 1 181 1 22 1 211 1 127 2 34 1 187 1 4 1 41 1 160 1 177 2 
258 1 287 1 102 3 207 1 32 1 338 1 181 1 22 1 211 1 127 2 34 1 187 1 4 1 41 1 160 1 177 2 
258 1 287 1 102 3 207 1 290 1 32 1 338 1 181 1 22 1 211 1 127 2 34 1 187 1 4 1 41 1 160 1 177 2 
286 3 287 4 88 1 22 2 170 1 171 1 127 14 3 1 4 1 255 2 177 9 258 13 102 27 207 2 209 1 338 1 32 2 181 4 211 1 58 1 157 3 213 4 34 5 234 3 187 1 236 1 141 1 300 3 110 1 41 2 85 1 218 3 160 2 325 1 
287 1 22 1 127 3 4 1 255 4 177 3 258 2 102 5 207 1 209 1 32 1 181 2 211 1 12 1 34 1 187 1 236 2 110 2 41 1 85 2 160 1 358 1 325 2 
67 1 68 1 328 1 250 1 46 1 92 1 252 1 97 1 80 1 130 2 311 1 354 1 271 1 205 1 30 1 316 1 274 1 340 1 9 1 298 1 108 2 214 1 320 2 278 1 140 1 139 1 63 1 43 1 114 1 285 1 
67 1 68 1 327 1 328 1 250 1 46 1 92 1 50 1 252 1 97 1 80 1 130 2 311 1 354 1 30 1 316 1 274 1 340 1 9 1 298 1 108 3 214 1 320 3 278 2 140 1 139 1 43 1 114 1 65 1 285 1 
68 1 327 1 250 1 46 1 92 1 50 1 252 1 97 1 80 1 130 2 354 1 30 1 316 1 274 1 340 1 9 1 298 1 108 2 320 2 278 2 139 1 140 1 43 1 114 1 285 1 
101 1 67 1 206 1 68 2 316 2 274 1 46 1 156 1 250 2 108 1 197 1 49 1 214 1 320 1 24 1 252 1 185 1 97 1 175 1 65 1 151 1 354 1 285 2 
67 1 68 1 328 1 250 1 46 1 92 1 50 1 252 1 97 1 130 2 311 1 354 1 271 1 30 1 316 1 274 1 340 1 9 1 108 1 214 1 320 1 140 1 139 1 63 1 114 1 285 1 
116 1 
44 1 0 3 46 1 197 1 94 1 252 2 97 1 149 2 295 1 6 1 151 1 203 1 206 1 7 4 54 5 208 1 262 1 105 1 297 1 341 2 107 1 265 1 215 1 345 2 109 2 14 1 112 1 115 1 161 2 303 1 18 2 119 2 167 2 20 2 350 2 129 1 229 1 175 1 176 2 27 1 354 2 132 6 28 1 133 5 270 1 231 1 179 1 233 1 274 2 185 2 279 1 281 1 190 1 239 1 144 2 
270 1 203 1 133 3 0 1 7 2 54 3 179 1 233 1 262 1 297 1 304 1 94 1 265 1 215 1 229 1 112 1 27 1 239 1 303 1 132 2 144 1 28 1 
0 1 167 1 304 1 94 1 229 1 27 1 132 1 28 1 133 3 203 1 270 1 7 3 179 1 54 3 233 1 262 1 297 1 265 1 215 1 345 1 281 1 112 1 239 1 303 1 
0 1 167 1 304 1 94 1 229 1 149 1 27 1 28 1 132 2 133 3 203 1 270 1 7 3 179 1 54 3 233 1 262 1 297 1 265 1 215 1 345 1 281 1 112 1 239 1 303 1 144 1 
44 1 0 3 94 1 149 4 200 1 203 1 7 6 54 5 208 1 262 1 297 1 107 1 341 2 265 1 215 1 345 4 109 2 217 1 14 1 112 1 161 1 303 1 18 2 167 5 20 2 304 1 350 1 229 1 176 2 27 1 132 7 28 1 270 1 133 5 179 1 233 1 279 1 237 1 281 5 190 1 239 1 284 1 243 1 144 4 
44 1 0 2 94 1 149 2 203 1 7 4 54 4 208 1 262 1 297 1 107 1 341 2 265 1 215 1 345 2 109 2 14 1 112 1 161 1 115 1 303 1 18 2 119 2 167 2 20 2 350 1 229 1 176 2 27 1 28 1 132 4 270 1 133 4 179 1 233 1 279 1 281 1 190 1 239 1 144 2 
18 2 44 1 0 2 167 1 20 2 94 1 350 1 229 1 149 2 176 2 27 1 132 4 28 1 133 4 203 1 270 1 7 4 179 1 54 4 208 1 233 1 262 1 297 1 341 2 107 1 265 1 215 1 345 2 109 2 14 1 237 1 217 1 279 1 281 1 112 1 190 1 161 1 239 1 303 1 243 1 144 2 
18 2 44 1 0 2 167 1 20 2 94 1 350 1 229 1 149 2 176 2 27 1 132 4 28 1 133 4 203 1 270 1 7 4 179 1 54 4 208 1 233 1 262 1 297 1 341 2 107 1 265 1 215 1 345 2 109 2 14 1 237 1 217 1 279 1 281 1 112 1 190 1 161 1 239 1 303 1 243 1 144 2 
119 2 0 2 167 1 124 1 251 1 94 1 350 1 2 2 229 1 149 2 176 2 27 1 132 4 28 1 133 4 203 1 270 1 103 2 7 4 179 1 54 4 208 1 233 1 262 1 297 1 341 2 107 1 265 1 215 1 345 2 14 1 237 1 279 1 281 1 112 1 190 1 282 1 161 1 239 1 303 1 144 2 
18 2 44 1 0 2 167 1 20 2 94 1 350 1 229 1 149 3 176 2 200 1 27 1 28 1 132 5 133 4 203 1 270 1 7 5 208 1 179 1 54 4 233 1 262 1 297 1 341 2 107 1 265 1 215 1 345 3 109 2 14 1 237 1 279 1 217 1 281 1 112 1 190 1 161 1 239 1 303 1 243 1 144 3 
18 2 44 1 0 2 167 1 20 2 94 1 350 1 229 1 149 3 176 2 200 1 27 1 28 1 132 5 133 4 203 1 270 1 7 5 208 1 179 1 54 4 233 1 262 1 297 1 341 2 107 1 265 1 215 1 345 3 109 2 14 1 237 1 279 1 217 1 281 1 112 1 190 1 161 1 239 1 303 1 243 1 144 3 
0 2 94 1 2 2 149 2 203 1 7 4 103 2 54 4 208 1 262 1 297 1 107 1 341 2 265 1 215 1 345 2 14 1 112 1 161 1 115 1 303 1 119 2 167 1 124 1 350 1 229 1 176 2 27 1 28 1 132 4 270 1 133 4 179 1 233 1 279 1 281 1 190 1 239 1 144 2 
258 1 287 1 102 2 154 1 32 1 181 1 211 1 226 1 127 1 187 1 186 1 4 1 236 1 110 1 41 1 268 1 85 1 177 1 99 1 255 2 325 1 
286 1 287 2 288 1 121 1 171 1 226 2 127 8 331 1 3 1 128 11 131 4 353 1 177 2 255 4 99 1 258 6 102 14 154 1 181 1 275 1 33 1 157 2 213 3 34 1 234 1 35 11 236 2 300 2 110 2 111 1 85 2 218 3 325 2 
288 1 21 1 46 1 226 1 127 1 197 1 94 1 95 1 331 1 173 1 252 1 305 1 332 1 97 1 229 2 131 1 99 1 255 2 100 1 151 1 354 1 355 1 258 1 102 2 154 1 180 1 233 2 274 1 276 1 299 1 185 1 38 1 236 1 110 1 111 1 85 1 192 1 325 1 
286 2 287 3 288 1 46 2 94 1 197 2 50 1 95 2 331 1 252 3 4 1 332 1 97 2 255 6 99 3 100 2 151 2 258 8 296 2 102 16 154 1 211 1 157 2 300 2 110 3 111 1 17 1 223 2 226 3 127 8 173 2 305 2 128 6 229 3 308 1 131 6 177 7 354 3 134 2 233 3 32 1 181 3 274 3 276 1 34 4 234 2 35 6 185 1 187 1 38 1 235 2 236 3 41 1 42 1 85 3 143 2 325 3 192 1 
162 1 193 1 288 1 329 1 46 2 226 2 127 1 94 1 197 3 50 1 252 8 332 1 97 2 229 1 175 1 268 1 255 4 99 2 354 8 151 2 258 1 205 1 206 1 102 2 104 1 233 1 274 7 276 1 344 1 185 2 236 2 238 1 301 1 110 2 111 1 85 2 159 2 192 1 325 2 
286 1 287 1 226 1 127 1 94 1 331 1 128 1 307 1 229 1 131 1 177 1 255 2 99 1 258 2 102 3 233 1 181 1 84 1 276 1 157 1 234 1 35 1 236 1 300 1 110 1 346 1 85 1 192 1 325 1 
287 1 102 2 226 1 157 1 127 2 34 1 35 1 128 1 236 1 110 1 302 1 131 1 268 1 85 1 177 1 99 1 255 2 325 1 
286 1 258 2 102 2 181 1 226 1 234 1 35 1 342 1 128 1 236 1 110 1 131 1 268 1 85 1 177 1 99 1 255 2 325 1 
286 1 258 2 287 1 102 4 181 1 226 1 157 1 127 2 234 1 34 1 35 2 128 2 236 1 300 1 110 1 131 2 268 1 85 1 177 2 99 1 255 2 325 1 
287 1 102 2 329 1 226 1 157 1 127 2 34 1 35 1 128 1 236 1 110 1 302 1 131 1 85 1 177 1 99 1 255 2 325 1 
286 1 258 2 102 2 181 1 329 1 226 1 234 1 35 1 342 1 128 1 236 1 110 1 131 1 85 1 177 1 99 1 255 2 325 1 
286 1 258 2 287 1 102 4 181 1 329 1 226 1 157 1 127 2 234 1 34 1 35 2 128 2 236 1 300 1 110 1 131 2 85 1 177 2 99 1 255 2 325 1 
286 1 258 2 287 1 102 4 181 1 226 1 157 1 127 2 234 1 34 1 35 2 128 2 236 1 300 1 110 1 131 2 85 1 177 2 99 1 255 2 325 1 
288 1 46 1 226 1 127 1 197 1 95 1 173 1 252 1 305 1 97 1 229 1 99 1 255 2 100 1 151 1 354 1 296 1 258 1 102 2 154 1 233 1 274 1 185 1 236 1 110 1 111 1 85 1 325 1 
288 1 46 1 226 1 127 1 197 1 95 1 173 1 252 1 97 1 229 1 99 1 255 2 151 1 354 1 258 1 102 2 154 1 135 1 260 1 233 1 274 1 185 1 236 1 321 1 110 1 111 1 85 1 325 1 
286 1 258 2 287 1 102 4 181 1 226 1 157 1 127 2 234 1 34 1 35 2 331 1 128 2 236 1 300 1 110 1 131 2 85 1 177 2 99 1 255 2 325 1 
286 1 287 1 223 1 46 1 226 1 127 2 197 1 95 1 173 1 252 1 128 2 305 1 97 1 229 1 131 2 177 2 99 1 255 2 100 1 354 1 151 1 258 2 296 1 205 1 102 4 233 1 181 1 274 1 157 1 234 1 34 1 35 2 236 1 300 1 110 1 85 1 325 1 
286 1 287 1 349 1 226 1 127 2 94 1 331 1 128 1 229 1 131 1 177 1 255 2 99 1 258 1 102 3 233 1 84 1 276 1 157 1 234 1 34 1 35 1 236 1 300 1 110 1 346 1 85 1 192 1 325 1 
286 3 287 3 19 2 196 1 171 1 91 1 127 9 72 1 48 2 3 1 78 1 336 1 255 4 177 6 258 10 102 19 261 1 181 3 157 3 213 2 34 3 234 3 37 1 236 2 300 3 110 2 85 2 218 1 358 1 325 2 
286 2 287 3 19 1 196 2 171 2 91 1 127 14 70 1 48 4 78 1 352 1 177 4 336 1 255 6 258 12 102 26 209 2 181 2 106 1 157 3 213 2 184 1 34 2 234 2 37 2 236 3 300 3 110 3 85 3 218 2 64 1 358 1 86 1 325 3 
286 4 287 5 19 1 196 2 171 3 91 1 70 1 127 18 48 4 3 1 4 1 78 1 352 1 336 1 255 6 177 8 258 20 230 1 102 38 209 1 261 1 32 1 181 4 211 1 106 1 157 4 213 4 184 1 34 4 234 4 37 1 187 1 236 3 300 4 110 3 41 1 64 1 85 3 218 3 358 1 86 1 325 3 
286 3 287 5 19 1 196 2 171 3 91 1 70 1 127 18 48 4 3 1 4 1 78 1 352 1 336 1 255 8 177 7 258 17 230 1 102 35 209 2 261 1 32 1 181 4 211 1 106 1 157 4 213 4 184 1 34 3 234 3 37 1 187 1 236 4 300 4 110 4 41 1 64 1 85 4 218 3 358 1 86 1 325 4 
286 7 287 8 19 1 196 1 171 2 91 1 70 1 127 25 48 4 3 2 4 1 78 1 352 1 336 1 255 4 177 14 258 24 102 49 209 1 32 1 181 7 211 1 106 1 33 2 157 7 213 4 184 1 34 7 234 7 37 1 187 1 236 2 300 7 110 2 41 1 64 1 85 2 218 4 358 1 86 1 325 2 
288 1 126 1 46 1 226 1 127 1 197 1 93 1 94 2 331 1 252 2 97 1 229 2 99 1 255 2 151 1 354 2 258 1 53 1 102 2 104 1 233 2 274 2 182 1 158 1 236 1 238 1 110 1 111 1 85 1 159 2 325 1 
68 1 205 1 30 1 274 2 328 1 46 1 340 1 9 1 50 1 252 2 36 1 97 1 140 1 139 1 61 1 130 2 114 1 201 1 354 2 
68 1 30 1 274 1 328 1 340 1 9 1 46 1 50 1 252 1 97 1 140 1 139 1 61 1 15 1 130 2 114 1 354 1 
101 1 68 1 206 1 274 1 46 1 197 1 137 1 252 1 185 1 97 1 175 1 201 1 151 1 354 1 
68 1 30 1 274 1 328 1 340 1 9 1 46 1 50 1 252 1 36 1 97 1 140 1 139 1 61 1 130 2 114 1 201 1 354 1 
69 1 
350 1 186 1 167 1 253 1 281 1 161 1 152 1 
18 1 44 1 119 1 0 1 167 2 20 1 350 1 132 1 133 1 208 1 54 1 107 1 109 1 279 1 281 1 190 1 161 1 
286 2 287 2 0 3 145 2 249 6 46 3 47 1 146 2 291 2 197 10 252 3 97 4 253 1 199 1 254 2 151 3 152 1 205 1 208 4 54 5 105 1 8 6 107 4 157 2 212 2 265 2 216 3 300 2 161 8 119 12 165 1 167 8 168 2 20 6 172 1 350 9 173 3 74 1 129 2 351 1 310 2 269 2 354 3 132 5 133 5 272 2 274 3 234 2 185 1 279 4 281 2 190 4 143 2 324 2 
286 2 119 6 287 2 0 1 145 2 167 5 249 5 89 1 168 1 20 3 171 1 70 1 350 8 129 1 352 1 132 1 133 1 54 1 208 2 105 1 8 5 106 1 107 2 157 2 213 1 234 2 279 2 300 2 281 2 113 1 190 2 218 1 64 1 161 5 86 1 
286 1 133 1 287 1 145 1 166 1 54 1 208 1 32 1 107 1 350 2 187 1 279 1 41 1 190 1 161 2 243 1 
167 1 208 1 107 1 350 1 253 1 279 1 281 1 190 1 161 1 152 1 
286 2 287 2 119 10 145 2 167 5 249 5 168 1 20 5 8 5 157 2 234 2 350 5 300 2 161 5 143 1 
133 1 0 1 167 1 54 1 281 1 132 1 
0 2 46 1 197 1 172 1 350 2 252 4 148 1 97 1 129 2 351 2 77 1 175 1 295 1 151 1 354 4 132 4 133 3 206 1 231 1 208 2 54 3 274 4 105 2 107 2 183 1 185 2 279 1 190 2 161 2 
46 1 226 1 94 2 228 1 197 1 95 1 252 1 173 1 305 1 97 1 174 1 229 3 255 2 99 1 100 1 354 1 151 1 258 1 296 1 102 1 154 1 233 3 274 1 276 2 185 1 236 1 110 1 111 1 346 2 85 1 325 1 192 2 
119 4 167 4 249 2 208 1 20 2 8 2 105 1 107 1 350 1 279 1 129 1 281 2 160 1 190 1 161 2 
244 1 51 1 
244 1 51 1 
244 1 51 1 
244 1 51 1 
244 1 51 1 
244 1 51 1 
244 1 51 1 
244 1 51 1 
314 1 98 1 
287 1 258 2 102 4 209 1 32 1 181 1 211 1 127 2 34 1 187 1 4 1 236 2 110 2 41 1 85 2 177 2 255 4 325 2 
258 1 287 1 187 1 4 1 186 1 102 2 32 1 181 1 41 1 211 1 177 1 127 1 
286 1 258 2 287 1 326 1 102 4 181 1 157 1 127 2 234 1 34 1 236 1 300 1 110 1 85 1 177 2 255 2 325 1 
286 1 258 4 287 1 102 7 181 1 171 1 127 3 157 1 213 2 234 1 34 1 3 1 300 1 218 1 177 2 
286 2 287 3 121 1 127 9 3 1 4 1 177 8 255 4 150 1 258 10 102 19 209 2 32 2 181 4 211 1 157 2 33 1 213 2 34 4 234 2 187 1 236 2 300 2 110 2 41 2 218 2 85 2 325 2 
258 1 102 1 213 1 
102 1 218 1 127 1 
286 1 258 3 287 1 326 1 102 6 181 2 157 1 127 3 34 1 234 1 236 1 300 1 110 1 85 1 255 2 177 3 143 1 325 1 
286 2 287 2 171 1 70 1 127 6 352 1 255 2 177 2 258 6 102 12 181 1 106 1 157 2 213 1 34 1 234 2 236 1 300 2 110 1 218 1 85 1 64 1 358 1 86 1 325 1 
287 1 187 1 102 1 127 1 
258 2 102 3 209 1 32 1 181 1 211 1 127 1 34 1 4 1 236 1 110 1 41 1 85 1 177 2 150 1 255 2 325 1 
286 1 258 3 287 2 166 1 102 7 32 1 181 2 127 4 34 2 187 1 236 1 110 1 41 1 85 1 358 1 255 2 177 4 325 1 
287 1 102 2 157 1 127 2 34 1 236 1 110 1 85 1 358 1 255 2 177 1 325 1 
286 1 258 2 287 1 102 4 181 1 157 1 127 2 234 1 34 1 236 1 300 1 110 1 85 1 358 1 177 2 255 2 325 1 
258 2 102 3 209 1 261 1 32 1 181 1 127 1 34 1 236 3 110 3 41 1 85 3 358 1 150 1 255 6 177 2 325 3 
286 3 287 5 88 1 326 1 170 1 171 1 127 13 3 1 4 1 150 1 255 10 177 10 258 14 102 27 209 2 32 2 261 1 181 5 211 1 58 1 157 3 213 4 34 5 234 3 187 2 236 5 300 3 110 5 41 2 85 5 218 3 358 1 325 5 
287 1 171 1 70 1 127 2 4 1 255 2 177 1 258 2 102 4 32 1 181 1 211 1 213 1 187 1 236 1 110 1 41 1 218 1 85 1 358 1 325 1 
287 2 326 1 171 1 70 1 127 4 3 1 4 1 255 4 177 2 258 3 102 7 32 1 181 1 211 1 157 1 213 2 34 1 187 1 236 2 300 1 110 2 41 1 85 2 218 1 358 1 325 2 
286 2 287 3 326 1 171 1 70 1 127 7 4 1 352 1 255 6 177 3 258 8 102 15 209 1 32 1 181 2 211 1 106 1 157 2 213 1 34 1 234 2 187 1 236 3 300 2 110 3 41 1 218 1 85 3 64 1 358 1 86 1 325 3 
286 1 287 3 326 1 171 1 70 1 127 8 4 1 352 1 255 6 177 4 258 5 102 13 209 1 32 1 181 2 211 1 106 1 157 2 213 1 34 2 234 1 187 1 236 3 300 2 110 3 41 1 218 1 85 3 64 1 358 1 86 1 325 3 
287 1 171 1 70 1 127 2 4 1 255 2 177 1 258 2 102 4 32 1 181 1 211 1 213 1 187 1 236 1 110 1 41 1 218 1 85 1 358 1 325 1 
286 2 287 2 171 1 70 1 127 6 352 1 255 2 177 2 258 6 102 12 181 1 106 1 157 2 213 1 34 1 234 2 236 1 300 2 110 1 218 1 85 1 64 1 358 1 86 1 325 1 
286 1 287 3 326 1 171 1 70 1 127 8 4 1 352 1 255 8 177 4 258 6 102 14 209 2 32 1 181 2 211 1 106 1 157 2 213 1 34 2 234 1 187 1 236 4 300 2 110 4 41 1 85 4 218 1 64 1 358 1 86 1 325 4 
286 2 287 3 171 1 70 1 127 9 352 1 255 8 177 6 258 7 102 16 209 2 261 1 181 3 106 1 157 3 213 1 34 3 234 2 236 4 300 3 110 4 85 4 218 1 64 1 358 1 86 1 325 4 
258 2 287 1 102 4 32 2 181 2 211 2 127 2 34 2 4 1 187 1 41 2 177 4 
286 1 287 3 171 1 70 1 127 8 4 1 352 1 255 8 177 3 258 6 102 14 209 2 32 1 261 1 181 2 211 1 106 1 157 2 213 1 34 1 234 1 187 1 236 4 300 2 110 4 41 1 85 4 218 1 64 1 358 1 86 1 325 4 
154 1 233 1 229 1 262 1 334 1 11 1 94 1 
154 1 233 1 339 1 262 1 90 1 11 1 94 1 198 1 39 1 229 1 334 1 322 1 
252 1 185 1 206 1 186 1 97 1 175 1 274 1 46 1 197 1 151 1 354 1 
154 1 233 2 274 1 276 1 46 1 197 1 94 1 95 1 173 1 252 1 185 1 332 1 97 1 229 2 100 1 151 1 354 1 192 1 
272 1 270 1 203 1 154 1 233 2 274 1 276 2 46 1 197 3 94 2 95 1 215 1 173 2 252 1 332 1 97 1 229 2 351 1 100 1 151 2 354 1 324 1 192 1 
272 1 270 1 203 1 154 1 233 2 274 2 276 2 46 1 197 3 94 2 95 1 215 1 173 2 252 2 332 1 97 1 25 1 229 2 351 1 321 1 151 2 354 2 324 1 192 1 
167 1 46 1 197 4 252 3 173 1 97 1 25 1 351 1 335 1 310 1 354 3 151 1 132 1 133 2 272 1 204 1 54 2 274 3 265 1 185 1 216 1 281 1 324 1 
272 1 133 2 167 1 54 2 274 3 46 1 197 4 265 1 173 1 252 3 185 1 97 1 25 1 216 1 281 1 351 1 310 1 269 1 151 1 354 3 324 1 132 1 
252 1 193 1 97 1 274 1 46 1 354 1 
162 1 193 1 165 1 205 1 315 1 104 1 123 1 274 6 46 2 197 3 50 1 252 7 173 1 344 1 185 2 97 3 301 1 159 1 240 1 354 7 151 2 
287 1 223 1 46 1 226 2 127 1 197 1 93 1 94 1 95 1 331 1 173 1 252 1 4 1 332 1 305 1 97 1 229 2 177 1 99 2 255 4 100 1 151 1 354 1 258 1 296 1 205 1 102 2 154 1 233 2 32 1 181 1 274 1 211 1 276 1 187 1 235 1 236 2 110 2 41 1 85 2 192 1 325 2 
0 1 167 1 146 1 197 2 350 1 172 1 252 1 253 1 254 1 310 1 269 1 354 1 152 1 132 2 133 3 208 2 54 3 136 1 274 1 107 2 212 1 265 1 185 1 279 2 216 1 281 1 190 2 161 1 
193 1 165 1 205 1 274 2 46 1 197 2 252 2 173 1 74 1 97 2 310 1 354 2 151 1 
205 1 206 1 274 4 46 1 197 1 252 4 185 1 97 1 25 1 62 1 175 1 354 4 151 1 
273 1 315 1 123 1 274 2 46 1 197 1 252 2 173 1 97 2 351 1 42 1 241 1 354 2 151 1 
252 1 185 1 97 1 140 1 130 1 274 1 114 1 46 1 9 1 354 1 
205 1 104 1 274 2 46 1 197 1 50 1 252 2 158 1 97 1 354 2 151 1 
206 1 205 1 104 1 274 4 46 2 197 3 252 5 185 1 344 1 97 2 301 1 62 1 351 1 175 1 354 5 151 2 
206 1 205 1 246 1 104 1 274 4 46 2 197 3 252 5 185 1 97 2 301 1 62 1 351 1 175 1 354 5 151 2 
154 1 233 2 274 1 276 1 46 1 197 1 94 1 95 1 173 1 252 1 185 1 332 1 97 1 229 2 321 1 151 1 354 1 192 1 
165 1 315 1 123 1 274 1 46 1 197 1 252 1 173 1 97 2 351 1 240 1 354 1 151 1 
53 1 233 1 263 1 126 1 23 1 182 1 94 1 333 1 229 1 
333 1 188 1 267 1 
333 1 154 1 263 1 23 1 277 1 
270 1 203 1 133 2 167 1 154 1 54 2 136 1 263 2 23 2 277 2 265 1 215 1 333 1 188 1 281 1 267 1 303 1 219 1 347 1 
186 1 80 1 43 1 298 1 
320 1 67 1 80 1 43 1 298 1 108 1 214 1 
320 1 250 1 285 1 
271 1 67 1 195 2 108 3 298 1 214 1 320 3 80 1 43 1 191 1 87 1 220 1 
320 2 67 1 278 1 76 1 80 1 43 1 298 1 108 2 214 1 
271 1 67 1 194 1 222 1 30 1 108 1 214 1 320 1 140 1 80 1 130 1 
320 1 67 1 271 1 80 1 43 1 108 1 214 1 
320 1 67 1 271 1 43 2 298 1 108 1 214 1 
271 1 67 2 120 1 57 1 108 2 214 2 320 2 293 1 80 1 43 1 
271 1 67 1 222 1 298 1 108 3 60 1 214 1 319 1 320 3 278 2 80 2 43 1 16 1 
271 1 67 1 30 1 298 1 108 2 214 1 320 2 278 1 139 1 140 1 80 1 130 2 43 1 114 1 242 1 
271 1 67 2 222 1 317 1 298 1 108 4 60 1 214 2 320 4 278 2 76 1 80 2 43 1 
320 1 67 1 271 1 80 1 43 1 298 1 108 1 214 1 
67 1 195 1 222 1 298 2 108 4 60 1 214 1 320 4 278 2 80 3 43 2 26 1 191 1 87 1 
271 1 67 1 248 1 108 2 298 1 214 1 320 2 278 1 96 1 80 1 43 1 359 1 
271 1 67 1 195 2 210 1 108 3 298 1 214 1 320 3 80 1 43 1 191 2 87 1 
189 2 289 1 31 1 80 2 
320 1 67 1 271 1 108 1 147 1 214 1 
320 2 67 1 271 1 278 1 80 1 43 1 298 1 108 2 16 1 214 1 
138 1 
320 1 67 1 271 1 80 1 43 1 298 1 108 1 214 1 
320 3 67 1 271 1 278 1 195 1 80 1 43 1 298 1 108 3 16 1 214 1 
222 1 80 1 26 1 60 1 
80 1 43 1 

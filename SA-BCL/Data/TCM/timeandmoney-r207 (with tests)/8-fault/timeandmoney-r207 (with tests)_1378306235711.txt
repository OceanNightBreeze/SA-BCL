#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 106 (6,194) (6,194) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 106 (6,194) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 106 (6,194) (6,194) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 106 (6,194) (6,194) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 106 (6,194) (6,194) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 106 (6,194) (6,194) 142 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
337 2 127 2 352 1 28 2 342 1 119 1 121 3 312 1 161 3 325 1 359 1 76 1 290 1 
127 2 352 1 28 5 271 1 229 1 181 2 307 1 309 1 35 1 312 1 161 9 359 2 290 6 209 1 319 1 362 2 337 2 116 2 342 4 118 2 119 1 219 1 121 9 325 1 76 3 146 1 224 1 78 1 
127 2 352 1 28 5 271 1 229 1 181 2 307 1 309 1 35 1 312 1 161 9 359 2 290 6 209 1 319 1 362 2 337 2 116 2 342 4 118 2 119 1 219 1 121 9 325 1 76 3 146 1 224 1 78 1 
127 2 352 1 28 6 271 1 229 1 181 2 307 1 309 1 35 1 312 1 161 10 359 2 290 7 209 1 319 1 362 2 337 2 116 2 342 5 118 2 119 1 219 1 121 10 325 1 76 4 146 1 224 1 78 1 
127 2 352 1 28 4 271 1 229 1 181 2 309 1 35 1 312 1 161 7 359 2 290 4 209 1 319 1 362 2 337 2 116 2 342 3 118 1 119 1 219 1 121 7 325 1 76 2 146 1 224 1 78 1 
337 1 127 1 28 3 116 1 342 2 181 1 307 1 118 2 119 1 219 1 121 4 35 1 312 1 161 4 76 1 325 1 290 3 362 1 
337 1 213 1 127 1 28 1 116 1 119 1 121 2 312 1 161 2 325 1 359 1 146 1 361 1 78 1 149 1 362 1 
127 2 352 1 2 1 28 5 271 1 181 1 307 1 309 1 35 1 312 1 161 9 359 1 290 7 362 1 337 2 342 4 116 1 118 2 119 1 219 1 121 9 76 3 325 1 284 1 
127 2 352 1 2 1 28 5 271 1 181 1 307 1 309 1 35 1 312 1 161 9 359 1 290 7 362 1 337 2 342 4 116 1 118 2 119 1 219 1 121 9 76 3 325 1 284 1 
262 1 112 1 96 1 373 1 258 1 287 1 60 1 71 1 61 1 6 1 145 1 106 1 194 1 
43 1 
23 1 226 1 112 2 43 1 293 1 203 1 258 2 287 1 
188 1 23 1 112 5 304 1 293 2 203 1 287 2 243 1 216 2 86 2 289 1 143 1 43 1 10 1 234 1 258 5 326 1 221 2 348 1 
23 1 43 1 260 1 
7 1 43 1 186 2 
262 2 96 2 313 1 373 2 60 2 71 2 61 1 145 2 
22 1 303 1 154 1 248 1 269 2 156 1 157 1 158 2 178 1 354 1 207 1 32 1 34 2 132 1 313 1 333 1 133 1 276 1 60 2 61 1 110 1 96 2 114 1 367 1 140 2 71 3 371 1 196 1 262 3 373 2 145 2 45 2 125 1 286 1 47 1 301 1 21 1 
262 1 96 1 373 1 60 1 71 1 61 1 6 1 145 1 106 1 
23 1 112 1 96 1 97 1 292 1 168 1 71 1 262 1 33 1 43 1 75 1 184 1 258 1 285 1 
23 1 112 2 96 1 97 1 292 1 168 1 71 1 262 1 33 1 43 1 373 1 258 2 60 1 145 1 285 1 
112 1 220 1 293 1 258 1 287 1 
23 1 138 1 112 2 43 1 293 1 203 1 258 2 287 1 
112 1 293 1 258 1 
96 2 3 1 71 2 262 2 275 1 313 2 373 1 60 1 145 1 
198 1 298 1 46 1 
154 1 248 1 303 1 156 1 158 1 167 1 367 1 140 1 71 1 262 1 34 1 313 1 276 1 286 1 301 1 21 1 
262 3 96 3 115 1 313 1 373 3 60 3 71 3 145 1 
262 1 96 1 373 1 60 1 71 1 106 1 
262 1 96 1 275 1 3 1 373 1 60 1 71 1 145 1 285 1 
22 1 303 1 248 1 154 1 269 1 156 1 158 1 178 1 159 1 354 1 207 1 32 1 33 1 232 1 34 1 275 1 132 1 313 1 276 1 133 1 258 1 60 3 61 1 112 1 96 3 114 1 115 1 97 1 292 1 367 1 168 1 140 1 71 4 371 1 262 4 373 3 145 2 285 1 45 2 125 1 286 1 301 1 247 1 21 1 
262 2 96 2 115 1 313 1 184 1 373 1 60 1 71 2 236 1 
112 1 96 3 115 2 97 1 292 1 159 1 168 1 71 3 33 1 262 3 232 1 275 1 43 1 373 3 258 1 60 3 145 1 200 1 285 1 
96 2 115 1 71 2 262 2 275 1 298 1 373 2 60 2 145 1 46 1 
154 1 248 1 303 1 156 1 158 1 367 1 140 1 71 1 262 1 34 1 313 1 276 1 286 1 301 1 21 1 
154 1 248 1 303 1 156 1 158 1 367 1 140 1 71 1 83 1 262 1 263 1 34 1 313 1 286 1 21 1 
95 1 22 1 269 4 114 1 178 1 323 1 193 1 308 1 371 1 207 1 56 1 198 2 199 1 208 1 132 2 144 1 298 2 327 1 90 1 237 1 125 1 45 2 46 2 47 2 
111 1 262 1 96 1 292 1 373 1 60 1 71 1 285 1 
303 1 248 1 154 1 96 1 156 1 115 1 158 1 367 1 140 1 71 2 262 2 232 1 34 1 276 1 373 1 60 1 286 1 46 1 301 1 21 1 
313 1 260 1 
96 5 115 2 340 1 71 5 100 1 262 5 232 1 275 1 313 1 184 1 373 4 60 4 145 1 236 1 
262 1 96 1 373 1 60 1 71 1 106 1 
189 1 222 1 55 1 
166 1 122 1 189 2 4 1 261 1 55 2 
189 1 5 1 55 1 
189 1 5 1 55 1 
189 1 205 1 55 1 
189 1 205 1 55 1 
189 1 205 1 55 1 
189 1 55 1 
189 1 55 1 
166 1 4 1 
166 1 4 1 
166 1 4 1 
189 1 5 1 55 1 
112 2 155 1 70 2 189 2 81 2 191 1 261 1 55 2 31 3 255 1 74 1 43 1 257 1 258 2 136 1 299 2 19 2 238 2 240 1 
1 1 81 1 31 1 55 1 313 1 258 1 60 2 238 1 240 1 94 1 112 1 96 2 189 1 71 2 195 1 262 2 373 2 265 1 283 1 347 1 222 1 299 1 19 1 350 1 
366 2 295 1 181 1 149 1 362 2 
116 1 181 1 362 1 
116 1 149 1 362 1 
73 1 366 1 295 1 181 2 149 1 362 3 
366 1 295 1 181 1 201 1 149 1 362 2 
23 1 112 4 293 1 287 3 203 1 254 1 311 1 43 1 258 4 210 1 300 1 349 1 
23 1 112 4 293 2 203 1 287 3 15 1 220 1 43 1 258 4 300 1 109 1 349 1 150 1 
23 1 353 2 287 2 308 1 254 1 86 1 7 2 311 1 234 1 258 3 210 1 186 4 112 3 323 1 324 1 215 1 216 1 143 3 144 1 43 3 327 1 326 2 221 1 349 1 350 1 79 2 
23 1 249 1 353 4 287 3 308 2 86 1 254 1 7 3 311 1 234 1 258 4 210 2 186 7 112 4 139 1 69 1 323 2 324 1 215 2 216 1 143 5 144 2 43 4 327 2 326 4 221 1 349 1 79 4 350 2 
330 1 
303 1 286 1 
303 1 367 1 202 2 27 1 128 1 330 1 286 2 
202 1 286 1 260 1 
286 1 163 1 
303 1 367 1 286 1 
162 1 286 1 
95 3 269 7 165 1 72 1 117 1 131 1 132 3 372 1 144 1 358 2 327 1 237 2 135 1 185 1 147 1 148 1 376 1 47 4 
269 31 305 1 178 1 329 1 105 1 308 3 207 1 131 1 132 15 358 3 135 2 237 5 185 1 239 1 91 1 95 10 165 1 114 1 323 3 368 3 215 3 72 1 117 5 371 1 372 2 144 4 327 4 175 1 45 2 244 4 20 1 148 2 47 16 376 2 
95 4 269 9 114 2 178 2 294 1 40 1 105 1 72 1 117 1 371 2 207 2 131 1 372 1 132 4 144 1 358 2 327 1 135 1 237 3 185 1 45 4 148 1 376 1 47 5 
95 3 269 7 165 1 72 1 117 1 131 1 132 3 372 1 144 1 358 2 327 1 237 2 135 1 185 1 148 1 376 1 47 4 
95 3 269 7 165 1 72 1 117 1 131 1 132 3 372 1 144 1 358 2 327 1 237 2 135 1 185 1 148 1 376 1 47 4 
154 1 303 1 127 1 156 1 158 1 253 1 331 2 34 1 161 1 359 2 317 2 212 2 241 1 337 1 67 1 339 1 321 1 140 1 121 1 345 1 176 1 286 1 21 1 
127 1 156 1 158 1 25 1 181 1 331 1 183 1 34 1 161 1 359 1 235 1 37 1 317 1 212 1 362 2 337 1 140 1 116 1 197 1 73 1 121 1 325 1 282 1 149 1 375 1 21 1 
127 1 156 1 158 1 25 1 52 1 28 1 181 1 331 1 183 1 34 1 312 1 161 2 290 1 359 1 235 1 37 1 317 1 212 1 362 2 337 1 140 1 116 1 119 1 73 1 121 2 325 1 282 1 149 1 375 1 21 1 
127 1 156 1 158 1 25 1 28 1 181 1 331 1 183 1 231 1 34 1 312 1 161 3 359 1 290 2 235 1 37 1 317 1 212 1 362 2 337 1 67 1 140 1 116 1 197 1 119 1 73 1 121 3 282 1 149 1 21 1 
156 1 158 1 25 1 28 1 331 1 181 1 183 1 231 1 34 1 312 1 161 2 359 1 290 2 235 1 317 1 212 1 362 2 140 1 116 1 197 1 119 1 73 1 121 2 149 1 21 1 
334 1 
0 1 154 2 303 2 156 2 158 2 203 1 253 1 182 1 86 1 34 2 258 2 59 1 112 2 339 1 367 1 293 2 324 1 140 2 216 1 243 1 143 1 77 1 326 1 221 1 266 1 286 2 374 1 225 1 21 3 
226 1 112 2 126 1 38 1 293 2 203 1 129 1 344 1 16 1 258 2 177 1 
126 1 112 1 38 1 16 1 258 1 129 1 360 1 101 1 177 1 
226 1 112 2 126 1 38 1 293 2 203 1 129 1 101 1 343 1 344 1 16 1 258 2 360 1 177 1 
23 1 126 1 226 1 51 1 228 1 203 3 129 1 6 1 53 2 180 1 204 2 106 1 86 1 7 2 8 2 310 1 258 4 60 1 61 1 360 2 92 2 112 4 66 1 96 1 38 1 364 1 293 7 71 1 243 1 216 1 194 1 101 2 296 1 343 4 344 4 262 1 16 1 143 1 373 1 43 1 326 1 221 1 145 1 177 1 
23 1 126 1 203 2 129 1 53 2 204 2 86 1 7 2 8 2 259 1 258 3 360 2 186 2 92 2 112 3 66 1 38 1 293 4 216 1 243 1 101 2 296 1 343 2 344 2 16 1 143 1 43 2 326 1 221 1 177 1 
23 1 126 1 228 1 203 2 129 1 180 1 53 2 204 2 86 1 7 2 8 2 258 3 360 2 92 2 112 3 66 1 38 1 364 1 293 4 216 1 243 1 101 2 296 1 343 2 344 2 16 1 143 1 43 1 326 1 221 1 177 1 
23 1 126 1 228 1 203 2 129 1 180 1 53 2 204 2 86 1 7 2 8 2 258 3 360 2 92 2 112 3 66 1 38 1 364 1 293 4 216 1 243 1 101 2 296 1 343 2 344 2 16 1 143 1 43 1 326 1 221 1 177 1 
153 1 23 1 126 1 203 2 251 2 129 1 180 1 53 2 230 1 86 1 160 1 258 3 360 2 186 2 92 2 112 3 38 1 293 4 99 2 216 1 243 1 101 2 296 1 343 2 344 2 16 1 143 1 43 1 326 1 221 1 177 1 
23 1 126 1 228 1 203 2 129 1 6 1 53 2 180 1 204 2 106 1 86 1 7 2 8 2 310 1 258 3 60 1 61 1 360 3 92 2 112 3 66 1 96 1 38 1 364 1 293 5 71 1 243 1 216 1 194 1 296 1 101 3 343 3 344 3 262 1 16 1 143 1 373 1 43 1 326 1 221 1 145 1 177 1 
23 1 126 1 228 1 203 2 129 1 6 1 53 2 180 1 204 2 106 1 86 1 7 2 8 2 310 1 258 3 60 1 61 1 360 3 92 2 112 3 66 1 96 1 38 1 364 1 293 5 71 1 243 1 216 1 194 1 296 1 101 3 343 3 344 3 262 1 16 1 143 1 373 1 43 1 326 1 221 1 145 1 177 1 
23 1 126 1 203 2 129 1 251 2 53 2 86 1 160 1 259 1 258 3 360 2 186 2 92 2 112 3 38 1 293 4 99 2 216 1 243 1 101 2 296 1 343 2 344 2 16 1 143 1 43 1 326 1 221 1 177 1 
154 2 22 2 303 2 156 2 269 2 158 8 157 2 178 2 52 1 84 1 85 1 253 1 207 2 32 1 34 8 208 1 132 1 60 1 11 1 63 1 316 1 96 1 339 1 113 1 115 1 114 2 140 7 369 1 71 1 371 2 196 1 197 1 262 1 373 1 286 3 45 4 125 2 47 1 21 2 
22 1 269 3 178 1 308 1 207 1 275 1 132 2 60 1 237 1 95 1 96 1 114 1 323 1 215 1 71 1 370 1 371 1 198 1 262 1 346 1 144 1 298 1 373 1 327 1 145 1 45 2 125 1 46 1 47 1 
95 1 22 1 269 2 114 1 178 1 117 1 371 1 308 1 207 1 198 1 208 1 199 1 144 1 298 1 125 1 45 2 46 1 47 2 
95 1 22 1 269 2 114 1 178 1 323 1 371 1 207 1 56 1 198 1 208 1 132 2 298 1 327 1 237 1 125 1 45 2 46 1 
95 2 22 1 269 4 114 1 323 1 178 1 215 1 117 1 371 1 308 1 207 1 198 2 208 1 132 2 144 1 298 2 327 1 237 1 125 1 45 2 46 2 47 2 
95 1 22 1 269 2 114 1 178 1 117 1 371 1 308 1 207 1 198 1 199 1 144 1 298 1 316 1 125 1 45 2 46 1 47 2 
95 1 22 1 269 2 114 1 178 1 323 1 371 1 207 1 56 1 198 1 132 2 298 1 327 1 237 1 316 1 125 1 45 2 46 1 
95 2 22 1 269 4 114 1 323 1 178 1 215 1 117 1 371 1 308 1 207 1 198 2 132 2 144 1 298 2 327 1 237 1 316 1 125 1 45 2 46 2 47 2 
95 2 22 1 269 4 114 1 323 1 178 1 215 1 117 1 371 1 308 1 207 1 198 2 132 2 144 1 298 2 327 1 237 1 125 1 45 2 46 2 47 2 
303 1 248 1 154 1 22 1 269 2 156 1 158 1 178 1 207 1 32 1 34 1 132 1 313 1 276 1 133 1 114 1 367 1 140 1 71 1 371 1 196 1 262 1 286 1 125 1 45 2 47 1 301 1 21 1 
303 1 248 1 268 1 154 1 22 1 269 2 156 1 158 1 178 1 83 1 207 1 32 1 34 1 132 1 313 1 114 1 367 1 140 1 71 1 371 1 196 1 263 1 262 1 286 1 125 1 45 2 47 1 21 1 
95 2 22 1 269 4 114 1 323 1 178 1 215 1 370 1 117 1 371 1 308 1 207 1 198 2 132 2 144 1 298 2 327 1 237 1 125 1 45 2 46 2 47 2 
248 1 303 1 22 1 269 4 156 1 158 1 178 1 52 1 308 1 207 1 34 1 132 2 276 1 133 1 237 1 95 2 114 1 323 1 367 1 14 1 140 1 215 1 71 1 117 1 371 1 198 2 262 1 144 1 298 2 327 1 286 1 125 1 45 2 46 2 47 2 301 1 21 1 
22 1 269 3 178 1 288 1 308 1 207 1 275 1 132 1 60 1 95 1 96 1 114 1 323 1 215 1 71 1 370 1 117 1 371 1 262 1 198 1 144 1 373 1 298 1 327 1 145 1 45 2 125 1 46 1 47 2 
22 1 269 6 178 1 207 1 131 1 208 1 132 3 313 2 358 1 135 1 237 2 185 1 260 1 95 2 114 1 72 1 371 1 198 1 372 1 144 1 298 1 327 1 45 2 125 1 46 1 47 3 
22 2 269 14 178 2 329 1 308 2 207 2 32 1 132 6 313 1 134 1 237 1 239 1 95 2 114 2 323 1 368 3 215 2 41 1 370 1 117 1 371 2 196 1 172 1 198 11 174 1 144 2 298 4 327 1 244 3 45 4 125 1 46 11 47 8 
303 1 248 1 154 1 22 1 156 1 269 2 158 1 178 1 252 1 207 1 32 1 57 1 34 1 232 1 132 1 313 1 276 1 60 1 96 1 115 1 114 1 365 1 367 1 167 1 140 1 71 2 370 1 371 1 196 1 262 2 298 1 373 1 286 1 125 1 45 2 301 1 47 1 21 1 
154 1 248 2 156 2 158 3 207 3 256 1 60 1 114 3 115 1 14 2 215 2 71 3 170 1 72 1 117 4 262 3 298 7 125 3 301 2 21 2 22 3 303 2 269 20 178 3 26 2 308 2 32 1 131 1 357 1 34 3 232 1 132 10 313 2 133 2 276 2 358 1 135 1 237 4 185 1 95 8 96 1 98 2 367 2 323 2 140 3 370 1 371 3 196 1 197 1 198 7 372 1 281 2 144 3 373 1 327 3 45 6 286 2 46 7 47 10 
269 19 178 2 329 1 179 2 308 3 207 2 132 10 335 1 62 1 237 3 318 1 336 1 239 1 95 6 68 1 114 2 39 1 323 3 368 1 40 1 215 3 192 1 117 3 371 2 279 2 144 3 327 3 244 2 45 4 47 9 
80 1 49 1 269 26 178 3 329 2 105 2 179 4 308 3 207 3 132 12 335 2 62 2 237 2 64 1 336 1 187 1 95 4 114 3 39 1 322 1 323 2 368 2 40 1 215 3 192 1 117 2 371 3 279 1 144 3 327 2 18 1 45 6 244 2 47 14 
80 1 49 1 269 41 178 3 329 3 105 1 179 4 308 4 207 3 131 1 132 21 335 1 358 1 62 2 135 1 237 4 185 1 64 1 318 1 187 1 336 1 239 1 95 8 114 3 39 1 322 1 323 4 368 3 40 1 215 4 192 1 72 1 117 4 371 3 279 1 372 1 144 5 264 1 327 5 18 1 244 4 45 6 47 20 
80 1 49 1 269 38 178 4 329 3 105 2 179 4 308 4 207 4 131 1 132 18 335 1 358 1 62 2 135 1 237 4 185 1 64 1 318 1 187 1 336 1 239 1 95 7 114 4 39 1 322 1 323 3 368 3 40 1 215 4 192 1 72 1 117 3 371 4 279 1 372 1 144 5 264 1 327 4 18 1 244 4 45 8 47 20 
80 1 49 1 269 52 178 2 329 2 105 1 179 4 308 7 207 2 131 1 132 25 335 1 358 1 134 2 62 1 135 1 237 7 185 1 64 1 187 1 336 1 239 2 95 14 114 2 39 1 322 1 323 7 368 4 40 1 215 7 192 1 72 1 117 7 371 2 279 1 372 1 144 8 327 8 18 1 244 4 45 4 47 27 
291 1 74 1 257 1 81 1 189 1 299 1 261 1 238 1 19 1 55 1 
265 1 222 1 
227 1 82 1 81 1 189 1 299 1 238 1 19 1 30 1 55 1 
112 1 155 1 70 1 189 1 81 1 191 1 261 1 55 1 31 2 74 1 43 1 257 1 258 1 136 1 299 1 19 1 238 1 240 1 
112 1 155 1 70 1 189 1 81 1 191 1 261 1 55 1 31 2 74 1 43 1 257 1 258 1 136 1 299 1 19 1 238 1 240 1 
112 1 155 1 70 1 189 1 81 1 191 1 261 1 55 1 31 2 74 1 43 1 257 1 258 1 136 1 299 1 19 1 238 1 240 1 
122 1 5 1 356 1 
122 1 5 1 356 1 
173 1 205 1 
173 1 122 1 205 1 
94 1 1 1 
1 1 250 1 287 1 81 1 55 1 31 1 313 1 258 1 60 2 238 1 94 1 112 1 96 2 70 1 189 1 71 2 191 1 195 1 262 2 373 2 265 1 283 1 347 1 222 1 299 1 19 1 350 1 
5 1 356 1 
173 1 122 1 205 1 
303 1 22 1 302 1 156 1 269 2 158 2 157 2 178 1 85 1 207 1 32 1 34 2 132 1 96 2 114 1 140 2 369 1 71 2 370 1 371 1 196 1 262 2 141 1 123 1 124 1 286 1 125 1 45 2 103 1 47 1 21 1 
303 1 154 1 339 1 156 1 320 1 158 1 242 1 140 1 253 1 34 1 317 1 286 1 21 1 241 1 
320 1 156 1 158 1 270 1 140 1 116 1 181 1 183 1 197 1 73 1 34 1 235 1 88 1 282 1 317 1 149 1 362 2 21 1 
156 1 320 1 158 2 270 1 52 1 140 2 116 1 181 1 183 1 197 1 73 1 34 2 235 1 88 1 282 1 317 1 149 1 362 2 21 1 
363 1 156 1 158 1 140 1 116 1 181 1 183 1 197 1 73 1 34 1 235 1 88 1 282 1 317 1 149 1 362 2 21 1 
152 1 
23 1 243 1 216 1 86 1 289 1 143 1 10 1 43 1 326 1 221 1 
338 1 98 1 353 5 323 2 215 2 308 2 7 5 143 5 36 2 144 2 43 5 326 5 327 2 186 10 79 5 
23 1 112 1 43 1 293 1 258 1 203 1 
0 1 303 2 154 2 156 2 158 2 203 1 253 1 182 1 86 1 130 1 34 2 258 1 59 1 112 1 339 1 367 1 293 2 324 1 140 2 216 1 243 1 143 1 77 1 326 1 221 1 266 1 286 2 374 1 225 1 21 3 
23 1 289 1 143 1 43 1 10 1 326 1 260 1 
23 1 203 1 204 1 86 1 7 1 8 1 258 1 186 1 66 1 112 1 293 1 216 1 243 1 143 1 43 2 326 1 221 1 
154 1 156 3 158 3 202 2 52 1 203 3 206 1 54 1 7 6 289 1 10 1 258 5 162 2 163 3 211 2 112 5 338 2 293 5 215 2 216 4 218 2 297 1 120 1 77 1 17 2 221 4 79 6 21 4 303 3 23 2 353 6 128 1 272 2 308 2 86 4 130 1 33 2 34 3 36 2 186 12 98 2 277 2 367 3 323 2 324 2 140 3 243 4 280 2 143 9 144 2 43 8 326 8 327 2 286 10 
80 1 23 2 353 5 203 1 329 1 308 2 86 2 7 3 36 2 258 1 186 6 64 1 164 1 187 1 338 1 112 1 322 1 293 1 323 2 324 1 368 1 215 2 216 2 243 2 102 1 143 8 144 2 43 5 77 1 326 5 327 2 221 2 18 1 244 1 79 5 
228 1 6 1 106 1 86 1 36 2 258 1 60 1 61 1 135 1 112 1 96 1 71 1 216 1 243 1 72 1 194 1 262 1 372 1 142 1 143 2 144 1 373 1 326 1 327 1 221 1 145 1 
154 1 248 1 303 1 22 1 269 1 156 1 158 1 178 1 354 1 207 1 32 1 34 1 132 1 313 1 133 1 276 1 60 2 61 1 96 2 114 1 367 1 140 1 71 3 371 1 262 3 373 2 145 2 45 2 286 1 125 1 301 1 21 1 
23 2 353 2 324 1 243 1 216 1 86 1 7 2 143 1 358 1 43 4 77 1 326 2 221 1 186 4 79 2 
94 1 74 1 81 1 315 1 238 1 
274 1 81 1 238 1 
274 1 81 1 238 1 
81 1 169 1 238 1 
81 1 169 1 238 1 
81 1 169 1 238 1 
81 1 238 1 
189 1 55 1 
274 1 81 1 238 1 
95 5 269 10 114 1 178 1 40 1 117 2 72 1 371 1 207 1 142 1 372 2 132 5 144 2 327 2 135 2 237 3 45 2 47 5 
95 1 269 2 114 1 144 1 178 1 40 1 117 1 45 2 308 1 371 1 47 2 207 1 
95 2 269 4 114 1 323 1 178 1 40 1 215 1 117 1 371 1 308 1 207 1 132 2 144 1 327 1 237 1 45 2 47 2 
95 2 269 3 214 1 114 3 178 3 40 1 105 1 117 1 371 3 207 3 132 2 372 1 135 1 237 1 45 6 318 1 47 1 
48 1 269 34 305 1 178 5 329 1 105 2 308 3 207 5 131 1 132 18 358 1 135 3 237 7 185 1 318 1 239 1 95 12 214 1 114 5 323 3 368 3 40 1 215 3 72 2 117 5 371 5 372 3 144 5 175 1 327 5 244 4 45 10 20 1 47 16 
95 3 269 8 114 2 178 2 105 1 72 1 117 1 371 2 207 2 131 1 132 4 372 1 144 1 358 1 327 1 237 2 135 1 45 4 185 1 47 4 
95 2 269 6 72 1 131 1 132 3 372 1 144 1 358 1 327 1 135 1 237 2 185 1 260 1 47 3 
95 2 48 1 269 4 114 1 323 1 178 1 215 1 117 1 371 1 308 1 207 1 132 2 144 1 327 1 237 1 45 2 47 2 
95 2 269 7 323 1 368 1 329 1 215 1 117 1 308 1 132 4 144 1 327 1 237 1 244 2 47 3 239 1 
269 23 178 2 105 2 308 2 207 2 131 1 132 12 358 1 134 1 135 2 237 5 185 1 239 1 95 9 114 2 214 1 323 2 368 2 215 2 41 1 72 1 117 4 371 2 372 2 144 3 327 3 244 2 45 4 47 11 
269 1 132 1 244 1 
269 1 368 1 47 1 
48 1 95 3 269 6 114 1 98 1 178 1 323 1 215 1 117 1 371 1 308 1 207 1 132 3 144 1 327 1 237 2 45 2 47 3 
80 1 269 12 178 1 329 1 308 2 207 1 132 6 237 1 64 1 187 1 95 2 114 1 323 2 322 1 368 1 40 1 215 2 117 1 371 1 144 2 327 2 18 1 244 1 45 2 47 6 
95 2 269 6 72 1 117 1 132 3 372 1 144 1 327 1 135 1 237 1 47 3 
95 2 269 3 214 1 114 1 178 1 105 1 117 1 371 1 207 1 131 1 372 1 132 2 237 1 135 1 45 2 185 1 47 1 
269 8 178 1 329 1 207 1 131 1 132 4 358 1 135 1 237 2 185 1 187 1 95 2 114 1 368 1 40 1 72 1 371 1 372 1 144 1 327 1 244 1 45 2 47 4 
48 1 269 11 178 2 329 1 308 1 207 2 131 1 132 5 358 1 237 2 135 1 185 1 187 1 239 1 95 3 114 2 368 1 40 1 215 1 72 1 117 1 371 2 372 1 144 2 327 1 244 2 45 4 47 6 
48 1 80 1 269 19 178 3 329 1 105 1 308 2 207 3 131 1 132 10 358 1 135 1 237 3 185 1 64 1 187 1 95 4 114 3 322 1 323 2 368 1 40 1 215 2 72 1 117 1 371 3 372 1 144 3 327 3 18 1 244 1 45 6 47 9 
48 1 80 1 269 17 178 3 329 1 105 1 308 2 207 3 131 1 132 7 358 1 135 1 237 3 185 1 64 1 187 1 95 5 114 3 323 1 322 1 368 1 40 1 215 2 72 1 117 2 371 3 372 1 144 3 327 2 18 1 244 1 45 6 47 10 
269 8 178 1 329 1 207 1 131 1 132 4 358 1 135 1 237 2 185 1 187 1 95 2 114 1 368 1 40 1 72 1 371 1 372 1 144 1 327 1 244 1 45 2 47 4 
80 1 269 12 178 1 329 1 308 2 207 1 132 6 237 1 64 1 187 1 95 2 114 1 323 2 322 1 368 1 40 1 215 2 117 1 371 1 144 2 327 2 18 1 244 1 45 2 47 6 
80 1 48 1 269 18 178 4 329 1 105 2 308 2 207 4 131 1 132 8 358 1 135 1 237 3 185 1 64 1 187 1 95 5 114 4 322 1 323 1 368 1 40 1 215 2 72 1 117 2 371 4 372 1 144 3 327 2 18 1 244 1 45 8 47 10 
80 1 269 16 178 4 329 1 105 2 308 3 207 4 132 7 237 3 64 1 187 1 318 1 95 6 114 4 322 1 323 2 368 1 40 1 215 3 117 3 371 4 144 3 327 2 18 1 244 1 45 8 47 9 
95 6 269 7 117 3 72 1 131 2 132 4 372 3 144 1 327 1 135 3 237 3 185 1 47 3 
80 1 269 18 178 4 329 1 105 2 308 2 207 4 131 1 132 8 358 1 135 1 237 3 185 1 64 1 187 1 318 1 95 4 114 4 322 1 323 1 368 1 40 1 215 2 72 1 117 1 371 4 372 1 144 3 327 2 18 1 244 1 45 8 47 10 
262 1 96 1 9 1 313 1 184 1 71 1 236 1 
96 1 50 1 328 1 341 1 71 1 332 1 262 1 9 1 313 1 184 1 223 1 236 1 
154 1 303 1 339 1 156 1 158 4 52 1 140 4 253 1 34 4 286 1 137 1 267 1 21 1 
0 1 303 1 156 1 158 2 367 1 140 2 170 1 297 1 34 2 59 1 266 1 286 1 225 1 21 2 
154 1 34 1 156 1 158 1 140 1 116 1 183 1 149 1 362 1 21 1 
303 1 197 1 34 2 156 1 158 2 52 1 140 2 369 1 286 1 103 1 21 1 
154 1 303 2 339 1 156 2 158 5 113 1 52 1 140 4 369 1 253 1 297 1 34 5 11 1 286 3 137 1 21 2 
154 1 303 2 339 1 156 2 158 5 113 1 52 1 140 4 369 1 253 1 29 1 297 1 34 5 286 3 137 1 21 2 
303 1 154 1 339 1 34 1 156 1 158 1 140 1 253 1 286 1 260 1 21 1 
303 1 248 1 154 1 96 1 156 1 115 1 158 1 367 1 140 1 71 2 262 2 34 1 313 1 373 1 60 1 286 1 301 1 21 1 
303 2 248 1 96 2 156 1 292 1 97 1 115 1 158 1 367 2 140 1 71 2 262 2 297 1 34 1 280 1 313 1 373 1 162 1 60 2 285 1 286 3 301 1 21 1 
248 1 303 2 156 1 158 2 34 2 313 1 162 1 60 2 96 2 115 1 97 1 292 1 367 2 140 2 71 2 263 1 262 2 297 1 280 1 373 1 285 1 286 3 267 1 21 1 
303 1 154 1 23 1 156 1 158 3 202 1 33 1 34 3 233 1 258 2 162 1 163 1 112 2 293 1 367 1 140 3 297 1 280 1 43 1 286 4 245 1 267 1 21 1 
154 1 303 1 23 1 112 2 156 1 158 3 367 1 293 1 202 1 140 3 33 1 297 1 34 3 280 1 43 1 162 1 258 2 286 4 211 1 163 1 267 1 21 1 
34 1 156 1 158 1 140 1 84 1 21 1 
154 2 303 2 156 2 157 1 113 1 158 7 367 1 52 1 140 6 128 1 84 1 369 1 197 1 34 7 107 1 11 1 63 1 266 1 286 3 225 1 21 3 
248 1 156 1 158 1 52 1 207 2 60 1 114 2 115 1 14 1 71 2 72 1 262 2 298 1 124 1 125 2 301 1 21 1 22 2 303 1 269 6 178 2 131 1 34 1 132 3 276 1 133 1 313 2 358 1 135 1 237 2 185 1 95 2 96 1 367 1 140 1 370 1 371 2 198 1 281 1 372 1 144 1 373 1 327 1 45 4 286 1 46 1 47 3 
154 1 23 1 158 1 202 1 287 1 203 1 86 2 130 1 33 1 289 1 34 1 10 1 258 3 211 1 163 1 112 3 277 1 293 2 140 1 216 2 243 2 218 1 143 1 43 1 17 1 326 1 221 2 286 2 
303 1 156 1 158 2 202 1 367 1 52 1 140 2 128 1 84 1 54 1 34 2 286 2 21 2 
303 1 248 1 154 1 96 1 156 1 115 1 158 1 367 1 140 1 71 2 262 2 263 1 34 1 313 1 373 1 60 1 286 1 21 1 
303 1 156 1 158 1 367 1 140 1 128 1 297 1 34 1 107 1 266 1 286 1 225 1 21 2 
302 1 262 1 96 1 141 1 278 1 123 1 306 1 71 1 65 1 
104 1 306 1 42 1 
313 1 278 1 306 1 89 1 65 1 
23 1 112 2 104 1 292 1 97 1 159 1 287 1 278 2 168 1 306 1 42 1 33 1 313 1 43 1 258 2 89 2 285 1 13 1 65 2 
337 1 119 1 121 1 127 1 312 1 161 1 325 1 28 1 
337 1 127 1 28 3 342 1 273 1 119 2 121 4 312 2 161 4 290 2 76 1 146 1 108 1 246 1 
337 1 127 1 28 1 119 1 121 2 312 1 161 2 87 1 325 1 290 1 284 1 151 1 
337 1 119 1 121 3 127 1 312 1 161 3 325 1 44 1 28 1 146 2 246 2 273 1 
28 2 190 1 171 2 217 1 
337 1 58 1 121 1 127 1 161 1 325 1 
337 1 119 1 121 2 127 1 312 1 161 2 290 1 325 1 28 1 271 1 
24 1 
337 1 119 1 121 1 127 1 312 1 161 1 325 1 28 1 
119 1 312 1 28 1 260 1 
337 1 119 1 121 1 127 1 312 1 161 1 28 1 
161 1 359 1 212 1 
93 1 337 1 127 1 28 1 273 1 119 1 121 3 161 3 312 1 325 1 146 2 246 1 
337 1 119 1 121 2 127 1 312 1 161 2 290 1 28 1 118 1 
337 1 127 1 28 1 342 1 116 1 181 1 219 1 121 1 161 1 325 1 362 1 
337 1 121 1 127 1 312 1 161 1 325 1 28 1 
337 1 119 1 121 1 127 1 312 2 161 1 325 1 
337 2 351 1 127 2 28 1 355 1 121 2 312 1 161 2 325 1 314 1 
337 1 127 1 271 1 28 2 342 1 119 1 309 1 121 3 312 1 161 3 325 1 290 2 76 1 
337 1 127 1 28 1 116 1 181 1 119 1 73 1 121 2 312 1 161 2 325 1 290 1 12 1 149 1 362 2 
337 2 127 2 28 2 342 1 307 1 118 1 119 1 121 4 312 1 161 4 325 1 290 2 76 1 
337 1 127 1 28 1 271 1 119 1 121 3 161 3 312 1 290 1 325 1 146 1 
76 1 28 1 342 1 108 1 
312 1 28 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 165 310 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 68 25 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 157 5 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 336 157 5 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 336 157 186 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 157 5 152 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 157 5 152 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 165 310 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
234 1 127 1 56 4 151 1 279 2 304 6 333 1 261 1 134 9 190 2 87 1 212 2 218 1 195 1 219 1 49 1 221 1 168 1 19 9 33 1 342 2 249 1 20 2 37 2 227 1 345 2 98 1 322 3 
234 1 127 1 56 4 151 1 279 2 304 6 333 1 261 1 134 9 190 2 87 1 212 2 218 1 195 1 219 1 49 1 221 1 168 1 19 9 33 1 342 2 249 1 20 2 37 2 227 1 345 2 98 1 322 3 
234 1 127 1 56 5 151 1 279 2 304 7 333 1 261 1 134 10 190 2 87 1 212 2 218 1 195 1 219 1 49 1 221 1 168 1 19 10 33 1 342 2 249 1 20 2 37 2 227 1 345 2 98 1 322 4 
234 1 127 1 56 3 151 1 279 2 304 4 333 1 261 1 134 7 190 2 87 1 212 2 218 1 195 1 219 1 49 1 168 1 19 7 33 1 342 2 249 1 20 1 37 2 227 1 345 2 98 1 322 2 
234 1 56 2 151 1 279 1 304 3 221 1 19 4 333 1 261 1 249 1 20 2 342 1 134 4 37 1 345 1 212 1 322 1 218 1 
234 1 151 1 279 1 118 1 168 1 19 2 261 1 134 2 37 1 190 1 23 1 227 1 345 1 212 1 339 1 218 1 
234 1 127 1 56 1 151 1 304 1 19 3 261 1 134 3 190 1 345 2 212 2 322 1 218 1 
234 1 56 4 127 1 151 1 279 1 304 7 333 1 261 1 134 9 190 1 212 2 192 1 218 1 49 1 221 1 19 9 249 1 20 2 342 1 37 1 345 2 98 1 322 3 323 1 
234 1 56 4 127 1 151 1 279 1 304 7 333 1 261 1 134 9 190 1 212 2 192 1 218 1 49 1 221 1 19 9 249 1 20 2 342 1 37 1 345 2 98 1 322 3 323 1 
358 1 204 1 273 1 
211 1 154 2 273 1 
365 2 293 1 285 2 308 2 64 1 93 2 232 2 94 2 
126 1 79 1 180 1 41 1 355 1 308 3 332 1 184 2 105 1 28 1 209 1 187 2 335 1 285 3 338 1 213 2 113 2 64 1 93 2 291 1 94 2 30 1 365 2 166 1 293 1 315 1 70 2 167 1 96 1 21 1 201 1 346 1 76 1 39 1 147 1 177 1 232 2 
365 1 18 1 308 1 144 1 285 1 64 1 93 1 232 1 267 1 94 1 
308 1 273 1 334 1 83 1 210 1 144 1 285 1 312 1 264 1 202 1 230 1 204 1 94 1 163 1 
365 1 308 1 273 1 334 2 83 1 210 1 144 1 285 1 202 1 230 2 93 1 204 1 232 1 94 1 163 1 
179 1 321 1 230 1 334 1 199 1 
365 1 308 1 18 1 199 1 334 1 273 1 344 1 144 1 240 1 285 1 253 1 321 1 64 1 230 1 93 1 267 1 232 1 204 1 94 1 
321 1 230 1 334 1 
365 1 18 1 308 1 199 1 334 1 144 1 240 1 285 1 230 1 64 1 93 1 267 1 232 1 94 1 
273 1 
365 1 308 1 18 1 199 1 334 1 273 1 344 1 144 1 240 1 285 1 321 1 63 1 64 1 230 1 93 1 267 1 232 1 204 1 94 1 
255 1 326 4 206 2 81 1 354 1 4 1 308 1 334 4 238 1 240 1 285 1 7 1 9 1 361 2 64 1 93 1 266 1 267 1 94 1 114 1 65 1 365 1 117 2 142 2 316 2 18 1 296 5 119 1 53 2 199 2 273 2 250 1 344 1 144 1 321 2 230 4 232 1 204 2 
293 1 358 1 
365 1 236 1 268 1 293 1 308 2 144 1 285 2 228 1 93 1 232 1 94 2 
62 1 125 1 54 1 
293 1 315 1 167 1 308 1 332 1 184 1 105 1 21 1 209 1 187 1 285 1 201 1 113 1 39 1 13 1 30 1 
315 1 167 1 308 2 332 1 105 1 184 1 21 1 209 1 187 1 252 1 285 2 201 1 113 1 39 1 45 1 125 1 93 1 232 1 94 1 30 1 
365 1 236 1 293 1 308 2 144 1 252 1 285 2 228 1 93 2 232 2 94 2 
251 1 144 1 285 2 308 2 93 2 267 1 232 2 94 2 
365 1 236 1 293 1 308 3 144 1 252 1 285 3 93 3 232 3 94 3 
144 1 285 1 308 1 93 1 267 1 232 1 94 1 
365 1 268 1 308 1 144 1 285 1 228 1 93 1 232 1 94 1 
180 1 355 1 308 4 332 1 105 1 184 1 334 1 209 1 335 1 187 1 83 1 210 1 285 4 311 1 338 1 213 2 113 1 45 1 64 1 265 1 93 3 291 1 94 3 163 1 30 1 365 2 166 1 293 1 315 1 70 1 167 1 96 1 21 1 252 1 144 1 201 1 228 1 346 1 202 1 76 1 39 1 230 1 147 1 232 3 
293 1 252 1 285 2 264 1 308 2 93 1 232 1 297 1 94 2 
365 1 244 1 308 3 273 1 334 1 210 1 83 1 144 1 252 2 285 3 228 1 202 1 230 1 45 1 265 1 93 3 232 3 94 3 163 1 
365 1 308 2 54 1 252 1 285 2 228 1 125 1 93 2 232 2 94 2 
293 1 315 1 167 1 308 1 332 1 184 1 105 1 21 1 187 1 209 1 285 1 201 1 113 1 39 1 30 1 
149 1 293 1 315 1 308 1 60 1 332 1 184 1 105 1 187 1 209 1 285 1 201 1 113 1 39 1 30 1 
102 1 40 1 350 1 78 1 180 1 153 1 59 1 62 2 28 2 262 1 191 1 213 2 338 2 291 1 166 1 117 1 70 4 142 1 370 1 96 1 54 2 346 1 76 1 125 2 
251 1 144 1 285 1 202 1 308 1 93 1 232 1 94 1 
237 1 141 1 
237 1 141 1 
112 1 288 1 
112 1 288 1 
112 1 288 1 
341 1 237 1 141 1 
341 1 237 1 141 1 
341 1 237 1 141 1 
237 1 141 1 131 1 
112 1 237 2 141 2 145 1 288 1 349 1 
26 1 237 1 141 1 
26 1 237 1 141 1 
26 1 237 1 141 1 
366 1 293 1 328 1 281 1 71 1 141 1 237 1 82 1 131 1 308 2 330 1 334 1 84 1 226 1 285 2 320 1 287 1 301 1 75 1 230 1 289 1 93 2 232 2 94 2 
197 1 141 2 237 2 71 1 82 2 318 1 273 1 334 2 320 2 301 2 75 3 136 1 289 2 230 2 216 1 349 1 160 2 340 1 233 1 
37 1 279 1 342 1 
37 1 279 1 23 1 
85 1 37 3 325 1 23 1 174 1 342 2 
85 1 37 2 23 1 174 1 363 1 342 1 
85 2 37 2 23 1 174 1 342 1 
102 1 326 3 81 1 154 1 330 1 59 1 334 4 84 1 86 1 239 1 287 1 361 1 337 1 193 2 164 1 66 1 245 1 117 1 142 1 316 1 296 1 53 1 199 4 273 1 55 1 344 1 321 1 230 4 231 1 178 1 204 1 
255 1 102 3 179 5 326 8 81 1 103 1 3 1 154 9 59 3 183 5 334 8 133 1 211 3 287 4 361 2 194 1 164 2 66 1 245 6 117 3 142 3 316 2 296 6 199 7 273 5 53 2 55 6 344 1 173 1 321 6 230 8 124 1 231 2 178 3 204 1 
255 1 102 1 326 3 154 4 59 1 334 3 239 1 86 1 211 2 287 1 361 1 193 1 164 1 245 2 117 1 316 1 142 1 296 2 273 3 199 2 53 1 55 2 230 3 231 1 204 1 178 1 
255 1 102 2 326 5 103 1 154 7 59 2 334 4 239 1 86 1 211 3 287 2 361 1 193 2 164 1 245 4 117 2 316 1 142 2 296 4 273 4 53 1 199 3 55 4 173 1 230 4 124 1 231 1 204 1 178 2 
209 1 32 1 358 1 
209 1 290 1 
222 1 
209 1 39 1 332 1 
209 1 122 1 
209 1 39 1 
209 3 111 1 32 2 229 1 39 1 332 1 
350 3 80 1 181 2 117 1 70 7 95 1 2 1 142 1 369 1 42 1 4 1 28 4 191 2 338 3 266 1 161 1 114 1 
350 3 80 1 181 2 117 1 70 7 95 1 2 1 142 1 369 1 42 1 4 1 28 4 191 2 338 3 266 1 161 1 114 1 
350 3 80 1 181 2 117 1 70 7 2 1 95 1 142 1 369 1 42 1 4 1 35 1 28 4 191 2 338 3 266 1 161 1 114 1 
0 1 102 3 350 10 80 1 181 3 2 1 42 1 4 2 307 1 132 1 59 3 28 16 189 3 109 1 191 5 135 1 213 2 338 15 266 1 161 2 291 1 217 4 114 2 115 1 166 1 70 31 117 4 95 2 142 4 369 5 96 1 277 1 76 1 178 3 
350 4 80 1 181 2 2 1 307 1 4 1 28 5 191 3 213 4 338 4 161 1 266 1 291 2 114 1 166 2 220 1 117 1 70 9 247 1 95 1 142 1 369 1 96 2 76 2 
234 1 151 1 27 1 279 1 325 1 304 1 207 1 184 1 105 1 261 1 208 1 134 2 187 1 190 1 89 1 212 1 113 1 218 1 31 1 50 1 73 1 19 2 342 1 120 1 275 1 37 2 22 1 23 1 345 1 201 1 
234 1 77 1 27 1 279 1 325 1 304 2 184 1 105 1 261 1 208 1 134 3 187 1 110 1 190 1 89 1 212 1 113 1 218 1 31 1 73 1 19 3 171 1 342 1 120 1 275 1 37 2 22 1 23 1 345 1 201 1 
234 1 27 1 325 1 279 1 304 2 184 1 105 1 261 1 208 1 134 2 187 1 110 1 190 1 89 1 113 1 218 1 73 1 19 2 171 1 342 1 120 1 275 1 37 2 23 1 201 1 
77 1 105 1 184 1 208 2 134 1 187 1 209 1 29 1 190 2 8 1 212 1 113 1 214 1 30 1 162 1 73 2 371 1 19 1 120 2 121 1 345 1 201 1 39 1 
151 1 27 1 279 1 325 1 184 1 105 1 208 1 134 1 187 1 110 1 190 1 89 1 212 1 113 1 31 1 50 1 73 1 19 1 342 1 120 1 275 1 37 2 22 1 23 1 345 1 201 1 
368 1 
164 1 165 1 326 1 81 1 316 1 296 1 184 1 334 1 53 1 187 1 310 1 344 1 91 1 321 2 361 1 113 1 230 1 30 1 
302 1 308 1 334 2 83 1 210 1 285 1 362 1 63 1 264 1 312 1 94 1 163 1 48 2 68 1 272 1 344 1 372 1 144 1 321 2 203 1 202 1 230 2 
302 1 308 1 334 2 83 1 210 1 285 1 90 1 362 1 63 1 264 1 312 1 94 1 163 1 48 3 272 1 273 1 372 1 344 1 144 1 321 1 203 1 202 1 230 2 204 1 
302 1 25 1 308 1 334 2 83 1 210 1 285 1 90 1 362 1 63 1 264 1 312 1 94 1 163 1 48 3 68 1 272 1 344 1 372 1 144 1 321 2 203 1 202 1 230 2 
344 1 321 1 63 1 230 1 334 1 
235 1 302 1 25 1 303 1 326 1 329 2 81 1 154 1 308 1 334 2 336 1 83 1 210 1 285 1 90 1 211 1 362 1 361 1 312 1 264 1 137 1 12 2 94 1 163 1 48 3 68 1 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 2 203 1 202 1 230 2 324 2 
302 1 25 1 303 1 326 1 329 2 81 1 308 1 334 2 336 1 83 1 210 1 5 1 285 1 90 1 211 1 361 1 362 1 157 1 264 1 312 1 137 1 12 2 94 1 163 1 48 3 68 1 139 1 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 2 203 1 202 1 230 2 324 2 
302 1 25 1 303 1 326 1 329 1 81 1 308 1 334 2 336 1 83 1 210 1 5 1 285 1 211 1 361 1 362 1 157 1 264 1 312 1 137 1 12 1 94 1 163 1 48 2 68 1 139 1 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 2 203 1 202 1 230 2 324 1 
302 1 25 1 128 1 326 1 329 1 81 1 306 1 154 1 308 1 334 2 186 1 336 1 83 1 210 1 285 1 361 1 362 1 157 1 264 1 312 1 12 1 94 1 163 1 48 2 68 1 271 1 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 2 347 1 203 1 202 1 230 2 
302 1 25 2 152 1 303 1 326 1 329 2 81 1 308 1 334 2 336 1 83 1 210 1 5 1 285 1 211 1 90 2 361 1 362 1 157 1 264 1 312 1 137 1 12 2 94 1 163 1 48 4 139 1 68 2 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 3 203 1 202 1 230 2 324 2 
302 1 25 2 152 1 303 1 326 1 329 2 81 1 308 1 334 2 336 1 83 1 210 1 5 1 285 1 211 1 90 2 361 1 362 1 157 1 264 1 312 1 137 1 12 2 94 1 163 1 48 4 139 1 68 2 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 3 203 1 202 1 230 2 324 2 
235 1 302 1 25 1 128 2 326 1 329 2 81 1 306 1 154 1 308 1 334 2 336 1 83 1 210 1 285 1 90 1 362 1 361 1 312 1 264 1 12 2 94 1 163 1 48 3 68 1 271 1 316 1 296 1 272 1 53 1 344 1 372 1 144 1 321 2 203 1 202 1 230 2 
350 2 166 1 293 2 80 1 181 1 180 1 117 1 70 6 2 1 142 1 370 1 4 1 96 1 358 1 54 1 62 1 28 3 191 2 346 1 338 3 213 2 76 1 125 1 266 1 291 1 114 1 
126 1 0 1 102 2 350 2 180 2 132 1 59 1 62 11 28 8 189 3 191 1 338 6 213 4 46 1 11 1 217 3 291 2 166 2 293 1 292 1 15 1 70 14 117 1 369 1 72 1 142 2 96 2 54 4 346 1 76 2 147 1 125 11 178 2 
126 1 150 1 351 1 180 1 308 2 332 1 105 1 184 1 209 1 187 1 28 1 285 2 113 1 213 2 338 1 45 1 93 1 13 1 291 1 30 1 94 1 116 1 166 1 293 1 315 1 70 2 167 1 72 1 96 1 21 1 54 1 252 1 201 1 346 1 39 1 76 1 147 1 232 1 
126 1 80 1 181 1 180 3 2 1 4 1 43 2 332 2 184 3 187 3 335 2 285 3 191 4 338 10 45 1 93 1 291 3 94 1 293 2 142 3 96 3 21 2 54 7 97 2 252 1 201 2 299 2 346 3 147 1 102 2 350 8 260 1 308 3 59 2 105 2 62 7 309 1 209 2 28 10 110 1 113 3 213 6 266 1 114 1 30 1 166 3 315 2 117 3 70 20 270 1 167 2 72 1 369 4 172 2 76 3 39 2 125 7 232 1 178 2 
205 1 126 1 129 1 180 2 352 1 357 1 308 1 207 1 105 2 184 7 209 3 187 8 28 1 110 1 285 1 8 1 113 8 213 4 338 1 93 1 291 2 94 1 30 2 166 2 14 1 70 2 295 1 370 1 96 2 121 1 252 1 201 2 346 2 123 1 76 2 39 2 147 1 232 1 177 2 
102 1 350 1 180 1 308 1 59 1 62 1 28 1 285 1 191 1 213 2 338 2 215 1 93 1 291 1 94 1 365 1 166 1 70 3 117 1 72 1 142 1 96 1 54 1 228 1 346 1 76 1 125 1 232 1 178 1 
102 1 350 1 166 1 78 1 180 1 70 2 369 1 370 1 142 1 96 1 54 1 62 1 28 2 346 1 213 2 76 1 125 1 291 1 
350 1 166 1 180 1 70 2 117 1 370 1 96 1 59 1 54 1 62 1 262 1 191 1 346 1 213 2 338 2 76 1 125 1 291 1 
102 1 350 2 166 1 180 1 117 1 70 4 369 1 370 1 142 1 96 1 59 1 54 2 62 2 28 2 191 1 346 1 338 2 213 2 76 1 125 2 291 1 178 1 
102 1 350 1 166 1 14 1 78 1 180 1 70 2 369 1 142 1 96 1 54 1 62 1 28 2 346 1 213 2 76 1 125 1 291 1 
350 1 166 1 14 1 180 1 70 2 117 1 96 1 59 1 54 1 62 1 262 1 191 1 346 1 213 2 338 2 76 1 125 1 291 1 
102 1 350 2 166 1 14 1 180 1 117 1 70 4 369 1 142 1 96 1 59 1 54 2 62 2 28 2 191 1 346 1 338 2 213 2 76 1 125 2 291 1 178 1 
102 1 350 2 166 1 180 1 117 1 70 4 369 1 142 1 96 1 59 1 54 2 62 2 28 2 191 1 346 1 338 2 213 2 76 1 125 2 291 1 178 1 
126 1 180 1 308 1 332 1 105 1 184 1 28 1 335 1 187 1 209 1 285 1 113 1 213 2 338 1 291 1 30 1 166 1 293 1 315 1 70 2 167 1 96 1 21 1 201 1 346 1 39 1 76 1 147 1 
126 1 149 1 180 1 308 1 60 1 332 1 105 1 184 1 28 1 187 1 209 1 285 1 113 1 213 2 338 1 291 1 30 1 166 1 293 1 315 1 246 1 70 2 96 1 201 1 346 1 39 1 76 1 147 1 
102 1 350 2 166 1 180 1 117 1 70 4 369 1 72 1 142 1 96 1 59 1 54 2 62 2 28 2 191 1 346 1 338 2 213 2 76 1 125 2 291 1 178 1 
102 1 350 2 180 1 308 1 59 1 332 1 207 1 105 1 184 1 62 2 28 2 335 1 187 1 209 1 285 1 191 1 338 2 113 1 213 2 291 1 166 1 315 1 117 1 70 4 167 1 369 1 142 1 96 1 54 2 21 1 97 1 201 1 346 1 39 1 76 1 125 2 178 1 
102 1 350 1 180 1 308 1 59 1 62 1 28 2 285 1 338 1 213 2 93 1 291 1 94 1 365 1 166 1 69 1 117 1 70 3 369 1 72 1 142 1 96 1 54 1 228 1 346 1 76 1 125 1 232 1 178 1 
1 2 0 1 102 3 350 6 257 1 305 1 182 1 132 1 59 3 28 9 189 1 284 1 286 2 191 3 213 4 338 10 217 2 291 2 166 2 220 1 294 1 70 19 117 3 142 3 369 3 51 1 96 2 74 1 76 2 178 3 
1 1 102 3 350 4 257 1 327 1 356 1 305 2 307 2 182 1 132 2 59 2 28 14 155 1 189 2 286 4 191 2 338 12 213 6 138 1 291 3 217 2 166 3 269 1 16 1 220 1 117 2 70 26 369 2 142 3 51 2 96 3 74 1 76 3 178 3 
1 1 0 1 102 4 350 8 257 1 80 1 327 1 181 1 356 1 2 1 305 2 4 1 307 1 182 1 132 3 59 4 28 20 155 1 189 3 286 4 191 4 213 6 338 21 266 1 138 1 217 4 291 3 114 1 269 1 166 3 16 1 220 1 294 1 70 41 117 5 142 5 369 4 51 1 96 3 74 1 76 3 278 1 178 4 
1 1 0 1 102 4 350 7 257 1 80 1 327 1 181 1 356 1 2 1 305 2 4 1 307 2 182 1 132 3 59 3 28 20 155 1 189 3 286 4 191 4 213 8 338 18 266 1 138 1 217 4 291 4 114 1 269 1 166 4 16 1 220 1 294 1 70 38 117 4 142 5 369 3 51 1 96 4 74 1 76 4 278 1 178 4 
1 1 0 1 102 5 350 10 257 1 80 1 327 1 181 1 356 1 2 1 305 1 4 1 307 1 182 1 59 5 132 2 28 22 155 1 189 3 286 4 191 5 213 4 338 20 266 1 11 1 138 1 217 3 291 2 114 1 269 1 166 2 16 1 220 1 117 6 70 42 142 6 369 5 51 1 96 2 74 1 76 2 178 5 
320 1 301 1 237 1 141 1 82 1 136 1 92 1 289 1 216 1 349 1 
226 1 131 1 
36 1 256 1 320 1 301 1 237 1 141 1 82 1 289 1 24 1 
224 1 341 1 
26 1 145 1 159 1 
197 1 71 1 141 1 237 1 82 1 273 1 334 1 320 1 301 1 75 2 136 1 230 1 289 1 216 1 349 1 160 1 340 1 233 1 
197 1 71 1 141 1 237 1 82 1 273 1 334 1 320 1 301 1 75 2 136 1 230 1 289 1 216 1 349 1 160 1 340 1 233 1 
197 1 71 1 141 1 237 1 82 1 273 1 334 1 320 1 301 1 75 2 136 1 230 1 289 1 216 1 349 1 160 1 340 1 233 1 
224 1 341 1 145 1 
224 1 341 1 145 1 
26 1 159 1 
26 1 145 1 159 1 
366 1 281 1 
328 1 237 1 281 1 82 1 308 2 131 1 330 1 334 1 84 1 285 2 287 1 289 1 160 1 93 2 94 2 366 1 293 1 141 1 199 1 226 1 373 1 320 1 301 1 75 1 230 1 232 2 233 1 
126 1 180 1 352 1 357 1 308 2 104 1 105 1 184 2 107 1 209 1 187 2 28 1 285 2 113 2 213 2 338 1 158 1 291 1 94 2 166 1 70 2 72 1 96 1 34 1 223 1 201 1 346 1 39 1 76 1 147 1 177 2 
279 1 325 1 31 1 207 1 105 1 184 2 342 1 187 2 120 1 275 1 37 2 110 1 23 1 201 1 89 1 113 2 146 1 254 1 374 1 
279 1 325 1 31 1 184 1 105 1 342 1 187 1 120 1 275 1 37 2 110 1 23 1 242 1 89 1 201 1 113 1 374 1 
105 1 184 1 209 1 187 1 120 1 121 1 201 1 8 1 113 1 214 1 146 1 39 1 30 1 47 1 
279 1 325 1 31 1 105 1 184 1 342 1 187 1 120 1 275 1 37 2 110 1 23 1 89 1 201 1 113 1 146 1 254 1 374 1 
317 1 
326 1 7 1 354 1 296 1 358 1 204 1 273 1 
303 1 326 1 81 1 316 1 154 1 296 1 273 1 53 1 344 1 211 1 321 1 361 1 137 1 324 1 204 1 
102 1 206 1 326 4 81 2 154 6 282 1 59 1 332 1 184 1 105 2 334 1 187 1 209 4 210 1 111 1 211 3 361 2 113 1 290 2 313 1 30 1 164 1 245 3 32 1 117 1 142 1 316 2 296 3 273 3 53 2 200 1 55 3 172 1 344 1 225 1 276 1 201 1 321 2 348 1 230 1 176 1 39 1 178 1 
327 1 326 8 81 2 132 1 189 1 240 1 285 1 91 1 93 1 94 1 16 1 245 5 142 2 18 1 296 5 53 2 250 1 55 5 344 1 144 1 148 1 204 2 102 2 206 2 356 1 308 1 154 6 59 2 359 1 155 1 211 3 361 2 64 1 267 1 217 1 164 1 365 1 269 1 117 2 316 2 273 5 321 1 178 2 232 1 
206 2 326 2 81 1 4 1 308 1 334 1 238 1 240 1 285 1 361 1 64 1 266 1 93 1 267 1 114 1 94 1 365 1 139 1 117 1 316 1 142 2 18 1 296 2 53 1 250 1 144 1 230 1 232 1 
326 1 81 1 354 1 316 1 296 1 53 1 273 1 7 1 361 1 204 1 
102 2 206 2 326 5 245 5 117 2 142 2 154 10 296 5 59 2 273 5 250 1 172 1 55 5 211 5 178 2 
365 1 308 1 18 1 273 1 344 1 144 1 240 1 285 1 321 1 64 1 93 1 267 1 232 1 204 1 94 1 
164 1 165 1 326 1 81 1 316 1 296 1 331 1 184 1 53 1 187 1 310 1 344 1 91 1 321 2 361 1 113 1 30 1 
180 1 355 1 308 3 332 1 184 1 105 1 187 1 335 1 209 1 285 3 338 1 213 2 113 1 64 1 93 2 291 1 30 1 94 2 365 2 166 1 293 1 315 1 70 1 167 1 96 1 21 1 201 1 346 1 76 1 39 1 147 1 232 2 
164 1 326 1 181 1 245 2 81 1 316 1 154 4 296 2 53 1 273 4 55 2 211 2 91 1 361 1 204 2 
320 1 300 1 289 1 
320 1 300 1 289 1 
320 1 300 1 289 1 
366 1 196 1 320 1 136 1 289 1 
320 1 99 1 289 1 
320 1 99 1 289 1 
320 1 99 1 289 1 
320 1 289 1 
237 1 141 1 
350 3 166 2 80 1 181 1 117 1 70 8 2 1 142 1 369 1 96 2 307 1 4 1 28 4 191 2 338 4 213 4 76 2 266 1 291 2 114 1 
350 2 80 1 181 1 70 6 117 1 2 1 142 1 4 1 358 1 28 3 191 2 338 3 266 1 114 1 
102 1 350 2 166 1 117 1 70 4 142 1 369 1 96 1 52 1 59 1 28 2 191 1 338 2 213 2 76 1 291 1 178 1 
28 1 189 1 70 2 338 1 132 1 217 1 
102 2 0 1 350 8 80 1 181 1 2 1 4 2 307 1 59 2 238 1 28 13 189 2 191 4 338 12 213 2 266 2 11 1 217 2 291 1 114 2 166 1 15 1 117 5 70 25 142 5 369 4 96 1 76 1 178 2 
70 1 338 1 217 1 
28 1 189 1 70 1 
102 1 350 3 166 1 70 6 117 1 142 1 369 1 96 1 52 1 59 1 28 3 172 1 191 2 213 2 338 3 76 1 291 1 178 1 
102 2 350 2 327 1 356 1 132 1 59 2 28 6 189 1 155 1 191 1 338 6 213 2 217 1 291 1 166 1 269 1 16 1 220 1 70 12 117 2 369 1 142 2 96 1 76 1 178 2 
350 2 70 6 117 1 142 1 369 1 4 1 28 3 191 1 338 3 266 1 114 1 
350 2 166 1 80 1 70 3 2 1 369 1 4 1 307 1 96 1 28 1 191 1 156 1 338 2 213 2 76 1 291 1 114 1 
350 5 166 1 220 1 70 10 117 2 369 2 142 2 96 1 4 2 238 1 28 5 191 3 213 2 338 5 76 1 266 1 291 1 114 2 
102 1 350 1 166 1 220 1 70 2 142 1 369 1 96 1 28 2 213 2 76 1 291 1 
102 1 350 2 166 1 220 1 117 1 70 4 142 1 369 1 96 1 59 1 28 2 191 1 338 2 213 2 76 1 291 1 178 1 
350 2 166 3 220 1 294 1 70 3 369 1 307 1 96 3 4 1 28 1 156 1 191 1 338 2 213 6 76 3 291 3 114 1 
0 1 102 3 350 12 80 1 181 1 2 1 4 3 307 2 132 1 59 3 28 16 189 3 156 1 135 1 191 7 338 18 213 10 266 2 217 4 291 5 114 3 115 1 166 5 220 1 294 1 70 34 117 5 142 5 369 5 96 5 52 1 277 1 76 5 178 3 
350 2 80 1 181 1 2 1 4 1 132 1 28 4 189 1 191 2 338 4 213 2 266 1 217 1 291 1 114 1 166 1 16 1 220 1 117 1 70 8 142 1 96 1 76 1 
0 1 102 1 350 3 80 1 181 1 2 1 4 1 132 1 28 6 189 1 191 2 338 5 213 4 266 1 217 2 291 2 114 1 166 2 16 1 220 1 117 1 70 11 142 2 369 1 96 2 52 1 76 2 178 1 
102 2 350 4 80 1 327 1 181 1 356 1 2 1 4 1 307 1 132 1 59 2 28 9 155 1 189 1 191 3 338 10 213 6 266 1 217 1 291 3 114 1 166 3 269 1 16 1 220 1 70 19 117 3 369 1 142 3 96 3 52 1 76 3 178 2 
102 2 350 5 80 1 327 1 181 1 356 1 2 1 4 1 307 1 132 1 59 1 28 10 189 1 155 1 191 3 338 7 213 6 266 1 217 1 291 3 114 1 166 3 269 1 16 1 220 1 70 17 117 2 369 2 142 3 96 3 52 1 76 3 178 2 
350 2 80 1 181 1 2 1 4 1 132 1 28 4 189 1 191 2 338 4 213 2 266 1 217 1 291 1 114 1 166 1 16 1 220 1 117 1 70 8 142 1 96 1 76 1 
102 2 350 2 327 1 356 1 132 1 59 2 28 6 189 1 155 1 191 1 338 6 213 2 217 1 291 1 166 1 269 1 16 1 220 1 70 12 117 2 369 1 142 2 96 1 76 1 178 2 
102 2 350 5 80 1 327 1 181 1 356 1 2 1 4 1 307 2 132 1 59 1 28 10 155 1 189 1 191 3 338 8 213 8 266 1 217 1 291 4 114 1 166 4 269 1 16 1 220 1 70 18 117 2 369 2 142 3 96 4 52 1 76 4 178 2 
102 3 350 6 327 1 356 1 307 2 132 1 59 2 28 9 155 1 189 1 191 3 338 7 213 8 217 1 291 4 166 4 269 1 16 1 220 1 70 16 294 1 117 2 369 3 142 3 96 4 76 4 178 3 
350 6 80 1 117 1 70 7 2 2 369 3 142 1 4 3 28 3 191 3 338 4 266 1 114 3 
102 2 350 4 80 1 327 1 181 1 356 1 2 1 4 1 307 2 132 1 59 1 28 10 155 1 189 1 191 3 338 8 213 8 266 1 217 1 291 4 114 1 166 4 269 1 16 1 220 1 70 18 294 1 117 2 369 1 142 3 96 4 76 4 178 2 
293 1 285 1 264 1 308 1 364 1 94 1 297 1 
293 1 67 1 308 1 297 1 298 1 274 1 263 1 241 1 285 1 264 1 364 1 94 1 
209 1 187 1 121 1 201 1 8 1 113 1 39 1 358 1 105 1 184 1 30 1 
293 1 315 1 167 1 308 2 332 1 105 1 184 1 209 1 187 1 252 1 285 2 201 1 113 1 39 1 93 1 232 1 94 1 30 1 
293 1 315 1 167 1 308 2 170 1 332 2 105 1 184 1 209 3 187 1 144 1 252 1 285 2 88 1 201 1 122 1 113 1 202 1 39 2 93 1 232 2 163 1 94 2 
293 1 315 1 308 2 60 1 170 1 332 2 105 1 184 2 209 3 187 2 143 1 144 1 252 1 285 2 88 1 201 1 122 1 113 2 202 1 39 2 93 1 232 2 163 1 94 2 
32 1 17 1 332 1 170 1 105 1 184 3 273 1 334 2 187 3 209 4 210 1 143 1 88 1 201 1 321 1 44 1 122 1 113 3 39 1 230 2 290 1 204 1 30 1 
32 1 332 1 170 1 105 1 184 3 273 1 334 2 187 3 209 4 210 1 143 1 88 1 201 1 321 1 122 1 113 3 39 1 230 2 176 1 290 1 204 1 30 1 
187 1 129 1 201 1 113 1 105 1 184 1 
205 1 129 1 314 1 198 1 295 1 357 1 207 1 332 1 184 6 105 3 187 7 209 3 110 1 111 1 201 2 175 1 113 7 123 1 39 2 177 1 30 2 
80 1 180 2 181 1 2 1 4 1 43 1 332 1 184 1 335 1 187 1 285 2 191 2 338 3 93 1 291 2 94 1 293 2 142 1 96 2 54 1 21 1 97 1 252 1 201 1 346 2 350 2 308 2 207 1 105 1 62 1 209 1 28 3 113 1 213 4 158 1 266 1 114 1 166 2 315 1 70 6 117 1 167 1 72 1 76 2 39 1 125 1 232 1 
326 4 206 2 81 2 354 1 4 1 308 1 331 1 184 1 334 2 238 1 187 1 209 2 210 1 240 1 285 1 7 1 361 2 113 1 64 1 93 1 266 1 290 1 267 1 94 1 114 1 30 1 365 1 32 1 117 2 142 2 316 2 18 1 296 5 273 2 53 2 199 1 250 1 344 1 276 1 225 1 144 1 321 2 348 1 230 2 176 1 232 1 204 2 
129 1 32 1 207 1 332 1 184 2 105 2 187 2 209 2 111 1 201 1 113 2 39 1 313 1 
259 1 207 1 105 1 184 4 187 4 209 1 121 1 143 1 8 1 201 1 113 4 39 1 30 1 
314 1 198 1 270 1 280 1 332 1 184 2 105 2 187 2 209 1 88 1 201 1 113 2 100 1 39 1 
275 1 187 1 37 1 279 1 23 1 201 1 113 1 105 1 184 1 30 1 
357 1 104 1 207 1 184 2 105 1 187 2 209 1 110 1 201 1 113 2 39 1 
205 1 295 1 357 1 259 1 207 1 184 4 105 2 187 5 209 3 121 1 88 1 8 1 201 2 113 5 39 2 30 1 
295 1 357 1 259 1 207 1 184 4 105 2 108 1 187 5 209 3 121 1 88 1 8 1 201 2 113 5 39 2 30 1 
293 1 315 1 308 2 60 1 332 1 105 1 184 1 209 1 187 1 252 1 285 2 201 1 113 1 39 1 93 1 232 1 94 1 30 1 
314 1 198 1 332 1 184 1 105 2 187 1 209 1 111 1 88 1 201 1 175 1 113 1 39 1 
293 1 6 1 57 1 101 1 169 1 
293 1 57 2 169 2 360 1 273 1 199 1 334 2 210 1 83 1 144 1 6 1 243 1 202 1 230 2 10 1 101 2 265 1 204 1 163 1 
285 1 6 1 308 1 101 1 169 1 34 1 94 1 107 1 223 1 
6 1 10 1 360 1 
234 1 358 1 218 1 261 1 
234 1 134 1 345 1 212 1 19 1 218 1 261 1 
190 1 73 1 19 1 
234 1 134 3 151 1 319 1 130 1 345 1 212 1 58 1 168 2 19 3 218 1 261 1 
234 1 134 2 345 1 212 1 304 1 19 2 218 1 261 1 20 1 
134 1 37 1 56 1 151 1 279 1 345 1 212 1 19 1 333 1 342 1 
134 1 151 1 345 1 212 1 19 1 218 1 261 1 
234 1 134 1 151 1 345 1 212 1 19 1 218 2 
151 1 367 1 140 1 19 2 106 1 261 1 134 2 345 2 212 2 218 1 
234 1 56 1 151 1 49 1 304 2 19 3 261 1 134 3 345 1 212 1 98 1 322 1 218 1 
234 1 151 1 325 1 279 1 304 1 19 2 261 1 342 1 134 2 37 2 188 1 23 1 345 1 212 1 218 1 
234 1 56 1 151 1 304 2 221 1 19 4 261 1 20 1 134 4 345 2 212 2 322 1 218 1 
234 1 134 1 151 1 345 1 212 1 19 1 218 1 261 1 
234 2 56 1 130 1 353 1 304 2 168 1 19 4 261 2 134 4 319 1 345 1 212 1 322 1 218 2 
234 1 151 1 304 1 19 2 61 1 261 1 134 2 185 1 345 1 212 1 323 1 218 1 
234 1 151 1 130 1 168 2 19 3 261 1 134 3 343 1 319 2 345 1 212 1 218 1 
283 1 258 1 261 1 
134 1 38 1 151 1 345 1 212 1 19 1 
234 1 134 2 151 1 345 1 98 1 212 1 304 1 19 2 218 1 261 1 
248 1 
234 1 134 1 151 1 345 1 212 1 19 1 218 1 261 1 
234 1 134 3 151 1 345 1 98 1 212 1 304 1 168 1 19 3 218 1 261 1 
134 1 56 1 304 1 322 1 19 1 
218 1 261 1 

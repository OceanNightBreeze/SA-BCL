#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 155 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 262 322 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 321 343 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 262 322 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 291 (221,284) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (221,284) 359 26 (164,283) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 4 71 2 147 1 286 2 250 2 101 2 49 3 75 1 252 1 179 1 363 1 297 1 182 9 276 1 366 5 112 1 6 1 161 1 63 9 193 1 241 1 34 2 258 1 87 2 8 1 116 1 306 6 323 2 
225 4 71 2 147 1 286 2 250 2 101 2 49 3 75 1 252 1 179 1 363 1 297 1 182 9 276 1 366 5 112 1 6 1 161 1 63 9 193 1 241 1 34 2 258 1 87 2 8 1 116 1 306 6 323 2 
225 5 71 2 147 1 286 2 250 2 101 2 49 4 75 1 252 1 179 1 363 1 297 1 182 10 276 1 366 6 112 1 6 1 161 1 63 10 193 1 241 1 34 2 258 1 87 2 8 1 116 1 306 7 323 2 
225 3 71 2 147 1 286 2 250 2 101 1 49 2 252 1 179 1 363 1 297 1 182 7 276 1 366 4 112 1 6 1 161 1 63 7 193 1 241 1 34 2 258 1 87 2 8 1 116 1 306 4 323 2 
225 2 71 1 182 4 276 1 286 1 366 3 112 1 63 4 101 2 241 1 49 1 75 1 34 1 258 1 87 1 116 1 306 3 323 1 
147 1 71 1 182 2 186 1 366 1 250 1 278 1 63 2 241 1 347 1 34 1 258 1 87 1 252 1 116 1 323 1 
225 1 71 2 182 3 250 1 366 2 63 3 193 1 241 1 49 1 258 1 116 1 306 1 323 2 
225 4 71 2 286 1 250 1 101 2 49 3 74 1 75 1 182 9 276 1 366 5 161 1 112 1 193 1 63 9 241 1 34 1 258 1 8 1 87 1 116 1 222 1 306 7 323 2 
225 4 71 2 286 1 250 1 101 2 49 3 74 1 75 1 182 9 276 1 366 5 161 1 112 1 193 1 63 9 241 1 34 1 258 1 8 1 87 1 116 1 222 1 306 7 323 2 
266 1 11 1 264 1 
266 1 121 2 117 1 
115 2 216 2 200 2 293 2 339 2 119 1 282 1 374 2 
328 1 309 1 267 1 357 2 333 1 48 1 104 1 103 1 124 1 153 1 293 2 294 1 339 2 79 1 317 2 344 1 216 3 111 1 277 1 192 1 219 1 163 1 113 1 35 1 115 2 221 1 259 1 200 2 263 2 12 1 14 2 139 2 118 1 372 1 119 1 282 1 374 3 
325 1 216 1 279 1 115 1 200 1 293 1 351 1 339 1 119 1 374 1 
325 1 266 1 206 1 271 1 209 1 128 1 293 1 339 1 275 1 216 2 279 2 303 1 115 1 11 1 200 2 67 1 68 1 351 1 142 1 119 1 374 2 
325 1 266 1 216 2 279 2 206 2 115 2 303 1 271 1 11 1 200 2 293 2 128 1 67 2 351 1 68 1 339 2 142 1 119 1 374 2 
15 1 206 1 67 1 211 1 237 1 
15 1 16 1 206 2 266 1 11 1 330 1 67 2 211 1 
15 1 206 1 67 1 
325 1 216 1 279 1 206 1 115 1 271 1 200 1 67 1 293 1 211 1 351 1 339 1 119 1 374 1 
266 1 
15 1 16 1 206 2 266 1 11 1 67 2 211 1 231 1 
295 1 15 2 95 1 255 2 16 1 266 1 0 1 132 1 162 1 334 1 206 5 301 2 302 1 11 1 67 5 5 1 211 2 137 2 180 1 
264 1 282 1 
216 2 60 1 115 1 200 2 293 1 337 1 339 1 374 2 282 2 
365 1 131 1 170 1 
79 1 216 1 309 1 277 1 357 1 48 1 221 1 350 1 263 1 12 1 294 1 14 1 118 1 372 1 282 1 374 1 
79 1 216 2 309 1 365 1 310 1 277 1 357 1 48 1 221 1 115 1 12 1 200 1 263 1 293 1 294 1 14 1 118 1 372 1 340 1 374 2 
275 1 216 5 310 1 60 1 61 1 251 1 133 1 115 4 200 5 293 4 339 1 340 2 374 5 282 1 
279 1 325 1 115 1 216 1 200 1 293 1 374 1 
115 3 216 3 200 3 293 3 339 1 340 1 282 1 374 3 
279 1 325 1 115 1 216 1 200 1 293 1 374 1 
216 1 60 1 279 1 115 1 200 1 293 1 337 1 339 1 374 1 
309 1 267 1 310 1 357 1 48 1 104 1 103 1 124 1 206 1 153 1 293 3 128 1 294 1 339 2 340 1 79 1 317 2 344 1 216 4 111 1 277 1 60 1 192 1 113 1 279 1 221 1 303 1 115 3 259 1 39 1 12 1 200 3 263 1 67 1 14 1 139 1 68 1 118 1 41 1 372 1 142 1 119 1 282 1 374 4 
275 1 115 1 216 2 200 2 293 1 61 1 340 1 282 1 374 2 
266 1 216 3 310 1 60 1 279 1 206 1 115 3 303 1 65 1 200 3 67 1 128 1 293 3 68 1 339 1 41 1 142 1 340 2 374 3 
115 1 216 1 200 1 365 1 293 1 339 1 60 1 374 1 
79 1 216 1 309 1 277 1 357 1 48 1 221 1 263 1 12 1 294 1 14 1 118 1 372 1 282 1 374 1 
94 1 79 1 216 1 277 1 357 1 48 1 149 1 263 1 12 1 294 1 14 1 118 1 372 1 282 1 374 1 
344 1 317 2 96 1 365 1 311 1 131 1 192 2 99 1 113 1 103 1 104 1 124 1 125 1 9 1 153 1 170 1 138 1 139 2 223 1 
216 1 158 1 279 1 115 1 200 1 293 1 142 1 374 1 
292 1 273 1 
292 1 273 1 
86 1 77 1 
86 1 77 1 
86 1 77 1 
292 1 191 1 273 1 
292 1 191 1 273 1 
292 1 191 1 273 1 
292 1 338 1 273 1 
86 1 292 2 77 1 352 1 370 1 273 2 
292 1 281 1 273 1 
292 1 281 1 273 1 
292 1 281 1 273 1 
115 1 216 1 200 1 293 1 233 1 374 1 
325 1 45 1 122 1 206 1 271 1 292 1 293 1 108 1 233 1 339 1 78 1 273 1 216 1 238 1 62 1 194 1 279 1 371 1 195 1 115 1 200 1 67 1 351 1 69 1 119 1 70 1 374 1 
34 1 87 1 286 1 
34 1 87 1 278 1 
87 3 25 1 286 2 19 1 278 1 315 1 
87 2 286 1 19 1 232 1 278 1 315 1 
87 2 286 1 19 1 278 1 315 2 
15 1 16 1 266 2 96 1 121 3 174 2 123 2 177 2 269 1 206 5 106 1 126 1 5 1 211 4 180 3 254 1 29 1 255 1 83 1 188 1 132 2 243 1 64 1 36 1 301 1 37 1 9 1 261 1 11 1 67 5 117 1 137 1 
15 6 95 1 327 1 16 1 266 5 96 3 121 9 174 6 175 1 123 6 4 1 206 9 105 1 106 4 126 2 53 5 211 7 5 1 180 8 29 2 255 2 83 3 237 5 132 6 243 3 64 1 301 2 9 3 261 3 11 1 136 1 67 9 117 3 137 2 373 1 
95 1 266 3 96 1 121 4 174 2 123 2 177 1 269 1 206 3 106 1 126 1 211 2 180 3 29 1 255 1 188 1 83 1 132 2 243 1 301 1 9 1 261 1 11 1 67 3 117 2 137 1 
95 1 266 4 96 2 121 7 174 4 175 1 123 4 177 2 206 4 269 1 106 2 126 1 211 3 180 5 29 1 255 1 188 1 83 2 132 4 243 2 301 1 9 2 261 2 11 1 136 1 67 4 117 3 137 1 373 1 
264 1 118 1 120 1 
118 1 321 1 
218 1 
79 1 118 1 372 1 
58 1 118 1 
118 1 372 1 
79 1 18 1 88 1 118 3 372 1 120 2 
96 1 217 2 82 1 187 1 235 1 189 1 192 3 99 3 100 1 163 4 243 1 360 1 336 1 244 1 138 2 139 7 353 1 
96 1 217 2 82 1 187 1 235 1 189 1 192 3 99 3 100 1 163 4 243 1 360 1 336 1 244 1 138 2 139 7 353 1 
96 1 217 2 82 1 187 1 235 1 189 1 192 3 99 3 100 1 163 4 243 1 336 1 360 1 208 1 244 1 138 2 139 7 353 1 
324 1 96 4 329 1 99 10 100 2 336 1 360 1 124 1 153 1 296 1 181 4 317 2 344 1 217 3 235 1 82 2 187 2 83 3 59 1 189 1 192 15 113 1 31 1 163 16 243 4 84 1 114 3 261 3 9 3 244 2 139 31 138 5 320 1 353 5 
155 1 124 1 317 2 344 1 153 1 244 1 217 1 305 1 187 1 139 1 113 1 163 1 
71 1 286 1 331 1 250 1 357 1 48 1 151 1 3 1 25 1 56 1 157 1 182 2 277 1 366 1 278 1 63 2 241 1 34 1 258 1 87 2 10 1 66 1 199 1 263 1 116 1 14 1 140 1 306 1 42 1 323 1 
203 1 71 1 286 1 331 1 250 1 357 1 48 1 151 1 3 1 25 1 76 1 56 1 157 1 298 1 182 3 277 1 366 1 278 1 63 3 241 1 34 1 87 2 10 1 199 1 263 1 116 1 14 1 306 2 42 1 323 1 
203 1 286 1 331 1 250 1 357 1 48 1 3 1 25 1 56 1 157 1 298 1 182 2 277 1 366 1 278 1 63 2 241 1 34 1 87 2 10 1 263 1 116 1 14 1 306 2 42 1 
71 1 285 1 331 2 250 2 357 1 48 1 228 1 127 1 294 1 76 1 341 1 157 2 182 1 277 1 63 1 166 1 10 2 263 1 168 1 14 1 118 1 372 1 323 1 
157 1 71 1 182 1 298 1 286 1 277 1 331 1 250 1 278 1 357 1 48 1 63 1 3 1 151 1 34 1 258 1 87 2 199 1 66 1 10 1 25 1 263 1 14 1 42 1 56 1 323 1 
332 1 
15 2 255 1 16 1 368 1 357 1 132 1 206 2 301 1 262 1 263 1 67 2 5 1 137 1 294 1 14 1 322 1 
15 2 16 1 201 1 266 1 21 1 270 1 206 3 209 1 128 1 231 1 275 1 216 1 130 1 159 1 279 1 303 1 197 2 11 1 200 1 169 1 67 3 68 1 142 1 374 1 
275 1 201 1 266 1 216 1 159 1 130 1 279 1 206 2 270 1 303 1 197 3 11 1 209 1 200 1 128 1 67 2 169 1 68 1 109 1 142 1 374 1 
15 2 16 1 201 1 266 1 21 1 270 1 206 3 209 1 51 1 128 1 231 1 109 1 275 1 216 1 130 1 159 1 279 1 303 1 197 3 11 1 200 1 169 1 67 3 68 1 142 1 374 1 
325 1 201 1 102 1 206 5 207 1 209 1 51 4 293 1 5 1 339 1 109 2 255 1 216 2 159 1 160 1 115 1 303 1 301 1 11 2 67 5 169 1 117 2 351 1 68 1 119 1 15 7 173 2 16 3 266 2 21 4 270 1 271 1 128 1 272 1 180 1 231 1 314 1 27 2 362 1 275 1 130 1 132 1 318 1 32 2 279 2 134 2 197 4 200 2 137 1 142 1 374 2 
201 1 102 1 206 4 207 1 209 1 51 2 5 1 109 2 255 1 216 1 159 1 7 1 303 1 301 1 11 2 67 4 169 1 117 2 68 1 15 4 173 2 16 2 266 3 121 2 21 2 270 1 128 1 180 1 27 2 275 1 130 1 132 1 32 2 279 1 134 2 197 4 200 1 137 1 142 1 374 1 
325 1 201 1 102 1 206 4 207 1 209 1 51 2 293 1 5 1 339 1 109 2 255 1 216 2 159 1 160 1 115 1 303 1 301 1 11 2 67 4 169 1 117 2 351 1 68 1 119 1 15 4 173 2 16 2 266 2 21 2 270 1 271 1 128 1 272 1 180 1 27 2 362 1 275 1 130 1 132 1 32 2 279 2 134 2 197 4 200 2 137 1 142 1 374 2 
325 1 201 1 102 1 206 4 207 1 209 1 51 2 293 1 5 1 339 1 109 2 255 1 216 2 159 1 160 1 115 1 303 1 301 1 11 2 67 4 169 1 117 2 351 1 68 1 119 1 15 4 173 2 16 2 266 2 21 2 270 1 271 1 128 1 272 1 180 1 27 2 362 1 275 1 130 1 132 1 32 2 279 2 134 2 197 4 200 2 137 1 142 1 374 2 
325 1 201 1 97 2 102 1 206 4 209 1 51 2 293 1 5 1 339 1 109 2 253 1 255 1 216 2 159 1 160 1 115 1 303 1 301 1 11 2 67 4 169 1 351 1 68 1 119 1 15 4 16 2 266 2 121 2 21 2 270 1 271 1 229 2 128 1 180 1 275 1 130 1 132 1 30 1 32 2 279 2 134 2 197 4 200 2 319 1 137 1 142 1 374 2 
325 1 201 1 102 1 206 4 207 1 51 3 209 1 293 1 5 1 339 1 109 3 255 1 216 2 159 1 160 1 115 1 303 1 301 1 11 2 67 4 169 1 117 2 351 1 68 1 119 1 15 5 173 2 16 2 266 2 21 3 270 1 271 1 128 1 272 1 180 1 314 1 27 2 362 1 275 1 130 1 132 1 32 2 279 2 134 2 197 5 200 2 137 1 142 1 374 2 
325 1 201 1 102 1 206 4 207 1 51 3 209 1 293 1 5 1 339 1 109 3 255 1 216 2 159 1 160 1 115 1 303 1 301 1 11 2 67 4 169 1 117 2 351 1 68 1 119 1 15 5 173 2 16 2 266 2 21 3 270 1 271 1 128 1 272 1 180 1 314 1 27 2 362 1 275 1 130 1 132 1 32 2 279 2 134 2 197 5 200 2 137 1 142 1 374 2 
15 4 16 2 201 1 266 2 121 2 97 2 21 2 102 1 270 1 206 4 51 2 209 1 229 2 128 1 5 1 180 1 109 2 275 1 255 1 216 1 159 1 130 1 132 1 32 2 30 1 7 1 279 1 301 1 303 1 134 2 197 4 11 2 200 1 169 1 67 4 137 1 68 1 142 1 374 1 
344 1 317 2 96 1 82 2 189 1 192 3 99 2 100 2 163 2 113 1 243 1 103 1 104 1 124 1 360 1 336 1 125 1 153 1 264 1 139 5 138 2 282 2 
17 1 267 1 99 3 104 2 103 1 124 2 153 2 296 2 181 4 317 4 344 2 365 12 131 12 83 3 192 5 113 2 163 10 243 3 84 1 257 1 35 1 167 1 114 3 261 3 198 1 13 1 170 12 139 15 353 3 282 1 
310 1 267 1 22 1 104 1 103 1 124 1 153 1 293 1 340 1 154 1 344 1 317 2 216 1 131 1 192 1 113 1 163 1 257 1 35 1 115 1 200 1 139 2 374 1 
245 1 144 1 48 1 99 3 103 2 104 2 153 2 293 1 294 1 340 1 344 2 216 2 113 2 163 3 164 1 257 1 115 1 221 1 259 1 261 1 263 1 12 1 14 1 170 2 118 1 353 2 309 1 267 1 310 1 357 1 268 1 73 1 124 2 79 1 317 4 365 2 277 1 131 2 83 1 192 2 243 1 200 1 139 5 138 1 372 1 374 2 
246 1 98 1 267 1 285 1 357 2 48 2 333 1 104 1 103 1 124 1 153 1 294 1 79 1 317 2 344 1 184 1 277 3 192 1 240 1 113 1 163 1 33 1 165 1 166 1 35 1 263 2 14 2 139 2 118 2 372 2 
96 1 99 1 104 1 103 1 124 1 153 1 293 1 339 1 317 2 344 1 216 1 365 1 299 1 131 1 83 1 60 1 192 2 113 1 163 1 243 1 257 1 115 1 261 1 9 1 200 1 170 1 138 1 139 3 374 1 
344 1 317 2 256 1 365 1 131 1 99 1 113 1 163 2 243 1 103 1 104 1 124 1 125 1 261 1 153 1 170 1 139 2 353 1 
344 1 317 2 96 1 365 1 131 1 192 2 99 1 113 1 103 1 104 1 124 1 125 1 9 1 153 1 170 1 138 1 139 2 223 1 
96 1 99 2 104 1 103 1 124 1 125 1 153 1 317 2 344 1 365 2 83 1 131 2 192 2 163 2 113 1 243 1 261 1 9 1 170 2 139 4 138 1 353 1 
344 1 317 2 256 1 365 1 184 1 131 1 99 1 113 1 163 2 243 1 103 1 104 1 124 1 261 1 153 1 170 1 139 2 353 1 
344 1 317 2 96 1 365 1 184 1 131 1 192 2 99 1 113 1 103 1 104 1 124 1 9 1 153 1 170 1 138 1 139 2 223 1 
344 1 317 2 365 1 184 1 131 1 83 1 99 1 113 1 163 2 243 1 103 1 104 1 124 1 261 1 153 1 170 1 139 2 353 1 
344 1 317 2 365 1 131 1 83 1 99 1 113 1 163 2 243 1 103 1 104 1 124 1 261 1 153 1 170 1 139 2 353 1 
309 1 267 1 357 1 48 1 103 1 104 1 124 1 153 1 294 1 79 1 344 1 317 2 216 1 277 1 192 1 163 1 113 1 35 1 221 1 259 1 12 1 263 1 14 1 139 2 118 1 372 1 282 1 374 1 
94 1 267 1 357 1 48 1 149 1 103 1 104 1 124 1 153 1 361 1 294 1 79 1 344 1 317 2 216 1 277 1 192 1 163 1 113 1 35 1 12 1 263 1 14 1 139 2 118 1 372 1 282 1 374 1 
344 1 317 2 365 1 131 1 83 1 99 1 113 1 163 2 243 1 257 1 103 1 104 1 124 1 261 1 153 1 170 1 139 2 353 1 
309 1 357 1 48 1 99 1 268 1 103 1 104 1 124 1 153 1 79 1 344 1 317 2 216 1 365 1 131 1 277 1 83 1 163 2 113 1 243 1 221 1 259 1 261 1 12 1 263 1 170 1 14 1 139 2 140 1 118 1 372 1 353 1 374 1 
99 1 104 1 103 1 124 1 153 1 293 1 339 1 317 2 344 1 216 1 365 1 83 1 131 1 60 1 113 1 163 2 243 1 257 1 115 1 261 1 200 1 170 1 139 2 265 1 353 1 374 1 
96 3 1 1 176 2 99 6 227 1 2 1 124 2 153 2 54 2 28 1 296 1 181 2 317 4 344 2 80 1 83 3 192 10 113 2 163 9 243 3 84 1 114 1 196 1 261 3 9 3 305 1 138 3 139 19 141 1 353 3 
96 2 287 1 20 1 176 4 72 1 99 4 227 2 2 1 124 3 153 3 54 1 212 1 28 1 181 2 317 6 344 3 80 2 59 2 83 3 192 12 239 1 113 3 163 14 243 3 84 2 114 2 261 3 9 2 305 1 138 2 139 26 141 1 353 2 354 1 
247 1 96 5 287 1 20 1 1 1 72 1 176 4 99 8 100 1 227 2 2 1 336 1 360 1 124 3 153 3 54 1 212 1 28 1 296 1 181 4 317 6 344 3 80 1 217 1 82 1 59 1 83 4 189 1 192 21 239 1 113 3 163 20 243 5 84 3 114 3 261 4 9 4 305 1 138 4 139 41 141 1 354 1 353 4 
247 1 96 4 287 1 20 1 1 1 72 1 176 4 99 7 100 1 227 2 2 1 336 1 360 1 124 4 153 4 54 1 212 1 28 1 296 1 181 4 317 8 344 4 80 1 217 1 82 1 59 2 83 4 189 1 192 18 239 1 113 4 163 20 243 5 84 3 114 3 261 4 9 3 305 1 138 4 139 38 141 1 354 1 353 3 
96 8 287 1 20 1 72 1 176 4 99 14 100 1 227 1 2 1 336 1 360 1 124 2 153 2 54 1 212 1 28 1 296 2 181 4 317 4 344 2 80 1 217 1 82 1 59 1 83 7 189 1 192 25 239 1 113 2 163 27 243 8 84 2 114 4 261 7 9 7 198 2 305 1 138 7 139 52 141 1 354 1 353 7 
23 1 371 1 195 1 292 1 230 1 238 1 352 1 69 1 273 1 224 1 
47 1 338 1 
93 1 371 1 195 1 38 1 292 1 238 1 90 1 69 1 273 1 
191 1 89 1 
281 1 370 1 288 1 
325 1 45 1 216 1 122 1 62 1 194 1 279 1 115 1 271 1 200 1 293 1 108 1 351 1 339 1 233 1 78 1 119 1 70 1 374 1 
325 1 45 1 216 1 122 1 62 1 194 1 279 1 115 1 271 1 200 1 293 1 108 1 351 1 339 1 233 1 78 1 119 1 70 1 374 1 
325 1 45 1 216 1 122 1 62 1 194 1 279 1 115 1 271 1 200 1 293 1 108 1 351 1 339 1 233 1 78 1 119 1 70 1 374 1 
191 1 89 1 370 1 
191 1 89 1 370 1 
281 1 288 1 
281 1 370 1 288 1 
183 1 204 1 
45 1 248 1 47 1 204 1 206 1 106 1 292 1 293 2 211 1 108 1 338 1 273 1 216 2 183 1 346 1 238 1 62 1 371 1 195 1 36 1 115 2 37 1 200 2 67 1 69 1 282 1 374 2 
267 1 357 2 48 1 148 1 333 2 104 1 103 1 313 1 50 1 124 1 153 1 52 1 55 1 344 1 317 2 216 2 277 1 192 1 113 1 163 1 33 1 257 1 35 1 263 2 200 2 14 2 139 2 118 1 372 1 43 1 374 2 
215 1 157 1 81 1 298 1 286 1 277 1 278 1 357 2 48 1 369 1 3 1 34 1 87 2 199 1 25 1 263 2 14 2 140 1 42 1 
157 1 81 1 298 1 286 1 277 1 278 1 357 1 48 1 3 1 34 1 87 2 199 1 25 1 263 1 14 1 213 1 42 1 
92 1 157 1 285 1 277 1 357 1 48 1 369 1 166 1 263 1 127 1 294 1 14 1 118 1 372 1 
215 1 157 1 81 1 298 1 286 1 277 1 278 1 357 1 48 1 369 1 3 1 34 1 87 2 199 1 25 1 263 1 14 1 42 1 
280 1 
295 1 266 1 11 1 264 1 180 1 132 1 162 1 
15 1 173 1 16 1 266 2 121 1 207 1 206 1 5 1 180 1 27 1 255 1 132 1 301 1 11 1 67 1 117 1 137 1 
79 1 255 1 343 1 57 1 18 1 277 2 357 1 48 1 301 1 263 1 5 1 137 1 294 1 14 1 118 1 372 1 321 1 
15 1 16 1 266 5 121 6 96 2 174 5 20 1 72 1 123 5 206 1 126 1 5 2 180 8 212 1 342 1 255 2 234 1 181 1 316 2 83 2 368 1 367 1 132 5 239 1 243 2 84 1 301 2 114 1 261 2 9 2 11 2 67 1 137 2 117 3 354 1 
325 1 96 1 46 1 100 1 206 1 271 1 293 1 5 1 180 2 339 1 362 1 255 1 234 1 316 2 216 1 82 1 189 1 132 2 243 2 279 1 301 1 115 1 200 1 67 1 137 1 351 1 119 1 374 1 
295 1 255 1 301 1 266 1 11 1 137 1 5 1 180 1 132 1 162 1 
234 1 144 1 316 2 266 5 121 10 96 2 174 5 83 2 132 5 123 5 243 2 261 2 9 2 117 5 180 5 
15 1 206 1 16 1 266 1 11 1 67 1 
15 2 255 1 16 1 368 1 357 1 132 1 206 1 301 1 262 1 263 1 67 1 294 1 14 1 5 1 137 1 129 1 322 1 
309 1 267 1 357 1 48 1 103 1 104 1 124 1 153 1 293 2 294 1 339 2 79 1 317 2 344 1 216 3 111 1 277 1 192 1 113 1 115 2 221 1 259 1 263 1 200 2 12 1 14 1 139 1 118 1 372 1 119 1 282 1 374 3 
255 1 266 4 121 4 174 2 217 1 368 1 132 2 123 2 301 1 11 2 126 1 117 2 5 1 137 1 180 1 
371 1 195 1 356 1 
371 1 195 1 356 1 
371 1 195 1 356 1 
91 1 371 1 195 1 183 1 230 1 
335 1 371 1 195 1 
335 1 371 1 195 1 
335 1 371 1 195 1 
371 1 195 1 
292 1 273 1 
344 2 317 4 96 1 217 1 82 1 59 1 189 1 192 4 99 3 100 1 163 4 113 2 243 1 124 2 360 1 336 1 153 2 139 8 138 2 353 1 
243 1 336 1 360 1 96 1 217 1 82 1 264 1 139 6 189 1 138 2 192 3 99 2 100 1 163 3 
344 1 317 2 96 1 83 1 192 2 99 2 113 1 163 2 243 1 290 1 124 1 9 1 261 1 153 1 138 1 139 4 353 1 
296 1 181 2 96 1 83 1 192 4 99 2 163 3 243 1 84 1 114 1 9 1 261 1 138 1 139 7 353 1 
17 1 96 3 99 9 100 2 336 1 360 1 124 2 24 1 153 2 296 1 181 2 344 2 317 4 217 1 82 2 83 2 59 2 189 1 192 12 163 11 113 2 243 3 114 2 261 2 9 2 198 1 139 23 138 5 353 4 
181 1 139 1 192 1 
114 1 139 1 163 1 
144 1 317 2 344 1 96 1 83 1 192 3 99 3 113 1 163 3 243 1 290 1 124 1 261 1 9 1 153 1 139 6 138 2 353 1 
96 2 20 1 72 1 99 2 124 1 153 1 212 1 181 1 317 2 344 1 83 2 192 6 239 1 113 1 163 6 243 2 84 1 114 1 261 2 9 2 305 1 139 12 138 1 353 1 354 1 
96 1 82 1 189 1 192 3 99 2 100 1 163 3 243 1 139 6 138 1 353 1 
344 1 317 2 82 1 59 1 192 2 99 2 100 1 163 1 113 1 336 1 124 1 360 1 24 1 153 1 138 1 139 3 353 1 
317 2 344 1 96 2 46 1 82 2 189 1 192 5 99 5 100 2 113 1 163 5 243 2 124 1 153 1 305 1 138 3 139 10 353 2 
344 1 317 2 99 1 113 1 163 2 243 1 124 1 261 1 153 1 305 1 139 2 353 1 
344 1 317 2 96 1 83 1 192 2 99 2 113 1 163 2 243 1 124 1 9 1 261 1 153 1 305 1 138 1 139 4 353 1 
344 3 317 6 82 1 59 1 1 1 192 2 99 2 100 1 113 3 163 1 124 3 24 1 153 3 305 1 139 3 138 1 353 1 
324 1 96 5 329 1 1 1 99 12 100 3 290 1 336 1 360 1 124 5 24 1 153 5 296 1 181 4 317 10 344 5 217 1 82 3 59 2 83 3 189 2 192 18 113 5 163 16 243 5 84 1 114 3 261 3 9 3 305 1 320 1 139 34 138 7 353 5 
181 1 344 1 317 2 96 1 217 1 82 1 189 1 72 1 192 4 99 2 100 1 163 4 113 1 243 1 84 1 336 1 360 1 124 1 114 1 153 1 305 1 138 2 139 8 
96 1 72 1 99 3 100 1 290 1 336 1 360 1 124 2 153 2 296 1 181 2 317 4 344 2 217 1 82 1 83 1 189 1 192 5 113 2 163 6 243 2 84 1 114 1 261 1 305 1 138 2 139 11 353 1 
96 3 20 1 72 1 99 4 100 1 290 1 336 1 360 1 124 3 153 3 212 1 181 1 317 6 344 3 217 1 82 1 83 2 59 1 189 1 192 10 239 1 113 3 163 9 243 3 84 1 114 1 261 2 9 2 305 1 139 19 138 3 353 1 354 1 
96 2 20 1 72 1 99 5 100 1 290 1 336 1 360 1 124 3 153 3 212 1 181 1 317 6 344 3 217 1 82 1 59 1 83 2 189 1 192 7 239 1 113 3 163 10 243 3 84 1 114 1 261 2 9 1 305 1 139 17 138 3 353 2 354 1 
181 1 344 1 317 2 96 1 217 1 82 1 189 1 72 1 192 4 99 2 100 1 163 4 113 1 243 1 84 1 336 1 360 1 124 1 114 1 153 1 305 1 138 2 139 8 
96 2 20 1 72 1 99 2 124 1 153 1 212 1 181 1 317 2 344 1 83 2 192 6 239 1 113 1 163 6 243 2 84 1 114 1 261 2 9 2 305 1 139 12 138 1 353 1 354 1 
96 2 20 1 72 1 99 5 100 1 290 1 336 1 360 1 124 4 153 4 212 1 181 1 317 8 344 4 217 1 82 1 83 2 59 2 189 1 192 8 239 1 113 4 163 10 243 3 84 1 114 1 261 2 9 1 305 1 139 18 138 3 353 2 354 1 
96 2 20 1 72 1 1 1 99 6 124 4 153 4 212 1 181 1 317 8 344 4 83 3 59 2 192 7 239 1 113 4 163 9 243 3 84 1 114 1 261 3 9 2 305 1 139 16 138 3 353 3 354 1 
96 1 82 3 189 1 192 4 99 6 100 3 163 3 243 1 360 1 336 2 139 7 138 3 353 3 
96 2 20 1 72 1 1 1 99 4 100 1 336 1 360 1 124 4 153 4 212 1 181 1 317 8 344 4 217 1 82 1 83 2 59 2 189 1 192 8 239 1 113 4 163 10 243 3 84 1 114 1 261 2 9 1 305 1 139 18 138 3 353 1 354 1 
275 1 260 1 216 1 200 1 61 1 282 1 374 1 
275 1 307 1 156 1 216 1 185 1 61 1 289 1 260 1 200 1 172 1 282 1 374 1 
166 1 263 1 285 1 264 1 277 1 14 1 294 1 118 1 357 1 48 1 372 1 
79 1 216 2 277 1 357 1 48 1 115 1 221 1 12 1 200 1 263 1 293 1 294 1 14 1 118 1 372 1 340 1 282 1 374 2 
357 1 48 1 291 1 293 1 340 1 79 2 216 2 58 1 277 1 279 1 221 1 115 2 263 1 304 1 200 2 12 1 14 1 68 1 118 3 372 2 142 1 282 1 374 2 
312 1 357 2 48 1 149 1 291 1 293 1 340 1 79 2 216 2 58 1 277 1 279 1 115 2 263 2 304 1 200 2 12 1 14 2 68 1 118 3 372 2 142 1 282 1 374 2 
15 1 143 1 266 1 312 1 357 3 48 1 358 1 206 2 291 1 128 1 294 1 79 1 58 1 277 1 11 1 263 3 304 1 67 2 14 3 118 4 372 1 120 1 321 1 
79 1 284 1 58 1 277 1 357 1 48 1 206 1 291 1 304 1 263 1 67 1 14 1 118 4 372 1 321 1 120 1 
308 1 263 1 277 1 14 1 357 1 48 1 
246 1 79 1 308 1 145 1 18 1 298 1 98 1 277 3 300 1 357 6 333 1 48 2 150 1 220 1 263 7 294 2 14 7 55 1 140 1 118 3 372 2 
96 1 309 1 357 1 48 1 99 2 100 2 268 1 104 2 103 2 336 1 360 1 124 2 153 2 52 1 293 1 340 1 79 1 344 2 317 4 216 2 82 2 277 1 189 1 192 3 163 2 113 2 243 1 164 1 257 1 115 1 221 1 259 1 12 1 200 1 263 1 14 1 139 5 138 2 118 1 140 1 372 1 282 2 374 2 
283 1 255 1 284 1 357 1 359 1 206 1 301 1 263 1 67 1 211 1 5 1 137 1 294 1 14 1 118 2 26 1 129 1 120 1 321 1 
79 1 308 1 57 1 18 1 277 2 218 1 357 1 48 1 263 1 14 1 118 1 372 1 120 1 
285 1 312 1 277 1 357 4 48 1 166 1 263 4 210 1 294 1 14 4 140 1 118 1 372 1 
246 1 364 1 79 1 98 1 277 2 357 2 48 1 240 1 165 1 304 1 263 2 14 2 118 1 372 1 
34 1 87 1 263 1 277 1 14 1 294 1 278 1 357 1 48 1 42 1 
313 1 298 1 263 2 277 1 14 2 55 1 118 1 357 2 140 1 48 1 372 1 
285 1 277 2 357 4 300 1 48 2 220 1 166 1 304 1 263 5 210 1 294 1 14 5 55 1 140 1 118 3 372 2 
285 1 277 2 357 4 48 2 220 1 166 1 304 1 263 5 210 1 294 1 14 5 55 1 140 1 118 3 171 1 372 2 
79 1 216 2 277 1 357 1 48 1 149 1 115 1 12 1 200 1 263 1 293 1 294 1 14 1 118 1 372 1 340 1 282 1 374 2 
246 1 79 1 145 1 18 1 98 1 277 2 357 1 48 1 304 1 263 1 14 1 118 1 372 1 
326 1 152 1 349 1 44 1 282 1 
325 1 326 1 226 1 266 1 206 2 271 1 152 1 293 1 128 1 211 1 339 1 214 1 110 1 216 1 279 2 115 1 303 1 349 1 11 1 200 1 67 2 68 1 351 1 41 1 142 1 119 1 44 1 374 1 
326 1 50 1 216 1 152 1 200 1 148 1 43 1 44 1 374 1 
326 1 214 1 110 1 
116 1 264 1 366 1 241 1 
182 1 71 1 116 1 366 1 63 1 241 1 323 1 
331 1 250 1 63 1 
71 1 182 3 147 2 345 1 249 1 190 1 366 1 63 3 241 1 258 1 116 1 323 1 
182 2 71 1 116 1 366 1 306 1 101 1 63 2 241 1 323 1 
225 1 71 1 182 1 286 1 366 1 112 1 63 1 34 1 258 1 87 1 323 1 
258 1 182 1 71 1 116 1 366 1 63 1 323 1 
258 1 182 1 71 1 116 2 63 1 241 1 323 1 
71 2 182 2 366 1 63 2 242 1 258 1 40 1 116 1 274 1 323 2 
225 1 71 1 182 3 366 2 161 1 63 3 241 1 49 1 258 1 8 1 116 1 306 2 323 1 
71 1 182 2 286 1 366 1 278 1 63 2 241 1 34 1 258 1 85 1 87 2 25 1 116 1 306 1 323 1 
225 1 71 2 182 4 366 2 63 4 101 1 241 1 49 1 75 1 258 1 116 1 306 2 323 2 
258 1 182 1 71 1 116 1 366 1 63 1 241 1 323 1 
225 1 147 1 182 4 71 1 345 1 249 1 366 3 63 4 241 2 49 1 135 1 116 2 306 2 323 1 
348 1 258 1 178 1 182 2 71 1 116 1 222 1 366 1 306 1 63 2 241 1 323 1 
71 1 182 3 147 2 345 1 249 2 366 1 236 1 63 3 241 1 258 1 116 1 323 1 
202 2 146 1 107 1 366 2 
355 1 258 1 182 1 71 1 63 1 323 1 
258 1 8 1 182 2 71 1 116 1 366 1 306 1 63 2 241 1 323 1 
205 1 
258 1 182 1 71 1 116 1 366 1 63 1 241 1 323 1 
258 1 8 1 147 1 182 3 71 1 116 1 366 1 306 1 63 3 241 1 323 1 
225 1 135 1 366 1 49 1 
116 1 366 1 

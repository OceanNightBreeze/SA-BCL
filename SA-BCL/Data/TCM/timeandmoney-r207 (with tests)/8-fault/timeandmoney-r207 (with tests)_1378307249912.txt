#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 280 (186,295) (186,295) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 280 (186,295) (186,295) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 280 (186,295) (186,295) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 280 (186,295) (186,295) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 1 138 1 356 1 55 1 307 1 280 1 151 1 297 1 245 1 295 1 202 1 
186 1 138 1 356 1 55 1 307 1 280 1 151 1 297 1 245 1 295 1 202 1 
186 1 138 1 356 1 55 1 307 1 280 1 151 1 297 1 245 1 295 1 202 1 
186 1 138 1 356 1 55 1 307 1 280 1 151 1 297 1 245 1 295 1 202 1 
178 1 24 1 356 1 306 2 307 1 2 3 168 1 138 4 124 1 263 3 198 1 158 1 128 1 302 1 245 4 222 1 159 2 202 1 
178 1 24 1 356 1 307 1 2 1 151 1 353 1 138 2 55 1 124 1 158 1 245 2 100 1 130 1 202 1 48 1 
24 1 138 3 356 1 263 1 307 2 2 2 372 1 151 1 158 1 159 1 302 1 245 3 202 2 
178 1 24 1 306 2 356 1 307 2 2 5 372 1 85 1 151 1 272 1 168 1 138 9 124 1 263 7 198 1 158 1 128 1 129 1 222 1 346 1 245 9 302 3 159 4 202 2 
178 1 24 1 306 2 356 1 307 2 2 5 372 1 85 1 151 1 272 1 168 1 138 9 124 1 263 7 198 1 158 1 128 1 129 1 222 1 346 1 245 9 302 3 159 4 202 2 
231 1 146 1 74 1 
231 1 292 1 154 2 
59 1 13 2 351 2 369 2 65 2 120 2 75 1 238 2 
119 1 183 1 319 1 360 1 73 1 361 1 120 3 75 1 98 2 228 2 300 2 54 1 7 1 367 1 57 1 369 3 59 1 13 2 326 1 165 1 371 1 137 1 351 2 65 2 238 2 44 1 241 1 197 1 261 1 140 1 334 1 173 1 172 1 144 2 200 1 47 2 177 1 
13 1 351 1 209 1 369 1 65 1 237 1 120 1 75 1 238 1 49 1 
231 1 13 1 14 1 91 1 236 1 74 1 120 1 76 1 218 1 237 1 341 1 366 1 160 1 369 1 
231 1 13 1 14 1 91 2 351 1 74 1 65 1 120 1 76 1 218 1 237 1 238 1 341 2 366 1 369 1 
341 1 374 1 91 1 232 1 321 1 
91 2 74 1 75 1 120 1 341 2 369 1 209 1 81 1 231 1 13 1 232 1 351 1 166 1 65 1 237 1 238 1 374 1 311 1 49 1 
341 1 374 1 91 1 
13 1 91 1 232 1 351 1 65 1 237 1 75 1 120 1 238 1 341 1 209 1 369 1 81 1 49 1 
231 1 
91 2 74 1 75 1 120 1 341 2 369 1 209 1 81 1 231 1 13 1 370 1 232 1 351 1 65 1 237 1 238 1 374 1 311 1 49 1 
91 5 226 1 357 1 3 5 250 1 359 2 227 1 153 4 74 2 120 1 75 1 341 5 33 1 283 2 209 1 369 1 80 1 81 1 162 1 304 1 13 1 231 2 42 1 232 2 233 1 135 2 351 1 65 1 237 1 238 1 107 2 108 1 19 2 374 2 311 1 22 2 49 1 145 1 
59 1 146 1 
59 2 189 1 13 2 96 1 351 1 65 1 120 2 238 1 369 2 
30 1 170 1 148 1 
59 1 371 1 319 1 361 1 120 1 98 1 261 1 197 1 228 1 172 1 367 1 57 1 88 1 369 1 47 1 177 1 
13 1 371 1 319 1 351 1 361 1 18 1 120 2 238 1 98 1 197 1 261 1 228 1 170 1 172 1 367 1 57 1 369 2 47 1 287 1 177 1 
59 1 13 3 351 3 65 1 369 3 18 1 120 3 238 3 
13 1 351 1 209 1 369 1 237 1 120 1 238 1 
189 1 13 1 96 1 351 1 369 1 65 1 237 1 120 1 238 1 
91 1 183 1 319 1 96 1 360 1 361 1 76 1 120 4 75 1 98 1 122 1 341 1 228 1 300 1 54 1 366 1 7 1 367 1 57 1 369 4 287 1 347 1 59 1 13 3 14 1 165 1 371 1 137 1 351 3 65 2 18 1 218 1 237 1 238 3 44 1 241 1 197 1 261 1 140 1 173 1 172 1 144 2 47 1 177 1 
59 1 13 2 236 1 351 1 369 2 120 2 18 1 161 1 238 1 
231 1 13 3 91 1 14 1 96 1 351 3 65 1 237 1 18 2 120 3 76 1 218 1 238 3 341 1 298 1 366 1 369 3 287 1 347 1 
13 2 96 1 351 2 65 1 18 1 120 2 238 2 30 1 170 1 369 2 
59 1 371 1 319 1 361 1 120 1 98 1 261 1 197 1 228 1 172 1 367 1 57 1 369 1 47 1 177 1 
59 1 371 1 319 1 120 1 98 1 261 1 197 1 228 1 220 1 172 1 171 1 367 1 369 1 47 1 177 1 
119 2 148 2 360 1 30 2 54 1 300 4 125 1 254 1 7 1 36 1 283 1 208 1 165 1 212 1 329 1 193 1 44 1 241 1 19 1 312 1 170 2 173 2 335 1 144 2 
13 1 190 1 351 1 369 1 237 1 218 1 120 1 238 1 
59 1 13 5 96 1 236 1 351 4 106 1 65 1 18 2 120 5 238 4 56 1 369 5 161 1 287 1 
13 2 190 1 351 2 209 1 369 2 237 1 120 2 238 2 
275 1 336 1 
275 1 336 1 
288 1 134 1 
288 1 134 1 
288 1 134 1 
275 1 213 1 336 1 
288 1 275 2 101 1 134 1 20 1 336 2 
275 1 110 1 336 1 
275 1 213 1 336 1 
275 1 213 1 336 1 
275 1 102 1 336 1 
275 1 102 1 336 1 
275 1 102 1 336 1 
231 1 91 2 15 1 101 1 4 1 289 2 251 1 339 3 341 2 275 2 66 2 265 2 156 1 301 1 207 2 368 2 336 2 9 1 112 1 
269 1 59 1 13 2 147 1 118 1 91 1 309 1 258 1 84 1 289 1 351 2 120 2 339 1 238 2 121 1 341 1 275 1 265 1 110 1 207 1 368 1 336 1 9 1 369 2 
178 1 124 1 198 1 
178 1 124 1 48 1 
178 3 270 1 63 1 198 2 337 1 48 1 
178 2 270 1 63 1 198 1 113 1 48 1 
178 2 270 1 198 1 63 2 48 1 
223 2 116 1 91 5 3 2 27 1 227 1 153 3 74 1 154 3 121 1 341 5 365 1 127 1 283 1 231 2 232 4 258 1 212 1 135 1 84 1 330 2 354 2 107 1 219 1 262 1 19 1 374 1 311 1 292 1 335 1 111 1 22 1 
91 2 321 1 74 1 120 1 75 1 341 2 209 1 369 1 81 1 231 1 13 1 232 2 62 1 217 1 351 1 65 1 237 1 238 1 374 1 201 1 49 1 
223 1 116 1 91 3 3 2 153 3 74 1 154 4 121 1 341 3 365 1 283 1 231 3 42 1 232 2 135 1 212 1 330 2 354 2 107 1 262 1 219 1 19 1 292 2 335 1 111 1 22 1 
223 2 116 1 91 4 3 4 152 1 153 5 74 1 154 7 121 2 341 4 365 1 283 2 325 1 231 4 42 1 232 3 135 1 212 2 330 4 352 1 354 4 107 1 262 1 219 2 19 2 292 3 335 2 111 1 22 1 
146 1 344 1 177 1 
157 1 177 1 
216 1 
367 1 177 1 
260 1 197 1 344 2 367 1 86 1 177 3 
197 1 367 1 177 1 
94 1 177 1 
83 2 225 1 119 4 226 1 329 3 357 1 192 1 105 1 77 1 252 1 19 1 300 7 45 1 254 2 173 3 283 1 145 1 
83 2 225 1 119 4 226 1 329 3 357 1 192 1 105 1 77 1 252 1 19 1 300 7 45 1 254 2 173 3 283 1 145 1 
83 2 225 1 119 4 226 1 329 3 357 1 192 1 105 1 77 1 252 1 19 1 300 7 45 1 254 2 173 3 283 1 338 1 145 1 
115 1 182 1 119 16 225 2 226 1 357 2 360 1 77 5 342 1 252 2 54 1 300 31 31 1 254 5 35 4 324 1 283 4 83 3 165 1 212 3 329 10 192 1 105 1 331 1 44 1 219 3 19 4 45 1 173 15 375 1 243 3 144 2 335 3 145 2 
115 1 83 2 225 1 119 5 165 2 226 1 357 1 329 4 192 1 360 2 105 1 322 1 77 1 252 1 44 2 19 1 300 9 54 2 254 3 173 4 283 1 144 4 257 1 145 1 
179 1 178 2 24 1 356 1 2 1 149 1 319 1 151 1 98 1 52 1 228 1 124 1 37 1 158 1 11 1 307 1 133 1 371 1 214 1 195 1 138 2 263 1 141 1 313 1 198 1 337 1 245 2 47 1 202 1 48 1 
179 1 178 2 24 1 0 1 2 1 149 1 319 1 151 1 5 1 98 1 228 1 124 1 37 1 158 1 11 1 307 1 133 1 371 1 214 1 191 1 195 1 138 3 263 2 141 1 198 1 337 1 245 3 47 1 202 1 48 1 
179 1 178 2 24 1 0 1 2 1 149 1 319 1 151 1 98 1 228 1 124 1 37 1 158 1 11 1 371 1 214 1 191 1 195 1 138 2 263 2 198 1 337 1 245 2 47 1 48 1 
179 2 92 1 307 1 371 1 61 1 319 1 214 2 151 2 5 1 362 1 195 2 98 1 138 1 228 1 242 1 172 1 34 1 367 1 245 1 47 1 177 1 211 1 202 1 
179 1 178 2 356 1 149 1 319 1 151 1 98 1 228 1 124 1 37 1 11 1 307 1 133 1 371 1 214 1 191 1 195 1 138 1 141 1 313 1 198 1 337 1 245 1 47 1 202 1 48 1 
259 1 
203 1 90 1 92 1 91 4 3 2 150 1 153 2 51 1 154 2 206 1 98 2 341 4 6 1 160 1 13 1 14 1 16 2 218 1 107 1 311 2 264 1 172 2 175 1 22 1 267 1 177 1 116 1 25 1 319 1 227 1 120 1 76 1 29 3 228 2 366 1 282 2 367 1 39 1 369 1 41 1 131 1 231 1 371 1 135 1 328 1 236 1 237 1 374 4 292 2 242 1 293 1 199 1 294 2 47 2 
203 1 13 1 14 1 91 2 25 1 328 1 236 1 237 1 218 1 120 1 76 1 29 2 341 2 374 1 366 1 264 1 293 1 39 1 160 1 369 1 
203 1 91 3 25 1 74 1 76 1 120 1 29 3 341 3 366 1 369 1 160 1 13 1 231 1 14 1 370 1 328 1 236 1 218 1 237 1 374 1 311 1 264 1 293 1 175 1 
203 1 13 1 14 1 91 2 25 1 328 1 236 1 51 1 237 1 218 1 120 1 76 1 29 2 341 2 374 1 366 1 264 1 293 1 39 1 160 1 369 1 
203 1 91 3 25 1 74 1 51 1 75 1 120 2 76 1 29 3 341 3 366 1 79 1 39 1 209 1 160 1 369 2 81 1 231 1 13 2 14 1 370 1 328 1 351 1 236 1 65 1 218 1 237 2 238 1 374 2 311 1 264 1 293 1 175 1 49 1 
203 1 91 3 3 1 150 1 153 1 51 1 154 2 341 3 6 1 160 1 13 1 14 1 16 2 218 1 107 1 311 1 264 1 175 1 22 1 25 1 227 1 74 1 76 1 120 1 29 3 366 1 282 2 39 1 369 1 41 1 131 1 231 2 135 1 328 1 236 1 237 1 374 2 292 2 293 1 294 2 
203 1 91 4 247 1 318 1 25 1 3 1 150 1 227 1 153 1 74 1 51 2 76 1 120 1 29 4 341 4 366 1 282 2 39 2 369 1 160 1 41 2 131 1 231 1 13 1 14 1 135 1 328 1 16 2 236 1 218 1 237 1 107 1 374 4 311 2 292 2 264 1 293 1 175 2 294 2 22 1 114 1 
203 1 91 4 247 1 3 1 150 1 153 1 51 2 341 4 209 1 160 1 13 2 14 1 16 2 351 1 65 1 218 1 107 1 311 2 264 1 175 2 22 1 114 1 318 1 25 1 227 1 74 1 75 1 120 2 76 1 29 4 366 1 282 2 39 2 369 2 81 1 41 2 131 1 231 1 135 1 328 1 236 1 237 2 238 1 374 4 292 2 293 1 294 2 49 1 
203 1 91 4 3 1 150 1 153 1 51 2 154 2 341 4 253 2 155 1 209 1 160 1 210 2 13 2 14 1 16 2 351 1 65 1 218 1 107 1 311 2 264 1 175 2 22 1 114 1 25 1 227 1 74 1 75 1 120 2 76 1 29 4 366 1 276 1 39 2 369 2 81 1 231 1 135 1 328 1 236 1 237 2 238 1 374 4 293 1 143 1 294 2 49 1 
203 1 91 4 247 1 3 1 150 1 153 1 51 3 340 1 341 4 209 1 160 1 13 2 14 1 16 2 351 1 65 1 218 1 107 1 311 2 264 1 175 2 22 1 114 1 318 1 25 1 227 1 74 1 75 1 120 2 76 1 29 4 366 1 282 2 39 3 369 2 81 1 41 2 131 1 231 1 135 1 328 1 236 1 237 2 238 1 374 5 292 2 293 1 294 2 49 1 
203 1 91 4 247 1 3 1 150 1 153 1 51 3 340 1 341 4 209 1 160 1 13 2 14 1 16 2 351 1 65 1 218 1 107 1 311 2 264 1 175 3 22 1 114 1 318 1 25 1 227 1 74 1 75 1 120 2 76 1 29 5 366 1 282 2 39 3 369 2 81 1 41 2 131 1 231 1 135 1 328 1 236 1 237 2 238 1 374 5 292 2 293 1 294 2 49 1 
203 1 91 4 3 1 150 1 153 1 51 2 154 2 341 4 253 2 6 1 209 1 160 1 210 2 13 2 14 1 16 2 351 1 65 1 218 1 107 1 311 2 264 1 175 2 22 1 25 1 227 1 74 1 75 1 76 1 120 2 29 4 366 1 276 1 39 2 369 2 81 1 231 1 135 1 328 1 236 1 237 2 238 1 374 4 293 1 294 2 49 1 
146 1 119 3 148 1 357 1 226 1 360 1 30 1 54 1 300 6 254 2 7 1 283 1 59 2 83 1 165 1 329 2 192 1 105 1 44 1 241 1 312 1 19 1 170 1 173 3 144 2 145 1 
119 8 148 11 72 1 360 2 73 1 77 1 342 1 30 4 54 2 300 14 254 1 7 2 35 3 283 2 284 1 188 1 59 1 165 2 43 1 212 2 329 2 331 1 44 2 241 1 219 2 19 1 140 1 170 11 173 6 314 1 243 3 144 4 335 1 
119 1 319 1 360 1 361 1 73 1 120 2 97 1 98 1 30 1 228 1 54 1 300 2 7 1 367 1 57 1 284 1 369 2 287 1 163 1 59 1 13 1 165 1 371 1 351 1 18 1 238 1 44 1 197 1 261 1 241 1 140 1 172 1 173 1 174 1 88 1 144 2 47 1 177 1 
148 7 98 3 54 3 300 20 254 4 7 3 57 2 59 2 13 1 165 3 212 2 351 1 105 1 18 1 167 2 261 2 219 2 19 3 170 7 173 10 172 1 221 2 177 2 183 2 119 10 184 2 226 1 357 1 319 2 360 3 73 1 361 2 120 3 77 4 30 7 323 1 228 3 187 2 367 2 283 3 284 1 369 3 287 1 83 1 371 2 136 1 234 1 329 8 191 1 192 1 238 1 44 3 241 3 197 2 140 1 144 6 335 2 47 3 145 1 
92 1 296 1 98 7 52 1 300 2 54 2 7 2 345 1 13 1 165 2 60 1 64 1 351 1 18 1 312 1 355 1 173 1 172 2 109 1 316 1 177 4 119 1 319 3 360 2 73 1 120 1 228 6 367 3 369 1 371 4 191 1 238 1 239 1 44 2 241 2 197 1 242 1 140 1 139 1 142 1 144 4 244 1 200 1 47 7 
119 1 148 1 96 1 360 1 120 1 30 1 54 1 300 3 254 1 7 1 283 1 284 1 256 1 369 1 13 1 165 1 212 1 329 1 351 1 65 1 238 1 44 1 241 1 219 1 19 1 170 1 173 2 144 2 335 1 
165 1 119 2 148 1 212 1 329 1 360 1 193 1 77 1 44 1 30 1 241 1 312 1 300 2 54 1 170 1 7 1 283 1 144 2 
165 1 148 1 329 1 360 1 44 1 30 1 241 1 312 1 19 1 300 2 54 1 254 1 170 1 7 1 173 2 36 1 144 2 335 1 
119 2 148 2 360 1 77 1 30 2 54 1 300 4 254 1 7 1 283 1 165 1 212 1 329 2 44 1 219 1 241 1 312 1 19 1 170 2 173 2 144 2 335 1 
165 1 119 2 148 1 212 1 329 1 296 1 360 1 193 1 77 1 44 1 30 1 241 1 300 2 54 1 170 1 7 1 283 1 144 2 
165 1 148 1 329 1 296 1 360 1 44 1 30 1 241 1 19 1 300 2 54 1 254 1 170 1 7 1 173 2 36 1 144 2 335 1 
119 2 148 2 360 1 296 1 77 1 30 2 54 1 300 4 254 1 7 1 283 1 165 1 212 1 329 2 44 1 219 1 241 1 19 1 170 2 173 2 144 2 335 1 
119 2 148 2 360 1 77 1 30 2 300 4 54 1 254 1 7 1 283 1 165 1 212 1 329 2 44 1 219 1 241 1 19 1 170 2 173 2 144 2 335 1 
119 1 183 1 319 1 360 1 73 1 361 1 120 1 98 1 228 1 300 2 54 1 7 1 367 1 57 1 369 1 59 1 165 1 371 1 44 1 197 1 261 1 241 1 140 1 172 1 173 1 144 2 47 1 177 1 
70 1 119 1 319 1 360 1 73 1 120 1 98 1 228 1 300 2 54 1 7 1 367 1 369 1 59 1 165 1 371 1 44 1 197 1 261 1 241 1 220 1 140 1 171 1 172 1 173 1 144 2 47 1 177 1 
119 2 148 2 360 1 77 1 30 2 54 1 300 4 254 1 7 1 283 1 284 1 165 1 212 1 329 2 44 1 219 1 241 1 19 1 170 2 173 2 144 2 335 1 
119 2 183 1 148 2 319 1 360 1 361 1 120 1 77 1 98 1 30 2 52 1 228 1 300 4 54 1 254 1 7 1 367 1 283 1 57 1 369 1 165 1 371 1 212 1 329 2 44 1 197 1 261 1 241 1 219 1 19 1 170 2 173 2 221 1 335 1 144 2 47 1 177 1 
119 2 148 1 96 1 360 1 120 1 77 1 30 1 54 1 300 3 277 1 7 1 283 1 284 1 369 1 13 1 165 1 212 1 329 1 351 1 65 1 238 1 44 1 241 1 219 1 19 1 170 1 173 1 335 1 144 2 
119 9 360 2 77 3 342 1 274 1 123 1 343 1 99 1 54 2 300 19 254 3 32 1 35 2 283 3 286 1 257 1 348 2 165 2 212 3 329 6 350 1 331 1 44 2 219 3 19 3 173 10 243 1 144 4 335 3 268 2 
115 2 119 14 358 1 360 3 77 2 342 2 185 1 274 1 343 2 99 1 54 3 300 26 254 2 32 2 35 2 283 3 257 1 348 4 165 3 212 3 329 4 215 1 350 1 196 1 44 3 219 3 19 2 67 1 173 12 243 2 266 1 144 6 335 2 268 1 
342 3 343 2 300 41 54 3 99 1 254 4 257 1 348 4 305 1 165 3 212 4 215 1 350 1 105 1 219 4 19 5 67 1 173 21 266 1 268 1 115 1 119 20 358 1 357 1 226 1 360 3 77 4 185 1 274 1 123 1 32 1 35 4 283 5 83 1 329 8 192 1 331 1 196 1 44 3 243 3 335 4 144 6 145 1 
115 2 119 20 226 1 357 1 358 1 360 4 77 3 185 1 342 3 274 1 123 1 343 2 99 1 54 4 300 38 254 4 32 1 35 4 283 5 257 1 348 4 305 1 83 1 165 4 212 4 329 7 215 1 192 1 350 1 105 1 331 1 196 1 44 4 219 4 19 4 67 1 173 18 266 1 243 3 144 8 335 3 268 1 145 1 
115 1 119 27 226 1 357 1 358 1 360 2 77 7 185 1 342 2 274 1 343 1 99 1 54 2 300 52 254 7 32 1 35 4 283 8 257 1 348 4 83 1 165 2 43 2 212 7 329 14 215 1 192 1 350 1 105 1 331 2 196 1 44 2 219 7 19 8 67 1 173 25 266 1 243 4 144 4 335 7 268 1 145 1 
275 1 15 1 101 1 265 1 301 1 207 1 289 1 290 1 368 1 336 1 
118 1 110 1 
50 1 275 1 181 1 126 1 265 1 207 1 289 1 368 1 336 1 
231 1 91 1 15 1 101 1 4 1 289 1 251 1 339 2 341 1 275 1 66 1 265 1 301 1 207 1 368 1 336 1 9 1 112 1 
231 1 91 1 15 1 101 1 4 1 289 1 251 1 339 2 341 1 275 1 66 1 265 1 301 1 207 1 368 1 336 1 9 1 112 1 
231 1 91 1 15 1 101 1 4 1 289 1 251 1 339 2 341 1 275 1 66 1 265 1 301 1 207 1 368 1 336 1 9 1 112 1 
213 1 1 1 20 1 
213 1 1 1 20 1 
102 1 28 1 
102 1 20 1 28 1 
147 1 309 1 
269 1 91 1 118 1 147 1 120 2 339 1 121 1 341 1 275 1 207 1 368 1 369 2 59 1 13 2 232 1 258 1 309 1 103 1 289 1 84 1 351 2 238 2 66 1 265 1 110 1 336 1 112 1 
213 1 1 1 
102 1 20 1 28 1 
119 1 319 1 360 1 73 1 120 2 98 2 228 2 54 1 300 2 7 1 367 1 284 1 369 2 164 1 12 1 13 2 165 1 371 1 64 1 194 1 44 1 241 1 139 1 140 1 173 1 144 2 176 1 47 2 23 1 200 2 177 1 
178 2 179 1 180 1 93 1 371 1 319 1 191 1 271 1 98 2 52 1 228 2 124 1 141 1 198 1 37 1 337 1 47 2 11 1 48 1 
178 2 179 1 117 1 93 1 371 1 191 1 319 1 98 1 228 1 124 1 141 1 198 1 37 1 337 1 47 1 11 1 48 1 
179 1 92 1 371 1 319 1 271 1 363 1 98 1 228 1 242 1 172 1 34 1 367 1 47 1 177 1 
178 2 179 1 180 1 93 1 371 1 191 1 271 1 319 1 98 1 228 1 124 1 141 1 198 1 37 1 337 1 47 1 11 1 48 1 
68 1 
304 1 231 1 146 1 3 1 153 1 74 1 108 1 
91 1 3 1 227 1 153 1 74 1 154 1 341 1 282 1 41 1 131 1 231 2 135 1 107 1 311 1 374 1 292 1 22 1 
116 1 327 1 308 1 371 2 135 1 319 1 86 1 227 1 153 1 107 1 98 1 197 1 228 1 172 1 157 1 367 1 22 1 47 1 177 2 
91 1 3 5 250 1 153 8 206 1 154 6 342 1 341 1 209 1 13 1 212 2 215 1 351 1 354 5 65 1 107 2 219 2 19 2 311 1 266 1 22 2 116 1 358 1 359 2 227 2 74 2 120 1 75 1 185 1 279 1 35 1 283 2 369 1 81 1 82 1 231 5 135 2 330 5 237 1 196 1 238 1 374 1 292 3 243 1 335 2 49 1 
91 1 318 1 357 1 226 1 3 2 250 1 359 2 227 1 153 2 120 1 75 1 341 1 283 2 209 1 369 1 80 1 81 1 13 1 135 1 351 1 65 1 237 1 107 1 238 1 19 1 22 1 145 1 49 1 
304 1 231 1 135 1 3 1 227 1 153 1 74 1 107 1 108 1 22 1 
231 5 184 1 212 2 3 5 250 1 359 2 330 5 153 5 354 5 154 10 219 2 19 2 292 5 283 2 335 2 
13 1 231 1 91 1 351 1 65 1 74 1 237 1 120 1 75 1 238 1 341 1 311 1 374 1 209 1 369 1 81 1 49 1 
116 1 91 2 92 1 3 1 319 2 227 1 153 1 98 2 206 1 341 2 228 2 345 1 367 2 230 1 42 1 371 3 60 1 135 2 107 2 239 1 197 1 374 2 311 1 242 1 172 2 109 1 199 1 22 2 267 1 47 2 177 2 
183 1 319 1 360 1 361 1 120 3 75 1 98 1 228 1 300 1 54 1 7 1 367 1 57 1 369 3 59 1 13 2 165 1 371 1 137 1 351 2 65 2 238 2 44 1 261 1 197 1 241 1 140 1 173 1 172 1 144 2 47 1 177 1 
116 1 231 4 83 1 135 1 3 2 330 2 227 1 153 1 354 2 74 2 154 4 107 1 206 1 292 2 22 1 
265 1 207 1 204 1 
15 1 309 1 265 1 78 1 207 1 
265 1 207 1 204 1 
265 1 207 1 204 1 
265 1 281 1 207 1 
265 1 281 1 207 1 
265 1 281 1 207 1 
265 1 207 1 
275 1 336 1 
115 1 83 1 119 4 165 2 226 1 329 3 357 1 360 2 192 1 105 1 77 1 44 2 19 1 300 8 54 2 254 2 173 4 283 1 144 4 145 1 
83 1 146 1 119 3 357 1 329 2 226 1 192 1 105 1 19 1 300 6 254 2 173 3 283 1 145 1 
246 1 165 1 119 2 212 1 329 2 360 1 77 1 44 1 219 1 19 1 54 1 300 4 254 1 173 2 283 1 335 1 144 2 
119 3 212 1 329 2 331 1 77 1 342 1 219 1 19 1 300 7 254 1 173 4 35 2 243 1 283 1 335 1 
115 2 119 11 226 1 357 2 72 1 360 2 77 4 300 23 54 2 254 5 35 2 283 3 83 1 165 2 43 1 212 2 349 1 329 9 192 1 105 1 331 1 44 2 219 2 19 3 173 12 243 2 335 2 144 4 145 2 
300 1 173 1 35 1 
300 1 119 1 243 1 
246 1 165 1 119 3 184 1 212 1 329 3 360 1 77 1 44 1 219 1 19 1 54 1 300 6 254 2 173 3 283 1 144 2 335 1 
119 6 358 1 360 1 77 1 342 1 185 1 300 12 54 1 254 1 35 1 283 2 257 1 165 1 212 2 329 2 215 1 196 1 44 1 219 2 19 2 173 6 243 1 266 1 144 2 335 2 
119 3 226 1 357 1 329 2 77 1 19 1 300 6 254 1 173 3 283 1 145 1 
115 1 119 1 165 1 349 1 329 2 357 1 192 1 360 1 105 1 77 1 44 1 300 3 54 1 254 1 173 2 144 2 145 1 
165 1 119 5 357 2 329 5 226 1 360 1 77 2 44 1 19 2 54 1 300 10 254 3 173 5 283 2 144 2 257 1 80 1 145 2 
165 1 119 2 212 1 329 1 360 1 77 1 44 1 54 1 300 2 283 1 144 2 257 1 
165 1 119 2 212 1 329 2 360 1 77 1 44 1 219 1 19 1 54 1 300 4 254 1 173 2 283 1 335 1 144 2 257 1 
115 1 165 3 119 1 349 1 357 1 329 2 360 3 77 1 44 3 123 1 300 3 54 3 254 1 173 2 144 6 257 1 145 1 
115 2 182 1 246 1 119 16 226 2 357 3 360 5 77 5 342 1 123 1 54 5 300 34 31 1 254 7 35 4 283 5 257 1 83 1 165 5 349 1 212 3 329 12 192 1 105 1 331 1 44 5 219 3 19 5 173 18 375 1 243 3 144 10 335 3 145 3 
119 4 357 1 226 1 360 1 342 1 185 1 300 8 54 1 254 2 35 1 283 1 257 1 83 1 165 1 329 2 192 1 105 1 44 1 19 1 173 4 243 1 144 2 145 1 
246 1 119 6 226 1 357 1 360 2 77 1 342 1 185 1 300 11 54 2 254 2 35 2 283 2 257 1 83 1 165 2 212 1 329 3 192 1 105 1 331 1 44 2 219 1 19 1 173 5 243 1 144 4 145 1 
115 1 246 1 119 9 226 1 357 1 358 1 360 3 77 1 342 1 185 1 300 19 54 3 254 3 35 1 283 3 257 1 83 1 165 3 212 2 329 4 215 1 192 1 105 1 196 1 44 3 219 2 19 3 173 10 243 1 266 1 144 6 335 2 145 1 
115 1 246 1 119 10 226 1 357 1 358 1 360 3 77 2 342 1 185 1 300 17 54 3 254 3 35 1 283 3 257 1 83 1 165 3 212 2 329 5 215 1 192 1 105 1 196 1 44 3 219 2 19 2 173 7 243 1 266 1 144 6 335 1 145 1 
119 4 357 1 226 1 360 1 342 1 185 1 300 8 54 1 254 2 35 1 283 1 257 1 83 1 165 1 329 2 192 1 105 1 44 1 19 1 173 4 243 1 144 2 145 1 
119 6 358 1 360 1 77 1 342 1 185 1 300 12 54 1 254 1 35 1 283 2 257 1 165 1 212 2 329 2 215 1 196 1 44 1 219 2 19 2 173 6 243 1 266 1 144 2 335 2 
115 2 246 1 119 10 226 1 357 1 358 1 360 4 77 2 342 1 185 1 300 18 54 4 254 3 35 1 283 3 257 1 83 1 165 4 212 2 329 5 215 1 192 1 105 1 196 1 44 4 219 2 19 2 173 8 243 1 266 1 144 8 335 1 145 1 
115 2 119 9 358 1 360 4 77 3 342 1 185 1 123 1 300 16 54 4 254 3 35 1 283 3 257 1 165 4 212 3 329 6 215 1 196 1 44 4 219 3 19 2 173 7 243 1 266 1 144 8 335 2 
119 3 357 3 329 6 226 1 192 2 105 1 77 3 19 1 300 7 254 3 173 4 283 1 145 3 
115 2 119 10 226 1 357 1 358 1 360 4 77 1 342 1 185 1 123 1 300 18 54 4 254 3 35 1 283 3 257 1 83 1 165 4 212 2 329 4 215 1 192 1 105 1 196 1 44 4 219 2 19 2 173 8 243 1 266 1 144 8 335 1 145 1 
59 1 13 1 71 1 236 1 369 1 120 1 161 1 
59 1 71 1 13 1 224 1 26 1 236 1 373 1 120 1 299 1 278 1 369 1 161 1 
228 1 92 1 242 1 146 1 371 1 172 1 319 1 367 1 47 1 98 1 177 1 
59 1 13 1 371 1 319 1 351 1 361 1 18 1 120 2 238 1 98 1 197 1 261 1 228 1 172 1 367 1 369 2 47 1 177 1 
319 1 94 1 361 1 120 2 98 1 228 1 367 2 369 2 59 1 132 1 13 2 14 1 371 1 235 1 351 2 18 1 218 1 237 1 238 1 261 1 197 2 47 1 177 3 
319 1 94 1 205 1 120 2 98 2 228 2 367 2 369 2 59 1 132 1 13 2 14 1 371 1 235 1 351 2 18 1 218 1 237 1 238 1 261 1 197 2 220 1 47 2 177 3 
91 2 319 1 94 1 74 1 120 1 75 1 98 1 341 2 228 1 366 1 344 1 157 1 367 1 209 1 369 1 81 1 132 1 13 1 231 1 371 1 235 1 351 1 65 1 237 1 238 1 332 1 240 1 197 1 374 1 47 1 49 1 177 4 
91 2 319 1 94 1 74 1 120 1 75 1 98 1 341 2 228 1 366 1 344 1 157 1 367 1 209 1 369 1 81 1 132 1 13 1 231 1 371 1 235 1 351 1 65 1 237 1 238 1 197 1 374 1 21 1 47 1 49 1 177 4 
228 1 142 1 371 1 319 1 47 1 98 1 
248 1 371 2 319 1 86 1 98 1 239 1 197 1 228 1 172 1 345 1 367 1 47 1 177 1 
148 1 98 1 52 1 54 2 300 6 254 2 7 2 57 1 59 2 13 1 165 2 351 1 105 1 18 1 167 1 261 1 19 1 170 1 173 3 221 1 176 1 177 1 183 1 119 3 357 1 226 1 319 1 360 2 361 1 120 2 30 1 228 1 367 1 283 1 284 1 369 2 83 1 371 1 329 2 192 1 238 1 44 2 241 2 197 1 144 4 47 1 145 1 
91 3 3 5 250 1 153 4 98 1 341 3 344 1 255 1 157 1 58 1 209 1 304 1 13 1 351 1 65 1 107 2 108 1 311 1 19 2 172 1 21 1 22 2 177 2 357 1 226 1 359 2 227 2 74 2 120 1 75 1 228 1 366 1 230 1 283 2 80 1 369 1 81 1 231 2 232 1 135 2 237 1 238 1 374 2 376 1 47 1 145 1 49 1 
327 1 371 2 319 1 86 1 98 2 52 1 197 1 228 2 344 1 142 1 367 1 47 2 177 2 
92 1 371 1 319 1 205 1 98 4 52 1 228 4 242 1 172 1 367 1 47 4 303 1 177 1 
371 2 60 1 319 1 98 1 239 1 197 1 323 1 228 1 345 1 109 1 367 1 47 1 177 1 
178 1 228 1 124 1 371 1 172 1 319 1 37 1 47 1 98 1 48 1 
371 1 191 1 319 1 194 1 98 2 52 1 228 2 139 1 367 1 47 2 177 1 
132 1 92 1 371 2 319 2 98 5 52 1 228 4 242 1 139 1 355 1 172 1 367 2 47 5 303 1 177 3 316 1 
132 1 92 1 371 2 319 2 98 5 52 1 228 4 242 1 139 1 172 1 367 2 47 5 89 1 303 1 177 3 316 1 
59 1 13 1 371 1 319 1 351 1 18 1 120 2 238 1 98 1 197 1 261 1 228 1 220 1 172 1 367 1 369 2 47 1 177 1 
132 1 248 1 371 2 319 1 86 1 98 1 239 1 197 1 228 1 345 1 367 1 47 1 177 1 
59 1 53 1 46 1 229 1 38 1 
59 1 231 1 14 1 91 2 232 1 310 1 87 1 74 1 237 1 218 1 76 1 341 2 273 1 366 1 53 2 46 2 229 1 38 2 347 1 
164 1 12 1 13 1 120 1 53 1 229 1 38 1 369 1 23 1 
14 1 310 1 76 1 218 1 237 1 273 1 53 1 366 1 46 1 229 1 38 1 347 1 
24 1 146 1 2 1 158 1 
24 1 138 1 307 1 2 1 158 1 245 1 202 1 
151 1 195 1 245 1 
24 1 356 1 307 1 2 1 249 1 138 3 333 1 8 1 158 1 245 3 202 1 130 2 
24 1 306 1 138 2 263 1 307 1 2 1 158 1 245 2 202 1 
178 1 138 1 356 1 124 1 307 1 2 1 198 1 159 1 222 1 245 1 202 1 
24 1 138 1 356 1 307 1 2 1 245 1 202 1 
24 2 138 1 356 1 307 1 158 1 245 1 202 1 
24 1 138 2 356 1 317 1 307 2 2 1 104 1 245 2 364 1 202 2 
24 1 356 1 307 1 2 2 272 1 138 3 263 2 158 1 245 3 346 1 302 1 159 1 202 1 
178 2 24 1 356 1 307 1 2 1 138 2 124 1 263 1 198 1 158 1 337 1 245 2 40 1 48 1 202 1 
24 1 306 1 168 1 138 4 356 1 263 2 307 2 2 2 158 1 159 1 302 1 245 4 202 2 
24 1 138 1 356 1 307 1 2 1 158 1 245 1 202 1 
24 2 307 1 249 1 2 3 95 1 138 4 263 2 8 1 158 2 245 4 302 1 159 1 130 1 202 1 
24 1 291 1 138 2 356 1 263 1 307 1 2 1 158 1 129 1 245 2 10 1 202 1 
24 1 356 1 307 1 2 1 249 2 138 3 315 1 8 1 158 1 245 3 202 1 130 2 
69 1 2 2 320 2 285 1 
169 1 138 1 356 1 307 1 245 1 202 1 
24 1 138 2 356 1 263 1 307 1 2 1 158 1 346 1 245 2 202 1 
17 1 
24 1 138 1 356 1 307 1 2 1 158 1 245 1 202 1 
24 1 356 1 307 1 2 1 138 3 263 1 158 1 245 3 346 1 202 1 130 1 
2 1 95 1 159 1 302 1 
24 1 2 1 

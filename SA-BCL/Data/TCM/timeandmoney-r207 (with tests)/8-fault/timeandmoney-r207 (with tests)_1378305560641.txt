#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (91,223) 285 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (95,268,280) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 115 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (95,268,280) (95,268,280) 86 256 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 115 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 60 5 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (91,223) (91,223) (58,158) 108 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (91,223) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (91,223) (91,223) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (91,223) 285 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 299 (33,169) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 78 50 (33,169) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 299 (33,169) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
70 1 177 1 34 1 36 3 142 1 170 1 61 2 147 3 64 1 335 1 293 2 47 1 241 2 
160 1 208 1 305 1 306 1 170 6 61 5 64 1 261 1 19 2 20 1 70 2 320 1 177 3 104 1 231 2 34 1 36 9 142 1 186 2 189 2 107 1 147 9 335 4 237 1 293 2 291 1 47 1 241 2 
160 1 208 1 305 1 306 1 170 6 61 5 64 1 261 1 19 2 20 1 70 2 320 1 177 3 104 1 231 2 34 1 36 9 142 1 186 2 189 2 107 1 147 9 335 4 237 1 293 2 291 1 47 1 241 2 
160 1 208 1 305 1 306 1 170 7 61 6 64 1 261 1 19 2 20 1 70 2 320 1 177 4 104 1 231 2 34 1 36 10 142 1 186 2 189 2 107 1 147 10 335 5 237 1 293 2 291 1 47 1 241 2 
160 1 208 1 305 1 170 4 61 4 64 1 261 1 19 2 20 1 70 2 320 1 177 2 104 1 231 2 34 1 36 7 142 1 186 1 189 2 107 1 147 7 335 3 237 1 293 2 291 1 47 1 241 2 
320 1 177 1 231 1 306 1 34 1 36 4 142 1 186 2 170 3 189 1 61 3 147 4 64 1 335 2 261 1 19 1 293 1 241 1 
70 1 114 1 160 1 231 1 34 1 36 2 142 1 255 1 61 1 283 1 147 2 64 1 293 1 19 1 20 1 241 1 
306 1 8 1 170 7 61 5 64 1 261 1 19 1 70 1 320 1 24 1 177 3 104 1 231 1 34 1 36 9 142 1 186 2 189 1 147 9 335 4 293 2 291 1 47 1 241 2 
306 1 8 1 170 7 61 5 64 1 261 1 19 1 70 1 320 1 24 1 177 3 104 1 231 1 34 1 36 9 142 1 186 2 189 1 147 9 335 4 293 2 291 1 47 1 241 2 
132 1 295 1 157 1 225 1 55 1 250 1 95 1 122 1 308 1 191 1 192 1 172 1 
185 1 
329 1 132 2 44 1 172 1 151 1 199 1 185 1 95 2 
296 1 132 5 27 1 247 1 164 2 119 1 76 1 185 1 95 5 329 1 38 2 315 2 42 1 172 2 151 1 152 1 340 1 199 2 51 1 
329 1 115 1 185 1 
145 2 214 1 185 1 
157 1 192 2 191 2 225 2 55 2 250 2 308 2 
157 1 225 1 55 1 161 2 209 2 250 1 91 1 252 1 308 1 80 1 11 1 310 1 191 1 192 1 285 1 154 2 
295 1 157 1 192 1 191 1 225 1 55 1 250 1 308 1 
268 1 280 1 192 1 55 1 198 1 250 1 
268 1 192 1 191 1 225 1 55 1 250 1 308 1 
132 1 282 1 172 1 199 1 95 1 
329 1 132 2 172 1 238 1 151 1 199 1 185 1 95 2 
132 1 199 1 95 1 
191 1 225 1 192 2 55 2 270 1 250 2 308 1 156 1 
80 1 87 1 192 1 191 1 225 1 55 1 161 1 209 1 75 1 154 1 250 1 
115 1 
87 1 192 3 191 3 225 3 55 3 250 3 308 1 
192 1 191 1 225 1 55 1 250 1 
192 1 191 1 225 1 55 1 270 1 250 1 156 1 308 1 
87 1 192 2 191 2 225 2 55 2 270 1 75 1 250 2 308 1 
87 1 192 2 191 1 225 1 55 2 162 1 198 1 250 2 
87 1 192 1 191 1 225 1 55 1 75 1 250 1 
192 1 191 1 225 1 55 1 270 1 250 1 308 1 
80 1 161 1 209 1 154 1 
80 1 161 1 209 1 154 1 
279 1 298 1 116 1 83 1 41 1 196 1 89 1 173 2 
192 1 191 1 225 1 55 1 250 1 35 1 
87 2 225 4 55 5 162 1 270 1 75 1 250 5 308 1 191 4 192 5 198 1 111 1 155 1 
192 1 191 1 225 1 55 1 250 1 
59 1 205 1 131 1 
59 2 300 1 207 1 65 1 137 1 131 2 
59 1 131 1 
59 1 131 1 
207 1 65 1 
207 1 65 1 
207 1 65 1 
59 1 229 1 131 1 
59 1 229 1 131 1 
59 1 229 1 131 1 
59 1 239 1 131 1 
59 1 239 1 131 1 
59 1 239 1 131 1 
132 2 22 3 267 2 321 2 269 1 28 1 137 1 185 1 95 2 309 2 59 2 314 2 62 1 193 1 289 1 219 2 131 2 221 1 200 1 
0 1 205 1 55 2 250 2 95 1 59 1 309 1 314 1 67 1 66 1 263 1 131 1 219 1 22 1 132 1 321 1 225 2 103 1 274 1 276 1 191 2 192 2 193 1 
189 1 82 1 283 1 167 2 19 2 
189 1 19 1 231 1 
283 1 19 1 231 1 
82 1 189 2 283 1 167 1 19 3 232 1 
82 1 189 1 283 1 167 1 19 2 240 1 
296 2 0 1 57 2 164 1 118 2 119 3 95 5 214 1 315 1 172 4 66 1 17 1 217 1 69 1 132 5 74 1 134 2 76 1 276 1 105 1 185 2 37 1 329 1 38 1 145 3 287 1 338 1 151 1 45 1 46 1 49 1 199 1 
296 6 0 4 57 6 164 2 119 8 95 9 214 3 315 2 172 7 17 1 217 3 316 1 69 3 266 5 132 9 29 1 134 6 76 1 105 3 327 1 185 5 37 3 329 1 144 1 38 2 331 1 145 9 190 1 282 5 151 1 45 2 46 3 49 2 199 6 51 1 
295 1 0 1 296 2 157 1 55 1 57 2 164 1 119 3 118 1 250 1 308 1 122 1 95 3 214 2 315 1 172 2 217 1 69 1 132 3 225 1 74 1 134 2 105 1 185 3 329 1 37 1 38 1 145 4 192 1 191 1 287 1 45 1 46 1 49 1 51 1 
0 1 296 2 57 2 164 1 119 3 118 1 95 2 214 2 315 1 172 1 217 1 69 1 132 2 74 1 134 2 105 1 185 2 37 1 38 1 145 4 331 1 287 1 45 1 46 1 49 1 51 1 
210 1 
188 1 115 1 230 1 
3 1 230 1 
79 1 230 1 
178 1 210 1 230 2 79 1 188 2 216 1 288 1 
79 1 288 1 230 1 
258 1 230 1 
222 1 273 1 307 1 182 1 77 3 251 1 254 2 123 1 97 7 312 4 281 1 99 1 217 1 262 3 46 1 317 2 319 1 100 1 
116 1 244 4 202 1 304 1 90 1 307 1 123 2 97 31 254 5 312 16 99 5 217 4 262 15 218 1 319 1 317 3 100 2 173 2 69 3 222 2 176 3 326 1 273 2 105 3 182 1 77 10 37 3 279 1 281 1 83 1 233 1 41 1 236 1 46 4 
116 2 203 1 307 1 97 9 254 3 123 1 312 5 99 1 217 1 262 4 317 2 173 4 100 1 222 1 226 1 326 1 273 1 77 4 182 1 279 2 83 2 281 1 41 2 46 1 
222 1 273 1 307 1 182 1 77 3 254 2 123 1 97 7 312 4 281 1 99 1 217 1 262 3 46 1 317 2 319 1 100 1 
222 1 273 1 307 1 182 1 77 3 254 2 123 1 97 7 312 4 281 1 99 1 217 1 262 3 46 1 317 2 319 1 100 1 
70 2 242 1 161 1 271 2 209 1 163 1 230 1 93 1 94 1 36 1 79 1 98 1 80 1 171 1 147 1 15 1 286 2 150 1 109 1 293 1 197 2 154 1 241 1 
113 1 161 1 88 1 209 1 92 1 93 1 94 1 19 2 70 1 224 1 271 1 231 1 232 1 34 1 183 1 36 1 40 1 189 1 84 1 283 1 147 1 286 1 197 1 293 1 154 1 241 1 
113 1 161 1 209 1 92 1 93 1 94 1 170 1 61 1 129 1 64 1 19 2 70 1 224 1 271 1 231 1 232 1 34 1 183 1 36 2 142 1 40 1 189 1 84 1 283 1 147 2 286 1 197 1 293 1 154 1 241 1 
242 1 161 1 88 1 209 1 92 1 93 1 94 1 170 2 61 1 64 1 19 2 70 1 224 1 271 1 231 1 138 1 232 1 183 1 36 3 142 1 40 1 189 1 84 1 283 1 147 3 286 1 197 1 293 1 154 1 241 1 
161 1 88 1 209 1 92 1 93 1 94 1 170 2 61 1 64 1 19 2 70 1 224 1 271 1 138 1 231 1 232 1 183 1 36 2 142 1 189 1 283 1 147 2 286 1 197 1 154 1 
297 1 
296 1 2 1 55 1 302 1 161 2 209 2 164 1 119 1 250 1 93 1 94 1 95 2 256 1 171 1 128 1 315 1 132 2 268 1 230 1 76 1 80 2 38 1 79 1 280 1 192 1 333 1 336 1 150 1 151 1 198 1 154 2 49 1 199 2 86 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 2 268 1 55 1 250 1 95 2 256 1 280 1 192 1 333 1 44 1 336 1 151 1 198 1 199 1 86 1 
132 1 268 1 55 1 164 1 250 1 76 1 95 1 38 1 256 1 280 1 192 1 333 1 315 1 336 1 198 1 86 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 256 1 280 1 192 1 333 1 55 1 336 1 198 1 250 1 86 1 95 1 
132 1 268 1 55 1 164 1 250 1 76 1 95 1 38 1 256 1 280 1 192 1 333 1 315 1 336 1 198 1 86 1 
116 1 161 1 209 1 89 1 97 1 312 1 279 1 80 1 81 1 83 1 41 1 16 1 196 1 130 1 154 1 173 2 
116 1 55 1 89 1 250 1 308 1 97 2 312 1 217 1 262 1 173 2 69 1 225 1 270 1 105 1 328 1 37 1 279 1 143 1 83 1 191 1 192 1 41 1 196 1 46 1 
298 1 116 1 115 1 89 1 307 1 182 1 77 1 97 2 254 1 123 1 312 2 279 1 83 1 281 1 41 1 217 1 196 1 317 1 173 2 100 1 
116 1 244 1 176 1 5 1 89 1 328 1 97 2 312 1 279 1 60 1 83 1 41 1 196 1 262 1 173 2 
87 1 116 1 225 1 159 1 55 1 75 1 228 1 250 1 89 1 328 1 9 1 97 2 312 1 279 1 81 1 83 1 191 1 192 1 41 1 196 1 262 1 173 2 
87 1 116 1 55 1 159 1 161 1 209 1 89 1 250 1 91 1 58 1 97 1 262 1 173 2 223 1 225 1 75 1 328 1 279 1 80 1 83 1 192 1 191 1 41 1 108 1 196 1 154 1 
298 1 116 1 89 1 105 1 97 1 279 1 330 1 312 1 83 1 41 1 196 1 217 1 173 2 
298 1 116 1 89 1 97 1 37 1 279 1 83 1 332 1 41 1 196 1 262 1 46 1 173 2 
298 1 116 1 89 1 105 1 37 1 97 2 279 1 312 1 83 1 41 1 196 1 217 1 262 1 46 1 173 2 69 1 
116 1 89 1 105 1 97 1 279 1 330 1 312 1 83 1 41 1 16 1 196 1 217 1 173 2 
116 1 89 1 97 1 37 1 279 1 83 1 332 1 41 1 16 1 196 1 262 1 46 1 173 2 
116 1 89 1 105 1 37 1 97 2 279 1 312 1 83 1 41 1 16 1 196 1 217 1 262 1 46 1 173 2 69 1 
116 1 89 1 105 1 37 1 97 2 279 1 312 1 83 1 41 1 196 1 217 1 262 1 46 1 173 2 69 1 
80 1 161 1 209 1 154 1 91 1 
80 1 161 1 209 1 154 1 275 1 
116 1 89 1 105 1 328 1 37 1 97 2 279 1 312 1 83 1 41 1 196 1 217 1 262 1 46 1 173 2 69 1 
223 1 161 1 129 1 209 1 154 1 91 1 
116 1 55 1 89 1 250 1 308 1 97 2 312 1 217 1 262 1 173 2 69 1 225 1 270 1 105 1 328 1 37 1 279 1 187 1 83 1 191 1 192 1 41 1 196 1 46 1 
244 2 202 1 116 2 304 1 254 3 97 19 212 1 312 9 124 1 125 1 99 3 217 3 262 10 68 2 173 4 69 3 73 2 176 1 226 1 324 1 105 3 77 6 37 3 279 2 83 2 85 1 41 2 194 1 46 3 294 1 
116 3 202 2 244 2 4 1 254 2 97 26 212 1 312 14 124 1 125 2 99 2 63 1 259 1 217 3 262 12 68 1 173 6 175 1 69 3 73 4 176 2 226 1 324 2 326 2 105 3 77 4 37 2 279 3 83 3 284 1 85 1 41 3 292 1 46 2 
244 4 202 3 116 3 4 1 304 1 307 1 123 1 254 4 97 41 212 1 312 20 124 1 125 1 99 4 63 1 259 1 217 5 262 21 317 1 68 1 100 1 173 6 175 1 69 4 73 4 176 3 226 1 324 2 326 1 105 4 182 1 77 8 140 1 37 4 279 3 281 1 83 3 284 1 85 1 41 3 292 1 46 5 294 1 
244 4 202 3 116 4 4 1 304 1 307 1 123 1 254 4 97 38 212 1 312 20 124 1 125 1 99 3 63 1 259 1 217 5 262 18 317 1 68 1 100 1 173 8 175 1 69 4 73 4 176 3 226 1 324 2 326 2 105 4 182 1 77 7 140 1 37 3 279 4 281 1 83 4 284 1 85 1 41 4 292 1 46 4 294 1 
244 4 202 2 116 2 4 1 304 2 307 1 123 1 254 7 97 52 212 1 312 27 124 1 125 1 99 7 63 1 259 1 217 8 262 25 317 1 68 1 100 1 173 4 175 1 69 7 73 4 176 4 226 1 324 1 326 1 105 7 182 1 77 14 141 2 37 7 279 2 281 1 83 2 284 1 85 1 41 2 292 1 46 8 
59 1 309 1 321 1 314 1 62 1 137 1 131 1 219 1 120 1 221 1 
205 1 103 1 
59 1 309 1 321 1 314 1 234 1 337 1 7 1 131 1 219 1 
132 1 22 2 267 1 321 1 28 1 137 1 185 1 95 1 309 1 59 1 314 1 62 1 193 1 289 1 219 1 131 1 221 1 200 1 
132 1 22 2 267 1 321 1 28 1 137 1 185 1 95 1 309 1 59 1 314 1 62 1 193 1 289 1 219 1 131 1 221 1 200 1 
132 1 22 2 267 1 321 1 28 1 137 1 185 1 95 1 309 1 59 1 314 1 62 1 193 1 289 1 219 1 131 1 221 1 200 1 
300 1 229 1 253 1 
300 1 229 1 253 1 
135 1 239 1 
300 1 135 1 239 1 
274 1 263 1 
0 1 205 1 55 2 250 2 10 1 95 1 59 1 309 1 314 1 172 1 67 1 66 1 263 1 131 1 219 1 267 1 132 1 22 1 321 1 225 2 28 1 103 1 274 1 276 1 192 2 191 2 
229 1 253 1 
300 1 135 1 239 1 
192 2 206 1 55 2 117 1 249 1 250 2 
243 1 161 1 209 1 271 1 230 1 93 1 94 1 278 1 79 1 80 1 171 1 15 1 150 1 154 1 
243 1 161 1 88 1 209 1 271 1 231 1 232 1 93 1 92 1 183 1 94 1 184 1 189 1 84 1 283 1 19 2 154 1 102 1 
243 1 161 2 88 1 209 2 271 1 231 1 232 1 93 1 92 1 94 1 183 1 184 1 189 1 84 1 283 1 129 1 19 2 154 2 102 1 
161 1 88 1 209 1 271 1 231 1 232 1 92 1 93 1 183 1 94 1 189 1 213 1 84 1 283 1 19 2 154 1 102 1 
26 1 
296 1 27 1 164 1 119 1 76 1 185 1 329 1 38 1 315 1 340 1 
296 5 134 5 57 5 248 1 119 5 105 2 185 5 37 2 145 10 214 5 235 1 217 2 46 2 69 2 341 2 
329 1 132 1 151 1 199 1 185 1 95 1 
296 2 2 2 302 1 161 4 56 1 209 4 164 2 119 2 93 3 121 1 94 2 95 3 171 1 128 1 13 1 315 2 265 1 132 3 25 1 31 1 180 1 230 2 76 1 79 2 38 2 80 2 334 2 288 1 150 1 151 2 154 4 49 2 199 4 51 1 
329 1 296 1 115 1 27 1 119 1 340 1 185 1 
132 1 296 1 136 1 164 1 119 1 76 1 168 1 95 1 185 2 329 1 38 1 145 1 214 1 315 1 151 1 48 1 199 1 
2 1 158 2 3 3 161 3 164 4 248 2 93 4 94 3 95 5 258 2 12 2 260 2 27 1 178 1 180 1 179 2 105 2 185 8 37 2 38 4 106 1 188 2 288 3 110 2 46 2 49 2 199 5 296 8 52 2 209 3 57 6 119 9 214 6 129 1 315 4 217 2 69 2 132 5 71 1 134 6 230 10 76 4 329 2 78 2 79 3 80 1 145 12 146 1 334 1 235 2 151 3 154 3 340 1 341 2 
296 5 2 1 53 1 244 1 202 1 4 1 57 5 164 2 119 8 95 1 214 3 315 2 259 1 217 2 175 1 69 2 132 1 134 5 176 1 76 2 105 2 185 5 37 2 329 2 38 2 39 1 145 6 284 1 235 1 151 1 292 1 46 2 49 1 199 1 341 2 
296 2 295 1 157 1 55 1 164 1 119 2 250 1 96 1 95 1 122 1 308 1 123 1 311 1 315 1 217 2 100 1 132 1 225 1 76 1 182 1 38 1 192 1 191 1 235 1 46 1 341 2 
80 1 157 1 192 1 191 1 225 1 55 1 161 1 285 1 209 1 154 1 250 1 91 1 308 1 
296 2 2 1 134 2 57 2 164 1 119 1 76 1 185 4 329 2 38 1 145 4 214 2 315 1 317 1 49 1 
321 1 314 1 72 1 274 1 221 1 
321 1 201 1 314 1 
321 1 201 1 314 1 
321 1 201 1 314 1 
321 1 314 1 30 1 
321 1 314 1 30 1 
321 1 314 1 30 1 
321 1 314 1 
59 1 131 1 
116 1 226 1 77 5 182 1 123 2 254 3 97 10 279 1 311 1 312 5 83 1 99 2 41 1 217 2 262 5 46 2 173 2 100 2 
116 1 226 1 105 1 77 1 97 2 279 1 312 2 83 1 99 1 41 1 217 1 173 2 
116 1 226 1 105 1 77 2 254 1 37 1 97 4 279 1 312 2 83 1 99 1 41 1 217 1 262 2 46 1 173 2 69 1 
23 1 116 3 226 1 326 1 77 2 97 3 123 1 254 1 279 3 312 1 83 3 99 1 41 3 262 2 173 6 100 1 294 1 
244 4 202 1 116 5 304 1 307 1 123 3 97 34 254 7 312 16 99 5 217 5 218 1 262 18 317 1 100 3 173 10 69 3 23 1 176 3 226 1 326 2 32 1 105 3 182 2 77 12 37 3 279 5 281 1 83 5 233 1 41 5 236 1 46 5 294 1 
244 1 202 1 116 1 307 1 97 8 123 1 254 2 312 4 259 1 217 1 262 4 317 1 173 2 100 1 176 1 226 1 77 2 182 1 279 1 83 1 281 1 41 1 46 1 
244 2 202 1 116 2 304 1 307 1 254 2 123 1 97 11 312 6 99 1 259 1 217 2 262 5 317 1 100 1 173 4 69 1 176 1 226 1 32 1 105 1 182 1 77 3 279 2 281 1 83 2 41 2 46 1 
244 1 202 1 116 3 4 1 307 1 123 1 97 19 254 3 312 9 99 1 259 1 217 3 262 10 317 1 100 1 173 6 69 2 175 1 176 1 226 1 32 1 326 1 105 2 182 1 77 4 37 2 279 3 281 1 83 3 284 1 41 3 292 1 46 3 
244 1 202 1 116 3 4 1 307 1 123 1 97 17 254 3 312 10 99 2 259 1 217 3 262 7 317 1 100 1 173 6 69 2 175 1 176 1 226 1 32 1 326 1 105 2 182 1 77 5 37 1 279 3 281 1 83 3 284 1 41 3 292 1 46 2 
244 1 202 1 116 1 307 1 97 8 123 1 254 2 312 4 259 1 217 1 262 4 317 1 173 2 100 1 176 1 226 1 77 2 182 1 279 1 83 1 281 1 41 1 46 1 
244 1 202 1 116 1 4 1 97 12 254 1 312 6 99 1 259 1 217 2 262 6 173 2 69 2 175 1 176 1 226 1 105 2 77 2 37 2 279 1 83 1 284 1 41 1 292 1 46 2 
244 1 202 1 116 4 4 1 307 1 123 1 97 18 254 3 312 10 99 2 259 1 217 3 262 8 317 1 100 1 173 8 175 1 69 2 176 1 226 1 32 1 326 2 105 2 182 1 77 5 37 1 279 4 281 1 83 4 284 1 41 4 292 1 46 2 
244 1 202 1 116 4 4 1 97 16 254 3 312 9 99 3 259 1 217 3 262 7 173 8 175 1 69 3 176 1 226 1 326 2 105 3 77 6 37 2 279 4 83 4 284 1 41 4 292 1 46 2 294 1 
307 2 77 6 182 1 97 7 123 3 254 3 312 3 281 1 99 3 217 1 262 4 46 1 100 3 
244 1 202 1 116 4 4 1 307 1 123 1 97 18 254 3 312 10 99 1 259 1 217 3 262 8 317 1 100 1 173 8 175 1 69 2 176 1 226 1 326 2 105 2 182 1 77 4 37 1 279 4 281 1 83 4 284 1 41 4 292 1 46 2 294 1 
116 2 326 1 307 1 182 1 77 3 97 8 254 2 123 1 312 4 279 2 83 2 281 1 99 1 41 2 217 1 262 4 317 1 46 1 173 4 100 1 
115 1 307 1 77 2 182 1 123 1 254 2 97 6 312 3 281 1 217 1 262 3 317 1 46 1 100 1 
116 1 32 1 105 1 77 2 254 1 37 1 97 4 279 1 312 2 83 1 99 1 41 1 217 1 262 2 46 1 173 2 69 1 
202 1 244 2 176 1 304 1 105 1 77 2 254 1 37 1 97 7 312 3 99 1 217 1 262 4 46 1 69 1 
244 2 116 2 304 1 307 1 123 2 97 23 254 5 312 11 60 1 99 4 217 3 262 12 317 1 100 2 173 4 69 2 23 1 176 2 326 2 105 2 182 1 77 9 37 2 141 1 279 2 281 1 83 2 41 2 46 3 
97 1 244 1 262 1 
97 1 312 1 176 1 
116 1 248 1 32 1 105 1 77 3 97 6 37 1 254 2 279 1 312 3 83 1 99 1 41 1 217 1 262 3 46 1 173 2 69 1 
244 1 202 1 116 1 4 1 97 12 254 1 312 6 99 1 259 1 217 2 262 6 173 2 69 2 175 1 176 1 226 1 105 2 77 2 37 2 279 1 83 1 284 1 41 1 292 1 46 2 
182 1 77 2 97 6 123 1 254 1 312 3 99 1 217 1 262 3 46 1 100 1 
23 1 116 1 326 1 307 1 77 2 254 1 123 1 97 3 312 1 279 1 83 1 281 1 99 1 41 1 262 2 100 1 173 2 
192 1 55 1 162 1 148 1 198 1 250 1 
245 1 204 1 133 1 55 1 246 1 162 1 250 1 192 1 43 1 148 1 198 1 
301 1 161 4 209 4 230 1 93 1 94 1 80 1 79 1 171 1 129 1 150 1 195 1 154 4 
25 1 161 2 209 2 31 1 230 1 93 2 94 1 79 1 313 1 334 1 13 1 288 1 154 2 265 1 
80 1 283 1 161 1 209 1 19 1 231 1 154 1 93 1 94 1 183 1 
322 1 161 2 88 1 209 2 139 1 230 1 93 1 94 1 79 1 129 1 154 2 
301 1 161 5 209 4 227 1 139 1 230 3 93 2 94 2 80 1 79 2 171 1 334 1 129 1 150 1 290 1 154 5 
301 1 161 5 209 4 227 1 139 1 230 3 93 2 94 2 80 1 79 2 171 1 334 1 129 1 150 1 154 5 174 1 
79 1 80 1 171 1 115 1 161 1 209 1 150 1 230 1 154 1 93 1 94 1 
80 1 87 1 192 1 191 1 225 1 55 1 161 1 303 1 209 1 154 1 250 1 
87 1 192 1 191 1 225 1 334 1 55 1 161 1 303 1 209 1 154 1 250 1 
299 1 87 1 225 1 55 1 161 1 209 1 230 1 250 1 93 1 94 1 79 1 169 1 191 1 192 1 334 1 288 1 154 1 
132 1 3 1 161 1 209 1 230 4 33 1 93 1 94 1 95 1 78 1 79 1 188 1 258 1 334 1 288 1 154 1 50 1 
132 2 3 1 161 3 209 3 179 1 230 4 93 1 94 1 185 1 95 2 329 1 78 1 80 1 79 1 188 1 258 1 334 1 288 1 195 1 110 1 154 3 199 1 
161 1 209 1 154 1 93 1 94 1 277 1 
25 1 161 7 88 1 178 1 209 6 227 1 139 1 230 3 93 3 94 2 277 1 310 1 80 2 79 2 129 1 13 1 288 1 290 1 153 1 154 7 21 1 
87 1 192 1 191 1 225 1 55 1 250 1 
296 1 158 1 52 1 3 1 161 1 209 1 164 2 119 1 95 3 315 2 172 1 260 1 132 3 27 1 180 1 179 1 76 2 230 2 185 1 329 1 80 1 38 2 188 1 110 1 151 1 154 1 340 1 199 2 
161 2 178 1 209 2 230 2 93 2 94 1 277 1 79 1 106 1 188 1 129 1 288 1 154 2 
299 1 87 1 225 1 55 1 161 1 209 1 230 1 250 1 93 1 94 1 79 1 80 1 169 1 191 1 192 1 288 1 154 1 
25 1 161 1 178 1 209 1 230 1 93 2 94 1 79 1 334 1 13 1 288 1 153 1 154 1 
54 1 206 1 55 1 117 1 249 1 166 1 250 1 192 1 339 1 
126 1 6 1 339 1 
1 1 54 1 166 1 339 1 
132 1 1 1 54 1 126 1 127 1 172 1 6 1 166 1 339 1 95 1 
36 1 142 1 61 1 147 1 64 1 293 1 34 1 241 1 
160 1 177 1 36 4 142 2 170 2 257 1 61 3 147 4 64 2 335 1 293 1 318 1 101 1 241 1 
112 1 36 2 142 1 170 1 24 1 61 1 147 2 64 1 149 1 293 1 34 1 241 1 
160 2 165 1 34 1 36 3 142 1 61 1 257 2 147 3 64 1 293 1 318 1 241 1 
61 2 325 2 220 1 211 1 
36 1 147 1 14 1 293 1 34 1 241 1 
36 2 142 1 170 1 61 1 147 2 64 1 104 1 293 1 34 1 241 1 
264 1 
36 1 142 1 61 1 147 1 64 1 293 1 34 1 241 1 
142 1 115 1 61 1 64 1 
36 1 142 1 61 1 147 1 64 1 293 1 241 1 
70 1 147 1 197 1 
160 2 34 1 36 3 142 1 61 1 257 1 147 3 64 1 18 1 293 1 318 1 241 1 
36 2 142 1 170 1 186 1 61 1 147 2 64 1 293 1 241 1 
36 1 189 1 61 1 147 1 335 1 261 1 19 1 293 1 231 1 34 1 241 1 
36 1 61 1 147 1 64 1 293 1 34 1 241 1 
36 1 142 1 147 1 64 2 293 1 34 1 241 1 
323 1 181 1 34 1 36 2 61 1 215 1 147 2 64 1 293 2 241 2 
177 1 104 1 34 1 36 3 142 1 170 2 61 2 147 3 64 1 335 1 293 1 291 1 241 1 
272 1 231 1 232 1 34 1 36 2 142 1 170 1 189 1 61 1 283 1 147 2 64 1 19 2 293 1 241 1 
177 1 306 1 34 1 36 4 142 1 186 1 170 2 61 2 147 4 64 1 335 1 293 2 241 2 
160 1 104 1 34 1 36 3 170 1 142 1 61 1 147 3 64 1 293 1 241 1 
61 1 177 1 335 1 101 1 
61 1 64 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (292,324) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) (80,215) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) (80,215) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (22,101,190) (22,101,190) (22,101,190) 212 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (292,324) (292,324) 54 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (292,324) (292,324) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (292,324) (292,324) 54 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 320 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
190 1 22 1 101 1 221 1 212 1 
291 1 130 1 66 1 
291 1 134 1 317 2 
307 2 12 1 90 2 310 2 235 1 218 2 8 2 24 2 
38 1 168 1 90 3 91 1 42 1 287 2 44 1 248 2 8 2 137 1 293 1 11 1 12 1 99 1 217 1 20 2 145 1 218 2 21 1 24 3 59 1 147 1 61 1 307 2 103 1 310 2 267 2 194 1 30 1 115 1 74 1 78 1 232 2 235 1 321 1 84 1 280 1 
292 1 
240 1 130 1 90 1 68 1 8 1 197 1 93 1 291 1 292 1 156 1 97 1 205 1 83 1 302 1 24 1 324 1 
307 1 130 1 90 1 310 1 68 2 8 1 197 1 93 1 291 1 292 1 156 1 97 1 205 1 83 2 218 1 24 1 324 1 
129 1 68 1 67 1 83 1 304 1 
291 1 73 1 39 1 130 1 68 2 67 1 83 2 304 1 
68 1 83 1 304 1 
292 1 68 1 67 1 83 1 324 1 
291 1 
291 1 53 1 39 1 130 1 68 2 67 1 83 2 304 1 
123 2 62 1 126 1 39 1 130 1 243 2 67 2 68 5 45 1 172 1 225 2 291 1 213 1 178 1 272 1 216 1 260 1 83 5 304 2 
60 1 38 1 90 2 310 1 42 1 287 1 44 1 8 1 30 1 175 1 293 1 11 1 232 1 99 1 321 1 20 1 218 1 185 1 24 2 59 1 
12 1 66 1 
307 1 90 2 310 1 191 1 8 2 228 1 12 2 218 1 24 2 
275 1 323 1 185 1 
38 1 90 1 287 1 42 1 43 1 44 1 30 1 293 1 11 1 12 1 232 1 99 1 321 1 20 1 24 1 59 1 
60 1 307 1 240 1 90 5 310 4 8 5 175 2 228 1 95 1 12 1 52 1 301 1 218 4 24 5 
222 1 271 1 97 1 90 2 310 2 218 2 8 2 24 2 
307 1 12 1 90 3 310 3 218 3 8 3 24 3 175 1 
222 1 97 1 90 1 310 1 218 1 8 1 24 1 
307 1 97 1 90 1 310 1 191 1 218 1 8 1 24 1 228 1 
89 1 90 4 91 1 248 1 8 3 249 1 175 1 93 1 11 1 12 1 97 2 99 1 20 1 21 1 24 4 103 1 267 2 194 1 30 1 197 1 115 1 117 1 205 1 280 1 38 1 287 1 42 1 44 1 293 1 218 3 145 1 59 1 60 1 61 1 307 2 310 3 68 1 228 1 156 1 74 1 232 1 235 1 321 1 83 1 84 1 
12 1 95 1 240 1 90 2 310 1 218 1 8 2 24 2 175 1 
60 1 307 1 149 1 90 3 310 3 68 1 8 3 249 1 197 1 228 1 175 2 93 1 291 1 156 1 97 1 205 1 83 1 218 3 24 3 
307 1 90 2 310 2 8 2 175 1 228 1 275 1 218 2 185 1 24 2 
38 1 90 1 287 1 42 1 44 1 30 1 11 1 293 1 12 1 232 1 99 1 321 1 20 1 24 1 59 1 
239 1 241 1 90 1 287 1 42 1 44 1 30 1 11 1 293 1 12 1 232 1 99 1 321 1 20 1 24 1 
34 1 91 1 248 4 9 1 255 1 185 2 57 1 263 1 103 1 151 1 152 1 267 2 194 1 198 1 200 1 115 1 75 1 74 2 78 2 275 2 84 1 323 2 280 1 87 1 
271 1 97 1 90 1 205 1 310 1 218 1 8 1 24 1 
202 1 203 1 
202 1 203 1 
76 1 64 1 
76 1 64 1 
76 1 64 1 
164 1 202 1 203 1 
202 2 76 1 64 1 203 2 41 1 236 1 
202 1 203 1 28 1 
164 1 202 1 203 1 
164 1 202 1 203 1 
202 1 203 1 106 1 
202 1 203 1 106 1 
202 1 203 1 106 1 
163 1 35 1 40 1 90 2 47 1 8 2 10 1 253 1 12 1 183 1 218 2 24 2 65 1 28 1 310 2 68 1 224 1 316 1 72 1 202 1 203 1 237 1 83 1 119 1 
306 1 163 2 104 1 40 3 107 2 109 1 68 2 224 1 316 2 291 1 202 2 203 2 55 1 319 1 82 1 236 1 237 2 83 2 119 2 
128 1 273 1 195 1 
128 1 312 1 195 1 
294 1 128 3 273 2 153 1 131 1 312 1 
128 2 273 1 153 1 131 1 181 1 312 1 
128 2 273 1 131 1 153 2 312 1 
1 1 123 1 35 1 2 1 39 1 130 1 243 1 45 2 47 1 134 1 291 2 253 1 140 1 18 1 219 1 303 1 304 1 62 1 105 1 151 1 27 1 152 1 68 5 67 4 225 1 317 2 272 1 83 5 278 1 281 2 
1 4 123 2 39 1 129 5 130 1 243 2 45 6 92 1 134 3 291 5 253 4 255 1 296 1 140 1 216 1 18 2 56 1 146 1 303 4 304 6 62 1 151 3 27 3 152 3 68 9 67 7 225 2 155 1 227 5 317 7 79 1 272 4 83 9 278 2 87 1 
123 1 1 1 2 1 130 1 243 1 45 2 134 1 291 2 292 1 253 1 216 1 18 1 219 1 303 1 27 1 151 1 152 1 67 2 68 3 225 1 317 2 272 1 83 3 278 1 324 1 281 1 
1 2 123 1 2 1 130 1 243 1 45 4 134 2 92 1 291 3 292 1 253 2 216 1 18 1 146 1 219 1 303 2 27 2 151 2 152 2 68 4 67 3 225 1 155 1 317 4 272 1 83 4 278 1 324 1 281 2 
293 1 66 1 160 1 
293 1 179 1 
314 1 
293 1 42 1 44 1 
293 1 46 1 
293 1 42 1 
293 3 223 1 42 1 44 1 160 2 133 1 
186 1 148 2 263 3 151 1 244 1 266 1 311 1 70 1 248 7 49 1 114 1 74 3 78 4 158 1 102 1 57 2 87 1 
186 1 148 2 263 3 151 1 244 1 266 1 311 1 70 1 248 7 49 1 114 1 74 3 78 4 158 1 102 1 57 2 87 1 
186 1 148 2 263 3 151 1 244 1 266 1 311 1 70 1 211 1 248 7 49 1 114 1 74 3 78 4 158 1 102 1 57 2 87 1 
282 1 166 1 165 1 91 2 244 2 245 1 7 1 248 31 49 1 96 1 295 4 255 1 258 2 102 1 57 3 186 2 148 3 263 8 103 2 27 4 151 5 152 4 266 1 311 2 267 4 70 5 196 1 194 2 114 1 115 2 318 1 74 12 204 4 78 19 158 2 87 2 
186 1 88 1 148 2 263 4 283 1 103 2 151 1 91 2 244 1 311 1 267 4 70 1 248 9 49 1 194 2 114 1 115 2 74 4 78 5 158 1 258 1 102 1 57 3 87 1 
190 1 22 1 101 1 221 1 212 1 
215 1 190 1 22 1 101 1 221 1 
232 1 242 1 80 1 287 1 184 1 20 1 
215 1 190 1 22 1 101 1 221 1 
190 1 22 1 101 1 221 1 212 1 
136 1 
240 1 243 1 90 1 247 2 8 1 93 1 11 1 97 1 19 1 20 2 24 1 26 2 262 1 265 1 108 1 189 1 268 1 29 1 30 2 197 1 199 1 269 1 31 4 272 2 205 1 277 2 278 1 122 2 123 1 125 1 39 3 130 3 42 1 287 2 45 2 134 2 290 2 291 4 293 1 141 2 142 1 302 1 304 6 62 1 68 5 225 1 317 2 230 2 156 1 77 1 232 2 234 1 321 1 83 5 162 1 
240 1 39 1 130 2 90 1 68 3 189 1 8 1 197 1 199 1 93 1 291 2 31 2 77 1 156 1 53 1 97 1 205 1 83 3 277 1 302 1 162 1 24 1 304 2 262 1 
240 1 130 2 90 1 68 2 189 1 8 1 197 1 199 1 93 1 291 2 31 3 230 1 77 1 156 1 97 1 205 1 83 2 302 1 162 1 24 1 262 1 
240 1 39 1 130 3 90 1 8 1 93 1 291 3 53 1 97 1 302 1 24 1 262 1 26 1 304 2 68 3 189 1 197 1 199 1 31 3 156 1 77 1 230 1 205 1 83 3 277 1 162 1 
240 1 90 1 243 1 247 2 8 1 93 1 252 1 97 1 24 1 262 1 26 4 265 1 189 1 197 1 199 1 269 1 31 5 272 1 205 1 277 4 122 2 123 1 39 3 130 4 45 1 134 2 290 2 291 4 292 1 53 1 141 2 302 1 304 7 63 1 62 1 150 1 68 5 225 1 154 1 226 1 77 1 156 1 230 3 83 5 162 1 324 1 
240 1 90 1 243 1 247 2 8 1 93 1 97 1 24 1 262 1 26 2 265 1 189 1 197 1 199 1 269 1 31 4 272 1 205 1 277 2 122 2 123 1 125 1 39 2 130 3 45 1 134 2 290 2 291 4 141 2 302 1 304 4 62 1 68 4 225 1 317 2 156 1 77 1 230 2 83 4 162 1 
122 2 123 1 240 1 39 2 130 3 243 1 90 1 45 1 247 2 8 1 134 2 290 2 93 1 252 1 291 3 141 2 97 1 302 1 24 1 26 2 304 4 262 1 62 1 265 1 68 4 189 1 154 1 225 1 226 1 197 1 199 1 269 1 31 4 230 2 156 1 77 1 272 1 205 1 83 4 277 2 162 1 
122 2 123 1 240 1 39 2 130 3 243 1 90 1 45 1 247 2 8 1 134 2 290 2 93 1 252 1 291 3 141 2 97 1 302 1 24 1 26 2 304 4 262 1 62 1 265 1 68 4 189 1 154 1 225 1 226 1 197 1 199 1 269 1 31 4 230 2 156 1 77 1 272 1 205 1 83 4 277 2 162 1 
123 1 240 1 39 2 130 3 243 1 90 1 285 2 45 1 6 2 247 2 8 1 290 2 93 1 291 3 97 1 300 1 302 1 24 1 26 2 304 4 262 1 62 1 265 1 68 4 189 1 69 1 154 1 225 1 197 1 317 2 199 1 31 4 230 2 156 1 77 1 272 1 206 1 205 1 83 4 277 2 162 1 
122 2 123 1 240 1 39 2 130 3 243 1 90 1 45 1 247 2 8 1 134 2 290 2 252 1 93 1 291 3 141 2 97 1 302 1 24 1 262 1 26 3 304 5 62 1 150 1 265 1 68 4 189 1 154 1 225 1 226 1 197 1 199 1 269 1 31 5 230 3 156 1 77 1 272 1 205 1 83 4 277 3 162 1 
122 2 123 1 240 1 39 2 130 3 243 1 90 1 45 1 247 2 8 1 134 2 290 2 252 1 93 1 291 3 141 2 97 1 302 1 24 1 262 1 26 3 304 5 62 1 150 1 265 1 68 4 189 1 154 1 225 1 226 1 197 1 199 1 269 1 31 5 230 3 156 1 77 1 272 1 205 1 83 4 277 3 162 1 
240 1 90 1 243 1 247 2 6 2 8 1 93 1 97 1 24 1 262 1 26 2 265 1 189 1 197 1 199 1 31 4 272 1 205 1 206 1 277 2 123 1 125 1 39 2 130 3 285 2 45 1 290 2 291 3 302 1 304 4 62 1 68 4 225 1 317 2 156 1 77 1 230 2 83 4 162 1 
91 1 248 6 49 1 12 2 185 1 102 1 57 2 148 1 263 2 103 1 151 1 66 1 311 1 267 2 194 1 114 1 115 1 75 1 74 3 78 3 158 1 275 1 84 1 323 1 280 1 87 1 
166 1 91 2 248 14 135 1 12 1 295 3 96 1 255 1 145 1 185 11 147 1 263 1 103 2 187 1 27 2 151 2 152 2 267 4 70 1 194 2 201 1 115 2 318 1 74 6 204 3 78 8 275 3 276 1 84 1 323 11 280 2 87 1 
238 1 38 1 90 2 91 1 42 1 287 1 44 1 43 1 248 2 8 1 48 1 175 1 293 1 11 1 12 1 99 1 20 1 218 1 145 1 24 2 59 1 60 1 147 1 103 1 310 1 267 2 193 1 194 1 30 1 201 1 115 1 74 1 78 1 232 1 275 1 321 1 84 1 280 1 
3 1 90 3 91 3 248 18 8 1 175 1 11 2 12 2 255 1 99 2 20 1 102 1 185 6 24 3 263 2 103 3 27 2 267 6 194 3 30 1 113 2 114 1 201 1 115 3 275 5 279 2 280 3 127 1 38 2 287 1 42 2 286 2 44 2 49 1 50 2 293 2 145 1 218 1 57 2 59 2 147 1 60 1 61 2 148 1 151 3 152 2 310 1 311 1 74 8 78 10 232 1 158 1 321 2 84 3 323 6 87 2 
0 1 210 1 242 1 90 1 91 2 287 7 42 2 248 2 8 1 175 1 11 2 293 3 214 1 142 1 20 8 217 2 218 1 145 1 24 1 147 1 103 2 310 1 267 4 268 1 194 2 30 2 270 1 115 2 75 1 74 1 78 1 157 1 232 8 81 1 321 2 84 2 86 1 280 2 209 1 
90 1 91 1 248 1 8 1 218 1 24 1 307 1 103 1 27 1 151 1 152 1 310 1 267 2 194 1 112 1 228 1 201 1 115 1 78 1 84 1 280 1 
263 1 103 1 151 1 152 1 91 1 267 2 70 1 248 2 194 1 200 1 115 1 75 1 78 2 275 1 84 1 323 1 185 1 280 1 
263 1 103 1 91 1 267 2 248 2 194 1 198 1 115 1 75 1 74 2 255 1 275 1 84 1 323 1 185 1 57 1 280 1 87 1 
103 1 27 1 151 1 152 1 91 1 267 2 248 2 194 1 115 1 75 1 78 2 275 1 84 1 323 1 185 1 280 1 
263 1 103 1 151 1 152 1 91 1 267 2 70 1 248 2 194 1 200 1 115 1 214 1 78 2 275 1 84 1 323 1 185 1 280 1 
263 1 103 1 91 1 267 2 248 2 194 1 198 1 115 1 214 1 74 2 255 1 275 1 84 1 323 1 185 1 57 1 280 1 87 1 
103 1 27 1 151 1 152 1 91 1 267 2 248 2 194 1 115 1 214 1 78 2 275 1 84 1 323 1 185 1 280 1 
103 1 27 1 151 1 152 1 91 1 267 2 248 2 194 1 115 1 78 2 275 1 84 1 323 1 185 1 280 1 
38 1 90 1 91 1 42 1 287 1 44 1 248 2 11 1 293 1 12 1 99 1 20 1 145 1 24 1 59 1 147 1 61 1 103 1 267 2 194 1 30 1 115 1 74 1 78 1 232 1 321 1 84 1 280 1 
239 1 241 1 90 1 91 1 42 1 287 1 44 1 248 2 11 1 293 1 12 1 99 1 20 1 145 1 24 1 147 1 103 1 267 2 194 1 30 1 115 1 74 1 78 1 232 1 321 1 84 1 85 1 280 1 
103 1 27 1 151 1 152 1 91 1 267 2 248 2 194 1 201 1 115 1 78 2 275 1 84 1 323 1 185 1 280 1 
38 1 90 1 91 1 287 1 42 1 44 1 248 2 11 1 293 1 99 1 20 1 185 1 24 1 59 1 61 1 103 1 151 1 27 1 152 1 267 2 194 1 113 1 115 1 78 2 232 1 157 1 275 1 321 1 84 1 323 1 280 1 
307 1 36 1 103 1 151 1 27 1 152 1 90 1 91 1 310 1 267 2 248 3 8 1 194 1 228 1 201 1 115 1 74 1 78 2 255 1 84 1 323 1 218 1 185 1 24 1 280 1 87 1 
167 1 166 2 283 1 169 1 91 2 248 34 139 1 51 1 14 1 254 1 295 4 96 2 255 2 298 3 259 1 182 1 17 1 143 1 263 5 103 2 27 7 151 7 152 7 267 4 70 5 194 2 115 2 318 2 74 12 204 4 78 22 322 1 120 1 121 1 87 2 
167 1 166 2 283 1 169 1 91 2 248 34 139 1 51 1 14 1 254 1 295 4 96 2 255 2 298 3 259 1 182 1 17 1 143 1 263 5 103 2 27 7 151 7 152 7 267 4 70 5 194 2 115 2 318 2 74 12 204 4 78 22 322 1 120 1 121 1 87 2 
166 2 283 1 169 1 91 1 248 39 49 1 139 1 51 1 14 1 254 1 295 4 96 2 255 2 298 3 259 1 182 1 17 1 143 1 102 1 57 1 148 1 263 7 103 1 27 7 151 8 152 7 311 1 267 2 70 6 194 1 114 1 115 1 318 2 74 14 204 4 78 25 158 1 322 1 120 1 121 1 87 3 
167 1 166 2 283 1 169 1 91 2 288 1 248 30 139 1 14 1 254 1 295 4 96 2 255 1 298 2 259 1 182 1 17 1 143 1 263 5 103 2 27 7 151 7 152 7 267 4 70 5 194 2 115 2 318 2 74 9 204 4 78 21 322 1 120 1 121 1 87 1 
166 2 283 1 169 1 91 1 248 16 139 1 51 1 254 2 295 2 14 1 255 1 298 2 259 2 182 1 17 1 143 1 103 1 27 2 151 2 152 2 267 2 194 1 115 1 74 7 78 9 204 2 322 1 120 1 121 1 87 1 
284 1 90 2 91 1 42 1 171 1 287 2 248 2 251 1 8 2 11 1 293 1 20 2 217 2 145 1 24 2 58 1 147 1 103 1 267 2 194 1 201 1 270 1 115 1 74 1 78 1 232 2 321 1 118 1 84 1 86 1 280 1 
128 2 242 1 287 2 312 1 110 1 111 1 195 1 138 1 11 1 294 1 232 2 157 1 297 1 273 1 233 1 321 1 20 2 23 1 261 1 
128 2 242 1 287 1 312 1 110 1 111 1 195 1 250 1 138 1 11 1 294 1 232 1 273 1 321 1 20 1 23 1 261 1 
42 1 287 1 173 1 268 1 315 1 30 1 11 1 293 1 232 1 297 1 142 1 321 1 20 1 261 1 
128 2 242 1 287 1 312 1 110 1 111 1 195 1 138 1 11 1 294 1 232 1 297 1 273 1 233 1 321 1 20 1 23 1 261 1 
246 1 
291 1 272 1 130 1 66 1 45 1 260 1 172 1 
122 1 123 1 39 1 130 1 243 1 45 1 134 1 291 2 141 1 304 1 62 1 68 1 225 1 317 1 269 1 272 1 83 1 
1 4 243 3 4 2 5 1 176 1 93 2 179 3 11 2 256 2 100 2 20 1 19 1 27 2 30 1 272 4 207 2 278 2 123 3 39 3 130 1 42 1 287 1 44 1 45 7 133 1 50 2 134 4 291 5 292 1 293 6 303 4 304 5 62 3 151 2 152 2 68 5 313 1 225 3 317 8 232 1 321 1 83 5 160 2 161 2 324 1 
1 3 123 1 166 1 243 1 45 4 134 2 291 2 139 1 14 1 295 1 17 1 182 1 303 3 62 1 27 2 151 2 152 2 225 1 317 4 204 1 272 2 121 1 
123 1 62 1 151 1 243 1 68 1 45 1 311 1 225 1 114 1 252 1 292 1 54 1 272 2 158 1 83 1 220 2 324 1 87 1 
123 1 62 1 130 1 243 1 45 1 172 1 225 1 291 1 272 1 260 1 
1 1 27 1 151 1 152 1 45 2 134 1 317 2 291 1 303 1 
291 1 39 1 130 1 68 1 83 1 304 1 
123 2 39 2 243 2 42 1 287 4 45 2 11 1 293 1 142 1 216 1 20 4 19 2 304 4 62 1 308 1 108 1 68 3 268 1 192 1 225 2 30 2 229 1 116 2 232 4 272 2 234 1 321 1 83 3 278 2 
38 1 90 3 91 1 287 1 42 1 44 1 248 1 8 2 11 1 293 1 12 1 99 1 20 1 145 1 218 2 21 1 24 3 59 1 61 1 307 2 103 1 310 2 267 2 194 1 30 1 115 1 74 1 232 1 235 1 321 1 84 1 280 1 
148 1 1 2 123 1 62 1 130 2 243 1 45 2 225 1 134 2 317 4 291 4 272 1 278 1 19 1 303 2 
264 1 237 1 316 1 
72 1 104 1 237 1 316 1 289 1 
264 1 237 1 316 1 
264 1 237 1 316 1 
188 1 237 1 316 1 
188 1 237 1 316 1 
188 1 237 1 316 1 
237 1 316 1 
202 1 203 1 
148 1 263 2 166 1 283 1 103 1 151 1 91 1 311 1 267 2 248 8 49 1 194 1 114 1 115 1 74 4 78 4 14 1 204 1 295 1 158 1 102 1 57 2 87 1 
166 1 283 1 91 2 248 20 139 1 14 1 295 2 96 1 255 3 182 1 17 1 263 2 103 2 309 1 27 4 151 4 152 4 267 4 70 2 194 2 115 2 318 1 74 9 204 2 78 11 121 1 87 3 
166 1 283 1 91 2 248 8 139 1 295 1 14 1 17 1 182 1 263 1 103 2 309 1 27 2 151 2 152 2 267 4 70 1 194 2 115 2 74 2 204 1 78 6 121 1 
166 1 283 1 91 2 248 10 139 1 295 1 14 1 255 1 17 1 182 1 103 2 309 1 27 2 151 2 152 2 267 4 194 2 115 2 74 4 204 1 78 6 121 1 87 1 
148 1 263 2 166 1 283 1 103 1 151 1 91 1 311 1 267 2 248 8 49 1 194 1 114 1 115 1 74 4 78 4 14 1 204 1 295 1 158 1 102 1 57 2 87 1 
263 1 166 1 283 1 103 1 151 2 27 2 152 2 91 1 267 2 70 1 248 8 194 1 115 1 139 1 74 2 78 6 14 1 204 1 295 1 182 1 17 1 121 1 
166 1 283 1 91 2 248 10 139 1 14 1 295 1 255 1 17 1 182 1 309 1 103 2 27 2 151 2 152 2 267 4 194 2 115 2 74 4 204 1 78 6 121 1 87 1 
166 1 167 1 283 1 91 2 248 10 139 1 14 1 295 1 255 1 17 1 182 1 263 1 103 2 27 2 151 2 152 2 267 4 70 1 194 2 115 2 74 4 204 1 78 6 121 1 87 1 
263 6 151 1 311 3 70 3 248 7 49 1 114 1 74 4 78 3 158 3 102 2 57 3 87 1 
166 1 167 1 283 1 91 2 248 10 139 1 14 1 295 1 255 1 17 1 182 1 103 2 27 2 151 2 152 2 267 4 194 2 115 2 74 4 204 1 78 6 121 1 87 1 
148 1 263 3 103 2 151 1 91 2 267 4 311 1 70 1 248 8 194 2 49 1 114 1 115 2 74 4 78 4 258 1 158 1 102 1 57 2 87 1 
114 1 148 1 263 2 74 3 78 3 151 1 158 1 66 1 311 1 248 6 102 1 49 1 57 2 87 1 
309 1 103 1 27 1 151 1 152 1 91 1 267 2 248 2 194 1 115 1 78 2 
263 2 166 1 27 2 151 2 152 2 70 2 248 8 318 1 74 2 204 2 295 2 78 6 96 1 
91 2 245 1 248 26 49 1 135 1 96 1 295 2 54 1 258 2 102 1 57 5 148 1 263 10 103 2 151 4 27 2 152 2 311 4 267 4 70 5 194 2 114 2 115 2 318 1 74 12 78 14 204 2 158 4 87 2 
74 1 204 1 248 1 
78 1 295 1 248 1 
263 1 27 1 151 1 152 1 70 1 248 4 50 1 74 1 78 3 
263 1 166 1 283 1 103 1 151 2 27 2 152 2 91 1 267 2 70 1 248 8 194 1 115 1 139 1 74 2 78 6 14 1 204 1 295 1 182 1 17 1 121 1 
263 2 151 1 311 1 70 1 248 6 114 1 74 3 78 3 158 1 57 1 87 1 
263 2 103 1 91 1 311 1 245 1 267 2 70 1 248 3 194 1 49 1 115 1 74 2 78 1 158 1 258 1 102 1 57 1 
263 5 103 1 283 1 151 2 91 1 267 2 311 2 70 2 248 10 194 1 114 1 115 1 74 5 78 5 54 1 158 2 57 3 87 2 
263 1 283 1 103 1 151 1 152 1 91 1 267 2 70 1 248 2 194 1 115 1 78 2 
263 1 283 1 103 1 27 1 151 1 152 1 91 1 267 2 70 1 248 4 194 1 115 1 74 2 78 2 255 1 87 1 
263 2 167 1 283 1 103 3 91 3 245 1 267 6 311 1 70 1 248 3 194 3 115 3 74 2 78 1 258 1 158 1 57 1 
282 1 166 1 167 1 283 1 91 5 245 1 7 1 248 39 49 1 295 4 96 1 255 3 258 2 102 1 57 4 148 1 263 10 309 1 103 5 27 4 151 6 152 4 311 3 267 10 70 6 196 1 194 5 114 2 115 5 318 1 74 19 204 4 78 20 158 3 87 5 
177 1 12 1 95 1 240 1 90 1 8 1 24 1 
124 1 240 1 90 1 71 1 8 1 177 1 12 1 95 1 257 1 208 1 144 1 24 1 
11 1 293 1 232 1 142 1 66 1 321 1 42 1 287 1 268 1 20 1 30 1 
38 1 90 2 310 1 42 1 287 1 44 1 8 1 30 1 175 1 293 1 11 1 12 1 232 1 99 1 321 1 20 1 218 1 24 2 
38 1 90 2 310 1 42 2 287 1 44 2 46 1 8 2 197 1 175 1 293 3 11 1 116 1 12 1 232 1 97 1 99 1 159 1 205 1 321 1 20 1 218 2 24 2 
239 1 90 2 287 2 42 2 44 2 46 1 8 2 175 1 11 1 293 3 12 1 99 1 97 1 20 2 218 2 24 2 310 1 197 1 32 1 116 1 232 2 205 1 159 1 321 1 
130 1 287 1 42 1 44 1 46 1 93 1 291 1 292 1 293 4 179 1 11 1 16 1 299 1 20 1 304 1 68 2 116 1 232 1 159 1 321 1 83 2 160 1 324 1 
130 1 287 1 42 1 44 1 46 1 93 1 291 1 292 1 293 4 179 1 11 1 100 1 20 1 304 1 68 2 116 1 232 1 159 1 321 1 83 2 160 1 324 1 
11 1 210 1 232 1 321 1 287 1 20 1 
0 1 210 1 242 1 287 6 42 2 44 1 174 1 133 1 30 2 270 1 293 3 11 3 157 1 232 7 231 1 81 1 321 2 217 1 20 7 25 1 209 1 
38 1 90 2 91 2 42 1 287 1 44 1 248 6 49 1 251 1 8 1 175 1 293 1 11 1 12 2 99 1 20 1 218 1 185 1 102 1 57 2 24 2 59 1 61 1 148 1 263 2 103 2 151 1 310 1 311 1 267 4 194 2 113 1 114 1 201 1 115 2 74 3 78 3 157 1 232 1 158 1 275 1 321 1 84 2 323 1 279 1 280 2 87 1 
123 2 39 1 130 2 243 2 287 1 45 3 4 1 172 1 93 1 291 2 292 1 179 1 293 2 54 1 256 1 100 1 260 1 20 1 220 2 304 2 62 2 151 1 68 3 67 1 311 1 225 2 30 1 229 1 114 1 232 1 272 4 158 1 207 1 83 3 160 1 324 1 87 2 
210 1 287 2 42 1 5 1 44 1 133 1 293 2 11 2 157 1 232 2 321 1 160 1 20 2 
170 1 287 4 42 1 268 1 30 1 32 1 11 1 293 1 232 4 157 1 142 1 321 1 20 4 
287 2 42 1 44 1 174 1 116 1 94 1 293 1 11 2 13 1 232 2 231 1 180 1 321 1 20 2 
138 1 11 1 128 1 232 1 321 1 287 1 312 1 20 1 195 1 30 1 
242 1 284 1 287 2 42 1 270 1 293 1 11 1 157 1 232 2 321 1 20 2 
170 1 287 4 42 2 268 1 30 1 270 1 116 1 293 3 11 2 232 5 157 1 142 1 81 1 321 2 20 5 209 1 
37 1 170 1 287 4 42 2 268 1 30 1 270 1 116 1 293 3 11 2 232 5 157 1 142 1 321 2 20 5 209 1 
239 1 90 2 310 1 42 1 287 1 44 1 8 1 30 1 175 1 293 1 11 1 12 1 232 1 99 1 321 1 20 1 218 1 24 2 
287 1 42 1 44 1 174 1 133 1 116 1 293 1 11 2 232 1 231 1 321 1 20 1 25 1 
12 1 15 1 274 1 132 1 33 1 
305 1 320 1 98 1 274 1 68 1 67 1 83 1 
15 1 90 1 274 1 171 1 118 1 132 1 8 1 24 1 58 1 
93 1 305 1 156 1 15 1 97 1 320 1 205 1 274 1 132 1 33 1 249 1 197 1 

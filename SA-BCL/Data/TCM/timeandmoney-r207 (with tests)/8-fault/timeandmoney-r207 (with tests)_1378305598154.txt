#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 9 (35,108,236) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 9 152 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 9 152 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 9 (35,108,236) 143 333 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 9 152 127 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 9 152 127 60 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 1 280 1 98 1 218 2 308 1 220 9 327 5 224 1 352 1 291 2 11 2 13 1 225 4 270 2 109 2 154 1 296 1 298 1 86 1 275 1 320 2 139 9 66 1 180 1 339 2 324 3 254 1 118 6 
95 1 280 1 98 1 218 2 308 1 220 9 327 5 224 1 352 1 291 2 11 2 13 1 225 4 270 2 154 1 109 2 296 1 298 1 86 1 275 1 320 2 139 9 66 1 180 1 339 2 324 3 254 1 118 6 
95 1 280 1 98 1 218 2 308 1 220 10 327 6 224 1 352 1 291 2 11 2 13 1 225 5 270 2 154 1 109 2 296 1 298 1 86 1 275 1 320 2 139 10 66 1 180 1 339 2 324 4 254 1 118 7 
95 1 98 1 218 2 308 1 220 7 327 4 224 1 352 1 291 2 11 2 13 1 225 3 270 2 154 1 109 1 296 1 298 1 86 1 275 1 320 2 139 7 66 1 180 1 339 2 324 2 254 1 118 4 
291 1 13 1 225 2 280 1 270 1 154 1 109 2 298 1 218 1 308 1 220 4 327 3 320 1 139 4 180 1 324 1 339 1 118 3 
291 1 11 1 13 1 270 1 86 1 218 1 308 1 220 2 78 1 327 1 63 1 277 1 66 1 139 2 180 1 339 1 
291 2 11 1 13 1 225 1 218 2 308 1 220 3 327 2 139 3 180 1 324 1 118 1 352 1 
120 1 280 1 218 2 308 1 220 9 327 5 352 1 291 2 11 1 13 1 225 4 270 1 154 1 109 2 296 1 298 1 275 1 250 1 320 1 139 9 180 1 324 3 339 1 118 7 
120 1 280 1 218 2 308 1 220 9 327 5 352 1 291 2 11 1 13 1 225 4 270 1 154 1 109 2 296 1 298 1 275 1 250 1 320 1 139 9 180 1 324 3 339 1 118 7 
246 1 32 1 168 1 
186 2 168 1 233 1 
30 2 229 2 287 2 223 1 350 2 290 2 160 2 50 1 
184 1 18 1 188 1 72 1 50 1 306 1 307 2 193 1 285 2 221 2 53 1 287 2 223 1 288 1 8 2 195 1 350 2 351 1 290 3 106 1 314 1 173 1 30 2 355 1 226 1 358 1 131 1 332 1 295 1 245 1 247 1 64 2 229 3 93 1 160 2 340 1 304 1 
45 1 30 1 235 1 269 1 229 1 287 1 223 1 350 1 290 1 160 1 
236 1 9 1 
30 1 108 2 57 1 269 1 74 1 59 1 32 1 168 1 35 1 229 1 105 2 287 1 350 1 160 1 290 1 
206 1 108 1 148 1 105 1 92 1 
103 1 206 1 108 2 58 1 148 1 105 2 32 1 168 1 
206 1 108 1 105 1 
45 1 30 1 108 1 269 1 318 1 235 1 148 1 229 1 105 1 223 1 287 1 350 1 160 1 290 1 
168 1 
103 1 206 1 108 2 148 1 105 2 97 1 32 1 168 1 
45 1 17 1 122 1 0 1 142 1 343 1 75 1 168 2 101 1 4 2 51 1 103 1 235 1 147 2 222 1 148 2 287 1 223 1 309 1 105 5 350 1 290 1 312 2 151 2 267 2 30 1 108 5 269 1 82 4 297 1 32 2 316 1 274 5 318 1 206 2 229 1 160 1 182 2 
30 4 152 1 240 1 346 1 134 2 50 1 249 1 229 4 287 4 350 1 9 1 160 4 290 4 69 1 
45 1 30 2 170 1 269 1 229 2 287 2 290 2 160 2 
246 1 50 1 
173 1 30 1 356 1 72 1 240 1 295 1 134 1 245 1 247 1 285 1 221 1 229 2 288 1 287 1 195 1 8 1 160 1 290 2 340 1 304 1 
30 1 293 1 50 2 249 1 229 2 287 2 350 1 290 2 160 1 
356 1 294 1 48 1 
173 1 72 1 295 1 50 1 245 1 247 1 285 1 221 1 229 1 288 1 8 1 195 1 290 1 43 1 340 1 304 1 
30 3 229 3 287 3 350 1 290 3 160 3 50 1 134 1 
45 1 30 1 269 1 229 1 287 1 290 1 160 1 
30 1 249 1 269 1 229 1 287 1 293 1 350 1 290 1 160 1 
184 1 72 1 74 1 3 1 50 1 306 1 307 1 285 1 221 1 53 1 288 1 287 3 105 1 223 1 195 1 8 1 350 2 351 1 290 4 106 1 173 1 30 3 108 1 57 1 355 1 269 1 226 1 240 1 358 1 332 1 59 1 295 1 134 1 245 1 247 1 35 1 249 1 64 2 229 4 93 1 160 3 340 1 213 1 304 1 
30 1 152 1 229 1 287 1 9 1 290 1 160 1 134 1 
30 3 108 1 57 1 269 1 240 1 74 1 59 1 85 1 168 1 134 2 35 1 249 1 229 3 105 1 287 3 350 1 160 3 290 3 213 1 
30 2 356 1 48 1 134 1 249 1 229 2 287 2 350 1 160 2 290 2 
173 1 72 1 295 1 50 1 245 1 247 1 285 1 221 1 229 1 288 1 8 1 195 1 290 1 340 1 304 1 
173 1 99 1 295 1 205 1 50 1 245 1 247 1 285 1 221 1 229 1 288 1 8 1 195 1 290 1 304 1 
184 1 18 2 145 1 48 2 282 1 167 1 4 1 306 1 307 4 53 1 126 1 351 1 312 1 355 1 330 1 356 2 175 1 358 2 294 2 300 1 37 1 64 2 39 1 93 1 
30 1 170 1 269 1 229 1 287 1 59 1 290 1 160 1 
65 1 119 1 
65 1 119 1 
337 1 230 1 
337 1 230 1 
337 1 230 1 
7 1 65 1 119 1 
7 1 65 1 119 1 
328 1 65 1 119 1 
337 1 65 2 203 1 155 1 230 1 119 2 
7 1 65 1 119 1 
65 1 14 1 119 1 
65 1 14 1 119 1 
65 1 14 1 119 1 
185 1 30 2 108 1 243 1 166 1 204 1 326 1 50 1 169 1 6 1 319 1 36 1 90 1 328 1 229 2 65 1 287 2 105 1 26 1 349 1 290 2 160 2 119 1 353 1 
354 1 108 2 73 1 47 1 243 2 155 1 204 2 168 1 326 3 178 1 36 2 54 1 65 2 105 2 26 1 197 2 56 1 119 2 353 2 
270 1 320 1 339 1 
63 1 270 1 339 1 
44 1 286 1 63 1 258 1 270 3 320 2 
200 1 286 1 63 1 258 1 270 2 320 1 
286 2 63 1 258 1 270 2 320 1 
186 3 142 1 124 1 49 1 233 1 167 1 168 2 4 1 169 1 103 1 80 1 148 4 105 5 81 2 349 1 312 1 151 1 267 1 108 5 82 3 331 1 130 1 175 1 271 1 110 1 32 1 274 2 206 1 319 1 179 2 117 2 182 1 
186 9 163 1 142 1 343 1 49 3 233 3 167 3 168 5 4 3 103 1 148 7 105 9 81 6 348 1 349 4 312 3 151 2 267 2 108 9 268 1 82 8 130 2 175 3 271 2 32 1 110 1 274 6 34 1 206 6 179 6 116 1 92 5 91 5 70 1 182 2 
186 4 343 1 124 1 49 1 168 3 233 2 167 1 4 1 148 2 105 3 81 2 349 1 312 1 151 1 267 1 108 3 82 3 331 1 130 1 175 1 271 1 32 1 274 2 179 2 117 1 182 1 
186 7 163 1 343 1 124 1 49 2 168 4 233 3 167 2 4 2 148 3 105 4 81 4 348 1 349 2 312 2 151 1 267 1 108 4 82 5 331 1 130 1 175 2 271 1 32 1 274 4 179 4 116 1 117 2 182 1 
173 1 295 1 304 1 
71 1 304 1 
335 1 246 1 304 1 
137 1 304 1 
102 1 
173 1 304 1 
335 2 173 1 89 1 248 1 295 1 304 3 
257 1 18 4 0 1 2 1 358 3 297 1 300 3 4 1 307 7 158 1 16 2 309 1 104 1 39 2 303 1 312 1 238 1 
257 1 18 4 0 1 2 1 358 3 297 1 300 3 4 1 307 7 158 1 16 2 309 1 104 1 39 2 303 1 312 1 238 1 
257 1 18 4 0 1 2 1 358 3 297 1 300 3 4 1 307 7 158 1 251 1 16 2 309 1 104 1 39 2 303 1 312 1 238 1 
257 1 215 1 18 16 0 1 232 3 259 1 2 2 49 3 167 3 306 1 4 4 191 1 307 31 261 1 53 1 104 1 309 2 351 1 312 4 238 5 107 1 175 3 358 15 297 2 300 10 244 4 15 1 158 2 64 2 16 3 39 5 303 1 93 1 41 1 
257 1 18 5 0 1 2 1 4 1 306 2 307 9 53 2 309 1 351 2 312 1 238 1 202 1 358 4 297 1 300 4 15 1 113 1 158 1 64 4 16 2 39 3 303 1 93 2 
44 1 183 1 123 1 283 1 218 1 308 1 220 2 285 1 327 1 221 1 347 1 8 1 195 1 149 1 291 1 11 1 13 1 270 2 133 1 245 1 88 1 63 1 252 1 320 1 278 1 139 2 180 1 339 1 118 1 140 1 
44 1 183 1 123 1 283 1 218 1 308 1 23 1 220 3 285 1 327 1 125 1 221 1 8 1 195 1 149 1 291 1 11 1 13 1 270 2 273 1 133 1 245 1 88 1 63 1 252 1 320 1 278 1 139 3 339 1 118 2 
44 1 183 1 283 1 308 1 23 1 220 2 285 1 327 1 221 1 8 1 195 1 11 1 13 1 270 2 273 1 133 1 245 1 88 1 63 1 252 1 320 1 278 1 139 2 339 1 118 2 
29 1 291 1 341 1 173 1 11 2 201 1 76 1 283 2 218 1 245 1 220 1 247 1 88 2 285 1 125 1 221 1 278 2 139 1 195 1 8 1 27 1 255 1 304 1 
44 1 291 1 183 1 11 1 123 1 270 2 283 1 218 1 133 1 245 1 220 1 23 1 88 1 285 1 63 1 221 1 347 1 252 1 320 1 139 1 278 1 195 1 8 1 149 1 180 1 339 1 
237 1 
231 1 142 1 143 1 21 1 76 1 146 1 52 1 103 1 285 2 221 2 236 1 105 2 195 1 8 2 9 1 151 1 267 1 173 1 108 2 82 1 201 1 271 1 333 1 274 1 245 1 247 2 206 2 209 1 304 1 182 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
103 1 206 1 108 2 236 1 143 1 21 1 105 2 97 1 209 1 333 1 9 1 
267 1 108 1 142 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 151 1 182 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
108 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 
267 1 108 1 142 1 236 1 143 1 21 1 105 1 209 1 333 1 9 1 151 1 182 1 
257 1 184 1 18 3 0 1 145 1 48 1 306 1 4 1 50 2 307 6 53 1 309 1 351 1 312 1 355 1 356 1 358 3 294 1 297 1 300 2 246 1 64 2 16 1 39 2 303 1 93 1 
184 1 18 8 1 1 232 3 259 1 48 4 49 2 167 2 50 1 306 2 4 1 307 14 79 1 53 2 289 1 351 2 312 2 238 1 314 1 355 2 292 1 356 11 226 1 175 1 358 6 294 11 300 2 244 3 336 1 64 4 39 1 41 1 93 2 
184 1 18 1 72 1 48 1 50 1 306 1 307 2 285 1 262 1 221 1 53 1 288 1 287 1 289 1 195 1 8 1 290 2 351 1 10 1 314 1 173 1 30 1 355 1 226 1 240 1 358 1 295 1 134 1 245 1 247 1 157 1 64 2 229 2 160 1 93 1 340 1 43 1 304 1 
184 2 19 1 72 1 189 1 100 1 306 2 307 1 285 1 221 1 53 2 288 1 287 1 289 1 195 1 8 1 290 2 351 2 173 1 30 1 355 2 226 1 240 1 332 1 358 1 295 1 134 1 245 1 247 1 64 4 229 2 67 1 160 1 93 2 340 1 304 1 
184 2 18 1 188 2 145 1 76 1 306 2 307 2 23 1 285 8 221 8 53 2 287 1 195 2 8 7 264 1 290 1 351 2 314 1 30 1 173 2 153 1 355 2 201 1 129 1 226 1 358 1 242 1 299 1 134 1 114 1 245 2 247 2 64 4 229 1 323 1 160 1 93 2 140 1 304 3 
184 1 18 1 48 1 49 1 167 1 306 1 4 1 307 3 53 1 287 1 289 1 350 1 351 1 290 1 312 1 30 1 355 1 356 1 83 1 175 1 294 1 358 2 300 1 249 1 64 2 229 1 39 1 160 1 93 1 
184 1 18 2 355 1 330 1 356 1 294 1 145 1 48 1 300 1 167 1 306 1 307 2 64 2 53 1 351 1 93 1 312 1 238 1 
184 1 355 1 356 1 175 1 294 1 145 1 358 2 48 1 300 1 306 1 4 1 307 2 37 1 64 2 53 1 39 1 351 1 93 1 
184 1 18 2 145 1 48 2 49 1 167 1 306 1 4 1 307 4 53 1 351 1 312 1 238 1 355 1 356 2 175 1 294 2 358 2 300 2 64 2 39 1 93 1 
184 1 18 2 355 1 330 1 356 1 294 1 48 1 300 1 167 1 306 1 307 2 64 2 53 1 323 1 351 1 93 1 312 1 238 1 
184 1 355 1 356 1 175 1 294 1 358 2 48 1 300 1 306 1 4 1 307 2 37 1 64 2 53 1 39 1 323 1 351 1 93 1 
184 1 18 2 48 2 49 1 167 1 306 1 4 1 307 4 53 1 351 1 312 1 238 1 355 1 356 2 175 1 294 2 358 2 300 2 64 2 323 1 39 1 93 1 
184 1 18 2 48 2 49 1 167 1 306 1 4 1 307 4 53 1 351 1 312 1 238 1 355 1 356 2 175 1 294 2 358 2 300 2 64 2 39 1 93 1 
184 1 18 1 72 1 50 1 306 1 307 2 285 1 221 1 53 1 288 1 195 1 8 1 290 1 351 1 314 1 173 1 355 1 226 1 332 1 358 1 295 1 245 1 247 1 64 2 229 1 93 1 340 1 304 1 
184 1 18 1 99 1 50 1 306 1 307 2 285 1 221 1 53 1 288 1 195 1 8 1 290 1 351 1 266 1 314 1 173 1 355 1 226 1 358 1 295 1 205 1 245 1 247 1 64 2 229 1 93 1 304 1 
184 1 18 2 48 2 49 1 167 1 306 1 4 1 307 4 53 1 289 1 351 1 312 1 238 1 355 1 356 2 175 1 294 2 358 2 300 2 64 2 39 1 93 1 
184 1 18 2 72 1 48 2 100 1 49 1 167 1 4 1 306 1 307 4 285 1 221 1 53 1 288 1 195 1 8 1 290 1 351 1 312 1 238 1 173 1 355 1 356 2 175 1 358 2 294 2 332 1 295 1 300 2 245 1 64 2 229 1 39 1 93 1 340 1 140 1 304 1 
256 1 184 1 18 2 48 1 49 1 167 1 4 1 306 1 307 3 53 1 287 1 289 1 350 1 351 1 290 1 312 1 238 1 30 1 355 1 356 1 175 1 358 1 294 1 300 1 249 1 64 2 229 1 160 1 93 1 
216 2 187 1 18 9 232 1 259 1 49 3 167 3 306 2 4 3 307 19 194 1 53 2 311 1 351 2 312 3 238 3 128 1 174 1 175 3 358 10 241 2 177 1 300 6 244 2 113 1 64 4 39 3 212 1 41 1 93 2 
216 1 187 1 18 14 217 1 232 2 49 3 167 3 4 2 306 3 307 26 171 1 194 2 53 3 310 1 351 3 312 3 238 2 128 1 174 1 175 2 358 12 272 1 241 4 177 2 300 4 15 2 244 2 113 1 156 1 64 6 39 2 211 1 93 3 41 2 
257 1 216 1 187 1 18 20 0 1 217 1 232 3 259 1 49 4 167 4 306 3 4 5 307 41 171 1 194 2 53 3 309 1 310 1 351 3 312 5 238 4 128 1 174 1 175 4 358 21 297 1 272 1 241 4 176 1 177 1 300 8 15 1 244 4 156 1 113 1 16 1 64 6 211 1 39 4 303 1 212 1 41 3 93 3 
257 1 216 1 187 1 18 20 0 1 217 1 232 3 259 1 49 4 167 4 306 4 4 4 307 38 171 1 194 2 53 4 309 1 310 1 351 4 312 5 238 3 128 1 174 1 175 3 358 18 297 1 272 1 241 4 176 1 177 1 300 7 15 2 244 4 156 1 113 1 16 1 64 8 211 1 39 4 303 1 212 1 41 3 93 4 
257 1 216 1 187 1 18 27 0 1 217 1 232 4 259 2 49 7 167 7 306 2 4 8 307 52 79 2 171 1 194 1 53 2 309 1 310 1 351 2 312 8 238 7 128 1 174 1 175 7 358 25 297 1 272 1 241 4 177 1 300 14 15 1 244 4 156 1 113 1 16 1 64 4 211 1 39 7 303 1 41 2 93 2 
46 1 7 1 
276 1 14 1 203 1 
36 1 65 1 73 1 47 1 321 1 243 1 155 1 204 1 119 1 353 1 
185 1 328 1 
36 1 65 1 84 1 243 1 42 1 204 1 199 1 119 1 353 1 
108 1 73 1 47 1 243 1 155 1 204 1 168 1 326 2 178 1 36 1 54 1 65 1 105 1 26 1 197 1 56 1 119 1 353 1 
108 1 73 1 47 1 243 1 155 1 204 1 168 1 326 2 178 1 36 1 54 1 65 1 105 1 26 1 197 1 56 1 119 1 353 1 
108 1 73 1 47 1 243 1 155 1 204 1 168 1 326 2 178 1 36 1 54 1 65 1 105 1 26 1 197 1 56 1 119 1 353 1 
46 1 7 1 203 1 
46 1 7 1 203 1 
276 1 14 1 
276 1 14 1 203 1 
90 1 166 1 
185 1 166 1 326 1 50 1 169 1 6 1 148 1 328 1 105 1 287 2 197 1 349 1 56 1 290 2 353 1 30 2 108 1 243 1 204 1 359 1 36 1 319 1 229 2 65 1 90 1 160 2 119 1 
141 1 184 1 18 1 162 1 188 2 306 1 307 2 285 2 221 2 53 1 287 2 289 1 195 1 8 2 150 1 290 2 351 1 314 1 173 1 12 1 153 1 355 1 226 1 358 1 245 1 114 1 64 2 229 2 93 1 304 1 214 1 
44 1 183 1 342 1 123 1 270 2 133 1 245 1 23 1 285 2 63 1 221 2 25 1 320 1 278 1 195 1 8 2 339 1 181 1 140 1 
44 1 183 1 123 1 270 2 133 1 245 1 23 1 285 1 63 1 221 1 25 1 320 1 329 1 278 1 8 1 195 1 339 1 
29 1 173 1 342 1 161 1 201 1 76 1 245 1 247 1 285 1 221 1 278 1 195 1 8 1 304 1 
44 1 183 1 342 1 123 1 270 2 133 1 245 1 23 1 285 1 63 1 221 1 25 1 320 1 278 1 8 1 195 1 339 1 181 1 
227 1 
246 1 82 1 222 1 75 1 32 1 168 1 274 1 
186 1 142 1 190 1 233 1 168 2 103 1 284 1 105 1 265 1 151 1 267 1 108 1 82 1 32 1 274 1 206 1 182 1 
121 1 142 2 305 1 234 1 103 1 285 1 221 1 105 2 8 1 195 1 313 1 151 2 267 2 173 1 108 2 57 1 82 1 271 1 295 1 335 1 245 2 247 1 206 2 89 1 137 2 138 1 360 1 40 1 182 2 304 4 
186 6 217 1 142 2 232 1 165 1 49 2 233 3 168 5 167 2 101 1 4 2 146 1 103 1 171 1 147 2 105 1 310 1 81 5 312 2 151 2 267 2 108 1 82 8 271 1 175 2 32 2 244 1 274 5 156 1 206 1 179 5 211 1 253 1 41 1 182 2 
45 1 122 1 0 1 142 1 101 1 4 1 235 1 147 2 309 1 105 1 223 1 287 1 350 1 290 1 312 2 151 1 267 1 30 1 108 1 269 1 82 2 297 1 274 2 228 1 318 1 229 1 160 1 182 1 
267 1 82 1 142 1 75 1 32 1 168 1 274 1 222 1 182 1 151 1 
186 10 82 5 175 2 49 2 167 2 233 5 168 5 101 1 274 5 4 2 147 2 179 5 208 1 81 5 312 2 
103 1 108 1 206 1 105 1 32 1 168 1 
231 1 325 1 142 1 343 1 76 1 146 2 5 1 52 1 103 2 285 4 221 4 105 3 195 1 8 4 151 2 267 2 173 1 108 3 82 2 201 1 271 2 334 2 274 2 245 1 247 2 207 1 206 4 304 1 182 2 
184 1 72 1 50 1 306 1 307 1 285 1 221 1 53 1 287 2 223 1 288 1 8 1 195 1 350 2 351 1 290 3 106 1 30 2 173 1 355 1 226 1 358 1 332 1 295 1 245 1 247 1 64 2 229 3 93 1 160 2 340 1 304 1 
267 1 186 4 82 1 142 1 271 1 32 2 233 2 168 4 274 2 146 1 16 1 179 2 81 2 182 1 151 1 
36 1 20 1 204 1 
36 1 20 1 204 1 
36 1 90 1 47 1 196 1 204 1 
36 1 20 1 204 1 
36 1 204 1 22 1 
36 1 204 1 22 1 
36 1 204 1 22 1 
36 1 204 1 
65 1 119 1 
257 1 18 4 0 1 358 4 297 1 300 3 4 1 306 2 15 1 307 8 16 1 64 4 53 2 309 1 39 2 303 1 351 2 93 2 312 1 238 1 
307 6 257 1 246 1 18 3 0 1 16 1 309 1 358 3 39 2 297 1 303 1 312 1 300 2 4 1 
18 2 175 1 358 2 345 1 49 1 300 2 167 1 4 1 306 1 307 4 64 2 53 1 39 1 351 1 93 1 312 1 238 1 
18 3 175 1 232 1 259 1 358 4 49 1 167 1 300 2 4 1 244 2 307 7 39 1 41 1 312 1 238 1 
257 1 18 11 0 1 232 2 259 1 49 2 167 2 4 3 306 2 307 23 79 1 53 2 309 2 351 2 312 3 238 4 175 2 358 12 297 2 300 9 244 2 15 2 336 1 16 1 64 4 210 1 39 5 303 1 93 2 
307 1 358 1 244 1 
307 1 18 1 232 1 
18 3 175 1 358 3 345 1 49 1 167 1 300 3 306 1 4 1 307 6 64 2 53 1 208 1 39 2 93 1 351 1 312 1 238 1 
18 6 217 1 232 1 49 2 167 2 306 1 4 2 307 12 171 1 53 1 310 1 351 1 312 2 238 1 175 2 358 6 300 2 244 1 113 1 156 1 64 2 211 1 39 1 41 1 93 1 
18 3 0 1 358 3 297 1 300 2 4 1 307 6 309 1 39 1 312 1 238 1 
257 1 18 1 358 2 297 1 300 2 15 1 306 1 307 3 64 2 53 1 309 1 210 1 39 1 303 1 351 1 93 1 238 1 
122 1 18 5 0 1 358 5 297 2 300 5 306 1 4 2 113 1 307 10 64 2 53 1 309 2 39 3 93 1 351 1 312 2 238 2 
18 2 167 1 300 1 306 1 113 1 307 2 64 2 53 1 351 1 93 1 312 1 238 1 
18 2 175 1 358 2 49 1 300 2 167 1 4 1 306 1 113 1 307 4 64 2 53 1 39 1 351 1 93 1 312 1 238 1 
18 1 358 2 297 1 300 2 15 1 306 3 307 3 113 1 64 6 53 3 309 1 210 1 39 1 212 1 351 3 93 3 238 1 
257 1 215 1 18 16 0 2 232 3 259 1 345 1 49 3 167 3 306 5 4 5 307 34 261 1 53 5 309 3 351 5 312 5 238 5 107 1 175 3 358 18 297 3 300 12 15 2 244 4 113 1 16 1 64 10 210 1 39 7 303 1 41 1 212 1 93 5 
257 1 18 4 0 1 217 1 232 1 4 1 306 1 307 8 53 1 309 1 351 1 312 1 358 4 297 1 300 2 244 1 113 1 16 1 64 2 39 2 303 1 41 1 93 1 
257 1 18 6 0 1 217 1 232 1 259 1 345 1 49 1 167 1 4 1 306 2 307 11 53 2 309 1 351 2 312 2 238 1 358 5 297 1 300 3 244 2 113 1 16 1 64 4 39 2 303 1 41 1 93 2 
257 1 18 9 0 1 217 1 232 1 345 1 49 2 167 2 306 3 4 3 307 19 171 1 53 3 309 1 310 1 351 3 312 3 238 1 175 2 358 10 297 1 300 4 244 1 15 1 113 1 156 1 16 1 64 6 211 1 39 3 303 1 41 1 93 3 
257 1 18 10 0 1 217 1 232 1 345 1 49 2 167 2 306 3 4 2 307 17 171 1 53 3 309 1 310 1 351 3 312 3 238 2 175 1 358 7 297 1 300 5 15 1 244 1 113 1 156 1 16 1 64 6 211 1 39 3 303 1 41 1 93 3 
257 1 18 4 0 1 217 1 232 1 4 1 306 1 307 8 53 1 309 1 351 1 312 1 358 4 297 1 300 2 244 1 113 1 16 1 64 2 39 2 303 1 41 1 93 1 
18 6 217 1 232 1 49 2 167 2 306 1 4 2 307 12 171 1 53 1 310 1 351 1 312 2 238 1 175 2 358 6 300 2 244 1 113 1 156 1 64 2 211 1 39 1 41 1 93 1 
257 1 18 10 0 1 217 1 232 1 345 1 49 2 167 2 306 4 4 2 307 18 171 1 53 4 309 1 310 1 351 4 312 3 238 2 175 1 358 8 297 1 300 5 244 1 15 2 113 1 156 1 16 1 64 8 211 1 39 3 303 1 41 1 93 4 
18 9 217 1 232 1 49 3 167 3 306 4 4 2 307 16 171 1 53 4 310 1 351 4 312 3 238 3 175 2 358 7 300 6 244 1 15 2 113 1 156 1 64 8 211 1 39 3 41 1 93 4 212 1 
257 2 18 3 0 1 358 4 297 3 300 6 4 1 307 7 309 3 39 3 303 1 312 1 238 3 
257 1 18 10 0 1 217 1 232 1 49 2 167 2 306 4 4 2 307 18 171 1 53 4 309 1 310 1 351 4 312 3 238 1 175 1 358 8 297 1 300 4 244 1 15 2 113 1 156 1 16 1 64 8 211 1 39 3 303 1 41 1 93 4 212 1 
152 1 127 1 9 1 
192 1 136 1 152 1 24 1 127 1 60 1 9 1 94 1 
173 1 30 1 295 1 205 1 50 1 134 1 245 1 247 1 285 1 221 1 229 2 288 1 287 1 8 1 195 1 160 1 290 2 304 1 
173 1 295 1 317 1 334 1 87 1 245 2 301 1 285 1 89 1 221 1 8 1 195 1 304 1 
245 1 173 1 246 1 247 1 285 1 221 1 201 1 195 1 8 1 76 1 304 1 
173 1 30 1 295 1 50 1 134 1 245 1 247 1 285 1 221 1 229 2 288 1 287 1 8 1 195 1 160 1 290 2 340 1 304 1 
71 1 74 1 50 1 285 1 221 1 287 2 288 1 195 1 8 1 290 2 30 2 173 2 269 1 59 1 295 2 334 1 134 1 245 1 229 2 68 1 160 1 340 1 304 3 
71 1 74 1 50 1 285 2 221 2 287 2 288 1 195 1 8 2 290 2 172 1 30 2 173 2 269 1 59 1 295 2 205 1 334 1 134 1 245 1 229 2 68 1 160 1 304 3 
172 1 173 1 108 2 57 1 71 1 260 1 32 1 295 1 168 1 334 1 245 1 335 1 247 1 285 3 137 1 206 1 221 3 105 2 55 1 68 1 8 3 195 1 304 4 
172 1 173 1 108 2 57 1 71 1 32 1 295 1 168 1 334 1 245 1 335 1 247 1 285 3 137 1 206 1 221 3 360 1 105 2 68 1 8 3 195 1 304 4 
245 1 285 1 221 1 129 1 195 1 8 1 
173 2 188 1 129 1 242 1 295 1 299 1 317 1 87 1 114 1 245 3 23 1 247 2 301 1 285 7 89 1 221 7 8 6 195 2 264 1 140 1 304 3 
141 1 184 2 0 1 189 1 48 1 100 1 4 1 50 2 285 1 53 2 287 1 288 1 289 1 8 1 195 1 290 2 332 1 294 1 295 1 297 1 300 2 245 1 64 4 16 1 303 1 160 1 340 1 304 1 257 1 18 3 72 1 306 2 307 6 221 1 309 1 351 2 312 1 30 1 173 1 355 2 356 1 358 3 134 1 229 2 39 2 93 2 140 1 
121 1 142 2 75 1 168 1 234 1 305 1 103 1 285 1 221 1 222 1 148 1 105 3 8 1 151 2 267 2 108 3 57 1 82 1 32 1 274 1 335 1 247 1 207 1 137 1 206 2 360 1 182 2 304 2 
173 1 129 1 295 1 335 1 245 2 285 2 89 1 138 1 221 2 8 2 195 1 140 1 304 2 
172 1 173 1 201 1 111 1 76 1 245 1 247 1 285 4 221 4 8 4 195 1 140 1 304 1 
279 1 173 1 295 1 77 1 334 1 87 1 245 2 301 1 285 2 221 2 8 2 195 1 38 1 304 1 
245 1 183 1 247 1 285 1 63 1 221 1 270 1 195 1 8 1 339 1 
173 1 12 1 114 1 245 1 23 1 285 2 221 2 8 2 195 1 140 1 304 1 
173 2 201 1 111 1 76 1 299 1 334 1 114 1 245 2 247 1 285 5 221 5 8 4 195 2 264 1 140 1 304 3 
173 2 201 1 111 1 76 1 299 1 334 1 33 1 114 1 245 2 247 1 285 5 221 5 8 4 195 2 140 1 304 3 
263 1 338 1 50 1 28 1 135 1 
108 2 57 1 269 1 357 1 74 1 144 1 59 1 32 1 61 1 168 1 50 1 135 2 35 1 263 2 148 1 105 2 338 1 213 1 28 2 
162 1 135 1 263 1 229 1 287 1 338 1 150 1 290 1 214 1 
357 1 144 1 338 1 
308 1 246 1 327 1 13 1 
291 1 308 1 220 1 327 1 13 1 139 1 218 1 
88 1 220 1 11 1 
291 1 308 1 220 3 327 1 159 1 13 1 66 2 139 3 322 1 180 1 198 1 218 1 
291 1 308 1 220 2 327 1 13 1 109 1 139 2 118 1 218 1 
291 1 225 1 270 1 298 1 218 1 220 1 327 1 320 1 139 1 180 1 339 1 
291 1 308 1 220 1 327 1 139 1 180 1 218 1 
291 1 308 2 220 1 13 1 139 1 180 1 218 1 
291 2 315 1 164 1 132 1 218 2 308 1 220 2 327 1 139 2 180 1 
291 1 13 1 225 1 296 1 218 1 308 1 220 3 275 1 327 2 139 3 180 1 324 1 118 2 
291 1 44 1 31 1 13 1 270 2 218 1 308 1 220 2 327 1 63 1 320 1 139 2 180 1 339 1 118 1 
291 2 13 1 225 1 280 1 109 1 218 2 308 1 220 4 327 2 139 4 180 1 324 1 118 2 
291 1 308 1 220 1 327 1 13 1 139 1 180 1 218 1 
291 1 13 2 225 1 344 1 218 1 308 2 220 4 327 3 159 1 66 1 139 4 198 1 324 1 118 2 
291 1 96 1 13 1 218 1 112 1 308 1 220 2 327 1 250 1 139 2 180 1 118 1 
291 1 308 1 220 3 327 1 159 2 13 1 66 2 139 3 281 1 180 1 198 1 218 1 
219 1 115 1 327 2 62 2 
291 1 220 1 302 1 139 1 180 1 218 1 
291 1 308 1 275 1 220 2 327 1 13 1 139 2 180 1 118 1 218 1 
239 1 
291 1 308 1 220 1 327 1 13 1 139 1 180 1 218 1 
291 1 275 1 308 1 220 3 327 1 13 1 66 1 139 3 180 1 118 1 218 1 
327 1 225 1 344 1 324 1 
308 1 327 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 174 (145,254) (145,254) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 174 (145,254) (145,254) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 174 (145,254) (145,254) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 174 (145,254) (145,254) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 174 (11,128) (11,128) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (122,185,280,305) (122,185,280,305) (122,185,280,305) 285 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (122,185,280,305) (122,185,280,305) (122,185,280,305) 285 369 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (122,185,280,305) (122,185,280,305) (122,185,280,305) 285 369 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 191 (48,282,334) (48,282,334) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 191 (48,282,334) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (115,242) (253,259,376) (48,282,334) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (152,202) (114,213) (114,213) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 191 (48,282,334) (48,282,334) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 191 (253,259,376) (253,259,376) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 191 (253,259,376) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (152,202) (152,202) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 191 (253,259,376) (253,259,376) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 222 200 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 1 143 1 122 1 185 1 174 1 254 1 145 1 257 1 305 1 
172 1 143 1 122 1 185 1 174 1 254 1 145 1 257 1 305 1 
172 1 143 1 122 1 185 1 174 1 254 1 145 1 257 1 305 1 
172 1 143 1 122 1 185 1 174 1 254 1 145 1 257 1 305 1 
143 1 244 1 343 2 91 1 185 4 153 1 228 1 131 1 336 1 122 1 221 1 280 3 192 1 302 3 157 2 257 4 119 1 305 1 
172 1 143 1 122 1 185 1 174 1 257 1 11 1 225 1 128 1 119 1 305 1 
172 1 143 1 122 2 185 2 257 1 285 1 305 2 
172 1 143 1 122 2 185 3 280 1 257 2 369 1 285 1 127 1 305 2 
172 1 143 1 122 2 185 3 280 1 257 2 369 1 285 1 127 1 305 2 
301 1 186 1 235 1 
41 1 
43 2 125 2 350 1 355 2 203 2 85 2 341 2 8 1 
24 1 43 2 333 1 307 1 218 1 154 1 32 1 107 1 337 1 137 1 362 1 34 2 203 3 85 2 341 2 58 1 8 1 59 1 365 1 87 1 142 2 88 1 144 1 90 1 298 2 276 1 321 1 125 2 212 1 350 1 193 1 230 2 303 1 126 2 355 3 304 1 23 1 
43 1 125 1 27 1 355 1 250 1 203 1 85 1 341 1 36 1 8 1 
43 1 186 1 297 1 249 1 289 1 206 1 78 1 319 1 250 1 301 1 355 1 170 1 203 1 171 1 
43 2 186 1 249 1 206 2 27 1 207 1 78 1 319 1 250 2 301 1 125 2 355 2 170 1 85 2 203 2 341 2 36 1 8 1 171 2 
373 1 368 1 206 1 288 1 171 1 
301 1 186 1 263 1 368 1 206 2 288 1 364 1 171 2 
368 1 206 1 171 1 
43 1 288 1 206 1 27 1 207 1 250 1 125 1 355 1 85 1 203 1 341 1 36 1 8 1 171 1 
186 1 
301 1 186 1 263 1 368 1 101 1 206 2 288 1 171 2 
160 1 315 2 186 1 357 1 263 1 162 1 367 1 368 2 288 2 206 5 301 1 348 2 150 1 56 1 272 1 354 1 139 1 233 2 171 5 
350 1 235 1 
43 2 130 1 38 1 250 1 125 1 350 1 355 2 203 2 85 1 21 1 341 1 
136 1 113 1 134 1 
142 1 88 1 144 1 90 1 205 1 307 1 298 1 137 1 212 1 350 1 126 1 355 1 203 1 59 1 365 1 23 1 
88 1 142 1 43 1 144 1 90 1 307 1 298 1 137 1 113 1 212 1 70 1 126 1 355 2 184 1 85 1 203 2 341 1 59 1 365 1 23 1 
43 5 44 1 289 1 38 1 250 1 179 1 125 1 350 1 70 2 355 5 183 1 184 1 85 4 203 5 21 1 341 4 
43 1 355 1 250 1 203 1 85 1 341 1 36 1 
43 2 250 1 350 1 70 1 355 2 85 2 203 2 341 2 21 1 
43 1 355 1 250 1 203 1 85 1 341 1 36 1 
43 1 130 1 38 1 250 1 125 1 355 1 85 1 203 1 341 1 
24 1 43 3 333 1 307 1 217 1 218 1 154 1 78 1 107 1 337 1 137 1 34 1 203 4 85 3 184 1 341 3 8 1 59 1 365 1 87 1 88 1 142 1 90 1 246 1 144 1 249 1 38 1 206 1 276 1 298 1 319 1 250 1 125 2 212 1 350 1 193 1 230 2 70 1 126 1 355 4 170 1 171 1 304 1 23 1 
43 2 289 1 250 1 350 1 70 1 355 2 85 1 203 2 183 1 21 1 341 1 
43 3 246 1 186 1 249 1 38 1 206 1 28 1 78 1 319 1 250 1 125 1 70 2 170 1 355 3 184 1 85 3 203 3 341 3 171 1 
136 1 43 2 113 1 125 1 38 1 70 1 355 2 203 2 85 2 341 2 
142 1 88 1 144 1 90 1 307 1 298 1 137 1 212 1 350 1 126 1 355 1 203 1 365 1 59 1 23 1 
142 1 88 1 144 1 307 1 298 1 137 1 212 1 350 1 338 1 283 1 126 1 355 1 203 1 365 1 59 1 
24 1 333 1 154 1 218 2 219 1 134 2 107 1 136 2 109 1 113 2 4 1 34 4 140 1 87 1 227 1 321 2 209 1 16 1 324 1 252 1 166 1 193 1 230 2 103 1 
43 1 319 1 250 1 83 1 355 1 85 1 203 1 341 1 
361 1 151 1 
361 1 151 1 
155 1 74 1 
155 1 74 1 
155 1 74 1 
361 1 377 1 151 1 
361 1 214 1 151 1 
155 1 361 2 96 1 216 1 151 2 74 1 
361 1 377 1 151 1 
361 1 377 1 151 1 
361 1 45 1 151 1 
361 1 45 1 151 1 
361 1 45 1 151 1 
62 1 204 1 43 2 317 1 206 1 92 1 229 1 120 1 133 1 146 1 299 1 40 1 17 1 361 1 350 1 102 1 214 1 117 1 355 2 203 2 85 2 341 2 151 1 171 1 
186 1 317 2 92 2 206 2 358 2 63 1 96 1 133 1 65 1 146 2 123 1 361 2 223 1 102 2 117 3 71 1 104 1 151 2 171 2 
244 1 221 1 119 1 
244 1 225 1 119 1 
25 1 221 2 2 1 115 1 225 1 119 3 
25 1 221 1 2 1 225 1 242 1 119 2 
25 2 221 1 2 1 225 1 119 2 
263 1 357 3 288 4 3 2 220 1 176 2 53 1 4 1 140 1 160 2 315 1 186 2 368 1 206 5 120 1 165 1 16 1 40 1 17 1 301 1 19 1 251 1 252 1 348 1 150 1 233 1 41 3 22 1 171 5 195 1 234 1 262 2 
263 1 357 8 288 7 3 6 52 1 53 2 270 1 110 1 4 3 272 1 118 1 140 3 160 6 315 2 186 5 161 1 368 6 206 9 165 2 16 3 17 4 301 1 19 3 251 3 252 3 373 5 348 2 150 1 356 1 233 2 41 9 196 5 171 9 195 1 262 6 
43 1 357 3 288 2 27 1 3 2 176 1 53 1 4 1 272 1 203 1 85 1 341 1 36 1 8 1 140 1 315 1 160 2 186 2 206 3 207 1 250 1 165 1 16 1 17 1 301 1 19 1 251 1 252 1 125 1 348 1 355 1 233 1 234 1 22 1 171 3 41 3 262 2 
43 1 288 3 3 4 53 1 52 1 110 1 4 2 118 1 203 1 341 1 8 1 160 4 206 4 207 1 250 1 165 1 16 2 17 2 301 1 251 2 19 2 252 2 125 1 348 1 355 1 22 1 171 4 262 4 357 5 27 1 176 2 272 1 85 1 36 1 140 2 315 1 186 3 233 1 234 1 41 6 
235 1 372 1 59 1 
222 1 59 1 
310 1 
137 1 59 1 365 1 
316 1 59 1 
137 1 59 1 
156 1 137 1 372 2 59 3 365 1 273 1 
77 1 218 3 132 1 321 4 208 1 346 1 325 2 166 2 112 1 4 1 363 1 34 7 284 1 215 1 84 1 103 3 140 1 
77 1 218 3 132 1 321 4 208 1 346 1 325 2 166 2 112 1 4 1 363 1 34 7 284 1 215 1 84 1 103 3 140 1 
77 1 218 3 132 1 321 4 208 1 346 1 325 2 166 2 112 1 4 1 363 1 284 1 34 7 215 1 84 1 103 3 140 1 261 1 
24 1 333 1 77 1 218 15 154 1 132 2 107 1 240 1 112 2 4 4 363 5 271 1 181 1 34 31 84 1 7 4 140 4 296 1 322 3 321 16 189 1 208 2 346 2 16 3 325 3 210 1 251 3 252 3 166 5 230 2 284 1 231 1 215 1 103 10 
328 1 24 2 333 2 218 4 154 2 132 1 321 5 208 1 346 1 325 2 107 2 240 1 166 3 112 1 4 1 363 1 230 4 284 1 34 9 215 1 84 1 103 4 313 1 140 1 
172 1 143 1 314 1 142 1 245 1 185 1 334 1 298 1 48 1 191 1 122 1 349 1 257 1 126 1 182 1 305 1 
172 1 142 1 245 1 185 2 334 1 298 1 47 1 164 1 191 1 50 1 122 1 280 1 349 1 257 2 126 1 182 1 305 1 
42 1 142 1 172 1 245 1 185 1 307 1 298 1 47 1 50 1 280 1 115 1 212 1 349 1 282 1 257 1 126 1 225 1 182 1 259 1 119 1 
172 2 142 1 245 2 144 1 185 1 298 1 164 1 122 1 114 1 213 1 349 2 257 1 126 1 182 2 202 1 305 1 9 1 
172 1 143 1 142 1 245 1 185 1 334 1 298 1 48 1 191 1 50 1 122 1 349 1 257 1 126 1 182 1 305 1 
278 1 
43 1 289 1 241 1 203 1 6 1 340 1 59 1 160 2 297 1 249 1 206 3 298 2 13 1 250 1 165 1 19 1 68 1 18 1 348 1 212 1 351 1 126 2 355 1 170 1 171 3 260 2 263 1 357 2 264 1 307 1 359 1 78 1 309 1 137 1 82 1 311 1 35 1 142 2 315 1 144 2 186 1 368 2 319 1 190 1 148 1 98 1 150 1 374 1 233 1 41 1 
43 1 263 1 297 1 368 2 249 1 206 3 289 1 106 1 319 1 78 1 250 1 13 1 148 1 101 1 311 1 374 1 241 1 170 1 355 1 203 1 260 2 171 3 
43 1 263 1 289 1 78 1 177 1 311 1 241 1 203 1 186 1 297 1 368 1 249 1 206 3 319 1 13 1 250 1 148 1 301 1 101 1 374 1 355 1 170 1 171 3 260 3 
43 1 263 1 289 1 78 1 106 1 177 1 224 1 311 1 241 1 203 1 186 1 297 1 249 1 368 2 206 3 319 1 13 1 250 1 148 1 301 1 101 1 374 1 355 1 170 1 171 3 260 3 
43 1 289 1 105 1 106 4 201 1 116 1 241 1 203 1 340 2 6 2 160 1 297 1 249 1 206 5 250 1 13 1 67 1 301 5 300 2 19 2 348 1 351 2 170 1 355 1 260 6 171 5 263 3 357 1 78 1 309 1 177 4 224 4 311 1 35 1 315 1 186 5 368 7 319 1 148 1 326 1 101 1 374 1 150 1 233 1 
43 1 357 1 264 1 289 1 78 1 309 1 311 1 241 1 35 1 203 1 6 1 340 1 160 1 315 1 186 1 297 1 249 1 206 2 319 1 13 1 250 1 148 1 19 1 348 1 351 1 374 1 150 1 355 1 170 1 233 1 41 1 171 2 260 2 
43 1 263 2 357 1 289 1 105 1 106 2 78 1 309 1 177 2 201 1 224 2 311 1 241 1 35 1 203 1 6 2 340 2 160 1 315 1 186 1 297 1 368 4 249 1 206 4 319 1 13 1 250 1 148 1 67 1 301 1 300 2 19 2 348 1 351 2 374 1 150 1 355 1 170 1 233 1 171 4 260 4 
43 1 263 2 357 1 289 1 105 1 106 2 78 1 309 1 177 2 201 1 224 2 311 1 241 1 35 1 203 1 6 2 340 2 160 1 315 1 186 1 297 1 368 4 249 1 206 4 319 1 13 1 250 1 148 1 67 1 301 1 300 2 19 2 348 1 351 2 374 1 150 1 355 1 170 1 233 1 171 4 260 4 
43 1 263 2 357 1 289 1 105 1 106 2 78 1 177 2 55 2 224 2 311 1 241 1 35 1 203 1 340 2 160 1 315 1 186 1 344 1 297 1 368 4 249 1 206 4 319 1 13 1 250 1 277 2 148 1 301 1 97 1 348 1 351 2 374 1 150 1 355 1 170 1 327 1 233 1 41 2 171 4 260 4 
43 1 263 2 357 1 289 1 105 1 78 1 106 3 309 1 177 3 201 1 116 1 224 3 311 1 241 1 35 1 203 1 6 2 340 2 160 1 315 1 186 1 297 1 249 1 368 5 206 4 319 1 13 1 250 1 148 1 67 1 301 1 300 2 19 2 348 1 351 2 150 1 374 1 355 1 170 1 233 1 171 4 260 5 
43 1 263 2 357 1 289 1 105 1 78 1 106 3 309 1 177 3 201 1 116 1 224 3 311 1 241 1 35 1 203 1 6 2 340 2 160 1 315 1 186 1 297 1 249 1 368 5 206 4 319 1 13 1 250 1 148 1 67 1 301 1 300 2 19 2 348 1 351 2 150 1 374 1 355 1 170 1 233 1 171 4 260 5 
43 1 263 2 357 1 264 1 289 1 106 2 78 1 177 2 55 2 224 2 311 1 241 1 35 1 203 1 340 2 160 1 315 1 186 1 297 1 368 4 249 1 206 4 319 1 13 1 250 1 277 2 148 1 301 1 97 1 348 1 351 2 374 1 150 1 355 1 170 1 233 1 41 2 171 4 260 4 
24 1 235 1 333 1 154 1 218 3 219 1 134 1 107 1 136 1 113 1 112 1 4 1 34 6 84 1 140 1 87 1 321 3 346 1 325 1 166 2 193 1 350 2 230 2 284 1 215 1 103 2 
24 2 333 2 218 6 154 2 134 11 107 2 269 1 108 1 136 4 337 1 113 11 4 1 363 1 271 1 34 14 7 3 140 2 60 1 87 2 61 1 296 1 318 1 322 3 321 8 16 2 251 2 166 1 252 1 350 1 193 1 230 4 303 1 103 2 
24 1 43 1 307 1 333 1 154 1 218 1 107 1 136 1 335 1 137 1 337 1 34 2 203 2 85 1 184 1 341 1 342 1 59 1 365 1 60 1 88 1 142 1 87 1 90 1 144 1 205 1 298 1 321 1 66 1 212 1 350 1 193 1 230 2 126 1 70 1 303 1 355 2 23 1 
24 2 43 1 307 1 333 2 76 1 154 2 218 1 107 2 137 1 337 1 5 1 34 1 203 2 85 1 184 1 138 1 341 1 59 1 365 1 60 1 88 1 87 2 142 1 90 1 144 1 276 1 298 1 212 1 193 2 230 4 70 1 126 1 169 1 355 2 23 1 
24 2 43 1 307 2 333 2 266 1 154 2 218 1 219 1 32 2 50 1 107 2 81 1 337 1 137 2 34 2 203 1 85 1 341 1 59 3 10 1 314 1 142 7 87 2 144 2 93 1 298 8 370 1 321 1 15 1 68 1 212 2 98 1 193 2 230 4 70 1 126 8 303 1 355 1 232 1 
24 1 43 1 333 1 154 1 218 2 134 1 107 1 136 1 113 1 4 1 34 3 85 1 203 1 341 1 140 1 60 1 87 1 89 1 38 1 321 1 16 1 251 1 166 1 252 1 125 1 193 1 230 2 355 1 103 1 
87 1 24 1 333 1 154 1 321 2 219 1 134 1 16 1 107 1 136 1 109 1 113 1 193 1 363 1 230 2 34 2 103 1 140 1 
87 1 24 1 333 1 154 1 218 2 219 1 134 1 107 1 324 1 136 1 166 1 252 1 113 1 4 1 193 1 230 2 34 2 103 1 
87 1 24 1 333 1 218 2 154 1 321 2 219 1 134 2 16 1 107 1 136 2 251 1 166 1 252 1 113 2 4 1 193 1 363 1 230 2 34 4 103 2 140 1 
87 1 24 1 333 1 154 1 321 2 134 1 15 1 16 1 107 1 136 1 109 1 113 1 193 1 363 1 230 2 34 2 103 1 140 1 
87 1 24 1 333 1 154 1 218 2 134 1 15 1 107 1 324 1 136 1 166 1 252 1 113 1 4 1 193 1 230 2 34 2 103 1 
87 1 24 1 333 1 218 2 154 1 321 2 134 2 15 1 16 1 107 1 136 2 251 1 166 1 252 1 113 2 4 1 193 1 363 1 230 2 34 4 103 2 140 1 
87 1 24 1 333 1 218 2 154 1 321 2 134 2 16 1 107 1 136 2 251 1 166 1 252 1 113 2 4 1 193 1 363 1 230 2 34 4 103 2 140 1 
24 1 307 1 333 1 154 1 218 1 107 1 137 1 337 1 34 2 203 1 365 1 59 1 88 1 142 1 87 1 90 1 144 1 276 1 298 1 321 1 212 1 350 1 193 1 230 2 303 1 126 1 355 1 23 1 
24 1 307 1 333 1 154 1 218 1 107 1 137 1 337 1 338 1 34 2 203 1 365 1 59 1 88 1 142 1 87 1 144 1 298 1 321 1 323 1 212 1 350 1 193 1 283 1 230 2 303 1 126 1 355 1 
87 1 24 1 333 1 218 2 154 1 321 2 134 2 16 1 107 1 136 2 251 1 166 1 252 1 113 2 4 1 193 1 363 1 230 2 34 4 103 2 140 1 60 1 
24 1 307 1 333 1 218 2 154 1 134 2 107 1 136 2 137 1 113 2 4 1 5 1 363 1 34 4 203 1 140 1 365 1 59 1 88 1 142 1 314 1 87 1 90 1 276 1 298 1 321 2 16 1 251 1 166 1 252 1 212 1 193 1 230 2 126 1 355 1 103 2 23 1 
24 1 43 1 333 1 218 1 154 1 134 1 107 1 136 1 113 1 4 1 363 1 180 1 34 3 85 1 203 1 341 1 140 1 60 1 87 1 38 1 321 2 16 1 251 1 252 1 125 1 193 1 230 2 355 1 103 1 
24 2 328 1 329 1 333 2 236 1 154 2 218 10 107 2 4 3 158 1 363 3 271 1 34 19 292 2 7 2 140 3 141 1 296 1 163 2 322 1 321 9 16 3 251 3 166 3 252 3 256 1 194 1 230 4 103 6 73 1 
24 3 328 1 329 1 332 1 333 3 198 1 218 12 236 2 154 3 237 1 308 1 107 3 240 2 4 2 158 1 363 2 34 26 271 2 292 1 7 2 140 3 141 1 163 4 321 14 322 2 16 3 251 3 166 2 252 2 20 1 230 6 258 1 103 4 73 2 
24 3 328 1 329 1 332 1 333 3 198 1 236 2 154 3 218 21 308 1 237 1 107 3 240 1 112 1 4 5 158 1 363 4 271 3 34 41 292 1 84 1 7 4 140 5 141 1 274 1 296 1 163 4 322 3 321 20 346 1 16 4 325 1 251 4 166 4 252 4 194 1 20 1 230 6 284 1 215 1 258 1 103 8 73 1 
24 4 328 1 329 1 332 1 333 4 198 1 236 2 154 4 218 18 308 1 237 1 107 4 240 2 112 1 4 4 158 1 363 3 271 3 34 38 292 1 84 1 7 4 140 5 141 1 274 1 296 1 163 4 322 3 321 20 346 1 16 4 325 1 251 4 166 4 252 3 194 1 20 1 230 8 284 1 215 1 258 1 103 7 73 1 
24 2 328 1 329 1 332 1 333 2 198 1 236 1 154 2 218 25 308 1 237 1 107 2 269 2 240 1 112 1 4 8 158 1 363 7 271 2 34 52 292 1 84 1 7 4 140 8 141 1 296 2 163 4 322 4 321 27 346 1 16 7 325 1 251 7 166 7 252 7 20 1 230 4 284 1 215 1 258 1 103 14 73 1 
361 1 223 1 317 1 92 1 102 1 243 1 71 1 96 1 151 1 146 1 
62 1 214 1 
361 1 317 1 175 1 92 1 102 1 375 1 151 1 146 1 238 1 
352 1 377 1 
26 1 45 1 216 1 
186 1 317 1 206 1 92 1 358 1 63 1 96 1 133 1 146 1 123 1 361 1 223 1 102 1 117 2 71 1 104 1 151 1 171 1 
186 1 317 1 206 1 92 1 358 1 63 1 96 1 133 1 146 1 123 1 361 1 223 1 102 1 117 2 71 1 104 1 151 1 171 1 
186 1 317 1 206 1 92 1 358 1 63 1 96 1 133 1 146 1 123 1 361 1 223 1 102 1 117 2 71 1 104 1 151 1 171 1 
352 1 216 1 377 1 
352 1 216 1 377 1 
26 1 45 1 
26 1 45 1 216 1 
229 1 299 1 
43 2 288 1 358 1 361 1 33 1 117 1 203 2 85 2 341 2 204 1 62 1 317 1 206 1 92 1 229 1 120 1 146 1 299 1 17 1 40 1 123 1 350 1 102 1 214 1 355 2 151 1 171 1 
24 1 43 2 129 1 307 1 333 1 266 1 154 1 218 1 199 1 32 2 107 1 178 1 137 1 337 1 57 1 34 2 203 2 59 1 60 1 87 1 142 2 93 1 298 2 321 1 281 1 212 1 193 1 230 2 126 2 303 1 355 2 
314 1 142 2 245 1 253 1 100 1 126 2 298 2 376 1 191 1 50 1 
142 1 245 1 187 1 126 1 298 1 376 1 191 1 50 1 
142 1 152 1 245 1 144 1 100 1 126 1 298 1 202 1 
142 1 245 1 253 1 100 1 126 1 298 1 376 1 191 1 50 1 
255 1 
301 1 160 1 186 1 357 1 162 1 235 1 139 1 
315 1 160 1 186 1 357 1 309 1 19 1 348 1 150 1 6 1 233 1 41 1 
142 1 315 1 144 1 307 1 298 1 95 1 200 1 156 1 137 1 222 1 212 1 348 1 150 1 126 1 233 1 59 1 365 1 
75 2 1 1 263 1 357 8 198 1 359 1 237 1 308 1 3 5 31 1 4 2 271 1 7 1 140 2 315 2 160 5 186 5 368 1 206 1 322 1 165 1 16 2 301 2 19 3 251 2 124 1 252 2 348 2 20 1 150 2 258 1 233 2 171 1 41 6 262 5 
75 2 43 1 357 2 27 1 112 1 201 1 4 1 203 1 85 1 341 1 36 1 140 2 8 1 315 1 160 2 206 1 207 1 250 1 371 1 346 1 124 1 125 1 348 1 150 1 355 1 215 1 233 1 171 1 
315 1 160 1 186 1 357 1 162 1 301 1 348 1 150 1 233 1 139 1 
160 2 186 1 357 2 3 2 16 1 251 1 19 1 252 1 4 1 140 1 41 3 262 2 
301 1 186 1 263 1 368 1 206 1 171 1 
357 2 263 2 307 1 265 1 359 2 268 1 137 1 82 1 272 1 59 1 142 4 315 2 144 2 160 2 368 4 206 3 298 4 12 1 165 2 211 2 18 1 68 1 212 1 348 2 98 1 150 1 126 4 233 2 171 3 
24 1 43 2 333 1 307 1 218 1 154 1 107 1 337 1 137 1 34 1 203 3 85 2 341 2 8 1 365 1 59 1 142 1 88 1 87 1 144 1 90 1 298 1 276 1 125 2 212 1 350 1 193 1 230 2 126 1 355 3 304 1 23 1 
160 2 315 1 186 4 357 1 359 1 3 2 165 1 325 1 301 2 19 2 348 1 150 1 233 1 41 4 262 2 
317 1 92 1 135 1 
317 1 92 1 229 1 226 1 71 1 
317 1 92 1 135 1 
317 1 92 1 135 1 
317 1 92 1 366 1 
317 1 92 1 366 1 
317 1 92 1 366 1 
317 1 92 1 
361 1 151 1 
24 2 333 2 218 4 154 2 321 4 346 1 325 1 107 2 166 2 240 1 112 1 4 1 363 1 230 4 34 8 284 1 215 1 84 1 103 3 140 1 
166 2 112 1 4 1 235 1 34 6 284 1 218 3 321 3 215 1 84 1 103 2 140 1 346 1 325 1 
24 1 333 1 218 2 154 1 321 2 16 1 107 1 251 1 166 1 252 1 4 1 363 1 230 2 353 1 34 4 103 2 140 1 
296 1 218 4 322 1 321 3 16 1 251 1 166 1 252 1 4 1 363 1 271 1 34 7 103 2 7 2 140 1 
24 2 333 2 218 12 154 2 107 2 269 1 240 2 112 2 4 3 363 4 34 23 84 1 140 3 7 2 296 1 275 1 318 1 321 11 322 2 346 2 16 2 325 1 251 2 252 2 166 5 230 4 284 1 215 1 103 9 
34 1 218 1 7 1 
34 1 321 1 322 1 
24 1 333 1 154 1 218 3 360 1 321 3 16 1 107 1 251 1 252 1 166 2 4 1 363 1 230 2 353 1 34 6 103 3 140 1 
24 1 328 1 333 1 198 1 218 6 154 1 237 1 308 1 107 1 4 2 363 1 34 12 271 1 7 1 140 2 322 1 321 6 16 2 251 2 252 2 166 1 230 2 20 1 258 1 103 2 
218 3 321 3 346 1 166 1 112 1 4 1 363 1 34 6 215 1 103 2 140 1 
24 1 275 1 333 1 218 2 154 1 321 1 346 1 107 1 166 1 240 1 112 1 363 1 230 2 284 1 34 3 84 1 103 2 
24 1 328 1 333 1 154 1 218 5 321 5 371 1 346 2 107 1 166 3 112 2 4 2 363 2 230 2 34 10 215 1 103 5 140 2 
328 1 24 1 333 1 154 1 321 2 16 1 107 1 363 1 230 2 34 2 103 1 140 1 
328 1 24 1 333 1 218 2 154 1 321 2 16 1 107 1 251 1 166 1 252 1 4 1 363 1 230 2 34 4 103 2 140 1 
328 1 24 3 275 1 333 3 218 2 154 3 321 1 346 1 107 3 240 1 166 1 112 1 194 1 363 1 230 6 34 3 103 2 
24 5 328 1 333 5 218 18 154 5 107 5 240 2 112 3 4 5 363 5 271 1 34 34 84 1 7 4 140 5 296 1 275 1 322 3 321 16 189 1 346 3 16 3 325 1 210 1 251 3 252 3 166 7 194 1 230 10 284 1 231 1 353 1 215 2 103 12 
24 1 328 1 333 1 198 1 218 4 154 1 107 1 112 1 4 1 34 8 271 1 84 1 140 1 7 1 322 1 321 4 346 1 325 1 166 2 230 2 284 1 215 1 103 2 
328 1 24 2 333 2 198 1 218 5 154 2 107 2 112 1 4 1 363 1 34 11 271 1 84 1 7 2 140 2 296 1 322 1 321 6 346 1 16 1 325 1 251 1 166 2 230 4 284 1 353 1 215 1 103 3 
24 3 328 1 333 3 198 1 218 10 154 3 237 1 308 1 107 3 240 1 112 1 4 3 363 1 34 19 271 1 84 1 7 1 140 3 322 1 321 9 346 1 16 2 325 1 251 2 252 2 166 3 230 6 20 1 284 1 353 1 215 1 258 1 103 4 
24 3 328 1 333 3 198 1 218 7 154 3 237 1 308 1 107 3 240 1 112 1 4 2 363 2 34 17 271 1 84 1 7 1 140 3 322 1 321 10 346 1 16 2 325 1 251 2 252 1 166 3 230 6 20 1 284 1 353 1 215 1 258 1 103 5 
24 1 328 1 333 1 198 1 218 4 154 1 107 1 112 1 4 1 34 8 271 1 84 1 140 1 7 1 322 1 321 4 346 1 325 1 166 2 230 2 284 1 215 1 103 2 
24 1 328 1 333 1 198 1 218 6 154 1 237 1 308 1 107 1 4 2 363 1 34 12 271 1 7 1 140 2 322 1 321 6 16 2 251 2 252 2 166 1 230 2 20 1 258 1 103 2 
24 4 328 1 333 4 198 1 218 8 154 4 237 1 308 1 107 4 240 2 112 1 4 2 363 2 34 18 271 1 84 1 7 1 140 3 322 1 321 10 346 1 16 2 325 1 251 2 252 1 166 3 20 1 230 8 284 1 353 1 215 1 258 1 103 5 
328 1 24 4 333 4 198 1 218 7 154 4 237 1 308 1 107 4 240 2 4 2 363 3 34 16 271 1 7 1 140 3 322 1 321 9 16 3 251 3 252 2 166 3 194 1 20 1 230 8 258 1 103 6 
218 4 321 3 346 3 166 3 112 3 4 1 363 3 34 7 284 2 84 1 215 1 103 6 140 1 
328 1 24 4 333 4 198 1 218 8 154 4 237 1 308 1 107 4 240 2 112 1 4 2 363 1 34 18 271 1 84 1 7 1 140 3 322 1 321 10 346 1 16 2 325 1 251 2 252 1 166 3 194 1 20 1 230 8 284 1 215 1 258 1 103 4 
43 1 331 1 350 1 289 1 355 1 203 1 183 1 
43 1 330 1 331 1 289 1 79 1 149 1 69 1 350 1 291 1 355 1 183 1 203 1 
142 1 68 1 144 1 137 1 212 1 98 1 235 1 307 1 126 1 298 1 59 1 
88 1 142 1 43 1 144 1 307 1 298 1 137 1 212 1 350 1 70 1 126 1 355 2 85 1 203 2 341 1 59 1 365 1 23 1 
43 2 307 1 78 1 137 2 203 2 85 2 341 1 365 2 59 3 142 1 88 1 316 1 298 1 319 1 250 2 211 1 121 1 212 1 350 1 126 1 70 1 355 2 21 1 23 1 
43 2 307 1 78 1 137 2 203 2 85 2 341 1 365 2 59 3 142 1 88 1 316 1 298 1 319 1 250 2 211 1 121 1 212 1 350 1 283 1 126 1 70 1 355 2 21 1 
306 1 307 1 137 1 222 1 59 4 365 1 142 3 144 1 186 1 316 1 368 1 206 2 298 3 372 1 64 1 345 1 211 1 121 1 301 1 212 1 126 3 170 1 171 2 
142 3 144 1 186 1 316 1 368 1 306 1 206 2 307 1 298 3 372 1 147 1 211 1 301 1 121 1 137 1 212 1 222 1 126 3 170 1 365 1 171 2 59 4 
142 1 10 1 212 1 307 1 126 1 298 1 
10 1 314 1 0 1 142 6 144 2 307 2 298 7 266 1 370 1 188 1 32 1 50 1 80 1 156 1 81 1 137 2 212 3 126 7 232 1 365 1 59 3 
24 2 43 1 307 1 333 2 218 3 154 2 134 1 107 2 136 1 137 1 113 1 112 1 4 1 5 1 34 6 57 1 84 1 203 2 85 1 341 1 138 1 140 1 59 1 365 1 60 1 88 1 87 2 314 1 142 1 90 1 298 1 276 1 321 3 346 1 325 1 166 2 212 1 350 2 193 2 230 4 284 1 70 1 126 1 355 2 215 1 103 2 23 1 
357 1 263 1 288 1 265 1 46 1 239 1 222 1 159 1 139 1 59 2 142 1 160 1 144 1 315 2 186 1 162 1 368 2 206 3 298 1 372 1 147 1 301 1 348 2 150 2 126 1 170 1 233 2 171 3 
10 1 142 1 307 1 298 1 95 1 372 1 310 1 156 1 137 1 212 1 126 1 365 1 59 1 
142 4 314 1 144 1 306 1 307 1 298 4 68 1 137 1 212 1 98 1 126 4 72 1 59 1 
0 1 142 2 307 1 298 2 320 1 188 1 211 1 290 1 111 1 137 1 212 2 126 2 365 1 59 1 
42 1 142 1 244 1 144 1 212 1 307 1 126 1 298 1 225 1 119 1 
142 2 314 1 137 1 212 1 129 1 307 1 126 2 298 2 266 1 59 1 50 1 
142 4 314 1 144 1 307 2 298 5 266 1 211 1 68 1 81 1 137 2 98 1 212 2 126 5 232 1 72 1 59 3 
142 4 314 1 144 1 307 2 298 5 266 1 211 1 68 1 137 2 98 1 212 2 126 5 312 1 232 1 72 1 59 3 
88 1 142 1 43 1 144 1 307 1 298 1 137 1 212 1 350 1 283 1 70 1 126 1 355 2 85 1 203 2 341 1 59 1 365 1 
0 1 142 1 307 1 298 1 188 1 211 1 80 1 156 1 137 1 212 2 126 1 365 1 59 1 
295 1 247 1 350 1 14 1 287 1 
43 1 288 1 27 1 78 1 267 1 203 1 85 1 341 1 36 1 8 1 246 1 295 1 247 1 186 1 249 1 206 2 207 1 319 1 250 2 14 1 301 1 279 1 125 1 355 1 170 1 286 1 171 2 287 1 
295 1 43 1 247 1 199 1 178 1 281 1 355 1 203 1 287 1 
279 1 267 1 287 1 
336 1 91 1 302 1 235 1 
336 1 122 1 91 1 185 1 302 1 257 1 305 1 
172 1 349 1 257 1 
143 1 197 1 185 3 91 1 54 1 122 1 336 1 167 1 302 1 257 3 37 2 305 1 
336 1 343 1 122 1 91 1 185 2 280 1 302 1 257 2 305 1 
143 1 244 1 122 1 221 1 185 1 302 1 157 1 228 1 257 1 119 1 305 1 
143 1 122 1 91 1 185 1 302 1 257 1 305 1 
143 1 336 1 122 1 91 2 185 1 257 1 305 1 
143 1 91 1 185 2 94 1 30 1 49 1 122 2 302 1 257 2 305 2 
143 1 91 1 185 3 51 1 336 1 122 1 280 2 192 1 302 2 157 1 257 3 305 1 86 1 
143 1 173 1 244 1 91 1 185 2 336 1 122 1 221 1 280 1 302 1 115 1 257 2 225 1 119 2 305 1 
143 1 343 1 91 1 185 4 131 1 336 1 122 2 280 2 192 1 302 2 157 1 257 4 305 2 
143 1 336 1 122 1 91 1 185 1 302 1 257 1 305 1 
197 1 91 2 185 4 248 1 54 1 336 2 122 1 280 2 192 1 302 3 157 1 257 4 37 1 305 1 
143 1 91 1 185 2 29 1 122 1 336 1 280 1 302 1 257 2 127 1 305 1 294 1 
143 1 197 1 185 3 91 1 54 2 122 1 336 1 302 1 257 3 339 1 37 2 305 1 
347 1 168 1 302 2 99 2 
143 1 122 1 185 1 257 1 39 1 305 1 
143 1 336 1 122 1 91 1 185 2 280 1 302 1 257 2 51 1 305 1 
293 1 
143 1 336 1 122 1 91 1 185 1 302 1 257 1 305 1 
143 1 185 3 91 1 51 1 122 1 336 1 280 1 302 1 257 3 37 1 305 1 
248 1 302 1 192 1 157 1 
91 1 302 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 82 231 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 82 231 84 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 82 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 17 294 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
315 1 304 1 172 3 78 1 186 2 177 1 243 2 356 1 301 1 140 2 114 1 125 1 14 3 
304 1 27 2 327 1 305 1 248 1 78 1 186 5 98 1 147 2 312 1 125 1 14 9 102 1 127 1 315 3 171 1 267 1 172 9 174 1 111 2 158 1 177 1 243 2 356 6 301 4 139 2 114 2 140 2 
304 1 27 2 327 1 305 1 248 1 78 1 186 5 98 1 147 2 312 1 125 1 14 9 102 1 127 1 315 3 171 1 267 1 172 9 174 1 111 2 158 1 177 1 243 2 356 6 301 4 139 2 114 2 140 2 
304 1 27 2 327 1 305 1 248 1 78 1 186 6 98 1 147 2 312 1 125 1 14 10 102 1 127 1 315 4 171 1 267 1 172 10 174 1 111 2 158 1 177 1 243 2 356 7 301 5 139 2 114 2 140 2 
127 1 171 1 315 2 304 1 305 1 327 1 27 2 267 1 78 1 172 7 186 4 174 1 111 2 147 1 98 1 177 1 158 1 356 4 312 1 243 2 301 3 139 2 140 2 114 2 125 1 14 7 102 1 
315 1 171 1 304 1 27 1 248 1 172 4 186 3 111 1 147 2 177 1 243 1 356 3 301 2 139 1 140 1 125 1 14 4 102 1 
127 1 304 1 199 1 213 1 172 2 30 1 186 1 111 1 177 1 312 1 243 1 139 1 140 1 114 1 125 1 14 2 
171 1 315 3 304 1 27 1 305 1 327 1 248 1 172 9 78 1 186 5 111 1 147 2 177 1 243 2 356 7 301 4 139 1 49 1 140 2 114 1 125 1 14 9 102 1 325 1 
171 1 315 3 304 1 27 1 305 1 327 1 248 1 172 9 78 1 186 5 111 1 147 2 177 1 243 2 356 7 301 4 139 1 49 1 140 2 114 1 125 1 14 9 102 1 325 1 
292 1 130 1 326 1 280 1 28 1 318 1 157 1 270 1 258 1 137 1 313 1 303 1 342 1 228 1 
150 1 
23 1 56 1 25 1 280 2 258 1 28 2 150 1 253 1 
23 1 25 1 280 5 28 5 83 2 66 1 281 2 132 1 225 1 56 2 339 1 258 2 124 1 161 2 22 1 272 1 150 1 11 1 233 1 
23 1 288 1 150 1 
150 1 156 1 173 2 
270 2 130 2 326 2 137 2 318 2 313 2 302 1 342 1 
117 1 277 1 26 1 326 3 185 1 118 1 145 1 166 1 251 2 254 2 257 1 97 1 99 1 313 2 290 1 169 1 220 2 37 1 195 1 130 2 196 1 318 3 336 1 265 1 105 1 298 2 239 1 270 2 69 1 68 2 207 1 112 1 137 2 113 1 302 1 342 1 51 1 
292 1 270 1 130 1 326 1 137 1 318 1 313 1 342 1 157 1 228 1 
292 1 23 1 130 1 326 1 280 1 28 1 318 1 308 1 214 1 109 1 88 1 150 1 62 1 12 1 
292 1 23 1 130 1 326 1 280 2 28 2 318 1 308 1 214 1 270 1 88 1 137 1 313 1 150 1 62 1 
56 1 260 1 280 1 258 1 28 1 
23 1 55 1 56 1 25 1 280 2 258 1 28 2 150 1 
56 1 280 1 28 1 
130 2 326 2 318 2 270 1 137 1 313 1 8 1 302 2 91 1 
160 1 73 1 74 1 
326 1 196 1 26 1 185 1 318 1 145 1 166 1 251 1 298 1 68 1 99 1 290 1 302 1 9 1 51 1 37 1 
130 1 196 1 26 1 326 2 185 1 318 2 145 1 166 1 251 1 298 1 270 1 68 1 73 1 99 1 313 1 290 1 180 1 334 1 51 1 37 1 
288 1 302 1 
270 3 130 3 326 3 137 1 318 3 313 3 302 1 334 1 
292 1 270 1 130 1 326 1 318 1 313 1 228 1 
292 1 270 1 130 1 326 1 137 1 318 1 313 1 8 1 91 1 
117 1 26 1 326 4 185 1 280 1 118 1 28 1 145 1 308 1 166 1 251 1 214 1 254 1 257 1 7 1 99 1 290 1 313 3 8 1 334 1 62 1 220 2 37 1 195 1 41 1 292 1 130 3 196 1 318 4 336 1 105 1 298 1 239 1 270 3 69 1 68 1 88 1 207 1 112 1 137 2 302 1 180 1 342 1 51 1 
270 1 130 2 326 2 318 2 313 1 302 1 334 1 193 1 12 1 
292 1 41 1 130 3 326 3 280 1 28 1 318 3 212 1 308 1 214 1 270 3 88 1 137 1 313 3 8 1 180 1 334 2 150 1 62 1 
130 2 326 2 318 2 270 2 137 1 160 1 73 1 313 2 334 1 8 1 
326 1 26 1 196 1 185 1 318 1 145 1 166 1 251 1 298 1 68 1 99 1 290 1 302 1 51 1 37 1 
326 1 26 1 196 1 185 1 318 1 145 1 166 1 251 1 298 1 68 1 302 1 141 1 51 1 37 1 291 1 
118 1 119 1 31 1 285 1 254 4 257 1 220 2 195 1 314 1 103 1 64 1 321 1 336 1 265 2 105 1 69 2 136 1 71 1 207 1 73 2 160 2 341 1 74 2 76 1 
292 1 270 1 130 1 326 1 90 1 318 1 313 1 214 1 
130 5 326 5 318 5 270 4 20 1 137 1 333 1 313 4 334 2 8 1 302 1 180 1 193 1 12 1 
292 1 270 2 130 2 326 2 90 1 318 2 313 2 228 1 
276 1 176 1 197 1 153 2 237 2 324 1 
153 1 237 1 38 1 
153 1 237 1 
153 1 237 1 
276 1 324 1 
276 1 324 1 
276 1 324 1 
96 1 153 1 237 1 
96 1 153 1 237 1 
96 1 153 1 237 1 
153 1 237 1 246 1 
153 1 237 1 246 1 
153 1 237 1 246 1 
18 1 153 1 82 1 106 1 237 1 231 1 
18 1 153 1 280 1 28 1 82 1 84 1 106 1 237 1 231 1 
67 2 205 1 27 1 199 1 139 2 
111 1 27 1 139 1 
111 1 199 1 139 1 
67 1 205 1 27 2 178 1 199 1 139 3 
67 1 205 1 27 1 184 1 199 1 139 2 
0 2 23 1 25 1 306 1 280 5 28 5 344 1 119 1 281 1 56 1 258 4 124 3 150 2 61 1 11 1 259 1 40 2 80 1 83 1 156 2 297 1 173 2 175 1 86 1 89 1 71 1 339 2 341 1 161 1 244 1 357 1 76 1 274 2 
0 6 280 9 281 2 56 6 150 5 10 1 11 1 156 6 297 2 339 6 71 3 161 2 341 3 76 3 23 1 163 1 25 1 306 3 28 9 119 3 258 7 311 1 124 8 259 2 40 6 80 1 260 5 42 5 320 1 83 2 223 1 44 1 173 6 132 1 175 3 322 1 357 4 
0 2 23 1 306 1 280 3 28 3 281 1 119 1 258 2 124 3 150 3 61 1 259 1 40 2 83 1 156 2 297 1 173 2 132 1 175 1 71 1 339 2 161 1 341 1 322 1 244 1 357 1 76 1 274 1 
0 4 23 1 306 2 280 4 28 4 281 1 119 2 258 3 124 5 150 4 61 1 259 1 40 4 320 1 83 1 223 1 156 4 44 1 297 1 173 4 132 1 175 2 71 2 339 4 161 1 341 2 322 1 244 1 357 2 76 2 274 2 
58 1 
196 1 288 1 218 1 
196 1 338 1 
196 1 51 1 
152 1 196 3 26 1 218 2 332 1 51 1 
196 1 26 1 51 1 
196 1 201 1 
129 1 16 1 221 1 321 3 265 4 119 1 203 1 224 1 285 2 254 7 53 1 69 3 135 1 71 1 168 2 189 1 79 1 209 1 
182 4 119 4 282 1 285 5 254 31 53 1 257 1 168 3 79 2 190 1 349 1 220 2 195 1 129 1 16 1 221 1 321 10 336 1 265 16 203 5 105 1 224 2 240 1 175 3 135 2 69 15 71 4 341 3 50 1 343 3 181 1 247 1 76 3 209 2 
119 1 285 3 254 9 257 2 168 2 79 1 220 4 195 2 129 1 16 1 321 4 221 1 336 2 265 5 105 2 203 1 107 1 224 1 69 4 135 1 71 1 181 1 116 1 209 1 
129 1 16 1 221 1 321 3 265 4 119 1 203 1 224 1 285 2 254 7 53 1 69 3 135 1 71 1 168 2 79 1 209 1 
129 1 16 1 221 1 321 3 265 4 119 1 203 1 224 1 285 2 254 7 53 1 69 3 135 1 71 1 168 2 79 1 209 1 
210 2 183 2 185 1 229 2 145 1 166 1 251 1 3 1 14 1 196 1 235 1 295 1 353 1 172 1 298 1 68 1 206 1 243 1 140 1 114 2 323 1 51 1 75 1 
210 1 183 1 275 1 142 1 27 1 229 1 185 1 145 1 251 1 33 1 217 1 347 1 36 1 232 1 14 1 199 1 172 1 298 1 111 1 68 1 177 1 178 1 243 1 139 2 140 1 114 1 
210 1 183 1 275 1 142 1 24 1 304 1 27 1 229 1 185 1 145 1 251 1 186 1 217 1 347 1 36 1 125 1 232 1 14 2 199 1 172 2 298 1 111 1 68 1 177 1 178 1 356 1 243 1 139 2 140 1 114 1 
210 1 183 1 275 1 142 1 304 1 27 1 229 1 185 1 145 1 251 1 186 1 33 1 217 1 347 1 125 1 232 1 14 3 199 1 353 1 172 3 298 1 111 1 68 1 85 1 178 1 243 1 356 2 139 2 140 1 114 1 
210 1 142 1 275 1 183 1 304 1 27 1 199 1 185 1 229 1 145 1 172 2 251 1 298 1 186 1 33 1 111 1 217 1 85 1 68 1 178 1 356 2 139 2 114 1 125 1 14 2 
352 1 
326 1 280 5 185 1 145 1 281 1 146 2 56 6 5 1 187 1 150 2 192 2 11 1 62 1 13 1 12 1 292 1 196 1 235 1 154 1 104 1 202 2 156 2 297 1 296 1 298 2 109 1 110 2 68 2 206 1 339 2 161 1 23 1 25 3 28 5 29 4 308 1 166 2 251 2 214 1 123 1 35 2 124 2 39 1 130 1 351 2 262 1 319 2 318 1 83 1 266 1 173 2 269 1 88 1 271 1 51 1 
326 1 25 1 280 3 28 3 29 2 308 1 214 1 253 1 56 2 123 1 62 1 12 1 13 1 292 1 130 1 351 1 262 1 318 1 296 1 109 1 88 1 271 1 
23 1 326 1 25 1 280 3 28 3 29 3 308 1 214 1 253 1 56 1 123 1 150 1 62 1 12 1 13 1 292 1 130 1 262 1 318 1 319 1 296 1 109 1 88 1 271 1 
23 1 25 1 326 1 280 3 28 3 29 3 308 1 214 1 253 1 56 2 123 1 150 1 62 1 12 1 13 1 292 1 130 1 351 1 262 1 318 1 319 1 296 1 109 1 110 1 88 1 271 1 
326 1 280 5 230 1 281 1 146 2 56 7 187 1 150 5 192 2 60 1 62 1 11 1 13 1 12 1 292 1 202 2 156 2 296 1 109 1 299 1 110 4 339 1 161 1 23 5 77 1 25 3 28 5 29 6 308 1 214 1 253 1 122 1 123 1 35 2 124 1 130 1 351 4 262 1 318 1 319 4 83 1 269 1 88 1 271 1 
326 1 280 4 281 1 146 2 56 4 187 1 192 2 150 2 62 1 11 1 12 1 13 1 292 1 202 2 156 2 296 1 109 1 110 2 339 1 161 1 23 1 25 2 28 4 29 4 308 1 214 1 123 1 35 2 124 1 39 1 130 1 351 2 262 1 318 1 319 2 83 1 269 1 173 2 88 1 271 1 
23 1 77 1 25 2 326 1 280 4 28 4 29 4 308 1 281 1 146 2 214 1 122 1 56 4 187 1 123 1 35 2 124 1 150 1 192 2 62 1 11 1 12 1 13 1 292 1 130 1 351 2 262 1 319 2 318 1 83 1 202 2 156 2 296 1 269 1 109 1 299 1 110 2 88 1 339 1 271 1 161 1 
23 1 77 1 25 2 326 1 280 4 28 4 29 4 308 1 281 1 146 2 214 1 122 1 56 4 187 1 123 1 35 2 124 1 150 1 192 2 62 1 11 1 12 1 13 1 292 1 130 1 351 2 262 1 319 2 318 1 83 1 202 2 156 2 296 1 269 1 109 1 299 1 110 2 88 1 339 1 271 1 161 1 
23 1 25 2 326 1 280 4 28 4 29 4 308 1 281 1 146 2 286 1 214 1 122 1 56 4 57 2 123 1 124 1 150 1 192 2 62 1 11 1 12 1 13 1 15 2 292 1 130 1 351 2 81 1 262 1 319 2 318 1 83 1 296 1 173 2 269 1 109 1 110 2 88 1 339 1 271 1 161 1 208 1 
23 1 77 1 25 2 326 1 280 4 28 4 29 5 230 1 308 1 281 1 146 2 214 1 122 1 56 5 187 1 123 1 35 2 124 1 150 1 192 2 11 1 62 1 12 1 13 1 292 1 130 1 351 3 262 1 318 1 319 3 83 1 202 2 156 2 296 1 269 1 109 1 299 1 110 3 88 1 339 1 271 1 161 1 
23 1 77 1 25 2 326 1 280 4 28 4 29 5 230 1 308 1 281 1 146 2 214 1 122 1 56 5 187 1 123 1 35 2 124 1 150 1 192 2 11 1 62 1 12 1 13 1 292 1 130 1 351 3 262 1 318 1 319 3 83 1 202 2 156 2 296 1 269 1 109 1 299 1 110 3 88 1 339 1 271 1 161 1 
326 1 280 4 281 1 146 2 286 1 56 4 57 2 192 2 150 1 62 1 11 1 12 1 13 1 292 1 15 2 296 1 109 1 110 2 339 1 161 1 23 1 25 2 28 4 29 4 308 1 214 1 123 1 124 1 39 1 130 1 351 2 262 1 318 1 319 2 83 1 269 1 173 2 88 1 271 1 
24 1 326 1 185 2 328 1 118 2 145 2 345 1 166 2 251 8 254 2 33 1 257 2 97 2 289 1 34 1 313 1 334 1 220 4 195 2 128 1 130 1 103 1 196 3 235 1 318 1 336 2 265 1 105 2 298 7 270 1 355 1 68 8 69 1 207 2 206 1 72 1 112 1 113 1 51 2 
326 1 118 1 119 1 285 1 254 3 257 1 313 1 8 1 220 2 195 1 130 1 317 1 321 1 318 1 336 1 265 1 105 1 175 1 270 1 69 2 87 1 207 1 71 1 137 1 160 1 73 1 341 1 74 1 76 1 
118 1 119 1 285 2 254 6 257 1 288 1 168 1 220 2 195 1 129 1 103 1 16 1 321 2 221 1 336 1 265 3 105 1 224 1 135 1 69 3 207 1 71 1 160 1 73 1 302 2 74 1 
182 3 118 2 119 2 285 1 254 14 256 1 257 2 149 1 349 1 220 4 195 2 321 2 336 2 265 8 203 1 105 2 240 1 175 2 69 6 87 1 207 1 71 1 112 1 113 1 73 11 160 4 179 1 341 2 302 1 74 11 162 1 343 3 76 1 
26 1 326 2 185 1 118 1 145 1 166 1 251 1 254 2 257 1 99 1 290 1 313 1 334 1 9 1 37 1 220 2 63 1 195 1 130 1 196 1 318 2 336 1 265 1 105 1 298 1 270 1 68 1 69 1 87 1 207 1 112 1 160 1 113 1 302 1 180 1 51 1 273 1 115 1 
143 1 326 3 185 2 144 1 145 2 285 4 284 2 329 2 99 2 290 2 334 1 195 3 196 2 16 1 198 2 336 3 105 3 203 4 298 3 239 2 69 10 68 3 71 3 207 3 112 1 113 1 73 7 160 7 300 1 341 2 302 2 74 7 76 2 26 2 118 3 119 3 166 1 251 3 254 20 33 1 257 3 168 1 313 1 220 6 37 2 129 1 130 1 221 1 318 3 321 8 265 10 224 1 175 2 270 1 354 2 135 1 87 1 180 1 51 2 
195 1 103 1 118 1 321 1 336 1 265 2 203 1 105 1 119 1 254 2 257 1 136 1 207 1 160 1 73 1 341 1 74 1 220 2 
195 1 103 1 118 1 321 1 336 1 105 1 31 1 285 1 254 2 257 1 69 2 207 1 71 1 160 1 73 1 74 1 220 2 76 1 
118 1 119 1 285 1 254 4 257 1 220 2 195 1 103 1 321 2 336 1 265 2 105 1 203 1 175 1 69 2 207 1 71 1 73 2 160 2 341 1 74 2 76 1 
195 1 118 1 321 1 336 1 265 2 203 1 345 1 105 1 119 1 254 2 257 1 136 1 207 1 160 1 73 1 341 1 74 1 220 2 
195 1 118 1 321 1 336 1 345 1 105 1 31 1 285 1 254 2 257 1 69 2 207 1 71 1 160 1 73 1 74 1 220 2 76 1 
118 1 119 1 345 1 285 1 254 4 257 1 220 2 195 1 321 2 336 1 265 2 105 1 203 1 175 1 69 2 207 1 71 1 73 2 160 2 341 1 74 2 76 1 
118 1 119 1 285 1 254 4 257 1 220 2 195 1 321 2 336 1 265 2 105 1 203 1 175 1 69 2 207 1 71 1 73 2 160 2 341 1 74 2 76 1 
26 1 326 1 185 1 118 1 145 1 166 1 251 1 254 2 257 1 99 1 290 1 37 1 220 2 195 1 196 1 318 1 336 1 265 1 105 1 298 1 239 1 68 1 69 1 207 1 112 1 113 1 302 1 51 1 
26 1 326 1 185 1 118 1 145 1 166 1 251 1 254 2 54 1 257 1 37 1 220 2 291 1 195 1 196 1 318 1 336 1 265 1 105 1 298 1 68 1 69 1 207 1 112 1 113 1 302 1 51 1 141 1 
118 1 119 1 285 1 254 4 257 1 220 2 195 1 321 2 336 1 265 2 105 1 203 1 175 1 69 2 87 1 207 1 71 1 73 2 160 2 341 1 74 2 76 1 
24 1 26 1 326 1 185 1 118 1 145 1 119 1 251 1 285 1 254 4 329 1 257 1 99 1 290 1 37 1 220 2 195 1 196 1 321 2 318 1 336 1 265 2 203 1 105 1 298 1 239 1 175 1 69 2 68 1 71 1 207 1 160 2 73 2 341 1 74 2 51 1 76 1 
326 1 118 1 119 1 254 3 257 1 331 1 313 1 8 1 220 2 195 1 130 1 321 1 318 1 336 1 265 2 203 1 105 1 175 1 270 1 69 1 87 1 71 1 207 1 137 1 73 1 160 1 341 1 74 1 76 1 
182 2 211 1 119 3 32 2 285 3 254 19 257 2 6 1 335 1 349 1 220 4 234 1 293 1 195 2 321 6 336 2 222 2 265 9 105 2 203 3 107 1 46 1 240 1 175 3 69 10 71 3 340 1 341 3 343 1 76 3 
182 2 211 1 119 3 32 4 283 1 285 2 254 26 257 3 167 1 100 1 349 2 220 6 234 2 293 2 195 3 321 4 236 1 336 3 222 1 265 14 203 2 105 3 107 1 46 1 175 3 69 12 70 1 71 2 340 1 242 1 341 3 181 2 343 2 76 2 
182 4 283 1 285 4 100 1 335 1 195 3 293 1 234 2 16 1 336 3 236 1 203 4 105 3 107 1 240 1 69 21 70 1 71 5 242 1 340 1 341 4 343 3 76 4 211 1 119 5 32 4 254 41 257 3 167 1 168 1 349 3 220 6 129 1 43 1 321 8 221 1 265 20 222 1 224 1 46 1 175 4 135 1 181 1 
182 4 211 1 119 5 283 1 32 4 285 4 254 38 257 4 167 1 168 1 335 1 100 1 349 3 220 8 234 2 293 1 195 4 129 1 16 1 43 1 221 1 321 7 236 1 336 4 222 1 265 20 105 4 203 3 224 1 107 1 46 1 240 1 175 4 135 1 69 18 70 1 71 4 340 1 242 1 341 4 181 2 343 3 76 3 
182 4 211 1 119 8 283 1 32 4 285 7 254 52 257 2 167 1 168 1 100 1 349 2 220 4 234 1 293 1 195 2 129 1 16 1 221 1 321 14 236 1 336 2 222 1 265 27 105 2 203 7 224 1 107 1 46 1 240 2 175 7 135 1 69 25 70 1 71 8 340 1 242 1 341 7 162 2 181 1 343 4 76 7 
165 1 326 2 185 1 328 1 118 1 145 1 251 2 254 2 257 1 97 2 219 1 220 2 126 1 195 1 128 1 130 2 196 1 131 1 263 1 318 2 336 1 265 1 105 1 298 2 68 2 69 1 87 1 207 1 112 1 113 1 51 1 
210 1 196 1 185 1 235 1 145 1 166 1 251 1 298 1 252 1 337 1 68 1 206 1 51 1 323 1 
210 1 142 1 27 1 199 1 185 1 145 1 251 1 298 1 33 1 337 1 19 1 111 1 68 1 217 1 178 1 226 1 139 2 232 1 
210 1 142 1 24 1 27 1 199 1 185 1 145 1 251 2 298 2 33 1 337 1 19 1 111 1 68 2 217 1 178 1 226 1 139 2 232 1 
210 1 142 1 27 1 199 1 185 1 145 1 251 1 298 1 33 1 19 1 111 1 68 1 217 1 178 1 139 2 232 1 52 1 
255 1 
23 1 83 1 66 1 281 1 339 1 161 1 124 1 22 1 150 1 11 1 
0 2 306 1 119 1 156 2 173 2 175 1 339 2 71 1 124 2 341 1 150 2 322 1 76 1 40 2 
23 1 56 1 25 1 280 1 28 1 150 1 
25 2 185 1 280 3 28 3 145 1 281 2 166 2 251 4 121 2 56 4 124 2 59 1 11 1 196 1 154 1 235 1 104 1 83 2 200 1 266 2 297 2 298 4 132 1 108 1 68 4 339 2 206 1 161 2 51 1 
23 1 288 1 339 1 124 1 66 1 22 1 150 1 
23 1 25 1 280 1 28 1 281 1 56 1 187 1 35 1 124 1 150 2 11 1 83 1 202 1 156 1 173 1 339 1 161 1 
0 6 185 2 280 5 145 1 281 3 2 2 287 1 56 5 150 7 11 3 152 1 196 6 204 2 156 6 297 2 298 1 68 1 338 3 339 7 71 2 159 2 161 3 21 2 341 2 76 2 23 1 26 1 25 3 306 2 28 5 308 2 119 2 166 1 251 1 218 2 124 8 40 6 316 1 261 2 83 3 266 1 173 6 175 2 354 2 322 2 51 1 227 1 
0 5 182 1 23 2 25 1 280 1 306 2 28 1 250 1 281 2 119 2 283 1 56 1 167 1 124 8 100 1 349 1 150 5 11 2 40 5 236 1 83 2 266 1 156 3 297 1 173 3 133 1 175 2 70 1 339 5 71 2 161 2 341 2 322 1 343 1 76 2 
77 1 326 1 306 2 280 1 94 1 28 1 281 1 119 2 124 2 313 1 11 1 292 1 130 1 318 1 221 1 83 1 224 1 157 1 270 1 135 1 339 2 71 1 137 1 161 1 322 1 303 1 342 1 228 1 
117 1 326 3 26 1 185 1 118 1 145 1 166 1 251 1 254 1 257 1 99 1 313 2 290 1 220 2 37 1 195 1 130 2 196 1 318 3 336 1 105 1 298 1 239 1 270 2 69 1 68 1 207 1 112 1 137 2 302 1 342 1 51 1 
0 2 23 2 83 1 281 1 266 1 156 2 297 1 173 2 339 2 168 1 161 1 124 1 150 4 11 1 40 2 
82 1 106 1 
82 1 106 1 
82 1 106 1 
82 1 106 1 
82 1 106 1 
82 1 106 1 
82 1 106 1 
82 1 106 1 
153 1 237 1 
195 1 94 1 321 5 221 1 336 1 265 5 105 1 203 2 119 2 107 1 224 2 285 3 254 10 257 1 135 2 69 5 71 2 220 2 
195 1 321 1 336 1 265 2 105 1 119 1 203 1 107 1 254 2 257 1 341 1 220 2 
195 1 321 2 336 1 265 2 105 1 119 1 203 1 107 1 285 1 254 4 175 1 257 1 69 2 71 1 341 1 220 2 76 1 
195 3 249 1 321 2 336 3 265 1 105 3 203 1 107 1 224 1 285 1 254 3 257 3 69 2 135 1 335 1 181 1 220 6 
182 4 307 1 249 1 119 5 282 1 285 7 254 34 257 5 168 1 190 1 349 1 335 1 220 10 195 5 129 1 16 1 221 2 321 12 336 5 265 16 105 5 203 5 224 3 107 1 240 1 175 3 135 3 69 18 71 5 341 3 50 1 181 2 343 3 76 3 
182 1 119 1 285 2 254 8 257 1 167 1 168 1 349 1 220 2 195 1 129 1 16 1 321 2 221 1 336 1 265 4 105 1 107 1 224 1 69 4 135 1 71 1 343 1 
182 2 307 1 119 2 285 2 254 11 257 2 167 1 168 1 349 1 220 4 195 2 129 1 16 1 221 1 321 3 336 2 265 6 105 2 203 1 224 1 107 1 240 1 175 1 135 1 69 5 71 1 341 1 343 1 
182 1 307 1 119 3 283 1 285 3 254 19 257 3 167 1 168 1 100 1 349 1 220 6 195 3 129 1 16 1 221 1 321 4 336 3 236 1 265 9 203 1 105 3 224 1 107 1 175 2 135 1 69 10 70 1 71 3 341 2 343 1 181 1 76 2 
182 1 307 1 119 3 283 1 285 3 254 17 257 3 167 1 168 1 349 1 100 1 220 6 195 3 129 1 16 1 221 1 321 5 336 3 236 1 265 10 203 2 105 3 224 1 107 1 175 2 135 1 69 7 70 1 71 2 341 2 181 1 343 1 76 1 
182 1 119 1 285 2 254 8 257 1 167 1 168 1 349 1 220 2 195 1 129 1 16 1 321 2 221 1 336 1 265 4 105 1 107 1 224 1 69 4 135 1 71 1 343 1 
182 1 119 2 283 1 285 1 254 12 257 1 167 1 349 1 100 1 220 2 195 1 321 2 336 1 236 1 265 6 203 1 105 1 107 1 175 2 69 6 70 1 71 2 341 2 343 1 76 2 
182 1 307 1 119 3 283 1 285 3 254 18 257 4 167 1 168 1 100 1 349 1 220 8 195 4 129 1 16 1 221 1 321 5 236 1 336 4 265 10 203 2 105 4 224 1 107 1 175 2 135 1 69 8 70 1 71 2 341 2 343 1 181 2 76 1 
182 1 119 3 283 1 285 3 254 16 257 4 167 1 100 1 349 1 335 1 220 8 195 4 321 6 236 1 336 4 265 9 203 3 105 4 107 1 175 3 69 7 70 1 71 2 341 3 343 1 181 2 76 2 
129 2 16 1 321 6 221 1 265 3 203 3 119 1 224 3 285 3 254 7 69 4 135 3 71 1 
182 1 119 3 283 1 285 3 254 18 257 4 167 1 168 1 100 1 349 1 335 1 220 8 195 4 129 1 16 1 221 1 321 4 236 1 336 4 265 10 203 1 105 4 224 1 107 1 175 2 135 1 69 8 70 1 71 2 341 2 343 1 181 2 76 1 
195 2 129 1 16 1 221 1 321 3 336 2 265 4 119 1 203 1 105 2 224 1 285 2 254 8 257 2 69 4 135 1 71 1 168 1 181 1 220 4 
129 1 16 1 321 2 221 1 265 3 119 1 224 1 285 2 254 6 69 3 288 1 135 1 71 1 168 1 
195 1 307 1 321 2 336 1 265 2 105 1 119 1 203 1 285 1 254 4 175 1 257 1 69 2 71 1 341 1 220 2 76 1 
182 2 321 2 265 3 119 1 203 1 285 1 254 7 240 1 175 1 69 4 71 1 341 1 349 1 343 1 76 1 
182 2 249 1 119 3 285 5 254 23 256 1 257 2 168 1 220 4 195 2 129 1 16 1 221 1 321 9 336 2 265 11 203 4 105 2 224 2 175 2 240 1 135 2 69 12 71 3 341 2 162 1 343 2 181 2 76 2 
182 1 69 1 254 1 
265 1 343 1 254 1 
195 1 307 1 321 3 336 1 265 3 105 1 119 1 203 1 285 2 254 6 175 1 354 1 257 1 69 3 71 1 341 1 220 2 76 1 
182 1 119 2 283 1 285 1 254 12 257 1 167 1 349 1 100 1 220 2 195 1 321 2 336 1 236 1 265 6 203 1 105 1 107 1 175 2 69 6 70 1 71 2 341 2 343 1 76 2 
221 1 321 2 265 3 119 1 203 1 224 1 285 1 254 6 69 3 135 1 71 1 
195 1 129 1 16 1 249 1 321 2 336 1 265 1 203 1 105 1 224 1 285 1 254 3 257 1 135 1 69 2 181 1 220 2 
130 1 278 1 326 1 318 1 302 1 193 1 12 1 
170 1 278 1 130 1 326 1 93 1 318 1 95 1 330 1 302 1 193 1 12 1 350 1 
24 1 196 1 185 1 235 1 145 1 166 1 251 4 298 4 215 1 310 1 68 4 206 1 51 1 
164 1 26 1 196 1 185 2 145 1 251 2 298 2 309 1 121 1 68 2 300 1 188 1 51 1 101 1 
111 1 217 1 68 1 199 1 185 1 139 1 145 1 166 1 251 1 298 1 
128 1 24 1 196 1 185 1 145 1 251 2 298 2 33 1 68 2 51 1 126 1 
128 1 24 1 196 3 185 2 235 1 145 2 166 1 251 5 298 4 215 1 121 1 68 5 206 1 72 1 289 1 51 2 
128 1 24 1 196 3 185 2 235 1 145 2 166 1 251 5 298 4 215 1 121 1 68 5 206 1 72 1 151 1 51 2 
196 1 288 1 68 1 206 1 185 1 235 1 145 1 51 1 166 1 251 1 298 1 
130 1 196 1 26 1 326 2 185 1 318 2 145 1 166 1 251 1 298 1 270 1 68 1 99 1 313 1 302 1 334 1 51 1 37 1 
326 2 26 2 185 1 145 1 251 1 214 1 121 1 4 1 99 1 313 1 334 1 37 1 292 1 130 2 196 3 318 2 201 1 298 1 270 2 68 1 88 1 302 1 51 2 
326 2 26 2 185 1 145 1 251 2 214 1 121 1 310 1 4 1 313 1 334 1 37 1 292 1 130 2 196 3 318 2 201 1 298 2 270 2 68 2 88 1 302 1 141 1 51 2 
23 1 26 1 280 2 185 1 28 2 145 1 308 1 166 1 251 3 346 1 121 1 310 1 56 1 4 1 218 1 150 1 196 4 201 1 298 3 68 3 338 1 138 1 51 1 
23 1 26 1 196 4 185 1 280 2 28 2 201 1 308 1 145 1 166 1 251 3 298 3 121 1 310 1 68 3 56 1 4 1 338 1 218 1 21 1 150 1 51 1 
68 1 355 1 185 1 145 1 251 1 298 1 
128 1 152 1 24 1 26 1 196 3 185 3 145 2 166 2 251 7 298 6 309 1 33 1 97 1 355 1 68 7 72 1 289 1 34 1 194 1 51 2 101 1 
326 2 185 1 145 1 285 2 329 1 99 1 290 1 334 1 195 2 196 1 16 1 198 1 336 2 105 2 298 1 239 1 68 1 69 3 207 2 71 1 160 1 73 1 302 2 74 1 24 1 26 1 118 2 119 1 251 1 254 6 257 2 168 1 313 1 220 4 37 1 130 1 129 1 263 1 318 2 321 2 221 1 265 3 224 1 270 1 135 1 87 1 51 1 
23 1 25 1 280 3 28 3 308 1 281 2 166 1 251 1 2 1 56 2 218 1 258 1 124 1 150 1 11 2 196 2 261 1 83 2 200 1 66 1 298 1 68 1 339 1 338 1 159 1 161 2 21 1 22 1 
152 1 24 1 316 1 26 1 196 2 185 2 145 1 251 2 298 2 355 1 68 2 218 1 51 1 
130 1 196 1 26 1 326 2 185 1 318 2 145 1 166 1 251 1 298 1 270 1 68 1 313 1 302 1 334 1 51 1 141 1 37 1 
152 1 26 1 196 1 185 2 145 1 251 1 298 1 309 1 121 1 68 1 194 1 51 1 101 1 
92 1 17 1 148 1 219 1 
294 1 92 1 155 1 
92 2 17 1 148 1 219 1 
294 1 92 2 280 1 258 1 28 1 17 1 155 1 148 1 65 1 219 1 
186 1 304 1 177 1 243 1 140 1 172 1 125 1 14 1 
315 1 304 2 172 4 238 1 47 1 186 3 312 1 356 2 243 1 301 1 191 1 140 1 125 2 14 4 
304 1 172 2 186 1 177 1 243 1 356 1 49 1 140 1 348 1 125 1 245 1 14 2 
186 1 304 1 177 1 312 2 243 1 191 1 140 1 172 3 125 1 268 1 238 2 14 3 
186 2 48 1 279 2 45 1 
134 1 177 1 243 1 140 1 172 1 14 1 
186 1 304 1 305 1 177 1 356 1 243 1 140 1 172 2 125 1 14 2 
241 1 
186 1 304 1 177 1 243 1 140 1 172 1 125 1 14 1 
186 1 304 1 288 1 125 1 
186 1 304 1 243 1 140 1 172 1 125 1 14 1 
229 1 114 1 14 1 
304 1 172 3 238 1 216 1 186 1 177 1 243 1 312 2 191 1 140 1 125 1 14 3 
186 1 304 1 147 1 356 1 243 1 140 1 172 2 125 1 14 2 
27 1 172 1 186 1 111 1 177 1 243 1 301 1 139 1 140 1 14 1 102 1 
186 1 177 1 243 1 140 1 172 1 125 1 14 1 
304 1 177 1 243 1 140 1 172 1 125 2 14 1 
264 1 172 1 120 1 177 1 243 1 140 1 14 1 
315 1 304 1 327 1 305 1 172 3 186 2 177 1 243 1 356 2 301 1 140 1 125 1 14 3 
304 1 27 1 199 1 172 2 1 1 186 1 111 1 177 1 178 1 243 1 356 1 139 2 140 1 125 1 14 2 
315 1 304 1 248 1 172 4 186 2 147 1 177 1 243 2 356 2 301 1 140 2 125 1 14 4 
304 1 305 1 172 3 186 1 177 1 356 1 243 1 312 1 140 1 125 1 14 3 
47 1 186 1 315 1 301 1 
186 1 125 1 

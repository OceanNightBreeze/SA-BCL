#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 75 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 339 299 210 67 287 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 339 299 210 67 287 267 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 339 299 210 67 287 267 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 75 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 339 299 210 67 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 339 299 210 67 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 339 299 210 67 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
330 1 275 2 83 1 321 1 204 1 307 1 171 1 46 1 76 1 104 3 124 3 186 2 96 2 
275 2 28 1 83 1 321 3 171 1 9 2 33 1 255 2 346 1 200 1 63 1 156 1 96 2 352 1 330 1 306 2 43 1 204 2 307 4 46 6 360 2 226 1 336 1 76 1 104 9 124 9 186 5 52 1 
275 2 28 1 83 1 321 3 171 1 9 2 33 1 255 2 346 1 200 1 63 1 156 1 96 2 352 1 330 1 306 2 43 1 204 2 307 4 46 6 360 2 226 1 336 1 76 1 104 9 124 9 186 5 52 1 
275 2 28 1 83 1 321 4 171 1 9 2 33 1 255 2 346 1 200 1 63 1 156 1 96 2 352 1 330 1 306 2 43 1 204 2 307 5 46 7 360 2 226 1 336 1 76 1 104 10 124 10 186 6 52 1 
275 2 28 1 83 1 321 2 171 1 9 1 33 1 255 2 346 1 200 1 63 1 156 1 96 2 352 1 330 1 306 2 43 1 204 2 307 3 46 4 360 2 336 1 76 1 104 7 124 7 186 4 52 1 
330 1 306 1 275 1 321 1 307 2 171 1 46 3 9 2 360 1 226 1 336 1 76 1 104 4 255 1 124 4 156 1 186 3 96 1 
330 1 275 1 306 1 204 1 171 1 360 1 76 1 33 1 104 2 14 1 78 1 124 2 186 1 352 1 96 1 341 1 
320 1 275 2 83 1 321 3 171 1 9 2 346 1 255 1 36 1 156 1 96 2 330 1 306 1 307 4 204 1 46 7 360 1 336 1 226 1 76 1 104 9 124 9 186 5 52 1 
320 1 275 2 83 1 321 3 171 1 9 2 346 1 255 1 36 1 156 1 96 2 330 1 306 1 307 4 204 1 46 7 360 1 336 1 226 1 76 1 104 9 124 9 186 5 52 1 
4 1 193 1 333 1 278 1 163 1 101 1 122 1 84 1 113 1 185 1 168 1 202 1 178 1 17 1 
107 1 
132 1 4 2 93 1 333 2 365 1 202 1 277 1 107 1 
158 1 273 1 146 1 4 5 3 2 333 5 139 1 182 2 130 1 277 1 121 1 225 1 132 2 326 1 365 1 202 2 16 1 179 2 107 1 
75 1 277 1 107 1 
286 1 13 2 107 1 
113 2 185 2 194 1 278 2 178 1 17 2 101 2 84 2 
53 1 294 1 342 2 194 1 108 1 151 1 234 1 278 2 11 1 84 2 112 1 113 2 154 1 259 1 178 1 328 1 17 3 285 1 42 1 242 1 72 2 206 1 44 1 268 1 101 2 141 1 103 1 246 1 77 1 185 3 166 1 249 2 187 1 292 1 213 2 80 2 250 1 
113 1 185 1 193 1 278 1 178 1 17 1 101 1 163 1 122 1 84 1 
191 1 4 1 332 1 181 1 333 1 216 1 277 1 84 1 122 1 238 1 185 1 201 1 17 1 107 1 
4 2 332 1 181 1 333 2 277 1 278 1 101 1 84 1 122 1 238 1 113 1 185 1 201 1 17 1 107 1 
132 1 4 1 333 1 202 1 176 1 
132 1 4 2 333 2 365 1 58 1 202 1 277 1 107 1 
132 1 4 1 333 1 
190 1 148 1 194 2 278 1 101 1 84 2 113 1 185 2 17 2 
165 1 227 1 284 1 
42 1 242 1 342 1 194 1 206 1 44 1 141 1 154 1 246 1 185 1 166 1 282 1 213 1 17 1 80 1 250 1 
75 1 194 1 
42 1 242 1 342 1 206 1 44 1 357 1 223 1 278 1 141 1 101 1 84 1 165 1 246 1 154 1 185 2 166 1 213 1 17 2 80 1 250 1 
113 1 185 3 194 1 357 1 278 3 17 3 101 3 84 3 
185 1 193 1 278 1 17 1 101 1 122 1 84 1 
190 1 113 1 185 1 148 1 278 1 17 1 101 1 122 1 84 1 
53 1 4 1 294 1 147 1 148 1 342 1 194 1 322 1 108 1 151 1 234 1 278 3 11 1 112 1 84 3 238 1 113 2 154 1 201 1 259 1 178 1 328 1 17 4 42 1 242 1 332 1 181 1 72 1 333 1 206 1 44 1 357 1 223 1 141 1 101 3 122 1 246 1 185 4 166 1 249 2 187 1 213 1 80 1 250 1 
191 1 185 2 194 1 6 1 357 1 278 1 17 2 101 1 84 2 
4 1 332 1 181 1 148 1 333 1 322 1 357 2 223 1 278 3 101 3 122 1 84 3 238 1 113 1 185 3 201 1 17 3 79 1 107 1 
148 1 357 1 278 2 101 2 84 2 165 1 227 1 113 1 185 2 17 2 
42 1 242 1 342 1 194 1 44 1 206 1 141 1 154 1 246 1 185 1 166 1 213 1 17 1 80 1 250 1 
54 1 42 1 242 1 342 1 194 1 44 1 206 1 246 1 105 1 185 1 166 1 213 1 17 1 80 1 250 1 
53 2 323 1 108 1 234 1 11 1 111 1 197 1 303 1 284 2 259 1 15 1 328 1 18 1 72 4 165 2 227 2 103 2 228 1 339 1 50 1 316 1 249 2 318 1 187 1 
181 1 185 1 291 1 278 1 17 1 101 1 122 1 84 1 
191 1 231 1 148 1 6 1 194 1 357 2 278 4 223 1 101 4 84 5 113 1 185 5 17 5 353 1 
185 2 193 1 291 1 278 2 17 2 101 2 122 1 84 2 
224 2 144 1 253 1 68 1 309 1 262 2 
327 1 224 1 262 1 
224 1 262 1 
224 1 262 1 
224 1 144 1 68 1 262 1 
224 1 144 1 68 1 262 1 
144 1 68 1 
308 1 224 1 262 1 
308 1 224 1 262 1 
308 1 224 1 262 1 
224 1 119 1 262 1 
224 1 119 1 262 1 
224 1 119 1 262 1 
4 2 5 2 333 2 150 2 224 2 140 2 334 3 253 1 164 1 135 1 123 1 271 1 315 2 270 1 143 1 39 1 64 2 107 1 262 2 
0 1 4 1 2 1 5 1 194 1 150 1 278 2 84 2 347 1 327 1 114 1 64 1 38 1 17 2 262 1 19 1 333 1 183 1 224 1 334 1 101 2 185 2 315 1 143 1 
87 2 255 1 78 1 155 1 360 2 
255 1 306 1 360 1 
306 1 78 1 360 1 
87 1 255 2 78 1 155 1 300 1 360 3 
87 1 255 1 60 1 78 1 155 1 360 2 
3 1 4 5 251 1 252 1 323 1 130 3 299 1 277 1 59 1 132 1 326 1 13 3 347 1 175 1 202 4 15 1 38 1 179 1 41 2 158 2 286 1 333 5 182 1 183 1 118 1 208 1 339 1 167 2 365 1 318 1 188 2 107 2 
295 5 4 9 3 2 251 2 323 3 130 8 299 3 277 1 59 2 132 6 32 1 326 1 256 1 13 9 202 7 15 3 176 5 179 2 41 6 158 6 98 1 264 1 286 3 99 1 333 9 139 1 183 4 182 2 208 1 338 1 339 3 365 1 318 3 188 6 107 5 
3 1 4 3 251 1 252 1 323 1 130 3 277 1 59 1 299 1 13 4 175 1 202 2 15 1 179 1 158 2 41 2 286 2 333 3 182 1 139 1 183 1 339 1 167 1 318 1 107 3 188 2 
3 1 4 4 251 1 252 1 323 2 130 5 277 1 59 1 299 2 32 1 13 7 175 1 202 3 15 2 179 1 41 4 158 4 98 1 286 3 333 4 182 1 139 1 183 2 338 1 339 2 167 2 318 2 107 4 188 4 
317 1 
75 1 159 1 206 1 
86 1 206 1 
166 1 206 1 
159 2 242 1 166 1 206 3 304 1 45 1 
242 1 166 1 206 1 
263 1 206 1 
53 6 296 1 323 3 324 2 152 1 236 2 325 1 31 2 198 1 303 4 283 1 15 3 351 1 243 2 72 14 265 1 103 8 50 5 169 1 
53 19 296 1 108 1 323 6 324 3 299 3 236 2 152 2 325 1 10 4 344 1 31 3 198 1 303 7 257 1 283 2 259 1 15 6 137 1 351 7 328 1 117 1 243 3 72 40 265 1 20 1 359 1 103 21 339 3 49 3 50 14 125 1 249 2 318 3 187 1 
53 7 296 1 323 3 108 2 324 2 152 1 236 2 325 1 31 2 303 5 257 1 283 1 259 2 15 3 351 2 219 1 328 2 243 2 72 16 265 1 102 1 103 9 50 7 249 4 187 2 
53 6 296 1 323 3 324 2 152 1 236 2 325 1 31 2 198 1 303 4 283 1 15 3 351 1 243 2 72 14 265 1 103 8 50 5 
53 6 296 1 323 3 324 2 152 1 236 2 325 1 31 2 198 1 303 4 283 1 15 3 351 3 243 2 72 14 265 1 103 8 50 7 
275 1 342 1 129 1 131 2 301 1 239 2 345 1 348 1 96 1 261 1 42 1 305 1 203 2 160 1 204 2 44 1 206 1 104 1 166 1 124 1 213 1 80 1 250 1 
275 1 82 1 342 1 233 1 131 1 300 1 255 1 239 1 349 1 96 1 306 1 203 1 204 1 100 1 44 1 360 2 76 1 104 1 312 1 78 1 124 1 142 1 213 1 214 1 80 1 250 1 
275 1 82 1 342 1 171 1 233 1 131 1 153 1 300 1 255 1 239 1 349 1 96 1 330 1 306 1 203 1 204 1 100 1 44 1 46 1 360 2 76 1 104 2 78 1 124 2 142 1 186 1 213 1 214 1 80 1 250 1 
275 1 82 1 342 1 171 1 233 1 300 1 131 1 255 1 239 1 136 1 96 1 330 1 306 1 203 1 160 1 204 1 100 1 44 1 46 2 360 2 104 3 312 1 78 1 124 3 142 1 186 1 213 1 214 1 80 1 250 1 
342 1 171 1 233 1 131 1 300 1 239 1 255 1 136 1 330 1 203 1 306 1 204 1 44 1 46 2 360 2 104 2 312 1 78 1 124 2 142 1 186 1 213 1 214 1 80 1 250 1 
310 1 
191 1 3 1 4 3 342 2 216 1 130 1 59 1 29 1 84 1 238 1 30 1 132 2 326 1 199 1 201 1 17 1 179 1 261 1 220 1 158 1 42 2 305 1 138 1 181 1 332 1 333 3 44 1 206 1 182 1 184 1 122 1 288 1 185 1 166 1 248 1 365 1 213 2 106 2 80 2 250 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 3 181 1 332 1 333 3 216 1 184 1 29 1 122 1 84 1 238 1 132 1 199 1 185 1 201 1 93 1 248 1 365 1 106 2 17 1 220 1 
191 1 3 1 4 2 130 1 216 1 29 1 84 1 238 1 326 1 199 1 201 1 179 1 17 1 220 1 70 1 158 1 332 1 181 1 333 2 182 1 184 1 122 1 185 1 248 1 106 2 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 4 2 181 1 332 1 333 2 216 1 184 1 29 1 122 1 84 1 238 1 199 1 185 1 201 1 248 1 106 2 17 1 220 1 
191 1 3 1 4 2 130 1 216 1 29 1 84 1 238 1 326 1 199 1 201 1 179 1 17 1 220 1 158 1 332 1 181 1 333 2 182 1 184 1 122 1 25 1 185 1 248 1 106 2 
53 1 215 1 342 7 108 2 110 1 217 1 278 1 234 2 151 1 111 1 11 2 153 1 84 1 95 1 259 2 37 1 17 1 328 2 261 1 285 1 221 1 42 2 305 1 72 2 357 1 44 2 206 3 101 1 268 2 229 1 103 1 312 1 185 1 166 2 249 4 213 8 187 2 80 8 250 2 
53 2 148 1 108 1 323 1 278 1 234 1 299 1 11 1 84 1 113 1 61 1 303 1 284 1 259 1 15 1 328 1 17 1 72 3 162 1 101 1 165 1 227 1 339 1 103 1 50 1 185 1 249 2 318 1 187 1 
53 2 243 1 296 1 72 5 194 2 323 1 108 1 324 1 234 1 236 1 325 1 111 1 11 1 75 1 31 1 103 3 50 2 303 2 259 1 249 2 15 1 187 1 328 1 
53 6 194 1 108 2 323 2 151 1 234 2 299 2 10 3 11 1 281 1 303 1 284 11 259 2 15 1 137 1 351 1 328 2 285 1 72 14 162 1 245 1 23 1 165 11 227 4 103 8 339 2 49 3 50 2 314 1 125 1 249 4 318 1 187 2 
53 1 342 1 194 1 108 1 234 1 278 1 151 1 172 1 11 1 84 1 154 1 282 1 259 1 17 2 328 1 285 1 42 1 242 1 72 2 206 1 44 1 357 1 162 1 223 1 141 1 101 1 227 1 48 1 103 1 246 1 185 2 166 1 364 1 249 2 213 1 187 1 80 1 250 1 
53 13 194 3 108 3 323 5 324 1 151 1 278 1 234 3 236 2 325 1 11 3 112 2 154 2 284 6 15 5 328 3 17 3 285 1 243 2 242 2 72 27 161 2 206 2 162 1 207 2 122 1 24 1 165 6 339 2 246 2 166 2 249 6 213 1 80 1 250 2 27 1 296 1 342 1 299 2 84 1 31 2 254 2 174 1 303 6 259 3 351 1 42 1 265 1 357 1 44 2 223 1 101 1 141 2 227 6 103 14 311 2 50 7 185 3 318 2 187 3 
72 2 108 1 323 1 234 1 111 1 11 1 165 1 227 1 228 1 339 1 103 2 50 1 284 1 259 1 249 2 187 1 351 1 328 1 
53 2 72 2 108 1 234 1 111 1 11 1 165 1 227 1 50 1 303 1 316 1 284 1 259 1 249 2 318 1 15 1 187 1 328 1 
53 2 323 1 108 1 299 1 234 1 11 1 111 1 303 1 284 2 259 1 15 1 351 1 328 1 72 4 165 2 227 2 103 2 339 1 50 2 249 2 318 1 187 1 
72 2 108 1 323 1 110 1 234 1 11 1 165 1 227 1 228 1 339 1 103 2 50 1 284 1 259 1 249 2 187 1 351 1 328 1 
53 2 72 2 108 1 110 1 234 1 11 1 165 1 227 1 50 1 303 1 316 1 284 1 259 1 249 2 318 1 15 1 187 1 328 1 
53 2 323 1 108 1 110 1 299 1 234 1 11 1 303 1 284 2 259 1 15 1 351 1 328 1 72 4 165 2 227 2 103 2 339 1 50 2 249 2 318 1 187 1 
53 2 323 1 108 1 299 1 234 1 11 1 303 1 284 2 259 1 15 1 351 1 328 1 72 4 165 2 227 2 103 2 339 1 50 2 249 2 318 1 187 1 
53 1 342 1 194 1 108 1 234 1 151 1 11 1 112 1 154 1 259 1 17 1 328 1 285 1 42 1 242 1 72 2 44 1 206 1 141 1 103 1 246 1 185 1 166 1 249 2 213 1 187 1 80 1 250 1 
53 1 54 1 342 1 194 1 108 1 234 1 151 1 11 1 259 1 17 1 328 1 285 1 355 1 42 1 242 1 72 2 44 1 206 1 103 1 246 1 105 1 185 1 166 1 249 2 213 1 187 1 80 1 250 1 
53 2 323 1 108 1 299 1 234 1 11 1 303 1 284 2 259 1 15 1 351 1 328 1 72 4 162 1 165 2 227 2 103 2 339 1 50 2 249 2 318 1 187 1 
53 2 342 1 323 1 108 1 234 1 299 1 11 1 112 1 153 1 154 1 303 1 284 2 259 1 15 1 351 1 17 1 328 1 242 1 72 4 44 1 206 1 207 1 141 1 165 2 227 2 103 2 339 1 246 1 50 2 185 1 166 1 249 2 318 1 213 1 187 1 80 1 250 1 
53 1 148 1 108 1 323 1 278 1 234 1 299 1 11 1 84 1 113 1 284 1 259 1 15 1 351 1 115 1 328 1 17 1 72 3 162 1 101 1 165 1 227 1 339 1 103 2 50 1 185 1 249 2 318 1 187 1 
53 10 57 1 108 2 323 3 299 3 235 2 10 2 88 1 34 1 303 3 259 2 15 3 137 1 351 3 328 2 329 1 72 19 267 1 287 1 102 1 103 9 339 3 49 1 50 6 125 1 249 4 318 3 145 2 187 2 366 1 
53 8 57 2 108 2 323 2 299 2 235 2 10 2 303 1 257 1 259 2 15 1 40 1 137 2 67 1 328 2 116 1 72 17 267 1 287 2 102 1 337 1 210 1 103 9 339 2 49 2 50 1 249 4 318 1 187 2 366 1 
53 21 323 5 108 3 57 2 324 1 8 1 235 4 236 1 325 1 10 4 15 5 67 1 328 3 116 1 329 1 243 1 72 41 287 1 22 1 337 1 339 4 210 1 125 1 249 6 296 1 299 4 31 1 88 1 303 4 257 1 259 3 40 1 351 4 137 3 267 1 102 1 103 20 49 3 50 8 318 4 366 1 187 3 145 1 
53 15 57 2 108 3 323 4 299 4 235 3 10 4 88 1 303 3 257 1 259 3 15 3 40 1 67 1 137 3 351 2 328 3 116 1 329 1 72 30 267 1 22 1 287 1 337 1 102 1 210 1 103 15 339 4 49 3 50 5 125 1 249 6 318 3 145 1 187 3 366 1 
53 19 296 1 57 1 108 1 323 7 324 1 299 6 236 1 235 2 325 1 10 4 31 1 303 6 259 1 15 6 40 1 67 1 137 2 351 4 328 1 116 1 243 1 72 41 245 2 267 1 287 1 337 1 102 1 210 1 103 22 339 6 49 4 50 10 125 2 249 2 318 5 187 1 366 1 
133 1 123 1 5 1 150 1 315 1 224 1 39 1 64 1 253 1 262 1 
19 1 327 1 
55 1 170 1 5 1 150 1 315 1 224 1 64 1 293 1 262 1 
4 1 5 1 333 1 150 1 224 1 140 1 334 2 253 1 164 1 135 1 123 1 315 1 270 1 143 1 39 1 64 1 107 1 262 1 
4 1 5 1 333 1 150 1 224 1 140 1 334 2 253 1 164 1 135 1 123 1 315 1 270 1 143 1 39 1 64 1 107 1 262 1 
4 1 5 1 333 1 150 1 224 1 140 1 334 2 253 1 164 1 135 1 123 1 315 1 270 1 143 1 39 1 64 1 107 1 262 1 
91 1 308 1 309 1 
91 1 308 1 309 1 
134 1 119 1 
134 1 309 1 119 1 
2 1 114 1 
0 1 4 1 2 1 5 1 194 1 150 1 278 2 84 2 347 1 327 1 114 1 62 1 202 1 64 1 38 1 17 2 262 1 19 1 333 1 183 1 140 1 224 1 334 1 101 2 185 2 270 1 315 1 
91 1 308 1 
134 1 309 1 119 1 
53 1 342 2 149 1 108 1 234 1 151 1 11 1 84 2 259 1 37 1 17 2 328 1 285 1 221 1 71 1 72 2 44 1 206 1 162 1 358 1 268 2 362 1 103 1 185 2 166 1 249 2 213 2 187 1 127 1 80 2 250 1 
42 1 305 1 203 1 342 1 44 1 206 1 12 1 345 1 166 1 213 1 80 1 261 1 250 1 319 1 
306 1 203 1 342 1 100 1 44 1 233 1 276 1 300 1 360 2 255 1 312 1 78 1 260 1 213 1 214 1 80 1 319 1 250 1 
306 1 203 1 342 2 100 1 44 1 233 1 276 1 300 1 360 2 153 1 255 1 312 1 78 1 260 1 213 2 214 1 80 2 250 1 319 1 
306 1 203 1 342 1 100 1 233 1 44 1 300 1 360 2 255 1 173 1 312 1 78 1 260 1 213 1 214 1 80 1 250 1 
279 1 
273 1 158 1 3 1 182 1 130 1 277 1 326 1 16 1 179 1 107 1 
158 5 41 5 286 5 323 2 130 5 299 2 21 1 339 2 311 1 13 10 290 2 318 2 15 2 188 5 107 5 
132 1 4 1 333 1 365 1 277 1 107 1 
3 2 4 3 342 4 130 2 59 2 237 1 30 1 132 4 326 1 66 1 65 2 179 2 261 1 158 2 42 2 305 1 138 1 333 3 139 1 44 1 206 1 182 2 288 2 340 1 166 1 365 2 213 4 80 4 250 1 
158 1 273 1 75 1 130 1 277 1 16 1 107 1 
3 1 4 1 130 1 277 1 132 1 326 1 13 1 179 1 70 1 158 1 286 1 333 1 182 1 73 1 51 1 365 1 107 2 
273 1 1 1 3 4 4 5 56 2 323 2 277 2 59 2 153 1 238 2 326 4 13 12 15 2 65 1 16 1 158 8 159 2 242 3 286 6 244 2 333 5 206 10 21 2 120 2 288 1 211 1 339 2 340 1 166 3 290 2 213 3 80 3 250 3 342 3 128 2 130 9 299 2 132 5 302 2 86 3 304 1 179 4 222 1 41 6 263 2 42 1 180 2 44 4 182 4 311 2 365 3 318 2 188 6 107 8 
4 1 3 2 192 1 323 2 130 8 59 1 299 2 277 2 10 1 132 1 326 2 13 6 15 2 40 1 137 1 67 1 179 2 116 1 41 5 158 5 286 3 333 1 182 2 21 1 47 1 337 1 288 1 210 1 339 2 49 1 365 1 290 2 318 2 188 5 107 5 
3 1 4 1 193 1 323 2 130 2 278 1 236 1 84 1 31 1 113 1 326 1 15 1 178 1 17 1 179 1 158 2 243 1 265 1 333 1 182 1 21 1 335 1 163 1 101 1 122 1 185 1 290 2 168 1 
53 1 294 1 342 1 194 1 108 1 151 1 278 2 234 1 11 1 84 2 112 1 113 2 154 1 259 1 178 1 328 1 17 3 42 1 242 1 72 1 44 1 206 1 101 2 141 1 246 1 185 3 166 1 249 2 187 1 213 1 80 1 250 1 
41 2 158 2 3 1 286 2 182 1 324 1 130 1 59 1 277 2 288 1 326 1 13 4 179 1 188 2 107 4 
2 1 5 1 150 1 7 1 39 1 
5 1 150 1 350 1 
5 1 150 1 350 1 
5 1 150 1 350 1 
297 1 5 1 150 1 
297 1 5 1 150 1 
297 1 5 1 150 1 
5 1 150 1 
224 1 262 1 
53 5 243 2 72 10 265 1 108 1 323 2 236 1 102 1 31 2 103 5 50 5 303 3 249 2 259 1 15 2 187 1 351 2 328 1 
72 2 108 1 323 1 102 1 339 1 103 2 50 1 259 1 249 2 187 1 351 1 328 1 
53 2 72 4 108 1 323 1 299 1 102 1 339 1 103 2 50 2 303 1 259 1 249 2 15 1 318 1 187 1 351 1 328 1 
53 2 329 1 243 1 72 3 108 3 102 1 31 1 103 1 50 2 303 1 257 1 259 3 249 6 187 3 157 1 351 1 328 3 
53 15 296 1 232 1 108 4 323 5 324 1 299 2 236 2 325 1 10 3 344 1 31 2 303 5 257 1 259 4 15 5 137 1 351 4 328 4 117 1 329 1 243 2 72 31 265 1 20 1 102 1 103 16 339 2 49 3 50 9 249 8 318 2 187 4 
53 8 296 1 108 2 323 3 324 1 236 2 325 1 31 2 303 4 257 1 259 2 15 3 351 3 328 2 243 2 72 17 265 1 103 9 50 7 249 4 187 2 
53 2 296 1 243 1 72 5 323 1 324 1 236 1 325 1 75 1 31 1 103 3 50 2 303 2 15 1 
53 2 72 4 232 1 108 1 323 1 299 1 339 1 103 2 50 2 303 1 259 1 249 2 15 1 318 1 187 1 351 1 328 1 
53 4 72 7 323 1 299 1 10 2 103 3 339 1 49 1 50 2 303 1 125 1 15 1 318 1 137 1 351 1 
53 12 296 1 323 5 108 1 324 1 299 2 236 2 325 1 10 2 31 2 281 1 303 5 257 1 259 1 15 5 351 2 328 1 243 2 72 25 265 1 245 1 339 2 103 13 49 2 50 7 125 1 249 2 318 2 187 1 
53 1 72 1 10 1 
103 1 49 1 72 1 
53 3 72 6 232 1 108 1 323 1 299 1 339 1 103 3 311 1 50 3 303 2 249 2 259 1 318 1 15 1 187 1 351 1 328 1 
53 6 108 1 323 2 299 2 10 1 303 1 259 1 15 2 40 1 351 1 137 1 67 1 328 1 116 1 72 12 102 1 337 1 103 6 339 2 210 1 49 1 50 2 249 2 318 2 187 1 
53 3 243 1 72 6 323 1 236 1 31 1 103 3 50 2 303 1 15 1 351 1 
53 2 243 1 296 1 72 3 108 1 325 1 31 1 103 1 50 2 303 1 257 1 259 1 249 2 187 1 351 1 157 1 328 1 
53 7 296 1 323 3 108 1 324 1 236 2 325 1 10 1 31 2 303 4 259 1 15 3 351 1 137 1 67 1 328 1 243 2 72 15 265 1 102 1 103 8 49 1 50 5 249 2 187 1 
53 8 296 1 232 1 108 2 323 4 324 1 299 1 236 2 325 1 10 2 31 2 303 4 259 2 15 3 137 1 67 1 351 2 328 2 243 2 72 18 265 1 102 1 103 10 339 1 49 1 50 6 125 1 249 4 187 2 
53 13 296 1 232 1 108 3 323 5 324 1 299 2 236 2 325 1 10 1 31 2 303 5 257 1 259 3 15 5 40 1 351 2 137 1 67 1 328 3 116 1 243 2 72 26 265 1 102 1 337 1 103 13 339 2 210 1 49 1 50 7 249 6 318 2 187 3 
53 4 72 10 323 2 108 1 299 2 10 1 337 1 102 1 210 1 339 2 103 6 49 1 50 1 303 1 259 1 249 2 15 1 318 1 40 1 187 1 67 1 137 1 328 1 116 1 
53 7 296 1 323 3 108 1 324 1 236 2 325 1 10 1 31 2 303 4 259 1 15 3 351 1 137 1 67 1 328 1 243 2 72 15 265 1 102 1 103 8 49 1 50 5 249 2 187 1 
53 6 108 1 323 2 299 2 10 1 303 1 259 1 15 2 40 1 351 1 137 1 67 1 328 1 116 1 72 12 102 1 337 1 103 6 339 2 210 1 49 1 50 2 249 2 318 2 187 1 
53 5 232 1 108 3 323 2 299 2 10 1 303 1 257 1 259 3 15 1 40 1 137 1 67 1 328 3 116 1 72 11 102 1 337 1 210 1 103 6 339 2 49 1 50 1 249 6 318 1 187 3 
53 7 108 4 323 3 299 3 10 1 303 3 257 2 259 4 15 2 40 1 351 3 137 1 67 1 328 4 116 1 329 1 72 16 102 1 337 1 210 1 103 9 339 3 49 1 50 6 249 8 318 2 187 4 
53 4 296 2 243 3 72 7 323 1 236 1 325 1 31 3 103 3 50 6 303 3 15 1 351 3 
53 5 108 3 323 2 299 2 10 1 303 1 257 1 259 3 15 1 40 1 137 1 67 1 328 3 116 1 329 1 72 11 102 1 337 1 210 1 103 6 339 2 49 1 50 1 249 6 318 1 187 3 
191 1 185 1 194 1 6 1 17 1 84 1 189 1 
191 1 331 1 194 1 195 1 6 1 74 1 84 1 185 1 177 1 26 1 17 1 189 1 
42 1 305 1 342 4 44 1 206 1 153 1 166 1 247 1 272 1 213 4 80 4 261 1 250 1 
354 1 241 1 242 1 342 2 206 1 44 2 166 1 258 1 126 1 213 2 65 1 80 2 69 1 250 1 
42 1 306 1 78 1 342 1 44 1 213 1 214 1 80 1 360 1 250 1 
221 1 342 2 206 1 44 1 153 1 362 1 312 1 166 1 213 2 80 2 250 1 
221 1 305 1 42 1 215 1 342 4 206 3 44 2 217 1 153 1 166 2 272 1 213 5 65 1 261 1 80 5 250 2 
221 1 305 1 42 1 342 4 206 3 44 2 217 1 196 1 153 1 166 2 272 1 213 5 65 1 261 1 80 5 250 2 
75 1 305 1 42 1 166 1 342 1 44 1 206 1 213 1 261 1 80 1 250 1 
42 1 242 1 342 1 194 1 206 1 44 1 357 1 278 1 101 1 141 1 84 1 246 1 185 2 166 1 213 1 17 2 80 1 250 1 
342 1 194 1 278 1 84 2 65 1 17 2 263 1 180 1 242 2 332 1 181 1 357 1 44 1 206 3 141 1 101 2 122 1 246 1 185 2 166 2 213 1 80 1 250 1 
342 2 194 1 278 1 84 2 65 1 17 2 263 1 180 1 242 2 332 1 181 1 357 1 44 1 206 3 101 2 122 1 246 1 105 1 185 2 166 2 247 1 213 2 80 2 250 1 
263 1 159 1 42 1 180 1 4 2 242 1 298 1 333 2 342 3 44 1 206 4 277 1 238 1 132 1 209 1 86 1 166 1 247 1 213 3 65 1 80 3 107 1 250 1 
263 1 159 1 42 1 180 1 4 2 242 1 333 2 342 3 244 1 44 1 206 4 277 1 238 1 132 1 86 1 166 1 247 1 213 3 65 1 80 3 107 1 250 1 
229 1 342 1 44 1 213 1 80 1 250 1 
221 1 42 2 241 1 242 1 215 1 342 6 205 1 206 3 44 3 217 1 268 1 153 1 229 1 312 1 166 2 304 1 258 1 95 1 213 7 80 7 250 2 
53 6 194 3 108 2 323 3 324 1 278 1 234 2 236 2 325 1 11 2 112 1 153 1 154 1 15 3 328 2 17 2 71 1 242 1 243 2 72 13 161 1 206 1 162 1 207 1 122 1 246 1 166 1 249 4 213 1 80 1 250 1 296 1 342 1 84 1 31 2 174 1 303 4 259 2 351 1 265 1 357 1 44 1 141 1 101 1 103 7 50 5 185 2 187 2 
273 1 3 2 4 3 56 1 342 1 128 1 130 1 277 1 132 2 238 1 86 1 326 2 202 1 16 1 179 2 158 1 159 1 42 1 333 3 244 1 182 2 206 2 120 1 340 1 365 1 213 1 80 1 107 1 
159 1 1 1 242 1 342 2 206 2 44 2 153 1 229 1 166 1 304 1 213 2 80 2 250 1 
42 1 242 1 342 1 194 1 206 1 44 1 357 1 278 1 101 1 84 1 246 1 105 1 185 2 166 1 213 1 17 2 80 1 250 1 
241 1 242 1 342 1 205 1 206 1 44 2 166 1 304 1 258 1 213 1 65 1 80 1 250 1 
361 1 89 1 313 1 194 1 97 1 
4 2 181 1 332 1 333 2 194 1 322 1 277 1 280 1 122 1 238 1 361 1 269 1 89 2 289 1 313 2 201 1 202 1 107 1 97 2 
149 1 358 1 84 1 361 1 89 1 185 1 127 1 17 1 97 1 
361 1 289 1 280 1 
76 1 104 1 330 1 275 1 171 1 124 1 186 1 96 1 
81 1 330 2 275 1 321 1 307 1 171 2 109 1 46 2 104 4 124 4 186 3 352 1 230 1 96 1 
330 1 275 1 171 1 46 1 85 1 76 1 104 2 124 2 36 1 186 1 212 1 96 1 
275 1 330 1 171 1 109 1 266 1 76 1 104 3 124 3 186 1 96 1 230 2 352 2 
35 2 356 1 94 1 186 2 
76 1 104 1 275 1 92 1 124 1 96 1 
76 1 104 2 330 1 275 1 171 1 124 2 186 1 46 1 52 1 96 1 
274 1 
76 1 104 1 330 1 275 1 171 1 124 1 186 1 96 1 
75 1 330 1 171 1 186 1 
104 1 330 1 275 1 171 1 124 1 186 1 96 1 
204 1 124 1 131 1 
76 1 104 3 330 1 275 1 171 1 124 3 109 1 186 1 352 2 230 1 96 1 240 1 
104 2 330 1 275 1 171 1 124 2 186 1 46 1 9 1 96 1 
275 1 306 1 307 1 360 1 76 1 104 1 255 1 124 1 156 1 186 1 96 1 
76 1 104 1 330 1 275 1 124 1 186 1 96 1 
76 1 104 1 330 2 275 1 171 1 124 1 96 1 
330 1 275 2 76 1 218 1 104 2 363 1 90 1 124 2 186 1 96 2 
330 1 275 1 321 1 307 1 171 1 46 2 76 1 104 3 346 1 124 3 186 2 52 1 96 1 
330 1 275 1 306 1 171 1 343 1 46 1 360 2 300 1 76 1 104 2 255 1 78 1 124 2 186 1 96 1 
330 1 275 2 321 1 307 1 171 1 46 2 9 1 226 1 76 1 104 4 124 4 186 2 96 2 
275 1 330 1 171 1 46 1 76 1 104 3 124 3 186 1 52 1 96 1 352 1 
81 1 321 1 307 1 186 1 
330 1 186 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 250 (74,353) (74,353) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 250 (74,353) (74,353) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 250 (74,353) (74,353) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 250 (74,353) (74,353) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 250 (261,338) (261,338) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 222 191 172 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 159 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (100,133,273,329) (100,133,273,329) (100,133,273,329) (184,243) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (100,133,273,329) (100,133,273,329) (100,133,273,329) (184,243) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (100,133,273,329) (100,133,273,329) (100,133,273,329) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (100,133,273,329) (100,133,273,329) (100,133,273,329) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (100,133,273,329) (100,133,273,329) (100,133,273,329) 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 1 250 1 353 1 274 1 
74 1 250 1 353 1 274 1 
74 1 250 1 353 1 274 1 
74 1 250 1 353 1 274 1 
274 1 153 1 
338 1 151 1 250 1 274 1 173 1 261 1 
274 1 116 1 
274 1 58 1 
274 1 58 1 
249 1 43 1 93 1 
187 1 47 2 93 1 
224 2 318 2 179 2 169 2 304 1 291 2 117 1 315 2 
141 1 26 1 96 2 76 1 169 2 53 1 315 3 295 1 30 2 80 2 318 2 99 1 32 2 214 2 280 1 198 1 10 1 37 1 235 1 199 1 323 1 176 1 179 2 221 1 157 1 131 1 332 1 224 2 111 1 42 1 334 1 268 1 271 1 304 1 291 3 117 1 364 1 
224 1 302 1 318 1 179 1 169 1 304 1 291 1 5 1 48 1 315 1 
15 1 3 1 179 1 357 1 315 1 110 1 43 1 188 1 349 1 291 1 258 1 93 1 48 1 262 1 
15 2 3 1 179 1 169 1 315 1 224 1 318 1 43 1 349 2 188 1 291 1 258 1 93 1 48 1 262 1 
17 1 31 1 15 1 251 1 349 1 
142 1 247 1 15 2 179 1 169 1 5 1 315 1 224 1 17 1 302 1 31 1 318 1 160 1 43 1 304 1 349 2 291 1 48 1 93 1 
31 1 15 1 349 1 
247 1 15 1 179 1 169 1 5 1 315 1 17 1 224 1 302 1 318 1 304 1 349 1 291 1 48 1 
93 1 
142 1 247 1 15 2 179 1 169 1 5 1 315 1 224 1 17 1 302 1 31 1 318 1 35 1 43 1 304 1 349 2 291 1 48 1 93 1 
17 2 15 3 36 1 349 3 86 1 191 1 130 1 222 1 172 1 200 1 
249 1 117 1 
179 2 169 1 315 2 224 1 318 1 207 1 154 1 291 2 117 2 
41 1 109 1 285 1 
141 1 323 1 75 1 96 1 53 1 315 1 30 1 334 1 42 1 32 1 280 1 291 1 37 1 235 1 117 1 364 1 
141 1 323 1 179 1 96 1 169 1 53 1 7 1 315 2 30 1 226 1 109 1 42 1 334 1 318 1 32 1 280 1 291 2 37 1 235 1 364 1 
224 1 226 1 318 3 179 3 169 3 291 3 117 1 315 3 
302 1 318 1 179 1 169 1 291 1 48 1 315 1 
224 1 318 1 179 1 169 1 207 1 154 1 291 1 48 1 315 1 
141 1 26 1 3 1 96 1 169 3 311 1 53 1 7 1 315 4 30 1 80 1 318 3 32 1 214 2 280 1 154 1 349 1 258 1 198 1 37 1 235 1 199 1 262 1 323 1 176 1 15 1 179 3 221 1 157 1 332 1 224 2 226 1 111 1 42 1 334 1 268 1 67 1 271 1 304 1 188 1 291 4 48 1 117 1 364 1 
97 1 226 1 318 1 179 2 169 1 291 2 357 1 117 1 315 2 
15 1 3 1 179 3 169 3 312 1 7 1 315 3 224 1 226 2 67 1 318 3 154 1 349 1 188 1 291 3 258 1 93 1 48 1 262 1 
179 2 169 2 315 2 224 1 226 1 41 1 109 1 318 2 154 1 291 2 
141 1 323 1 96 1 53 1 315 1 30 1 334 1 42 1 32 1 280 1 291 1 235 1 37 1 117 1 364 1 
141 1 96 1 53 1 315 1 30 1 334 1 42 1 32 1 280 1 291 1 335 1 37 1 117 1 364 1 236 1 
305 1 49 1 26 1 231 1 76 2 146 1 277 1 80 4 214 2 84 1 198 1 199 1 125 1 285 2 267 1 157 1 332 1 109 2 41 2 111 2 271 1 206 1 162 1 73 1 
350 1 3 1 318 1 179 1 169 1 291 1 48 1 315 1 
102 1 179 5 169 4 209 1 357 1 7 1 315 5 97 1 224 1 226 2 318 4 154 1 291 5 117 1 
350 1 302 1 318 2 179 2 169 2 291 2 48 1 315 2 
27 1 149 1 
27 1 149 1 
272 1 129 1 
272 1 129 1 
272 1 129 1 
27 1 72 1 149 1 
27 1 296 1 149 1 
272 1 27 2 346 1 129 1 197 1 149 2 87 1 
27 1 72 1 149 1 
27 1 72 1 149 1 
27 1 257 1 149 1 
27 1 257 1 149 1 
27 1 257 1 149 1 
177 1 27 2 15 2 294 1 4 2 108 1 149 2 158 1 79 1 98 2 21 1 348 3 215 1 349 2 197 1 93 1 175 2 292 2 95 2 
27 1 169 2 149 1 315 2 98 1 318 2 296 1 348 1 33 1 349 1 175 1 322 1 177 1 325 1 38 1 15 1 179 2 39 1 358 1 135 1 291 2 117 1 95 1 292 1 
173 1 330 1 16 1 
151 1 173 1 330 1 
289 1 151 1 56 1 61 1 173 3 16 2 
1 1 151 1 56 1 61 1 173 2 16 1 
151 1 56 1 61 2 173 2 16 1 
142 1 49 1 305 1 2 2 248 1 208 2 277 1 31 1 33 1 152 1 36 1 349 5 299 1 260 2 200 1 88 3 325 1 14 1 15 5 286 1 65 1 328 1 355 2 130 1 331 1 17 4 358 1 187 1 43 1 206 1 47 3 93 2 
247 1 251 1 169 1 5 1 315 1 31 1 318 1 349 2 217 1 15 2 179 1 17 2 224 1 302 1 44 1 43 1 304 1 291 1 138 1 48 1 93 1 
49 1 305 1 2 2 208 2 277 1 152 1 36 1 349 3 86 1 260 1 200 1 88 3 325 1 14 1 15 3 286 1 65 1 355 2 130 1 331 1 17 2 43 1 187 2 206 1 47 4 93 3 
15 1 65 1 130 1 331 1 159 1 36 1 349 1 86 1 200 1 
249 1 37 1 78 1 
178 1 37 1 
234 1 
42 1 37 1 
42 1 334 1 114 1 310 1 78 2 37 3 
42 1 334 1 37 1 
213 1 37 1 
305 1 126 1 64 1 52 1 239 2 76 3 240 1 54 1 80 5 204 1 20 1 111 2 9 1 206 1 290 1 84 3 73 2 
305 1 126 1 64 1 52 1 239 2 76 3 240 1 54 1 80 5 204 1 20 1 111 2 9 1 206 1 290 1 84 3 73 2 
305 1 126 1 50 1 64 1 52 1 239 2 76 3 240 1 54 1 80 5 204 1 20 1 111 2 9 1 206 1 290 1 84 3 73 2 
305 4 49 3 144 4 339 1 76 15 52 2 29 1 277 3 171 3 54 1 80 29 9 2 57 1 214 2 84 10 198 1 124 1 199 1 104 1 126 2 14 3 64 1 239 3 240 1 354 1 332 1 20 2 204 5 111 14 112 1 271 1 290 1 206 4 73 5 
305 1 76 4 52 1 317 1 80 7 9 1 214 4 84 4 198 2 199 2 126 1 64 1 239 2 240 1 354 1 332 2 204 1 20 1 111 3 271 2 186 1 206 1 290 1 73 3 
30 1 32 1 63 1 96 1 274 1 119 1 
184 1 273 1 133 1 329 1 
167 1 96 1 119 1 148 1 313 1 53 1 30 1 151 1 32 1 280 1 34 1 196 1 173 2 300 1 259 1 100 2 284 1 60 1 329 2 330 1 89 1 16 1 225 2 289 1 243 1 
184 1 273 1 133 1 329 1 
30 1 284 1 32 1 96 1 274 1 119 1 
122 1 
142 2 143 1 0 3 3 1 96 2 6 1 53 1 314 1 150 1 233 1 315 1 280 1 200 1 283 1 286 1 15 4 328 1 241 2 110 1 291 1 211 1 120 1 30 2 31 4 82 1 254 2 32 2 347 1 36 1 297 1 349 4 85 1 258 1 37 1 218 1 262 1 88 2 179 1 355 2 130 1 357 1 183 1 303 2 42 1 187 2 92 1 188 1 47 2 139 1 93 1 48 1 364 2 230 1 140 1 
0 2 15 2 3 1 179 1 211 1 6 1 314 1 357 1 315 1 31 1 110 1 347 1 188 1 349 2 85 1 258 1 291 1 48 1 230 1 262 1 
142 1 0 3 3 1 6 1 211 1 314 1 120 1 315 1 31 1 347 1 35 1 349 3 258 1 262 1 15 3 179 1 357 1 110 1 43 1 188 1 291 1 48 1 93 1 230 1 
0 2 15 2 3 1 179 1 211 1 6 1 314 1 357 1 315 1 31 1 110 1 347 1 92 1 188 1 349 2 85 1 258 1 291 1 48 1 230 1 262 1 
142 1 25 1 0 3 247 1 3 1 169 1 5 1 6 1 211 1 314 1 120 1 315 2 31 2 318 1 347 1 35 1 349 3 258 1 85 1 262 1 15 3 179 2 357 1 224 1 302 1 110 1 43 1 304 1 188 1 92 1 291 2 93 1 48 2 230 1 
142 1 0 3 3 1 6 1 314 1 233 1 150 1 315 1 200 1 15 3 328 1 241 2 110 1 291 1 211 1 120 1 31 2 254 2 82 1 347 1 36 1 349 3 258 1 85 1 218 1 262 1 88 1 179 1 355 1 357 1 130 1 303 2 43 1 187 2 188 1 92 1 47 2 48 1 93 2 230 1 
142 2 0 4 3 1 276 1 6 1 211 1 314 1 120 2 233 1 315 1 31 4 82 2 254 2 347 1 36 1 349 4 85 2 258 1 101 1 218 1 262 1 200 1 88 1 105 1 15 4 328 1 179 1 241 2 355 1 130 1 357 1 303 2 110 1 43 1 187 2 92 2 188 1 291 1 93 1 48 1 230 1 
142 2 0 4 3 1 276 1 5 1 6 1 314 1 233 1 315 2 318 1 101 1 200 1 105 1 15 4 328 1 241 2 110 1 291 2 247 1 169 1 211 1 120 2 31 4 254 2 82 2 347 1 36 1 349 4 258 1 85 2 218 1 262 1 88 1 179 2 355 1 357 1 130 1 224 1 302 1 303 2 187 2 43 1 304 1 188 1 92 2 48 2 93 1 230 1 
142 2 0 4 3 1 275 1 276 1 5 1 6 1 314 1 233 1 315 2 278 2 195 1 318 1 200 1 155 1 15 4 328 1 241 2 110 1 291 2 247 1 169 1 170 2 211 1 120 2 31 4 254 2 347 1 36 1 349 4 258 1 85 2 262 1 88 1 179 2 355 1 357 1 130 1 224 1 302 1 43 1 304 1 188 1 92 2 47 2 48 2 93 1 230 1 
142 2 0 4 3 1 276 1 5 1 6 1 314 1 233 1 315 2 318 1 101 1 200 1 105 1 15 4 328 1 241 2 110 1 291 2 247 1 169 1 211 1 120 2 31 5 121 1 254 2 82 2 347 1 36 1 349 4 85 3 258 1 218 1 262 1 88 1 179 2 355 1 357 1 130 1 224 1 302 1 303 2 187 2 43 1 304 1 92 3 188 1 48 2 93 1 230 1 
142 2 0 5 3 1 276 1 5 1 6 1 314 1 233 1 315 2 318 1 101 1 200 1 105 1 15 4 328 1 241 2 110 1 291 2 247 1 169 1 211 1 120 3 31 5 121 1 254 2 82 2 347 1 36 1 349 4 85 3 258 1 218 1 262 1 88 1 179 2 355 1 357 1 130 1 224 1 302 1 303 2 187 2 43 1 304 1 92 3 188 1 48 2 93 1 230 1 
142 2 0 4 3 1 5 1 6 1 314 1 233 1 150 1 315 2 278 2 195 1 318 1 200 1 15 4 328 1 241 2 110 1 291 2 247 1 169 1 170 2 211 1 120 2 31 4 254 2 347 1 36 1 349 4 258 1 85 2 262 1 88 1 179 2 355 1 357 1 130 1 224 1 302 1 43 1 304 1 188 1 92 2 47 2 48 2 93 1 230 1 
305 1 26 1 249 1 231 1 76 2 80 4 9 1 214 2 84 2 198 1 199 1 285 1 64 1 239 1 240 1 157 1 332 1 20 1 41 1 109 1 111 2 271 1 290 1 206 1 73 2 117 1 
246 1 305 2 49 1 144 3 26 2 308 1 76 8 277 2 171 3 80 14 57 1 214 4 84 2 174 1 198 2 10 1 124 1 199 2 281 1 176 1 14 2 285 11 180 1 157 1 332 2 204 1 109 11 41 4 111 6 271 2 206 1 73 1 117 1 
26 1 168 1 169 1 77 1 76 1 7 1 341 1 315 1 194 1 80 2 318 1 214 2 198 1 10 1 281 1 199 1 176 1 179 1 157 1 332 1 226 1 41 1 111 1 271 1 291 1 48 1 117 1 
141 2 305 3 49 2 96 3 277 2 7 1 53 2 315 3 9 1 318 1 280 2 198 3 10 1 235 2 199 3 281 1 323 2 284 1 14 2 237 1 62 2 285 7 64 1 239 1 240 1 157 3 332 3 20 1 204 4 109 7 111 9 334 2 290 1 206 3 71 2 291 3 73 4 117 1 26 3 169 1 76 9 30 3 80 18 32 3 214 6 84 8 37 2 301 1 351 2 264 2 176 1 179 1 226 1 41 7 268 2 42 2 271 3 45 1 364 1 
26 2 231 1 96 8 169 1 76 1 53 2 342 1 315 1 30 8 253 1 80 2 318 1 32 7 280 2 214 4 198 2 37 3 10 1 199 2 284 1 176 1 63 1 219 1 179 1 356 1 157 2 131 2 183 1 332 2 203 1 226 1 111 1 42 2 271 2 134 1 291 1 245 1 364 2 140 1 
305 1 49 1 26 1 169 1 76 1 277 1 315 1 80 3 318 1 214 2 84 1 154 1 198 1 199 1 281 1 14 1 285 1 179 1 157 1 332 1 224 1 41 1 109 1 111 2 271 1 206 1 163 1 291 1 73 1 
305 1 26 1 125 1 285 1 231 1 76 2 277 1 157 1 332 1 80 2 204 1 41 1 109 1 271 1 214 2 84 1 198 1 199 1 
49 1 26 1 285 1 231 1 146 1 157 1 332 1 80 2 41 1 109 1 111 2 271 1 214 2 206 1 84 1 198 1 73 1 199 1 
305 1 49 1 26 1 231 1 76 2 277 1 80 4 214 2 84 2 198 1 199 1 14 1 285 2 157 1 332 1 204 1 109 2 41 2 111 2 271 1 206 1 73 1 
305 1 26 1 125 1 285 1 76 2 277 1 157 1 332 1 80 2 203 1 204 1 41 1 109 1 271 1 214 2 84 1 198 1 199 1 
49 1 26 1 285 1 146 1 157 1 332 1 80 2 203 1 41 1 109 1 111 2 271 1 214 2 206 1 84 1 198 1 73 1 199 1 
305 1 49 1 26 1 76 2 277 1 80 4 214 2 84 2 198 1 199 1 14 1 285 2 157 1 332 1 203 1 204 1 109 2 41 2 111 2 271 1 206 1 73 1 
305 1 49 1 26 1 76 2 277 1 80 4 214 2 84 2 198 1 199 1 14 1 285 2 157 1 332 1 204 1 109 2 41 2 111 2 271 1 206 1 73 1 
141 1 26 1 96 1 76 1 53 1 315 1 30 1 80 2 32 1 280 1 214 2 198 1 10 1 235 1 37 1 199 1 323 1 176 1 157 1 332 1 42 1 334 1 268 1 111 1 271 1 291 1 117 1 364 1 
141 1 26 1 96 1 76 1 232 1 53 1 315 1 30 1 80 2 32 1 280 1 214 2 198 1 10 1 37 1 236 1 199 1 176 1 157 1 332 1 42 1 334 1 111 1 271 1 335 1 291 1 117 1 364 1 
305 1 49 1 26 1 76 2 277 1 80 4 214 2 84 2 198 1 199 1 281 1 14 1 285 2 157 1 332 1 204 1 109 2 41 2 111 2 271 1 206 1 73 1 
141 1 49 1 305 1 26 1 96 1 76 2 277 1 53 1 315 1 30 1 80 4 32 1 280 1 214 2 84 2 198 1 235 1 37 1 199 1 323 1 351 1 14 1 285 2 63 1 157 1 332 1 204 1 41 2 109 2 111 2 334 1 268 1 42 1 271 1 206 1 291 1 73 1 
49 1 305 1 26 1 169 1 76 2 277 1 315 1 80 3 318 1 214 2 84 1 154 1 198 1 199 1 281 1 14 1 285 1 179 1 157 1 332 1 224 1 204 1 109 1 41 1 111 1 271 1 91 1 206 1 291 1 
305 3 49 3 144 2 309 1 76 9 277 3 171 1 8 1 80 19 57 1 214 4 84 6 198 2 124 1 199 2 103 1 12 2 326 1 14 3 220 2 287 1 332 2 19 1 204 3 111 10 271 2 186 1 228 1 206 3 73 3 
305 3 49 2 144 2 293 1 309 1 76 14 277 3 171 2 8 1 80 26 57 2 214 6 84 4 198 3 199 3 12 1 103 1 326 2 14 3 181 1 220 4 354 2 287 2 332 3 90 1 204 2 66 1 205 1 111 12 271 3 186 1 206 2 363 1 73 2 
49 4 305 5 144 4 309 1 277 4 8 1 57 3 9 1 198 3 199 3 326 1 103 1 12 1 14 4 64 1 239 1 240 1 287 2 332 3 204 4 20 1 19 1 205 1 66 1 111 20 206 5 290 1 23 1 73 4 293 1 76 19 171 3 80 39 214 6 84 8 124 1 220 4 181 1 354 1 90 1 271 3 186 1 363 1 
305 5 49 3 144 4 293 1 309 1 76 19 277 4 171 3 8 1 80 36 9 1 57 3 214 8 84 7 198 4 124 1 199 4 12 1 103 1 326 1 14 4 64 1 239 1 181 1 220 4 240 1 354 2 287 2 332 4 90 1 19 1 20 1 204 3 66 1 205 1 111 17 271 4 186 1 23 1 290 1 206 4 363 1 73 4 
246 2 305 8 49 7 144 4 293 1 309 1 76 26 277 7 171 4 8 1 80 50 9 1 57 2 214 4 84 14 198 2 124 2 199 2 12 1 103 1 326 1 14 7 64 1 239 1 181 1 220 4 240 1 354 1 287 1 332 2 90 1 20 1 204 7 66 1 205 1 111 24 271 2 186 1 290 1 206 8 363 1 73 7 
158 1 27 1 98 1 185 1 197 1 108 1 175 1 149 1 95 1 292 1 
296 1 135 1 
27 1 98 1 265 1 113 1 115 1 175 1 149 1 95 1 292 1 
177 1 27 1 15 1 4 1 108 1 149 1 158 1 79 1 98 1 21 1 348 2 215 1 349 1 197 1 93 1 175 1 292 1 95 1 
177 1 27 1 15 1 4 1 108 1 149 1 158 1 79 1 98 1 21 1 348 2 215 1 349 1 197 1 93 1 175 1 292 1 95 1 
177 1 27 1 15 1 4 1 108 1 149 1 158 1 79 1 98 1 21 1 348 2 215 1 349 1 197 1 93 1 175 1 292 1 95 1 
327 1 72 1 87 1 
327 1 72 1 87 1 
257 1 192 1 
257 1 192 1 87 1 
38 1 39 1 
27 1 169 2 4 1 149 1 315 2 98 1 296 1 318 2 348 1 33 1 215 1 349 1 175 1 322 1 325 1 38 1 15 1 179 2 39 1 17 1 358 1 22 1 135 1 291 2 117 1 95 1 292 1 
327 1 72 1 
257 1 192 1 87 1 
26 1 96 2 145 1 76 1 53 1 315 2 30 2 80 2 32 2 280 1 214 2 198 1 37 1 10 1 281 1 199 1 176 1 219 1 179 2 107 1 202 1 356 1 157 1 131 2 332 1 223 1 42 1 111 1 271 1 360 1 291 2 
11 1 284 1 167 1 63 1 96 2 313 1 330 1 53 1 16 1 55 1 289 1 30 2 151 1 40 1 81 1 32 2 280 1 173 2 300 1 
11 1 284 1 167 1 96 1 313 1 330 1 53 1 16 1 55 1 289 1 30 1 151 1 32 1 319 1 280 1 173 2 300 1 
96 1 201 1 313 1 53 1 212 1 183 1 30 1 81 1 42 1 32 1 280 1 37 1 364 1 140 1 
11 1 284 1 167 1 96 1 313 1 330 1 53 1 16 1 55 1 289 1 30 1 151 1 40 1 81 1 32 1 280 1 173 2 300 1 
359 1 
88 1 249 1 43 1 83 1 266 1 355 1 93 1 
142 1 31 1 82 1 36 1 349 1 218 1 200 1 88 1 15 1 328 1 355 1 130 1 303 1 43 1 187 1 47 1 93 2 
142 1 305 1 49 1 2 3 96 1 277 1 53 2 280 1 200 2 14 1 286 1 15 2 328 2 334 1 114 1 161 1 206 1 71 1 24 1 208 3 210 1 78 1 30 1 31 2 344 1 345 1 32 1 256 1 36 2 349 2 37 4 88 4 178 2 355 3 130 2 227 1 42 1 132 1 187 3 188 1 47 6 93 3 364 1 
142 1 143 1 49 2 305 2 144 1 2 5 5 1 277 2 315 1 57 1 318 1 200 2 14 2 15 1 286 1 328 2 156 1 205 1 206 2 291 1 247 1 208 5 293 1 169 1 210 2 171 1 31 1 36 2 349 1 88 8 127 1 179 1 181 1 128 1 355 5 130 2 224 1 90 1 302 1 43 2 187 3 304 1 363 1 47 6 48 1 93 5 
305 2 247 1 169 1 210 2 5 1 315 1 9 1 318 1 36 1 349 1 200 1 88 2 105 1 15 1 328 1 179 1 128 1 355 2 130 1 224 1 20 1 302 1 290 1 206 1 304 1 291 1 362 1 48 1 
88 1 328 1 266 1 355 1 130 1 43 1 83 1 36 1 93 1 200 1 
305 2 49 2 2 5 88 5 14 2 208 5 128 1 210 2 277 2 355 5 187 5 206 2 71 1 47 10 93 5 
142 1 247 1 15 1 179 1 169 1 5 1 315 1 224 1 302 1 31 1 318 1 43 1 304 1 349 1 291 1 48 1 93 1 
142 1 143 1 96 2 53 3 30 2 31 2 279 1 32 2 280 2 36 2 349 2 86 1 37 2 200 2 283 1 13 1 88 1 286 1 15 2 328 1 355 1 130 2 183 1 334 1 42 2 269 1 68 1 137 1 139 1 364 2 140 1 
141 1 26 1 96 1 169 2 53 1 315 3 30 1 80 1 32 1 318 2 214 2 280 1 198 1 235 1 37 1 199 1 323 1 176 1 179 2 221 1 157 1 332 1 224 2 111 1 268 1 334 1 42 1 271 1 304 1 291 3 117 1 364 1 
143 1 2 2 88 1 208 2 286 1 328 1 239 1 355 2 130 1 187 2 43 2 36 1 47 4 93 4 200 1 
190 1 175 1 95 1 
158 1 106 1 39 1 175 1 95 1 
190 1 175 1 95 1 
190 1 175 1 95 1 
189 1 175 1 95 1 
189 1 175 1 95 1 
189 1 175 1 95 1 
175 1 95 1 
27 1 149 1 
305 1 64 1 239 1 76 3 240 1 354 1 332 2 80 6 204 1 20 1 111 3 271 2 9 1 214 4 206 1 290 1 84 3 198 2 73 2 199 2 
305 1 249 1 64 1 239 1 76 2 240 1 80 4 20 1 111 2 9 1 290 1 206 1 84 2 73 2 
49 1 305 1 14 1 76 2 277 1 332 1 80 4 18 1 204 1 111 2 271 1 214 2 206 1 84 2 198 1 73 1 199 1 
49 1 305 1 144 2 14 1 76 3 277 1 171 1 80 7 204 1 111 4 57 1 206 1 84 2 73 1 124 1 
246 1 305 3 49 2 144 2 76 10 277 2 171 2 80 21 9 2 214 4 84 9 198 2 124 1 199 2 14 2 64 1 239 1 180 1 240 1 354 2 332 2 20 2 204 4 111 11 271 2 361 1 290 1 206 3 73 5 
80 1 144 1 111 1 
80 1 76 1 171 1 
305 1 49 1 14 1 76 3 277 1 332 1 80 6 18 1 204 1 111 3 271 1 214 2 206 1 71 1 84 3 198 1 73 2 199 1 
305 2 49 2 144 1 293 1 76 6 277 2 171 1 80 12 57 1 214 2 84 2 198 1 199 1 14 2 181 1 332 1 90 1 204 1 205 1 111 6 271 1 186 1 206 2 363 1 73 1 
80 2 305 1 111 1 206 1 76 1 290 1 
64 1 76 1 240 1 354 1 332 1 80 3 204 1 20 1 111 2 9 1 271 1 214 2 361 1 84 2 198 1 73 1 199 1 
305 2 76 4 332 1 80 8 20 1 204 2 111 4 271 1 9 1 214 2 186 1 290 1 206 2 84 4 362 1 198 1 73 2 199 1 
305 1 76 2 277 1 332 1 80 2 204 1 271 1 186 1 214 2 84 1 198 1 199 1 
49 1 305 1 14 1 76 2 277 1 332 1 80 4 204 1 111 2 271 1 186 1 214 2 206 1 84 2 198 1 73 1 199 1 
76 1 354 1 332 3 80 3 19 1 20 1 204 1 111 2 271 3 9 1 186 1 214 6 361 1 84 2 198 3 73 1 199 3 
305 5 49 3 144 4 76 14 29 1 277 3 171 3 80 30 9 2 57 1 214 10 84 11 198 5 124 1 199 5 104 1 14 3 64 1 239 1 240 1 354 2 332 5 20 2 18 1 19 1 204 5 111 16 112 1 271 5 186 1 361 1 290 2 206 5 73 6 
305 1 144 1 76 3 171 1 80 6 57 1 9 1 214 2 84 2 198 1 199 1 64 1 239 1 240 1 332 1 20 1 111 3 271 1 186 1 206 1 290 1 363 1 73 2 
305 2 144 2 76 5 277 1 171 1 80 9 9 1 57 1 214 4 84 3 198 2 124 1 199 2 14 1 64 1 239 1 240 1 332 2 20 1 18 1 204 1 111 4 271 2 186 1 206 1 290 1 363 1 73 2 
305 3 49 2 144 1 293 1 76 8 277 2 171 1 80 17 9 1 57 1 214 6 84 4 198 3 199 3 14 2 64 1 239 1 181 1 240 1 354 1 332 3 90 1 20 1 18 1 204 1 205 1 111 9 271 3 186 1 290 1 206 3 363 1 73 3 
305 3 49 1 144 1 293 1 76 9 277 2 171 1 80 15 9 1 57 1 214 6 84 5 198 3 199 3 14 2 64 1 239 1 181 1 240 1 354 1 332 3 90 1 20 1 18 1 204 2 205 1 111 6 271 3 186 1 290 1 206 2 363 1 73 3 
305 1 144 1 76 3 171 1 80 6 57 1 9 1 214 2 84 2 198 1 199 1 64 1 239 1 240 1 332 1 20 1 111 3 271 1 186 1 206 1 290 1 363 1 73 2 
305 2 49 2 144 1 293 1 76 6 277 2 171 1 80 12 57 1 214 2 84 2 198 1 199 1 14 2 181 1 332 1 90 1 204 1 205 1 111 6 271 1 186 1 206 2 363 1 73 1 
305 3 49 1 144 1 293 1 76 9 277 2 171 1 80 16 9 1 57 1 214 8 84 5 198 4 199 4 14 2 64 1 239 1 181 1 240 1 354 2 332 4 90 1 20 1 204 2 18 1 205 1 111 7 271 4 186 1 290 1 206 2 363 1 73 3 
305 3 49 2 144 1 293 1 76 9 277 3 171 1 80 16 57 1 214 8 84 6 198 4 199 4 14 3 181 1 354 2 332 4 90 1 204 3 19 1 205 1 111 7 271 4 186 1 206 2 363 1 73 3 
305 3 64 1 239 1 76 5 240 1 80 9 20 2 204 3 111 4 9 2 206 3 290 2 84 7 362 1 73 4 
305 3 49 1 144 1 293 1 76 9 277 2 171 1 80 16 9 1 57 1 214 8 84 4 198 4 199 4 14 2 64 1 239 1 181 1 240 1 354 2 332 4 90 1 20 1 204 1 19 1 205 1 111 7 271 4 186 1 290 1 206 2 363 1 73 3 
97 1 238 1 179 1 291 1 357 1 117 1 315 1 
307 1 238 1 179 1 182 1 357 1 315 1 97 1 298 1 70 1 291 1 336 1 117 1 
30 1 42 1 249 1 32 1 280 1 96 1 53 1 37 1 183 1 364 1 140 1 
141 1 179 1 96 1 169 1 53 1 315 2 30 1 226 1 42 1 334 1 318 1 32 1 280 1 291 2 37 1 235 1 117 1 364 1 
141 1 28 1 3 1 179 2 96 1 169 2 53 1 315 2 30 1 226 1 213 1 42 2 334 2 318 1 32 1 280 1 258 1 291 2 164 1 48 1 37 3 235 1 117 1 
141 1 28 1 3 1 96 2 169 2 53 1 315 2 30 2 213 1 32 2 318 1 280 1 258 1 37 3 236 1 179 2 226 1 334 2 42 2 136 1 164 1 291 2 48 1 117 1 
247 1 28 1 96 1 169 1 5 1 78 1 53 1 315 1 30 1 343 1 31 1 213 1 318 1 32 1 280 1 349 2 37 4 178 1 15 2 179 1 224 1 302 1 334 1 42 1 43 1 304 1 188 1 291 1 164 1 46 1 48 1 93 1 
247 1 28 1 96 1 169 1 5 1 78 1 53 1 315 1 30 1 31 1 213 1 345 1 318 1 32 1 280 1 349 2 37 4 178 1 15 2 179 1 224 1 302 1 334 1 42 1 43 1 304 1 188 1 291 1 164 1 48 1 93 1 
30 1 253 1 32 1 280 1 96 1 53 1 
284 1 63 1 96 7 356 1 53 3 131 1 342 1 316 1 30 7 253 1 334 1 42 2 32 6 68 1 114 1 280 2 134 1 137 1 37 3 245 1 364 2 
141 1 305 1 96 1 145 1 53 1 315 2 318 1 9 1 280 1 198 2 235 1 199 2 281 1 323 1 62 1 285 1 63 1 64 1 239 1 240 1 157 2 332 2 20 1 109 1 334 1 111 2 290 1 206 1 291 2 73 2 117 1 26 2 169 1 76 2 30 1 80 4 32 1 214 4 84 2 37 1 351 1 179 1 226 1 41 1 268 1 42 1 271 2 
142 1 305 2 96 1 5 1 315 1 9 1 318 1 200 2 15 3 328 2 17 1 20 1 161 1 290 1 206 2 291 1 24 1 247 1 169 1 210 2 78 1 30 1 31 2 345 1 32 1 256 1 36 2 83 1 349 3 37 2 88 3 178 1 179 1 128 1 266 1 355 4 130 2 224 1 302 1 269 1 43 1 304 1 188 1 362 1 48 1 93 1 364 1 
63 1 96 2 78 1 53 2 30 2 253 1 132 1 334 1 42 1 32 2 114 1 280 1 37 2 
282 1 63 1 96 4 53 1 183 1 30 4 42 1 32 4 280 1 136 1 37 1 364 1 140 1 
13 1 237 1 96 2 53 2 30 2 334 1 42 1 279 1 32 2 68 1 280 1 164 1 137 1 37 1 
30 1 151 1 167 1 32 1 280 1 96 1 173 1 330 1 53 1 364 1 
30 2 284 1 42 1 32 2 63 1 280 1 96 2 202 1 53 1 37 1 356 1 
282 1 63 1 96 5 356 1 53 2 183 1 30 5 42 2 32 4 280 2 134 1 164 1 37 3 364 1 245 1 140 1 
282 1 306 1 63 1 96 5 356 1 53 2 183 1 30 5 42 2 32 4 280 2 134 1 164 1 37 3 364 1 140 1 
141 1 179 1 96 1 169 1 53 1 315 2 30 1 226 1 42 1 334 1 318 1 32 1 280 1 291 2 37 1 117 1 364 1 236 1 
96 1 53 2 316 1 30 1 334 1 42 1 32 1 68 1 114 1 280 1 137 1 164 1 37 1 
255 1 340 1 320 1 117 1 321 1 
15 2 3 1 340 2 288 1 17 1 67 1 255 1 43 1 188 1 349 2 258 1 229 1 216 1 320 2 93 1 48 1 117 1 262 1 321 2 
179 1 107 1 340 1 315 1 223 1 255 1 360 1 291 1 321 1 
255 1 288 1 216 1 
60 1 249 1 196 1 148 1 
273 1 133 1 329 1 
225 1 34 1 259 1 
225 1 263 1 118 1 352 1 274 1 329 1 333 1 
273 1 133 1 329 1 
274 1 
274 1 
274 1 
69 1 274 1 
118 1 59 1 60 1 274 1 51 1 147 1 329 2 225 2 123 1 100 2 
151 1 274 1 173 1 
118 1 60 1 274 1 51 1 329 2 225 2 123 1 244 1 100 2 94 1 
118 1 274 1 
225 1 118 1 273 1 133 1 329 2 100 1 
118 1 324 1 274 1 329 1 225 1 242 1 100 1 193 1 
225 1 263 1 118 1 252 1 274 1 329 1 333 1 
60 2 270 1 337 2 165 1 
274 1 
225 1 118 1 274 1 147 1 329 1 100 1 
166 1 
274 1 
225 1 263 1 118 1 274 1 329 1 
118 1 60 1 51 1 123 1 
60 1 196 1 

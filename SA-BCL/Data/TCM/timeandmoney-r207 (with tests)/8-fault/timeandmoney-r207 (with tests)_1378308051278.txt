#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 188 2 266 311 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 154 41 295 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 154 41 295 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
185 1 76 1 274 2 137 1 138 9 6 2 230 2 234 1 80 1 193 1 81 2 357 1 256 1 363 9 174 1 65 1 17 1 319 2 105 1 294 1 375 1 156 2 69 1 25 2 51 4 378 5 347 3 111 6 
185 1 76 1 274 2 137 1 138 9 6 2 230 2 234 1 80 1 193 1 81 2 357 1 256 1 363 9 174 1 65 1 17 1 319 2 105 1 294 1 375 1 156 2 69 1 51 4 25 2 378 5 347 3 111 6 
185 1 76 1 274 2 137 1 138 10 6 2 230 2 234 1 80 1 193 1 81 2 357 1 256 1 363 10 174 1 65 1 17 1 319 2 105 1 294 1 375 1 156 2 69 1 51 5 25 2 378 6 347 4 111 7 
185 1 76 1 274 2 137 1 138 7 6 2 230 2 234 1 80 1 81 2 357 1 256 1 363 7 174 1 65 1 17 1 319 2 105 1 294 1 375 1 156 2 69 1 51 3 25 1 378 4 347 2 111 4 
76 1 274 1 17 1 137 1 138 4 6 1 230 1 193 1 156 1 81 1 69 1 25 2 51 2 378 3 256 1 347 1 363 4 111 3 
65 1 274 1 17 1 137 1 319 1 138 2 6 1 230 1 323 1 155 1 156 1 357 1 378 1 256 1 120 1 363 2 
17 1 137 1 319 1 138 3 6 2 294 1 230 2 51 1 378 2 256 1 347 1 363 3 111 1 
76 1 274 1 137 1 138 9 6 2 230 2 80 1 81 1 193 1 256 1 363 9 368 1 17 1 319 1 178 1 105 1 294 1 156 1 69 1 51 4 25 2 378 5 347 3 111 7 
76 1 274 1 137 1 138 9 6 2 230 2 80 1 81 1 193 1 256 1 363 9 368 1 17 1 319 1 178 1 105 1 294 1 156 1 69 1 51 4 25 2 378 5 347 3 111 7 
272 1 298 1 33 1 
188 1 
246 1 135 2 165 2 239 1 352 2 162 2 260 2 364 2 
273 1 246 1 207 1 135 2 165 3 167 1 352 2 209 1 328 1 115 2 78 1 119 1 145 1 146 1 259 1 337 1 260 3 364 2 218 1 365 2 287 1 173 1 338 1 201 1 15 2 238 1 101 1 239 1 343 2 131 1 297 1 109 1 376 2 92 1 162 2 305 1 55 1 
246 1 135 1 213 1 165 1 11 1 352 1 171 1 162 1 260 1 364 1 
272 1 74 1 246 1 135 1 165 2 370 1 352 1 114 1 33 1 332 1 296 1 213 1 299 1 11 2 90 1 171 1 380 1 162 1 348 1 364 2 260 2 
272 1 74 2 246 1 135 2 165 2 370 1 352 2 114 1 33 1 332 2 296 1 213 1 11 2 171 1 380 1 162 2 348 1 364 2 260 2 
332 1 99 1 74 1 263 1 71 1 
272 1 332 2 99 1 211 1 74 2 247 1 71 1 33 1 
332 1 99 1 74 1 
74 1 246 1 135 1 165 1 352 1 332 1 296 1 213 1 11 1 171 1 71 1 162 1 364 1 260 1 
33 1 
272 1 332 2 99 1 211 1 74 2 214 1 71 1 33 1 
272 1 74 5 99 2 289 2 152 1 113 1 30 1 166 1 32 1 240 1 44 1 33 1 45 2 332 5 211 1 334 1 71 2 285 1 242 2 
298 1 239 1 
245 1 135 1 165 2 16 1 352 1 239 2 162 1 364 2 260 2 
20 1 360 1 342 1 
365 1 207 1 201 1 165 1 101 1 239 1 209 1 278 1 343 1 78 1 297 1 109 1 376 1 146 1 337 1 260 1 
365 1 207 1 201 1 135 1 165 2 101 1 40 1 209 1 343 1 78 1 297 1 354 1 109 1 376 1 360 1 146 1 337 1 162 1 364 1 260 2 
135 3 165 3 352 1 239 1 40 1 162 3 260 3 364 3 
135 1 165 1 11 1 171 1 162 1 260 1 364 1 
245 1 135 1 165 1 11 1 16 1 352 1 162 1 260 1 364 1 
273 1 135 3 231 1 332 1 11 2 146 1 337 1 197 1 287 1 338 1 201 1 15 2 101 1 239 1 343 1 297 1 109 1 162 3 348 1 305 1 245 1 74 1 246 1 207 1 165 4 352 2 167 1 114 1 209 1 115 1 78 1 354 1 119 1 259 1 364 3 260 4 365 1 317 1 370 1 40 1 131 1 376 1 380 1 92 1 55 1 
350 1 135 1 165 2 299 1 239 1 40 1 162 1 260 2 364 2 
245 1 197 1 74 1 135 3 165 3 370 1 352 1 40 2 114 1 33 1 332 1 354 1 11 1 380 1 162 3 348 1 364 3 260 3 29 1 
245 1 135 2 165 2 40 1 352 1 20 1 360 1 162 2 364 2 260 2 
365 1 207 1 201 1 165 1 101 1 239 1 209 1 343 1 297 1 78 1 109 1 376 1 146 1 337 1 260 1 
365 1 201 1 165 1 101 1 239 1 31 1 209 1 343 1 297 1 78 1 376 1 333 1 146 1 337 1 260 1 
273 1 187 1 229 1 167 1 115 4 277 1 255 1 310 1 360 2 259 2 218 2 338 1 15 2 371 1 290 1 342 2 265 1 179 1 131 1 20 2 346 1 92 1 304 1 55 1 
135 1 165 1 11 1 114 1 130 1 162 1 260 1 364 1 
350 1 245 1 135 4 165 5 275 1 40 2 352 1 239 1 7 1 354 1 299 1 162 4 364 5 260 5 
135 2 165 2 11 1 171 1 130 1 162 2 260 2 364 2 
169 1 355 1 
169 1 355 1 
35 1 9 1 
35 1 9 1 
35 1 9 1 
169 1 355 1 14 1 
169 1 355 1 330 1 
169 2 355 2 35 1 126 1 9 1 91 1 
169 1 355 1 14 1 
169 1 355 1 14 1 
169 1 355 1 83 1 
169 1 355 1 83 1 
169 1 355 1 83 1 
74 2 246 1 135 1 165 1 4 2 352 1 190 1 249 1 33 1 118 1 332 2 169 2 355 2 213 1 356 2 11 1 171 1 257 1 361 1 260 1 364 1 84 1 315 1 124 1 85 2 176 1 127 2 341 1 296 1 23 2 162 1 
74 1 135 2 165 2 4 1 330 1 169 1 332 1 280 1 355 1 356 1 62 1 364 2 260 2 366 1 124 1 85 1 316 1 239 1 127 1 153 1 19 1 23 1 162 2 28 1 
156 1 81 1 274 1 
156 1 274 1 120 1 
184 1 200 1 81 2 274 3 120 1 373 1 
184 1 81 1 274 2 120 1 121 1 373 1 
184 2 81 1 274 2 120 1 373 1 
272 1 74 5 186 1 188 4 116 2 33 3 280 1 332 5 94 1 211 1 255 1 310 1 285 2 366 1 172 2 237 1 99 1 219 1 64 1 289 1 152 3 371 1 44 1 45 1 179 1 66 2 374 1 68 2 204 1 303 1 71 4 381 1 242 1 28 1 
272 1 186 1 188 12 58 1 94 2 332 9 236 1 97 1 285 6 99 6 237 3 64 2 289 2 152 8 68 6 71 7 242 2 28 4 74 9 75 1 166 1 116 6 33 8 211 1 255 3 310 3 172 6 125 1 263 5 371 3 43 1 44 1 45 2 179 3 374 3 88 5 381 3 
272 1 74 3 246 1 135 1 165 1 188 4 166 1 352 1 116 2 33 3 332 3 94 1 255 1 213 1 310 1 11 1 171 1 285 2 260 1 364 1 172 2 237 1 219 1 64 1 289 1 152 3 371 1 45 1 66 1 179 1 296 1 374 1 68 2 204 1 71 2 162 1 381 1 242 1 28 1 
272 1 135 1 188 8 58 1 94 1 332 4 11 1 236 1 285 4 237 2 64 1 289 1 152 5 66 2 296 1 68 4 204 1 71 3 28 2 242 1 162 1 74 4 75 1 246 1 165 1 166 1 352 1 116 4 33 5 255 2 310 2 213 1 171 1 260 1 364 1 172 4 219 1 371 2 45 1 179 2 374 2 381 2 
78 1 95 1 298 1 
78 1 300 1 
150 1 
78 1 201 1 
95 2 78 3 201 1 209 1 54 1 206 1 
78 1 201 1 209 1 
78 1 10 1 
218 4 288 1 56 1 229 3 39 1 177 1 115 7 106 2 179 1 59 1 60 1 255 1 8 1 346 2 313 1 161 1 259 3 
218 4 288 1 56 1 229 3 39 1 177 1 115 7 106 2 179 1 59 1 60 1 255 1 8 1 346 2 313 1 161 1 259 3 
218 4 288 1 56 1 229 3 39 1 177 1 115 7 106 2 179 1 59 1 60 1 255 1 8 1 345 1 346 2 313 1 161 1 259 3 
218 1 288 2 39 1 161 1 115 1 38 1 106 1 
218 5 325 1 273 2 288 1 56 1 229 4 15 4 39 1 177 1 167 2 115 9 106 2 179 1 59 1 131 2 60 1 255 1 8 1 170 1 346 3 313 1 336 1 259 4 55 2 
351 1 274 2 137 1 276 1 138 2 6 1 230 1 57 1 81 1 37 1 256 1 146 1 120 1 363 2 216 1 365 1 200 1 123 1 17 1 319 1 46 1 343 1 297 1 156 1 376 1 267 1 378 1 160 1 270 1 111 1 
351 1 274 2 137 1 276 1 138 3 6 1 230 1 57 1 81 1 37 1 146 1 120 1 363 3 216 1 12 1 365 1 200 1 151 1 123 1 17 1 319 1 46 1 343 1 297 1 156 1 376 1 378 1 160 1 183 1 111 2 
351 1 274 2 137 1 138 2 57 1 81 1 37 1 146 1 120 1 363 2 216 1 12 1 365 1 200 1 17 1 319 1 46 1 343 1 297 1 156 1 376 1 378 1 160 1 183 1 111 2 
1 1 365 1 151 1 201 1 351 2 101 1 93 1 319 2 138 1 6 1 18 1 46 2 230 1 343 1 297 1 78 1 142 1 22 1 376 1 37 2 146 1 363 1 205 1 
351 1 274 2 276 1 138 1 6 1 230 1 57 1 81 1 37 1 256 1 146 1 120 1 363 1 216 1 365 1 200 1 123 1 319 1 46 1 343 1 297 1 156 1 376 1 160 1 270 1 183 1 
269 1 
272 2 2 1 188 1 232 1 332 3 142 1 11 1 146 1 285 2 99 2 64 1 199 1 289 1 201 1 152 2 101 2 340 1 18 1 343 2 297 1 344 1 299 1 72 1 242 1 348 1 74 3 165 1 114 1 250 1 33 3 211 1 78 1 258 2 364 1 260 1 261 1 365 2 172 1 220 1 369 1 175 1 370 1 128 1 44 1 45 1 87 1 376 2 90 1 53 1 379 1 380 1 
272 2 74 3 165 1 114 1 33 2 252 1 232 1 332 3 211 1 214 1 11 1 258 2 260 1 364 1 99 2 369 1 175 1 370 1 340 1 299 1 90 1 379 1 380 1 348 1 
272 2 74 2 369 1 175 1 165 1 318 1 370 1 340 1 114 1 33 2 232 1 332 2 299 1 11 1 90 1 258 3 379 1 380 1 348 1 364 1 260 1 
272 3 74 3 165 1 114 1 33 3 252 1 232 1 332 3 211 1 235 1 214 1 11 1 258 3 260 1 364 1 99 2 369 1 175 1 370 1 318 1 340 1 299 1 90 1 379 1 380 1 348 1 
272 4 2 1 135 1 140 1 232 1 332 5 235 4 11 2 284 1 285 1 148 1 99 7 289 1 152 1 340 1 296 1 344 2 299 1 110 1 162 1 348 1 242 1 74 5 246 1 165 2 352 1 114 1 33 4 252 4 34 2 211 3 213 1 214 1 171 1 258 5 260 2 364 2 172 2 220 2 369 1 175 1 370 1 318 3 128 1 44 1 45 1 266 1 90 1 53 2 379 1 380 1 
272 2 74 2 2 1 188 1 165 1 114 1 33 3 232 1 332 2 11 1 258 2 285 1 364 1 260 1 172 1 220 1 289 1 152 1 369 1 175 1 370 1 340 1 128 1 44 1 45 1 344 1 299 1 90 1 53 1 379 1 380 1 72 1 242 1 348 1 
272 3 74 4 2 1 165 1 114 1 252 2 33 3 232 1 34 2 332 4 211 2 235 2 11 1 258 4 284 1 285 1 260 1 364 1 148 1 99 4 172 2 220 2 289 1 152 1 369 1 175 1 318 2 370 1 340 1 128 1 44 1 45 1 266 1 344 2 299 1 90 1 53 2 379 1 380 1 348 1 242 1 
272 3 74 4 2 1 165 1 114 1 252 2 33 3 232 1 34 2 332 4 211 2 235 2 11 1 258 4 284 1 285 1 260 1 364 1 148 1 99 4 172 2 220 2 289 1 152 1 369 1 175 1 318 2 370 1 340 1 128 1 44 1 45 1 266 1 344 2 299 1 90 1 53 2 379 1 380 1 348 1 242 1 
324 1 272 2 74 2 2 1 188 1 165 1 114 1 279 1 33 2 232 1 332 2 96 1 311 1 11 1 258 2 285 1 260 1 364 1 220 1 289 1 152 1 369 1 175 1 370 1 340 1 44 1 45 1 266 1 344 1 299 1 90 1 379 1 380 1 348 1 242 1 
272 3 74 4 2 1 165 1 114 1 33 3 252 3 232 1 34 2 332 4 211 2 235 3 11 1 284 1 258 5 285 1 148 1 260 1 364 1 172 2 99 5 220 2 289 1 152 1 369 1 175 1 318 3 370 1 340 1 128 1 44 1 45 1 266 1 344 2 299 1 110 1 90 1 53 2 379 1 380 1 242 1 348 1 
272 3 74 4 2 1 165 1 114 1 33 3 252 3 232 1 34 2 332 4 211 2 235 3 11 1 284 1 258 5 285 1 148 1 260 1 364 1 172 2 99 5 220 2 289 1 152 1 369 1 175 1 318 3 370 1 340 1 128 1 44 1 45 1 266 1 344 2 299 1 110 1 90 1 53 2 379 1 380 1 242 1 348 1 
272 3 324 1 2 1 188 2 232 1 332 4 96 2 235 2 11 1 285 1 99 4 289 1 152 1 340 1 344 2 299 1 348 1 242 1 72 1 74 4 112 2 165 1 114 1 33 3 252 2 211 2 258 4 260 1 364 1 220 2 369 1 175 1 370 1 318 2 44 1 45 1 90 1 379 1 380 1 
273 1 56 1 229 2 167 1 115 6 59 1 60 1 255 1 360 1 313 1 259 3 218 3 338 1 15 2 177 1 239 2 342 1 106 1 179 1 131 1 20 1 298 1 346 2 92 1 304 1 55 1 
273 2 208 3 326 1 229 2 167 2 115 14 117 3 233 1 255 1 8 1 310 2 360 11 259 6 218 8 287 1 314 1 237 2 338 1 15 4 238 1 239 1 371 1 342 11 241 1 179 2 131 2 322 1 20 4 346 1 133 1 89 1 92 2 55 2 
273 1 207 1 248 1 135 1 165 2 167 1 209 1 115 2 278 1 78 1 354 1 146 1 337 1 259 1 260 2 364 1 365 1 218 1 287 1 338 1 201 1 15 2 101 1 238 1 239 1 40 1 343 1 297 1 131 1 20 1 109 1 376 1 50 1 89 1 92 1 162 1 55 1 73 1 
273 3 56 1 135 1 229 8 191 2 139 1 59 1 60 1 61 2 8 4 282 1 146 2 337 2 287 1 237 2 338 3 201 2 15 6 238 1 101 1 239 2 342 7 106 1 343 3 297 2 20 7 109 2 346 4 301 2 162 1 305 2 207 2 165 3 167 3 209 2 115 20 78 2 255 3 354 1 310 2 360 7 313 1 259 10 364 1 260 3 365 3 218 10 177 1 40 1 371 2 179 3 131 3 180 2 376 3 89 1 92 3 183 1 382 1 55 3 
349 1 273 2 135 1 165 1 167 2 115 2 78 3 142 1 146 2 335 1 259 1 260 1 364 1 365 6 218 1 287 1 173 1 338 2 201 2 15 4 101 2 238 1 40 1 41 1 18 1 295 1 343 6 154 1 297 2 131 2 226 1 376 5 267 1 70 1 304 1 92 2 183 1 162 1 55 2 
245 1 273 1 135 1 229 1 165 1 352 1 167 1 210 1 115 3 255 1 310 1 360 1 259 2 364 1 260 1 218 1 237 1 338 1 15 2 371 1 342 1 179 1 131 1 20 1 346 1 89 1 92 1 162 1 55 1 
218 2 273 1 338 1 229 1 15 2 167 1 115 2 342 1 265 1 179 1 131 1 20 1 8 1 310 1 360 1 304 1 92 1 55 1 
273 1 338 1 229 1 15 2 187 1 167 1 371 1 115 2 342 1 131 1 20 1 255 1 346 1 360 1 304 1 92 1 259 2 55 1 
273 1 229 2 167 1 115 4 255 1 310 1 8 1 360 2 259 2 218 2 237 1 338 1 15 2 371 1 342 2 179 1 131 1 20 2 346 1 92 1 304 1 55 1 
218 2 273 1 338 1 229 1 15 2 167 1 115 2 342 1 265 1 179 1 131 1 20 1 8 1 310 1 360 1 335 1 92 1 55 1 
273 1 338 1 229 1 15 2 187 1 167 1 371 1 115 2 342 1 131 1 20 1 255 1 346 1 360 1 335 1 92 1 259 2 55 1 
273 1 229 2 167 1 115 4 255 1 310 1 8 1 360 2 335 1 259 2 218 2 237 1 338 1 15 2 371 1 342 2 179 1 131 1 20 2 346 1 92 1 55 1 
273 1 229 2 167 1 115 4 255 1 310 1 8 1 360 2 259 2 218 2 237 1 338 1 15 2 371 1 342 2 179 1 131 1 20 2 346 1 92 1 55 1 
273 1 207 1 165 1 167 1 209 1 115 2 78 1 146 1 337 1 259 1 260 1 218 1 365 1 287 1 338 1 201 1 15 2 238 1 101 1 239 1 343 1 297 1 131 1 109 1 376 1 92 1 305 1 55 1 
273 1 165 1 31 1 167 1 209 1 115 2 78 1 333 1 146 1 337 1 259 1 260 1 218 1 365 1 287 1 338 1 201 1 15 2 238 1 101 1 239 1 222 1 343 1 297 1 131 1 376 1 92 1 55 1 
273 1 229 2 167 1 115 4 255 1 310 1 8 1 360 2 259 2 218 2 237 1 338 1 15 2 371 1 342 2 179 1 131 1 20 2 346 1 89 1 92 1 55 1 
273 1 207 1 229 2 165 1 167 1 209 1 115 4 78 1 255 1 8 1 310 1 360 2 146 1 259 2 337 1 260 1 218 2 365 1 237 1 338 1 201 1 15 2 371 1 342 2 179 1 343 1 297 1 131 1 20 2 109 1 180 1 346 1 376 1 267 1 92 1 305 1 55 1 
245 1 273 1 135 1 229 1 165 1 352 1 167 1 115 3 255 1 212 1 8 1 310 1 360 1 259 1 364 1 260 1 218 2 237 1 338 1 15 2 371 1 342 1 179 1 131 1 20 1 89 1 92 1 162 1 55 1 
273 2 325 1 208 1 229 6 167 2 307 1 115 19 168 2 117 2 253 1 281 1 254 1 255 3 310 3 8 3 283 1 259 10 218 9 314 1 237 3 15 4 371 3 372 2 179 3 131 2 322 1 21 1 346 3 52 1 55 2 
163 1 273 3 325 1 208 2 229 4 167 3 307 1 115 26 168 1 253 2 117 2 254 1 255 2 8 2 310 3 170 2 362 1 259 12 286 1 218 14 237 3 15 6 371 2 42 1 372 4 107 1 179 3 131 3 322 2 21 2 346 2 52 1 26 1 55 3 
325 1 273 3 56 1 229 8 59 1 281 1 60 1 8 4 286 1 237 4 15 6 107 1 106 1 21 2 346 4 26 1 163 1 208 3 167 3 307 1 115 41 253 1 117 4 168 1 254 1 255 5 310 4 170 1 36 1 313 1 362 1 259 21 218 20 314 1 177 1 371 4 42 1 372 4 179 5 131 3 322 3 52 1 55 3 
163 1 273 4 325 1 208 3 56 1 229 7 167 4 307 1 115 38 168 1 117 4 253 1 59 1 281 1 60 1 254 1 255 4 310 4 8 3 170 2 36 1 313 1 362 1 259 18 286 1 218 20 314 1 237 4 15 8 177 1 371 3 42 1 372 4 106 1 107 1 179 5 131 4 322 3 21 2 346 4 52 1 26 1 55 4 
163 1 273 2 325 1 208 4 56 1 229 14 167 2 307 1 115 52 168 1 117 4 253 1 59 1 60 1 254 1 255 8 310 7 8 7 170 1 313 1 362 1 259 25 286 1 218 27 314 2 237 7 15 4 177 1 371 7 42 1 372 4 241 2 106 1 107 1 179 8 131 2 322 2 21 1 346 7 52 1 26 1 55 2 
84 1 315 1 85 1 4 1 127 1 190 1 341 1 169 1 355 1 23 1 182 1 
62 1 330 1 
169 1 67 1 355 1 23 1 85 1 4 1 127 1 77 1 195 1 
74 1 246 1 135 1 165 1 4 1 352 1 190 1 249 1 33 1 118 1 169 1 332 1 355 1 213 1 356 2 11 1 171 1 257 1 361 1 260 1 364 1 84 1 315 1 124 1 85 1 176 1 127 1 341 1 296 1 23 1 162 1 
74 1 246 1 135 1 165 1 4 1 352 1 190 1 249 1 33 1 118 1 169 1 332 1 355 1 213 1 356 2 11 1 171 1 257 1 361 1 260 1 364 1 84 1 315 1 124 1 85 1 176 1 127 1 341 1 296 1 23 1 162 1 
74 1 246 1 135 1 165 1 4 1 352 1 190 1 249 1 33 1 118 1 169 1 332 1 355 1 213 1 356 2 11 1 171 1 257 1 361 1 260 1 364 1 84 1 315 1 124 1 85 1 176 1 127 1 341 1 296 1 23 1 162 1 
108 1 14 1 126 1 
108 1 14 1 126 1 
134 1 83 1 
126 1 134 1 83 1 
19 1 153 1 
74 1 135 2 165 2 4 1 249 1 330 1 118 1 332 1 169 1 280 1 355 1 356 1 62 1 260 2 364 2 366 1 198 1 85 1 316 1 239 1 127 1 153 1 19 1 23 1 71 1 28 1 162 2 
108 1 14 1 
126 1 134 1 83 1 
349 1 273 1 165 2 167 1 115 2 308 1 78 1 146 1 122 1 259 1 260 2 364 2 365 2 218 1 100 1 287 1 173 2 338 1 201 1 15 2 238 1 203 1 343 2 154 1 297 1 131 1 376 2 89 1 92 1 243 1 55 1 
365 2 200 1 274 2 276 1 251 1 343 2 297 1 156 1 81 1 376 2 37 1 267 1 358 1 120 1 146 1 302 1 160 1 183 1 216 1 
365 1 63 1 200 1 274 2 276 1 343 1 297 1 156 1 81 1 376 1 37 1 120 1 302 1 160 1 146 1 183 1 216 1 
365 1 1 1 201 1 101 1 327 1 251 1 18 1 343 1 297 1 78 1 142 1 376 1 37 1 146 1 
365 1 200 1 274 2 276 1 251 1 343 1 297 1 156 1 81 1 376 1 37 1 358 1 120 1 146 1 302 1 160 1 183 1 216 1 
244 1 
272 1 152 1 298 1 334 1 32 1 285 1 33 1 
172 1 289 1 152 1 188 1 128 1 44 1 33 1 45 1 53 1 242 1 285 1 
188 6 191 1 332 2 95 1 144 1 146 2 285 3 99 2 237 1 64 1 289 2 152 4 201 1 101 1 104 1 343 1 297 1 68 3 300 2 242 2 206 1 74 2 209 1 116 3 33 3 78 4 211 1 309 1 255 1 310 1 359 1 365 1 172 3 370 1 371 1 223 1 321 1 44 2 264 1 45 2 179 1 374 1 376 1 381 1 
163 1 272 2 74 1 208 1 188 6 116 5 117 1 33 5 332 1 211 1 255 2 310 2 362 1 285 5 286 1 99 1 172 3 237 2 64 1 289 2 152 8 339 1 371 2 42 1 44 2 107 1 45 2 179 2 374 2 322 1 87 1 68 5 132 1 381 1 242 2 
74 1 246 1 56 1 135 1 165 1 352 1 332 1 60 1 255 1 213 1 11 1 171 1 313 1 217 1 285 2 260 1 148 1 364 1 289 1 152 2 44 1 45 1 179 2 374 2 296 1 381 1 242 1 162 1 
272 1 289 1 152 1 32 1 44 1 45 1 33 1 334 1 242 1 285 1 
237 1 172 2 152 2 188 4 371 1 116 2 33 2 179 1 374 1 68 2 255 1 310 1 285 2 381 1 
272 1 332 1 74 1 99 1 211 1 33 1 
74 3 166 1 250 1 332 3 79 1 78 1 211 2 192 1 142 1 146 1 285 2 13 2 365 4 99 4 199 1 64 2 289 2 201 1 152 2 101 2 292 1 44 1 45 2 18 1 343 4 297 1 87 2 376 4 242 2 
273 1 246 1 207 1 135 2 165 3 167 1 352 2 209 1 115 1 78 1 119 1 146 1 259 1 337 1 260 3 364 2 365 1 287 1 338 1 201 1 15 2 101 1 239 1 343 1 297 1 131 1 109 1 376 1 92 1 162 2 305 1 55 1 
272 1 172 1 64 1 289 1 152 1 188 2 44 1 45 1 33 2 68 1 87 1 285 1 242 1 
23 1 85 1 329 1 
19 1 221 1 23 1 85 1 202 1 
23 1 85 1 329 1 
23 1 85 1 329 1 
23 1 85 1 181 1 
23 1 85 1 181 1 
23 1 85 1 181 1 
23 1 85 1 
169 1 355 1 
218 4 273 2 56 1 229 3 15 4 167 2 177 1 115 8 106 1 179 1 59 1 131 2 60 1 255 1 8 1 346 2 170 1 313 1 259 4 55 2 
218 3 59 1 60 1 255 1 56 1 298 1 229 2 346 2 177 1 115 6 313 1 259 3 106 1 179 1 
218 2 273 1 237 1 229 2 15 2 167 1 371 1 115 4 179 1 131 1 255 1 310 1 8 1 346 1 159 1 259 2 55 1 
218 3 314 1 237 1 208 1 229 2 371 1 115 7 117 2 179 1 322 1 255 1 310 1 8 1 346 1 259 4 
273 2 208 2 56 2 229 9 3 1 167 2 115 23 117 2 59 1 233 1 60 1 255 3 8 4 310 2 170 2 313 2 259 12 218 11 237 2 314 1 15 4 177 1 371 2 241 1 106 1 179 3 131 2 346 5 55 2 
115 1 259 1 117 1 
218 1 208 1 115 1 
218 3 273 1 237 1 15 2 229 3 167 1 191 1 371 1 115 6 179 1 131 1 255 1 310 1 8 1 346 2 159 1 259 3 55 1 
163 1 273 1 325 1 208 1 229 2 167 1 115 12 117 1 255 2 8 1 310 2 362 1 259 6 286 1 218 6 237 2 15 2 371 2 42 1 107 1 179 2 131 1 322 1 346 1 55 1 
218 3 56 1 229 2 115 6 179 1 60 1 255 1 8 1 346 1 313 1 259 3 
218 1 273 1 56 1 229 2 3 1 15 2 167 1 177 1 115 3 59 1 131 1 8 1 346 1 170 1 313 1 259 2 55 1 
218 5 273 1 325 1 56 2 15 2 229 5 167 1 115 10 179 2 131 1 60 1 255 2 8 2 346 3 313 2 217 1 259 5 55 1 
218 2 325 1 273 1 15 2 229 1 167 1 115 2 179 1 131 1 310 1 8 1 55 1 
218 2 325 1 273 1 237 1 229 2 15 2 167 1 371 1 115 4 179 1 131 1 255 1 310 1 8 1 346 1 259 2 55 1 
218 1 325 1 273 3 56 1 3 1 15 6 229 2 167 3 115 3 281 1 131 3 8 1 170 1 346 1 313 1 259 2 55 3 
273 4 325 1 208 1 56 2 229 6 3 1 167 4 115 15 117 1 59 1 281 1 60 1 255 2 8 3 170 1 313 2 217 1 259 8 218 7 15 8 177 1 179 2 131 4 322 1 227 1 346 3 159 1 55 4 
273 1 325 1 208 1 56 1 229 2 167 1 115 8 117 1 59 1 60 1 255 1 313 1 259 4 218 4 15 2 177 1 42 1 106 1 179 1 131 1 322 1 346 2 55 1 
325 1 273 2 208 1 56 1 229 3 167 2 115 11 117 2 59 1 60 1 255 1 310 1 8 1 313 1 259 5 218 6 314 1 237 1 15 4 177 1 42 1 106 1 179 2 131 2 322 1 346 2 159 1 55 2 
163 1 273 3 325 1 208 1 56 1 229 4 167 3 115 19 117 1 59 1 60 1 255 3 8 1 310 2 170 1 313 1 362 1 259 10 286 1 218 9 237 2 15 6 177 1 371 2 42 1 106 1 107 1 179 3 131 3 322 1 346 3 159 1 55 3 
163 1 273 3 325 1 208 1 56 1 229 5 167 3 115 17 117 1 59 1 60 1 255 2 8 2 310 2 170 1 313 1 362 1 259 7 286 1 218 10 237 2 15 6 177 1 371 1 42 1 106 1 107 1 179 3 131 3 322 1 346 3 159 1 55 3 
273 1 325 1 208 1 56 1 229 2 167 1 115 8 117 1 59 1 60 1 255 1 313 1 259 4 218 4 15 2 177 1 42 1 106 1 179 1 131 1 322 1 346 2 55 1 
163 1 273 1 325 1 208 1 229 2 167 1 115 12 117 1 255 2 8 1 310 2 362 1 259 6 286 1 218 6 237 2 15 2 371 2 42 1 107 1 179 2 131 1 322 1 346 1 55 1 
163 1 273 4 325 1 208 1 56 1 229 5 167 4 115 18 117 1 59 1 60 1 255 2 8 2 310 2 170 2 313 1 362 1 259 8 286 1 218 10 237 2 15 8 177 1 371 1 42 1 106 1 107 1 179 3 131 4 322 1 346 3 159 1 55 4 
163 1 325 1 273 4 208 1 229 6 167 4 115 16 117 1 281 1 255 2 8 3 310 3 170 2 362 1 259 7 286 1 218 9 237 3 15 8 371 2 42 1 107 1 179 3 131 4 322 1 346 3 55 4 
218 3 56 3 229 6 177 1 115 7 179 1 59 2 60 1 255 1 8 3 346 3 313 3 259 4 
163 1 325 1 273 4 208 1 56 1 229 4 167 4 115 18 117 1 59 1 281 1 60 1 255 2 8 1 310 2 170 2 313 1 362 1 259 8 286 1 218 10 237 2 15 8 177 1 371 1 42 1 106 1 107 1 179 3 131 4 322 1 346 3 55 4 
350 1 225 1 165 1 299 1 239 1 260 1 364 1 
350 1 165 1 239 1 320 1 225 1 48 1 24 1 299 1 27 1 271 1 364 1 260 1 
365 1 297 1 78 1 142 1 201 1 298 1 376 1 101 1 146 1 18 1 343 1 
365 1 207 1 201 1 135 1 165 2 101 1 239 1 40 1 209 1 343 1 78 1 297 1 376 1 146 1 337 1 162 1 364 1 260 2 
207 1 135 1 165 2 209 2 114 1 78 3 10 1 11 1 146 1 337 1 260 2 364 2 365 1 13 1 201 2 239 1 40 1 343 1 297 1 376 1 49 1 380 1 162 2 
135 1 165 2 209 2 114 1 78 3 10 1 333 1 11 1 146 1 337 1 260 2 364 2 365 2 13 1 201 2 86 1 239 1 40 1 343 2 297 1 376 2 49 1 380 1 162 2 
272 1 74 2 246 1 135 1 165 1 136 1 352 1 209 1 33 1 332 2 95 1 78 4 213 1 10 1 11 1 312 1 171 1 146 1 260 1 364 1 365 1 13 1 99 1 201 1 370 1 343 1 296 1 297 1 376 1 49 1 300 1 162 1 
272 1 74 2 246 1 135 1 165 1 352 1 209 1 33 1 332 2 95 1 78 4 213 1 10 1 11 1 171 1 146 1 260 1 364 1 365 1 13 1 99 1 201 1 370 1 223 1 343 1 296 1 297 1 376 1 49 1 300 1 162 1 
226 1 
365 5 164 1 201 2 101 2 209 1 41 1 295 1 343 5 154 1 78 3 297 2 226 1 141 1 376 4 267 1 70 1 146 3 183 1 98 1 206 1 
273 2 207 1 56 1 135 1 229 2 165 2 167 2 209 1 115 6 308 1 59 1 78 1 60 1 255 1 61 1 360 1 313 1 146 1 259 3 337 1 260 2 364 1 218 3 365 1 338 2 201 1 15 4 239 2 177 1 40 1 342 1 106 1 179 1 343 1 297 1 131 2 20 1 109 1 180 1 346 2 376 1 89 1 267 1 92 2 162 1 305 1 55 2 
272 2 56 1 135 1 332 3 95 1 60 1 11 1 144 1 334 1 285 5 99 2 289 2 152 4 101 1 292 1 343 1 296 1 300 1 71 1 242 2 162 1 74 3 246 1 165 1 32 1 352 1 33 2 211 1 78 2 309 1 255 2 213 1 171 1 313 1 217 1 260 1 364 1 365 1 370 1 223 1 321 1 44 2 45 2 179 2 374 2 376 1 381 1 
226 1 
365 4 201 1 86 1 101 1 18 1 343 4 78 1 297 1 142 1 376 4 267 1 146 1 196 1 
13 1 365 2 164 1 201 1 102 1 209 1 343 2 78 1 297 1 376 2 146 2 382 1 98 1 149 1 
365 1 297 1 156 1 376 1 101 1 274 1 120 1 146 1 160 1 343 1 
365 2 201 1 203 1 343 2 154 1 78 1 297 1 376 2 267 1 146 1 183 1 
13 1 365 5 201 2 101 1 41 1 18 1 343 5 154 1 78 3 297 2 142 1 376 4 267 1 70 1 146 2 196 1 
13 1 365 5 201 2 101 1 18 1 343 5 154 1 78 3 297 2 142 1 376 4 267 1 70 1 147 1 146 2 196 1 
365 1 201 1 135 1 165 2 101 1 239 1 40 1 209 1 343 1 78 1 297 1 376 1 333 1 146 1 337 1 162 1 364 1 260 2 
13 1 365 1 164 1 201 1 209 1 343 1 78 1 297 1 141 1 376 1 146 2 98 1 206 1 
100 1 165 1 129 1 47 1 143 1 122 1 243 1 364 1 260 1 
103 1 331 1 47 1 
143 1 239 1 268 1 129 1 47 1 
272 1 74 2 246 1 135 1 165 1 352 1 114 1 331 1 33 1 332 2 213 1 143 1 11 2 215 1 171 1 260 1 364 1 197 1 370 1 103 1 129 1 47 1 296 1 268 1 71 1 380 1 162 1 348 1 
298 1 17 1 137 1 378 1 
17 1 137 1 378 1 138 1 6 1 363 1 230 1 
319 1 138 1 46 1 
189 1 137 1 17 1 291 1 138 3 6 1 230 1 377 1 357 2 378 1 256 1 363 3 
25 1 17 1 137 1 378 1 138 2 6 1 363 2 111 1 230 1 
156 1 81 1 76 1 274 1 51 1 378 1 138 1 256 1 6 1 363 1 230 1 
17 1 378 1 138 1 256 1 6 1 363 1 230 1 
17 2 137 1 138 1 256 1 6 1 363 1 230 1 
0 1 194 1 17 1 378 1 138 2 256 1 293 1 6 2 363 2 230 2 
17 1 137 1 138 3 105 1 6 1 230 1 80 1 51 1 378 2 256 1 347 1 363 3 111 2 
200 1 274 2 17 1 137 1 138 2 6 1 230 1 81 1 156 1 157 1 378 1 120 1 256 1 363 2 111 1 
17 1 137 1 138 4 6 2 230 2 193 1 25 1 51 1 378 2 256 1 347 1 363 4 111 2 
17 1 137 1 378 1 138 1 256 1 6 1 363 1 230 1 
189 1 17 2 137 2 138 4 224 1 6 1 230 1 377 1 357 1 51 1 378 3 347 1 363 4 111 2 
228 1 17 1 5 1 137 1 138 2 178 1 6 1 230 1 378 1 256 1 363 2 111 1 
189 1 137 1 17 1 138 3 6 1 230 1 158 1 377 2 357 2 378 1 256 1 363 3 
306 2 262 1 378 2 82 1 
138 1 256 1 6 1 353 1 363 1 230 1 
17 1 137 1 378 1 105 1 138 2 256 1 6 1 363 2 111 1 230 1 
367 1 
17 1 137 1 378 1 138 1 256 1 6 1 363 1 230 1 
357 1 17 1 137 1 378 1 105 1 138 3 256 1 6 1 363 3 111 1 230 1 
51 1 378 1 224 1 347 1 
17 1 378 1 

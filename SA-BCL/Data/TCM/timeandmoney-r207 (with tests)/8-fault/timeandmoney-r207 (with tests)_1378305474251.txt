#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (136,179,282,302,317) (143,159) (143,159) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (136,179,282,302,317) (143,159) (143,159) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (136,179,282,302,317) (143,159) (143,159) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (136,179,282,302,317) (143,159) (143,159) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 88 250 327 38 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 88 301 92 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 88 301 327 38 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 88 301 327 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 233 259 64 256 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 88 250 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 88 250 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 1 117 1 325 1 143 1 317 1 21 1 159 1 82 1 2 1 222 1 211 1 31 1 97 1 125 1 
63 1 117 1 325 1 143 1 317 1 21 1 159 1 82 1 2 1 222 1 211 1 97 1 31 1 125 1 
63 1 117 1 325 1 143 1 317 1 21 1 159 1 82 1 2 1 222 1 211 1 97 1 31 1 125 1 
63 1 117 1 325 1 143 1 317 1 21 1 159 1 82 1 2 1 222 1 211 1 97 1 31 1 125 1 
63 1 325 1 190 1 356 1 350 3 241 1 21 4 244 1 146 1 2 4 360 2 361 3 211 1 96 1 31 1 125 1 166 1 213 2 
63 1 117 1 325 1 350 1 190 1 317 1 356 1 191 1 21 2 110 1 219 1 2 2 211 1 97 1 125 1 166 1 
63 2 117 1 190 1 356 1 357 1 241 1 242 1 21 9 146 1 244 1 245 1 2 9 361 7 360 2 96 3 125 1 307 1 325 1 350 5 211 2 31 1 166 1 213 4 86 1 
63 2 117 1 190 1 356 1 357 1 241 1 242 1 21 9 146 1 244 1 245 1 2 9 361 7 360 2 96 3 125 1 307 1 325 1 350 5 211 2 31 1 166 1 213 4 86 1 
63 2 117 1 325 1 190 1 350 2 21 3 2 3 361 1 211 2 96 1 166 1 213 1 307 1 
135 1 337 1 35 1 
323 2 35 1 105 1 
187 2 328 2 19 1 3 2 45 2 262 2 18 1 62 2 
187 2 19 1 64 1 295 2 216 1 189 1 90 1 192 1 171 1 246 1 220 1 1 1 276 1 3 2 45 3 199 1 152 1 278 1 364 1 322 1 8 2 251 1 180 1 308 1 106 1 203 2 77 1 13 1 209 1 259 2 233 2 328 3 16 1 262 2 18 1 291 1 62 2 
187 1 328 1 19 1 3 1 45 1 262 1 78 1 47 1 108 1 62 1 
182 1 253 1 130 1 311 1 328 1 173 1 221 1 286 1 45 1 47 1 135 1 153 1 62 1 35 1 
187 1 253 1 130 1 311 2 328 1 3 1 173 1 286 2 45 1 262 1 47 1 135 1 153 1 62 1 35 1 
355 1 286 1 311 1 177 1 94 1 
187 1 19 1 355 1 78 1 311 2 108 1 243 1 342 1 328 1 3 1 286 2 45 1 262 1 47 1 135 1 200 1 177 1 62 1 35 1 
286 1 311 1 177 1 
187 1 355 1 19 1 311 1 78 1 108 1 328 1 3 1 286 1 45 1 262 1 47 1 200 1 62 1 
35 1 
187 1 19 1 355 1 78 1 311 2 108 1 243 1 328 1 3 1 286 2 45 1 262 1 47 1 135 1 200 1 177 1 62 1 252 1 35 1 
187 1 19 1 355 2 266 4 89 1 243 1 70 2 273 5 3 1 45 1 303 1 123 2 47 1 198 2 200 1 177 2 107 1 368 2 28 1 78 1 311 5 108 1 231 1 258 1 56 1 328 1 286 5 262 1 84 2 32 1 135 2 333 1 335 1 354 2 62 1 338 1 265 1 35 2 
50 1 187 1 64 1 295 1 77 1 90 1 318 1 13 1 171 1 246 1 259 1 233 1 1 1 328 2 3 1 46 1 45 2 180 1 62 1 308 1 
18 1 337 1 
187 1 328 2 3 1 45 2 262 1 288 1 18 2 62 2 154 1 
46 1 7 1 312 1 
64 1 295 1 77 1 90 1 206 1 13 1 171 1 259 1 246 1 233 1 328 1 1 1 45 1 18 1 180 1 308 1 
50 1 187 3 328 3 3 3 45 3 262 1 18 1 62 3 
187 1 328 1 3 1 45 1 47 1 108 1 62 1 
187 1 328 1 3 1 45 1 262 1 47 1 288 1 62 1 154 1 
187 3 19 1 64 1 295 1 189 1 90 1 67 1 318 1 171 1 246 1 220 1 1 1 276 1 173 1 3 3 45 4 47 1 199 1 278 1 24 1 153 1 364 1 8 1 251 1 180 1 154 1 308 1 50 1 203 2 253 1 77 1 130 1 311 1 13 1 209 1 259 1 233 1 328 4 286 1 16 1 262 2 18 1 291 1 62 3 
187 1 50 1 328 2 3 1 221 1 45 2 18 1 113 1 62 2 
50 2 187 3 253 1 130 1 311 1 318 1 328 3 3 3 173 1 286 1 45 3 262 1 47 1 305 1 24 1 153 1 154 1 62 3 35 1 
50 1 187 2 328 2 3 2 45 2 46 1 262 1 7 1 154 1 62 2 
64 1 295 1 77 1 90 1 13 1 171 1 259 1 246 1 233 1 328 1 1 1 45 1 18 1 180 1 308 1 
64 1 295 1 77 1 90 1 207 1 171 1 259 1 246 1 233 1 328 1 45 1 4 1 18 1 180 1 308 1 
192 2 0 1 93 1 247 1 276 1 46 2 123 1 363 1 278 1 49 1 7 2 364 1 251 1 8 4 203 2 209 1 312 2 232 1 373 1 59 1 16 1 334 1 354 1 291 2 
187 1 328 1 3 1 45 1 47 1 153 1 214 1 62 1 
50 2 187 4 280 1 318 1 328 5 3 4 221 1 45 5 262 1 113 1 18 1 33 1 62 5 154 1 
187 2 328 2 3 2 45 2 47 1 108 1 214 1 62 2 
376 1 285 1 
376 1 285 1 
352 1 
352 1 
352 1 
376 1 292 1 285 1 
83 1 54 1 376 1 352 1 285 1 
176 1 376 1 285 1 
376 1 292 1 285 1 
376 1 292 1 285 1 
316 1 376 1 285 1 
316 1 376 1 285 1 
316 1 376 1 285 1 
367 1 127 2 339 2 188 1 230 1 53 2 311 2 169 1 285 2 257 2 195 3 286 2 376 2 5 1 61 2 353 1 75 1 181 1 35 1 
187 2 339 1 188 1 119 1 20 1 71 1 3 2 195 1 45 2 176 1 73 1 127 1 53 1 311 1 285 1 257 1 328 2 286 1 162 1 376 1 236 1 165 1 18 1 62 2 
356 1 31 1 125 1 
356 1 125 1 110 1 
138 1 43 1 147 1 31 2 125 3 110 1 
138 1 43 1 141 1 31 1 125 2 110 1 
138 1 43 2 31 1 125 2 110 1 
355 4 266 3 119 1 243 1 69 1 274 2 273 2 275 1 71 1 247 1 174 1 123 1 277 1 363 1 198 1 177 1 323 3 105 1 281 1 368 1 311 5 329 1 162 1 286 5 15 2 260 2 84 1 32 1 332 1 135 1 354 1 35 2 
355 7 266 8 243 1 94 5 274 6 273 6 275 1 71 4 247 3 174 2 123 3 321 1 363 3 197 5 198 2 151 1 177 6 224 1 226 1 74 1 323 9 105 3 281 2 368 2 311 9 286 9 133 1 260 6 32 1 84 2 332 3 135 1 354 3 265 1 35 5 
355 2 266 3 69 1 273 2 274 2 71 1 247 1 174 1 123 1 363 1 198 1 323 4 105 2 281 1 368 1 311 3 329 1 286 3 15 1 260 2 84 1 135 1 332 1 354 1 35 3 265 1 
355 3 266 5 69 1 274 4 273 4 71 2 247 2 174 1 123 2 321 1 363 2 198 1 151 1 226 1 323 7 105 3 281 1 368 1 311 4 329 1 286 4 15 2 260 4 84 1 135 1 332 2 354 2 35 4 265 1 
337 1 314 1 308 1 
344 1 308 1 
164 1 
90 1 308 1 
296 1 77 1 90 1 79 1 314 2 308 3 
77 1 90 1 308 1 
131 1 308 1 
167 1 239 2 192 4 93 2 232 3 231 1 56 1 22 1 320 1 362 1 123 1 331 1 375 1 333 1 291 3 354 1 8 7 
167 1 239 2 192 4 93 2 232 3 231 1 56 1 22 1 320 1 362 1 123 1 331 1 375 1 333 1 291 3 354 1 8 7 
167 1 239 2 267 1 192 4 93 2 232 3 231 1 56 1 22 1 320 1 362 1 123 1 375 1 331 1 333 1 291 3 354 1 8 7 
167 1 22 2 320 1 239 1 192 1 8 1 237 1 
167 1 239 2 192 5 93 3 22 1 362 1 123 1 100 1 278 2 364 2 8 9 348 1 203 4 55 1 209 2 232 4 231 1 56 1 16 2 331 1 375 1 333 1 354 1 291 4 
63 1 117 1 295 1 144 1 190 1 356 1 269 1 21 2 171 1 246 1 2 2 361 1 44 1 147 1 125 2 225 1 27 1 366 1 325 1 350 1 110 1 259 1 233 1 30 1 211 1 31 1 235 1 166 1 137 1 116 1 
63 1 117 1 295 1 144 1 190 1 356 1 269 1 21 3 171 1 172 1 246 1 2 3 147 1 44 1 361 2 125 2 225 1 27 1 202 1 366 1 350 1 110 1 259 1 233 1 313 1 211 1 31 1 166 1 137 1 116 1 
117 1 295 1 144 1 190 1 356 1 269 1 21 2 171 1 172 1 246 1 2 2 44 1 361 2 147 1 125 2 27 1 366 1 350 1 110 1 259 1 233 1 313 1 31 1 166 1 116 1 
63 1 64 1 117 2 295 1 144 2 65 1 66 1 90 1 21 1 269 2 299 1 171 1 246 1 2 1 44 2 223 1 308 1 202 1 259 1 233 1 211 1 263 1 290 1 
63 1 366 1 117 1 325 1 295 1 144 1 356 1 21 1 269 1 110 1 171 1 172 1 246 1 259 1 233 1 2 1 147 1 44 1 30 1 211 1 31 1 125 2 225 1 27 1 116 1 137 1 
41 1 
64 2 36 1 295 2 266 1 90 2 243 1 171 2 273 1 246 3 223 1 174 1 198 1 177 2 25 1 308 2 368 1 77 1 311 2 256 1 372 1 259 2 233 2 286 2 84 1 32 1 263 1 212 1 215 1 87 1 
37 1 243 1 145 1 173 1 221 1 45 1 47 1 177 2 153 1 252 1 182 1 253 1 51 1 130 1 311 3 351 1 184 1 328 1 286 3 287 2 34 1 62 1 
182 1 37 1 253 1 51 1 130 1 311 3 243 1 351 1 184 1 343 1 328 1 173 1 287 3 286 3 221 1 45 1 47 1 135 1 177 1 153 1 34 1 252 1 62 1 35 1 
294 1 37 1 243 1 145 1 343 1 173 1 221 1 45 1 47 1 177 2 153 1 252 1 182 1 253 1 51 1 130 1 311 3 351 1 184 1 328 1 286 3 287 3 34 1 62 1 
187 1 294 4 139 1 37 1 243 3 145 4 300 1 343 2 3 1 45 2 47 2 198 1 200 1 153 1 102 2 6 2 252 1 9 1 105 2 253 1 51 1 311 5 108 1 109 2 351 1 262 1 62 2 115 1 19 1 266 1 270 1 273 1 173 1 221 1 177 7 182 1 227 1 368 1 369 2 130 1 78 1 326 1 184 1 328 2 287 4 286 5 32 1 84 1 135 1 34 1 35 1 
187 1 294 2 37 1 243 2 145 2 343 2 3 1 45 2 47 2 198 1 200 1 153 1 102 2 6 2 105 2 253 1 51 1 311 4 108 1 109 2 255 1 351 1 262 1 62 2 19 1 266 1 270 1 273 1 173 1 221 1 177 4 323 2 182 1 227 1 368 1 369 2 130 1 78 1 184 1 328 2 287 4 286 4 32 1 84 1 135 1 34 1 35 1 
294 2 37 1 266 1 243 2 270 1 145 2 273 1 343 2 300 1 173 1 221 1 45 1 47 1 198 1 177 4 6 2 102 2 153 1 105 2 182 1 227 1 253 1 369 2 368 1 51 1 130 1 311 4 109 2 351 1 326 1 184 1 328 1 286 4 287 4 32 1 84 1 135 1 34 1 62 1 35 1 115 1 
187 1 294 2 37 1 243 2 145 2 300 1 343 2 3 1 45 2 47 2 198 1 200 1 153 1 102 2 6 2 105 2 253 1 51 1 311 4 108 1 109 2 351 1 262 1 62 2 115 1 19 1 266 1 270 1 273 1 173 1 221 1 177 4 182 1 227 1 368 1 369 2 130 1 78 1 326 1 184 1 328 2 287 4 286 4 84 1 32 1 135 1 34 1 35 1 
187 1 294 2 37 1 243 2 145 2 343 2 3 1 45 2 47 2 198 1 200 1 153 1 253 1 51 1 311 4 108 1 109 2 351 1 262 1 114 2 62 2 19 1 266 1 168 1 273 1 173 1 221 1 177 4 323 2 182 1 227 1 368 1 369 2 130 1 78 1 326 1 283 1 184 1 328 2 186 1 287 4 286 4 374 2 84 1 32 1 135 1 34 1 35 1 
187 1 294 3 139 1 37 1 243 2 145 3 343 3 300 1 3 1 45 2 47 2 198 1 200 1 153 1 102 2 6 2 105 2 253 1 51 1 311 4 108 1 109 2 351 1 262 1 62 2 115 1 19 1 266 1 270 1 273 1 173 1 221 1 177 5 182 1 227 1 368 1 369 2 130 1 78 1 326 1 184 1 328 2 287 5 286 4 32 1 84 1 135 1 34 1 35 1 
187 1 294 3 139 1 37 1 243 2 145 3 343 3 300 1 3 1 45 2 47 2 198 1 200 1 153 1 102 2 6 2 105 2 253 1 51 1 311 4 108 1 109 2 351 1 262 1 62 2 115 1 19 1 266 1 270 1 273 1 173 1 221 1 177 5 182 1 227 1 368 1 369 2 130 1 78 1 326 1 184 1 328 2 287 5 286 4 32 1 84 1 135 1 34 1 35 1 
294 1 37 1 266 1 243 1 145 1 273 1 343 1 173 1 221 1 45 1 47 1 198 1 177 2 153 1 323 2 182 1 227 1 253 1 369 2 51 1 368 1 130 1 311 3 255 1 109 2 351 1 184 1 328 1 186 1 286 3 287 3 374 1 84 1 32 1 135 1 114 2 34 1 62 1 35 1 
239 1 192 3 93 2 276 1 46 1 123 1 278 1 49 1 7 1 364 1 251 1 8 6 203 2 209 1 312 1 231 1 232 2 56 1 16 1 375 1 331 1 333 1 18 2 337 1 354 1 291 3 
216 1 88 1 192 8 93 1 341 1 193 3 272 1 72 3 276 2 247 1 362 1 248 1 46 11 123 2 363 2 199 1 278 2 7 4 346 1 364 2 251 1 8 14 347 1 203 4 349 1 209 2 312 11 232 2 16 2 332 2 18 1 291 6 354 1 
187 1 64 1 295 1 216 1 90 1 318 1 192 1 171 1 42 1 246 1 1 1 276 1 3 1 45 2 199 1 278 1 7 1 364 1 180 1 251 1 8 2 308 1 347 1 50 1 203 2 77 1 156 1 254 1 206 1 13 1 209 1 259 1 233 1 328 2 16 1 18 1 291 1 62 1 
187 1 239 1 238 1 140 2 295 3 90 2 192 10 93 4 246 2 1 2 3 1 247 2 45 3 46 7 304 2 199 1 7 7 251 3 8 20 308 2 50 1 347 1 203 6 13 2 209 3 312 7 259 3 56 1 16 3 18 2 264 1 354 3 62 1 64 1 216 1 318 1 171 2 172 1 220 2 276 3 362 4 123 3 363 2 278 3 364 3 180 2 76 1 77 2 371 2 231 1 232 8 233 3 328 3 330 2 375 1 331 1 332 2 333 1 291 10 
187 1 64 2 295 8 216 1 39 1 90 2 192 1 319 1 171 2 172 1 246 2 3 1 276 2 223 1 45 1 199 1 99 1 101 1 49 1 278 2 364 2 251 2 8 2 308 3 50 1 106 2 203 4 129 1 157 1 52 1 209 2 259 7 233 8 328 1 16 2 235 1 263 1 291 1 62 1 
187 1 328 1 3 1 58 1 45 1 262 1 62 1 154 1 
203 2 192 2 0 1 312 1 209 1 232 1 276 1 362 1 46 1 16 1 123 1 363 1 49 1 278 1 7 1 364 1 8 2 251 1 
203 2 93 1 312 1 209 1 232 1 276 1 247 1 46 1 59 1 16 1 49 1 278 1 7 1 364 1 354 1 291 2 8 2 251 1 
192 2 93 1 276 1 247 1 362 1 46 2 123 1 363 1 278 1 49 1 7 2 364 1 251 1 8 4 203 2 209 1 312 2 232 2 16 1 332 1 354 1 291 2 
203 2 157 1 192 2 0 1 312 1 209 1 232 1 276 1 362 1 46 1 16 1 123 1 363 1 278 1 7 1 364 1 8 2 251 1 
203 2 157 1 93 1 312 1 209 1 232 1 276 1 247 1 46 1 59 1 16 1 278 1 7 1 364 1 354 1 291 2 8 2 251 1 
192 2 93 1 276 1 247 1 362 1 46 2 123 1 363 1 278 1 7 2 364 1 251 1 8 4 203 2 157 1 209 1 312 2 232 2 16 1 332 1 354 1 291 2 
192 2 93 1 276 1 247 1 362 1 46 2 123 1 363 1 278 1 7 2 364 1 8 4 251 1 203 2 209 1 312 2 232 2 16 1 332 1 354 1 291 2 
64 1 295 1 216 1 90 1 192 1 171 1 246 1 220 1 1 1 276 1 45 1 199 1 278 1 364 1 8 2 180 1 251 1 308 1 203 2 77 1 13 1 209 1 259 1 233 1 328 1 16 1 18 1 291 1 
64 1 295 1 216 1 90 1 192 1 171 1 246 1 276 1 45 1 4 1 199 1 278 1 364 1 8 2 180 1 251 1 308 1 203 2 77 1 207 1 208 1 209 1 259 1 233 1 328 1 16 1 18 1 291 1 
192 2 93 1 276 1 247 1 362 1 46 2 123 1 363 1 278 1 7 2 364 1 251 1 8 4 347 1 203 2 209 1 312 2 232 2 16 1 332 1 354 1 291 2 
295 1 90 1 192 2 93 1 171 1 246 1 220 1 1 1 247 1 276 1 362 1 46 2 45 1 123 1 304 1 363 1 278 1 7 2 364 1 8 4 180 1 251 1 308 1 203 2 77 1 13 1 312 2 209 1 232 2 259 1 233 1 328 1 16 1 235 1 332 1 291 2 354 1 
187 1 192 2 247 1 3 1 276 1 362 1 45 1 46 1 123 1 363 1 278 1 7 1 364 1 154 1 251 1 8 3 347 1 203 2 370 1 209 1 312 1 232 1 328 1 16 1 262 1 332 1 291 1 354 1 62 1 
38 1 88 3 192 10 92 1 93 1 193 3 272 1 72 4 247 2 120 1 301 2 362 2 123 2 124 1 363 2 100 1 250 1 278 2 364 2 104 1 8 21 203 4 327 1 209 2 111 3 232 3 261 1 16 2 332 2 291 11 354 2 
38 1 88 2 192 8 92 1 93 2 193 2 272 1 72 3 247 2 120 1 301 2 362 2 123 2 124 1 363 2 100 1 278 2 364 2 104 1 8 17 203 4 327 1 209 2 111 2 232 4 261 1 16 2 332 2 291 9 354 2 
239 1 38 1 88 1 192 5 193 1 93 1 72 1 301 1 123 1 100 1 278 1 364 1 104 1 8 9 203 2 327 1 209 1 111 1 231 1 232 1 56 1 16 1 331 1 375 1 333 1 354 1 291 4 
38 1 88 1 218 1 192 9 93 3 193 1 272 1 72 2 247 3 120 2 301 1 362 3 123 3 124 1 363 3 100 1 278 2 364 2 104 1 8 19 203 4 327 1 209 2 111 2 232 6 261 1 16 2 332 3 291 10 354 3 
203 2 38 1 88 1 192 2 193 1 209 1 327 2 111 1 72 1 301 2 16 1 100 1 278 1 364 1 291 2 8 4 104 1 
127 1 339 1 229 1 230 1 53 1 376 1 5 1 285 1 181 1 257 1 
176 1 165 1 
127 1 148 1 339 1 60 1 53 1 376 1 285 1 315 1 257 1 
367 1 127 1 188 1 339 1 230 1 311 1 53 1 169 1 285 1 257 1 195 2 286 1 376 1 5 1 61 1 353 1 181 1 35 1 
367 1 127 1 188 1 339 1 230 1 311 1 53 1 169 1 285 1 257 1 195 2 286 1 376 1 5 1 61 1 353 1 181 1 35 1 
367 1 127 1 188 1 339 1 230 1 311 1 53 1 169 1 285 1 257 1 195 2 286 1 376 1 5 1 61 1 353 1 181 1 35 1 
54 1 292 1 194 1 
54 1 292 1 194 1 
316 1 81 1 
316 1 54 1 81 1 
20 1 73 1 
187 2 355 1 339 1 217 1 119 1 20 1 169 1 71 1 195 1 3 2 45 2 176 1 73 1 127 1 311 1 53 1 285 1 257 1 328 2 286 1 162 1 376 1 61 1 236 1 165 1 18 1 62 2 
292 1 194 1 
316 1 54 1 81 1 
295 2 216 1 297 1 90 1 192 1 319 1 171 1 246 1 276 1 45 2 175 1 199 1 306 1 278 1 364 1 251 1 8 2 308 1 347 1 106 2 203 2 129 1 14 1 209 1 259 2 233 2 328 2 132 1 16 1 291 1 62 2 
295 2 356 1 310 1 40 1 269 1 110 1 171 1 172 1 246 1 259 2 233 2 147 1 210 1 31 1 125 2 235 1 27 1 137 1 116 1 
295 1 356 1 40 1 269 1 110 1 171 1 172 1 259 1 246 1 233 1 359 1 147 1 31 1 125 2 27 1 137 1 116 1 
64 1 295 1 90 1 269 1 299 1 171 1 246 1 259 1 233 1 210 1 223 1 85 1 263 1 308 1 
295 1 356 1 310 1 40 1 269 1 110 1 171 1 172 1 246 1 259 1 233 1 147 1 210 1 31 1 125 2 27 1 137 1 116 1 
91 1 
266 1 135 1 335 1 337 1 273 1 338 1 35 1 
187 1 19 1 266 1 270 1 243 1 273 1 3 1 45 1 47 1 198 1 200 1 177 1 102 1 6 1 323 1 105 1 368 1 78 1 311 1 108 1 328 1 286 1 262 1 84 1 32 1 135 1 62 1 35 1 
140 1 295 1 296 1 90 1 243 1 246 2 247 1 344 2 249 1 198 2 308 4 105 3 253 1 11 1 311 2 158 1 259 1 260 3 314 1 354 1 64 1 266 4 118 1 171 1 70 1 274 3 273 3 358 1 174 1 123 1 363 1 177 2 323 6 128 1 368 2 77 1 80 1 233 1 286 2 32 2 84 2 332 1 35 3 
187 1 88 1 243 1 193 1 247 2 3 1 45 1 303 1 47 1 198 2 200 1 250 1 103 1 105 3 10 1 204 1 311 1 108 1 260 5 262 1 354 2 62 1 19 1 266 8 68 1 70 2 273 5 274 5 72 1 174 1 123 2 363 2 177 1 178 1 323 6 324 1 368 2 78 1 328 1 286 1 32 2 84 2 135 2 332 2 87 1 35 5 
187 1 19 1 266 2 70 2 273 2 300 1 3 1 45 1 303 1 123 2 47 1 198 1 200 1 368 1 311 1 78 1 108 1 231 1 258 1 56 1 328 1 286 1 262 1 84 1 32 1 333 1 354 1 62 1 
187 2 64 1 19 1 295 1 189 1 90 1 171 1 246 1 220 1 1 1 3 2 276 1 45 3 199 1 278 1 364 1 8 1 180 1 251 1 308 1 203 2 77 1 13 1 209 1 259 1 233 1 328 3 16 1 262 2 18 1 291 1 62 2 
239 1 266 1 368 1 274 2 273 2 174 1 260 2 32 1 84 1 198 1 135 2 323 4 87 1 105 2 35 4 
266 1 368 1 273 1 32 1 84 1 198 1 135 1 335 1 338 1 35 1 
140 1 266 5 70 2 273 5 274 5 247 2 303 1 260 5 123 2 363 2 332 2 354 2 323 10 105 5 35 5 
187 1 19 1 311 1 78 1 108 1 243 1 328 1 3 1 286 1 45 1 262 1 47 1 135 1 177 1 200 1 62 1 35 1 
64 2 266 1 295 2 368 1 311 1 243 1 256 1 273 1 259 2 233 2 160 1 286 1 174 1 32 1 84 1 198 1 177 2 25 1 87 1 
339 1 95 1 53 1 
339 1 12 1 53 1 5 1 73 1 
339 1 95 1 53 1 
339 1 95 1 53 1 
339 1 53 1 112 1 
339 1 53 1 112 1 
339 1 53 1 112 1 
339 1 53 1 
376 1 285 1 
348 1 239 1 203 4 192 4 93 2 209 2 232 3 231 1 56 1 362 1 16 2 123 1 331 1 375 1 333 1 278 2 354 1 291 4 364 2 8 8 
239 1 192 3 93 2 231 1 232 2 56 1 331 1 375 1 123 1 333 1 337 1 291 3 354 1 8 6 
203 2 192 2 93 1 209 1 232 2 247 1 362 1 16 1 123 1 363 1 332 1 345 1 278 1 291 2 354 1 364 1 8 4 
72 1 88 1 192 1 193 1 291 1 8 2 
239 1 192 9 193 2 93 3 272 1 247 2 72 2 248 1 362 1 123 3 363 2 278 1 346 1 364 1 8 18 348 1 203 2 209 1 231 1 232 4 56 1 16 1 375 1 331 1 332 2 333 1 354 3 291 9 
72 1 291 1 8 1 
192 1 193 1 8 1 
203 2 140 1 192 3 93 2 209 1 232 3 247 1 362 1 16 1 123 1 363 1 332 1 278 1 345 1 364 1 291 3 354 1 8 6 
88 1 192 6 193 1 68 1 93 1 72 1 247 2 362 1 123 2 363 2 100 1 250 1 278 1 364 1 8 12 324 1 10 1 203 2 204 1 209 1 232 2 16 1 332 2 291 6 354 2 
192 3 93 1 231 1 232 2 56 1 362 1 123 1 333 1 354 1 291 3 8 6 
348 1 203 2 192 1 93 1 183 1 209 1 232 2 231 1 362 1 16 1 375 1 331 1 333 1 278 1 291 2 364 1 8 3 
239 1 88 1 192 4 193 1 93 2 72 1 123 1 100 1 250 1 278 1 364 1 8 8 203 2 209 1 231 1 232 2 56 1 16 1 331 1 375 1 333 1 354 1 291 4 
239 1 88 1 192 6 93 2 193 1 272 1 72 2 362 1 123 2 363 1 100 1 250 1 278 2 345 1 364 2 8 11 203 4 209 2 231 1 232 3 56 1 16 2 375 1 331 1 332 1 333 1 354 1 291 5 
72 1 203 2 16 1 88 1 192 1 193 1 100 1 250 1 278 1 291 1 364 1 209 1 8 2 
239 1 88 1 192 10 193 1 68 1 93 3 72 1 247 1 362 2 123 3 363 2 100 1 345 1 250 1 278 3 364 3 8 17 324 1 348 1 10 1 203 6 204 1 209 3 231 1 232 5 56 1 16 3 375 1 331 1 332 2 333 1 291 7 354 2 
239 1 88 1 192 4 193 1 93 2 72 1 123 1 100 1 250 1 278 1 364 1 8 8 203 2 209 1 231 1 232 2 56 1 16 1 331 1 375 1 333 1 354 1 291 4 
72 1 203 2 16 1 88 1 192 1 193 1 100 1 250 1 278 1 291 1 364 1 209 1 8 2 
239 1 88 1 192 10 193 1 68 1 93 3 72 1 247 1 362 2 123 3 363 2 100 1 250 1 345 1 278 4 364 4 8 18 324 1 10 1 348 2 203 8 204 1 209 4 231 1 232 5 56 1 16 4 375 1 331 1 332 2 333 1 291 8 354 2 
88 1 192 9 193 1 68 1 93 3 72 1 247 2 362 3 123 3 124 1 363 3 100 1 250 1 278 4 364 4 8 16 324 1 10 1 348 2 203 8 204 1 209 4 232 6 16 4 332 3 291 7 354 2 
192 3 93 3 231 3 232 6 56 1 362 3 331 1 375 2 123 1 333 3 291 4 354 1 8 7 
239 1 88 1 192 10 193 1 68 1 93 3 72 1 247 1 362 1 123 3 124 1 363 2 100 1 250 1 278 4 364 4 8 18 324 1 10 1 348 2 203 8 204 1 209 4 231 1 232 4 56 1 16 4 375 1 331 1 332 2 333 1 291 8 354 2 
203 2 192 5 93 3 209 1 231 2 232 5 258 1 56 1 362 2 16 1 123 2 100 1 333 2 278 1 364 1 291 5 354 2 8 10 
203 2 192 2 209 1 232 1 362 1 16 1 123 1 363 1 100 1 278 1 364 1 8 2 
203 2 192 2 93 1 209 1 232 2 247 1 362 1 16 1 123 1 363 1 332 1 100 1 278 1 291 2 354 1 364 1 8 4 
348 1 203 6 192 1 93 1 183 1 209 3 231 1 232 2 362 1 16 3 124 1 100 1 333 1 278 3 291 2 364 3 8 3 
239 1 88 1 192 16 193 3 93 7 272 1 72 4 247 3 362 5 123 5 124 1 363 3 100 1 345 1 278 5 26 1 364 5 8 34 348 2 203 10 183 1 209 5 231 3 232 12 56 2 16 5 375 1 331 1 17 1 332 3 333 3 291 18 354 5 293 1 
328 1 221 1 45 1 240 1 18 1 113 1 62 1 
279 1 268 1 240 1 170 1 57 1 328 1 221 1 45 1 23 1 18 1 113 1 62 1 
233 1 64 1 223 1 295 1 90 1 263 1 337 1 171 1 246 1 308 1 259 1 
50 1 187 1 64 1 295 1 77 1 90 1 171 1 246 1 259 1 233 1 328 2 1 1 3 1 45 2 18 1 180 1 62 1 308 1 
187 1 295 1 90 2 298 1 171 1 246 1 1 1 3 1 45 1 47 2 153 1 180 1 308 3 50 1 77 2 155 1 130 1 259 1 233 1 328 1 131 1 336 1 18 1 62 1 
187 1 295 1 90 2 298 1 171 1 246 1 3 1 45 1 4 1 47 2 153 1 180 1 308 3 50 1 77 2 155 1 130 1 259 1 233 1 328 1 131 1 336 1 18 1 62 1 
64 1 295 3 90 1 298 1 171 1 246 1 121 1 344 1 177 1 365 1 308 4 253 1 155 1 77 1 311 2 185 1 259 3 233 3 131 1 286 2 135 1 314 1 35 1 
64 1 253 1 295 3 77 1 155 1 118 1 90 1 311 2 298 1 171 1 246 1 259 3 233 3 131 1 286 2 344 1 135 1 177 1 365 1 314 1 35 1 308 4 
233 1 295 1 52 1 171 1 246 1 259 1 
106 1 64 2 295 7 296 1 129 1 39 1 77 1 52 1 90 2 171 2 172 1 259 6 246 3 233 7 98 1 235 1 99 1 101 1 212 1 215 1 308 3 
187 1 239 1 295 1 90 1 192 3 93 2 171 1 246 1 220 1 1 1 276 2 3 1 46 1 45 2 123 1 304 1 278 2 7 1 364 2 8 6 180 1 251 2 308 1 347 1 50 1 203 4 77 1 13 1 14 1 312 1 209 2 232 2 231 1 259 1 56 1 233 1 328 2 330 1 16 2 375 1 331 1 235 1 333 1 18 2 291 3 354 1 62 1 
187 1 295 1 243 1 3 1 45 1 303 1 344 1 47 1 249 1 198 2 200 1 308 2 253 1 311 3 108 1 259 1 258 1 160 1 56 1 262 1 314 1 354 2 62 1 355 1 64 1 19 1 266 4 118 1 70 2 273 5 358 1 123 2 177 2 128 1 368 2 78 1 231 1 233 1 328 1 286 3 32 2 84 2 135 2 333 1 335 1 338 1 35 2 
295 2 296 1 77 1 52 1 90 1 158 1 171 1 259 2 246 2 233 2 235 1 314 1 308 2 
64 1 295 4 90 1 171 1 246 1 259 4 233 4 223 1 196 1 235 1 263 1 365 1 308 1 
76 1 36 1 295 2 77 1 90 1 298 1 171 1 372 1 259 2 246 2 233 2 212 1 215 1 308 1 
233 1 64 1 295 1 356 1 125 1 110 1 171 1 246 1 116 1 259 1 
295 2 129 1 90 1 171 1 172 1 259 2 246 1 233 2 132 1 235 1 308 1 
64 1 295 5 39 1 129 1 90 2 298 1 171 2 259 4 246 2 233 5 223 1 196 1 235 1 263 1 101 1 308 3 
64 1 295 5 129 1 90 2 298 1 171 2 259 4 246 2 233 5 223 1 196 1 235 1 263 1 289 1 101 1 308 3 
50 1 187 1 64 1 295 1 77 1 90 1 171 1 246 1 259 1 233 1 328 2 3 1 45 2 4 1 18 1 180 1 62 1 308 1 
295 1 296 1 77 1 90 1 298 1 171 1 259 1 246 2 233 1 98 1 212 1 215 1 308 1 
297 1 284 1 328 1 149 1 45 1 175 1 306 1 377 1 62 1 
142 1 163 1 377 1 
149 1 18 1 126 1 377 1 284 1 
355 1 340 1 142 1 253 1 130 1 311 2 284 2 173 1 286 2 149 2 163 1 47 1 135 1 18 1 126 2 24 1 153 1 377 1 35 1 
350 1 190 1 166 1 337 1 
63 1 2 1 350 1 190 1 211 1 21 1 166 1 
117 1 44 1 21 1 
63 1 325 1 282 1 350 1 317 2 190 1 21 3 2 3 302 1 211 1 166 1 179 1 
63 1 2 2 361 1 360 1 350 1 190 1 211 1 21 2 166 1 
63 1 2 1 325 1 356 1 350 1 211 1 241 1 31 1 125 1 21 1 213 1 
63 1 2 1 325 1 350 1 211 1 21 1 166 1 
63 1 2 1 325 1 190 1 211 1 21 1 166 2 
63 2 325 1 228 1 350 1 205 1 21 2 2 2 211 2 134 1 166 1 
63 1 325 1 190 1 350 2 357 1 21 3 2 3 361 2 211 1 96 1 166 1 213 1 86 1 
63 1 325 1 350 1 190 1 356 1 21 2 110 1 2 2 147 1 361 1 211 1 31 1 125 2 48 1 166 1 
63 2 325 1 190 1 350 2 21 4 244 1 2 4 360 1 361 2 211 2 96 1 166 1 213 1 
63 1 325 1 317 1 190 1 350 1 21 3 2 3 361 1 211 1 166 1 86 1 
161 1 350 1 96 1 213 1 
350 1 166 1 
63 1 2 1 325 1 350 1 190 1 211 1 21 1 166 1 
63 1 317 1 190 2 350 3 21 4 2 4 361 2 302 1 161 1 211 1 96 1 166 2 179 1 213 1 
63 1 325 1 350 1 190 1 21 2 245 1 2 2 361 1 150 1 211 1 166 1 201 1 
63 1 325 1 350 1 317 2 190 1 21 3 2 3 302 2 211 1 166 1 179 1 136 1 
309 2 234 1 350 2 122 1 
63 1 2 1 325 1 211 1 29 1 21 1 
63 1 2 2 361 1 325 1 350 1 190 1 211 1 21 2 166 1 86 1 
271 1 
63 1 2 1 325 1 350 1 190 1 211 1 21 1 166 1 

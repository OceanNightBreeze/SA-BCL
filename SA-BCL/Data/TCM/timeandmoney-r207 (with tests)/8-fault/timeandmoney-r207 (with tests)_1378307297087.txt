#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 249 204 27 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 249 204 27 271 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 249 204 27 (93,150) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 249 204 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 249 204 27 (93,150) (93,150) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 249 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 264 222 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (70,269) 175 (69,229) 207 149 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 249 204 27 (93,150) (93,150) 145 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 249 204 27 271 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (70,269) 175 115 178 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (70,269) 175 115 178 165 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 249 239 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 249 239 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 249 239 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 249 239 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 249 239 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
139 2 67 1 0 1 39 4 112 1 79 1 280 2 233 1 282 1 187 2 189 2 47 1 14 6 155 1 284 9 119 1 199 1 123 9 290 1 293 1 26 2 247 1 96 1 253 3 206 2 217 2 218 1 37 5 
139 2 67 1 0 1 39 4 112 1 79 1 280 2 233 1 282 1 187 2 189 2 47 1 14 6 155 1 284 9 119 1 199 1 123 9 290 1 293 1 26 2 247 1 96 1 253 3 206 2 217 2 218 1 37 5 
139 2 67 1 0 1 39 5 112 1 79 1 280 2 233 1 282 1 187 2 189 2 47 1 14 7 155 1 284 10 119 1 199 1 123 10 290 1 293 1 26 2 247 1 96 1 253 4 206 2 217 2 218 1 37 6 
139 2 67 1 0 1 39 3 112 1 79 1 280 2 233 1 282 1 187 2 189 2 47 1 14 4 155 1 284 7 119 1 199 1 123 7 293 1 26 2 247 1 96 1 253 2 206 1 217 2 218 1 37 4 
139 1 0 1 119 1 123 4 39 2 290 1 293 1 26 1 112 1 253 1 79 1 280 1 206 2 187 1 189 1 14 3 284 4 37 3 
0 1 119 1 120 1 199 1 122 1 289 1 123 2 26 1 112 1 280 1 187 1 218 1 217 1 189 1 37 1 284 2 
0 1 119 1 123 3 39 1 112 1 253 1 280 2 187 2 217 1 47 1 14 1 284 3 37 2 
67 1 139 1 0 1 39 4 76 1 112 1 277 1 79 1 280 2 187 2 189 1 47 1 14 7 284 9 119 1 123 9 290 1 293 1 26 1 247 1 253 3 206 2 217 1 37 5 
67 1 139 1 0 1 39 4 76 1 112 1 277 1 79 1 280 2 187 2 189 1 47 1 14 7 284 9 119 1 123 9 290 1 293 1 26 1 247 1 253 3 206 2 217 1 37 5 
16 1 201 1 6 1 
4 1 6 1 77 2 
204 1 27 1 249 1 
271 1 204 1 27 1 249 1 
93 1 204 1 27 1 249 1 
70 1 175 1 229 1 
204 1 249 1 
69 1 267 1 62 1 264 1 
16 1 69 2 198 1 267 1 62 2 6 1 75 1 48 1 
69 1 62 1 75 1 
69 1 150 1 267 1 62 1 93 1 204 1 27 1 249 1 
6 1 
16 1 69 2 198 1 267 1 62 2 6 1 75 1 261 1 
16 1 69 5 198 1 267 2 71 1 88 2 200 1 6 1 225 1 74 1 75 2 28 2 42 1 212 1 62 5 61 2 216 1 260 1 35 1 
124 1 85 1 
124 1 85 1 
78 1 246 1 
78 1 246 1 
78 1 246 1 
30 1 78 1 246 1 124 2 292 1 85 2 
295 1 124 1 85 1 
124 1 85 1 163 1 
124 1 85 1 163 1 
124 1 85 1 163 1 
186 1 124 1 85 1 
186 1 124 1 85 1 
186 1 124 1 85 1 
106 1 69 2 52 2 266 1 141 1 3 1 124 2 292 1 6 1 111 2 97 1 297 2 166 2 62 2 46 2 85 2 172 3 118 1 86 1 
69 1 52 1 166 1 297 1 124 1 62 1 46 1 85 1 172 1 249 1 86 1 
139 1 189 1 26 1 
120 1 189 1 26 1 
139 2 44 1 120 1 197 1 283 1 26 3 
139 1 120 1 197 1 208 1 283 1 26 2 
139 1 120 1 197 1 283 2 26 2 
68 1 69 5 140 1 267 4 4 1 272 1 273 1 6 2 75 1 77 3 113 2 81 1 11 1 188 1 13 1 50 1 16 1 198 1 88 1 200 2 25 1 127 2 28 1 164 1 212 1 33 1 61 1 62 5 63 1 260 3 137 2 38 1 
69 2 267 2 100 1 62 2 202 1 222 1 264 1 
68 1 69 3 140 1 267 2 71 1 4 2 272 1 273 1 6 3 77 4 113 2 81 1 188 1 11 1 13 1 16 1 88 1 200 2 28 1 127 2 33 1 61 1 62 3 260 3 137 1 38 1 
69 4 68 1 140 2 267 3 71 1 4 3 272 1 273 2 6 4 77 7 113 4 81 2 188 1 11 2 13 2 192 1 116 1 16 1 18 1 88 1 200 4 127 4 28 1 33 1 61 1 62 4 260 5 137 2 38 2 
152 1 201 1 95 1 138 1 275 1 
210 1 152 1 
55 1 
152 1 226 1 
265 1 152 3 226 1 138 2 262 1 29 1 
265 1 152 1 226 1 
152 1 104 1 
194 2 140 1 53 3 121 2 90 7 91 1 179 4 146 3 147 1 230 1 276 1 81 1 32 1 237 1 167 1 168 1 171 1 
194 2 140 1 53 3 121 2 90 7 91 1 179 4 146 3 147 1 230 1 276 1 81 1 32 1 237 1 167 1 168 1 171 1 
194 2 140 1 53 3 121 2 90 7 91 1 179 4 146 3 147 1 129 1 230 1 276 1 81 1 32 1 237 1 167 1 168 1 171 1 
174 4 140 4 2 1 273 3 144 1 179 16 146 10 7 1 147 5 276 1 230 2 81 4 237 2 82 1 11 3 243 1 158 2 17 1 194 5 53 15 121 3 161 1 90 31 91 1 128 1 31 1 296 3 32 2 167 2 168 1 136 1 171 1 263 1 38 3 
140 1 144 2 179 5 146 4 147 1 276 1 230 1 81 1 237 1 82 2 158 4 17 2 194 3 53 4 196 1 121 2 90 9 128 2 32 1 167 1 136 1 168 1 170 1 171 1 
139 1 0 1 268 1 112 1 181 1 44 1 278 1 280 1 281 1 238 1 187 1 83 1 189 1 241 1 14 1 242 1 117 2 284 2 119 1 54 2 120 1 123 2 94 1 26 2 252 2 60 1 251 1 133 1 298 1 217 1 37 1 
139 1 0 1 268 1 112 1 181 1 44 1 278 1 280 1 235 1 238 1 187 1 83 1 189 1 241 1 14 2 242 1 117 1 284 3 54 1 120 1 123 3 94 1 26 2 252 1 251 1 134 1 298 1 217 1 103 1 37 1 
139 1 0 1 268 1 112 1 181 1 278 1 44 1 238 1 83 1 189 1 14 2 242 1 117 1 284 2 54 1 120 1 123 2 94 1 26 2 252 1 134 1 298 1 217 1 103 1 37 1 
19 1 160 1 54 1 123 1 94 1 109 1 226 1 252 1 278 2 280 1 235 1 213 1 298 2 238 2 214 1 187 1 152 1 217 2 65 1 242 1 15 1 117 1 284 1 
139 1 268 1 181 1 278 1 44 1 280 1 281 1 238 1 187 1 83 1 189 1 241 1 242 1 117 1 284 1 119 1 54 1 120 1 123 1 94 1 26 2 252 1 251 1 298 1 217 1 103 1 
191 1 
69 2 173 1 70 1 175 1 109 1 75 2 226 1 229 1 149 1 80 1 152 1 188 1 10 1 242 1 15 2 156 1 117 2 54 2 160 1 198 1 88 1 200 1 94 1 28 1 252 2 294 1 207 1 212 1 61 1 62 2 260 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 2 70 1 175 1 80 1 207 1 198 1 62 2 75 1 156 1 261 1 229 1 149 1 
69 1 70 1 175 1 88 1 28 1 149 1 229 1 80 1 207 1 212 1 62 1 61 1 156 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 80 1 207 1 62 1 156 1 229 1 149 1 
69 1 70 1 175 1 88 1 28 1 149 1 229 1 80 1 207 1 212 1 62 1 61 1 156 1 
174 2 1 1 140 1 40 1 273 1 144 2 179 4 146 2 7 1 147 1 81 1 82 2 11 1 158 4 17 2 194 1 51 1 53 5 196 1 90 9 23 1 248 1 128 2 59 1 31 1 296 1 34 1 221 1 38 1 
1 1 174 2 140 2 176 1 40 1 273 1 144 3 179 11 146 2 147 1 8 1 81 1 82 3 11 2 158 6 17 3 194 1 51 2 53 9 159 1 196 1 90 20 248 3 128 3 59 1 250 1 130 1 99 1 31 2 296 2 209 1 34 2 136 2 38 2 
174 2 1 1 140 1 40 1 273 1 144 2 179 4 146 2 7 1 147 1 81 1 82 2 11 1 158 4 17 2 194 1 51 1 53 5 196 1 90 9 23 1 248 1 128 2 59 1 99 1 31 1 296 1 34 1 38 1 
174 2 1 1 140 1 40 1 273 1 144 2 179 4 146 2 7 1 147 1 81 1 82 2 11 1 158 4 17 2 194 1 51 1 53 5 196 1 90 9 23 1 248 1 128 2 59 1 99 1 31 1 296 1 34 1 38 1 
174 4 1 1 140 7 176 1 40 1 273 6 144 2 179 24 146 12 7 2 147 6 230 1 276 1 8 1 236 2 81 7 237 1 82 2 11 6 158 4 17 2 194 6 51 1 159 1 53 22 121 1 196 1 90 46 248 3 128 2 59 1 250 1 130 1 99 1 31 2 209 1 296 4 34 1 168 1 136 1 171 1 38 6 
70 2 269 2 270 1 142 1 144 1 179 1 226 1 43 1 82 1 152 1 154 1 242 1 117 2 49 1 158 2 285 1 17 1 193 1 53 1 54 2 288 1 90 2 291 1 94 1 57 1 128 1 252 2 60 2 258 1 102 2 219 1 
139 1 120 1 54 2 268 1 94 1 26 2 58 1 252 2 44 1 231 1 132 1 133 1 298 1 83 1 189 1 241 1 242 1 103 1 117 2 
139 1 120 1 54 1 287 1 268 1 94 1 26 2 58 1 252 1 44 1 298 1 83 1 189 1 241 1 242 1 103 1 117 1 
19 1 54 1 160 1 94 1 109 1 226 1 252 1 231 1 151 1 298 1 152 1 242 1 15 1 117 1 
139 1 120 1 54 1 268 1 94 1 26 2 58 1 252 1 44 1 231 1 132 1 298 1 83 1 189 1 241 1 242 1 103 1 117 1 
148 1 
16 1 200 1 201 1 260 1 35 1 6 1 225 1 
69 1 4 1 73 1 6 2 75 1 77 1 9 1 16 1 198 1 88 1 200 1 28 1 101 1 212 1 61 1 62 1 260 1 
69 5 140 2 72 1 4 6 143 1 225 1 6 8 75 5 226 3 227 2 77 12 234 2 81 2 152 10 10 1 11 2 242 3 15 1 157 1 16 2 20 2 21 1 88 4 24 1 94 4 92 2 28 4 162 2 29 1 252 3 257 2 35 1 260 9 105 2 104 2 38 2 265 3 273 2 113 6 188 2 117 3 54 3 198 3 200 8 127 6 133 1 210 3 212 4 61 4 215 2 62 5 66 2 220 2 138 2 
69 1 174 1 140 2 4 3 273 2 6 5 75 1 77 6 8 1 113 5 234 2 81 2 10 1 188 1 11 2 16 2 159 1 198 1 88 2 200 5 56 1 205 1 127 5 28 2 250 1 130 1 31 1 209 1 296 1 212 2 62 1 61 2 260 8 220 1 38 2 
69 1 140 1 88 1 224 1 200 1 93 1 145 1 204 1 27 1 28 1 249 1 230 1 150 1 234 1 212 1 237 1 62 1 61 1 168 1 260 1 
16 1 88 1 200 1 225 1 6 1 28 1 212 1 61 1 35 1 260 1 
140 2 4 5 200 5 273 2 6 5 127 5 162 1 77 10 113 5 234 2 81 2 11 2 260 5 220 1 38 2 
16 1 69 1 198 1 62 1 6 1 75 1 
69 3 173 1 71 1 109 1 75 4 226 1 228 1 152 1 188 2 10 2 242 1 15 2 157 2 117 4 54 4 160 1 198 2 88 2 200 2 94 1 24 1 28 2 294 1 252 4 212 1 135 1 61 2 62 3 260 2 
271 1 204 1 27 1 249 1 
16 2 121 1 88 1 4 2 200 2 6 4 127 2 28 1 77 4 113 2 212 1 61 1 188 1 10 1 260 1 
98 1 166 1 141 1 46 1 153 1 
166 1 89 1 46 1 
166 1 89 1 46 1 
166 1 89 1 46 1 
166 1 46 1 36 1 
166 1 46 1 36 1 
166 1 46 1 36 1 
166 1 46 1 
124 1 85 1 
17 2 194 2 140 1 53 4 121 1 90 8 179 4 144 2 146 3 147 1 128 2 276 1 230 1 81 1 237 1 82 2 168 1 136 1 171 1 158 4 
230 1 276 1 194 2 140 1 53 3 121 1 81 1 90 6 237 1 201 1 168 1 179 3 171 1 146 2 
17 1 194 1 140 1 53 2 90 4 273 1 144 1 179 2 146 2 128 1 147 1 81 1 82 1 11 1 84 1 158 2 38 1 
194 1 174 2 140 1 53 4 90 7 273 1 179 3 146 2 7 1 147 1 31 1 296 1 81 1 11 1 38 1 
140 3 174 2 273 2 179 11 144 2 146 9 147 4 7 1 230 2 276 1 185 1 114 1 81 3 236 1 237 2 82 2 11 2 158 4 17 2 194 5 53 12 121 1 90 23 128 2 296 2 168 1 136 2 171 1 38 2 
174 1 53 1 90 1 
296 1 90 1 179 1 
17 1 194 2 140 1 53 3 90 6 273 1 144 1 179 3 146 3 128 1 147 1 162 1 81 1 82 1 11 1 84 1 158 2 38 1 
174 1 140 2 273 2 144 1 179 6 146 2 147 1 8 1 81 2 82 1 11 2 158 2 17 1 194 1 53 6 159 1 196 1 90 12 128 1 130 1 250 1 31 1 296 1 209 1 38 2 
194 1 140 1 53 3 90 6 179 3 146 2 147 1 230 1 81 1 237 1 168 1 
17 1 194 1 53 2 90 3 179 1 144 1 146 2 147 1 128 1 230 1 276 1 114 1 237 1 82 1 136 1 171 1 158 2 
194 1 140 1 53 3 90 5 145 1 179 2 146 1 230 1 81 1 237 1 168 1 
17 1 140 1 196 1 90 2 144 1 179 2 146 1 128 1 147 1 82 1 158 2 38 1 
17 1 194 1 140 1 53 2 196 1 90 4 273 1 144 1 179 2 146 2 128 1 147 1 81 1 82 1 11 1 158 2 38 1 
17 3 194 1 53 2 196 1 90 3 23 1 144 3 179 1 146 2 128 3 147 1 230 1 114 1 237 1 82 3 136 1 158 6 
174 4 140 5 2 1 273 3 144 5 179 16 146 12 7 1 147 5 230 3 276 1 114 1 81 5 237 3 82 5 11 3 84 1 158 10 17 5 194 7 53 18 121 1 196 1 161 1 90 34 23 1 128 5 31 1 296 3 168 2 136 2 171 1 263 1 38 3 
140 1 174 1 144 1 179 4 146 2 276 1 230 1 81 1 237 1 82 1 158 2 17 1 194 2 53 4 121 1 196 1 90 8 128 1 31 1 296 1 209 1 168 1 171 1 
174 2 140 2 144 2 179 6 146 3 7 1 147 1 230 1 276 1 81 1 237 1 82 2 11 1 84 1 158 4 17 2 194 2 53 5 121 1 196 1 90 11 128 2 31 1 209 1 296 1 168 1 171 1 38 1 
174 1 140 3 273 2 144 3 179 9 146 4 147 1 230 1 276 1 8 1 81 3 237 1 82 3 11 2 84 1 158 6 17 3 194 3 53 10 159 1 121 1 196 1 90 19 128 3 250 1 130 1 31 1 296 1 209 1 168 1 136 1 171 1 38 2 
174 1 140 3 273 1 144 3 179 10 146 5 147 2 230 1 276 1 8 1 81 2 237 1 82 3 11 2 84 1 158 6 17 3 194 3 53 7 159 1 121 1 196 1 90 17 128 3 130 1 250 1 31 1 296 1 209 1 168 1 136 1 171 1 38 2 
140 1 174 1 144 1 179 4 146 2 276 1 230 1 81 1 237 1 82 1 158 2 17 1 194 2 53 4 121 1 196 1 90 8 128 1 31 1 296 1 209 1 168 1 171 1 
174 1 140 2 273 2 144 1 179 6 146 2 147 1 8 1 81 2 82 1 11 2 158 2 17 1 194 1 53 6 159 1 196 1 90 12 128 1 130 1 250 1 31 1 296 1 209 1 38 2 
174 1 140 3 273 1 144 4 179 10 146 5 147 2 230 1 276 1 8 1 81 2 237 1 82 4 11 2 84 1 158 8 17 4 194 3 53 8 159 1 121 1 196 1 90 18 128 4 250 1 130 1 31 1 209 1 296 1 168 1 136 2 171 1 38 2 
174 1 140 3 273 2 144 4 179 9 146 6 147 3 8 1 81 2 82 4 11 3 158 8 17 4 194 3 53 7 159 1 196 1 90 16 23 1 128 4 250 1 130 1 31 1 209 1 296 1 136 2 38 3 
194 3 140 1 53 4 90 7 179 3 146 6 147 3 276 2 230 3 81 1 237 3 168 1 171 1 
174 1 140 3 273 1 144 4 179 10 146 4 147 1 230 1 276 1 8 1 81 2 237 1 82 4 11 2 158 8 17 4 194 3 53 8 159 1 121 1 196 1 90 18 23 1 128 4 250 1 130 1 31 1 209 1 296 1 168 1 136 2 171 1 38 2 
70 1 175 1 115 1 178 1 
70 1 165 1 175 1 182 1 183 1 115 1 178 1 203 1 180 1 
252 1 160 1 54 1 152 1 201 1 94 1 109 1 242 1 15 1 226 1 117 1 
239 1 249 1 
239 1 249 1 
239 1 249 1 
69 2 265 1 6 1 75 1 226 1 152 4 242 1 15 1 244 1 157 1 117 3 16 1 195 1 54 3 22 1 94 1 92 1 252 3 210 1 62 2 105 1 104 1 138 1 
16 1 69 2 265 1 54 3 92 1 94 1 6 1 75 1 226 1 252 3 210 1 62 2 215 1 152 4 15 1 242 1 244 1 104 1 105 1 157 1 117 3 138 1 
252 1 279 1 54 1 94 1 242 1 117 1 
285 1 286 1 265 1 54 6 126 1 94 3 226 2 29 1 60 1 252 7 279 1 254 1 232 1 133 1 256 1 152 3 190 1 15 2 242 2 103 1 117 7 
239 1 249 1 
69 3 267 1 6 1 225 1 75 2 227 1 152 2 15 1 117 1 16 1 20 1 54 1 198 1 88 2 200 1 24 1 92 1 28 2 252 1 210 1 212 2 61 2 62 3 215 1 260 1 35 1 66 1 138 1 
265 1 54 2 21 1 94 2 226 1 29 1 252 2 279 1 133 1 152 2 242 1 138 1 117 2 
54 4 160 1 94 1 109 1 41 1 226 1 252 4 133 1 152 1 15 1 242 1 244 1 117 4 
265 1 54 2 94 2 226 1 274 1 131 1 252 2 232 1 152 1 190 1 12 1 242 1 157 1 117 2 
252 1 120 1 54 1 83 1 189 1 94 1 26 1 242 1 15 1 117 1 
285 1 252 2 54 2 133 1 270 1 152 1 94 1 242 1 226 1 103 1 117 2 
285 1 160 1 54 4 126 1 94 2 109 1 41 1 226 2 252 5 254 1 133 1 152 3 15 1 242 2 157 1 117 5 
285 1 160 1 54 4 94 2 109 1 41 1 226 2 252 5 254 1 133 1 152 3 64 1 15 1 242 2 157 1 117 5 
239 1 249 1 
286 1 265 1 54 1 94 2 226 1 29 1 252 1 232 1 152 1 190 1 242 1 157 1 117 1 
0 1 201 1 112 1 37 1 
0 1 280 1 123 1 187 1 112 1 37 1 284 1 
278 1 217 1 284 1 
119 1 0 1 177 1 199 2 123 3 5 1 112 1 280 1 255 1 187 1 37 1 284 3 
0 1 206 1 280 1 123 2 187 1 14 1 112 1 37 1 284 2 
139 1 119 1 123 1 39 1 293 1 26 1 280 1 187 1 189 1 284 1 37 1 
0 1 119 1 280 1 123 1 187 1 37 1 284 1 
0 2 119 1 280 1 123 1 187 1 112 1 284 1 
0 1 119 1 123 2 107 1 108 1 184 1 280 2 187 2 37 1 284 2 
67 1 0 1 119 1 123 3 39 1 247 1 112 1 253 1 280 1 187 1 14 2 284 3 37 2 
139 1 0 1 119 1 120 1 123 2 26 2 110 1 112 1 44 1 280 1 187 1 189 1 14 1 37 1 284 2 
0 1 119 1 123 4 39 1 290 1 112 1 253 1 280 2 206 1 187 2 14 2 284 4 37 2 
0 1 119 1 280 1 123 1 187 1 112 1 37 1 284 1 
0 2 199 1 177 1 123 4 39 1 5 1 112 2 253 1 280 1 45 1 187 1 14 2 284 4 37 3 
0 1 119 1 123 2 125 1 112 1 277 1 280 1 187 1 240 1 14 1 37 1 284 2 
119 1 0 1 223 1 177 2 199 2 123 3 5 1 112 1 280 1 187 1 37 1 284 3 
245 1 211 2 259 1 37 2 
119 1 280 1 123 1 187 1 87 1 284 1 
0 1 119 1 280 1 123 2 187 1 14 1 247 1 112 1 37 1 284 2 
169 1 
0 1 119 1 280 1 123 1 187 1 112 1 37 1 284 1 
119 1 0 1 199 1 123 3 247 1 112 1 280 1 187 1 14 1 284 3 37 1 
253 1 45 1 39 1 37 1 
0 1 37 1 

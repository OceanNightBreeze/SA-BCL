#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 (102,321) (102,321) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 (102,321) (102,321) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 (102,321) (102,321) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 (102,321) (102,321) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 330 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 344 330 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 5 22 369 52 105 272 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (26,29) 15 5 22 369 322 249 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 5 22 369 52 58 312 350 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 5 22 369 52 58 312 350 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 5 22 369 52 58 312 350 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 5 22 369 52 58 312 350 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 314 274 24 262 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 5 22 369 52 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 5 22 369 322 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 5 22 369 52 105 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 5 22 369 52 283 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 319 212 (271,300) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (134,137,177,325) (134,137,177,325) 332 93 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
278 1 134 7 332 1 177 2 248 1 180 1 137 2 342 1 344 1 84 1 37 2 90 1 188 2 321 1 102 1 60 2 273 1 305 6 298 1 229 1 325 4 261 2 200 1 147 1 
278 1 134 7 332 1 177 2 248 1 180 1 137 2 342 1 344 1 84 1 37 2 90 1 188 2 321 1 102 1 60 2 273 1 305 6 298 1 229 1 325 4 261 2 200 1 147 1 
278 1 134 7 332 1 177 2 248 1 180 1 137 2 342 1 344 1 84 1 37 2 90 1 188 2 321 1 102 1 60 2 273 1 305 6 298 1 229 1 325 4 261 2 200 1 147 1 
278 1 134 7 332 1 177 2 248 1 180 1 137 2 342 1 344 1 84 1 37 2 90 1 188 2 321 1 102 1 60 2 273 1 305 6 298 1 229 1 325 4 261 2 200 1 147 1 
134 2 332 1 177 1 305 1 137 1 342 1 344 1 325 1 
134 2 177 1 137 1 180 1 342 1 295 1 35 1 90 1 60 1 273 1 305 2 298 1 324 1 299 1 261 1 231 1 
278 1 134 3 177 2 137 2 342 1 37 1 188 1 60 2 305 3 324 1 261 1 325 1 231 1 
278 1 330 1 134 7 332 1 177 2 82 1 137 2 342 1 344 1 37 2 188 2 60 2 305 6 229 1 325 5 261 1 147 1 
278 1 330 1 134 7 332 1 177 2 82 1 137 2 342 1 344 1 37 2 188 2 60 2 305 6 229 1 325 5 261 1 147 1 
140 1 227 1 220 1 
136 2 77 1 140 1 
158 2 6 2 234 2 38 2 225 1 143 2 40 1 3 2 
357 1 42 1 234 3 280 1 172 1 23 1 24 1 3 2 253 1 254 1 196 1 236 1 28 1 6 2 310 1 158 2 314 2 291 1 292 1 266 2 368 1 160 1 107 2 162 1 206 1 55 1 13 1 189 1 274 2 38 3 225 1 114 1 191 1 143 2 40 1 65 2 230 1 
158 1 187 1 178 1 6 1 234 1 38 1 225 1 143 1 146 1 3 1 
167 1 158 1 265 1 32 1 234 1 10 1 140 1 54 1 241 1 38 1 91 1 227 1 19 1 146 1 
158 1 265 1 32 1 10 2 234 1 140 1 54 2 3 1 6 1 38 1 91 1 227 1 143 1 19 1 146 1 
89 1 9 1 10 1 54 1 106 1 
68 1 234 1 3 1 76 1 6 1 106 1 158 1 9 1 178 1 138 1 10 2 140 1 54 2 187 1 225 1 38 1 227 1 143 1 146 1 
10 1 54 1 106 1 
158 1 9 1 178 1 10 1 234 1 54 1 3 1 187 1 76 1 6 1 225 1 38 1 143 1 146 1 
140 1 
68 1 234 1 3 1 76 1 6 1 106 1 158 1 9 1 178 1 10 2 140 1 54 2 187 1 142 1 225 1 38 1 227 1 143 1 146 1 
68 1 119 1 234 1 334 1 235 2 3 1 47 1 76 1 6 1 129 1 7 5 201 2 156 2 106 2 158 1 9 2 239 1 178 1 263 2 31 1 83 4 10 5 53 1 140 2 185 1 54 5 204 1 33 1 317 1 36 1 269 2 187 1 59 2 38 1 225 1 143 1 227 2 146 1 
40 1 220 1 
158 2 176 1 234 2 3 1 6 1 38 2 143 1 40 2 175 1 
15 1 29 1 335 1 
314 1 234 1 368 1 280 1 24 1 206 1 55 1 196 1 13 1 274 1 38 1 164 1 191 1 40 1 65 1 230 1 
167 1 158 5 168 2 234 5 337 1 346 1 3 1 124 1 207 1 6 4 38 5 143 4 40 1 175 1 
116 1 158 2 178 1 6 2 234 2 38 2 143 2 146 1 
158 1 168 1 314 1 234 2 368 1 280 1 346 1 24 1 206 1 55 1 196 1 13 1 274 1 29 1 6 1 38 2 191 1 143 1 65 1 230 1 
158 3 168 1 6 3 234 3 38 3 143 3 40 1 3 1 
158 1 178 1 6 1 234 1 38 1 143 1 146 1 
158 1 176 1 6 1 234 1 38 1 143 1 175 1 146 1 3 1 
168 1 42 1 118 1 234 4 280 1 172 1 23 1 24 1 3 2 253 1 196 1 28 1 6 3 175 1 158 3 159 1 314 1 291 1 265 1 32 1 292 1 266 2 10 1 368 1 160 1 107 1 346 1 54 1 206 1 55 1 13 1 189 1 274 1 114 1 38 4 225 1 191 1 91 1 143 3 40 1 19 1 146 1 65 1 230 1 
167 1 158 2 168 1 6 1 234 2 38 2 337 1 143 1 40 1 
158 3 168 2 159 1 32 1 265 1 10 1 234 3 140 1 54 1 346 1 3 1 6 3 38 3 91 1 143 3 175 1 19 1 146 1 328 1 
158 2 168 1 29 1 6 2 234 2 38 2 335 1 143 2 175 1 3 1 
314 1 234 1 368 1 280 1 24 1 206 1 55 1 13 1 196 1 274 1 38 1 191 1 40 1 65 1 230 1 
314 1 234 1 368 1 24 1 206 1 55 1 13 1 196 1 274 1 340 1 38 1 191 1 40 1 300 1 65 1 
329 1 42 1 335 2 303 1 235 1 172 1 97 1 23 1 253 1 254 2 5 1 26 1 286 1 28 2 29 2 201 1 292 1 266 2 343 1 107 4 267 1 189 1 15 2 39 1 
158 1 116 1 6 1 234 1 38 1 91 1 143 1 146 1 
123 1 100 1 
123 1 100 1 
0 1 108 1 
0 1 108 1 
0 1 108 1 
123 1 100 1 339 1 
123 1 100 1 339 1 
123 1 100 1 339 1 
123 1 247 1 100 1 
123 1 100 1 258 1 
123 2 100 2 0 1 251 1 108 1 221 1 
123 1 247 1 100 1 
123 1 247 1 100 1 
151 1 234 2 214 1 216 1 123 1 100 1 48 1 257 1 258 1 6 2 78 1 103 1 158 2 10 1 54 1 184 1 110 1 16 1 38 2 61 1 143 2 40 1 144 1 20 1 
67 1 2 1 10 2 251 1 140 1 54 2 194 1 73 1 123 2 100 2 110 1 48 2 16 2 226 1 78 3 103 2 210 1 20 2 41 2 
273 1 180 1 84 1 
273 1 180 1 299 1 
180 3 49 1 84 2 131 1 299 1 246 1 
8 1 180 2 49 1 84 1 131 1 299 1 
180 2 49 2 84 1 131 1 299 1 
356 2 94 1 22 1 151 1 68 1 71 1 216 1 235 1 97 1 5 1 101 1 77 1 130 2 7 2 201 1 156 1 106 1 9 4 136 3 263 1 10 5 83 3 140 2 54 5 294 2 316 1 317 1 348 1 59 1 352 1 227 1 144 1 
94 1 151 2 234 1 235 1 97 1 3 1 5 1 101 1 6 1 7 2 201 1 156 1 106 4 158 1 9 5 10 6 54 6 242 3 348 1 59 1 356 2 22 1 68 1 76 1 77 1 173 1 307 1 130 2 136 3 178 1 263 1 83 3 140 3 317 1 89 3 187 1 38 1 225 1 143 1 227 1 92 1 146 1 
356 2 151 1 22 1 71 1 334 1 235 1 97 1 5 1 101 1 77 2 7 2 130 2 201 1 156 1 9 2 136 4 263 1 10 3 83 3 140 3 54 3 294 1 348 1 59 1 352 1 227 1 
66 1 356 4 151 2 22 2 333 1 334 1 71 1 235 2 97 2 5 2 101 1 77 3 130 4 7 4 201 2 156 1 9 3 136 7 263 1 10 4 83 5 140 4 54 4 294 2 348 1 11 1 59 1 352 1 227 1 
196 1 205 1 220 1 
75 1 196 1 
186 1 
196 1 13 1 368 1 
196 1 288 1 
196 1 13 1 
86 1 196 3 13 1 43 1 368 1 205 2 
363 1 343 3 235 1 185 1 107 7 44 1 33 1 45 1 218 2 254 4 286 2 28 3 129 1 354 1 201 1 232 1 355 1 
363 1 343 3 235 1 185 1 107 7 44 1 33 1 45 1 218 2 254 4 286 2 28 3 129 1 354 1 201 1 232 1 355 1 
363 1 343 3 235 1 185 1 107 7 44 1 33 1 45 1 218 2 254 4 163 1 286 2 28 3 129 1 354 1 201 1 232 1 355 1 
133 1 22 1 52 1 235 1 107 5 44 1 369 1 45 2 218 1 254 4 5 1 272 1 28 1 104 1 105 1 
42 2 235 1 44 1 23 2 218 2 45 1 254 5 286 3 28 4 129 1 201 1 132 1 81 1 363 1 292 2 266 4 343 4 107 9 185 1 33 1 12 1 189 2 354 1 232 1 
360 1 250 1 72 1 281 1 219 1 27 1 287 1 305 2 261 1 51 1 134 2 314 1 177 1 137 1 180 2 342 1 84 1 55 1 245 1 60 1 273 1 274 1 323 1 324 1 191 1 325 1 299 1 65 1 246 1 231 1 
360 1 69 1 72 1 281 1 219 1 125 1 287 1 305 3 261 1 51 1 134 3 314 1 177 1 137 1 180 2 84 1 240 1 55 1 245 1 60 1 273 1 274 1 323 1 324 1 191 1 325 2 299 1 246 1 65 1 231 1 
360 1 72 1 281 1 125 1 287 1 305 2 261 1 51 1 134 2 314 1 180 2 240 1 84 1 55 1 60 1 274 1 273 1 323 1 324 1 191 1 325 2 299 1 65 1 246 1 231 1 
117 1 134 1 177 1 314 1 69 1 137 1 72 2 121 1 24 1 46 1 55 1 243 1 126 1 111 1 196 1 13 1 274 1 305 1 323 2 191 1 261 2 65 1 51 2 
360 1 72 1 281 1 219 1 125 1 27 1 287 1 305 1 261 1 51 1 134 1 314 1 177 1 137 1 180 2 342 1 84 1 55 1 245 1 273 1 274 1 323 1 191 1 299 1 65 1 246 1 
95 1 
68 1 304 1 24 2 99 1 126 1 196 2 308 1 7 1 156 1 262 1 106 2 289 1 314 2 263 1 10 2 83 1 368 1 367 1 54 2 347 1 317 1 55 2 348 1 243 1 13 2 274 2 59 1 191 3 65 2 
167 1 68 1 234 1 50 1 106 2 80 2 158 1 362 1 135 1 265 1 32 1 293 1 10 3 54 3 241 1 268 1 208 1 142 1 38 1 91 1 19 1 146 1 
167 1 68 1 152 1 234 1 106 1 80 3 158 1 362 1 135 1 265 1 32 1 293 1 10 3 140 1 54 3 241 1 268 1 208 1 142 1 38 1 91 1 227 1 19 1 146 1 
167 1 68 1 152 1 234 1 4 1 50 1 106 2 80 3 158 1 362 1 135 1 265 1 32 1 293 1 10 3 54 3 241 1 268 1 208 1 142 1 38 1 91 1 19 1 146 1 
152 2 234 2 3 1 98 1 282 1 4 4 6 1 50 4 7 1 156 1 106 7 158 2 293 1 10 5 54 5 241 1 57 2 208 1 59 1 115 1 17 2 165 1 19 1 167 1 359 1 68 3 76 1 77 2 80 4 362 1 364 1 135 1 178 1 32 1 265 1 263 1 315 1 83 1 140 1 34 2 317 1 268 1 187 1 142 1 275 2 225 1 38 2 91 1 143 1 227 1 146 2 
152 2 234 2 3 1 98 1 4 2 6 1 7 1 50 2 156 1 106 4 158 2 293 1 10 4 54 4 241 1 57 2 208 1 59 1 17 2 165 1 62 1 19 1 167 1 68 2 76 1 77 2 80 4 362 1 135 1 136 2 178 1 32 1 265 1 263 1 83 1 140 1 34 2 317 1 268 1 187 1 275 2 225 1 38 2 91 1 143 1 227 1 146 2 
167 1 359 1 68 2 152 2 234 1 282 1 98 1 4 2 77 2 50 2 7 1 156 1 106 4 80 4 158 1 362 1 135 1 265 1 32 1 263 1 293 1 83 1 10 4 315 1 140 1 54 4 241 1 34 2 317 1 57 2 268 1 208 1 59 1 275 2 17 2 38 1 165 1 91 1 227 1 19 1 146 1 
152 2 234 2 3 1 98 1 282 1 4 2 6 1 7 1 50 2 156 1 106 4 158 2 293 1 10 4 54 4 241 1 57 2 208 1 59 1 17 2 165 1 19 1 167 1 359 1 68 2 76 1 77 2 80 4 362 1 135 1 178 1 263 1 32 1 265 1 315 1 83 1 140 1 34 2 317 1 268 1 187 1 275 2 225 1 38 2 91 1 143 1 227 1 146 2 
152 2 234 2 153 2 3 1 282 1 4 2 6 1 7 1 50 2 156 1 106 4 158 2 293 1 10 4 54 4 345 2 241 1 109 1 57 2 208 1 59 1 17 2 165 1 19 1 167 1 68 2 70 1 76 1 80 4 362 1 135 1 136 2 178 1 263 1 32 1 265 1 181 1 83 1 140 1 317 1 268 1 187 1 225 1 38 2 91 1 143 1 227 1 146 2 
152 3 234 2 3 1 98 1 282 1 4 3 6 1 50 3 7 1 156 1 106 5 158 2 293 1 10 4 54 4 241 1 57 2 208 1 59 1 115 1 17 2 165 1 19 1 167 1 359 1 68 2 76 1 77 2 80 5 362 1 135 1 178 1 32 1 265 1 263 1 315 1 83 1 140 1 34 2 317 1 268 1 187 1 275 2 225 1 38 2 91 1 143 1 227 1 146 2 
152 3 234 2 3 1 98 1 282 1 4 3 6 1 50 3 7 1 156 1 106 5 158 2 293 1 10 4 54 4 241 1 57 2 208 1 59 1 115 1 17 2 165 1 19 1 167 1 359 1 68 2 76 1 77 2 80 5 362 1 135 1 178 1 32 1 265 1 263 1 315 1 83 1 140 1 34 2 317 1 268 1 187 1 275 2 225 1 38 2 91 1 143 1 227 1 146 2 
167 1 68 1 152 1 234 1 153 1 4 1 50 1 7 1 156 1 106 2 80 3 362 1 158 1 135 1 136 2 263 1 265 1 32 1 293 1 83 1 10 3 181 1 140 1 345 2 54 3 241 1 317 1 57 2 268 1 208 1 59 1 17 2 38 1 62 1 165 1 91 1 227 1 19 1 146 1 
42 1 335 1 235 1 172 1 23 1 218 1 253 1 254 3 286 2 29 1 28 3 129 1 201 1 220 1 363 1 292 1 266 2 343 2 185 1 107 6 33 1 189 1 15 1 354 1 39 1 40 2 
133 1 42 1 22 1 292 1 249 1 120 1 266 2 235 1 107 4 369 1 172 1 23 1 253 1 254 3 5 1 15 4 189 1 322 1 29 4 28 1 104 1 
168 1 357 1 42 1 120 1 234 2 335 1 280 1 172 1 24 1 23 1 253 1 254 1 196 1 306 1 6 1 28 1 158 1 314 1 291 1 292 1 266 2 368 1 346 1 107 2 206 1 55 1 112 1 13 1 274 1 189 1 164 1 38 2 191 1 143 1 40 1 18 1 65 1 230 1 
168 1 42 2 120 1 234 2 280 1 172 2 23 2 24 1 253 2 195 1 196 1 6 1 28 1 198 1 79 1 341 1 158 1 314 1 291 1 292 2 266 4 368 1 107 1 346 1 206 1 55 1 13 1 189 2 274 1 114 1 38 2 191 1 143 1 65 1 230 1 
168 1 357 1 42 2 250 1 234 1 336 1 172 2 24 2 23 2 154 1 253 2 254 1 125 1 25 1 126 1 256 1 196 3 197 1 127 1 6 1 28 1 158 1 314 8 291 1 292 2 266 4 107 2 162 2 55 2 243 1 320 1 13 2 274 7 189 2 38 1 191 2 39 1 143 1 65 8 
42 1 22 1 120 1 234 1 335 1 235 1 172 1 23 1 97 1 3 1 253 1 254 1 5 1 286 1 29 1 6 1 28 2 175 1 201 1 158 1 203 1 292 1 266 2 343 1 107 3 15 1 189 1 38 1 143 1 
42 1 292 1 266 2 343 1 335 1 303 1 107 2 235 1 172 1 23 1 253 1 254 2 5 1 15 1 189 1 29 1 39 1 232 1 
329 1 42 1 292 1 266 2 343 1 335 1 107 2 172 1 23 1 97 1 253 1 286 1 15 1 189 1 29 1 28 2 39 1 201 1 
42 1 22 1 335 2 235 1 172 1 23 1 97 1 253 1 254 2 5 1 286 1 29 2 28 2 201 1 292 1 266 2 343 2 107 4 189 1 15 2 39 1 232 1 
42 1 292 1 266 2 343 1 335 1 303 1 107 2 235 1 172 1 23 1 253 1 254 2 5 1 25 1 15 1 189 1 29 1 232 1 
329 1 42 1 292 1 266 2 343 1 335 1 107 2 172 1 23 1 97 1 253 1 25 1 286 1 15 1 189 1 29 1 28 2 201 1 
42 1 22 1 292 1 266 2 343 2 335 2 107 4 235 1 172 1 97 1 23 1 253 1 254 2 5 1 25 1 286 1 15 2 189 1 28 2 29 2 201 1 232 1 
42 1 22 1 292 1 266 2 343 2 335 2 235 1 107 4 172 1 97 1 23 1 253 1 254 2 5 1 286 1 15 2 189 1 28 2 29 2 201 1 232 1 
357 1 42 1 234 1 280 1 172 1 24 1 23 1 253 1 254 1 196 1 28 1 314 1 291 1 292 1 266 2 368 1 107 2 206 1 55 1 13 1 274 1 189 1 114 1 38 1 191 1 40 1 65 1 230 1 
357 1 42 1 234 1 172 1 24 1 23 1 253 1 254 1 196 1 340 1 28 1 314 1 291 1 292 1 266 2 368 1 107 2 206 1 370 1 55 1 13 1 274 1 189 1 38 1 191 1 40 1 300 1 65 1 
42 1 22 1 292 1 120 1 266 2 343 2 335 2 107 4 235 1 172 1 97 1 23 1 253 1 254 2 5 1 286 1 15 2 189 1 28 2 29 2 201 1 232 1 
42 1 22 1 250 1 234 1 335 2 235 1 280 1 172 1 97 1 23 1 253 1 254 2 5 1 196 1 286 1 28 2 29 2 201 1 341 1 314 1 292 1 266 2 343 2 368 1 107 4 206 1 55 1 13 1 15 2 274 1 189 1 114 1 38 1 191 1 65 1 232 1 230 1 
42 1 22 1 120 1 234 1 335 1 235 1 172 1 97 1 23 1 217 1 3 1 253 1 254 2 5 1 28 1 6 1 29 1 201 1 175 1 158 1 292 1 266 2 343 1 107 3 189 1 15 1 38 1 143 1 232 1 
133 1 312 1 21 1 42 2 22 1 52 1 292 2 266 4 235 1 107 6 369 1 23 2 74 1 254 4 5 1 350 1 12 1 58 1 189 2 28 2 104 1 193 1 
148 1 358 1 170 1 21 4 42 3 22 3 235 3 23 3 97 2 74 1 338 1 254 14 283 1 5 3 286 2 28 12 104 2 132 2 201 2 133 2 312 2 365 1 52 2 292 3 266 6 343 4 107 26 350 1 12 1 58 2 270 1 189 3 190 1 232 2 
133 1 312 1 21 1 42 2 22 1 52 1 292 2 266 4 235 1 107 6 369 1 23 2 74 1 254 4 5 1 350 1 12 1 58 1 189 2 28 2 104 1 193 1 
133 1 312 1 21 1 42 2 22 1 52 1 292 2 266 4 235 1 107 6 369 1 23 2 74 1 254 4 5 1 350 1 12 1 58 1 189 2 28 2 104 1 193 1 
42 1 21 1 22 1 235 2 23 1 218 1 74 1 254 7 5 1 286 1 28 4 129 1 104 1 201 1 133 1 363 1 312 1 52 1 292 1 266 2 343 1 107 11 185 1 369 1 33 1 350 1 12 1 58 1 189 1 354 1 
123 1 100 1 48 1 16 1 226 1 251 1 103 1 85 1 194 1 20 1 
258 1 184 1 
123 1 100 1 48 1 16 1 259 1 103 1 209 1 96 1 20 1 
155 1 339 1 
87 1 247 1 221 1 
67 1 2 1 10 1 251 1 140 1 54 1 194 1 73 1 123 1 110 1 100 1 48 1 16 1 226 1 78 2 103 1 20 1 41 1 
67 1 2 1 10 1 251 1 140 1 54 1 194 1 73 1 123 1 110 1 100 1 48 1 16 1 226 1 78 2 103 1 20 1 41 1 
67 1 2 1 10 1 251 1 140 1 54 1 194 1 73 1 123 1 110 1 100 1 48 1 16 1 226 1 78 2 103 1 20 1 41 1 
155 1 339 1 221 1 
155 1 339 1 221 1 
87 1 247 1 
87 1 247 1 221 1 
257 1 214 1 
151 1 2 1 234 2 214 1 216 1 123 1 100 1 48 1 257 1 258 1 6 2 78 1 103 1 311 1 158 2 9 1 10 1 54 1 184 1 16 1 38 2 61 1 143 2 40 1 144 1 20 1 41 1 
158 1 150 1 234 1 38 1 
314 2 360 1 180 2 250 1 182 1 84 1 281 1 219 1 55 1 125 1 285 1 273 1 274 2 323 1 191 1 299 1 246 1 65 2 277 1 
314 1 360 1 180 2 84 1 281 1 219 1 55 1 125 1 14 1 273 1 274 1 323 1 191 1 299 1 246 1 65 1 277 1 
149 1 314 1 182 1 121 1 24 1 55 1 243 1 126 1 196 1 13 1 274 1 323 1 191 1 65 1 
314 1 360 1 180 2 182 1 84 1 281 1 219 1 55 1 125 1 285 1 273 1 274 1 323 1 191 1 299 1 246 1 65 1 277 1 
260 1 
31 1 83 1 140 1 7 1 53 1 227 1 220 1 
68 1 234 1 3 1 98 1 76 1 77 1 6 1 7 1 156 1 106 1 158 1 136 1 178 1 263 1 83 1 10 1 140 1 54 1 34 1 317 1 187 1 59 1 275 1 38 1 225 1 143 1 227 1 146 1 
43 1 235 1 97 1 5 1 196 4 199 1 7 3 156 2 201 1 106 2 10 2 54 2 161 1 205 1 348 1 55 1 13 1 297 1 59 2 65 1 356 3 213 1 22 1 68 1 24 1 75 2 77 3 130 3 314 1 136 6 263 2 32 1 83 4 368 1 140 3 317 2 269 1 141 1 274 1 191 2 276 1 326 1 327 1 
148 1 234 1 235 2 97 2 99 1 3 1 338 1 5 2 283 1 6 1 7 5 104 1 237 1 201 2 156 2 106 1 158 1 52 1 239 1 10 1 54 1 348 1 59 2 356 5 170 1 22 2 68 1 76 1 77 3 130 5 174 1 133 1 136 6 178 1 263 2 83 8 140 5 317 2 269 2 187 1 270 1 38 1 225 1 227 2 143 1 146 1 
359 1 119 1 234 1 235 2 3 1 76 1 6 1 129 1 7 2 156 1 201 1 158 1 239 1 178 1 263 1 10 1 83 2 185 1 54 1 33 1 317 1 269 2 187 1 59 1 38 1 225 1 143 1 146 1 
263 1 31 1 83 1 53 1 140 1 317 1 59 1 7 1 227 1 156 1 
356 5 22 2 136 10 239 1 83 5 140 5 235 2 97 2 269 2 5 2 77 5 7 5 130 5 201 2 327 1 
158 1 178 1 68 1 234 1 10 1 140 1 54 1 3 1 187 1 76 1 6 1 38 1 225 1 143 1 227 1 146 1 106 1 
314 2 68 1 263 1 10 1 83 1 367 1 54 1 24 2 99 1 317 1 348 1 274 2 59 1 7 1 301 1 156 1 106 2 65 2 262 1 
42 1 234 3 280 1 172 1 23 1 24 1 3 2 253 1 196 1 28 1 6 2 158 2 314 1 291 1 292 1 266 2 160 1 368 1 107 1 206 1 55 1 13 1 189 1 274 1 38 3 225 1 114 1 191 1 143 2 40 1 65 1 230 1 
356 2 136 4 263 1 83 1 140 4 218 1 99 1 317 1 348 1 59 1 77 2 130 2 7 2 227 2 156 1 
48 1 252 1 20 1 
48 1 252 1 20 1 
48 1 252 1 20 1 
48 1 228 1 20 1 
48 1 264 1 257 1 226 1 20 1 
48 1 228 1 20 1 
48 1 228 1 20 1 
48 1 20 1 
123 1 100 1 
363 1 42 2 292 2 266 4 343 3 235 1 107 8 185 1 33 1 23 2 218 1 254 4 286 2 189 2 28 4 354 1 129 1 201 1 132 1 232 1 
254 3 363 1 286 2 28 3 343 2 129 1 354 1 107 6 235 1 185 1 201 1 33 1 218 1 220 1 
42 1 22 1 179 1 292 1 266 2 343 2 235 1 107 4 97 1 23 1 254 2 5 1 286 1 189 1 28 2 201 1 232 1 
254 3 133 1 5 1 22 1 52 1 28 1 104 1 235 1 107 4 369 1 
254 3 133 1 5 1 22 1 322 1 28 1 104 1 235 1 107 4 369 1 
28 1 104 1 107 1 
254 1 133 1 107 1 
42 1 22 1 179 1 292 1 266 2 343 3 107 6 235 1 23 1 97 1 254 3 5 1 189 1 286 2 28 3 201 1 327 1 232 1 
148 1 42 1 170 1 22 2 235 2 23 1 97 2 254 6 338 1 283 1 5 2 286 1 28 6 104 1 201 2 133 1 52 1 292 1 266 2 343 2 107 12 12 1 270 1 189 1 232 1 
343 2 235 1 107 6 185 1 33 1 254 3 286 1 28 3 129 1 201 1 232 1 
363 1 42 1 292 1 266 2 343 2 185 1 107 3 23 1 254 1 284 1 286 1 189 1 28 2 129 1 354 1 132 1 232 1 
42 1 292 1 119 1 266 2 343 5 185 2 107 10 235 2 23 1 33 1 254 5 12 1 189 1 286 3 28 5 129 2 201 2 232 2 
42 1 292 1 266 2 343 1 235 1 107 2 23 1 254 2 5 1 12 1 189 1 232 1 
42 1 22 1 292 1 266 2 343 2 235 1 107 4 97 1 23 1 254 2 5 1 12 1 286 1 189 1 28 2 201 1 232 1 
42 3 292 3 266 6 343 2 107 3 185 1 23 3 254 1 284 1 12 1 189 3 286 1 28 2 129 1 132 1 193 1 232 1 
331 1 42 4 22 3 235 4 23 4 97 2 218 1 254 13 5 3 286 3 28 11 129 1 104 3 132 1 105 1 201 3 133 3 363 1 52 1 179 1 292 4 266 8 343 5 185 1 107 24 369 1 33 1 12 1 189 4 354 1 193 1 192 1 232 2 
42 1 235 1 23 1 218 1 254 4 283 1 286 2 28 4 104 1 129 1 201 1 133 1 363 1 52 1 292 1 266 2 343 2 107 8 185 1 33 1 12 1 189 1 354 1 
133 1 42 2 22 1 52 1 179 1 292 2 266 4 235 1 107 4 369 1 23 2 254 3 5 1 283 1 12 1 189 2 28 1 104 1 
148 1 42 3 170 1 22 2 235 3 23 3 97 2 218 1 338 1 254 9 283 1 5 2 286 3 28 10 129 1 104 1 201 3 132 1 133 1 363 1 52 1 179 1 292 3 266 6 343 4 185 1 107 19 33 1 12 1 270 1 189 3 354 1 232 1 
148 1 42 3 170 1 22 2 235 3 23 3 97 1 218 1 254 10 338 1 283 1 5 2 286 3 28 7 129 1 104 1 132 1 201 2 133 1 363 1 52 1 179 1 292 3 266 6 343 5 185 1 107 17 33 1 12 1 270 1 189 3 354 1 232 2 
42 1 235 1 23 1 218 1 254 4 283 1 286 2 28 4 104 1 129 1 201 1 133 1 363 1 52 1 292 1 266 2 343 2 107 8 185 1 33 1 12 1 189 1 354 1 
148 1 42 1 170 1 22 2 235 2 23 1 97 2 254 6 338 1 283 1 5 2 286 1 28 6 104 1 201 2 133 1 52 1 292 1 266 2 343 2 107 12 12 1 270 1 189 1 232 1 
148 1 170 1 42 4 22 2 235 3 23 4 97 1 218 1 338 1 254 10 283 1 5 2 286 3 28 8 129 1 104 1 201 2 132 2 133 1 363 1 52 1 179 1 292 4 266 8 343 5 185 1 107 18 33 1 12 1 270 1 189 4 354 1 232 2 
148 1 170 1 42 4 22 3 235 3 23 4 97 2 338 1 254 9 283 1 5 3 286 3 28 7 104 1 201 2 132 2 133 1 52 1 292 4 266 8 343 6 107 16 12 1 270 1 189 4 193 1 232 3 
363 1 343 6 107 7 185 3 235 1 33 1 254 3 286 3 28 4 354 2 129 3 201 1 232 3 
148 1 170 1 42 4 22 2 235 3 23 4 97 1 218 1 338 1 254 10 283 1 5 2 286 3 28 8 129 1 104 1 201 2 132 2 133 1 363 1 52 1 292 4 266 8 343 4 185 1 107 18 33 1 12 1 270 1 189 4 354 1 193 1 232 1 
158 1 167 1 234 1 38 1 337 1 40 1 302 1 
167 1 158 1 313 1 238 1 215 1 234 1 337 1 224 1 244 1 38 1 40 1 302 1 
55 1 243 1 126 1 196 1 13 1 314 1 274 1 191 1 24 1 65 1 220 1 
158 1 168 1 314 1 234 2 368 1 280 1 24 1 206 1 55 1 196 1 13 1 274 1 6 1 38 2 191 1 143 1 40 1 65 1 
168 1 234 2 280 1 196 3 6 2 288 1 158 2 314 1 265 1 368 2 206 1 55 1 319 1 296 1 13 2 274 1 38 2 191 1 91 1 143 1 40 1 65 1 146 1 
168 1 234 2 196 3 6 2 288 1 202 1 158 2 314 2 265 1 368 2 206 1 55 1 319 1 296 1 13 2 274 2 38 2 191 1 91 1 143 1 40 1 300 1 65 2 146 1 
212 1 314 1 10 1 368 1 54 1 205 1 319 1 55 1 296 1 75 1 13 1 271 1 196 4 274 1 191 1 288 1 65 1 
314 3 32 1 10 2 140 1 368 1 54 2 161 1 24 1 205 1 319 1 55 1 296 1 75 1 13 1 196 4 274 3 191 1 227 1 288 1 202 1 65 3 106 1 
55 1 314 1 256 1 274 1 191 1 65 1 
289 1 30 1 314 7 43 1 250 1 368 1 304 1 24 2 162 1 154 1 55 2 125 1 320 1 256 1 13 2 196 3 197 1 127 1 274 6 191 3 65 7 
168 1 42 2 120 1 234 2 250 1 335 1 235 1 280 1 172 2 23 2 218 1 253 2 254 3 196 1 286 2 29 1 28 3 6 1 198 1 129 1 201 1 341 1 158 1 363 1 314 1 222 1 292 2 266 4 343 2 368 1 107 6 185 1 33 1 206 1 55 1 13 1 15 1 189 2 274 1 38 2 114 1 354 1 191 1 143 1 40 2 65 1 230 1 
234 1 235 2 3 1 196 2 6 1 7 5 156 2 201 2 106 2 158 1 9 1 239 1 10 3 53 1 54 3 161 1 205 1 297 1 59 2 301 1 65 1 213 1 68 1 119 1 24 1 75 1 76 1 129 1 314 1 178 1 32 1 263 2 31 1 83 4 140 2 185 1 33 1 317 2 269 2 187 1 274 1 225 1 38 1 227 2 143 1 146 1 326 1 
55 1 196 2 13 1 314 2 256 1 274 2 43 1 250 1 191 2 368 1 276 1 65 2 205 1 
290 1 314 4 250 1 24 1 243 1 55 1 126 1 13 1 196 1 274 4 191 1 202 1 65 4 
289 1 314 2 368 1 304 1 347 1 56 1 55 1 296 1 13 1 196 1 274 2 308 1 191 2 65 2 
55 1 314 1 273 1 360 1 274 1 180 1 191 1 299 1 24 1 65 1 
55 1 125 1 320 1 196 1 13 1 351 1 314 2 274 2 250 1 191 1 65 2 
290 1 314 5 250 1 24 1 243 1 55 2 296 1 126 1 320 1 13 2 196 3 274 4 127 1 197 1 191 2 65 5 
290 1 314 5 250 1 24 1 243 1 55 2 296 1 126 1 320 1 13 2 196 3 274 4 197 1 191 2 145 1 65 5 
158 1 168 1 314 1 234 2 368 1 24 1 206 1 55 1 196 1 13 1 274 1 6 1 38 2 191 1 143 1 40 1 300 1 65 1 
289 1 30 1 314 1 43 1 368 1 304 1 55 1 296 1 13 1 196 1 274 1 191 2 65 1 
318 1 1 1 279 1 139 1 40 1 
159 1 9 1 32 1 265 1 1 2 279 1 10 2 139 2 140 1 54 2 122 1 318 2 128 1 91 1 227 1 40 1 19 1 146 1 166 1 
318 1 150 1 279 1 139 1 
122 1 279 1 166 1 
60 1 324 1 231 1 220 1 
134 1 177 1 60 1 305 1 137 1 324 1 231 1 
305 1 261 1 51 1 
134 3 177 1 137 1 342 1 349 1 88 1 113 1 60 1 305 3 298 2 324 1 231 1 
134 2 332 1 177 1 305 1 137 1 325 1 
134 1 188 1 177 1 273 1 60 1 305 1 180 1 353 1 137 1 342 1 84 1 
134 1 177 1 60 1 305 1 137 1 342 1 231 1 
134 1 177 1 305 1 137 1 324 1 342 1 231 2 
134 2 169 1 177 2 60 1 305 2 137 2 342 1 223 1 63 1 231 1 
134 3 177 1 137 1 342 1 37 1 188 1 60 2 305 3 324 1 229 1 325 2 231 1 147 1 
134 2 177 1 180 2 137 1 342 1 84 1 255 1 60 1 273 1 305 2 324 1 299 1 325 1 246 1 231 1 
134 2 332 1 177 1 305 1 137 1 342 1 325 1 93 1 
134 1 177 1 60 1 305 1 137 1 324 1 342 1 231 1 
134 4 177 1 137 1 88 1 349 1 37 1 188 1 60 3 305 4 298 1 324 2 309 1 325 2 231 2 
134 2 177 1 366 1 82 1 137 1 342 1 60 1 305 2 324 1 325 1 64 1 231 1 
134 3 233 1 177 1 137 1 342 1 349 1 88 2 60 1 305 3 298 2 324 1 231 1 
157 1 60 2 183 2 361 1 
134 1 177 1 305 1 171 1 137 1 342 1 
134 2 177 1 60 1 305 2 137 1 324 1 342 1 325 1 231 1 147 1 
211 1 
134 1 177 1 60 1 305 1 137 1 324 1 342 1 231 1 
134 3 177 1 60 1 305 3 298 1 137 1 324 1 342 1 325 1 147 1 231 1 
37 1 188 1 60 1 309 1 
60 1 231 1 

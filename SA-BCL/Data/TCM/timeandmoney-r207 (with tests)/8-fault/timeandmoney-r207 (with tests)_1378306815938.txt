#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (23,76) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 215 179 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (150,365) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (23,76) 195 161 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 215 179 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (23,76) 195 252 (155,335) (155,335) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
185 1 228 3 176 1 37 1 152 3 14 2 180 1 38 1 80 1 100 1 156 2 148 2 352 1 
185 1 228 9 325 1 188 1 283 1 60 2 164 1 37 1 262 1 166 2 38 2 309 1 65 1 240 1 100 4 288 2 148 5 9 1 176 1 48 2 152 9 14 2 180 1 80 6 156 2 279 1 352 3 353 1 
185 1 228 9 325 1 188 1 283 1 60 2 164 1 37 1 262 1 166 2 38 2 309 1 65 1 240 1 100 4 288 2 148 5 9 1 176 1 48 2 152 9 14 2 180 1 80 6 156 2 279 1 352 3 353 1 
185 1 228 10 325 1 188 1 283 1 60 2 164 1 37 1 262 1 166 2 38 2 309 1 65 1 240 1 100 5 288 2 148 6 9 1 176 1 48 2 152 10 14 2 180 1 80 7 156 2 279 1 352 4 353 1 
185 1 228 7 325 1 188 1 283 1 60 2 164 1 37 1 262 1 166 1 38 2 65 1 240 1 100 3 288 2 148 4 9 1 176 1 48 2 152 7 14 2 180 1 80 4 156 2 279 1 352 2 353 1 
185 1 228 4 176 1 60 1 166 2 48 1 152 4 14 1 180 1 80 3 309 1 65 1 100 2 288 1 156 1 148 3 352 1 353 1 
185 1 228 2 17 1 188 1 176 1 164 1 60 1 272 1 152 2 14 1 180 1 38 1 239 1 156 1 288 1 148 1 
185 1 228 9 325 1 60 1 37 1 262 1 166 2 38 1 65 1 309 1 100 4 288 1 125 1 148 5 105 1 176 1 48 1 152 9 14 2 80 7 180 1 156 2 352 3 353 1 
185 1 228 9 325 1 60 1 37 1 262 1 166 2 38 1 65 1 309 1 100 4 288 1 125 1 148 5 105 1 176 1 48 1 152 9 14 2 80 7 180 1 156 2 352 3 353 1 
324 1 370 1 355 1 26 1 104 1 304 1 19 1 347 1 337 1 305 1 110 1 99 1 338 1 5 1 
245 1 
167 1 1 1 274 1 370 1 355 2 245 1 5 2 101 1 
370 2 355 5 244 1 138 1 245 1 187 1 356 1 200 2 318 1 167 1 248 1 121 2 111 1 274 1 217 1 5 5 101 2 126 1 311 2 
167 1 10 1 245 1 
96 2 245 1 221 1 
337 2 110 2 99 2 26 2 104 2 338 1 19 2 232 1 
205 2 206 2 208 1 58 1 332 1 19 2 333 2 232 1 211 1 337 2 169 1 363 1 92 1 305 1 62 1 284 1 99 2 338 1 26 2 104 2 291 1 133 1 319 2 178 1 110 2 350 1 224 2 250 1 226 1 204 1 254 1 116 1 280 1 
337 1 305 1 110 1 99 1 26 1 104 1 338 1 304 1 19 1 347 1 
355 1 26 1 245 1 104 1 212 1 167 1 305 1 154 1 99 1 30 1 5 1 172 1 192 1 253 1 
355 2 26 1 245 1 104 1 19 1 212 1 167 1 337 1 110 1 305 1 99 1 5 2 172 1 192 1 253 1 
370 1 355 1 174 1 5 1 101 1 
167 1 274 1 370 1 355 2 245 1 5 2 345 1 101 1 
355 1 5 1 101 1 
128 1 26 2 104 2 19 1 232 2 337 1 110 1 348 1 99 2 
195 1 76 1 150 1 
206 1 58 1 333 1 232 1 133 1 319 1 305 1 350 1 238 1 204 1 
10 1 232 1 
206 1 58 1 26 1 104 1 19 1 333 1 76 1 319 1 337 1 350 1 218 1 99 1 190 1 204 1 
26 5 104 5 19 4 232 1 107 1 337 4 110 1 348 1 296 1 218 2 99 5 30 1 190 1 300 1 
337 2 34 1 305 1 99 2 26 2 104 2 19 2 347 1 
337 3 110 1 218 1 99 3 26 3 104 3 19 3 232 1 
337 1 305 1 99 1 26 1 104 1 19 1 347 1 
337 1 305 1 128 1 110 1 348 1 99 1 26 1 104 1 19 1 
205 2 206 1 355 1 208 1 58 1 332 1 19 3 333 1 232 1 212 1 362 1 337 3 169 1 363 1 92 1 305 1 62 1 218 1 99 3 338 1 5 1 190 1 172 1 192 1 198 1 26 3 104 3 291 1 178 1 319 1 110 2 348 1 350 1 224 1 250 1 204 1 253 1 280 1 
337 1 296 1 218 1 99 2 26 2 104 2 30 1 19 1 232 1 
355 1 26 3 198 1 245 1 104 3 19 3 212 1 337 3 273 1 110 1 305 1 348 1 218 2 99 3 5 1 190 1 172 1 253 1 192 1 
337 2 110 1 348 1 218 1 99 2 26 2 104 2 19 2 76 1 150 1 
206 1 58 1 333 1 232 1 133 1 319 1 305 1 350 1 204 1 
206 1 104 1 139 1 258 1 257 1 333 1 232 1 78 1 319 1 350 1 99 1 277 1 241 1 375 1 323 1 
205 2 208 1 213 1 363 1 169 2 365 1 64 1 39 1 23 1 150 2 195 2 290 1 70 1 291 1 76 2 178 1 13 1 224 4 250 1 374 1 321 1 15 1 254 2 280 1 
337 1 34 1 305 1 99 1 26 1 104 1 19 1 192 1 
171 1 199 1 61 1 
50 1 371 1 330 1 171 2 6 1 61 2 
171 1 61 1 
171 1 61 1 
330 1 6 1 
330 1 6 1 
330 1 6 1 
118 1 171 1 61 1 
118 1 171 1 61 1 
118 1 171 1 61 1 
369 1 171 1 61 1 
369 1 171 1 61 1 
369 1 171 1 61 1 
355 1 87 1 19 2 232 1 140 1 261 1 61 1 337 2 171 1 99 2 5 1 368 1 196 1 342 1 26 2 103 1 104 2 199 1 131 1 27 1 12 1 135 1 376 1 33 1 
196 2 326 1 355 2 129 2 342 2 245 1 140 2 27 1 210 1 61 2 50 1 216 1 51 1 171 2 287 1 135 2 5 2 376 3 367 1 
239 1 225 1 264 2 60 2 48 1 
288 1 60 1 48 1 
239 1 288 1 60 1 
366 1 239 1 225 1 264 1 60 3 48 2 
239 1 225 1 264 1 359 1 60 2 48 1 
355 5 327 1 356 1 141 1 261 1 143 1 167 1 121 1 96 3 170 2 5 5 101 1 126 2 311 1 289 1 42 2 290 1 266 1 370 4 341 1 44 1 103 1 244 3 245 2 131 1 221 1 200 1 13 1 274 1 374 1 84 2 15 1 
355 9 356 1 141 2 143 2 167 1 168 1 121 2 96 9 285 5 170 6 5 9 310 1 101 6 242 1 126 6 311 2 42 6 290 3 266 3 370 7 341 1 343 1 244 8 174 5 245 5 131 4 221 3 271 1 200 2 13 3 248 1 274 1 83 1 374 3 15 3 
327 1 355 3 141 1 143 1 167 1 121 1 96 4 170 2 5 3 311 1 126 2 42 2 266 1 290 1 370 2 44 1 244 3 245 3 131 1 221 2 200 1 13 1 248 1 374 1 84 1 15 1 
355 4 327 1 141 1 143 1 167 1 168 1 121 1 96 7 170 4 5 4 310 1 311 1 126 4 42 4 266 2 290 2 370 3 44 1 244 5 245 4 131 2 221 3 271 1 200 1 13 2 248 1 374 2 84 2 15 2 
349 1 
10 1 277 1 303 1 
277 1 123 1 
277 1 257 1 375 1 
277 1 231 1 
277 1 375 1 
29 1 277 3 119 1 303 2 257 1 375 1 
16 1 290 1 7 1 344 1 270 1 334 1 165 1 335 1 213 2 169 3 97 1 224 7 155 1 374 1 321 3 252 2 124 1 254 4 
16 2 205 2 18 1 208 1 329 1 334 1 235 4 335 1 213 5 363 1 169 15 97 1 124 2 127 3 265 1 266 3 290 4 313 1 7 5 269 1 344 2 270 2 291 1 77 1 13 3 155 1 224 31 250 1 374 4 252 3 321 10 298 1 15 3 254 16 
16 1 290 1 7 1 205 4 8 1 208 2 344 1 270 1 291 2 335 1 213 3 169 4 363 2 97 1 155 1 224 9 122 1 250 2 374 1 321 4 252 2 298 1 124 1 254 5 
16 1 290 1 7 1 344 1 270 1 334 1 335 1 213 2 169 3 97 1 224 7 155 1 374 1 321 3 252 2 124 1 254 4 
16 1 290 1 7 1 344 1 270 1 334 1 335 1 213 2 169 3 97 1 224 7 155 1 374 1 321 3 252 2 124 1 254 4 
0 1 228 1 206 1 328 1 139 1 333 1 74 2 234 2 319 1 28 1 152 1 14 1 263 1 79 1 94 2 350 1 4 1 38 2 277 1 156 1 375 1 322 1 323 1 
228 1 186 1 206 1 139 1 333 1 234 1 60 2 336 1 36 1 94 1 95 1 366 1 38 1 239 1 288 1 68 1 220 1 45 1 74 1 48 1 319 1 152 1 14 1 180 1 156 1 323 1 
185 1 228 2 186 1 206 1 139 1 333 1 234 1 60 2 36 1 94 1 95 1 366 1 38 1 239 1 288 1 148 1 68 1 220 1 243 1 45 1 176 1 74 1 48 1 319 1 152 2 14 1 80 1 180 1 156 1 323 1 
185 1 228 3 186 1 206 1 328 1 139 1 333 1 234 1 60 2 336 1 36 1 366 1 94 1 95 1 38 1 239 1 288 1 148 1 68 1 45 1 176 1 74 1 48 1 319 1 152 3 14 1 80 2 278 1 156 1 323 1 
185 1 228 2 186 1 206 1 139 1 333 1 234 1 60 2 336 1 94 1 95 1 366 1 38 1 239 1 288 1 148 1 68 1 176 1 74 1 319 1 48 1 152 2 80 2 278 1 323 1 
194 1 
206 1 355 2 356 1 333 1 346 1 200 1 319 1 179 1 215 1 121 1 274 1 350 1 5 2 101 2 126 1 311 1 
1 1 355 3 212 1 305 1 63 1 99 1 307 1 5 3 172 1 219 1 191 1 192 1 101 2 26 1 104 1 316 1 151 2 222 1 274 1 154 1 30 1 253 1 
86 1 1 1 355 3 212 1 167 1 305 1 63 1 99 1 5 3 172 1 219 1 191 1 101 1 192 1 26 1 104 1 245 1 316 1 151 3 222 1 154 1 274 1 30 1 253 1 
86 1 1 1 355 3 212 1 167 1 305 1 63 1 99 1 307 1 5 3 172 1 219 1 191 1 192 1 101 2 26 1 104 1 245 1 316 1 151 3 222 1 274 1 154 1 181 1 30 1 253 1 
354 1 86 4 159 1 1 1 355 5 356 1 259 1 357 1 212 1 167 5 121 1 305 1 63 1 99 1 307 4 5 5 172 1 219 1 191 1 101 7 192 1 126 1 311 1 41 1 314 2 244 1 26 1 245 5 104 1 221 2 73 1 316 1 151 6 200 1 222 1 154 1 274 3 373 1 82 2 181 4 30 1 377 2 253 1 299 2 
86 2 96 2 99 1 5 4 191 1 192 1 101 4 244 1 104 1 245 2 151 4 200 1 154 1 253 1 299 2 355 4 356 1 259 1 212 1 167 1 305 1 121 1 63 1 307 2 172 1 219 1 311 1 126 1 26 1 314 2 315 1 73 1 316 1 221 2 222 1 274 2 82 2 181 2 30 1 377 2 
86 2 354 1 355 4 356 1 259 1 357 1 212 1 167 1 121 1 305 1 63 1 307 2 99 1 5 4 172 1 219 1 191 1 101 4 192 1 126 1 311 1 314 2 244 1 26 1 245 1 104 1 221 2 73 1 316 1 151 4 200 1 222 1 274 2 154 1 373 1 181 2 82 2 30 1 377 2 253 1 299 2 
86 2 354 1 355 4 356 1 259 1 357 1 212 1 167 1 121 1 305 1 63 1 307 2 99 1 5 4 172 1 219 1 191 1 101 4 192 1 126 1 311 1 314 2 244 1 26 1 245 1 104 1 221 2 73 1 316 1 151 4 200 1 222 1 274 2 154 1 373 1 181 2 82 2 30 1 377 2 253 1 299 2 
86 2 354 1 355 4 356 1 259 1 260 2 120 1 212 1 167 1 121 1 305 1 96 2 63 1 307 2 99 1 5 4 172 1 219 1 191 1 101 4 192 1 126 1 311 1 314 2 244 1 26 1 245 1 104 1 316 1 151 4 200 1 222 1 109 1 274 2 154 1 276 2 181 2 30 1 52 1 377 2 253 1 
354 1 86 3 355 4 356 1 259 1 357 1 212 1 167 1 121 1 305 1 63 1 99 1 307 3 5 4 172 1 219 1 191 1 192 1 101 5 126 1 311 1 41 1 314 2 244 1 26 1 245 1 104 1 221 2 73 1 316 1 151 5 200 1 222 1 274 2 154 1 373 1 82 2 181 3 30 1 377 2 253 1 299 2 
354 1 86 3 355 4 356 1 259 1 357 1 212 1 167 1 121 1 305 1 63 1 99 1 307 3 5 4 172 1 219 1 191 1 192 1 101 5 126 1 311 1 41 1 314 2 244 1 26 1 245 1 104 1 221 2 73 1 316 1 151 5 200 1 222 1 274 2 154 1 373 1 82 2 181 3 30 1 377 2 253 1 299 2 
86 2 96 2 99 1 5 4 191 1 192 1 101 4 244 1 104 1 245 1 151 4 200 1 154 1 52 1 253 1 355 4 356 1 259 1 260 2 212 1 167 1 305 1 121 1 63 1 307 2 172 1 219 1 311 1 126 1 26 1 314 2 315 1 316 1 222 1 274 2 276 2 181 2 30 1 377 2 
0 1 205 4 206 8 208 2 139 2 332 1 19 1 333 7 336 1 211 1 337 1 363 2 169 1 263 1 284 2 64 1 218 1 286 1 99 1 173 1 340 1 243 1 26 1 104 1 291 2 319 8 178 2 292 1 294 1 350 2 277 3 224 2 250 2 136 1 375 2 323 2 254 1 183 1 280 2 
205 2 208 1 19 1 213 1 337 1 363 1 169 2 99 1 150 1 149 1 195 1 266 1 290 1 26 1 104 1 291 1 76 1 178 1 13 1 110 1 348 1 224 3 250 1 374 1 321 1 15 1 254 1 280 1 184 1 
16 1 205 2 208 1 232 2 335 1 213 2 363 1 169 3 64 1 97 1 150 1 195 1 290 1 10 1 344 1 291 1 76 1 178 1 155 1 224 6 250 1 374 1 321 2 252 1 254 3 280 1 
160 1 205 4 208 2 332 1 232 1 235 3 211 1 213 1 169 6 363 2 146 1 265 1 149 1 127 3 150 4 195 11 266 2 290 2 7 1 269 1 72 1 291 2 76 11 178 1 13 2 224 14 250 2 374 1 157 1 321 2 15 1 254 8 280 2 
205 2 206 1 208 1 58 1 332 1 19 1 333 1 232 1 211 1 337 1 363 1 169 1 144 1 218 1 99 1 238 1 190 1 150 1 149 1 26 1 104 1 175 1 291 1 132 1 319 1 178 1 350 1 224 2 250 1 204 1 254 1 280 1 
56 1 205 4 206 1 208 2 161 1 58 1 332 1 19 1 333 1 213 1 337 1 92 1 363 2 3 1 169 4 218 1 99 1 190 1 150 3 149 1 195 3 290 1 266 1 26 1 104 1 291 2 177 1 76 3 13 1 178 2 319 1 350 1 224 7 250 2 31 1 374 1 321 1 204 1 15 1 254 3 280 2 
195 1 290 1 7 1 205 2 208 1 291 1 76 1 178 1 13 1 363 1 64 1 224 2 250 1 39 1 321 1 254 2 150 1 280 1 
195 1 205 2 208 1 70 1 291 1 76 1 178 1 213 1 363 1 169 2 64 1 224 2 250 1 374 1 321 1 15 1 150 1 280 1 
205 2 208 1 213 1 363 1 169 2 64 1 150 2 195 2 290 1 266 1 7 1 291 1 76 2 13 1 178 1 224 4 250 1 374 1 321 2 15 1 254 2 280 1 
195 1 290 1 7 1 205 2 208 1 291 1 76 1 292 1 178 1 13 1 363 1 224 2 250 1 39 1 321 1 254 2 150 1 280 1 
195 1 205 2 208 1 70 1 291 1 76 1 292 1 178 1 213 1 363 1 169 2 224 2 250 1 374 1 321 1 15 1 150 1 280 1 
205 2 208 1 213 1 363 1 169 2 150 2 195 2 290 1 266 1 7 1 291 1 76 2 13 1 178 1 292 1 224 4 250 1 374 1 321 2 15 1 254 2 280 1 
205 2 208 1 213 1 363 1 169 2 150 2 195 2 290 1 266 1 7 1 291 1 76 2 13 1 178 1 224 4 250 1 374 1 321 2 15 1 254 2 280 1 
205 2 206 1 208 1 58 1 332 1 333 1 232 1 211 1 363 1 92 1 169 1 305 1 291 1 133 1 178 1 319 1 350 1 224 2 250 1 204 1 254 1 280 1 
205 2 206 1 208 1 209 1 139 1 332 1 257 1 258 1 333 1 232 1 211 1 363 1 169 1 99 1 241 1 104 1 291 1 78 1 319 1 178 1 350 1 224 2 277 1 250 1 375 1 254 1 323 1 280 1 
205 2 208 1 213 1 363 1 169 2 149 1 150 2 195 2 290 1 266 1 7 1 291 1 76 2 13 1 178 1 224 4 250 1 374 1 321 2 15 1 254 2 280 1 
205 2 206 1 208 1 58 1 333 1 213 1 363 1 92 1 169 2 150 1 195 1 266 1 290 1 243 1 291 1 177 1 76 1 178 1 319 1 13 1 224 3 250 1 374 1 321 1 204 1 15 1 254 1 280 1 
205 2 208 1 19 1 337 1 169 1 363 1 99 1 149 1 150 1 195 1 266 1 290 1 7 1 26 1 104 1 291 1 76 1 178 1 13 1 110 1 153 1 348 1 224 3 250 1 374 1 321 1 15 1 254 2 280 1 
55 1 205 4 207 4 35 1 208 2 59 1 235 4 213 4 364 1 363 2 169 16 122 1 339 1 265 2 127 2 266 4 290 4 7 3 25 2 269 2 291 2 75 1 13 4 112 1 113 1 224 30 250 2 374 4 321 7 32 1 15 4 254 14 
205 2 207 2 35 2 208 1 235 1 169 5 363 1 122 1 265 1 127 1 266 1 290 1 25 1 291 1 75 1 13 1 112 1 113 1 224 10 250 1 374 1 32 2 15 1 254 5 
205 4 207 4 35 1 208 2 59 1 235 5 213 2 364 1 363 2 169 15 122 1 339 1 265 3 127 3 266 3 290 3 7 2 25 1 269 2 11 1 291 2 75 1 13 3 112 1 113 1 224 28 250 2 374 3 321 4 32 2 15 3 254 13 
205 4 207 4 35 1 208 2 59 1 235 5 213 3 364 1 363 2 169 15 122 1 339 1 265 3 127 3 266 3 290 3 7 2 25 1 269 2 11 1 291 2 75 1 13 3 112 1 113 1 224 28 250 2 374 3 321 5 32 2 15 3 254 13 
16 3 205 2 207 4 35 1 208 1 59 1 235 3 335 3 213 6 363 1 169 19 97 3 122 1 339 1 265 2 127 3 266 3 290 6 7 3 25 1 269 1 344 3 291 1 75 1 13 3 112 1 113 1 155 3 224 41 250 1 374 6 252 3 157 1 321 9 32 1 15 3 254 22 
196 1 50 1 326 1 342 1 171 1 287 1 135 1 140 1 69 1 61 1 
199 1 12 1 
196 1 342 1 162 1 171 1 135 1 256 1 227 1 140 1 61 1 
118 1 142 1 
369 1 371 1 2 1 
196 1 326 1 355 1 129 1 342 1 245 1 27 1 140 1 210 1 61 1 50 1 216 1 171 1 287 1 135 1 5 1 376 2 367 1 
196 1 326 1 355 1 129 1 342 1 245 1 27 1 140 1 210 1 61 1 50 1 216 1 171 1 287 1 135 1 5 1 376 2 367 1 
196 1 326 1 355 1 129 1 342 1 245 1 27 1 140 1 210 1 61 1 50 1 216 1 171 1 287 1 135 1 5 1 376 2 367 1 
118 1 371 1 142 1 
118 1 371 1 142 1 
369 1 2 1 
369 1 371 1 2 1 
33 1 368 1 
355 1 87 1 19 2 232 1 140 1 261 1 61 1 337 2 99 2 98 1 171 1 5 1 367 1 368 1 196 1 370 1 129 1 342 1 103 1 26 2 104 2 199 1 131 1 12 1 135 1 376 1 33 1 
205 2 206 2 208 1 139 1 332 1 333 2 211 1 236 1 363 1 169 1 284 2 99 2 308 1 40 1 173 1 24 1 149 1 26 2 104 2 291 1 106 1 319 2 178 1 277 1 224 2 250 1 136 1 375 1 323 1 254 1 280 1 
0 1 206 1 139 1 333 1 319 1 237 1 202 1 263 1 350 1 94 1 4 1 277 1 375 1 323 1 
186 1 206 1 268 1 139 1 333 1 60 2 48 1 336 1 319 1 36 1 202 1 366 1 94 1 95 1 239 1 251 1 288 1 323 1 
186 1 243 1 206 2 268 1 139 1 333 2 60 2 48 1 336 1 319 2 36 1 202 1 366 1 94 1 95 1 239 1 251 1 288 1 323 1 
186 1 206 1 268 1 139 1 333 1 60 2 48 1 336 1 319 1 293 1 36 1 366 1 94 1 95 1 239 1 288 1 323 1 
295 1 
244 1 245 1 356 1 200 1 318 1 167 1 121 1 217 1 311 1 126 1 
42 5 266 2 290 2 130 1 161 1 244 5 245 5 221 5 13 2 214 2 96 10 170 5 374 2 15 2 126 5 
167 1 274 1 355 1 245 1 5 1 101 1 
43 1 206 1 355 1 356 1 333 1 346 1 200 1 319 1 179 1 121 1 215 1 274 1 350 1 5 1 101 2 126 1 311 1 
167 1 217 1 10 1 244 1 245 1 126 1 318 1 
355 1 356 1 167 1 121 1 96 1 5 1 101 1 126 1 311 1 244 1 245 2 221 1 73 1 200 1 274 1 82 1 299 1 
231 2 139 3 333 3 89 1 88 1 141 2 96 12 5 5 101 5 42 6 290 2 243 1 43 1 244 9 245 8 47 2 246 2 346 1 200 4 13 2 350 1 253 2 15 2 206 3 355 5 161 2 119 1 356 4 303 2 358 1 257 3 167 2 214 2 121 4 217 1 170 6 123 3 66 2 67 1 311 4 126 8 266 2 267 2 130 2 221 6 318 1 319 3 275 2 274 3 277 10 374 2 375 3 182 2 323 4 
281 1 355 1 59 1 356 2 235 1 167 1 214 1 121 2 96 6 170 5 22 1 5 1 101 1 311 2 126 4 265 1 127 1 42 5 266 2 290 2 102 1 244 7 245 4 46 1 221 3 200 2 13 2 274 1 203 1 374 2 15 2 
16 1 324 1 355 1 302 1 356 1 304 1 357 1 19 1 337 1 305 1 214 2 121 1 97 1 99 1 338 1 5 1 311 1 126 2 290 2 130 1 344 1 244 2 26 1 104 1 200 1 347 1 110 1 374 1 
205 2 206 1 208 1 58 1 332 1 19 2 333 1 232 1 337 2 92 1 363 1 169 1 62 1 99 2 338 1 26 2 104 2 291 1 319 1 178 1 110 2 350 1 224 1 250 1 204 1 280 1 
42 2 244 1 245 4 356 1 221 2 141 1 200 1 346 1 167 2 121 1 96 4 170 2 252 1 126 2 311 1 
282 1 326 1 342 1 140 1 33 1 
342 1 140 1 158 1 
342 1 140 1 158 1 
342 1 140 1 158 1 
249 1 342 1 140 1 
249 1 342 1 140 1 
249 1 342 1 140 1 
342 1 140 1 
171 1 61 1 
16 2 290 2 205 2 7 2 208 1 344 2 302 1 291 1 213 3 363 1 169 5 97 1 224 10 250 1 122 1 374 2 321 5 254 5 
290 1 205 2 7 1 208 1 291 1 13 1 363 1 224 2 122 1 250 1 321 1 254 2 
266 1 290 1 205 2 7 1 208 1 291 1 13 1 213 1 169 2 363 1 224 4 122 1 250 1 374 1 321 2 15 1 254 2 
16 1 205 6 7 1 208 3 344 1 331 1 291 3 213 1 364 1 169 2 363 3 224 3 122 1 250 3 321 2 298 1 254 1 
16 3 205 10 18 1 208 5 329 1 331 1 235 4 335 1 213 7 169 18 364 1 363 5 97 2 122 1 265 1 127 3 266 3 290 5 7 5 269 1 344 3 291 5 77 1 13 3 114 1 155 1 224 34 250 5 374 5 252 1 321 12 298 2 15 3 254 16 
16 1 290 1 7 1 205 4 208 2 344 1 291 2 335 1 213 2 169 4 363 2 97 1 224 8 155 1 250 2 374 1 252 1 321 3 298 1 254 4 
16 1 290 1 10 1 344 1 335 1 213 2 169 3 97 1 155 1 224 6 374 1 252 1 321 2 254 3 
266 1 290 1 205 2 7 1 208 1 291 1 13 1 213 1 169 2 363 1 114 1 224 4 250 1 374 1 321 2 15 1 254 2 
213 1 290 1 266 1 169 4 7 1 269 1 224 7 374 1 321 2 15 1 254 3 235 2 13 1 127 1 265 1 
16 2 205 4 208 2 331 1 235 2 335 1 213 5 169 12 363 2 97 1 127 2 290 3 266 2 7 4 269 1 344 2 72 1 291 2 13 2 155 1 224 23 250 2 374 3 252 1 321 9 157 1 298 2 15 2 254 11 
169 1 224 1 235 1 
224 1 254 1 127 1 
266 1 290 1 205 2 7 1 208 1 161 1 291 1 13 1 213 2 363 1 169 3 114 1 224 6 250 1 374 1 321 3 15 1 254 3 
205 2 281 1 208 1 59 1 235 1 213 1 169 6 363 1 122 1 22 1 127 1 265 1 266 2 290 2 7 1 102 1 291 1 46 1 13 2 224 12 250 1 374 2 321 2 15 2 254 6 
16 1 290 1 7 1 344 1 213 1 169 3 97 1 224 6 374 1 321 2 254 3 
16 1 7 1 205 2 208 1 344 1 331 1 291 1 335 1 213 1 169 2 363 1 224 3 155 1 250 1 321 2 298 1 254 1 
16 1 205 2 208 1 59 1 235 1 335 1 213 2 169 4 363 1 97 1 122 1 127 1 265 1 290 1 344 1 291 1 224 8 155 1 250 1 374 1 252 1 321 2 254 4 
16 1 205 4 208 2 59 1 235 2 335 1 213 2 169 5 363 2 97 1 122 1 265 1 127 1 266 1 290 2 7 1 269 1 344 1 291 2 13 1 114 1 155 1 224 11 250 2 374 1 252 1 321 3 254 6 
205 6 281 1 208 3 59 1 235 1 213 1 169 7 363 3 122 1 22 1 127 1 265 1 266 2 290 2 7 1 102 1 291 3 46 1 13 2 114 1 224 13 250 3 374 2 321 2 298 1 15 2 254 6 
205 6 281 1 208 3 59 1 235 1 213 1 169 4 363 3 122 1 22 1 127 1 265 1 266 2 290 2 7 1 102 1 291 3 46 1 13 2 114 1 224 11 250 3 374 1 321 2 298 1 15 1 254 7 
16 1 205 2 208 1 59 1 235 1 335 1 213 2 169 4 363 1 97 1 122 1 127 1 265 1 290 1 344 1 291 1 224 8 155 1 250 1 374 1 252 1 321 2 254 4 
205 2 281 1 208 1 59 1 235 1 213 1 169 6 363 1 122 1 22 1 127 1 265 1 266 2 290 2 7 1 102 1 291 1 46 1 13 2 224 12 250 1 374 2 321 2 15 2 254 6 
205 8 281 1 208 4 59 1 235 1 213 1 169 5 363 4 122 1 22 1 265 1 127 1 266 2 290 2 7 1 102 1 291 4 46 1 13 2 114 1 224 12 250 4 374 1 321 2 298 2 15 1 254 7 
205 8 281 1 208 4 59 1 235 1 213 2 169 5 363 4 364 1 122 1 22 1 265 1 127 1 266 2 290 2 7 2 102 1 291 4 46 1 13 2 224 12 250 4 374 1 321 4 298 2 15 1 254 7 
16 3 290 1 7 3 344 3 335 2 213 3 169 4 97 1 224 7 155 1 374 1 321 6 254 3 
205 8 281 1 208 4 59 1 235 1 213 1 169 5 363 4 364 1 122 1 22 1 265 1 127 1 266 2 290 2 7 1 102 1 291 4 46 1 13 2 224 12 250 4 374 1 321 2 298 2 15 1 254 7 
296 1 99 1 26 1 104 1 30 1 232 1 193 1 
255 1 306 1 230 1 296 1 137 1 99 1 26 1 145 1 104 1 30 1 232 1 193 1 
0 1 243 1 206 4 139 1 333 4 360 1 319 4 263 1 350 1 277 1 297 1 375 1 323 1 
206 2 163 1 139 1 358 1 257 1 333 2 319 2 247 1 320 1 21 1 277 1 375 1 323 2 54 1 
206 1 95 1 350 1 239 1 139 1 288 1 333 1 60 1 323 1 319 1 
243 1 206 2 139 1 333 2 319 2 336 1 277 1 136 1 40 1 375 1 323 1 
0 1 243 1 206 5 139 2 358 1 333 4 319 5 294 1 263 1 350 1 277 3 297 1 136 1 375 2 323 2 340 1 
0 1 243 1 206 5 139 2 358 1 333 4 319 5 263 1 350 1 277 3 297 1 136 1 375 2 53 1 323 2 340 1 
0 1 263 1 206 1 350 1 10 1 277 1 139 1 333 1 375 1 323 1 319 1 
206 1 26 1 58 1 104 1 19 1 333 1 232 1 133 1 319 1 337 1 305 1 350 1 218 1 99 1 
206 1 26 1 58 1 104 1 19 1 358 1 333 1 232 1 133 1 319 1 337 1 305 1 218 1 99 1 
206 2 231 1 139 1 358 1 19 2 257 2 333 2 232 1 360 1 212 1 337 1 305 1 218 1 99 2 66 1 241 1 192 1 26 2 104 2 78 1 319 2 277 3 375 2 323 1 
206 3 355 2 231 1 139 1 303 1 358 1 257 1 333 3 360 1 167 1 123 1 66 1 5 2 101 1 245 1 319 3 350 1 223 1 277 4 134 1 375 1 253 1 323 1 
206 3 355 2 231 1 245 1 139 1 303 1 257 1 358 1 333 3 360 1 319 3 167 1 275 1 350 1 277 4 66 1 123 1 5 2 375 1 253 1 101 1 323 1 
206 1 139 1 333 1 323 1 319 1 183 1 
312 1 243 1 206 7 119 1 139 2 257 1 333 6 336 1 319 7 294 1 284 1 320 1 350 2 286 1 277 3 136 1 375 2 340 1 323 3 183 1 54 1 
16 1 205 4 56 1 206 1 208 2 58 1 19 1 333 1 232 2 335 1 213 1 236 1 337 1 169 2 363 2 92 1 97 1 218 1 99 1 149 1 195 1 290 1 243 1 344 1 26 1 104 1 291 2 177 1 76 1 178 2 319 1 224 5 155 1 250 2 374 1 252 1 321 1 204 1 254 3 280 2 
206 1 355 3 356 2 303 1 333 1 167 1 121 2 217 1 123 1 5 3 101 2 126 1 311 2 43 1 370 1 267 1 244 1 245 1 47 1 246 1 200 2 318 1 319 1 275 1 274 1 350 1 277 2 253 1 
243 1 206 2 277 2 139 1 119 1 303 1 257 1 88 1 333 2 375 1 323 2 319 2 183 1 
206 1 26 1 104 2 139 1 257 1 19 1 333 1 232 1 78 1 319 1 337 1 350 1 218 1 277 1 99 2 375 1 241 1 323 1 
312 1 206 1 119 1 139 1 358 1 257 1 333 1 319 1 320 1 277 1 375 1 323 2 54 1 
49 1 197 1 99 1 26 1 308 1 104 1 24 1 106 1 85 1 
197 1 372 1 90 1 
49 1 229 1 197 1 232 1 85 1 
197 1 229 2 370 1 355 2 198 1 245 1 232 1 90 1 212 1 167 1 201 1 49 2 305 1 372 1 5 2 172 1 253 1 192 1 85 2 
185 1 152 1 228 1 14 1 180 1 156 1 176 1 148 1 
185 2 228 4 176 2 164 1 108 1 152 4 14 1 80 2 100 1 147 1 156 1 148 3 301 1 352 1 
185 1 228 2 71 1 176 1 152 2 14 1 180 1 81 1 80 1 156 1 148 1 125 1 
228 3 185 1 176 1 164 2 20 1 108 2 152 3 14 1 180 1 156 1 148 1 301 1 
189 1 93 1 148 2 361 2 
152 1 228 1 14 1 57 1 180 1 156 1 
185 1 325 1 152 2 228 2 14 1 80 1 180 1 156 1 176 1 148 1 
117 1 
185 1 152 1 228 1 14 1 180 1 156 1 176 1 148 1 
185 1 10 1 176 1 148 1 
185 1 152 1 228 1 14 1 156 1 176 1 148 1 
152 1 38 1 234 1 
228 3 185 1 176 1 317 1 164 2 108 1 152 3 14 1 180 1 156 1 148 1 301 1 
185 1 152 2 228 2 14 1 80 1 156 1 176 1 148 1 166 1 
228 1 60 1 48 1 152 1 14 1 180 1 65 1 100 1 156 1 288 1 148 1 
185 1 152 1 228 1 14 1 180 1 156 1 148 1 
185 2 152 1 228 1 14 1 180 1 156 1 176 1 
185 1 228 2 91 1 152 2 14 2 351 1 180 1 156 2 148 1 115 1 
185 1 228 3 325 1 176 1 262 1 152 3 14 1 180 1 80 2 100 1 156 1 148 2 352 1 
185 1 228 2 176 1 60 2 233 1 48 1 152 2 14 1 366 1 180 1 80 1 239 1 156 1 288 1 148 1 
185 1 228 4 176 1 166 1 152 4 14 2 180 1 80 2 309 1 100 1 156 2 148 2 352 1 
228 3 185 1 325 1 176 1 164 1 152 3 14 1 80 1 180 1 156 1 148 1 
100 1 147 1 148 1 352 1 
185 1 148 1 

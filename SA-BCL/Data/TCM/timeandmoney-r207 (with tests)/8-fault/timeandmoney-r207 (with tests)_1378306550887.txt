#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) (332,373) (332,373) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) (332,373) (332,373) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) (332,373) (332,373) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) (332,373) (332,373) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) 277 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (40,292) 277 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 276 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 62 37 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 62 (44,262) 105 205 (23,184) 10 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 62 (73,342) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 62 (44,262) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 62 (44,262) 105 205 (23,184) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 62 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 1 339 1 13 2 86 1 319 1 183 1 354 1 332 1 274 1 256 1 373 1 173 1 361 1 40 1 292 1 121 2 
74 1 339 1 13 2 86 1 319 1 183 1 354 1 332 1 274 1 256 1 373 1 173 1 361 1 40 1 292 1 121 2 
74 1 339 1 13 2 86 1 319 1 183 1 354 1 332 1 274 1 256 1 373 1 173 1 361 1 40 1 292 1 121 2 
74 1 339 1 13 2 86 1 319 1 183 1 354 1 332 1 274 1 256 1 373 1 173 1 361 1 40 1 292 1 121 2 
74 1 339 1 13 4 86 1 138 1 183 1 354 1 310 1 113 3 355 1 187 3 361 1 38 2 131 1 226 1 235 1 121 4 329 2 
74 1 13 2 339 1 359 1 319 1 183 1 354 1 274 1 309 1 256 1 113 1 361 1 131 1 226 1 121 2 219 1 
361 1 74 1 13 1 40 1 354 1 121 1 
187 1 179 1 277 1 361 1 74 1 13 2 40 1 354 1 121 2 
187 1 179 1 277 1 361 1 74 1 13 2 40 1 354 1 121 2 
276 1 305 1 3 1 
60 1 221 2 305 1 
338 1 181 2 348 2 296 1 100 2 140 2 45 2 34 2 
317 1 338 1 21 1 76 1 181 2 185 1 296 1 344 1 100 2 102 1 163 1 54 1 56 1 81 1 323 1 130 2 348 2 281 1 58 1 282 2 29 1 284 1 34 3 84 1 196 2 303 1 170 1 36 1 370 1 140 2 243 1 65 1 262 1 315 2 72 1 357 2 45 3 
338 1 181 1 348 1 349 1 230 1 100 1 328 1 140 1 45 1 34 1 
19 1 206 1 338 1 181 2 295 1 230 1 3 1 100 1 233 1 348 1 349 1 328 2 34 2 111 1 305 1 199 1 140 1 16 1 94 1 337 1 45 2 
19 1 206 1 338 1 181 2 230 1 100 2 3 1 233 2 348 2 349 1 328 2 34 2 305 1 199 1 140 2 16 1 94 1 337 2 45 2 
233 1 312 1 337 1 88 1 53 1 
233 2 312 1 305 1 61 1 337 2 3 1 236 1 53 1 
233 1 312 1 337 1 
338 1 181 1 230 1 100 1 140 1 53 1 233 1 16 1 348 1 337 1 349 1 328 1 45 1 34 1 
305 1 
233 2 166 1 312 1 305 1 337 2 3 1 236 1 53 1 
0 1 338 1 96 2 124 2 181 1 320 2 254 2 230 1 2 2 100 1 3 2 127 4 53 2 278 1 233 5 346 1 9 1 82 1 348 1 133 1 349 1 328 1 108 1 236 1 34 1 239 1 305 2 286 1 140 1 16 1 142 1 312 2 204 2 120 1 337 5 266 5 45 1 249 1 
276 1 296 1 
50 1 181 2 296 2 100 1 140 1 348 1 18 1 45 2 34 2 
91 1 30 1 217 1 
84 1 317 1 196 1 21 1 296 1 243 1 163 1 56 1 262 1 323 1 282 1 107 1 357 1 45 1 284 1 34 1 
317 1 84 1 196 1 21 1 59 1 181 1 100 1 243 1 163 1 262 1 39 1 56 1 323 1 348 1 282 1 217 1 357 1 284 1 45 2 34 2 
39 1 181 3 348 3 296 1 100 3 140 1 45 3 34 3 
181 1 348 1 349 1 100 1 328 1 45 1 34 1 
50 1 181 1 348 1 18 1 100 1 328 1 140 1 45 1 34 1 
338 1 206 1 50 1 344 1 296 1 100 3 102 1 163 1 56 1 104 1 348 3 59 1 303 1 170 1 114 1 262 1 357 1 72 1 315 1 19 1 317 1 21 1 181 3 185 1 233 1 323 1 130 2 281 1 282 1 29 1 328 2 284 1 34 4 84 1 196 1 36 1 199 1 370 1 140 2 243 1 39 1 94 1 337 1 143 1 45 4 
39 1 240 1 111 1 181 2 348 1 296 1 100 1 45 2 34 2 
19 1 206 1 59 1 50 1 181 3 305 1 100 3 199 1 140 1 114 1 233 1 39 2 348 3 190 1 94 1 337 1 328 1 45 3 34 3 
50 1 181 2 100 2 140 1 39 1 348 2 30 1 217 1 45 2 34 2 
84 1 317 1 196 1 21 1 296 1 243 1 163 1 56 1 262 1 323 1 282 1 357 1 45 1 284 1 34 1 
73 1 84 1 317 1 196 1 21 1 296 1 243 1 186 1 163 1 323 1 282 1 357 1 45 1 284 1 34 1 
358 1 320 1 185 1 2 1 344 1 102 1 7 1 54 2 130 2 26 1 281 1 30 2 365 1 217 2 303 1 170 2 172 1 117 1 17 1 91 2 248 1 72 1 315 4 145 1 
19 1 68 1 181 1 348 1 100 1 328 1 45 1 34 1 
59 1 240 1 50 1 111 1 181 5 209 1 296 1 100 4 140 1 39 2 348 4 364 1 45 5 34 5 
68 1 181 2 348 2 349 1 100 2 328 1 45 2 34 2 
12 1 280 1 
12 1 280 1 
289 1 216 1 
289 1 216 1 
289 1 216 1 
12 1 280 1 301 1 
215 1 12 1 280 1 
289 1 216 1 12 2 362 1 280 2 363 1 
12 1 280 1 301 1 
12 1 280 1 301 1 
35 1 12 1 280 1 
35 1 12 1 280 1 
35 1 12 1 280 1 
250 1 12 2 305 1 294 1 211 1 200 3 212 2 232 2 223 1 188 2 356 1 233 2 279 2 362 1 280 2 132 1 265 1 337 2 192 2 
181 2 210 1 296 1 100 2 212 1 232 1 233 1 279 1 215 1 280 1 348 2 192 1 83 1 34 2 12 1 200 1 260 1 333 1 223 1 264 1 41 1 119 1 337 1 45 2 
339 1 86 1 183 1 
339 1 183 1 219 1 
89 1 86 2 225 1 183 3 31 1 219 1 
89 1 86 1 225 1 157 1 183 2 219 1 
89 2 86 1 225 1 183 2 219 1 
0 1 338 1 149 1 96 1 254 1 2 1 159 2 3 1 100 1 53 4 164 1 348 1 349 1 221 3 60 1 305 2 117 1 16 1 312 1 266 2 124 1 181 1 320 1 230 1 275 1 127 3 128 2 233 5 234 1 83 1 193 1 328 1 236 1 34 1 367 1 140 1 337 5 42 2 45 1 145 1 
0 1 338 1 149 1 96 1 251 1 252 2 343 1 254 1 2 1 100 1 3 1 53 4 164 1 348 1 349 1 221 3 60 1 305 2 117 1 16 1 312 3 266 2 124 1 181 1 320 1 230 1 275 1 127 3 128 2 233 5 234 1 83 1 328 1 236 1 34 1 88 2 140 1 337 5 42 2 45 1 145 1 
338 1 149 1 96 1 124 1 181 1 320 1 254 1 230 1 2 1 159 1 100 1 3 1 275 1 53 2 127 3 128 2 164 1 233 3 348 1 349 1 83 1 328 1 193 1 108 1 34 1 60 1 221 3 367 1 305 2 140 1 117 1 16 1 337 3 266 2 42 2 45 1 145 1 
149 2 338 1 96 1 254 1 159 2 2 2 3 1 100 1 53 3 164 1 348 1 349 1 108 1 221 7 60 3 110 1 305 4 117 2 16 1 69 1 266 4 124 1 269 1 181 1 320 2 230 1 275 1 127 5 128 4 233 4 83 2 328 1 193 1 34 1 367 1 140 1 337 4 42 4 145 2 45 1 
276 1 62 1 
213 1 21 1 
224 1 
21 1 284 1 
37 1 317 1 21 1 62 1 284 1 178 1 
317 1 21 1 284 1 
21 1 268 1 
239 1 150 1 170 3 320 1 2 1 372 1 298 1 214 1 278 1 54 4 17 3 90 2 142 1 314 1 248 2 315 7 33 1 
239 1 150 1 170 3 320 1 2 1 372 1 298 1 214 1 278 1 54 4 17 3 90 2 142 1 314 1 248 2 315 7 33 1 
239 1 150 1 170 3 320 1 2 1 372 1 298 1 214 1 278 1 54 4 17 3 90 2 142 1 314 1 248 2 315 7 47 1 33 1 
150 1 318 1 149 3 51 1 320 4 185 1 344 1 2 4 101 4 298 2 214 5 278 2 54 16 130 2 281 1 27 3 33 2 239 1 135 1 170 15 288 1 308 1 372 1 117 3 17 10 90 3 142 2 71 1 314 1 248 5 72 1 315 31 145 3 48 1 
150 1 51 1 320 1 185 2 2 1 344 2 298 1 214 1 54 5 278 1 130 4 281 2 33 1 194 1 239 1 170 4 368 1 372 1 17 4 90 2 142 1 248 3 72 2 315 9 
74 1 339 1 341 1 156 1 183 2 274 1 163 1 187 1 55 1 361 1 323 1 131 1 299 1 282 1 350 1 31 1 219 1 32 1 196 1 13 2 86 1 354 1 241 1 113 1 70 1 376 1 226 1 175 1 121 2 357 1 
339 1 341 1 52 1 156 1 183 2 274 1 163 1 187 2 55 1 361 1 323 1 131 1 106 1 299 1 282 1 31 1 238 1 219 1 32 1 196 1 13 3 86 1 354 1 241 1 113 1 376 1 226 1 175 1 121 3 357 1 
339 1 341 1 156 1 183 2 274 1 163 1 187 2 323 1 131 1 106 1 299 1 282 1 31 1 238 1 219 1 196 1 13 2 86 1 241 1 113 1 376 1 226 1 175 1 121 2 357 1 
196 1 21 1 13 1 52 1 341 2 98 1 354 1 274 2 243 1 163 1 202 1 361 1 323 1 335 1 376 2 336 1 282 1 175 2 121 1 351 1 357 1 109 1 284 1 
74 1 339 1 341 1 156 1 183 2 274 1 163 1 55 1 361 1 323 1 106 1 299 1 282 1 31 1 219 1 32 1 196 1 13 1 86 1 354 1 241 1 70 1 376 1 175 1 121 1 357 1 
321 1 
0 1 206 1 96 1 207 2 253 1 97 1 158 2 254 1 295 1 3 2 163 1 164 1 167 1 351 1 302 4 221 2 60 2 169 1 111 1 305 3 353 2 171 1 307 1 66 2 312 6 266 2 357 2 123 2 19 1 21 1 124 1 181 1 125 1 24 1 129 2 127 2 233 5 80 1 323 1 282 2 328 1 284 1 236 3 34 1 196 2 287 1 199 1 243 2 244 1 92 2 94 1 336 1 337 5 43 1 45 1 
19 1 206 1 207 1 181 1 253 1 295 1 3 2 233 3 166 1 167 1 328 1 236 1 34 1 302 2 169 1 111 1 305 2 171 1 199 1 307 1 312 2 94 1 337 3 45 1 
19 1 302 3 206 1 169 1 111 1 181 1 305 2 253 1 171 1 295 1 3 2 199 1 307 1 66 1 233 2 94 1 167 1 337 2 328 1 45 1 34 1 
19 1 123 1 206 1 207 1 181 1 253 1 295 1 3 3 233 3 166 1 167 1 328 1 236 1 34 1 302 3 169 1 111 1 305 3 171 1 199 1 307 1 66 1 312 2 94 1 337 3 45 1 
0 1 338 1 206 1 96 1 207 4 253 1 97 1 158 2 254 1 295 1 100 1 3 4 160 1 166 1 348 1 167 1 349 1 302 5 169 1 60 2 111 1 305 4 353 2 171 1 307 1 66 3 16 1 263 1 312 7 266 1 316 1 19 1 123 4 124 1 181 2 230 1 127 1 129 2 322 1 233 5 328 2 236 3 34 2 287 1 199 1 140 1 375 1 92 2 94 1 337 5 45 2 
123 2 19 1 0 1 206 1 96 1 207 2 124 1 181 1 97 1 253 1 158 2 254 1 295 1 3 3 129 2 127 1 233 4 80 1 167 1 328 1 236 2 34 1 302 4 221 2 60 2 169 1 111 1 305 4 353 2 171 1 287 1 199 1 307 1 66 2 312 4 92 2 94 1 266 1 337 4 45 1 
123 2 19 1 0 1 206 1 96 1 207 2 124 1 181 1 97 1 253 1 158 2 254 1 295 1 3 3 129 2 127 1 322 1 233 4 167 1 328 1 236 2 34 1 302 4 60 2 169 1 111 1 305 3 353 2 171 1 287 1 199 1 307 1 66 2 375 1 312 4 92 2 94 1 266 1 337 4 45 1 316 1 
123 2 19 1 0 1 206 1 96 1 207 2 124 1 181 1 97 1 253 1 158 2 254 1 295 1 3 3 129 2 127 1 322 1 233 4 167 1 328 1 236 2 34 1 302 4 60 2 169 1 111 1 305 3 353 2 171 1 287 1 199 1 307 1 66 2 375 1 312 4 92 2 94 1 266 1 337 4 45 1 316 1 
123 2 19 1 0 1 206 1 96 1 207 2 124 1 153 1 181 1 253 1 158 2 254 1 295 1 99 1 3 3 25 2 129 2 127 1 233 4 167 1 328 1 236 2 34 1 302 4 221 2 169 1 111 1 305 3 259 1 171 1 287 1 199 1 307 1 66 2 334 2 312 4 94 1 266 1 337 4 45 1 316 1 
19 1 123 3 0 1 206 1 96 1 124 1 207 3 181 1 97 1 253 1 158 2 254 1 295 1 3 3 160 1 129 2 127 1 322 1 233 4 167 1 328 1 236 2 34 1 302 5 60 2 169 1 111 1 305 3 353 2 171 1 287 1 199 1 307 1 66 3 375 1 92 2 312 5 94 1 266 1 337 4 45 1 316 1 
19 1 123 3 0 1 206 1 96 1 124 1 207 3 181 1 97 1 253 1 158 2 254 1 295 1 3 3 160 1 129 2 127 1 322 1 233 4 167 1 328 1 236 2 34 1 302 5 60 2 169 1 111 1 305 3 353 2 171 1 287 1 199 1 307 1 66 3 375 1 92 2 312 5 94 1 266 1 337 4 45 1 316 1 
123 2 19 1 0 1 206 1 96 1 207 2 124 1 181 1 253 1 158 2 254 1 295 1 3 3 25 2 129 2 127 1 233 4 80 1 167 1 328 1 236 2 34 1 302 4 221 2 169 1 111 1 305 3 259 1 171 1 287 1 199 1 307 1 66 2 334 2 312 4 94 1 266 1 337 4 45 1 
358 1 239 1 150 1 303 1 170 3 320 1 185 1 296 2 2 1 344 1 372 1 102 1 276 1 54 3 278 1 17 2 90 1 130 2 91 1 142 1 281 1 30 1 217 1 248 2 315 6 72 1 
20 1 318 1 149 2 154 1 320 2 185 2 296 1 344 2 2 1 101 3 6 1 102 2 214 1 54 8 130 4 281 2 27 3 30 4 217 11 136 1 303 1 170 6 370 1 288 1 65 1 117 1 17 2 91 11 95 1 248 1 72 2 315 14 145 2 
317 1 20 1 21 1 181 1 185 1 296 1 344 1 100 1 102 1 163 1 79 1 54 1 56 1 323 1 130 2 348 1 281 1 282 1 30 1 107 1 284 1 34 2 84 1 196 1 59 1 303 1 170 1 198 1 370 1 243 1 201 1 65 1 262 1 39 1 357 1 72 1 315 2 45 2 
150 1 149 2 208 1 155 2 296 2 2 3 344 3 100 1 102 3 163 2 214 4 54 10 56 2 106 1 348 1 217 7 59 1 303 3 170 10 65 1 115 1 117 2 262 2 17 8 357 3 72 3 315 20 20 1 317 2 21 2 181 1 271 2 320 3 185 3 23 2 278 1 323 2 130 6 281 3 282 3 29 2 30 7 284 2 34 3 239 1 84 2 196 3 137 1 370 1 372 1 243 1 39 1 90 1 142 1 141 2 91 7 248 4 45 3 145 2 
358 1 21 3 1 1 181 1 76 2 293 1 185 2 344 2 100 1 102 2 163 2 54 1 323 2 130 4 106 1 348 1 281 2 168 1 283 1 282 8 350 1 351 1 284 2 34 1 196 7 303 2 170 1 369 1 370 1 243 2 65 1 15 1 39 1 336 1 291 1 357 8 72 2 315 2 45 1 
20 1 149 1 50 1 181 1 320 1 185 1 344 1 2 1 100 1 102 1 54 1 130 2 348 1 281 1 30 1 217 1 34 1 303 1 170 2 352 1 140 1 117 1 17 1 91 1 248 1 72 1 315 3 45 1 145 1 
358 1 303 1 320 1 185 1 344 1 102 1 214 1 54 2 17 1 130 2 91 1 281 1 30 1 365 1 217 1 315 2 72 1 145 1 
358 1 303 1 170 2 185 1 344 1 2 1 102 1 117 1 17 1 130 2 91 1 26 1 281 1 30 1 217 1 248 1 315 2 72 1 
358 1 149 1 320 1 185 1 344 1 2 1 102 1 214 1 54 2 130 2 281 1 30 2 217 2 303 1 170 2 117 1 17 2 91 2 248 1 72 1 315 4 145 1 
303 1 293 1 320 1 185 1 344 1 102 1 214 1 54 2 17 1 130 2 91 1 281 1 30 1 365 1 217 1 315 2 72 1 145 1 
303 1 293 1 170 2 185 1 344 1 2 1 102 1 117 1 17 1 130 2 91 1 26 1 281 1 30 1 217 1 248 1 315 2 72 1 
149 1 293 1 320 1 185 1 344 1 2 1 102 1 214 1 54 2 130 2 281 1 30 2 217 2 303 1 170 2 117 1 17 2 91 2 248 1 72 1 315 4 145 1 
149 1 320 1 185 1 344 1 2 1 102 1 214 1 54 2 130 2 281 1 30 2 217 2 303 1 170 2 117 1 17 2 91 2 248 1 315 4 72 1 145 1 
317 1 21 1 185 1 296 1 344 1 102 1 163 1 54 1 56 1 323 1 130 2 281 1 29 1 282 1 284 1 34 1 84 1 196 1 303 1 170 1 370 1 243 1 65 1 262 1 315 2 357 1 72 1 45 1 
73 1 317 1 21 1 185 1 296 1 344 1 186 1 102 1 163 1 54 1 323 1 130 2 281 1 282 1 284 1 34 1 84 1 196 1 303 1 170 1 222 1 370 1 243 1 65 1 315 2 357 1 72 1 45 1 
20 1 149 1 320 1 185 1 344 1 2 1 102 1 214 1 54 2 130 2 281 1 30 2 217 2 303 1 170 2 117 1 17 2 91 2 248 1 72 1 315 4 145 1 
317 1 149 1 21 1 271 1 320 1 185 1 2 1 344 1 102 1 214 1 163 1 54 2 56 1 323 1 130 2 281 1 30 2 29 1 282 1 217 2 350 1 284 1 34 1 84 1 196 1 303 1 170 2 117 1 17 2 262 1 91 2 248 1 315 4 357 1 72 1 145 1 45 1 
20 1 149 1 50 1 181 1 320 1 185 1 2 1 344 1 100 1 102 1 214 1 54 2 130 2 348 1 281 1 11 1 30 1 217 1 34 1 303 1 170 1 140 1 117 1 17 1 91 1 72 1 315 3 45 1 145 1 
227 1 147 1 318 1 149 3 340 1 320 3 185 2 344 2 2 3 4 1 101 2 162 1 214 3 54 9 347 2 130 4 326 1 281 2 27 1 170 10 331 1 368 1 288 1 64 2 117 3 17 6 248 3 72 2 315 19 145 3 
227 1 318 2 149 3 228 1 51 2 340 2 75 1 320 3 185 3 2 2 344 3 4 2 101 2 214 2 162 1 54 14 347 4 130 6 326 1 300 1 281 3 27 2 170 12 368 1 64 1 261 1 116 1 117 2 17 4 248 2 72 3 315 26 122 1 145 3 
227 1 150 1 318 3 149 4 228 1 51 1 340 1 75 1 320 5 185 3 273 1 344 3 2 5 4 2 101 4 162 1 214 4 278 1 54 20 347 4 130 6 326 1 300 1 281 3 27 3 239 1 170 21 331 1 368 1 288 1 372 1 64 1 261 1 116 1 117 4 17 8 90 1 142 1 248 4 72 3 315 41 122 1 145 4 
227 1 150 1 318 3 149 4 228 1 51 2 340 1 75 1 320 5 185 4 273 1 344 4 2 4 4 2 101 4 162 1 214 3 278 1 54 20 347 4 130 8 326 1 300 1 281 4 27 3 239 1 170 18 331 1 368 1 288 1 372 1 64 1 261 1 116 1 117 3 17 7 90 1 142 1 248 4 72 4 315 38 122 1 145 4 
227 1 150 1 318 2 149 7 228 1 51 1 340 1 75 1 154 2 320 8 185 2 344 2 2 8 4 1 101 4 162 1 214 7 278 1 54 27 347 4 130 4 326 1 300 1 281 2 27 4 239 1 170 25 368 1 288 2 372 1 64 1 261 1 116 1 117 7 17 14 90 1 142 1 248 7 72 2 315 52 122 1 145 7 
356 1 12 1 279 1 362 1 280 1 265 1 272 1 192 1 212 1 232 1 
215 1 210 1 
12 1 279 1 311 1 280 1 28 1 192 1 212 1 146 1 232 1 
12 1 305 1 294 1 211 1 200 2 212 1 232 1 223 1 188 1 356 1 233 1 279 1 362 1 280 1 132 1 265 1 337 1 192 1 
12 1 305 1 294 1 211 1 200 2 212 1 232 1 223 1 188 1 356 1 233 1 279 1 362 1 280 1 132 1 265 1 337 1 192 1 
12 1 305 1 294 1 211 1 200 2 212 1 232 1 223 1 188 1 356 1 233 1 279 1 362 1 280 1 132 1 265 1 337 1 192 1 
363 1 366 1 301 1 
363 1 366 1 301 1 
35 1 8 1 
35 1 8 1 363 1 
264 1 119 1 
181 2 210 1 294 1 296 1 100 2 212 1 53 1 232 1 188 1 233 1 279 1 215 1 280 1 348 2 192 1 83 1 34 2 12 1 200 1 260 1 333 1 245 1 264 1 41 1 119 1 337 1 45 2 
366 1 301 1 
35 1 8 1 363 1 
20 1 21 1 181 2 76 2 77 1 185 1 344 1 102 1 163 1 54 1 323 1 130 2 257 1 191 1 281 1 168 1 283 1 282 2 327 1 218 1 284 1 34 2 196 2 303 1 170 1 370 1 65 1 357 2 72 1 315 2 45 2 
148 1 196 2 339 1 86 1 182 1 183 2 156 1 241 1 163 1 55 1 323 1 103 1 106 1 282 2 175 1 350 1 31 1 357 2 219 1 
148 1 196 1 339 1 197 1 86 1 183 2 156 1 241 1 163 1 55 1 323 1 106 1 282 1 175 1 31 1 357 1 219 1 
196 1 21 1 182 1 243 1 163 1 202 1 323 1 345 1 336 1 282 1 175 1 357 1 351 1 284 1 
148 1 196 1 339 1 86 1 182 1 183 2 156 1 241 1 163 1 55 1 323 1 103 1 106 1 282 1 175 1 31 1 357 1 219 1 
126 1 
276 1 82 1 9 1 305 1 266 1 3 1 127 1 
0 1 96 1 124 1 97 1 254 1 3 1 127 1 233 1 236 1 60 1 221 1 305 2 353 1 92 1 312 1 266 1 337 1 
317 1 0 1 196 1 21 3 96 1 124 1 184 1 254 1 62 1 127 1 243 1 213 2 163 2 164 1 323 1 105 1 312 1 10 1 205 1 282 1 44 1 357 1 284 1 144 1 178 1 
0 2 318 1 149 2 96 2 228 1 124 2 75 1 320 2 254 2 2 2 3 2 128 5 127 8 101 1 164 1 233 1 300 1 27 1 236 1 237 1 85 1 221 6 60 3 305 5 286 1 244 1 261 1 116 1 117 2 312 1 204 2 337 1 266 5 42 5 145 2 
0 1 338 1 96 1 124 1 181 1 320 2 254 1 2 1 230 1 100 1 127 2 322 1 278 1 233 1 348 1 349 1 328 1 34 1 239 1 286 1 140 1 16 1 142 1 204 2 337 1 266 2 45 1 249 1 
0 1 96 1 124 1 305 1 254 1 3 1 127 1 9 1 82 1 266 1 
149 2 221 10 60 5 305 5 286 1 320 2 2 2 128 5 127 5 117 2 141 1 204 2 266 5 42 5 145 2 
233 1 312 1 305 1 337 1 3 1 236 1 
0 1 151 1 21 1 96 2 124 2 254 2 78 1 24 1 297 1 127 2 163 1 164 2 233 3 323 1 282 4 108 1 351 1 284 1 236 2 134 2 196 4 243 2 244 2 312 4 266 2 337 3 336 1 43 1 357 4 
317 1 338 1 21 1 181 2 185 1 296 1 344 1 100 2 102 1 163 1 56 1 323 1 130 2 348 2 281 1 282 1 29 1 284 1 34 3 84 1 196 1 303 1 170 1 36 1 370 1 140 2 243 1 262 1 315 1 72 1 357 1 45 3 
0 1 96 1 60 2 221 4 124 1 305 4 254 1 3 2 128 2 127 1 244 1 164 1 90 1 266 2 42 2 
174 1 212 1 232 1 
22 1 265 1 119 1 212 1 232 1 
174 1 212 1 232 1 
174 1 212 1 232 1 
161 1 212 1 232 1 
161 1 212 1 232 1 
161 1 212 1 232 1 
212 1 232 1 
12 1 280 1 
239 1 150 1 51 1 170 4 320 1 185 2 2 1 344 2 372 1 214 1 54 4 278 1 17 3 90 1 130 4 142 1 281 2 248 2 315 8 72 2 
276 1 239 1 54 3 278 1 150 1 17 2 90 1 142 1 170 3 320 1 2 1 248 2 315 6 372 1 
149 1 170 2 320 1 185 1 2 1 344 1 214 1 117 1 54 2 17 2 130 2 281 1 248 1 72 1 315 4 177 1 145 1 
318 1 149 1 170 4 320 1 2 1 288 1 101 2 214 1 117 1 54 3 17 2 27 1 248 1 315 7 145 1 
150 1 149 2 51 2 154 1 320 3 185 2 2 3 344 2 101 2 6 1 214 4 278 2 54 11 130 4 27 2 281 2 239 1 285 1 170 12 288 1 372 1 117 2 17 9 90 1 142 2 248 5 315 23 72 2 145 2 
170 1 315 1 101 1 
54 1 27 1 315 1 
149 1 170 3 320 1 185 1 344 1 2 1 214 1 54 3 117 1 17 3 130 2 141 1 281 1 248 2 72 1 315 6 177 1 145 1 
318 1 149 2 228 1 75 1 320 2 185 1 344 1 2 2 101 1 214 1 54 6 130 2 300 1 27 1 281 1 170 6 368 1 261 1 116 1 117 2 17 2 248 1 315 12 72 1 145 2 
239 1 170 3 320 1 2 1 214 1 54 3 278 1 17 2 142 1 248 1 315 6 
150 1 285 1 51 1 170 2 185 1 344 1 372 1 214 1 54 1 278 1 17 2 130 2 142 1 281 1 248 1 315 3 72 1 
239 1 170 5 320 2 185 1 368 1 344 1 2 2 214 2 278 2 54 5 17 5 130 2 142 2 281 1 248 3 72 1 315 10 249 1 
320 1 368 1 185 1 344 1 214 1 54 2 17 1 130 2 281 1 72 1 315 2 145 1 
149 1 170 2 320 1 368 1 185 1 2 1 344 1 214 1 117 1 54 2 17 2 130 2 281 1 248 1 72 1 315 4 145 1 
51 1 285 1 170 2 331 1 368 1 185 3 344 3 214 1 278 1 54 1 17 2 130 6 142 1 281 3 248 1 315 3 72 3 
150 1 318 1 149 3 51 2 320 5 185 5 344 5 2 5 101 4 214 5 278 3 54 16 130 10 281 5 27 3 239 2 135 1 285 1 170 18 331 1 368 1 308 1 288 1 372 1 117 3 17 12 90 1 142 3 248 7 72 5 315 34 177 1 145 3 48 1 
318 1 150 1 320 1 185 1 2 1 344 1 101 1 54 4 278 1 130 2 27 1 281 1 239 1 170 4 368 1 372 1 116 1 17 2 90 1 142 1 248 2 315 8 72 1 
150 1 318 1 149 1 320 2 185 2 2 1 344 2 101 2 214 1 278 1 54 6 130 4 281 2 27 1 239 1 170 5 368 1 288 1 372 1 116 1 17 3 90 1 142 1 248 2 315 11 72 2 177 1 145 1 
150 1 318 1 149 2 228 1 51 1 75 1 320 3 185 3 344 3 2 3 101 1 214 1 278 1 54 9 130 6 300 1 27 1 281 3 239 1 170 10 368 1 372 1 261 1 116 1 117 2 17 4 90 1 142 1 248 3 315 19 72 3 177 1 145 2 
150 1 318 1 149 2 228 1 51 1 75 1 320 3 185 3 344 3 2 2 101 1 214 2 278 1 54 10 130 6 300 1 27 1 281 3 239 1 170 7 368 1 372 1 261 1 116 1 117 1 17 5 90 1 142 1 248 3 315 17 72 3 177 1 145 2 
318 1 150 1 320 1 185 1 2 1 344 1 101 1 54 4 278 1 130 2 27 1 281 1 239 1 170 4 368 1 372 1 116 1 17 2 90 1 142 1 248 2 315 8 72 1 
318 1 149 2 228 1 75 1 320 2 185 1 344 1 2 2 101 1 214 1 54 6 130 2 300 1 27 1 281 1 170 6 368 1 261 1 116 1 117 2 17 2 248 1 315 12 72 1 145 2 
150 1 318 1 149 2 228 1 51 2 75 1 320 3 185 4 344 4 2 2 101 1 214 2 278 1 54 10 130 8 300 1 281 4 27 1 239 1 170 8 368 1 372 1 261 1 116 1 117 1 17 5 90 1 142 1 248 3 315 18 72 4 177 1 145 2 
318 1 149 3 228 1 51 2 75 1 320 3 185 4 344 4 2 2 101 1 214 3 54 9 130 8 300 1 281 4 27 1 170 7 368 1 331 1 261 1 116 1 117 2 17 6 248 3 315 16 72 4 145 3 
239 1 150 1 170 4 320 1 2 1 372 2 214 3 278 3 54 3 17 6 142 3 248 3 315 7 
150 1 318 1 149 2 228 1 51 2 75 1 320 3 185 4 344 4 2 2 101 1 214 1 278 1 54 10 130 8 300 1 281 4 27 1 239 1 170 8 368 1 331 1 372 1 261 1 116 1 117 1 17 4 90 1 142 1 248 3 315 18 72 4 145 2 
152 1 240 1 111 1 181 1 296 1 45 1 34 1 
180 1 152 1 240 1 111 1 181 1 296 1 63 1 5 1 247 1 330 1 45 1 34 1 
163 1 276 1 196 1 21 1 323 1 336 1 282 1 351 1 357 1 284 1 243 1 
317 1 84 1 196 1 21 1 181 1 296 1 100 1 243 1 163 1 39 1 262 1 323 1 348 1 282 1 357 1 284 1 45 2 34 2 
19 1 134 1 317 2 84 1 196 1 21 3 181 2 296 1 100 1 163 1 39 1 262 1 323 1 348 2 94 1 282 1 328 1 357 1 46 1 284 2 45 2 268 1 34 2 
73 1 19 1 317 2 21 3 181 2 296 1 100 1 163 1 323 1 348 2 325 1 282 2 328 1 284 2 34 2 134 1 84 1 196 2 39 1 94 1 357 2 45 2 46 1 268 1 
213 1 134 1 196 1 233 1 21 1 312 1 342 1 337 1 62 1 282 1 357 1 
213 1 134 1 196 1 233 1 21 1 312 1 337 1 62 1 282 1 44 1 357 1 
163 1 196 1 323 1 282 1 291 1 357 1 
317 1 196 6 21 3 1 1 76 1 369 1 231 1 371 1 243 2 15 1 374 1 163 3 323 2 106 1 291 1 283 1 282 7 350 1 357 7 284 2 178 1 
150 1 344 2 2 1 296 2 100 1 102 2 163 1 54 3 56 1 348 1 257 1 350 1 217 1 303 2 170 3 262 1 17 2 357 1 72 2 315 6 20 1 317 1 21 1 181 1 271 1 320 1 185 2 23 1 278 1 323 1 130 4 281 2 30 1 29 1 282 1 284 1 34 2 84 1 239 1 196 1 372 1 39 1 90 1 142 1 91 1 248 2 45 2 
0 1 196 1 21 1 96 1 124 1 184 1 254 1 62 1 297 1 53 1 243 1 213 1 233 1 105 1 312 1 337 1 205 1 282 1 44 1 357 1 
317 1 196 1 21 1 62 1 163 2 323 1 291 1 282 1 357 1 144 1 284 1 178 1 
196 4 21 1 270 1 243 1 163 1 323 1 325 1 336 1 282 4 350 1 357 4 351 1 284 1 
134 1 317 1 196 2 21 1 304 1 137 1 112 1 231 1 371 1 163 2 323 1 282 2 357 2 284 1 
163 1 196 1 323 1 339 1 183 1 156 1 282 1 357 1 219 1 243 1 
196 2 21 1 77 1 163 1 323 1 106 1 282 2 283 1 350 1 357 2 284 1 
134 1 196 4 21 3 270 1 1 1 243 1 163 2 15 1 323 2 336 1 282 5 283 1 350 1 351 1 357 5 284 2 
134 1 196 4 21 3 270 1 243 1 163 2 15 1 189 1 323 2 336 1 282 5 283 1 350 1 351 1 357 5 284 2 
73 1 317 1 84 1 196 1 21 1 181 1 296 1 100 1 243 1 163 1 39 1 323 1 348 1 282 1 357 1 284 1 45 2 34 2 
134 1 317 1 196 1 21 1 231 1 371 1 374 1 163 2 323 1 282 1 357 1 284 1 178 1 
181 1 360 1 118 1 191 1 327 1 218 1 176 1 45 1 34 1 
49 1 360 1 229 1 
118 1 324 1 360 1 296 1 176 1 
19 1 49 1 338 1 206 1 181 1 360 1 229 1 230 1 100 1 3 1 53 1 233 2 324 1 348 1 349 1 328 2 34 1 258 1 305 1 199 1 140 1 114 1 118 1 16 1 94 1 337 2 176 1 45 1 
276 1 131 1 226 1 113 1 
361 1 13 1 131 1 226 1 354 1 121 1 113 1 
13 1 341 1 274 1 
74 1 13 3 354 1 256 2 113 1 67 1 361 1 246 1 131 1 93 1 226 1 121 3 
187 1 38 1 361 1 13 2 131 1 226 1 354 1 121 2 113 1 
361 1 74 1 339 1 13 1 86 1 138 1 183 1 354 1 121 1 329 1 113 1 
361 1 74 1 13 1 131 1 354 1 121 1 113 1 
361 1 74 1 13 1 131 2 226 1 354 1 121 1 
74 1 13 1 87 1 354 1 361 1 165 1 121 1 
74 1 13 3 14 1 354 1 113 2 187 2 355 1 361 1 131 1 226 1 121 3 267 1 329 1 
74 1 13 2 339 1 86 1 183 2 354 1 113 1 187 1 361 1 131 1 226 1 313 1 121 2 31 1 219 1 
74 1 13 4 354 2 310 1 113 2 187 2 355 1 361 2 38 1 131 1 226 1 121 4 329 1 
361 1 74 1 13 1 131 1 226 1 354 1 121 1 113 1 
220 1 13 4 354 1 256 1 113 3 67 1 187 2 355 1 361 1 246 1 131 2 226 2 121 4 329 1 
187 1 179 1 361 1 74 1 203 1 13 2 131 1 226 1 354 1 121 2 242 1 113 1 
195 1 74 1 13 3 354 1 256 2 113 1 67 2 361 1 246 1 131 1 226 1 121 3 
57 1 139 2 290 1 113 2 
361 1 74 1 13 1 306 1 354 1 121 1 
187 1 361 1 74 1 13 2 131 1 226 1 14 1 354 1 121 2 113 1 
255 1 
361 1 74 1 13 1 131 1 226 1 354 1 121 1 113 1 
187 1 361 1 74 1 13 3 131 1 14 1 226 1 354 1 121 3 256 1 113 1 
220 1 355 1 329 1 113 1 
131 1 113 1 

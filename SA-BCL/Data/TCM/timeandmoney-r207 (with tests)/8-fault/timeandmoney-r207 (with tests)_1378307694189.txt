#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 97 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (39,71,282) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (39,71,282) 5 225 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (39,71,282) 5 43 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 76 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (103,164) (103,164) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 61 197 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 234 257 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (39,71,282) (39,71,282) 245 117 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 87 181 10 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 78 275 210 81 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 78 26 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 78 26 210 81 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 78 26 210 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (103,164) (103,164) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (103,164) (103,164) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (103,164) (103,164) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 76 269 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 87 114 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 97 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 193 (162,172) 49 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 78 275 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (118,140) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 78 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 78 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 175 50 (44,120) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 175 50 (96,224) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (96,224) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (44,120) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 87 181 10 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 87 114 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 87 181 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 87 47 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (39,71,282) 5 190 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 2 176 1 293 1 254 9 215 1 180 2 259 2 133 5 217 2 8 1 299 1 221 6 222 4 302 9 304 1 151 2 305 1 154 1 307 1 111 1 310 2 238 1 115 1 28 2 169 1 246 3 319 1 321 1 
41 2 176 1 293 1 254 9 215 1 180 2 259 2 133 5 217 2 8 1 299 1 221 6 222 4 302 9 304 1 151 2 305 1 154 1 307 1 111 1 310 2 238 1 115 1 28 2 169 1 246 3 319 1 321 1 
41 2 176 1 293 1 254 10 215 1 180 2 259 2 133 6 217 2 8 1 299 1 221 7 222 5 302 10 304 1 151 2 305 1 154 1 307 1 111 1 310 2 238 1 115 1 28 2 169 1 246 4 319 1 321 1 
41 2 176 1 293 1 254 7 215 1 180 2 259 2 133 4 217 1 299 1 221 4 222 3 302 7 304 1 151 2 305 1 154 1 307 1 111 1 310 2 238 1 115 1 28 2 169 1 246 2 319 1 321 1 
41 1 302 4 304 1 305 1 176 1 254 4 215 1 180 1 259 1 310 1 133 3 217 2 8 1 299 1 221 3 28 1 222 2 246 1 
302 2 41 1 304 1 151 1 305 1 254 2 215 1 180 1 157 1 54 1 133 1 310 1 115 1 28 1 32 1 321 1 
302 3 304 1 151 1 305 1 254 3 215 1 180 2 111 1 133 2 221 1 28 2 222 1 246 1 
38 1 41 1 176 1 254 9 215 1 180 2 259 1 133 5 217 2 299 1 8 1 221 7 222 4 302 9 304 1 151 1 232 1 305 1 111 1 310 1 28 2 169 1 246 3 319 1 
38 1 41 1 176 1 254 9 215 1 180 2 259 1 133 5 217 2 299 1 8 1 221 7 222 4 302 9 304 1 151 1 232 1 305 1 111 1 310 1 28 2 169 1 246 3 319 1 
97 1 
282 1 312 1 39 1 200 1 86 1 206 1 119 1 35 1 279 1 
282 1 312 1 200 1 86 1 25 1 243 1 206 1 48 1 35 1 279 1 
108 1 71 1 
108 1 71 1 
71 1 
108 1 71 1 
108 1 71 1 
123 1 14 1 201 1 108 1 71 2 316 1 
248 1 211 1 148 1 290 1 106 2 230 1 15 1 128 2 48 1 50 1 198 1 279 2 280 1 4 1 312 1 137 1 264 1 9 1 30 2 243 1 170 1 206 2 120 1 
223 1 97 1 
48 1 279 2 236 1 312 2 25 1 243 1 223 2 116 1 206 2 
4 1 313 1 266 1 
211 1 248 1 290 1 106 1 130 1 128 1 15 1 50 1 279 1 137 1 223 1 9 1 30 1 170 1 206 1 120 1 
70 1 48 4 198 1 279 5 280 2 236 1 312 5 25 1 243 4 223 1 119 1 206 5 143 1 244 1 
312 2 86 1 243 2 206 2 48 2 62 1 279 2 182 1 
312 3 25 1 223 1 243 3 206 3 48 3 279 3 280 1 
312 1 86 1 243 1 206 1 48 1 279 1 182 1 
312 1 86 1 25 1 243 1 116 1 206 1 48 1 279 1 236 1 
48 2 198 1 279 2 280 1 236 1 312 2 282 1 200 1 5 1 86 1 25 1 243 2 206 2 35 1 225 1 
312 2 70 1 223 1 243 1 119 1 206 2 48 1 279 2 280 1 
43 1 48 1 198 1 279 1 280 1 312 1 282 1 5 1 200 1 86 1 243 1 206 1 35 1 
48 2 279 2 280 1 236 1 4 1 312 2 25 1 243 2 266 1 206 2 
211 1 248 1 290 1 106 1 128 1 15 1 50 1 279 1 137 1 223 1 9 1 30 1 170 1 206 1 120 1 
227 1 248 1 290 1 106 1 128 1 15 1 50 1 279 1 137 1 223 1 9 1 30 1 224 1 170 1 206 1 
92 1 289 1 294 2 179 1 46 1 51 1 256 1 53 1 4 2 218 2 134 1 101 1 59 1 266 2 11 1 191 4 69 1 16 1 159 1 313 2 88 2 165 1 89 1 205 1 
312 1 86 1 243 1 206 1 48 1 35 1 279 1 62 1 
21 1 173 1 
21 1 173 1 
204 1 207 1 
204 1 207 1 
204 1 207 1 
21 1 109 1 173 1 
231 1 21 1 173 1 
135 1 21 2 204 1 297 1 207 1 173 2 
21 1 109 1 173 1 
21 1 109 1 173 1 
228 1 21 1 173 1 
228 1 21 1 173 1 
228 1 21 1 173 1 
66 1 272 1 71 1 276 1 76 1 48 1 279 1 312 1 21 1 283 1 188 1 243 1 167 1 206 1 173 1 
66 2 272 2 71 2 276 1 199 1 21 2 283 2 7 1 164 1 188 2 167 2 103 1 173 2 
310 1 41 1 259 1 
310 1 41 1 157 1 
310 3 6 1 58 1 157 1 259 2 270 1 
310 2 6 1 57 1 58 1 157 1 259 1 
310 2 6 1 58 2 157 1 259 1 
22 1 108 1 71 1 
186 1 108 2 71 2 203 1 285 1 
80 1 123 1 247 1 14 1 201 1 108 1 71 2 316 1 267 1 286 1 61 1 
123 1 247 1 14 1 71 1 197 1 80 1 201 1 316 1 267 1 286 1 61 1 
37 1 170 1 97 1 
126 1 170 1 
98 1 
248 1 15 1 170 1 
152 1 170 1 
15 1 170 1 
37 2 248 1 15 1 177 1 213 1 170 3 
65 1 0 2 274 1 191 6 292 2 294 3 95 1 179 1 46 4 196 1 51 1 160 2 83 1 88 3 163 1 165 2 168 1 
65 1 0 2 274 1 191 6 292 2 294 3 95 1 179 1 46 4 196 1 51 1 160 2 83 1 88 3 163 1 165 2 168 1 
65 1 0 2 274 1 191 6 292 2 294 3 95 1 179 1 46 4 196 1 51 1 160 2 83 1 239 1 88 3 163 1 165 2 168 1 
92 1 0 6 1 1 292 3 294 16 95 2 46 11 179 4 256 1 132 1 51 4 218 2 134 3 262 3 11 1 65 1 67 1 191 32 274 2 16 3 306 1 196 1 278 4 78 1 308 1 83 1 160 3 240 1 88 16 163 1 165 5 31 3 168 2 89 1 
92 2 0 1 1 1 292 2 3 1 294 4 95 1 179 1 46 4 51 1 256 2 218 4 11 2 191 8 274 1 72 1 196 1 83 1 160 2 88 4 163 1 165 3 89 2 168 1 
91 1 41 1 290 1 128 1 214 1 254 2 215 1 180 1 258 1 259 1 133 1 55 1 136 1 137 1 221 1 144 1 270 1 147 1 302 2 106 1 304 1 151 1 305 1 195 1 157 1 310 2 27 1 30 1 28 1 29 1 
91 1 41 1 290 1 128 1 214 1 254 3 295 1 215 1 180 1 258 1 259 1 133 1 185 1 136 1 137 1 221 2 144 1 270 1 147 1 302 3 106 1 304 1 151 1 195 1 157 1 237 1 310 2 30 1 28 1 29 1 
290 1 41 1 128 1 214 1 254 2 215 1 258 1 259 1 133 1 185 1 137 1 221 2 144 1 270 1 147 1 302 2 106 1 304 1 151 1 195 1 157 1 237 1 310 2 30 1 29 1 
290 1 302 1 106 1 15 1 291 1 151 2 128 1 18 1 214 2 295 1 254 1 180 1 258 2 309 1 137 1 317 1 189 1 28 1 9 1 30 1 170 1 60 1 144 2 
91 1 41 1 290 1 128 1 214 1 254 1 180 1 258 1 259 1 185 1 55 1 136 1 137 1 144 1 270 1 147 1 302 1 106 1 151 1 305 1 195 1 157 1 310 2 30 1 28 1 29 1 
296 1 
14 1 106 1 128 1 201 1 68 1 71 1 316 1 234 1 30 1 9 1 267 1 286 1 257 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
71 1 
39 1 14 1 68 1 71 1 17 1 153 1 279 1 282 1 312 1 200 1 86 1 201 1 316 1 117 1 206 1 119 1 35 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
282 1 312 1 39 1 200 1 86 1 17 1 71 1 153 1 117 1 206 1 119 1 35 1 279 1 245 1 
39 1 14 1 68 1 71 1 17 1 153 1 279 1 282 1 312 1 200 1 86 1 201 1 316 1 117 1 206 1 119 1 35 1 245 1 
92 1 191 5 292 2 294 3 179 1 46 2 196 1 51 1 256 1 53 1 97 1 160 2 218 2 83 1 88 2 163 1 165 2 101 1 223 2 89 1 205 1 11 1 
92 2 124 1 0 1 294 6 46 2 179 1 256 2 51 2 53 1 4 11 218 4 134 2 262 2 223 1 266 4 11 2 146 1 67 1 229 1 191 14 150 1 16 1 278 3 78 1 313 11 88 8 165 1 31 3 89 2 205 2 33 1 121 1 209 1 
92 1 248 1 211 1 290 1 124 1 174 1 128 1 130 1 294 1 48 1 50 1 256 1 53 1 137 1 218 2 223 1 9 1 266 1 11 1 106 1 191 2 15 1 149 1 194 1 198 1 279 2 280 1 312 1 88 1 30 1 243 1 89 1 170 1 205 1 206 2 33 1 120 1 209 1 
92 3 248 2 0 4 179 3 256 3 4 6 185 1 262 2 9 1 266 6 11 3 106 3 191 19 15 2 192 2 16 2 196 1 198 1 279 3 280 1 24 2 30 3 205 3 33 1 206 3 120 2 209 1 208 2 211 2 124 1 290 2 128 3 292 2 294 10 46 8 48 1 50 2 51 3 53 3 218 6 137 2 134 2 219 1 223 2 303 1 312 1 160 2 83 1 313 6 88 9 163 1 165 4 243 1 89 3 170 2 172 2 90 1 320 2 
92 2 248 1 290 2 124 1 128 4 291 1 294 1 48 1 181 1 256 2 53 2 137 3 218 4 101 1 9 2 10 1 11 2 268 1 148 1 106 4 191 2 107 1 15 3 74 1 279 1 280 1 309 1 312 1 87 1 88 1 23 1 27 1 166 1 243 1 30 4 89 2 170 3 205 2 206 1 33 1 288 1 
92 1 294 2 46 1 179 1 48 1 256 1 51 1 53 1 4 1 218 2 134 1 262 1 187 1 266 1 11 1 191 3 16 1 279 1 236 1 312 1 313 1 88 1 25 1 165 1 243 1 89 1 205 1 206 1 209 1 
92 1 0 1 191 2 69 1 46 1 256 1 51 1 53 1 4 1 218 2 134 1 313 1 88 2 101 1 266 1 89 1 205 1 11 1 
92 1 191 2 16 1 294 2 46 1 179 1 256 1 53 1 159 1 4 1 218 2 313 1 165 1 101 1 266 1 89 1 205 1 11 1 
92 1 0 1 294 2 46 2 179 1 51 1 256 1 53 1 4 2 134 1 218 2 262 1 101 1 266 2 11 1 191 4 16 1 313 2 88 2 165 1 89 1 205 1 
92 1 0 1 191 2 69 1 46 1 256 1 51 1 53 1 4 1 218 2 134 1 313 1 88 2 266 1 89 1 205 1 11 1 268 1 
92 1 191 2 16 1 294 2 46 1 179 1 256 1 53 1 159 1 4 1 218 2 313 1 165 1 266 1 89 1 205 1 11 1 268 1 
92 1 0 1 294 2 46 2 179 1 51 1 256 1 53 1 4 2 134 1 218 2 262 1 266 2 11 1 268 1 191 4 16 1 313 2 88 2 165 1 89 1 205 1 
92 1 0 1 294 2 46 2 179 1 51 1 256 1 53 1 4 2 134 1 218 2 262 1 266 2 11 1 191 4 16 1 313 2 88 2 165 1 89 1 205 1 
92 1 248 1 211 1 124 1 290 1 128 1 294 1 50 1 256 1 53 1 137 1 218 2 223 1 9 1 11 1 191 2 106 1 15 1 279 1 88 1 30 1 89 1 170 1 205 1 206 1 33 1 120 1 320 1 
40 1 92 1 248 1 124 1 290 1 128 1 294 1 50 1 256 1 53 1 137 1 218 2 223 1 9 1 224 1 11 1 227 1 191 2 106 1 15 1 279 1 88 1 30 1 89 1 170 1 205 1 206 1 33 1 
92 1 0 1 294 2 46 2 179 1 51 1 256 1 53 1 4 2 134 1 218 2 262 1 266 2 11 1 191 4 16 1 313 2 88 2 165 1 89 1 205 1 209 1 
92 1 248 1 211 1 0 1 290 1 128 1 294 2 179 1 46 2 51 1 50 1 256 1 53 1 4 2 134 1 137 1 218 2 262 1 266 2 11 1 191 4 106 1 15 1 16 1 279 1 313 2 88 2 24 1 165 1 27 1 30 1 89 1 170 1 205 1 206 1 120 1 320 1 
92 1 0 1 294 1 179 1 46 1 48 1 256 1 51 1 53 1 4 1 218 2 134 1 262 1 266 1 11 1 64 1 191 3 16 1 279 1 236 1 312 1 313 1 88 2 25 1 243 1 89 1 205 1 206 1 209 1 
210 1 92 2 0 2 94 1 3 1 294 11 131 1 46 3 179 2 256 2 51 2 218 4 134 2 262 2 300 1 11 2 67 1 191 21 16 2 275 1 277 1 278 4 77 3 78 3 81 1 88 10 165 1 26 2 31 3 89 2 34 1 
210 1 92 2 0 2 94 1 3 1 294 9 131 1 46 4 179 2 256 2 51 2 218 4 134 2 262 2 300 1 11 2 67 1 191 17 16 2 277 1 278 3 77 2 78 2 81 1 88 8 165 2 26 2 31 2 89 2 34 1 
210 1 92 1 94 1 292 2 3 1 294 5 179 1 46 2 51 1 256 1 218 2 11 1 191 9 196 1 278 1 78 1 77 1 81 1 83 1 160 2 88 4 163 1 26 1 165 2 31 1 89 1 
210 1 92 2 0 3 94 1 3 1 294 10 131 2 46 6 179 3 256 2 51 3 298 1 218 4 134 3 262 3 300 1 11 2 67 1 191 19 16 3 277 1 278 2 77 2 78 1 81 1 88 9 165 3 26 1 31 1 89 2 
92 1 210 2 191 4 94 1 3 1 294 2 278 1 256 1 78 1 77 1 218 2 81 1 88 2 26 2 31 1 89 1 11 1 
66 1 135 1 21 1 283 1 161 1 188 1 167 1 102 1 156 1 173 1 
231 1 171 1 
66 1 100 1 21 1 283 1 263 1 188 1 167 1 52 1 173 1 
113 1 109 1 
228 1 129 1 297 1 
66 1 272 2 71 1 276 1 199 1 21 1 283 1 7 1 164 1 188 1 167 1 103 1 173 1 
66 1 272 2 71 1 276 1 199 1 21 1 283 1 7 1 164 1 188 1 167 1 103 1 173 1 
66 1 272 2 71 1 276 1 199 1 21 1 283 1 7 1 164 1 188 1 167 1 103 1 173 1 
113 1 109 1 297 1 
113 1 109 1 297 1 
228 1 129 1 
228 1 129 1 297 1 
212 1 242 1 
66 1 272 1 21 1 7 1 283 1 108 1 71 1 188 1 167 1 76 1 199 1 269 1 173 1 
92 1 248 1 290 1 124 1 128 2 294 1 256 1 53 1 137 2 218 2 139 1 11 1 13 1 148 2 106 2 191 2 107 1 15 2 74 1 279 2 158 1 312 2 20 1 87 1 88 1 23 1 114 1 166 1 30 2 89 1 170 2 205 1 206 2 33 1 288 1 209 1 
91 1 41 1 290 1 106 2 128 2 178 1 19 1 195 1 157 1 258 1 259 1 310 2 137 1 185 1 112 1 27 1 30 2 29 1 270 1 
91 1 41 1 301 1 290 1 106 1 128 1 195 1 157 1 258 1 259 1 310 2 185 1 137 1 112 1 30 1 29 1 270 1 
290 1 106 1 15 1 128 1 291 1 19 1 258 1 309 1 137 1 241 1 9 1 30 1 170 1 60 1 
91 1 41 1 290 1 106 1 128 1 178 1 19 1 195 1 157 1 258 1 259 1 310 2 137 1 185 1 112 1 30 1 29 1 270 1 
284 1 
45 1 140 1 118 1 97 1 
14 1 201 1 68 1 45 1 316 1 267 1 110 1 79 1 
12 1 248 1 290 1 14 1 126 1 106 1 193 1 15 1 68 1 128 1 177 1 49 1 137 2 201 1 162 1 316 1 9 1 30 1 267 1 170 2 286 1 
14 1 201 1 68 1 45 1 316 1 31 1 275 1 267 1 278 1 78 1 
14 1 68 1 71 1 292 1 45 2 179 1 75 2 51 2 281 1 160 1 201 1 163 1 316 1 141 1 265 1 267 1 
14 1 201 1 68 1 45 1 316 1 118 1 
134 1 262 1 16 1 45 1 267 1 179 1 51 1 
106 1 128 1 30 1 9 1 
14 1 201 1 68 1 45 1 316 1 267 1 286 1 36 1 
261 1 66 1 167 1 
66 1 161 1 242 1 252 1 167 1 
261 1 66 1 167 1 
261 1 66 1 167 1 
66 1 167 1 122 1 
66 1 167 1 122 1 
66 1 167 1 122 1 
66 1 167 1 
21 1 173 1 
92 1 292 2 294 4 3 1 179 1 46 2 51 1 256 1 218 2 11 1 191 7 275 1 196 1 278 1 78 1 83 1 160 2 88 3 163 1 165 2 31 1 89 1 
92 2 0 1 292 2 294 5 3 1 179 1 46 3 256 2 51 2 218 4 134 1 262 1 11 2 67 1 191 10 275 1 196 1 278 2 78 1 160 2 83 1 315 1 88 5 163 1 165 2 31 1 89 2 
92 1 218 2 191 2 88 1 294 1 3 1 31 1 275 1 89 1 11 1 278 1 256 1 78 1 
92 3 0 3 1 1 292 2 294 7 3 1 179 2 46 6 256 3 51 3 218 6 134 2 262 2 11 3 63 1 104 1 191 16 273 1 16 1 275 1 155 1 196 1 278 1 78 1 160 2 83 1 315 1 88 9 163 1 165 3 31 1 89 3 
92 1 292 2 294 4 3 1 179 1 46 2 51 1 256 1 218 2 11 1 191 7 275 1 196 1 278 1 78 1 83 1 160 2 88 3 163 1 165 2 31 1 89 1 
92 1 218 2 191 2 88 1 294 1 3 1 31 1 275 1 89 1 11 1 278 1 256 1 78 1 
92 4 0 3 1 2 292 2 294 8 3 1 179 2 46 6 256 4 51 3 218 8 134 2 262 2 11 4 63 1 104 1 191 17 273 1 16 1 275 1 155 1 196 1 278 1 78 1 160 2 83 1 315 1 88 9 163 1 165 3 31 1 89 4 
92 4 0 3 1 2 294 7 3 1 179 2 46 6 256 4 51 3 218 8 134 3 262 3 11 4 63 1 104 1 191 16 273 1 16 2 275 1 155 1 277 1 278 1 78 1 88 9 165 3 31 1 89 4 
0 2 191 7 292 2 294 4 179 1 46 4 196 1 51 1 83 2 160 2 88 3 163 1 165 2 
92 4 0 1 1 2 292 2 294 8 3 1 179 2 46 4 256 4 51 3 218 8 134 2 262 2 11 4 63 1 104 1 191 17 273 1 16 1 275 1 155 1 196 1 277 1 278 1 78 1 160 2 83 1 88 9 163 1 165 3 31 1 89 4 
92 2 0 2 191 9 1 1 292 2 294 5 179 1 46 4 196 1 51 1 256 2 218 4 83 1 160 2 88 4 163 1 165 2 89 2 11 2 
191 5 292 2 294 3 46 2 179 1 196 1 51 1 97 1 83 1 160 2 88 2 163 1 165 2 
92 1 0 1 191 4 16 1 294 2 179 1 46 2 256 1 51 1 218 2 134 1 315 1 262 1 88 2 165 1 89 1 11 1 
191 2 88 1 294 1 31 1 278 1 78 1 
92 1 0 1 1 1 292 2 294 9 179 3 46 4 51 3 256 1 134 2 218 2 262 2 11 1 67 1 146 1 229 1 191 17 16 2 196 1 278 2 160 2 83 1 88 8 163 1 165 3 31 2 89 1 
191 1 294 1 278 1 
191 1 88 1 31 1 
92 1 0 1 191 6 16 1 294 3 46 3 179 1 256 1 51 1 218 2 134 1 315 1 262 1 88 3 165 2 89 1 11 1 208 1 
92 1 0 1 294 6 3 1 179 2 46 2 256 1 51 2 218 2 134 2 262 2 11 1 63 1 104 1 191 12 273 1 16 2 275 1 155 1 278 1 78 1 88 6 165 1 31 1 89 1 
191 4 292 1 294 2 179 1 46 1 51 1 160 1 88 2 163 1 165 1 
92 1 0 1 191 3 1 1 292 1 294 2 251 1 46 2 196 1 256 1 160 1 83 1 218 2 88 1 165 1 89 1 11 1 
191 5 292 2 294 3 46 2 179 1 51 1 160 2 88 2 163 1 165 2 265 1 
92 1 0 1 191 2 3 1 46 1 256 1 51 1 218 2 134 1 88 2 89 1 11 1 
92 1 0 1 191 4 16 1 294 2 3 1 179 1 46 2 256 1 51 1 218 2 134 1 262 1 88 2 165 1 89 1 11 1 
92 3 0 1 191 3 1 1 292 1 294 2 3 1 251 1 46 2 277 1 256 3 218 6 160 1 88 1 165 1 89 3 11 3 
92 5 0 6 1 2 292 3 294 19 3 1 251 1 46 12 179 5 132 1 256 5 51 5 218 10 134 3 262 3 11 5 67 1 191 35 16 3 306 1 196 1 277 1 278 4 308 1 78 1 160 3 83 1 315 1 88 16 163 2 165 6 31 3 89 5 
312 1 99 1 70 1 223 1 206 1 119 1 279 1 
145 1 271 1 125 1 70 1 250 1 279 1 260 1 99 1 312 1 223 1 119 1 206 1 
309 1 137 1 290 1 106 1 15 1 291 1 128 1 30 1 9 1 170 1 97 1 
248 1 290 1 106 1 15 1 128 1 48 1 50 1 279 2 280 1 312 1 137 1 223 1 243 1 9 1 30 1 170 1 206 2 120 1 
248 2 290 1 106 1 175 1 15 2 128 1 152 1 48 1 50 1 235 1 279 1 280 1 312 1 200 1 137 1 86 1 243 1 30 1 170 3 206 1 35 1 120 1 
248 2 290 1 106 1 175 1 15 2 128 1 152 1 48 1 50 1 235 1 279 1 280 1 312 1 200 1 137 1 86 1 243 1 30 1 224 1 170 3 206 1 35 1 
126 1 106 1 128 1 71 1 30 1 170 1 235 1 96 1 
126 1 106 1 44 1 128 1 71 1 30 1 170 1 235 1 
137 1 290 1 106 1 85 1 128 1 30 1 
248 2 290 2 106 3 107 1 128 3 15 3 177 1 253 1 74 1 181 1 137 4 87 1 23 2 27 1 166 2 9 2 30 3 10 1 170 3 
92 2 248 1 211 1 290 1 128 1 292 2 294 3 179 1 46 2 48 1 51 1 50 1 256 2 53 2 137 1 218 4 223 2 11 2 13 1 191 5 106 1 15 1 196 1 279 2 280 1 312 1 160 2 83 1 88 2 24 1 163 1 165 2 27 1 243 1 30 1 89 2 170 1 205 2 206 2 172 1 120 1 320 1 209 1 
108 1 71 1 
37 1 12 1 248 1 290 1 106 2 128 2 15 1 177 1 137 2 85 1 27 1 30 2 170 2 
290 1 106 4 128 4 291 1 15 1 309 1 137 1 138 1 56 1 27 1 9 1 30 4 170 1 
248 1 290 1 106 2 128 2 107 1 15 1 74 1 235 1 137 2 23 1 219 1 166 1 30 2 170 1 
310 1 137 1 41 1 290 1 106 1 128 1 29 1 30 1 9 1 157 1 
248 1 290 1 106 2 128 2 15 2 107 1 74 1 137 2 185 1 87 1 23 1 114 1 27 1 166 1 30 2 170 2 
248 1 290 1 106 2 128 2 15 2 107 1 74 1 181 1 137 2 87 1 23 1 27 1 166 1 9 1 30 2 170 2 
248 1 290 1 106 2 128 2 15 2 107 1 47 1 74 1 137 2 87 1 23 1 27 1 166 1 9 1 30 2 170 2 
248 1 290 1 106 1 15 1 128 1 48 1 50 1 279 2 280 1 312 1 137 1 223 1 243 1 9 1 30 1 224 1 170 1 206 2 
248 1 290 1 106 1 128 1 15 1 177 1 253 1 235 1 137 2 23 1 166 1 30 1 170 1 
82 1 127 1 2 1 223 1 216 1 
42 1 127 1 108 1 71 1 2 1 216 1 282 1 82 1 5 1 200 1 86 1 314 1 190 1 35 1 
312 1 82 1 20 1 139 1 2 1 206 1 216 1 279 1 158 1 
42 1 190 1 216 1 
133 1 304 1 215 1 97 1 
133 1 302 1 304 1 28 1 254 1 215 1 180 1 
302 1 151 1 144 1 
226 1 302 3 304 1 305 1 254 3 180 1 215 1 133 1 84 1 28 1 142 1 321 2 
133 1 217 1 302 2 304 1 221 1 28 1 254 2 215 1 180 1 
302 1 41 1 305 1 176 1 254 1 180 1 259 1 133 1 310 1 28 1 222 1 
133 1 302 1 304 1 305 1 28 1 254 1 180 1 
302 1 304 2 305 1 28 1 254 1 215 1 180 1 
302 2 304 1 305 1 249 1 254 2 180 2 133 1 220 1 28 2 287 1 
302 3 304 1 305 1 254 3 215 1 180 1 133 2 221 2 28 1 222 1 169 1 319 1 246 1 
302 2 41 1 304 1 305 1 254 2 215 1 180 1 73 1 157 1 259 1 133 1 310 2 221 1 28 1 270 1 
302 4 304 1 305 1 254 4 215 1 180 2 133 2 217 1 8 1 221 2 28 2 222 1 246 1 
133 1 302 1 304 1 305 1 28 1 254 1 215 1 180 1 
226 1 302 4 304 2 254 4 215 2 180 1 255 1 133 3 221 2 142 1 28 1 222 1 246 1 321 1 
38 1 302 2 93 1 304 1 305 1 254 2 180 1 215 1 133 1 184 1 221 1 28 1 
226 1 302 3 304 1 305 1 254 3 180 1 215 1 183 1 133 1 28 1 142 2 321 2 
311 1 133 2 105 1 202 2 
302 1 305 1 318 1 28 1 254 1 180 1 
133 1 302 2 304 1 305 1 221 1 28 1 254 2 215 1 180 1 319 1 
233 1 
133 1 302 1 304 1 305 1 28 1 254 1 215 1 180 1 
133 1 302 3 304 1 305 1 221 1 28 1 254 3 215 1 180 1 319 1 321 1 
133 1 222 1 255 1 246 1 
133 1 304 1 

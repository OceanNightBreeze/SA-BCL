#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 227 4 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 227 4 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 297 331 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
242 1 306 1 227 1 91 1 319 1 192 1 
242 1 306 1 264 1 91 1 319 1 192 1 
242 1 306 1 264 1 91 1 319 1 192 1 
242 1 306 1 264 1 91 1 319 1 192 1 
242 1 306 1 264 1 91 1 319 1 192 1 
242 4 138 3 256 1 228 1 319 1 111 1 71 1 15 1 192 1 306 1 183 3 21 1 371 1 279 1 266 2 149 1 91 4 61 2 
138 1 242 2 47 1 228 1 319 1 15 1 192 1 275 1 36 1 115 1 306 1 371 1 172 1 91 2 149 1 133 1 
242 2 183 1 306 1 227 1 91 2 319 1 192 1 333 1 4 1 
242 2 183 1 306 1 227 1 91 2 319 1 192 1 333 1 4 1 
79 1 317 1 300 1 236 1 12 1 177 1 3 1 345 1 370 1 337 1 338 1 6 1 234 1 376 1 
166 1 
300 2 370 2 338 1 129 1 142 1 27 1 166 1 72 1 
300 5 54 1 46 1 129 1 247 1 142 1 309 1 166 1 273 1 240 2 370 5 338 2 27 2 373 1 109 2 285 1 361 1 299 1 316 2 
366 1 142 1 166 1 
224 1 67 2 166 1 
79 2 317 2 236 1 6 2 13 1 234 2 3 2 345 2 
29 1 236 1 257 1 357 1 3 2 358 1 74 1 5 1 265 1 6 3 41 1 9 1 360 1 42 1 79 2 317 2 363 2 80 1 244 1 301 1 302 1 271 1 13 1 62 1 345 3 250 1 206 2 324 2 348 1 131 2 23 1 66 1 351 1 92 2 159 1 234 2 284 1 
79 1 317 1 236 1 12 1 337 1 6 1 234 1 3 1 345 1 376 1 
254 1 300 1 142 1 166 1 56 1 345 1 101 1 171 1 370 1 6 1 337 1 26 1 234 1 269 1 
79 1 317 1 300 2 142 1 166 1 3 1 56 1 345 1 171 1 370 2 6 1 337 1 26 1 234 1 269 1 
300 1 117 1 370 1 338 1 27 1 
300 2 370 2 195 1 338 1 129 1 142 1 27 1 166 1 
300 1 370 1 27 1 
317 1 80 1 363 1 301 1 302 1 271 1 3 1 229 1 345 2 145 1 74 1 51 1 23 1 265 1 131 1 6 2 351 1 92 1 284 1 234 1 
79 1 317 1 186 1 290 1 13 2 3 1 345 2 6 2 234 2 
219 1 229 1 235 1 
80 1 363 1 301 1 302 1 271 1 13 1 345 1 74 1 157 1 131 1 265 1 23 1 6 1 351 1 92 1 284 1 
366 1 13 1 
79 1 317 3 6 3 13 1 234 3 3 3 345 3 145 1 
317 1 337 1 6 1 234 1 3 1 345 1 376 1 
79 1 317 1 186 1 290 1 337 1 6 1 234 1 3 1 345 1 
186 1 354 1 236 1 257 1 189 1 357 1 56 1 3 3 145 1 74 1 5 1 171 1 265 1 6 4 337 1 41 1 360 1 42 1 269 1 79 2 317 3 80 1 363 1 300 1 301 1 244 1 302 1 271 1 13 1 62 1 345 4 206 2 324 1 348 1 51 1 370 1 23 1 131 1 351 1 92 1 159 1 26 1 284 1 234 3 
311 1 317 1 101 1 6 2 13 1 234 2 3 1 345 2 145 1 
79 1 317 3 300 1 186 1 189 1 166 1 3 3 56 1 345 3 145 2 171 1 51 1 370 1 337 1 6 3 281 1 26 1 234 3 269 1 
79 1 317 2 186 1 3 2 345 2 229 1 145 1 6 2 234 2 235 1 
80 1 363 1 301 1 302 1 271 1 13 1 345 1 74 1 131 1 265 1 23 1 6 1 92 1 351 1 284 1 
80 1 363 1 301 1 271 1 13 1 144 1 165 1 345 1 74 1 39 1 131 1 23 1 337 1 6 1 92 1 351 1 284 1 
120 1 216 1 257 1 141 1 219 2 357 1 359 1 170 1 335 1 41 1 196 1 9 2 42 1 360 2 10 1 84 1 229 2 206 2 20 1 324 4 348 1 233 1 159 1 235 2 
317 1 95 1 337 1 6 1 26 1 234 1 3 1 345 1 
79 1 317 4 186 1 13 1 3 4 345 5 145 2 311 1 19 1 101 1 51 1 6 5 152 1 234 5 
317 2 95 1 337 1 6 2 234 2 3 2 345 2 376 1 
136 1 102 1 14 1 
136 2 45 1 151 1 14 2 93 1 182 1 
136 1 14 1 
136 1 14 1 
45 1 182 1 
45 1 182 1 
45 1 182 1 
136 1 7 1 14 1 
136 1 7 1 14 1 
136 1 7 1 14 1 
136 1 1 1 14 1 
136 1 1 1 14 1 
136 1 1 1 14 1 
136 2 154 1 300 2 342 1 163 2 175 2 0 2 246 1 308 1 166 1 14 2 344 1 130 1 64 2 296 1 59 2 370 2 212 3 93 1 
136 1 163 1 356 1 3 2 293 1 59 1 102 1 6 2 339 1 315 1 317 2 300 1 175 1 13 1 14 1 344 1 345 2 156 1 18 1 64 1 212 1 370 1 25 1 234 2 
365 2 279 1 47 1 15 2 168 1 
279 1 149 1 15 1 
149 1 47 1 15 1 
365 1 336 1 279 2 47 1 15 3 168 1 
365 1 279 1 47 1 15 2 304 1 168 1 
54 1 120 1 291 1 356 1 143 2 142 1 166 2 240 1 359 1 169 1 338 4 104 1 107 2 109 1 315 1 77 2 299 2 316 1 224 1 300 5 155 1 303 1 129 1 247 3 84 1 18 1 20 1 370 5 89 1 67 3 27 1 52 1 
54 1 236 1 187 1 142 1 190 3 143 2 3 1 240 1 338 5 6 1 337 1 104 1 109 1 299 2 300 6 12 1 203 1 303 1 247 3 345 1 18 2 20 1 117 3 67 3 27 4 120 1 166 3 359 1 169 1 126 1 77 2 316 1 79 1 317 1 224 1 177 1 129 1 84 1 370 6 89 1 234 1 376 1 
120 1 291 1 142 1 143 2 166 3 240 1 359 1 169 1 338 2 107 1 109 1 77 2 316 1 299 2 224 2 300 3 155 1 303 1 247 3 84 1 18 1 20 1 370 3 89 1 67 4 285 1 
30 1 120 2 291 1 142 1 143 4 166 4 240 1 359 2 57 1 169 1 338 3 105 1 107 2 109 1 77 4 316 1 299 4 224 3 300 4 155 1 303 1 247 5 84 2 18 2 20 2 370 4 89 2 67 7 285 1 
372 1 
366 1 214 1 351 1 
351 1 297 1 
351 1 74 1 
349 1 271 1 350 1 214 2 351 3 74 1 
271 1 351 1 74 1 
351 1 135 1 
69 2 120 1 237 1 84 1 220 1 310 1 100 1 276 1 324 7 335 3 307 1 76 1 40 1 196 2 374 1 360 3 223 1 9 4 
69 3 162 4 237 2 31 1 120 4 238 3 257 1 329 1 330 1 220 2 359 3 310 2 100 5 335 10 76 1 40 1 41 1 196 5 223 1 42 1 360 15 9 16 84 4 369 1 321 1 206 2 276 1 20 3 324 31 348 1 307 2 89 3 326 1 286 1 
69 2 120 1 237 1 257 2 220 1 310 1 100 1 335 4 76 1 41 2 196 3 42 2 9 5 360 4 223 1 84 1 206 4 276 1 324 9 348 2 211 1 307 1 90 1 326 1 
69 2 120 1 237 1 84 1 220 1 310 1 100 1 276 1 324 7 335 3 307 1 76 1 40 1 196 2 360 3 223 1 9 4 
69 2 120 1 237 1 84 1 220 1 310 1 100 1 276 1 324 7 335 3 307 1 76 1 40 1 196 2 360 3 223 1 9 4 
260 1 192 1 36 2 74 1 173 2 150 2 127 1 363 1 80 1 242 1 201 2 301 1 81 1 226 1 368 1 176 1 319 1 16 1 131 1 23 1 91 1 92 1 351 1 
352 1 97 1 259 1 192 1 36 1 123 1 38 1 336 1 149 1 173 1 150 1 298 1 363 1 242 1 201 1 301 1 63 1 47 1 319 1 15 2 306 1 279 1 131 1 23 1 91 1 92 1 
138 1 97 1 259 1 192 1 36 1 123 1 38 1 336 1 149 1 173 1 150 1 298 1 363 1 242 2 201 1 301 1 63 1 47 1 228 1 319 1 15 2 183 1 306 1 371 1 279 1 131 1 23 1 91 2 92 1 185 1 
138 1 352 1 97 1 259 1 192 1 36 1 38 1 336 1 149 1 173 1 150 1 298 1 363 1 242 3 201 1 81 1 301 1 63 1 47 1 228 1 319 1 15 2 183 2 371 1 279 1 131 1 213 1 23 1 91 3 92 1 
138 1 352 1 97 1 259 1 36 1 336 1 173 1 149 1 150 1 363 1 242 2 201 1 301 1 63 1 47 1 228 1 15 2 183 2 371 1 131 1 213 1 23 1 279 1 91 2 92 1 
289 1 
137 1 54 1 140 1 2 1 188 1 142 1 191 1 56 1 240 1 99 1 101 1 194 4 6 1 337 1 109 1 197 1 8 1 299 2 300 5 301 1 303 1 247 2 345 1 208 1 305 2 346 2 158 2 65 1 23 1 67 2 351 1 27 6 26 1 28 2 254 1 166 2 74 1 262 2 171 1 221 1 269 1 316 1 224 2 80 2 363 2 226 1 176 1 129 3 49 2 88 2 184 1 370 5 131 2 92 2 234 1 
254 1 140 1 2 1 56 1 72 1 99 1 101 1 171 1 194 2 6 1 337 1 197 1 8 1 269 1 300 3 129 1 345 1 370 3 26 1 27 2 234 1 28 1 
254 1 140 1 2 1 142 1 56 1 166 1 72 1 99 1 101 1 171 1 194 3 6 1 337 1 197 1 8 1 269 1 300 3 129 1 345 1 305 1 370 3 27 1 26 1 234 1 
254 1 140 1 2 1 142 1 56 1 166 1 72 1 99 1 101 1 171 1 194 3 6 1 337 1 197 1 8 1 269 1 300 3 129 1 345 1 305 1 346 1 370 3 26 1 27 2 234 1 28 1 
254 1 288 1 54 1 140 1 2 1 142 5 166 5 56 1 98 1 240 1 72 1 99 1 262 2 101 1 171 1 194 6 6 1 337 1 109 1 197 1 8 1 269 1 299 1 316 1 224 2 200 1 128 1 300 5 129 3 248 1 247 1 345 1 208 1 49 2 305 4 88 2 346 4 158 2 184 1 370 5 27 7 26 1 234 1 28 4 
54 1 140 1 2 1 142 1 56 1 240 1 99 1 101 1 194 4 337 1 6 1 8 1 109 1 197 1 299 1 300 4 247 1 345 1 208 1 305 2 346 2 158 2 67 2 26 1 27 4 28 2 254 1 166 2 262 2 171 1 221 1 269 1 316 1 224 2 129 2 49 2 88 2 184 1 370 4 234 1 
254 1 54 1 140 1 2 1 142 1 166 1 56 1 240 1 99 1 262 2 101 1 171 1 194 4 6 1 337 1 197 1 8 1 109 1 269 1 299 1 316 1 224 2 200 1 300 4 128 1 129 2 248 1 247 1 345 1 208 1 305 2 49 2 346 2 88 2 158 2 184 1 370 4 27 4 26 1 28 2 234 1 
254 1 54 1 140 1 2 1 142 1 166 1 56 1 240 1 99 1 262 2 101 1 171 1 194 4 6 1 337 1 197 1 8 1 109 1 269 1 299 1 316 1 224 2 200 1 300 4 128 1 129 2 248 1 247 1 345 1 208 1 305 2 49 2 346 2 88 2 158 2 184 1 370 4 27 4 26 1 28 2 234 1 
254 1 54 1 140 1 2 1 142 1 166 1 56 1 122 1 240 1 99 1 101 1 171 1 194 4 6 1 337 1 197 1 8 1 109 1 269 1 110 2 299 1 316 1 300 4 318 2 129 2 248 1 247 1 345 1 305 2 49 2 346 2 158 2 184 1 370 4 132 1 67 2 27 4 26 1 282 1 28 2 234 1 
254 1 288 1 54 1 140 1 2 1 142 1 166 1 56 1 240 1 99 1 262 2 101 1 171 1 194 5 6 1 337 1 109 1 197 1 8 1 269 1 299 1 316 1 224 2 200 1 300 4 128 1 129 2 248 1 247 1 345 1 208 1 49 2 305 3 88 2 346 3 158 2 184 1 370 4 26 1 27 5 234 1 28 3 
254 1 288 1 54 1 140 1 2 1 142 1 166 1 56 1 240 1 99 1 262 2 101 1 171 1 194 5 6 1 337 1 109 1 197 1 8 1 269 1 299 1 316 1 224 2 200 1 300 4 128 1 129 2 248 1 247 1 345 1 208 1 49 2 305 3 88 2 346 3 158 2 184 1 370 4 26 1 27 5 234 1 28 3 
54 1 140 1 2 1 142 1 56 1 240 1 99 1 101 1 194 4 337 1 6 1 8 1 109 1 197 1 299 1 110 2 300 4 247 1 345 1 305 2 346 2 158 2 67 2 26 1 27 4 28 2 254 1 166 1 171 1 221 1 269 1 316 1 318 2 129 2 49 2 184 1 370 4 282 1 234 1 
94 1 352 1 141 1 257 2 357 2 3 1 73 1 145 1 74 2 124 1 5 1 6 1 41 2 42 2 9 1 360 1 362 1 317 1 363 7 80 2 301 2 226 1 44 1 176 1 320 1 345 1 206 4 250 1 324 2 348 2 23 2 131 8 66 2 351 3 92 8 159 2 68 1 185 1 234 1 
186 1 120 1 219 1 257 1 357 1 3 1 359 1 335 1 6 1 196 1 41 1 42 1 9 1 360 2 79 1 317 1 270 1 84 1 229 1 345 1 206 2 20 1 324 3 348 1 89 1 159 1 375 1 234 1 235 1 
69 1 120 1 237 1 366 1 219 1 13 2 141 1 257 1 357 1 84 1 229 1 206 2 310 1 276 1 324 6 348 1 335 2 76 1 196 2 159 1 41 1 360 3 9 3 223 1 42 1 235 1 
162 3 161 1 120 1 238 3 257 2 219 11 357 1 359 1 334 1 100 1 5 1 335 2 196 1 41 2 360 6 42 2 9 8 225 1 270 1 13 1 84 2 369 1 229 11 250 1 206 4 20 2 324 14 348 2 89 2 252 1 159 2 235 4 286 1 
257 1 357 1 3 1 145 1 74 1 5 1 265 1 6 2 41 1 42 1 360 1 9 1 340 1 363 1 80 1 317 1 301 1 270 1 341 1 302 1 271 1 13 1 345 2 206 2 250 1 157 1 324 2 348 1 51 1 23 1 131 1 351 1 92 1 159 1 284 1 325 1 234 1 235 1 
237 1 96 1 3 1 145 1 100 4 5 1 335 8 6 3 196 4 9 10 243 2 301 2 302 2 13 2 62 2 345 3 250 1 206 6 17 2 20 2 348 3 210 2 23 2 351 2 159 3 352 1 69 1 120 3 257 3 219 7 357 3 167 2 359 2 74 2 310 1 265 2 76 1 41 3 223 1 360 10 42 3 268 1 78 1 363 3 80 1 317 1 270 1 271 2 84 3 229 7 276 1 324 20 51 1 131 3 89 2 92 3 234 1 284 2 235 7 
219 1 141 1 257 1 357 1 84 1 229 1 206 2 100 1 20 1 324 2 348 1 335 1 159 1 41 1 42 1 9 2 235 1 10 1 
216 1 120 1 219 1 141 1 257 1 357 1 229 1 206 2 359 1 324 2 348 1 335 1 196 1 159 1 41 1 42 1 360 2 235 1 
120 1 219 2 141 1 257 1 357 1 84 1 229 2 359 1 206 2 100 1 20 1 324 4 348 1 335 2 89 1 196 1 159 1 41 1 360 2 42 1 9 2 235 2 
44 1 219 1 257 1 357 1 84 1 229 1 206 2 100 1 20 1 324 2 348 1 335 1 159 1 41 1 42 1 9 2 235 1 10 1 
44 1 216 1 120 1 219 1 257 1 357 1 229 1 206 2 359 1 324 2 348 1 335 1 196 1 159 1 41 1 42 1 360 2 235 1 
120 1 44 1 219 2 257 1 357 1 84 1 229 2 359 1 206 2 100 1 20 1 324 4 348 1 335 2 89 1 196 1 159 1 41 1 360 2 42 1 9 2 235 2 
120 1 219 2 257 1 357 1 84 1 229 2 359 1 206 2 100 1 20 1 324 4 348 1 335 2 89 1 196 1 159 1 41 1 360 2 42 1 9 2 235 2 
257 1 357 1 74 1 5 1 265 1 6 1 41 1 9 1 42 1 360 1 363 1 80 1 301 1 302 1 271 1 13 1 62 1 345 1 250 1 206 2 324 2 348 1 23 1 131 1 92 1 351 1 159 1 284 1 
217 1 257 1 357 1 165 1 144 1 74 1 39 1 5 1 337 1 6 1 41 1 42 1 360 1 363 1 80 1 301 1 271 1 13 1 345 1 206 2 324 1 348 1 23 1 131 1 92 1 351 1 159 1 284 1 
270 1 120 1 219 2 257 1 357 1 84 1 229 2 359 1 206 2 100 1 20 1 324 4 348 1 335 2 89 1 196 1 159 1 41 1 360 2 42 1 9 2 235 2 
120 1 219 2 257 1 357 1 359 1 74 1 100 1 335 2 265 1 6 1 196 1 41 1 360 2 9 2 42 1 363 1 301 1 302 1 271 1 62 1 84 1 229 2 345 1 206 2 20 1 324 4 210 1 348 1 23 1 131 1 89 1 92 1 351 1 159 1 185 1 284 1 235 2 
186 1 120 1 257 1 219 1 357 1 3 1 359 1 100 1 335 1 312 1 6 1 41 1 360 1 42 1 9 2 79 1 317 1 270 1 84 1 345 1 229 1 206 2 20 1 324 3 348 1 89 1 159 1 234 1 235 1 
53 1 162 2 139 1 120 3 238 1 257 2 359 3 100 3 58 1 335 6 196 3 41 2 222 2 314 2 42 2 360 10 9 9 153 1 84 3 369 1 206 4 114 1 277 1 20 3 324 19 50 1 348 2 211 1 89 3 286 1 
53 2 162 2 327 1 120 2 238 2 32 1 257 3 35 1 241 1 359 2 100 2 335 4 58 1 196 2 41 3 222 1 314 4 360 12 42 3 9 14 153 1 343 1 84 3 369 2 181 1 206 6 277 1 20 3 324 26 50 2 348 3 211 1 89 3 326 2 
53 2 69 1 327 1 162 4 139 1 237 1 120 5 32 1 238 3 257 3 35 1 241 1 359 4 310 1 100 4 58 1 335 8 76 1 196 4 41 3 222 1 314 4 223 1 42 3 360 21 9 20 153 1 82 1 343 1 84 5 369 3 181 1 206 6 276 1 277 1 20 4 324 41 50 1 348 3 211 1 89 4 326 1 286 1 
53 2 69 1 327 1 162 4 139 1 237 1 120 4 32 1 238 3 257 4 35 1 241 1 359 3 310 1 100 3 58 1 335 7 76 1 196 4 41 4 222 1 314 4 223 1 42 4 360 18 9 20 153 1 82 1 343 1 84 5 369 3 181 1 206 8 276 1 277 1 20 4 324 38 50 1 348 4 211 1 89 4 326 2 286 1 
53 1 69 1 327 1 162 4 237 1 120 8 32 1 238 4 257 2 35 1 241 1 359 7 310 1 100 7 58 1 335 14 76 1 196 7 41 2 222 1 314 4 223 1 42 2 360 25 9 27 153 1 225 2 343 1 84 8 369 2 181 1 206 4 276 1 277 1 20 7 324 52 50 1 348 2 211 1 89 7 326 1 286 2 
130 1 86 1 136 1 175 1 163 1 64 1 59 1 246 1 14 1 93 1 
102 1 339 1 
136 1 193 1 347 1 175 1 163 1 64 1 59 1 180 1 14 1 
136 1 154 1 300 1 342 1 163 1 175 1 0 1 246 1 308 1 166 1 344 1 14 1 130 1 64 1 370 1 59 1 212 2 93 1 
136 1 154 1 300 1 342 1 163 1 175 1 0 1 246 1 308 1 166 1 344 1 14 1 130 1 64 1 370 1 59 1 212 2 93 1 
136 1 154 1 300 1 342 1 163 1 175 1 0 1 246 1 308 1 166 1 344 1 14 1 130 1 64 1 370 1 59 1 212 2 93 1 
118 1 151 1 7 1 
118 1 151 1 7 1 
22 1 1 1 
22 1 1 1 151 1 
25 1 156 1 
136 1 160 1 163 1 0 1 308 1 356 1 3 2 293 1 59 1 102 1 6 2 338 1 339 1 315 1 317 2 300 1 175 1 13 1 14 1 345 2 156 1 18 1 64 1 370 1 212 1 25 1 234 2 
118 1 7 1 
22 1 1 1 151 1 
164 1 257 1 70 1 357 1 74 1 124 1 5 1 6 2 41 1 42 1 9 1 360 1 363 2 301 1 270 1 48 1 345 2 206 2 250 1 324 2 348 1 278 1 23 1 131 2 66 2 351 1 92 2 159 1 68 1 234 2 215 1 
80 1 363 1 301 1 226 1 176 1 16 1 74 1 294 1 295 1 23 1 131 1 173 1 351 1 92 1 
352 1 363 1 301 1 47 1 97 1 259 1 15 2 205 1 294 1 336 1 279 1 131 1 23 1 149 1 173 1 92 1 24 1 298 1 
352 1 363 2 301 1 47 1 97 1 259 1 15 2 205 1 294 1 336 1 279 1 23 1 131 2 149 1 173 1 92 2 24 1 185 1 298 1 
352 1 363 1 301 1 47 1 97 1 259 1 15 2 336 1 279 1 131 1 23 1 149 1 173 1 92 1 24 1 134 1 298 1 
113 1 
54 1 46 1 247 1 142 1 166 1 273 1 109 1 240 1 299 1 316 1 
224 5 120 2 218 1 247 5 143 5 84 2 166 5 17 1 359 2 20 2 231 2 89 2 67 10 77 5 299 5 
300 1 370 1 129 1 142 1 27 1 166 1 
137 1 353 1 54 1 355 1 191 1 332 1 240 2 74 2 106 1 109 2 316 2 299 1 174 1 363 3 80 2 300 2 301 3 226 1 176 1 271 1 303 1 129 1 247 1 85 1 65 1 370 2 23 2 131 3 351 2 92 3 27 2 283 1 285 1 
366 1 46 1 247 1 142 1 166 1 273 1 299 1 
54 1 142 1 166 2 240 1 262 1 109 1 299 1 316 1 224 1 300 1 129 1 247 1 208 1 88 1 370 1 67 1 27 1 
80 1 363 1 301 2 54 1 271 1 331 1 239 1 240 1 74 1 349 1 23 1 131 1 351 1 92 1 297 1 109 1 316 1 
137 1 162 1 54 2 327 1 120 2 32 1 238 1 218 1 143 5 142 2 166 5 35 1 240 2 359 2 148 1 109 2 77 5 316 2 299 5 224 3 300 1 367 1 303 1 129 1 247 8 343 1 84 2 369 1 181 1 20 2 370 1 231 2 89 2 67 6 27 1 
54 1 237 1 120 1 236 1 218 1 3 1 240 1 310 1 337 1 6 1 109 1 223 1 316 1 299 2 79 1 200 1 317 1 300 1 12 1 177 1 247 2 83 1 84 2 345 1 231 2 370 1 234 1 376 1 
236 1 257 1 357 1 3 2 74 1 5 1 265 1 6 3 41 1 360 1 42 1 79 2 363 1 80 1 317 2 244 1 301 1 302 1 271 1 13 1 62 1 345 3 206 2 324 1 348 1 131 1 23 1 92 1 351 1 159 1 234 2 284 1 
224 2 137 1 69 1 54 1 303 1 247 1 143 2 142 2 166 4 240 1 67 4 109 1 77 2 299 2 316 1 
130 1 175 1 163 1 156 1 251 1 
175 1 163 1 313 1 
175 1 163 1 313 1 
175 1 163 1 313 1 
175 1 163 1 292 1 
175 1 163 1 292 1 
175 1 163 1 292 1 
175 1 163 1 
136 1 14 1 
237 2 120 2 257 1 83 1 84 2 206 2 310 2 100 2 324 10 348 1 211 1 335 5 41 1 196 3 42 1 9 5 360 5 223 1 
257 1 84 1 206 2 20 1 100 1 324 2 348 1 211 1 335 1 41 1 42 1 9 2 
120 1 257 1 84 1 359 1 206 2 20 1 100 1 324 4 348 1 335 2 211 1 89 1 196 1 41 1 360 2 42 1 9 2 
139 1 237 1 328 1 257 3 206 6 310 1 100 1 324 3 348 3 211 1 335 2 41 3 196 1 326 1 360 2 42 3 9 1 
69 1 162 4 237 3 31 1 139 1 120 5 328 1 238 3 257 5 329 1 359 3 310 3 100 5 335 12 76 1 41 5 196 7 223 2 360 18 42 5 9 16 249 1 84 5 321 1 369 1 206 10 276 1 20 3 324 34 348 5 211 1 89 3 326 2 286 1 
69 1 162 1 120 1 237 1 238 1 32 1 257 1 310 1 335 2 76 1 41 1 196 2 360 4 42 1 9 4 223 1 84 1 369 1 206 2 276 1 324 8 348 1 211 1 
69 1 162 2 120 1 237 1 32 1 238 1 257 2 310 1 100 1 335 3 76 1 196 2 41 2 223 1 360 5 42 2 9 6 249 1 84 2 369 1 206 4 276 1 20 1 324 11 348 2 211 1 89 1 286 1 
69 1 162 1 327 1 237 1 120 3 238 1 32 1 257 3 35 1 359 2 310 1 100 1 335 4 76 1 41 3 196 3 223 1 360 10 42 3 9 9 249 1 84 3 343 1 369 1 181 1 206 6 276 1 20 2 324 19 348 3 211 1 89 2 326 1 
69 1 162 1 327 1 237 1 120 2 238 1 32 1 257 3 35 1 359 1 310 1 100 2 335 5 76 1 41 3 196 3 223 1 360 7 42 3 9 10 249 1 84 3 343 1 369 1 181 1 206 6 276 1 20 2 324 17 348 3 211 1 89 2 326 1 
69 1 162 1 120 1 237 1 238 1 32 1 257 1 310 1 335 2 76 1 41 1 196 2 360 4 42 1 9 4 223 1 84 1 369 1 206 2 276 1 324 8 348 1 211 1 
162 1 327 1 120 2 238 1 32 1 257 1 35 1 359 2 100 1 335 2 41 1 196 1 360 6 42 1 9 6 84 2 343 1 369 1 181 1 206 2 20 2 324 12 348 1 211 1 89 2 
69 1 162 1 327 1 237 1 120 2 32 1 238 1 257 4 35 1 359 1 310 1 100 2 335 5 76 1 41 4 196 3 223 1 360 8 42 4 9 10 249 1 343 1 84 3 369 1 181 1 206 8 276 1 20 2 324 18 348 4 211 1 89 2 326 2 
162 1 327 1 139 1 120 2 32 1 238 1 257 4 35 1 359 2 100 3 335 6 41 4 196 3 360 7 42 4 9 9 343 1 84 3 369 1 181 1 206 8 20 3 324 16 348 4 211 1 89 3 326 2 
120 1 237 3 84 1 310 3 276 2 100 3 324 7 335 6 76 1 196 3 360 4 223 1 9 3 
69 1 162 1 327 1 237 1 139 1 120 2 32 1 238 1 257 4 35 1 359 1 310 1 100 1 335 4 76 1 41 4 196 3 223 1 360 8 42 4 9 10 343 1 84 3 369 1 181 1 206 8 276 1 20 2 324 18 348 4 211 1 89 2 326 2 
69 1 120 1 237 1 257 2 84 1 206 4 310 1 100 1 276 1 324 8 348 2 335 3 76 1 196 2 41 2 223 1 360 4 9 4 42 2 326 1 
69 1 366 1 237 1 120 1 84 1 310 1 276 1 324 6 335 2 76 1 196 2 360 3 223 1 9 3 
120 1 257 1 249 1 84 1 359 1 206 2 20 1 100 1 324 4 348 1 335 2 89 1 196 1 41 1 360 2 42 1 9 2 
162 2 120 1 238 1 84 1 369 1 359 1 20 1 100 1 324 7 335 2 89 1 196 1 360 4 9 3 286 1 
69 1 162 2 237 2 120 3 238 2 328 1 257 2 359 2 310 2 100 4 335 9 76 1 196 5 41 2 223 1 9 11 360 12 42 2 225 1 84 3 206 4 276 1 20 2 324 23 348 2 89 2 252 1 326 2 286 1 
324 1 162 1 360 1 
324 1 238 1 9 1 
120 1 257 1 249 1 84 1 206 2 17 1 359 1 20 1 100 1 324 6 348 1 335 3 89 1 41 1 196 2 42 1 360 3 9 3 
162 1 327 1 120 2 238 1 32 1 257 1 35 1 359 2 100 1 335 2 41 1 196 1 360 6 42 1 9 6 84 2 343 1 369 1 181 1 206 2 20 2 324 12 348 1 211 1 89 2 
120 1 237 1 84 1 310 1 100 1 324 6 335 2 196 1 223 1 9 3 360 3 
237 1 328 1 257 1 206 2 310 1 100 1 276 1 324 3 348 1 335 2 76 1 196 1 41 1 9 1 360 2 326 1 42 1 
311 1 101 1 6 1 13 1 33 1 234 1 345 1 
13 1 33 1 258 1 345 1 37 1 209 1 311 1 101 1 280 1 6 1 108 1 234 1 
11 1 80 1 363 4 301 1 226 1 176 1 322 1 74 1 131 4 23 1 92 4 351 1 185 1 
363 2 301 2 96 1 271 1 355 1 332 1 85 1 74 1 131 2 23 1 92 2 106 1 351 1 283 1 
363 1 80 1 301 1 23 1 131 1 149 1 47 1 97 1 92 1 15 1 
363 2 352 1 301 1 74 1 278 1 131 2 23 1 92 2 351 1 185 1 68 1 
11 1 94 1 80 1 363 4 226 1 301 2 176 1 73 1 74 2 131 5 23 2 92 5 351 3 185 1 68 1 283 1 
11 1 94 1 80 1 363 4 226 1 301 2 176 1 230 1 74 2 131 5 23 2 92 5 351 3 185 1 68 1 283 1 
363 1 80 1 301 1 226 1 366 1 23 1 176 1 131 1 351 1 92 1 74 1 
317 1 80 1 363 1 301 1 271 1 13 1 3 1 345 2 145 1 74 1 131 1 265 1 23 1 6 2 351 1 92 1 284 1 234 1 
317 2 363 1 301 1 271 2 13 1 3 1 345 2 145 1 74 2 125 1 131 1 265 1 23 1 337 1 6 2 351 3 92 1 26 1 284 1 234 2 283 1 135 1 269 1 
165 1 3 1 145 1 74 2 125 1 39 1 6 2 337 2 269 1 363 1 317 2 301 1 271 2 13 1 345 2 23 1 131 1 92 1 351 3 26 1 283 1 234 2 284 1 135 1 
142 1 166 1 74 1 125 1 171 1 297 1 43 1 199 1 363 3 80 1 300 2 301 1 271 1 322 1 370 2 23 1 131 3 214 1 351 4 92 3 27 1 283 1 135 1 
80 1 363 3 300 2 301 1 271 1 142 1 112 1 166 1 322 1 74 1 125 1 171 1 370 2 131 3 23 1 214 1 92 3 351 4 27 1 297 1 283 1 135 1 
363 1 301 1 23 1 131 1 92 1 320 1 
94 1 352 1 362 1 80 2 363 6 301 3 271 1 355 1 320 1 332 1 73 1 74 2 349 1 131 7 23 2 66 1 92 7 351 3 68 1 185 1 198 1 
237 1 3 1 145 1 335 2 6 2 196 2 9 3 243 1 301 1 302 1 62 1 13 2 345 2 206 4 210 1 348 2 23 1 351 1 159 2 215 1 69 1 120 1 257 2 219 1 357 2 74 1 310 1 265 1 76 1 41 2 42 2 223 1 360 3 363 1 317 1 270 1 271 1 84 1 229 1 276 1 324 6 131 1 92 1 185 1 234 1 284 1 235 1 
54 2 121 1 55 1 142 1 166 1 240 2 171 1 338 1 297 1 109 2 299 1 316 2 174 1 363 1 80 1 300 3 364 1 46 1 129 1 247 1 112 1 273 1 370 3 131 1 214 1 92 1 351 2 27 2 
363 1 301 2 271 1 239 1 320 1 74 1 349 1 131 1 23 1 372 1 214 1 92 1 351 1 
165 1 3 1 145 1 74 1 39 1 6 2 337 1 363 1 80 1 317 1 301 1 271 1 13 1 345 2 23 1 131 1 92 1 351 1 234 1 284 1 
363 1 301 2 271 1 355 1 332 1 74 1 349 1 131 1 23 1 92 1 351 1 283 1 198 1 
164 1 70 1 48 1 345 1 207 1 146 1 116 1 6 1 234 1 
261 1 232 1 146 1 
116 1 13 1 179 1 207 1 146 1 
300 2 13 1 189 1 179 2 142 1 166 1 56 1 274 1 146 1 207 2 116 2 261 1 171 1 370 2 337 1 338 1 232 1 26 1 269 1 
138 1 242 1 306 1 371 1 91 1 228 1 319 1 192 1 
242 4 138 3 202 1 256 1 228 2 319 1 192 1 115 1 87 1 183 2 371 2 266 1 91 4 253 1 
138 1 242 2 319 1 228 1 192 1 323 1 333 1 306 1 183 1 371 1 91 2 119 1 
138 1 242 3 319 1 228 1 192 1 87 2 115 2 306 1 371 1 91 3 60 1 253 1 
138 2 147 2 272 1 204 1 
242 1 306 1 103 1 91 1 319 1 192 1 
138 1 242 2 183 1 306 1 371 1 245 1 91 2 228 1 319 1 192 1 
34 1 
138 1 242 1 306 1 371 1 91 1 228 1 319 1 192 1 
138 1 366 1 371 1 228 1 
138 1 242 1 371 1 91 1 228 1 319 1 192 1 
91 1 150 1 36 1 
138 1 242 3 255 1 319 1 228 1 192 1 87 1 115 2 306 1 371 1 91 3 253 1 
138 1 242 2 183 1 371 1 61 1 91 2 228 1 319 1 192 1 
138 1 242 1 21 1 306 1 279 1 266 1 149 1 91 1 319 1 15 1 192 1 
138 1 242 1 306 1 371 1 91 1 319 1 192 1 
242 1 306 1 371 2 91 1 228 1 319 1 192 1 
138 1 242 2 319 2 178 1 192 2 75 1 306 1 371 1 91 2 287 1 
242 3 138 2 245 1 256 1 228 1 319 1 192 1 306 1 183 2 263 1 371 1 266 1 91 3 
138 1 242 2 47 1 228 1 319 1 15 2 192 1 306 1 183 1 371 1 336 1 279 1 91 2 149 1 267 1 
242 4 138 2 256 1 228 1 319 2 71 1 192 2 306 1 183 2 371 1 266 1 91 4 61 1 
242 3 138 1 245 1 319 1 228 1 192 1 115 1 183 1 306 1 371 1 91 3 
138 1 202 1 266 1 256 1 
138 1 371 1 

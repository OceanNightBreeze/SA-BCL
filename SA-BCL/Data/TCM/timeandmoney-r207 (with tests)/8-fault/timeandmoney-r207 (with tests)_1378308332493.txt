#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 258 330 267 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 258 330 267 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 258 330 267 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
280 3 353 1 329 1 235 1 260 1 236 1 48 2 196 4 310 1 332 9 263 2 292 2 121 1 336 9 271 2 243 2 123 1 55 1 368 1 83 5 157 2 35 2 300 1 228 1 36 1 131 1 248 6 304 1 
280 3 353 1 329 1 235 1 260 1 236 1 196 4 48 2 310 1 332 9 263 2 292 2 121 1 336 9 271 2 243 2 123 1 55 1 368 1 83 5 157 2 35 2 300 1 228 1 36 1 131 1 248 6 304 1 
280 4 353 1 329 1 235 1 260 1 236 1 196 5 48 2 310 1 332 10 263 2 292 2 121 1 336 10 271 2 243 2 123 1 55 1 368 1 83 6 157 2 35 2 300 1 228 1 36 1 131 1 248 7 304 1 
280 2 353 1 329 1 235 1 260 1 236 1 196 3 48 1 310 1 332 7 263 2 292 2 121 1 336 7 271 2 243 2 123 1 55 1 368 1 83 4 157 2 35 2 228 1 36 1 131 1 248 4 304 1 
280 1 271 1 123 1 329 1 83 3 48 2 196 2 332 4 263 1 157 1 35 1 300 1 36 1 131 1 248 3 292 1 336 4 121 1 
271 1 243 1 123 1 235 1 83 1 310 1 332 2 263 1 157 1 357 1 35 1 36 1 131 1 147 1 111 1 336 2 
280 1 243 1 123 1 368 1 83 2 196 1 332 3 263 2 157 2 36 1 131 1 248 1 336 3 
280 3 213 1 353 1 329 1 196 4 48 2 332 9 263 2 173 1 292 1 336 9 121 1 271 1 243 1 123 1 368 1 83 5 157 2 35 1 300 1 36 1 131 1 248 7 304 1 
280 3 213 1 353 1 329 1 196 4 48 2 332 9 263 2 173 1 292 1 336 9 121 1 271 1 243 1 123 1 368 1 83 5 157 2 35 1 300 1 36 1 131 1 248 7 304 1 
59 1 231 1 119 1 
59 1 337 2 249 1 
103 2 254 2 54 2 185 2 209 2 343 2 108 1 52 1 
68 1 254 2 308 1 45 1 115 1 49 1 331 1 22 2 239 1 175 1 201 1 97 1 52 1 266 1 272 2 275 1 54 2 185 2 317 1 276 1 98 1 319 2 343 2 370 1 156 1 127 2 103 3 87 1 371 1 227 1 323 1 209 3 160 1 108 1 210 1 211 2 136 1 
103 1 254 1 54 1 185 1 190 1 44 1 309 1 209 1 343 1 52 1 
254 1 354 1 42 1 364 1 216 1 32 1 103 1 277 1 105 1 59 1 346 1 190 1 231 1 209 1 
254 1 364 2 185 1 54 1 354 1 42 2 216 1 343 1 103 1 277 1 59 1 346 1 190 1 231 1 209 1 
364 1 42 1 255 1 367 1 28 1 
59 1 364 2 42 2 231 1 367 1 178 1 197 1 28 1 
364 1 42 1 367 1 
254 1 283 1 42 1 364 1 185 1 54 1 44 1 309 1 343 1 103 1 190 1 209 1 52 1 28 1 
59 1 
158 1 59 1 364 2 42 2 231 1 367 1 197 1 28 1 
313 1 306 1 42 5 364 5 342 1 367 2 259 1 197 1 85 2 94 2 59 1 231 1 348 1 130 1 312 1 109 1 28 2 39 2 76 1 
119 1 108 1 
150 1 254 2 168 1 185 1 54 1 343 1 103 2 209 2 108 2 
88 1 135 1 321 1 
137 1 308 1 45 1 319 1 115 1 49 1 22 1 156 1 103 1 227 1 323 1 209 1 160 1 108 1 266 1 211 1 
254 1 54 1 308 1 45 1 319 1 343 1 115 1 49 1 22 1 156 1 103 2 227 1 323 1 209 2 160 1 135 1 266 1 211 1 362 1 251 1 
254 5 54 4 168 1 185 1 140 1 343 4 103 5 105 1 209 5 108 1 362 1 250 1 165 1 251 2 
103 2 254 2 54 2 190 1 309 1 209 2 343 2 66 1 
103 3 254 3 185 1 54 3 209 3 343 3 108 1 251 1 
103 1 254 1 54 1 190 1 309 1 209 1 343 1 
103 1 150 1 254 1 54 1 185 1 168 1 190 1 209 1 343 1 
68 1 254 3 168 1 354 1 42 1 308 1 216 1 45 1 115 1 49 1 331 1 22 1 198 1 239 1 175 1 266 1 52 1 362 1 272 2 275 1 185 2 54 3 364 1 276 1 98 1 100 1 319 1 343 3 156 1 127 1 87 1 103 4 277 1 227 1 346 1 323 1 190 1 209 4 160 1 108 1 210 1 211 1 136 1 251 1 
103 2 105 1 254 2 54 1 140 1 209 2 343 1 108 1 251 1 
254 3 185 1 168 1 364 1 42 1 54 3 354 1 216 1 100 1 343 3 277 1 103 3 59 1 346 1 190 1 209 3 362 1 242 1 251 2 
254 2 168 1 185 1 54 2 343 2 103 2 88 1 209 2 135 1 251 1 
308 1 319 1 45 1 115 1 49 1 22 1 156 1 103 1 227 1 323 1 209 1 160 1 108 1 266 1 211 1 
69 1 328 1 308 1 319 1 45 1 22 1 156 1 103 1 227 1 323 1 209 1 160 1 108 1 266 1 211 1 
258 1 331 2 237 1 311 1 239 1 264 1 175 1 182 1 294 1 315 1 272 2 275 1 340 1 317 2 276 1 187 1 321 2 154 1 127 4 88 2 135 2 210 1 136 1 89 1 
103 1 254 1 54 1 190 1 216 1 209 1 343 1 66 1 
224 1 356 1 
224 1 356 1 
27 1 38 1 
27 1 38 1 
27 1 38 1 
224 1 176 1 356 1 
224 1 176 1 356 1 
224 1 17 1 356 1 
314 1 224 2 116 1 27 1 38 1 356 2 
224 1 176 1 356 1 
282 1 224 1 356 1 
282 1 224 1 356 1 
282 1 224 1 356 1 
254 2 214 1 42 1 356 1 4 1 6 1 7 1 9 1 241 1 270 1 29 1 54 2 224 1 364 1 151 1 341 1 343 2 297 1 247 1 103 2 17 1 161 1 209 2 108 1 
295 1 224 2 42 2 364 2 341 3 99 1 297 2 261 1 356 2 4 2 102 1 298 2 71 1 6 2 59 1 116 1 51 1 161 1 270 2 
271 1 35 1 292 1 
271 1 35 1 111 1 
104 1 35 3 125 1 292 2 202 1 111 1 
104 1 15 1 35 2 125 1 292 1 111 1 
104 2 35 2 125 1 292 1 111 1 
214 1 42 5 330 1 258 1 259 3 46 2 197 1 94 1 311 1 9 1 96 1 264 1 117 1 312 2 120 2 28 4 29 1 315 1 337 3 364 5 124 1 342 1 367 1 296 1 85 1 59 2 301 1 231 1 249 1 132 1 39 1 378 2 
214 4 42 9 255 5 330 3 258 3 259 8 142 1 46 6 197 1 94 2 311 3 144 1 264 3 117 1 312 6 120 6 28 7 315 3 363 1 81 1 337 9 364 9 342 1 367 6 85 2 59 5 301 2 231 1 348 1 303 5 249 3 132 2 39 2 163 1 67 1 
214 1 42 3 330 1 258 1 259 3 46 2 94 1 311 1 96 1 264 1 312 2 120 2 28 2 315 1 124 1 364 3 337 4 85 1 59 3 301 1 231 1 348 1 249 2 132 1 39 1 378 1 
214 2 42 4 330 2 258 2 259 5 46 4 94 1 311 2 96 1 264 2 312 4 120 4 28 3 315 2 81 1 337 7 364 4 124 1 85 1 59 4 301 1 231 1 348 1 249 3 132 1 39 1 163 1 67 1 378 2 
177 1 45 1 119 1 
285 1 45 1 
155 1 
227 1 45 1 156 1 
11 1 45 1 
45 1 156 1 
338 1 45 2 156 1 155 1 227 1 229 1 177 2 
315 1 122 1 184 1 340 3 317 4 21 1 1 1 187 2 331 3 127 7 34 1 264 1 73 1 146 1 10 1 279 2 305 1 
315 1 122 1 184 1 340 3 317 4 21 1 1 1 187 2 331 3 127 7 34 1 264 1 73 1 146 1 10 1 279 2 305 1 
315 1 122 1 184 1 340 3 317 4 21 1 1 1 187 2 331 3 127 7 34 1 264 1 73 1 146 1 10 1 279 2 193 1 305 1 
40 1 253 4 139 1 1 1 21 3 330 3 258 3 195 1 331 16 311 3 239 1 73 1 174 1 264 4 146 1 10 6 334 3 335 1 272 2 122 2 315 4 184 3 275 1 340 11 317 15 56 1 366 1 187 5 127 31 34 2 128 1 279 1 210 1 136 1 305 1 
1 1 21 1 331 4 238 1 288 1 239 2 264 1 10 1 146 1 315 1 272 4 122 1 184 1 275 2 340 4 317 5 187 3 127 9 34 1 128 1 279 2 210 2 136 2 305 1 
234 1 167 1 43 1 169 1 308 1 172 1 22 1 332 2 263 1 292 1 266 1 180 1 202 1 336 2 269 1 271 1 149 1 243 1 123 1 316 1 319 1 83 1 344 1 157 1 35 2 36 1 131 1 248 1 211 1 111 1 
234 1 43 1 256 1 169 1 308 1 2 1 172 1 22 1 332 3 263 1 292 1 266 1 202 1 180 1 336 3 271 1 149 1 243 1 31 1 316 1 319 1 83 1 344 1 157 1 35 2 36 1 131 1 248 2 211 1 111 1 
234 1 43 1 256 1 308 1 172 1 22 1 332 2 292 1 266 1 180 1 202 1 336 2 149 1 271 1 243 1 31 1 316 1 319 1 83 1 35 2 36 1 131 1 248 2 211 1 111 1 
149 2 234 2 243 2 82 1 308 1 45 1 319 1 2 1 47 1 172 2 22 1 156 1 14 1 332 1 263 1 157 1 8 1 74 1 302 1 160 1 266 1 211 1 336 1 
234 1 43 1 169 1 308 1 172 1 22 1 332 1 263 1 292 1 266 1 180 1 202 1 336 1 269 1 271 1 149 1 243 1 31 1 123 1 316 1 319 1 344 1 157 1 35 2 211 1 111 1 
60 1 
326 1 42 5 45 1 141 1 197 3 94 1 240 1 53 1 337 2 244 2 342 1 156 1 103 1 105 1 59 2 299 2 346 1 301 1 302 1 347 1 249 2 160 2 209 1 211 2 166 1 164 1 254 1 215 1 354 1 308 1 216 1 259 2 70 1 22 2 74 1 75 1 312 2 266 1 273 2 30 2 364 5 367 6 319 2 32 1 320 2 85 1 277 1 190 1 231 1 37 2 134 2 133 4 376 1 39 1 90 1 
254 1 42 3 354 1 216 1 70 1 197 1 240 1 75 1 364 3 367 2 32 1 103 1 277 1 105 1 158 1 346 1 190 1 347 1 209 1 133 2 134 1 376 1 
254 1 42 3 354 1 216 1 70 1 197 1 240 1 75 1 273 1 364 3 367 1 32 1 103 1 277 1 105 1 158 1 59 1 346 1 190 1 231 1 347 1 209 1 133 3 376 1 
254 1 42 3 354 1 216 1 70 1 197 1 240 1 75 1 273 1 364 3 367 2 32 1 320 1 103 1 277 1 158 1 105 1 59 1 346 1 190 1 231 1 347 1 209 1 133 3 134 1 376 1 
283 1 42 5 44 1 141 1 197 3 94 1 240 1 52 1 54 1 342 1 244 2 343 1 103 2 158 1 105 1 59 1 346 1 299 2 16 1 347 1 249 2 209 2 254 2 354 1 216 1 309 1 259 1 70 1 75 1 359 1 26 1 312 1 273 2 30 2 185 1 364 5 223 1 367 7 32 1 320 4 85 1 33 1 277 1 190 2 231 1 37 2 134 4 133 4 376 1 39 1 90 1 
42 4 141 1 197 2 94 1 240 1 337 2 342 1 244 2 103 1 105 1 59 2 346 1 299 2 347 1 249 2 209 1 254 1 354 1 215 1 216 1 259 1 70 1 75 1 312 1 273 2 30 2 364 4 367 4 32 1 320 2 85 1 277 1 190 1 231 1 37 2 133 4 134 2 376 1 90 1 39 1 
283 1 42 4 44 1 141 1 197 2 94 1 240 1 52 1 54 1 342 1 244 2 343 1 103 2 105 1 59 1 346 1 299 2 347 1 249 2 209 2 254 2 354 1 216 1 309 1 259 1 70 1 75 1 26 1 312 1 273 2 30 2 185 1 223 1 364 4 367 4 32 1 320 2 85 1 33 1 277 1 190 2 231 1 37 2 133 4 134 2 376 1 39 1 90 1 
283 1 42 4 44 1 141 1 197 2 94 1 240 1 52 1 54 1 342 1 244 2 343 1 103 2 105 1 59 1 346 1 299 2 347 1 249 2 209 2 254 2 354 1 216 1 309 1 259 1 70 1 75 1 26 1 312 1 273 2 30 2 185 1 223 1 364 4 367 4 32 1 320 2 85 1 33 1 277 1 190 2 231 1 37 2 133 4 134 2 376 1 39 1 90 1 
138 2 283 1 42 4 91 1 44 1 141 1 197 2 94 1 240 1 52 1 54 1 337 2 342 1 343 1 103 2 105 1 59 1 346 1 299 2 347 1 63 1 209 2 212 1 254 2 354 1 216 1 309 1 259 1 70 1 75 1 118 2 312 1 273 2 30 2 185 1 364 4 367 4 32 1 320 2 85 1 33 1 277 1 190 2 231 1 133 4 134 2 376 1 39 1 
283 1 42 4 44 1 141 1 197 2 94 1 240 1 52 1 54 1 342 1 244 2 343 1 103 2 105 1 59 1 346 1 299 2 16 1 347 1 249 2 209 2 254 2 354 1 216 1 309 1 259 1 70 1 75 1 26 1 312 1 273 3 30 2 185 1 223 1 364 4 367 5 32 1 320 3 85 1 33 1 277 1 190 2 231 1 37 2 134 3 133 5 376 1 39 1 90 1 
283 1 42 4 44 1 141 1 197 2 94 1 240 1 52 1 54 1 342 1 244 2 343 1 103 2 105 1 59 1 346 1 299 2 16 1 347 1 249 2 209 2 254 2 354 1 216 1 309 1 259 1 70 1 75 1 26 1 312 1 273 3 30 2 185 1 223 1 364 4 367 5 32 1 320 3 85 1 33 1 277 1 190 2 231 1 37 2 134 3 133 5 376 1 39 1 90 1 
138 2 42 4 141 1 197 2 94 1 240 1 337 2 342 1 103 1 105 1 59 1 346 1 299 2 347 1 63 1 209 1 254 1 354 1 215 1 216 1 259 1 70 1 75 1 118 2 312 1 273 2 30 2 364 4 367 4 32 1 320 2 85 1 277 1 190 1 231 1 133 4 134 2 376 1 39 1 
21 1 1 1 331 3 239 1 175 1 264 1 146 1 119 1 272 2 315 1 184 1 275 1 340 2 276 1 317 3 187 2 321 1 127 6 88 1 279 1 135 1 108 2 210 1 136 1 89 1 305 1 
40 1 68 1 352 1 253 3 330 2 258 2 331 6 311 1 239 2 175 2 174 1 264 2 10 1 290 1 334 3 97 1 272 4 315 1 340 2 275 2 276 1 317 8 187 1 321 11 127 14 226 1 374 1 88 4 108 1 135 11 210 2 136 2 325 1 
68 1 137 1 352 1 254 1 308 1 45 1 115 1 49 1 22 1 331 1 262 1 143 1 239 1 175 1 179 1 266 1 97 1 362 1 272 2 275 1 54 1 276 1 317 1 319 1 343 1 156 1 103 2 127 2 227 1 323 1 88 1 160 1 209 2 108 1 211 1 210 1 136 1 251 1 
0 1 1 1 330 2 45 2 49 2 331 10 239 3 146 1 10 4 97 1 54 1 340 8 343 1 156 2 103 3 160 1 209 3 108 2 211 3 210 3 305 1 251 1 68 1 352 1 254 1 355 2 21 1 257 2 308 2 258 2 115 2 22 3 311 2 24 1 175 3 264 3 361 1 266 2 268 2 362 1 315 3 272 6 31 1 184 1 275 3 276 3 317 10 187 4 319 3 321 7 127 20 87 2 227 2 372 2 323 2 279 1 88 7 135 7 136 3 
281 1 68 1 167 1 254 1 308 2 45 3 22 7 331 1 287 1 239 2 175 2 74 1 360 1 266 2 97 1 293 1 222 1 272 4 31 1 339 1 54 1 275 2 276 2 317 1 319 8 343 1 370 2 156 2 103 1 127 2 302 1 373 1 209 1 160 2 211 8 210 2 89 1 136 2 251 1 
352 1 254 1 168 1 330 1 258 1 331 2 311 1 239 1 175 1 264 1 272 2 315 1 340 1 54 1 185 1 275 1 245 1 276 1 317 1 187 1 343 1 321 1 103 1 127 3 88 1 209 1 135 1 210 1 136 1 
272 2 340 1 275 1 276 1 317 2 258 1 321 1 237 1 127 2 239 1 175 1 264 1 10 1 88 1 135 1 210 1 89 1 136 1 
294 1 272 2 315 1 340 1 275 1 276 1 187 1 321 1 331 2 127 2 311 1 239 1 175 1 88 1 135 1 210 1 89 1 136 1 
330 1 258 1 331 2 311 1 239 1 264 1 175 1 10 1 272 2 315 1 275 1 340 2 317 2 276 1 187 1 321 2 127 4 88 2 135 2 210 1 136 1 89 1 
272 2 340 1 275 1 276 1 317 2 258 1 321 1 237 1 127 2 239 1 175 1 264 1 10 1 88 1 135 1 210 1 136 1 293 1 
294 1 272 2 315 1 340 1 275 1 276 1 187 1 321 1 331 2 127 2 311 1 239 1 175 1 88 1 135 1 210 1 136 1 293 1 
330 1 258 1 331 2 311 1 239 1 264 1 175 1 10 1 293 1 272 2 315 1 275 1 340 2 317 2 276 1 187 1 321 2 127 4 88 2 135 2 210 1 136 1 
315 1 272 2 340 2 275 1 276 1 317 2 330 1 187 1 258 1 321 2 331 2 311 1 127 4 239 1 175 1 264 1 10 1 88 2 135 2 210 1 136 1 
68 1 308 1 45 1 115 1 49 1 22 1 331 1 239 1 175 1 97 1 266 1 272 2 275 1 317 1 276 1 319 1 156 1 127 2 87 1 103 1 227 1 323 1 160 1 209 1 108 1 211 1 210 1 136 1 
68 1 69 1 328 1 308 1 45 1 22 1 331 1 239 1 175 1 97 1 266 1 272 2 275 1 317 1 276 1 319 1 156 1 127 2 103 1 227 1 323 1 107 1 160 1 209 1 108 1 211 1 210 1 136 1 
352 1 330 1 258 1 331 2 311 1 239 1 264 1 175 1 10 1 272 2 315 1 275 1 340 2 317 2 276 1 187 1 321 2 127 4 88 2 135 2 210 1 136 1 
167 1 257 1 330 1 308 1 258 1 45 1 115 1 49 1 331 2 22 1 311 1 239 1 264 1 175 1 10 1 266 1 315 1 272 2 340 2 275 1 317 2 276 1 187 1 319 1 321 2 156 1 127 4 87 1 103 1 227 1 323 1 88 2 209 1 135 2 211 1 210 1 136 1 
352 1 254 1 168 1 330 1 258 1 331 1 311 1 239 1 175 1 264 1 10 1 315 1 272 2 340 1 54 1 185 1 275 1 276 1 317 2 206 1 343 1 321 1 103 1 127 3 88 1 209 1 135 1 210 1 136 1 
40 3 253 4 284 1 330 2 258 2 331 12 238 1 311 2 95 1 145 4 239 2 289 1 174 1 264 2 10 2 334 3 272 4 315 2 205 1 80 1 275 2 340 3 317 11 187 1 246 2 345 1 58 1 127 23 208 1 278 1 210 2 136 2 
40 3 253 4 284 1 330 2 258 2 331 12 238 1 311 2 95 1 145 4 239 2 289 1 174 1 264 2 10 2 334 3 272 4 315 2 205 1 80 1 275 2 340 4 317 11 187 2 246 2 345 1 58 1 127 23 208 1 278 1 210 2 136 2 
40 2 253 4 284 1 21 3 1 3 330 5 258 5 331 24 238 1 311 5 145 4 239 1 289 1 174 2 264 8 146 3 10 5 334 4 272 2 315 8 184 3 80 1 275 1 340 13 317 27 187 8 246 1 345 1 58 1 127 51 226 2 208 1 278 1 279 3 210 1 136 1 305 3 
40 1 253 2 284 1 330 3 258 3 331 10 238 1 311 3 145 2 239 2 289 1 174 1 264 3 10 3 334 1 272 4 315 3 205 1 80 2 275 2 340 6 317 9 187 3 246 1 369 1 345 1 58 1 127 19 210 2 136 2 
40 2 253 2 284 1 330 1 258 1 331 8 238 1 311 1 145 4 239 1 289 2 264 1 334 2 315 1 272 2 275 1 80 1 317 8 246 2 345 1 58 1 127 16 278 1 208 1 210 1 136 1 
71 1 6 1 224 1 220 1 116 1 297 1 261 1 356 1 4 1 270 1 
17 1 247 1 
6 1 224 1 265 1 297 1 377 1 356 1 351 1 4 1 270 1 
176 1 221 1 
314 1 282 1 152 1 
295 1 42 1 364 1 224 1 341 2 297 1 261 1 356 1 4 1 102 1 298 1 71 1 6 1 59 1 116 1 51 1 161 1 270 1 
295 1 42 1 364 1 224 1 341 2 297 1 261 1 356 1 4 1 102 1 298 1 71 1 6 1 59 1 116 1 51 1 161 1 270 1 
295 1 42 1 364 1 224 1 341 2 297 1 261 1 356 1 4 1 102 1 298 1 71 1 6 1 59 1 116 1 51 1 161 1 270 1 
314 1 176 1 221 1 
314 1 176 1 221 1 
282 1 152 1 
314 1 282 1 152 1 
151 1 241 1 
254 2 214 1 42 1 356 1 4 1 6 1 7 1 9 1 291 1 241 1 28 1 270 1 29 1 364 1 224 1 151 1 54 2 341 1 297 1 343 2 247 1 298 1 102 1 103 2 17 1 209 2 108 1 
68 1 352 1 254 2 113 1 308 1 45 1 194 1 331 1 22 2 239 1 175 1 360 1 266 1 97 1 77 1 272 2 339 1 275 1 365 1 276 1 317 1 319 2 370 2 156 1 103 2 127 2 189 1 209 2 211 2 210 1 136 1 
271 1 149 1 167 1 31 1 316 1 43 1 308 1 92 1 319 2 344 1 22 2 35 2 358 1 349 1 292 1 266 1 211 2 202 1 111 1 
271 1 149 1 31 1 316 1 43 1 92 1 308 1 319 1 344 1 22 1 5 1 35 2 292 1 266 1 211 1 202 1 111 1 
149 1 82 1 308 1 45 1 319 1 22 1 156 1 302 1 74 1 159 1 349 1 160 1 266 1 211 1 
271 1 149 1 31 1 316 1 43 1 92 1 308 1 319 1 344 1 22 1 35 2 358 1 349 1 292 1 266 1 211 1 202 1 111 1 
324 1 
313 1 59 1 231 1 312 1 259 1 119 1 76 1 
42 1 259 1 197 1 94 1 312 1 337 1 364 1 244 1 342 1 367 1 85 1 59 2 231 1 249 1 37 1 90 1 39 1 
326 1 42 5 330 2 285 3 45 10 46 6 93 2 197 3 94 4 11 2 203 1 337 12 342 4 156 3 59 8 61 2 301 2 249 6 160 1 211 3 110 2 167 1 355 2 308 3 258 2 259 9 171 1 218 2 22 3 311 2 219 2 264 2 177 2 312 8 266 4 120 6 181 2 76 1 313 1 315 2 364 5 186 1 367 5 319 3 85 4 322 2 277 2 227 3 229 1 231 2 232 1 233 2 375 1 39 4 
40 1 326 1 254 1 253 1 283 1 44 1 309 1 259 2 46 2 94 1 219 1 334 1 312 2 52 1 120 2 54 1 185 1 337 2 342 1 343 1 85 1 103 1 59 2 106 1 301 1 190 1 231 1 278 1 249 1 209 1 110 1 39 1 
254 1 283 1 42 1 21 1 44 1 309 1 259 1 94 1 219 1 264 1 146 1 26 1 312 1 52 1 184 1 364 1 185 1 54 1 342 1 56 1 343 1 85 1 103 1 190 1 209 1 39 1 
313 1 342 1 259 1 85 1 94 1 59 1 231 1 312 1 39 1 76 1 
315 2 355 1 337 10 330 2 258 2 259 5 46 5 311 2 59 5 219 2 264 2 312 5 249 5 120 5 110 1 
59 1 364 1 42 1 231 1 367 1 197 1 
326 2 42 3 308 1 45 1 259 2 22 4 197 2 94 2 74 1 312 2 266 1 364 3 342 1 186 1 318 1 367 4 319 4 85 2 156 1 301 2 302 1 348 1 350 1 375 2 160 2 211 4 39 2 166 1 164 1 
68 1 254 2 308 1 45 1 115 1 49 1 331 1 22 1 239 1 175 1 52 1 266 1 272 2 275 1 54 2 185 2 98 1 276 1 319 1 343 2 156 1 127 1 103 3 87 1 227 1 323 1 160 1 209 3 108 1 211 1 210 1 136 1 
326 1 337 4 342 1 259 1 46 2 85 1 94 1 59 4 301 1 231 2 279 1 249 2 312 2 120 2 39 1 
6 1 252 1 4 1 
6 1 252 1 4 1 
6 1 151 1 170 1 261 1 4 1 
6 1 252 1 4 1 
6 1 20 1 4 1 
6 1 20 1 4 1 
6 1 20 1 4 1 
6 1 4 1 
224 1 356 1 
40 1 272 2 253 1 275 1 317 3 330 1 258 1 331 2 238 1 333 1 127 5 239 1 264 1 278 1 334 1 267 1 210 1 136 1 
40 1 272 4 253 2 340 1 275 2 317 5 330 2 258 2 126 1 331 3 238 1 333 1 127 8 239 2 264 2 174 1 10 1 334 1 278 1 267 1 210 2 136 2 
40 1 253 1 1 1 21 2 331 6 238 1 239 2 264 2 146 2 334 1 315 2 272 4 184 2 275 2 340 2 317 6 56 1 187 2 126 1 127 12 278 1 279 1 210 2 136 2 305 1 
40 1 253 1 1 1 21 2 331 6 238 1 239 2 264 2 146 2 10 2 334 1 315 2 272 4 184 2 275 2 340 5 317 6 56 1 187 3 126 1 127 12 278 1 279 1 210 2 136 2 305 1 
40 1 272 2 253 1 275 1 317 3 330 1 258 1 331 2 238 1 333 1 127 5 239 1 264 1 278 1 334 1 267 1 210 1 136 1 
40 1 272 2 253 1 275 1 317 1 331 1 238 1 127 2 239 1 278 1 334 1 210 1 136 1 
40 1 272 4 253 1 275 2 317 1 126 1 331 1 238 1 127 2 239 2 334 1 278 1 210 2 136 2 
40 1 272 4 253 1 205 1 275 2 317 1 331 1 238 1 127 2 239 2 334 1 278 1 210 2 136 2 
315 1 184 3 340 6 317 3 1 2 21 3 187 3 331 4 127 7 264 1 10 3 146 1 305 1 
40 1 272 4 253 1 205 1 275 2 317 1 331 1 238 1 127 2 239 2 334 1 278 1 210 2 136 2 
315 1 272 4 184 1 340 3 275 2 317 4 1 1 21 1 187 2 331 4 127 8 128 1 239 2 264 1 146 1 10 1 279 1 210 2 136 2 305 1 
315 1 184 1 340 2 317 3 1 1 21 1 187 2 331 3 127 6 264 1 146 1 279 1 119 1 305 1 
315 1 272 2 340 2 275 1 317 2 330 1 187 1 258 1 126 1 331 2 311 1 127 4 239 1 264 1 10 1 210 1 136 1 
40 1 315 1 253 2 340 2 317 3 330 1 187 1 258 1 331 4 311 1 127 7 174 1 264 1 10 1 334 1 
253 2 21 2 1 1 330 2 258 2 331 12 311 2 239 2 264 3 174 1 146 1 10 4 334 2 25 1 315 3 272 4 184 2 340 9 275 2 317 11 187 5 127 23 226 1 128 2 374 1 279 1 210 2 136 2 305 1 
127 1 253 1 331 1 
127 1 317 1 334 1 
272 2 315 1 275 1 355 1 340 3 317 3 330 1 187 2 258 1 126 1 331 3 127 6 311 1 239 1 264 1 10 1 210 1 136 1 
40 1 272 2 253 1 275 1 317 1 331 1 238 1 127 2 239 1 278 1 334 1 210 1 136 1 
315 1 184 1 340 2 317 3 21 1 187 1 331 3 127 6 264 1 146 1 10 1 
272 2 184 1 340 2 275 1 317 1 21 1 1 1 187 1 331 2 127 3 128 1 239 1 10 1 25 1 210 1 136 1 305 1 
315 1 184 1 340 1 317 2 56 1 21 1 187 1 331 3 127 5 264 1 146 1 
272 2 275 1 340 1 317 2 258 1 238 1 127 2 239 1 264 1 10 1 210 1 136 1 
315 1 272 2 340 2 275 1 317 2 330 1 187 1 258 1 331 2 238 1 311 1 127 4 239 1 264 1 10 1 210 1 136 1 
272 6 205 1 184 1 275 3 340 2 317 1 21 1 187 1 331 2 238 1 127 3 128 1 239 3 10 1 25 1 210 3 136 3 
40 1 253 4 139 1 21 3 1 1 330 3 258 3 195 1 331 18 238 1 311 3 239 5 174 1 264 5 146 2 10 5 25 1 334 3 272 10 315 5 184 3 205 1 275 5 340 12 317 16 366 1 187 7 126 1 127 34 128 2 279 1 210 5 136 5 305 1 
103 1 18 1 105 1 254 1 140 1 209 1 108 1 
307 1 18 1 41 1 254 1 140 1 225 1 103 1 105 1 207 1 209 1 108 1 64 1 
74 1 302 1 308 1 45 1 319 1 119 1 160 1 266 1 211 1 22 1 156 1 
254 1 54 1 308 1 45 1 319 1 343 1 115 1 22 1 156 1 103 2 227 1 323 1 209 2 160 1 108 1 266 1 211 1 251 1 
254 2 354 1 308 1 216 1 45 3 115 1 22 1 11 1 266 1 54 1 319 1 343 2 156 2 103 2 227 2 61 1 323 1 190 1 375 1 209 2 108 1 211 1 251 1 
69 1 254 2 354 1 308 1 216 1 45 3 22 2 11 1 266 1 54 1 319 2 57 1 343 2 156 2 103 2 227 2 61 1 323 1 190 1 375 1 209 2 108 1 211 2 251 1 
19 1 42 2 364 2 188 1 285 1 367 1 308 1 319 3 45 4 57 1 22 3 156 1 277 1 59 1 227 1 61 1 231 1 11 1 177 1 160 1 375 1 266 1 211 3 
42 2 364 2 285 1 367 1 308 1 319 3 45 4 57 1 218 1 22 3 156 1 277 1 59 1 227 1 61 1 231 1 11 1 177 1 160 1 375 1 266 1 211 3 
373 1 308 1 319 1 266 1 211 1 22 1 
281 1 222 1 167 1 327 1 31 1 339 1 308 2 319 7 45 3 153 1 370 1 22 6 287 1 156 2 227 1 229 1 373 1 160 2 266 3 211 7 148 1 
1 1 45 1 49 1 331 3 239 2 146 1 54 1 340 2 343 1 156 1 103 2 209 2 108 2 211 1 210 2 251 1 305 1 167 1 352 1 254 1 257 1 21 1 308 1 115 1 22 1 175 2 264 1 266 1 272 4 77 1 315 1 184 1 275 2 276 2 317 3 187 2 319 1 321 1 87 1 127 6 227 1 372 1 323 1 88 1 279 1 135 1 136 2 
42 3 285 1 45 2 259 1 218 1 93 1 22 1 197 1 94 2 177 1 312 1 28 1 76 1 313 1 364 3 342 2 186 1 367 2 319 1 85 2 322 1 277 1 59 1 231 1 233 1 160 1 211 1 39 2 
167 1 308 1 319 2 45 2 22 2 156 1 227 1 229 1 232 1 177 1 373 1 266 2 211 2 
183 1 167 1 308 1 319 4 45 1 57 1 22 4 156 1 302 1 74 1 160 1 266 1 211 4 
0 1 308 1 319 2 45 1 153 1 22 2 86 1 156 1 227 1 375 1 266 2 211 2 148 1 204 1 
271 1 35 1 316 1 308 1 319 1 160 1 266 1 211 1 111 1 22 1 
167 1 31 1 339 1 113 1 308 1 319 2 45 1 22 2 156 1 266 1 211 2 
183 1 281 1 167 1 222 1 339 1 308 2 319 5 45 3 22 4 156 2 74 1 302 1 375 1 160 1 266 2 211 5 
183 1 167 1 222 1 274 1 339 1 308 2 319 5 45 3 22 4 156 2 74 1 302 1 375 1 160 1 266 2 211 5 
254 1 69 1 54 1 308 1 45 1 319 1 343 1 22 1 156 1 103 2 227 1 323 1 209 2 160 1 108 1 266 1 211 1 251 1 
327 1 308 1 319 1 45 1 153 1 22 1 156 1 227 1 229 1 375 1 266 2 211 1 148 1 
79 1 112 1 108 1 12 1 3 1 
78 1 112 1 79 2 354 1 42 2 364 2 216 1 100 1 286 1 3 2 277 1 59 1 346 1 190 1 129 1 231 1 108 1 12 2 28 1 
103 1 254 1 112 1 79 1 189 1 365 1 209 1 194 1 12 1 
112 1 129 1 286 1 
36 1 131 1 83 1 119 1 
157 1 263 1 36 1 131 1 83 1 336 1 332 1 
234 1 243 1 332 1 
123 1 235 2 83 1 101 1 332 3 263 1 157 1 50 1 72 1 131 1 36 1 336 3 
157 1 263 1 36 1 131 1 248 1 83 1 48 1 336 2 332 2 
271 1 123 1 83 1 196 1 332 1 263 1 157 1 35 1 292 1 336 1 121 1 
157 1 263 1 123 1 36 1 83 1 336 1 332 1 
157 1 263 1 123 1 36 2 131 1 336 1 332 1 
123 1 83 1 84 1 332 2 263 2 157 2 23 1 230 1 36 1 336 2 
280 1 123 1 353 1 83 2 196 1 332 3 263 1 157 1 36 1 131 1 248 2 304 1 336 3 
271 1 123 1 83 1 332 2 263 1 157 1 35 2 62 1 36 1 131 1 248 1 292 1 111 1 202 1 336 2 
280 1 123 1 83 2 48 1 196 1 332 4 263 2 157 2 300 1 36 1 131 1 248 2 336 4 
157 1 263 1 123 1 36 1 131 1 83 1 336 1 332 1 
280 1 235 1 13 1 83 3 101 1 196 1 332 4 263 1 157 1 72 1 36 2 131 2 248 2 336 4 
123 1 83 1 332 2 263 1 157 1 173 1 199 1 36 1 131 1 248 1 336 2 162 1 
157 1 263 1 123 1 72 1 235 2 36 1 131 1 200 1 83 1 101 2 336 3 332 3 
191 2 114 1 83 2 192 1 
157 1 263 1 123 1 65 1 336 1 332 1 
157 1 263 1 123 1 36 1 131 1 248 1 83 1 304 1 336 2 332 2 
217 1 
157 1 263 1 123 1 36 1 131 1 83 1 336 1 332 1 
157 1 263 1 123 1 235 1 36 1 131 1 248 1 83 1 304 1 336 3 332 3 
280 1 13 1 83 1 196 1 
36 1 83 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (143,340) (143,340) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 333 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 333 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 333 150 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 325 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (143,340) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 256 122 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 71 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 130 265 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 205 47 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 1 212 1 42 1 183 3 293 1 202 2 275 1 65 1 74 2 37 1 26 3 57 2 145 1 
93 2 212 1 42 1 193 1 116 1 196 1 242 1 172 1 65 3 121 1 74 2 26 9 178 2 145 1 358 2 223 1 183 9 293 1 202 2 275 6 52 1 34 1 83 2 37 4 192 2 57 5 134 1 373 1 
93 2 212 1 42 1 193 1 116 1 196 1 242 1 172 1 65 3 121 1 74 2 26 9 178 2 145 1 358 2 223 1 183 9 293 1 202 2 275 6 52 1 34 1 83 2 37 4 192 2 57 5 134 1 373 1 
93 2 212 1 42 1 193 1 116 1 196 1 242 1 172 1 65 4 121 1 74 2 26 10 178 2 145 1 358 2 223 1 183 10 293 1 202 2 275 7 52 1 34 1 83 2 37 5 192 2 57 6 134 1 373 1 
93 2 212 1 42 1 193 1 116 1 196 1 242 1 172 1 65 2 121 1 74 2 26 7 178 2 145 1 358 2 223 1 183 7 293 1 202 2 275 4 52 1 34 1 83 1 37 3 192 2 57 4 134 1 
223 1 212 1 42 1 183 4 202 1 275 3 65 1 52 1 83 2 74 1 37 2 26 4 178 1 57 3 192 1 373 1 145 1 358 1 
93 1 212 1 42 1 241 1 193 1 312 1 96 1 183 2 196 1 202 1 74 1 26 2 57 1 178 1 145 1 358 1 
93 1 212 1 42 1 116 1 136 1 65 3 121 1 103 1 74 2 26 9 178 1 145 1 358 1 223 1 183 9 293 1 202 2 275 7 52 1 83 2 37 4 57 5 192 1 373 1 
93 1 212 1 42 1 116 1 136 1 65 3 121 1 103 1 74 2 26 9 178 1 145 1 358 1 223 1 183 9 293 1 202 2 275 7 52 1 83 2 37 4 57 5 192 1 373 1 
199 1 254 1 345 1 182 1 13 1 194 1 197 1 173 1 111 1 209 1 144 1 287 1 132 1 251 1 
349 1 
15 1 126 1 13 2 209 2 214 1 144 1 218 1 349 1 
126 1 13 5 214 2 4 1 218 1 349 1 231 1 261 1 294 1 99 2 209 5 340 1 308 1 143 1 144 2 211 2 177 1 281 2 125 1 
71 1 218 1 349 1 
160 1 349 1 165 2 
345 2 254 2 194 2 285 1 132 2 173 2 197 1 111 2 
267 1 345 2 60 2 168 1 62 2 3 1 194 2 215 1 43 1 66 1 173 3 197 1 350 1 119 1 285 1 76 1 252 1 254 2 272 1 105 1 201 1 316 1 30 1 50 2 149 1 363 2 111 2 295 1 112 1 366 1 189 1 322 1 132 3 91 1 239 1 20 2 92 1 
199 1 345 1 254 1 194 1 132 1 287 1 251 1 173 1 197 1 111 1 
2 1 194 1 13 1 328 1 217 1 218 1 173 1 349 1 262 1 101 1 209 1 132 1 251 1 238 1 
254 1 345 1 2 1 13 2 194 1 328 1 217 1 218 1 173 1 349 1 111 1 101 1 209 2 132 1 251 1 
13 1 209 1 214 1 144 1 138 1 
126 1 13 2 209 2 214 1 144 1 218 1 349 1 289 1 
13 1 209 1 214 1 
254 1 345 1 194 2 173 2 111 1 206 1 53 1 285 2 132 2 
140 1 120 1 56 1 
60 1 62 1 272 1 105 1 50 1 149 1 66 1 173 1 119 1 112 1 295 1 189 1 285 1 132 1 310 1 76 1 
71 1 285 1 
345 1 60 1 62 1 272 1 194 1 105 1 283 1 50 1 149 1 66 1 173 2 111 1 119 1 295 1 112 1 140 1 189 1 132 2 198 1 76 1 
345 4 254 1 194 5 283 1 173 5 262 1 111 4 102 1 278 1 279 1 53 1 285 1 132 5 198 2 
199 1 345 2 194 2 326 1 132 2 251 1 173 2 111 2 
254 1 345 3 194 3 285 1 132 3 198 1 173 3 111 3 
199 1 345 1 194 1 132 1 251 1 173 1 111 1 
206 1 345 1 254 1 194 1 53 1 132 1 251 1 173 1 111 1 
267 1 345 3 60 1 62 1 2 1 3 1 194 3 283 1 328 1 217 1 66 1 173 4 197 1 350 1 119 1 101 1 285 1 198 1 251 1 76 1 252 1 254 2 181 1 272 1 13 1 105 1 201 1 316 1 30 1 149 1 337 1 50 1 363 1 111 3 295 1 112 1 366 1 189 1 209 1 53 1 132 4 91 1 239 1 20 2 
345 1 194 2 278 1 285 1 132 2 198 1 173 2 262 1 111 1 
254 1 345 3 181 1 2 1 13 1 194 3 283 1 328 1 217 1 173 3 349 1 111 3 101 1 209 1 53 1 132 3 354 1 251 1 198 2 
254 1 345 2 194 2 173 2 111 2 140 1 53 1 132 2 198 1 56 1 
60 1 62 1 272 1 105 1 50 1 149 1 66 1 173 1 119 1 112 1 295 1 189 1 285 1 132 1 76 1 
79 1 60 1 62 1 272 1 14 1 105 1 50 1 66 1 173 1 153 1 112 1 295 1 189 1 285 1 132 1 251 1 76 1 
0 1 267 1 301 1 3 1 215 2 303 1 350 1 120 2 140 2 70 1 27 1 78 1 201 1 316 1 184 1 30 1 363 4 296 1 208 1 339 1 300 1 56 2 20 2 239 2 
345 1 101 1 194 1 326 1 132 1 251 1 173 1 111 1 
364 1 51 1 38 1 
232 1 364 2 86 1 185 1 311 1 38 2 
364 1 38 1 
364 1 38 1 
232 1 311 1 
232 1 311 1 
232 1 311 1 
174 1 364 1 38 1 
174 1 364 1 38 1 
174 1 364 1 38 1 
68 1 364 1 38 1 
68 1 364 1 38 1 
68 1 364 1 38 1 
345 2 194 2 173 2 284 1 306 1 220 1 104 1 285 1 10 1 77 1 288 1 255 1 313 1 13 1 274 1 51 1 111 2 364 1 35 1 209 1 132 2 162 1 58 1 38 1 
255 2 13 2 327 1 185 1 274 2 336 1 107 1 269 1 349 1 186 2 364 2 263 1 220 1 209 2 75 1 162 2 288 2 77 3 38 2 
96 1 273 1 352 2 192 1 178 2 
178 1 192 1 358 1 
96 1 178 1 358 1 
225 1 96 1 273 1 352 1 192 2 178 3 
96 1 273 1 352 1 97 1 192 1 178 2 
301 1 303 1 214 1 4 3 218 1 270 1 349 2 99 1 333 1 308 1 104 1 10 1 144 4 78 1 200 1 12 1 126 1 13 5 362 2 261 2 35 1 156 2 158 1 339 1 209 5 341 2 160 1 342 1 211 1 161 1 165 3 281 1 
240 3 95 1 301 1 303 1 214 4 4 3 138 3 218 1 349 3 270 1 99 2 333 1 104 2 308 1 144 5 177 1 179 1 78 1 12 1 126 1 13 7 228 1 362 2 261 2 156 2 339 1 209 7 160 1 211 2 161 1 165 3 281 2 
200 1 13 2 4 1 99 1 209 2 333 1 144 1 211 1 342 1 161 1 177 1 281 1 
200 1 99 1 13 1 209 1 333 1 4 1 211 1 342 1 161 1 150 1 177 1 281 1 
88 1 
246 1 105 1 71 1 
105 1 127 1 
295 1 105 1 76 1 
105 1 304 1 
105 1 76 1 
187 1 246 2 295 1 105 3 49 1 76 1 
301 1 146 2 215 4 184 2 318 1 363 7 188 1 248 1 221 1 54 1 235 1 250 1 73 1 299 1 27 3 124 1 78 1 239 3 
146 1 325 1 215 1 235 1 73 2 363 1 
267 2 301 1 21 1 3 2 215 5 243 1 248 1 221 1 73 1 27 4 124 1 78 1 146 2 257 1 201 2 184 3 30 2 318 1 363 9 188 1 235 1 299 1 20 4 239 4 
301 1 146 2 215 4 184 2 318 1 363 7 188 1 248 1 221 1 235 1 250 1 73 1 299 1 27 3 124 1 78 1 239 3 
301 1 146 2 215 4 184 2 318 1 363 7 188 1 248 1 221 1 235 1 250 1 73 1 299 1 27 3 124 1 78 1 239 3 
93 2 1 2 60 1 62 1 324 1 98 1 66 1 74 1 26 1 76 1 334 2 28 1 272 1 183 1 105 1 148 1 50 1 202 1 319 1 112 1 190 2 372 1 166 1 
93 1 1 1 60 1 62 1 96 1 137 1 66 1 329 1 100 1 74 1 26 1 178 2 145 1 358 1 334 1 225 1 272 1 183 1 292 1 50 1 202 1 190 1 131 1 192 1 323 1 19 1 
93 1 212 1 42 1 1 1 60 1 62 1 96 1 137 1 66 1 329 1 100 1 74 1 26 2 178 2 145 1 358 1 334 1 253 1 225 1 272 1 183 2 292 1 50 1 202 1 275 1 190 1 131 1 57 1 192 1 323 1 
93 1 212 1 42 1 1 1 60 1 62 1 96 1 137 1 66 1 22 1 329 1 100 1 74 1 26 3 178 2 358 1 334 1 225 1 272 1 183 3 292 1 50 1 202 1 275 2 190 1 57 1 192 1 372 1 323 1 19 1 
93 1 212 1 42 1 1 1 60 1 62 1 96 1 137 1 66 1 22 1 329 1 26 2 178 2 334 1 358 1 225 1 272 1 183 2 292 1 50 1 275 2 190 1 57 1 192 1 19 1 
237 1 
2 1 194 1 4 2 328 1 98 1 6 1 245 2 99 1 101 1 251 1 48 2 256 1 13 5 105 1 50 2 203 1 260 1 261 2 262 1 112 2 209 5 159 2 160 2 211 1 161 1 165 2 266 1 166 1 167 1 60 2 62 2 346 1 214 6 217 1 66 1 218 1 118 2 173 1 349 2 305 2 308 1 122 1 76 1 126 3 272 1 229 2 317 1 82 1 365 1 277 4 87 1 89 2 132 1 281 1 238 1 
346 1 2 1 194 1 214 2 328 1 217 1 6 1 173 1 101 1 251 1 126 1 13 3 203 1 229 1 262 1 15 1 209 3 277 2 87 1 132 1 266 1 238 1 
346 1 2 1 194 1 214 1 328 1 217 1 6 1 173 1 218 1 305 1 349 1 101 1 251 1 126 1 13 3 203 1 262 1 15 1 209 3 277 3 87 1 132 1 266 1 238 1 
346 1 2 1 194 1 214 2 328 1 217 1 6 1 173 1 118 1 218 1 305 1 349 1 101 1 251 1 126 1 13 3 203 1 229 1 262 1 15 1 209 3 277 3 87 1 132 1 266 1 238 1 
2 1 194 1 4 1 328 1 6 1 245 2 139 1 99 1 45 1 101 1 251 1 48 2 147 1 13 5 203 1 151 1 260 1 262 1 261 1 15 1 16 1 209 5 159 2 211 1 160 2 266 1 346 1 214 7 217 1 118 4 173 1 218 5 305 4 349 5 308 1 126 3 229 4 82 1 277 6 87 1 132 1 89 2 281 1 238 1 
346 1 2 1 194 1 214 4 4 1 328 1 217 1 6 1 218 1 118 2 173 1 349 2 305 2 245 2 99 1 101 1 308 1 251 1 48 2 126 2 13 4 229 2 203 1 317 1 260 1 261 1 262 1 82 1 209 4 277 4 159 2 87 1 160 2 89 2 211 1 132 1 165 2 266 1 281 1 238 1 
346 1 2 1 194 1 214 4 4 1 328 1 217 1 6 1 218 1 118 2 173 1 349 1 305 2 245 2 139 1 99 1 45 1 101 1 308 1 251 1 48 2 126 2 13 4 229 2 203 1 151 1 260 1 261 1 262 1 82 1 209 4 277 4 159 2 87 1 160 2 89 2 132 1 211 1 281 1 266 1 238 1 
346 1 2 1 194 1 214 4 4 1 328 1 217 1 6 1 218 1 118 2 173 1 349 1 305 2 245 2 139 1 99 1 45 1 101 1 308 1 251 1 48 2 126 2 13 4 229 2 203 1 151 1 260 1 261 1 262 1 82 1 209 4 277 4 159 2 87 1 160 2 89 2 132 1 211 1 281 1 266 1 238 1 
346 1 302 2 2 1 194 1 214 4 348 2 4 1 347 1 328 1 217 1 6 1 218 1 118 2 173 1 349 1 305 2 99 1 101 1 308 1 251 1 11 1 48 2 126 2 13 4 229 2 203 1 151 1 260 1 33 1 261 1 262 1 209 4 277 4 159 2 87 1 132 1 211 1 165 2 281 1 266 1 238 1 
346 1 2 1 194 1 214 5 4 1 328 1 217 1 6 1 218 1 173 1 118 3 349 1 305 3 245 2 99 1 139 1 45 1 101 1 308 1 251 1 48 2 126 2 13 4 203 1 229 3 151 1 260 1 261 1 262 1 82 1 16 1 209 4 277 5 159 2 87 1 160 2 89 2 211 1 132 1 281 1 266 1 238 1 
346 1 2 1 194 1 214 5 4 1 328 1 217 1 6 1 218 1 173 1 118 3 349 1 305 3 245 2 99 1 139 1 45 1 101 1 308 1 251 1 48 2 126 2 13 4 203 1 229 3 151 1 260 1 261 1 262 1 82 1 16 1 209 4 277 5 159 2 87 1 160 2 89 2 211 1 132 1 281 1 266 1 238 1 
346 1 302 2 2 1 194 1 214 4 348 2 4 1 347 1 328 1 217 1 6 1 218 1 118 2 173 1 349 1 305 2 99 1 101 1 308 1 251 1 48 2 126 2 13 4 229 2 203 1 317 1 260 1 261 1 262 1 209 4 277 4 159 2 87 1 211 1 132 1 165 2 266 1 281 1 238 1 
345 1 267 2 60 8 62 7 168 1 194 1 3 2 215 1 66 2 98 1 173 1 350 2 198 1 76 2 356 1 252 1 253 1 226 1 80 1 272 2 105 3 81 1 201 2 316 2 50 8 30 2 111 1 363 2 112 2 130 1 84 1 371 1 132 1 300 1 19 1 20 4 239 1 92 2 166 1 
345 1 267 1 301 1 3 1 194 1 215 1 303 1 173 1 350 1 140 1 120 1 72 1 27 1 78 1 254 1 12 1 184 1 201 1 316 1 30 1 111 1 363 3 339 1 53 1 343 1 132 1 56 1 20 2 239 2 
267 1 301 1 3 1 215 3 350 1 140 1 120 1 248 1 71 1 221 1 285 2 124 1 27 2 78 1 146 1 201 1 316 1 184 2 30 1 318 1 363 6 56 1 299 1 300 1 20 2 239 3 
267 2 301 2 168 1 3 2 268 1 215 8 303 1 244 1 350 2 331 1 120 11 140 11 69 1 285 1 252 1 27 2 78 1 12 2 184 1 201 2 316 1 30 2 363 14 276 1 154 1 188 1 339 2 343 1 344 3 56 4 164 3 239 6 20 4 
345 1 267 1 60 1 62 1 168 1 3 1 194 1 283 1 215 1 66 1 173 2 350 1 119 1 307 1 285 1 310 1 198 1 76 1 252 1 272 1 258 1 105 1 361 1 316 1 201 1 149 1 50 1 30 1 111 1 363 2 295 1 112 1 189 1 343 1 132 2 56 1 20 2 239 1 
194 1 3 3 283 1 140 7 248 1 285 2 198 1 252 1 12 2 146 1 105 2 106 2 201 3 108 1 50 3 149 2 111 1 112 1 295 2 339 2 343 1 299 1 56 7 114 1 19 1 20 6 267 3 345 1 60 3 301 3 168 1 62 3 215 10 303 2 66 2 173 3 117 2 350 3 119 2 120 7 221 1 123 2 76 2 124 1 27 8 78 3 272 2 184 4 316 3 30 3 318 1 320 2 363 20 188 4 189 2 132 3 236 1 91 2 239 10 
267 1 301 1 3 1 215 2 316 1 201 1 30 1 363 2 350 1 188 1 296 1 140 1 120 1 339 1 56 1 300 1 27 1 20 2 
0 1 267 1 3 1 303 1 184 1 316 1 201 1 30 1 363 2 350 1 140 1 120 1 56 1 300 1 27 1 78 1 20 2 239 2 
267 1 301 1 3 1 215 2 303 1 350 1 120 2 140 2 27 2 78 1 12 1 201 1 316 1 184 1 30 1 363 4 188 1 339 1 300 1 56 2 20 2 239 2 
267 1 301 1 3 1 81 1 215 2 316 1 201 1 30 1 363 2 350 1 188 1 296 1 140 1 120 1 339 1 56 1 27 1 20 2 
0 1 267 1 3 1 81 1 303 1 184 1 316 1 201 1 30 1 363 2 350 1 140 1 120 1 56 1 27 1 78 1 20 2 239 2 
267 1 301 1 3 1 215 2 303 1 350 1 120 2 140 2 27 2 78 1 12 1 81 1 201 1 316 1 184 1 30 1 363 4 188 1 339 1 56 2 20 2 239 2 
267 1 12 1 301 1 3 1 303 1 215 2 184 1 316 1 201 1 30 1 350 1 363 4 188 1 140 2 120 2 339 1 56 2 27 2 78 1 239 2 20 2 
267 1 60 1 168 1 62 1 3 1 215 1 66 1 173 1 350 1 119 1 285 1 76 1 252 1 272 1 105 1 316 1 201 1 149 1 50 1 30 1 363 2 295 1 112 1 189 1 132 1 91 1 20 2 239 1 
267 1 60 1 62 1 3 1 216 1 66 1 173 1 350 1 285 1 251 1 76 1 252 1 79 1 272 1 14 1 105 1 316 1 201 1 50 1 30 1 153 1 363 1 295 1 112 1 189 1 132 1 20 2 239 1 
267 1 301 1 3 1 215 2 303 1 350 1 120 2 140 2 27 2 78 1 12 1 201 1 316 1 184 1 30 1 363 4 188 1 339 1 343 1 56 2 20 2 239 2 
267 1 301 1 60 1 62 1 3 1 303 1 215 2 66 1 117 1 173 1 350 1 119 1 140 2 120 2 76 1 27 2 78 1 253 1 12 1 272 1 105 1 184 1 316 1 201 1 149 1 50 1 30 1 363 4 188 1 295 1 339 1 189 1 132 1 56 2 91 1 239 2 20 2 
345 1 267 1 301 1 3 1 194 1 303 1 215 2 173 1 350 1 120 1 140 1 8 1 27 1 78 1 254 1 12 1 201 1 316 1 30 1 111 1 363 3 188 1 339 1 53 1 343 1 132 1 56 1 239 1 20 2 
267 2 301 3 3 2 215 9 303 3 243 1 244 1 44 2 69 1 9 1 180 2 27 6 78 3 12 3 359 1 184 3 201 2 30 2 321 1 363 19 207 1 188 3 369 1 339 3 298 1 344 2 282 1 164 1 20 4 239 10 
267 3 301 3 3 3 215 14 303 2 243 1 244 2 44 1 25 1 332 1 9 2 351 1 27 4 180 4 78 2 12 3 359 2 257 2 360 1 184 2 201 3 30 3 321 1 363 26 188 2 369 1 339 3 298 1 55 1 344 2 164 2 39 1 239 12 20 6 
267 3 301 5 3 3 215 20 303 4 243 1 244 3 44 1 25 1 332 1 69 1 248 1 221 1 351 1 9 1 124 1 180 4 27 8 78 5 290 1 12 4 146 1 359 2 257 1 360 1 184 4 201 3 30 3 318 1 321 1 363 41 207 1 188 4 369 1 339 4 298 1 55 1 344 4 299 1 164 3 39 1 20 6 239 21 
267 4 301 5 3 4 215 20 303 3 243 1 244 3 44 1 25 1 332 1 69 1 248 1 221 1 351 1 9 1 124 1 180 4 27 7 78 4 290 1 12 4 146 1 359 2 257 2 360 1 184 4 201 4 30 4 318 1 321 1 363 38 207 1 188 3 369 1 339 4 298 1 55 1 344 4 299 1 164 3 39 1 20 8 239 18 
267 2 301 8 3 2 215 27 303 7 243 1 244 2 44 1 331 2 25 1 332 1 69 2 248 1 221 1 351 1 9 1 124 1 180 4 27 14 78 8 12 7 146 1 359 1 257 1 360 1 184 7 201 2 30 2 318 1 321 1 363 52 188 7 369 1 339 7 298 1 55 1 344 4 299 1 164 4 39 1 20 4 239 25 
255 1 364 1 24 1 327 1 185 1 274 1 162 1 269 1 288 1 38 1 
51 1 58 1 
255 1 364 1 274 1 170 1 355 1 162 1 32 1 288 1 38 1 
174 1 367 1 
68 1 85 1 86 1 
255 1 13 1 327 1 185 1 274 1 336 1 269 1 349 1 186 1 364 1 263 1 220 1 209 1 75 1 162 1 288 1 77 2 38 1 
255 1 13 1 327 1 185 1 274 1 336 1 269 1 349 1 186 1 364 1 263 1 220 1 209 1 75 1 162 1 288 1 77 2 38 1 
255 1 13 1 327 1 185 1 274 1 336 1 269 1 349 1 186 1 364 1 263 1 220 1 209 1 75 1 162 1 288 1 77 2 38 1 
174 1 367 1 86 1 
174 1 367 1 86 1 
68 1 85 1 
68 1 85 1 86 1 
306 1 313 1 
345 2 194 2 173 2 67 1 284 1 306 1 104 1 285 1 144 1 10 1 288 1 77 1 255 1 313 1 13 1 336 1 274 1 51 1 186 1 111 2 364 1 35 1 209 1 132 2 162 1 58 1 38 1 
135 1 267 1 60 2 168 1 62 2 169 1 3 1 194 2 215 1 66 1 173 2 350 1 176 1 76 1 252 1 272 1 105 1 316 1 201 1 50 2 30 1 363 2 130 1 280 1 371 1 36 1 343 1 132 2 20 2 239 1 92 2 
60 1 62 1 272 1 227 1 105 1 148 1 50 1 66 1 98 1 112 1 190 1 18 1 76 1 166 1 
225 1 60 1 96 1 62 1 272 1 227 1 137 1 50 1 64 1 66 1 110 1 329 1 100 1 190 1 192 1 178 2 358 1 19 1 
253 1 225 1 60 2 96 1 62 2 272 1 227 1 137 1 50 2 64 1 66 1 110 1 329 1 100 1 190 1 192 1 178 2 358 1 19 1 
225 1 60 1 96 1 62 1 61 1 272 1 137 1 50 1 66 1 110 1 329 1 100 1 190 1 192 1 178 2 358 1 19 1 
152 1 
99 1 308 1 4 1 143 1 211 1 218 1 349 1 281 1 261 1 
12 1 301 1 303 1 4 1 362 1 349 1 261 2 156 1 339 1 160 1 165 2 78 1 
126 1 13 1 209 1 214 1 218 1 349 1 
167 1 60 2 62 2 214 2 4 1 66 1 98 1 99 2 308 1 122 1 177 1 76 1 256 1 126 1 272 1 13 2 105 1 50 2 261 1 128 1 112 2 209 2 211 2 161 1 281 2 166 1 
71 1 340 1 4 1 143 1 218 1 349 1 261 1 
214 1 4 1 218 1 349 2 245 1 99 1 308 1 126 1 13 1 261 1 82 1 209 1 160 1 89 1 211 1 281 1 165 1 
40 1 301 1 60 1 62 1 303 1 214 1 4 4 66 1 349 3 330 1 99 2 175 1 308 2 76 1 78 1 222 1 29 1 12 1 126 1 272 2 13 1 105 3 106 1 127 2 50 1 362 3 261 3 187 1 112 1 295 1 156 3 157 1 264 1 339 1 209 1 370 1 160 3 211 2 161 1 165 6 281 2 
167 1 301 2 214 1 303 2 4 8 244 1 218 2 349 5 99 2 25 1 332 1 141 1 308 2 351 1 78 2 29 2 12 2 126 1 360 1 13 1 362 5 261 5 129 1 156 5 209 1 339 2 211 2 160 3 161 1 113 1 344 1 165 6 281 2 164 1 39 1 
345 1 301 2 194 1 4 2 173 1 197 1 99 1 139 1 248 1 221 1 308 1 287 1 251 1 78 1 199 1 29 2 254 1 182 1 13 1 318 1 261 2 111 1 129 1 209 1 234 1 132 1 211 1 281 1 
267 1 345 2 60 1 62 1 194 2 3 1 66 1 173 3 197 1 350 1 119 1 285 1 76 1 252 1 254 2 272 1 105 1 201 1 316 1 30 1 50 1 149 1 363 1 111 2 112 1 295 1 366 1 189 1 132 3 91 1 239 1 20 2 
167 1 146 1 4 1 362 2 218 2 349 4 261 2 99 1 156 2 308 1 160 2 211 1 161 1 165 4 281 1 
313 1 255 1 327 1 274 1 353 1 
255 1 249 1 274 1 
255 1 249 1 274 1 
255 1 249 1 274 1 
255 1 274 1 286 1 
255 1 274 1 286 1 
255 1 274 1 286 1 
255 1 274 1 
364 1 38 1 
267 1 301 2 3 1 215 5 201 1 184 3 30 1 243 1 318 2 363 10 188 2 248 1 234 1 221 2 27 5 78 2 20 2 239 5 
267 1 301 1 3 1 215 2 201 1 243 1 30 1 363 2 188 1 339 1 27 1 20 2 
267 1 12 1 301 1 3 1 303 1 215 2 184 1 201 1 243 1 30 1 363 4 188 1 339 1 27 2 78 1 239 2 20 2 
267 3 257 1 3 3 315 1 215 1 201 3 184 1 243 1 30 3 318 1 363 3 207 1 188 1 221 1 27 2 239 2 20 6 
41 1 267 5 59 1 301 5 3 5 215 16 303 3 243 1 244 1 69 1 248 2 221 3 124 1 27 12 78 5 12 3 146 1 257 2 315 1 201 5 184 7 109 1 30 5 318 3 363 34 207 1 188 5 233 1 339 3 344 4 299 1 164 3 239 18 20 10 
267 1 301 1 3 1 215 4 243 1 244 1 248 1 221 1 351 1 124 1 27 2 78 1 146 1 201 1 184 2 30 1 318 1 363 8 344 1 299 1 164 1 239 4 20 2 
267 2 59 1 301 2 3 2 215 6 243 1 244 1 69 1 248 1 221 1 351 1 124 1 27 3 78 1 12 1 146 1 184 2 201 2 30 2 318 1 363 11 188 1 339 1 344 2 299 1 164 1 239 5 20 4 
267 3 59 1 301 3 3 3 215 9 303 2 243 1 244 1 25 1 332 1 248 1 221 1 351 1 124 1 27 4 78 3 12 2 146 1 360 1 257 1 201 3 184 3 30 3 318 1 363 19 188 1 339 2 344 1 299 1 164 1 39 1 239 10 20 6 
267 3 59 1 301 3 3 3 215 10 303 1 243 1 244 1 25 1 332 1 248 1 221 1 351 1 124 1 27 5 78 2 12 2 146 1 257 1 360 1 201 3 184 3 30 3 318 1 363 17 188 2 339 2 344 1 299 1 164 1 239 7 20 6 39 1 
267 1 301 1 3 1 215 4 243 1 244 1 248 1 221 1 351 1 124 1 27 2 78 1 146 1 201 1 184 2 30 1 318 1 363 8 344 1 299 1 164 1 239 4 20 2 
267 1 301 2 3 1 215 6 303 2 243 1 244 1 25 1 332 1 351 1 27 2 78 2 12 2 360 1 201 1 184 1 30 1 363 12 188 1 339 2 344 1 164 1 239 6 20 2 39 1 
267 4 59 1 301 3 3 4 215 10 303 1 243 1 244 1 25 1 332 1 248 1 221 1 351 1 124 1 27 5 78 2 12 2 146 1 360 1 257 2 201 4 184 3 30 4 318 1 363 18 188 2 339 2 344 1 299 1 164 1 39 1 239 8 20 8 
267 4 301 3 3 4 215 9 303 2 243 1 244 1 25 1 332 1 351 1 27 6 78 2 12 3 360 1 257 2 201 4 184 3 30 4 363 16 188 3 207 1 339 3 344 1 164 1 39 1 239 7 20 8 
301 1 215 3 184 3 318 3 363 7 188 3 248 1 221 3 299 1 124 2 27 6 78 1 239 4 
267 4 301 3 3 4 215 10 303 1 243 1 244 1 25 1 332 1 248 1 221 1 351 1 124 1 27 4 78 2 12 2 146 1 360 1 257 2 201 4 184 3 30 4 318 1 363 18 188 1 207 1 339 2 344 1 299 1 164 1 39 1 239 8 20 8 
267 2 146 1 301 1 257 1 3 2 215 4 184 2 201 2 30 2 318 1 363 8 188 1 248 1 221 1 299 1 27 3 124 1 78 1 239 4 20 4 
146 1 301 1 215 3 184 2 318 1 363 6 248 1 71 1 221 1 299 1 124 1 27 2 78 1 239 3 
267 1 12 1 59 1 301 1 3 1 303 1 215 2 184 1 201 1 30 1 363 4 188 1 339 1 27 2 78 1 239 2 20 2 
12 1 301 1 303 1 215 3 184 1 244 1 363 7 188 1 69 1 339 1 344 2 27 2 78 1 164 1 239 4 
267 2 301 3 3 2 268 1 215 11 303 2 331 1 69 1 248 1 221 2 124 1 27 9 78 3 12 2 146 1 257 2 315 1 184 5 201 2 30 2 318 2 363 23 188 4 339 2 344 2 299 1 164 2 239 12 20 4 
344 1 363 1 239 1 
215 1 164 1 363 1 
267 1 12 1 59 1 301 1 3 1 106 1 215 3 303 1 201 1 184 2 30 1 363 6 188 1 339 1 27 3 78 1 20 2 239 3 
267 1 301 2 3 1 215 6 303 2 243 1 244 1 25 1 332 1 351 1 27 2 78 2 12 2 360 1 201 1 184 1 30 1 363 12 188 1 339 2 344 1 164 1 239 6 20 2 39 1 
301 1 215 3 184 1 318 1 363 6 188 1 248 1 221 1 27 2 78 1 239 3 
267 1 257 1 3 1 215 1 315 1 184 1 201 1 30 1 318 1 363 3 188 1 221 1 299 1 27 2 124 1 239 2 20 2 
194 1 278 1 285 1 132 1 230 1 173 1 262 1 
224 1 291 1 194 1 230 1 173 1 262 1 368 1 278 1 285 1 132 1 133 1 357 1 
253 1 60 4 62 4 272 1 105 1 50 4 171 1 98 1 66 1 112 1 191 1 76 1 166 1 
60 1 62 1 272 2 105 1 50 1 5 1 338 1 66 1 295 1 297 1 76 1 90 1 114 1 163 1 
60 1 112 1 96 1 62 1 272 1 50 1 66 1 178 1 329 1 358 1 
253 1 60 2 62 2 272 1 105 1 50 2 66 1 130 1 176 1 76 1 19 1 
253 1 60 4 226 1 62 3 272 2 105 3 50 4 338 1 98 1 66 2 112 1 130 1 84 1 191 1 76 2 166 1 
253 1 60 4 226 1 62 3 272 2 105 3 50 4 338 1 98 1 66 2 112 1 130 1 265 1 191 1 76 2 166 1 
60 1 112 1 62 1 272 1 105 1 71 1 50 1 66 1 76 1 98 1 166 1 
345 1 60 1 62 1 272 1 194 1 105 1 50 1 66 1 173 2 111 1 119 1 295 1 112 1 189 1 285 1 132 2 198 1 76 1 
345 1 194 1 132 1 198 1 338 1 173 1 111 1 
345 1 194 1 132 1 198 1 338 1 173 1 111 1 
13 1 209 1 338 1 
13 1 209 1 338 1 
60 1 62 1 80 1 272 1 50 1 66 1 
253 1 226 1 60 7 80 1 62 6 272 3 105 3 50 7 5 1 66 2 219 1 187 1 112 2 295 1 130 1 297 1 84 1 76 2 356 1 92 1 19 1 
194 1 3 2 140 1 248 1 285 2 198 1 253 1 146 1 105 1 201 2 149 1 50 1 111 1 295 1 343 1 56 1 299 1 20 4 267 2 345 1 60 1 301 1 62 1 215 3 66 1 117 1 173 2 350 2 119 1 120 1 221 1 123 1 76 1 124 1 27 2 78 1 272 1 316 2 184 2 30 2 318 1 363 6 189 1 280 1 132 2 91 1 239 3 
40 1 194 1 4 4 197 1 99 2 248 1 144 1 143 1 287 1 251 1 199 1 254 1 13 2 105 1 50 1 261 5 111 1 112 1 264 1 209 2 340 1 211 2 345 1 60 1 301 2 62 1 214 1 218 2 173 1 349 2 175 1 308 2 221 1 78 2 222 1 29 2 126 1 182 1 127 1 318 1 128 1 129 1 234 1 132 1 281 2 
253 1 60 2 80 1 62 2 272 2 105 2 50 2 66 1 187 1 246 1 295 1 370 1 76 1 
345 1 60 1 62 1 194 1 66 1 173 2 285 1 198 1 251 1 76 1 79 1 272 1 105 1 50 1 153 1 111 1 112 1 295 1 189 1 132 2 
338 1 
155 2 63 1 36 1 205 1 
155 2 63 1 17 1 13 1 209 1 36 1 144 1 259 1 47 1 205 1 
155 1 63 1 36 1 205 1 
155 1 17 1 47 1 
212 1 42 1 183 1 74 1 202 1 26 1 57 1 145 1 
212 2 42 2 193 1 183 4 202 1 204 1 275 2 65 1 247 1 74 1 37 1 26 4 46 1 57 3 
212 1 94 1 42 1 183 2 202 1 275 1 31 1 103 1 74 1 26 2 57 1 145 1 
212 1 42 1 193 2 183 3 309 1 74 1 202 1 204 2 26 3 46 1 57 1 145 1 
271 1 115 2 23 1 57 2 
195 1 183 1 74 1 202 1 26 1 145 1 
212 1 42 1 121 1 183 2 74 1 202 1 275 1 26 2 57 1 145 1 
335 1 
212 1 42 1 183 1 74 1 202 1 26 1 57 1 145 1 
212 1 42 1 71 1 57 1 
212 1 42 1 183 1 74 1 202 1 26 1 57 1 
93 1 26 1 334 1 
42 1 212 1 193 2 183 3 202 1 204 1 142 1 74 1 26 3 46 1 57 1 145 1 
212 1 42 1 83 1 183 2 74 1 202 1 275 1 26 2 57 1 
223 1 183 1 37 1 74 1 202 1 26 1 178 1 192 1 57 1 145 1 358 1 
212 1 183 1 74 1 202 1 26 1 57 1 145 1 
212 2 42 1 183 1 74 1 202 1 26 1 145 1 
212 1 314 1 183 2 7 1 210 1 74 2 202 2 26 2 57 1 145 1 
212 1 42 1 116 1 183 3 202 1 275 2 65 1 121 1 74 1 37 1 26 3 57 2 145 1 
212 1 42 1 225 1 96 1 183 2 213 1 202 1 275 1 74 1 26 2 57 1 178 2 192 1 145 1 358 1 
212 1 42 1 183 4 202 2 275 2 65 1 83 1 74 2 37 1 26 4 57 2 145 1 373 1 
42 1 212 1 193 1 183 3 202 1 275 1 121 1 74 1 26 3 57 1 145 1 
183 1 37 1 26 1 275 1 65 1 57 1 
212 1 57 1 

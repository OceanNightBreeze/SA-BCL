#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 189 298 77 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 189 298 77 261 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 189 298 77 (101,162) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 189 298 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 189 298 77 (101,162) (101,162) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 223 (51,96,227) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 189 298 77 (101,162) (101,162) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 189 298 77 (101,162) (101,162) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 189 91 46 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 189 298 77 (101,162) (101,162) 144 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 189 298 77 261 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 189 186 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 189 186 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 189 186 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 189 186 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 295 181 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 189 186 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
164 9 200 1 125 1 82 1 299 5 89 1 90 1 304 1 131 1 52 4 212 1 99 1 217 9 138 2 264 6 268 1 318 2 225 1 110 2 71 1 233 1 235 2 278 2 239 1 34 3 115 1 283 2 37 2 
164 9 200 1 125 1 82 1 299 5 89 1 90 1 304 1 131 1 52 4 212 1 99 1 217 9 138 2 264 6 268 1 318 2 225 1 110 2 71 1 233 1 235 2 278 2 239 1 34 3 115 1 37 2 283 2 
164 10 200 1 125 1 82 1 299 6 89 1 90 1 304 1 131 1 52 5 212 1 99 1 217 10 138 2 264 7 268 1 318 2 225 1 110 2 71 1 233 1 235 2 278 2 239 1 34 4 115 1 37 2 283 2 
164 7 200 1 125 1 82 1 299 4 89 1 90 1 304 1 131 1 52 3 212 1 99 1 217 7 138 2 264 4 268 1 318 2 225 1 110 2 71 1 233 1 235 2 278 2 34 2 115 1 37 2 283 1 
138 1 264 3 164 4 318 1 268 1 299 3 110 1 89 1 304 1 235 1 52 2 34 1 239 1 115 1 99 1 37 1 283 2 217 4 
20 1 164 2 82 1 318 1 299 1 110 1 304 1 233 1 235 1 325 1 278 1 115 1 99 1 37 1 157 1 217 2 
264 1 164 3 200 1 318 2 299 2 304 1 278 1 52 1 34 1 115 1 99 1 37 2 217 3 
138 1 81 1 264 7 164 9 200 1 268 1 318 2 299 5 170 1 110 1 89 1 90 1 131 1 304 1 235 1 278 1 52 4 239 1 34 3 115 1 99 1 283 2 37 2 217 9 
138 1 81 1 264 7 164 9 200 1 268 1 318 2 299 5 170 1 110 1 89 1 90 1 131 1 304 1 235 1 278 1 52 4 239 1 34 3 115 1 99 1 283 2 37 2 217 9 
196 1 314 1 187 1 
187 1 269 2 9 1 
189 1 77 1 298 1 
261 1 189 1 77 1 298 1 
162 1 189 1 77 1 298 1 
159 1 292 1 314 1 222 1 124 1 61 1 201 1 6 1 203 1 68 1 187 1 53 1 280 1 192 1 
189 1 298 1 
161 1 132 1 253 1 280 1 61 1 
161 1 314 1 187 1 253 1 280 2 241 1 133 1 61 2 
253 1 280 1 61 1 
101 1 161 1 162 1 280 1 189 1 61 1 77 1 298 1 
187 1 
172 1 161 1 314 1 187 1 253 1 280 2 241 1 61 2 
161 2 41 1 22 1 314 1 61 5 107 1 146 2 273 1 11 1 50 2 13 2 211 1 187 1 75 1 280 5 253 2 241 1 134 1 287 1 
324 1 51 1 
324 1 51 1 
223 1 96 1 
223 1 96 1 
223 1 96 1 
324 1 51 1 284 1 
324 1 51 1 223 1 96 1 
324 1 51 1 227 1 
324 1 51 1 284 1 
324 1 51 1 284 1 
324 1 51 1 319 1 
324 1 51 1 319 1 
324 1 51 1 319 1 
88 1 229 1 324 1 303 1 51 1 280 1 92 1 189 1 61 1 84 1 259 1 
42 1 59 1 83 1 61 2 296 2 84 2 248 1 65 1 88 2 229 2 207 1 324 2 303 1 51 2 187 1 280 2 92 3 193 1 259 2 
110 1 138 1 235 1 
110 1 235 1 157 1 
138 2 235 3 244 1 43 1 157 1 18 1 
138 1 129 1 235 2 43 1 157 1 18 1 
138 1 235 2 43 2 157 1 18 1 
161 4 162 1 4 1 298 1 48 1 11 1 50 1 209 1 13 1 253 1 179 1 100 1 101 1 314 1 142 1 61 5 106 2 269 1 146 1 107 1 66 1 109 1 273 2 183 1 280 5 187 1 241 1 189 1 77 1 38 1 158 1 
161 4 162 1 4 1 298 1 48 1 11 1 50 1 209 1 13 1 132 2 12 1 253 3 179 1 100 1 101 1 219 1 314 1 142 1 61 5 269 1 146 1 107 1 66 1 273 2 183 1 280 5 187 1 188 2 241 1 189 1 77 1 158 1 
161 2 41 1 4 1 9 2 48 1 11 3 50 1 13 1 174 1 177 1 100 1 179 2 314 1 61 3 106 1 142 2 269 4 146 1 66 1 109 1 273 2 183 1 187 3 280 3 38 1 158 1 
41 1 161 3 2 1 4 2 9 3 171 1 48 1 11 5 50 1 13 1 174 2 177 2 179 4 100 2 314 1 104 1 142 4 61 4 106 2 269 7 146 1 66 1 109 1 273 4 183 2 187 4 280 4 38 1 158 2 
196 1 289 1 114 1 326 1 178 1 
70 1 326 1 
49 1 
112 1 123 1 326 1 
288 1 326 1 
112 1 326 1 
112 1 206 1 31 1 123 1 114 2 326 3 
262 1 58 3 141 1 145 1 168 6 86 1 148 1 127 1 72 2 276 1 232 1 184 1 174 1 191 1 258 1 118 3 158 1 
262 1 58 3 141 1 145 1 168 6 86 1 148 1 127 1 72 2 276 1 232 1 184 1 174 1 191 1 258 1 118 3 158 1 
262 1 58 3 141 1 145 1 168 6 86 1 148 1 127 1 72 2 276 1 232 1 184 1 182 1 174 1 191 1 258 1 118 3 158 1 
293 3 168 30 86 2 8 1 250 1 127 2 130 1 174 4 254 1 213 4 214 1 308 2 258 1 177 3 100 3 19 1 262 5 58 15 141 2 317 1 145 2 64 1 148 1 30 1 232 1 72 9 276 4 184 1 183 3 185 1 282 1 191 2 118 15 158 4 
168 9 86 1 8 1 127 1 174 2 308 2 95 1 258 1 262 1 58 4 317 1 141 1 144 1 145 1 148 1 276 2 72 3 184 1 185 1 281 1 282 1 191 1 118 5 158 2 
290 2 79 1 244 1 164 2 198 1 246 1 299 1 304 1 173 1 176 1 256 1 99 1 217 2 138 1 23 1 264 1 103 1 220 2 318 1 226 1 110 1 272 1 235 2 32 1 278 1 279 1 115 1 35 2 195 1 37 1 157 1 
290 1 79 1 244 1 198 1 164 3 246 1 299 1 300 1 208 1 210 1 173 1 176 1 256 1 99 1 217 3 138 1 103 1 220 1 264 2 318 1 226 1 110 1 272 1 235 2 278 1 279 1 115 1 35 1 37 1 157 1 
138 1 79 1 290 1 264 2 220 1 103 1 244 1 164 2 198 1 246 1 299 1 226 1 110 1 272 1 208 1 235 2 210 1 278 1 279 1 115 1 35 1 256 1 99 1 157 1 217 2 
0 1 290 1 198 2 164 1 167 1 247 1 300 1 87 1 256 2 217 1 103 2 220 1 318 1 226 1 112 1 272 1 278 2 74 1 33 1 326 1 190 1 35 1 37 1 
138 1 23 1 79 1 290 1 220 1 103 1 244 1 164 1 198 1 246 1 318 1 226 1 110 1 272 1 208 1 304 1 235 2 173 1 278 1 279 1 176 1 35 1 256 1 157 1 37 1 217 1 
76 1 
159 1 0 2 5 2 247 1 7 2 6 1 9 2 11 2 13 1 253 6 94 1 26 1 266 2 269 2 107 1 271 1 112 1 273 2 272 1 277 1 113 1 187 2 280 5 35 2 192 1 39 2 40 2 122 2 290 2 292 1 199 1 124 1 201 1 44 1 203 1 205 1 302 1 50 1 53 1 314 1 220 2 316 1 222 1 61 5 62 2 146 1 226 1 66 1 321 4 228 1 68 1 74 1 152 1 241 3 326 1 
159 1 292 1 222 1 199 1 124 1 61 3 201 1 7 1 6 1 321 2 203 1 172 1 68 1 271 1 228 1 205 1 277 1 253 2 280 3 53 1 241 1 192 1 
159 1 292 1 199 1 124 1 201 1 6 1 203 1 172 1 205 1 253 1 53 1 314 1 222 1 61 3 62 1 321 3 228 1 271 1 68 1 277 1 280 3 187 1 241 1 192 1 
159 1 292 1 199 1 124 1 201 1 5 1 6 1 7 1 203 1 172 1 205 1 53 1 253 2 314 1 222 1 61 3 62 1 321 3 228 1 271 1 68 1 277 1 280 3 187 1 241 1 192 1 
159 1 5 4 7 4 6 1 9 2 172 1 11 1 13 1 253 7 94 1 265 1 26 1 266 2 270 1 107 1 271 1 273 1 277 1 280 5 187 5 192 1 39 2 40 2 120 1 122 2 292 1 199 1 124 1 201 1 202 1 203 1 205 1 50 1 53 1 314 5 222 1 61 5 63 1 62 4 146 1 321 6 68 1 228 1 241 3 
159 1 5 2 6 1 7 2 9 2 11 1 13 1 253 4 94 1 26 1 266 2 269 2 107 1 271 1 273 1 277 1 280 4 187 2 192 1 39 2 40 2 122 2 292 1 199 1 124 1 201 1 44 1 203 1 205 1 50 1 53 1 314 1 222 1 61 4 62 2 146 1 321 4 68 1 228 1 241 2 
40 2 159 1 120 1 122 2 292 1 199 1 124 1 201 1 5 2 7 2 6 1 9 2 202 1 203 1 205 1 11 1 50 1 13 1 253 4 53 1 94 1 314 1 26 1 222 1 266 2 61 4 62 2 270 1 107 1 146 1 321 4 228 1 271 1 68 1 273 1 277 1 187 1 280 4 241 2 192 1 39 2 
40 2 159 1 120 1 122 2 292 1 199 1 124 1 201 1 5 2 7 2 6 1 9 2 202 1 203 1 205 1 11 1 50 1 13 1 253 4 53 1 94 1 314 1 26 1 222 1 266 2 61 4 62 2 270 1 107 1 146 1 321 4 228 1 271 1 68 1 273 1 277 1 187 1 280 4 241 2 192 1 39 2 
40 2 159 1 160 1 1 2 292 1 199 1 124 1 201 1 5 2 249 1 7 2 6 1 203 1 205 1 11 1 50 1 13 1 253 4 53 1 94 1 314 1 222 1 61 4 269 2 62 2 270 1 147 2 107 1 146 1 321 4 322 1 228 1 271 1 68 1 273 1 277 1 187 1 280 4 241 2 192 1 39 2 
40 2 159 1 120 1 122 2 292 1 199 1 124 1 201 1 5 3 6 1 7 3 9 2 202 1 203 1 205 1 11 1 50 1 13 1 53 1 253 5 94 1 314 1 26 1 222 1 265 1 266 2 61 4 62 3 270 1 146 1 107 1 321 5 228 1 271 1 68 1 273 1 277 1 187 1 280 4 241 2 192 1 39 2 
40 2 159 1 120 1 122 2 292 1 199 1 124 1 201 1 5 3 6 1 7 3 9 2 202 1 203 1 205 1 11 1 50 1 13 1 53 1 253 5 94 1 314 1 26 1 222 1 265 1 266 2 61 4 62 3 270 1 146 1 107 1 321 5 228 1 271 1 68 1 273 1 277 1 187 1 280 4 241 2 192 1 39 2 
159 1 1 2 5 2 6 1 7 2 11 1 13 1 253 4 94 1 269 2 107 1 271 1 273 1 277 1 280 4 187 1 192 1 39 2 40 2 292 1 199 1 124 1 201 1 44 1 203 1 205 1 50 1 53 1 314 1 222 1 61 4 62 2 146 1 147 2 321 4 322 1 68 1 228 1 241 2 
293 1 85 1 168 19 8 2 10 2 174 3 213 2 254 1 308 4 95 1 177 3 100 3 262 3 58 10 317 2 143 1 64 1 67 2 149 1 111 1 230 1 151 1 276 3 72 6 183 3 185 2 282 2 119 1 118 9 158 3 
78 1 293 2 85 2 168 26 8 3 10 1 252 1 306 1 14 1 174 2 213 2 308 6 95 1 97 1 177 2 100 3 19 2 262 2 58 12 317 3 143 1 64 2 67 4 149 1 111 2 151 1 275 1 72 4 276 2 183 3 185 3 282 3 118 14 158 3 
78 1 293 3 85 2 168 41 8 3 10 1 305 1 252 1 306 1 14 1 174 5 213 4 254 1 308 6 95 1 258 1 97 1 177 4 100 4 19 1 262 4 58 22 141 1 317 3 143 1 145 1 64 3 148 1 67 4 149 1 111 1 151 1 275 1 276 4 72 8 184 1 183 4 185 3 282 3 119 1 118 19 158 5 
78 1 293 3 85 2 168 38 8 4 10 1 305 1 252 1 306 1 14 1 174 4 213 4 254 1 308 8 95 1 258 1 97 1 177 3 100 4 19 2 262 3 58 19 141 1 317 4 143 1 145 1 64 3 148 1 67 4 149 1 111 1 151 1 275 1 276 4 72 7 184 1 183 4 185 4 282 4 119 1 118 19 158 5 
78 1 293 4 85 1 168 52 8 2 10 1 252 1 306 1 14 1 174 8 213 4 254 2 308 4 95 1 258 1 97 1 177 7 100 7 102 2 19 1 262 7 58 26 141 1 317 2 143 1 145 1 64 2 148 1 67 4 149 1 111 1 151 1 275 1 276 7 72 14 184 1 183 7 185 2 282 2 118 26 158 8 
88 1 229 1 42 1 324 1 51 1 267 1 84 1 193 1 259 1 65 1 
55 1 227 1 
88 1 229 1 324 1 51 1 297 1 93 1 84 1 135 1 259 1 
327 1 284 1 
128 1 121 1 319 1 
42 1 59 1 83 1 61 1 296 1 84 1 65 1 88 1 229 1 207 1 303 1 324 1 51 1 187 1 280 1 92 2 193 1 259 1 
42 1 59 1 83 1 61 1 296 1 84 1 65 1 88 1 229 1 207 1 303 1 324 1 51 1 187 1 280 1 92 2 193 1 259 1 
42 1 59 1 83 1 61 1 296 1 84 1 65 1 88 1 229 1 207 1 303 1 324 1 51 1 187 1 280 1 92 2 193 1 259 1 
128 1 327 1 284 1 
128 1 327 1 284 1 
121 1 319 1 
128 1 121 1 319 1 
21 1 153 1 
21 1 242 1 161 1 163 1 4 1 59 1 61 1 296 1 84 1 227 1 46 1 88 1 229 1 91 1 324 1 51 1 280 1 92 1 189 1 153 1 55 1 259 1 
243 1 290 2 292 2 291 1 295 1 168 2 6 2 8 1 53 2 308 2 310 1 313 1 218 1 57 1 220 2 58 1 317 1 226 1 272 1 112 1 73 1 236 1 32 2 185 1 326 1 282 1 328 1 35 2 285 1 118 1 194 1 
138 1 290 2 79 1 220 2 244 1 226 1 110 1 272 1 301 1 208 1 235 2 173 1 279 1 255 1 35 2 256 1 98 1 157 1 195 1 
138 1 290 1 79 1 220 1 244 1 226 1 110 1 301 1 272 1 208 1 235 2 173 1 279 1 307 1 35 1 256 1 157 1 
0 1 290 1 220 1 247 1 226 1 204 1 272 1 112 1 74 1 33 1 326 1 35 1 256 1 98 1 
138 1 290 1 79 1 220 1 244 1 226 1 110 1 301 1 272 1 208 1 235 2 173 1 279 1 255 1 35 1 256 1 98 1 157 1 
320 1 
273 1 196 1 11 1 22 1 314 1 187 1 75 1 
122 1 9 1 11 1 50 1 13 1 253 1 314 1 26 1 266 1 61 1 269 1 146 1 107 1 273 1 187 2 280 1 241 1 
159 2 0 1 9 6 251 2 11 9 13 4 253 5 174 2 15 2 17 2 177 2 179 6 100 2 22 1 269 12 28 1 107 4 272 1 112 1 273 8 274 2 31 1 183 2 114 2 280 5 187 8 35 2 195 1 290 2 123 1 45 1 50 4 215 2 309 2 314 2 220 2 61 5 142 6 226 2 146 4 66 2 69 1 323 1 70 3 234 1 75 1 152 1 241 3 240 2 326 6 329 2 158 2 
78 1 293 1 166 1 9 3 251 2 11 8 50 2 252 1 13 2 306 1 14 1 253 1 174 2 213 1 15 1 97 1 177 2 179 5 100 2 263 1 314 2 61 1 142 5 269 6 64 1 146 2 107 2 66 1 273 5 183 2 152 1 280 1 187 5 241 1 158 2 
101 1 120 1 162 1 141 1 61 1 144 1 145 1 298 1 107 1 146 1 273 1 251 2 11 2 50 1 13 1 174 1 280 1 189 1 77 1 258 1 158 1 
22 1 314 1 107 1 146 1 273 1 11 1 50 1 13 1 75 1 187 1 
142 5 269 10 9 5 251 2 273 5 11 5 183 2 187 5 174 2 240 1 15 1 177 2 100 2 158 2 179 5 
314 1 187 1 280 1 253 1 241 1 61 1 
0 2 41 1 290 2 80 1 247 1 11 2 50 2 13 2 253 4 220 2 316 1 105 1 61 3 226 1 146 2 107 1 66 2 323 2 272 1 112 1 273 2 234 1 113 1 74 1 152 2 280 3 241 2 326 1 35 2 
261 1 189 1 77 1 298 1 
314 2 142 2 269 4 9 2 107 1 146 1 66 1 127 1 273 2 11 1 50 1 13 1 187 4 152 1 179 2 
88 1 54 1 84 1 
88 1 21 1 84 1 193 1 257 1 
88 1 54 1 84 1 
88 1 54 1 84 1 
88 1 231 1 84 1 
88 1 231 1 84 1 
88 1 231 1 84 1 
88 1 84 1 
324 1 51 1 
19 1 262 1 58 4 317 2 141 1 145 1 168 7 8 2 148 1 72 2 276 1 184 1 185 2 174 1 282 2 308 4 258 1 118 3 158 1 
196 1 58 3 141 1 145 1 168 5 148 1 276 1 72 1 184 1 174 1 258 1 118 2 158 1 
262 1 58 2 294 1 317 1 168 4 8 1 276 1 72 2 183 1 185 1 174 1 282 1 308 2 177 1 118 2 100 1 158 1 
262 1 58 4 293 1 168 7 64 1 276 1 72 2 183 1 174 1 213 2 254 1 177 1 118 3 100 1 158 1 
3 1 293 2 168 22 8 2 174 3 254 1 213 2 308 4 258 1 177 2 100 2 102 1 19 2 262 4 58 12 141 2 317 2 145 2 148 1 150 1 72 8 276 4 184 1 183 2 185 2 282 2 118 10 158 3 
58 1 213 1 168 1 
293 1 168 1 118 1 
262 1 58 3 294 1 317 1 168 6 8 1 72 3 276 2 183 1 185 1 174 1 240 1 282 1 308 2 118 3 177 1 100 1 158 1 
78 1 293 1 168 12 8 1 252 1 306 1 174 2 14 1 213 1 308 2 95 1 97 1 177 2 100 2 262 1 58 6 317 1 64 1 276 1 72 2 183 2 185 1 282 1 118 6 158 2 
262 1 58 3 141 1 145 1 168 6 276 1 72 2 174 1 258 1 118 3 158 1 
19 1 262 1 3 1 58 2 141 1 317 1 145 1 168 3 8 1 148 1 72 2 276 1 184 1 185 1 282 1 308 2 118 1 
262 2 58 5 317 1 141 2 144 1 145 2 168 10 8 1 276 3 72 5 185 1 174 2 282 1 308 2 95 1 258 1 118 5 158 2 
262 1 317 1 168 2 8 1 72 1 185 1 282 1 308 2 95 1 118 2 100 1 158 1 
262 1 58 2 317 1 168 4 8 1 276 1 72 2 183 1 185 1 174 1 282 1 308 2 95 1 177 1 118 2 100 1 158 1 
19 1 262 1 3 1 58 2 317 3 141 1 145 1 168 3 8 3 276 1 72 2 185 3 282 3 308 6 95 1 119 1 118 1 
3 1 293 3 294 1 168 33 8 5 130 1 174 5 214 1 213 4 254 1 308 10 95 1 258 2 177 3 100 3 19 2 262 5 58 18 141 3 317 5 145 3 64 1 148 1 30 1 72 11 276 6 184 1 183 3 185 5 282 5 119 1 118 15 158 5 
58 4 293 1 141 1 317 1 145 1 168 7 8 1 64 1 148 1 72 1 276 1 184 1 185 1 174 1 282 1 213 1 308 2 95 1 258 1 97 1 118 3 158 1 
293 1 294 1 168 10 8 2 174 1 213 2 254 1 308 4 95 1 258 1 97 1 100 1 262 1 58 5 141 1 317 2 145 1 64 1 148 1 276 1 72 2 184 1 183 1 185 2 282 2 118 5 158 2 
78 1 293 1 294 1 168 18 8 3 252 1 306 1 14 1 174 3 213 1 308 6 95 1 258 1 97 1 177 2 100 2 19 1 262 1 58 10 141 1 317 3 145 1 64 1 148 1 276 2 72 3 184 1 183 2 185 3 282 3 118 8 158 3 
78 1 293 1 294 1 168 16 8 3 252 1 306 1 174 2 14 1 213 1 308 6 95 1 258 1 97 1 177 1 100 2 19 1 262 2 58 7 141 1 317 3 145 1 64 1 148 1 276 2 72 4 184 1 183 2 185 3 282 3 118 9 158 3 
58 4 293 1 141 1 317 1 145 1 168 7 8 1 64 1 148 1 72 1 276 1 184 1 185 1 174 1 282 1 213 1 308 2 95 1 258 1 97 1 118 3 158 1 
78 1 293 1 168 12 8 1 252 1 306 1 174 2 14 1 213 1 308 2 95 1 97 1 177 2 100 2 262 1 58 6 317 1 64 1 276 1 72 2 183 2 185 1 282 1 118 6 158 2 
78 1 293 1 294 1 168 17 8 4 252 1 306 1 14 1 174 2 213 1 308 8 95 1 258 1 97 1 177 1 100 2 19 2 262 2 58 8 141 1 317 4 145 1 64 1 148 1 276 2 72 4 184 1 183 2 185 4 282 4 118 9 158 3 
78 1 293 1 168 16 8 4 252 1 306 1 14 1 174 2 213 1 308 8 95 1 97 1 177 2 100 3 19 2 262 3 58 7 317 4 64 1 276 3 72 6 183 3 185 4 282 4 119 1 118 9 158 3 
262 4 58 5 141 4 144 1 145 4 168 10 148 1 127 1 276 5 72 9 184 1 174 2 258 2 118 5 158 2 
78 1 293 1 168 17 8 4 252 1 306 1 14 1 174 2 213 1 308 8 95 1 258 1 97 1 177 1 100 2 19 2 262 1 58 8 141 1 317 4 145 1 64 1 148 1 276 2 72 3 184 1 183 2 185 4 282 4 119 1 118 9 158 3 
292 1 53 1 245 1 16 1 192 1 6 1 29 1 
136 1 197 1 292 1 315 1 139 1 245 1 29 1 6 1 53 1 16 1 216 1 192 1 
272 1 112 1 196 1 0 1 290 1 220 1 74 1 326 1 247 1 35 1 226 1 
186 1 189 1 
186 1 189 1 
186 1 189 1 
323 1 280 1 61 1 
323 1 280 1 61 1 
311 1 272 1 290 1 220 1 35 1 226 1 
311 1 0 2 290 7 221 1 220 7 123 1 295 1 140 1 169 1 226 3 126 1 112 2 272 2 208 1 32 1 31 1 238 1 326 3 35 6 195 1 260 1 
186 1 189 1 
159 1 0 1 161 1 290 1 11 1 50 2 13 2 253 2 17 1 215 1 22 1 314 1 220 1 61 3 146 2 107 2 273 1 70 1 274 1 234 1 187 1 75 1 280 3 114 1 241 1 326 2 35 1 329 1 
311 1 290 2 220 2 123 1 45 1 226 2 112 1 272 1 31 1 114 1 326 2 35 2 195 1 
0 1 290 4 220 4 247 1 226 1 112 1 272 1 74 1 326 1 35 4 117 1 195 1 286 1 
25 1 290 1 220 1 123 1 165 1 140 1 226 2 126 1 323 1 112 1 272 1 326 1 35 1 36 1 
110 1 272 1 0 1 79 1 290 1 235 1 220 1 35 1 157 1 226 1 
290 2 220 2 295 1 226 1 112 1 272 1 208 1 236 1 326 1 35 2 195 1 
0 1 290 4 220 4 221 1 295 1 247 1 169 1 226 2 323 1 112 2 272 2 74 1 326 3 35 3 117 1 195 1 
0 1 181 1 290 4 220 4 295 1 247 1 169 1 226 2 323 1 112 2 272 2 74 1 326 3 35 3 117 1 195 1 
186 1 189 1 
323 1 
196 1 115 1 299 1 99 1 
164 1 115 1 318 1 299 1 99 1 37 1 217 1 
278 1 198 1 217 1 
24 1 164 3 318 1 82 2 299 1 304 1 175 1 115 1 156 1 99 1 37 1 217 3 
264 1 164 2 115 1 318 1 299 1 99 1 283 1 37 1 217 2 
138 1 164 1 318 1 268 1 299 1 110 1 304 1 235 1 52 1 37 1 217 1 
304 1 164 1 318 1 299 1 99 1 37 1 217 1 
304 1 164 1 115 1 318 1 99 2 37 1 217 1 
137 1 164 2 318 2 299 1 47 1 304 1 99 1 37 2 217 2 56 1 
264 2 164 3 318 1 299 2 90 1 304 1 131 1 52 1 34 1 115 1 99 1 37 1 217 3 
138 1 264 1 244 1 164 2 318 1 299 1 110 1 304 1 235 2 115 1 116 1 99 1 157 1 37 1 217 2 
264 2 164 4 318 2 299 2 304 1 52 1 239 1 34 1 115 1 99 1 37 2 283 1 217 4 
304 1 164 1 115 1 318 1 299 1 99 1 37 1 217 1 
24 1 264 2 164 4 82 1 318 1 299 3 52 1 34 1 115 2 155 1 156 1 99 2 37 1 217 4 
180 1 264 1 164 2 224 1 318 1 299 1 170 1 304 1 115 1 99 1 37 1 217 2 
24 1 164 3 27 1 318 1 82 2 299 1 304 1 115 1 156 2 99 1 37 1 217 3 
108 1 60 2 154 1 299 2 
312 1 304 1 164 1 318 1 37 1 217 1 
90 1 304 1 264 1 164 2 115 1 318 1 299 1 99 1 37 1 217 2 
237 1 
304 1 164 1 115 1 318 1 299 1 99 1 37 1 217 1 
90 1 304 1 264 1 164 3 115 1 82 1 318 1 299 1 99 1 37 1 217 3 
52 1 34 1 155 1 299 1 
299 1 99 1 

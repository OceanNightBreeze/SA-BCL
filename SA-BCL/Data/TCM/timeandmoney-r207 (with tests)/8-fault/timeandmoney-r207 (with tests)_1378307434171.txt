#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 309 (14,212) (14,212) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 309 (14,212) (14,212) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 309 (14,212) (14,212) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 309 (14,212) (14,212) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 255 (167,222) 79 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 255 29 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 255 (167,222) 79 218 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 44 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 52 54 213 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 52 54 213 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 52 54 213 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 52 54 213 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 52 54 213 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (199,293,319) (32,124,134) (32,124,134) (32,124,134) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (199,293,319) (32,124,134) (32,124,134) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (199,293,319) (32,124,134) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (74,323) (4,227) (4,227) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (199,293,319) (32,124,134) (32,124,134) (32,124,134) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 145 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 52 292 123 166 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 52 170 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 52 170 138 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 52 144 318 205 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 52 144 318 205 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 255 (167,222) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 255 (167,222) (167,222) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 52 303 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 52 303 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 52 303 171 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 52 303 171 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 52 303 171 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 52 170 138 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (199,293,319) (199,293,319) (199,293,319) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (199,293,319) (199,293,319) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (74,323) (74,323) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (199,293,319) (199,293,319) (199,293,319) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 24 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 255 (167,222) 79 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 53 109 204 (106,128) (106,128) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 53 109 204 (106,128) (106,128) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 145 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 52 292 260 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 52 292 123 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 52 292 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 52 144 318 291 94 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 52 292 260 181 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 52 144 189 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 53 109 204 (106,128) (106,128) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 52 144 189 156 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 52 144 318 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 52 144 318 291 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 53 109 204 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 52 292 260 182 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 145 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 296 1 7 1 273 1 39 1 14 1 151 1 17 1 212 1 70 1 309 1 261 1 217 1 243 1 
112 1 296 1 7 1 273 1 39 1 14 1 151 1 17 1 212 1 70 1 309 1 261 1 217 1 243 1 
112 1 296 1 7 1 273 1 39 1 14 1 151 1 17 1 212 1 70 1 309 1 261 1 217 1 243 1 
112 1 296 1 7 1 273 1 39 1 14 1 151 1 17 1 212 1 70 1 309 1 261 1 217 1 243 1 
225 1 112 1 226 3 295 1 296 4 201 3 113 1 11 1 13 1 60 2 151 1 17 1 70 4 309 1 261 1 329 1 243 1 127 2 
226 1 225 1 112 1 295 1 296 2 56 1 39 1 168 1 151 1 118 1 70 2 309 1 261 1 217 1 314 1 243 1 
225 1 112 2 226 2 295 1 296 3 269 1 201 1 39 1 13 1 151 2 70 3 243 1 127 1 
295 1 296 9 201 7 136 1 11 1 13 3 60 2 17 1 70 9 309 1 261 1 225 1 112 2 226 5 269 1 113 1 34 1 39 1 88 1 151 2 329 1 243 1 331 1 127 4 
295 1 296 9 201 7 136 1 11 1 13 3 60 2 17 1 70 9 309 1 261 1 225 1 112 2 226 5 269 1 113 1 34 1 39 1 88 1 151 2 329 1 243 1 331 1 127 4 
327 1 143 1 145 1 
327 1 99 2 100 1 
0 1 65 2 111 2 3 2 68 2 130 2 253 1 305 2 
111 1 79 1 3 1 180 1 130 1 167 1 186 1 253 1 255 1 305 1 65 1 67 1 68 1 174 2 108 1 
65 1 111 1 155 1 3 1 68 1 130 1 46 1 330 1 253 1 305 1 
267 1 130 1 102 1 251 1 12 1 233 1 305 1 65 1 327 1 143 1 310 1 220 1 330 1 265 1 
111 1 267 1 3 1 130 1 102 1 12 1 233 1 305 1 65 1 327 1 68 1 143 1 310 2 265 2 330 1 
281 1 310 1 286 1 265 1 277 1 
327 1 281 1 143 1 310 2 265 2 50 1 277 1 164 1 
281 1 310 1 265 1 
111 1 3 1 130 1 276 1 253 1 277 1 305 1 65 1 155 1 68 1 310 1 46 1 330 1 265 1 
327 1 
327 1 281 1 143 1 202 1 310 2 265 2 50 1 277 1 
80 2 250 2 185 1 274 1 231 1 188 2 277 2 139 1 191 1 327 1 154 1 157 1 281 2 143 1 310 5 177 1 265 5 221 1 50 1 
65 1 111 1 3 1 130 1 174 1 186 1 72 1 255 1 305 1 304 1 
0 1 145 1 
111 1 0 2 3 1 130 2 228 1 305 2 65 2 68 1 95 1 
158 1 58 1 288 1 
174 1 186 1 255 1 29 1 
0 1 65 3 111 3 68 1 3 3 130 3 72 1 305 3 
65 1 111 1 155 1 3 1 130 1 330 1 305 1 
65 1 111 1 3 1 68 1 130 1 228 1 330 1 95 1 305 1 
111 3 267 1 79 1 3 3 130 3 102 1 228 1 167 1 186 1 12 1 253 1 233 1 255 1 304 1 305 3 65 3 120 1 68 2 174 1 310 1 72 1 218 1 265 1 330 1 
0 1 65 2 111 1 3 1 42 1 130 2 251 1 72 1 305 2 
111 3 267 1 3 3 130 3 102 1 228 1 12 1 232 1 233 1 304 1 305 3 65 3 120 1 68 1 327 1 310 1 72 2 265 1 330 1 
65 1 111 1 3 1 68 1 130 1 158 1 228 1 305 1 
174 1 186 1 255 1 
44 1 174 1 186 1 
198 1 131 1 249 1 36 1 137 1 38 1 62 1 278 1 324 2 43 1 158 1 20 2 214 1 238 1 282 1 288 1 
65 1 111 1 267 1 3 1 130 1 330 1 40 1 305 1 
111 4 0 1 3 4 130 5 228 1 251 1 86 1 305 5 304 1 65 5 68 1 42 1 72 2 22 1 
65 2 111 2 155 1 3 2 130 2 330 1 40 1 305 2 
183 1 116 1 
183 1 116 1 
328 1 27 1 
328 1 27 1 
328 1 27 1 
183 1 116 1 162 1 
69 1 183 1 116 1 
246 1 183 2 328 1 116 2 27 1 97 1 
183 1 116 1 162 1 
183 1 116 1 162 1 
183 1 229 1 116 1 
183 1 229 1 116 1 
183 1 229 1 116 1 
294 2 129 2 247 1 200 1 183 2 300 1 116 2 83 2 327 1 259 1 308 2 310 2 160 3 175 1 265 2 289 2 163 1 97 1 266 1 
0 1 294 1 3 2 129 1 130 2 133 1 305 2 172 1 65 2 259 1 141 1 69 1 308 1 21 1 310 1 25 1 265 1 75 1 111 2 183 1 187 1 116 1 160 1 289 1 
17 1 309 1 261 1 
309 1 56 1 261 1 
77 1 17 2 132 1 56 1 261 3 287 1 
77 1 245 1 17 1 56 1 261 2 287 1 
77 2 17 1 56 1 261 2 287 1 
98 1 99 3 100 1 250 1 203 2 133 1 207 1 62 1 139 2 141 1 143 1 21 1 144 1 310 5 73 1 265 5 177 3 110 2 31 1 318 1 80 1 188 1 234 1 277 4 325 1 41 2 154 1 327 2 281 1 194 1 282 1 291 1 50 1 
99 9 100 3 250 2 203 6 299 5 207 1 62 3 15 1 139 6 66 1 21 4 143 1 215 1 312 1 144 3 310 9 265 9 177 8 110 6 31 2 318 3 80 2 274 1 188 2 277 7 325 2 153 1 327 5 154 1 281 6 194 3 282 3 284 1 286 5 291 3 50 1 
3 1 99 4 130 1 100 2 250 1 203 2 253 1 62 1 305 1 139 2 65 1 68 1 143 1 21 1 310 3 144 1 73 1 265 3 177 3 111 1 110 2 31 1 318 1 80 1 274 1 276 1 188 1 234 1 277 2 325 1 41 1 155 1 327 3 194 1 282 1 46 1 330 1 51 1 291 1 
99 7 3 1 100 3 250 1 253 1 21 2 177 5 265 4 110 4 111 1 31 1 274 1 188 1 276 1 277 3 41 2 194 2 282 2 46 1 291 2 51 1 130 1 203 4 62 2 305 1 139 4 65 1 66 1 68 1 143 1 144 2 310 4 312 1 215 1 73 1 318 2 80 1 234 1 325 1 155 1 327 4 330 1 
142 1 223 1 145 1 
280 1 223 1 
107 1 
192 1 223 1 
192 1 142 2 262 1 223 3 322 1 179 1 
192 1 262 1 223 1 
92 1 223 1 
52 1 213 1 54 1 16 1 
52 1 213 1 54 1 16 1 
52 1 213 1 54 1 82 1 16 1 
52 1 213 1 54 1 16 1 
52 1 213 1 54 1 16 1 
32 1 112 1 319 1 296 1 101 1 134 1 39 1 151 1 152 1 121 1 70 1 124 1 174 1 311 1 243 1 290 1 
32 1 112 1 319 1 296 2 101 1 201 1 115 1 84 1 39 1 151 1 121 1 70 2 124 1 174 1 311 1 47 1 290 1 
32 1 121 1 319 1 101 1 296 1 70 1 201 1 115 1 311 1 174 1 39 1 84 1 
112 1 4 1 296 1 101 2 227 1 114 1 186 1 39 2 151 1 121 2 70 1 174 1 311 2 74 1 47 1 
32 1 112 1 319 1 296 1 101 1 134 1 84 1 39 1 151 1 121 1 70 1 124 1 174 1 311 1 243 1 290 1 
89 1 
165 2 1 2 99 2 5 1 100 2 102 1 250 1 10 1 251 1 9 2 12 1 104 2 256 2 174 2 26 4 177 2 265 5 31 1 267 1 186 2 188 1 275 1 281 6 50 3 130 1 206 1 139 2 305 1 63 1 65 1 210 1 307 1 140 1 71 1 143 1 310 5 313 1 220 1 80 1 233 1 87 1 326 1 235 2 327 2 154 1 241 2 330 1 
267 1 130 1 102 1 202 1 10 1 251 1 12 1 275 1 233 1 305 1 63 1 326 1 65 1 281 2 241 1 310 3 26 2 313 1 330 1 265 3 220 1 50 1 
267 1 130 1 102 1 202 1 10 1 251 1 12 1 275 1 233 1 305 1 63 1 326 1 65 1 235 1 327 1 281 1 143 1 310 3 26 3 313 1 330 1 265 3 220 1 50 1 
130 1 102 1 202 1 251 1 10 1 12 1 305 1 256 1 65 1 63 1 143 1 310 3 313 1 26 3 220 1 265 3 267 1 275 1 233 1 326 1 235 1 327 1 281 2 241 1 330 1 50 1 
165 2 1 2 100 2 102 1 250 1 10 1 251 1 9 2 12 1 104 2 256 4 26 6 265 5 177 1 267 1 271 1 117 1 275 1 188 1 279 1 281 7 50 3 130 1 202 1 305 1 139 1 65 1 63 1 307 1 140 1 143 5 310 5 313 1 315 1 220 1 80 1 230 1 233 1 326 1 235 4 327 5 154 1 241 4 330 1 
165 2 1 2 99 2 100 2 5 1 102 1 250 1 251 1 10 1 9 2 12 1 104 2 256 2 26 4 265 4 177 1 267 1 275 1 188 1 281 4 50 2 130 1 305 1 139 1 65 1 63 1 307 1 140 1 143 1 310 4 313 1 220 1 80 1 233 1 326 1 235 2 154 1 327 2 241 2 330 1 
165 2 1 2 100 2 130 1 102 1 250 1 9 2 251 1 10 1 12 1 104 2 256 2 139 1 305 1 65 1 63 1 307 1 140 1 143 1 310 4 313 1 26 4 315 1 177 1 220 1 265 4 267 1 80 1 117 1 275 1 188 1 233 1 326 1 279 1 235 2 327 1 154 1 281 4 241 2 330 1 50 2 
165 2 1 2 100 2 130 1 102 1 250 1 9 2 251 1 10 1 12 1 104 2 256 2 139 1 305 1 65 1 63 1 307 1 140 1 143 1 310 4 313 1 26 4 315 1 177 1 220 1 265 4 267 1 80 1 117 1 275 1 188 1 233 1 326 1 279 1 235 2 327 1 154 1 281 4 241 2 330 1 50 2 
1 2 99 2 130 1 102 1 250 1 9 2 251 1 10 1 12 1 301 1 256 2 139 1 305 1 65 1 63 1 140 1 143 1 310 4 313 1 26 4 263 2 177 1 220 1 265 4 76 1 267 1 268 2 80 1 37 1 117 1 275 1 188 1 233 1 326 1 235 2 327 1 154 1 281 4 241 2 330 1 50 2 
165 2 1 2 100 2 130 1 102 1 250 1 9 2 251 1 10 1 12 1 104 2 139 1 305 1 256 3 65 1 63 1 307 1 140 1 143 1 310 4 313 1 26 5 315 1 177 1 220 1 265 4 267 1 80 1 230 1 117 1 188 1 275 1 233 1 279 1 326 1 235 3 327 1 154 1 281 5 241 3 330 1 50 2 
165 2 1 2 100 2 130 1 102 1 250 1 9 2 251 1 10 1 12 1 104 2 139 1 305 1 256 3 65 1 63 1 307 1 140 1 143 1 310 4 313 1 26 5 315 1 177 1 220 1 265 4 267 1 80 1 230 1 117 1 188 1 275 1 233 1 279 1 326 1 235 3 327 1 154 1 281 5 241 3 330 1 50 2 
1 2 99 2 5 1 102 1 250 1 251 1 10 1 9 2 12 1 256 2 26 4 265 4 177 1 263 2 267 1 268 2 275 1 188 1 281 4 50 2 130 1 301 1 305 1 139 1 65 1 63 1 140 1 143 1 310 4 313 1 220 1 80 1 233 1 326 1 235 2 154 1 327 1 241 2 330 1 
198 1 52 1 128 1 131 1 249 1 270 1 204 1 189 1 137 1 38 1 278 1 43 1 214 1 144 1 106 1 145 1 96 1 109 1 
198 1 52 1 292 1 166 1 131 1 249 1 81 1 58 1 137 1 38 1 190 1 324 1 43 1 158 1 20 1 214 1 123 1 288 1 
111 1 198 1 52 1 3 1 131 1 130 1 249 1 298 1 81 1 137 1 38 1 105 1 170 1 304 1 305 1 324 1 65 1 43 1 20 1 214 1 72 1 126 1 
111 1 198 1 3 1 131 1 130 1 249 1 81 1 186 1 137 1 38 1 304 1 305 1 324 1 65 1 43 1 20 1 214 1 174 1 72 1 196 1 126 1 
198 1 52 1 131 1 43 1 249 1 214 1 174 1 186 1 216 1 38 1 137 1 170 1 138 1 
111 1 198 1 52 1 318 1 3 1 130 1 131 1 249 1 228 1 81 1 137 1 38 1 305 1 65 1 68 1 43 1 214 1 144 1 240 1 291 1 
198 1 52 1 318 1 131 1 43 1 249 1 214 1 144 1 205 1 38 1 137 1 278 1 
198 1 131 1 249 1 137 1 38 1 62 1 278 1 324 2 43 1 158 1 20 2 214 1 238 1 282 1 288 1 
198 1 52 1 318 1 131 1 43 1 249 1 214 1 144 1 38 1 137 1 291 1 278 1 
198 1 52 1 318 1 131 1 43 1 249 1 214 1 144 1 216 1 205 1 38 1 137 1 
198 1 131 1 249 1 137 1 38 1 62 1 324 2 43 1 158 1 20 2 214 1 238 1 282 1 216 1 288 1 
198 1 52 1 318 1 131 1 43 1 249 1 214 1 144 1 216 1 38 1 137 1 291 1 
198 1 52 1 318 1 131 1 43 1 249 1 214 1 144 1 38 1 137 1 291 1 
167 1 174 1 186 1 255 1 
0 1 198 1 131 1 249 1 33 1 186 1 137 1 38 1 324 1 43 1 20 1 214 1 174 1 330 1 316 1 126 1 
198 1 52 1 318 1 131 1 43 1 249 1 214 1 81 1 144 1 38 1 137 1 291 1 
167 1 174 1 222 1 255 1 152 1 
111 1 198 1 52 1 318 1 3 1 130 1 131 1 249 1 228 1 81 1 137 1 38 1 169 1 305 1 65 1 68 1 43 1 214 1 144 1 291 1 
324 1 198 1 52 1 193 1 131 1 43 1 20 1 214 1 103 1 219 1 38 1 93 1 303 1 171 1 
324 1 198 1 52 1 193 1 131 1 43 1 20 1 214 1 103 1 219 1 38 1 93 1 303 1 171 1 
324 1 198 1 52 1 193 1 131 1 43 1 20 1 214 1 103 1 219 1 38 1 93 1 303 1 171 1 
324 1 198 1 52 1 193 1 131 1 43 1 20 1 214 1 103 1 219 1 38 1 93 1 303 1 171 1 
324 1 198 1 52 1 193 1 131 1 43 1 20 1 214 1 103 1 219 1 38 1 93 1 303 1 171 1 
209 1 294 1 129 1 183 1 308 1 300 1 116 1 289 1 97 1 266 1 
69 1 75 1 
294 1 129 1 183 1 8 1 308 1 242 1 116 1 176 1 289 1 
294 1 129 1 247 1 200 1 183 1 300 1 116 1 83 1 327 1 259 1 308 1 310 1 160 2 265 1 289 1 163 1 97 1 266 1 
294 1 129 1 247 1 200 1 183 1 300 1 116 1 83 1 327 1 259 1 308 1 310 1 160 2 265 1 289 1 163 1 97 1 266 1 
294 1 129 1 247 1 200 1 183 1 300 1 116 1 83 1 327 1 259 1 308 1 310 1 160 2 265 1 289 1 163 1 97 1 266 1 
30 1 246 1 162 1 
30 1 246 1 162 1 
297 1 229 1 
246 1 297 1 229 1 
187 1 25 1 
0 1 294 1 129 1 3 2 130 2 200 1 133 1 305 2 172 1 65 2 141 1 69 1 308 1 21 1 310 1 25 1 265 1 75 1 111 2 147 1 183 1 187 1 83 1 116 1 277 1 160 1 289 1 
30 1 162 1 
246 1 297 1 229 1 
198 1 52 1 131 1 130 2 249 1 81 1 35 1 59 1 137 1 38 1 170 1 138 1 305 2 65 2 43 1 19 1 214 1 239 1 
199 1 121 1 293 1 319 1 236 1 174 2 84 1 290 1 152 1 
199 1 121 1 306 1 319 1 174 1 84 1 290 1 
121 1 236 1 174 1 186 1 74 1 323 1 
199 1 121 1 293 1 319 1 236 1 174 1 84 1 290 1 
252 1 
327 1 143 1 185 1 177 1 221 1 145 1 139 1 
165 1 99 1 100 1 250 1 104 1 139 1 307 1 143 1 310 1 177 1 265 1 80 1 188 1 154 1 327 2 281 1 50 1 
154 1 80 1 250 1 174 1 186 1 24 1 188 1 
292 1 99 6 100 3 250 2 203 5 254 1 62 2 139 5 210 1 260 1 143 2 310 1 144 2 265 1 177 8 264 1 110 5 31 1 318 2 181 1 80 2 188 2 190 1 150 1 154 2 327 5 281 1 194 1 282 2 285 1 161 1 197 1 50 1 51 2 291 2 
3 1 130 1 250 1 204 1 253 1 305 1 139 2 65 1 68 1 310 1 144 2 265 1 177 2 109 1 111 1 80 1 188 1 189 1 276 1 279 1 155 1 154 1 156 1 194 1 282 1 46 1 330 1 51 2 
80 1 250 1 185 1 188 1 139 1 154 1 327 1 143 1 177 1 221 1 
110 2 318 1 99 4 100 2 203 2 62 1 139 2 327 2 194 1 282 1 144 1 177 2 51 1 291 1 
327 1 281 1 143 1 310 1 265 1 50 1 
31 2 80 2 55 1 250 2 186 2 274 1 188 2 85 1 87 1 139 2 210 2 173 1 154 1 281 4 71 1 310 3 174 4 125 2 265 3 177 2 50 2 
65 1 111 1 3 1 68 1 79 1 130 1 167 1 174 1 186 1 253 1 255 1 305 1 
110 1 31 1 99 2 100 1 80 1 250 1 188 1 139 1 210 1 154 1 327 2 143 1 177 1 
258 1 294 1 289 1 
294 1 187 1 300 1 289 1 208 1 
258 1 294 1 289 1 
258 1 294 1 289 1 
294 1 237 1 289 1 
294 1 237 1 289 1 
294 1 237 1 289 1 
294 1 289 1 
183 1 116 1 
324 1 198 1 52 1 292 1 181 1 131 1 43 1 20 1 214 1 260 1 219 1 38 1 190 1 
324 1 198 2 52 1 292 1 181 1 131 2 43 2 20 1 214 2 260 1 219 1 38 2 28 1 190 1 
324 1 198 1 52 1 292 1 181 1 131 1 43 1 20 1 214 1 260 1 219 1 38 1 190 1 
324 1 198 1 52 1 292 1 181 1 131 1 43 1 20 1 214 1 260 1 219 1 38 1 190 1 
324 1 198 1 52 1 292 1 181 1 131 1 43 1 20 1 214 1 260 1 219 1 38 1 190 1 
324 1 198 1 52 1 292 1 181 1 131 1 43 1 20 1 214 1 260 1 219 1 38 1 190 1 
324 1 198 2 52 1 292 1 181 1 131 2 43 2 20 1 214 2 260 1 219 1 38 2 28 1 190 1 
198 2 52 1 292 1 2 1 131 2 181 1 38 2 190 1 324 1 43 2 20 1 214 2 260 1 219 1 
128 1 53 1 270 1 204 1 106 1 96 1 109 1 
198 2 52 1 292 1 2 1 131 2 181 1 38 2 190 1 324 1 43 2 20 1 214 2 260 1 219 1 
198 2 128 1 53 1 131 2 270 1 204 1 38 2 43 2 214 2 90 1 106 1 96 1 109 1 
52 1 128 1 270 1 144 1 204 1 106 1 189 1 145 1 96 1 109 1 
198 1 52 1 318 1 131 1 43 1 214 1 144 1 38 1 28 1 291 1 
324 1 52 1 292 1 20 1 260 1 190 1 
324 1 52 1 292 1 20 1 123 1 190 1 
324 1 20 1 190 1 
52 1 292 1 
324 1 52 1 318 1 20 1 144 1 94 1 291 1 
324 1 198 1 52 1 292 1 181 1 131 1 43 1 20 1 214 1 260 1 219 1 38 1 190 1 
52 1 144 1 189 1 
198 1 128 1 53 1 131 1 6 1 270 1 204 1 38 1 324 1 43 1 20 1 214 1 90 1 106 1 96 1 109 1 
52 1 156 1 270 1 144 1 204 1 189 1 96 1 109 1 
198 1 52 1 318 1 131 1 43 1 214 1 144 1 219 1 38 1 
198 1 52 1 318 1 131 1 43 1 214 1 144 1 219 1 38 1 291 1 
198 2 2 1 53 1 131 2 270 1 204 1 38 2 43 2 214 2 219 1 109 1 96 1 
198 3 52 1 292 1 2 1 131 3 182 1 38 3 190 1 324 1 43 3 20 1 214 3 260 1 219 1 28 1 
0 1 65 1 130 1 42 1 251 1 178 1 305 1 
0 1 130 1 251 1 135 1 305 1 65 1 42 1 23 1 332 1 244 1 178 1 333 1 
174 1 186 1 145 1 
65 1 111 1 3 1 130 1 174 1 186 1 72 1 305 1 
65 1 111 1 3 1 130 1 174 1 72 1 125 1 305 1 
65 1 111 1 3 1 130 1 174 1 72 1 125 1 305 1 
174 1 310 1 125 1 265 1 
174 1 310 1 125 1 265 1 
211 1 174 1 
174 1 186 1 
111 1 198 1 3 1 131 1 130 1 249 1 81 1 35 1 137 1 38 1 152 1 305 1 65 1 43 1 214 1 174 1 72 1 
173 1 154 1 80 1 250 1 174 1 186 1 310 1 188 1 265 1 277 1 
211 1 174 1 
78 1 248 1 174 4 186 1 152 1 
174 1 159 1 
174 1 186 1 
174 2 84 1 152 1 
174 2 186 1 152 1 
174 2 186 1 152 1 
65 1 111 1 3 1 130 1 174 1 186 1 72 1 305 1 
174 1 125 1 
0 1 64 1 272 1 91 1 48 1 
0 1 267 1 102 1 272 2 12 1 233 1 321 1 277 1 64 2 120 1 18 1 327 1 143 1 91 1 283 1 310 2 330 1 265 2 48 2 
65 1 64 1 130 1 19 1 239 1 91 1 59 1 48 1 305 1 
18 1 91 1 321 1 
226 1 225 1 295 1 145 1 
226 1 225 1 112 1 295 1 296 1 70 1 151 1 
101 1 296 1 39 1 
146 1 226 1 112 1 225 1 296 3 295 1 57 1 302 1 151 1 70 3 314 2 243 1 
226 1 225 1 112 1 295 1 296 2 70 2 201 1 60 1 151 1 
112 1 226 1 296 1 11 1 151 1 17 1 70 1 309 1 261 1 243 1 127 1 
226 1 112 1 295 1 296 1 70 1 243 1 151 1 
225 1 112 1 295 2 296 1 70 1 243 1 151 1 
226 1 112 2 295 1 296 2 320 1 151 2 257 1 70 2 195 1 243 1 
225 1 112 1 226 2 295 1 296 3 201 2 136 1 13 1 151 1 70 3 243 1 331 1 127 1 
226 1 225 1 112 1 295 1 296 2 132 1 201 1 56 1 184 1 151 1 17 1 70 2 309 1 261 2 243 1 
225 1 112 2 226 2 295 1 296 4 201 2 13 1 60 1 151 2 70 4 329 1 243 1 127 1 
226 1 225 1 112 1 295 1 296 1 70 1 243 1 151 1 
146 1 225 2 112 1 226 3 295 2 296 4 201 2 57 1 13 1 151 1 70 4 314 1 49 1 127 1 
226 1 112 1 148 1 225 1 295 1 296 2 201 1 151 1 88 1 70 2 45 1 243 1 
146 2 226 1 112 1 225 1 296 3 295 1 57 1 151 1 122 1 70 3 314 2 243 1 
226 2 149 1 61 1 119 2 
317 1 112 1 296 1 70 1 243 1 151 1 
226 1 225 1 112 1 295 1 296 2 70 2 201 1 331 1 243 1 151 1 
224 1 
226 1 225 1 112 1 295 1 296 1 70 1 243 1 151 1 
226 1 225 1 112 1 295 1 296 3 70 3 201 1 314 1 331 1 243 1 151 1 
226 1 13 1 49 1 127 1 
226 1 295 1 

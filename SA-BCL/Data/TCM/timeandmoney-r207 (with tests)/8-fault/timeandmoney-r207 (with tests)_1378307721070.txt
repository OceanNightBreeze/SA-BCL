#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 10 222 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 60 133 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (120,182) 347 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (120,182) (120,182) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 60 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (120,182) (120,182) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
187 1 358 1 72 1 147 1 77 1 325 1 139 1 175 2 92 3 50 2 183 2 53 1 339 3 
187 1 72 1 293 1 323 1 325 2 77 1 139 1 297 1 354 2 50 5 5 1 53 6 339 9 303 2 56 1 358 4 199 2 259 2 309 1 147 3 175 2 61 1 92 9 179 1 183 2 289 1 68 1 208 1 
187 1 72 1 293 1 323 1 325 2 77 1 139 1 297 1 354 2 50 5 5 1 53 6 339 9 303 2 56 1 358 4 199 2 259 2 309 1 147 3 175 2 61 1 92 9 179 1 183 2 289 1 68 1 208 1 
187 1 72 1 293 1 323 1 325 2 77 1 139 1 297 1 354 2 50 6 5 1 53 7 339 10 303 2 56 1 358 5 199 2 259 2 309 1 147 4 175 2 61 1 92 10 179 1 183 2 289 1 68 1 208 1 
187 1 72 1 293 1 323 1 325 2 77 1 139 1 297 1 354 2 50 4 5 1 53 4 339 7 303 2 56 1 358 3 199 2 259 1 147 2 175 2 61 1 92 7 179 1 183 2 289 1 68 1 208 1 
187 1 358 2 199 1 72 1 259 2 309 1 147 1 139 1 175 1 354 1 92 4 50 3 179 1 183 1 68 1 53 3 339 4 303 1 
187 1 72 1 325 1 139 1 175 1 284 1 297 1 150 1 354 1 92 2 50 1 183 1 132 1 339 2 208 1 303 1 
187 1 72 1 293 1 325 1 77 1 139 1 354 1 50 5 5 1 53 7 339 9 303 1 358 4 199 1 259 2 309 1 147 3 175 2 92 9 179 1 180 1 317 1 183 2 68 1 
187 1 72 1 293 1 325 1 77 1 139 1 354 1 50 5 5 1 53 7 339 9 303 1 358 4 199 1 259 2 309 1 147 3 175 2 92 9 179 1 180 1 317 1 183 2 68 1 
31 1 19 1 352 1 326 1 341 1 111 1 93 1 337 1 349 1 290 1 196 1 166 1 55 1 254 1 
113 1 
113 1 70 1 352 2 41 1 341 2 328 1 196 1 17 1 
321 1 141 1 352 2 252 1 15 1 341 2 196 1 222 1 10 1 
113 1 212 1 17 1 
113 1 96 2 89 1 
93 1 326 2 290 2 111 2 2 1 166 2 254 2 55 2 
272 1 324 1 1 1 326 2 274 2 2 1 49 1 277 1 25 2 165 1 166 3 254 3 55 2 11 1 33 1 87 1 311 1 111 2 149 1 37 1 91 2 247 1 342 1 13 1 93 1 131 1 346 1 181 1 40 1 288 1 227 2 67 1 115 2 320 1 290 2 185 1 135 1 
31 1 93 1 19 1 337 1 326 1 290 1 111 1 166 1 254 1 55 1 
31 1 171 1 352 1 326 1 341 1 113 1 223 1 313 1 39 1 278 1 125 1 166 1 254 1 17 1 
31 1 171 1 352 2 326 1 341 2 111 1 113 1 313 1 278 1 290 1 125 1 166 1 55 1 254 1 17 1 
261 1 352 1 341 1 328 1 196 1 
113 1 169 1 352 2 41 1 341 2 328 1 196 1 17 1 
352 1 341 1 328 1 
351 1 326 2 21 1 111 1 2 2 290 1 166 2 254 2 55 1 
164 1 294 1 109 1 
272 1 33 1 2 1 91 1 123 1 342 1 13 1 346 1 40 1 227 1 67 1 115 1 165 1 185 1 166 1 254 1 
2 1 212 1 
272 1 75 1 33 1 294 1 326 1 91 1 13 1 342 1 163 1 346 1 40 1 67 1 227 1 165 1 115 1 290 1 185 1 166 2 55 1 254 2 
75 1 326 3 290 3 111 1 2 1 166 3 254 3 55 3 
31 1 19 1 326 1 290 1 166 1 254 1 55 1 
31 1 351 1 326 1 290 1 21 1 111 1 166 1 254 1 55 1 
272 1 75 1 352 1 324 1 1 1 326 3 21 1 274 2 2 1 49 1 163 1 25 1 278 1 52 1 165 1 125 1 166 4 254 4 55 3 31 1 171 1 33 1 87 1 311 1 341 1 111 2 149 1 37 1 91 1 13 1 342 1 265 1 93 1 313 1 131 1 346 1 40 1 288 1 67 1 227 1 115 1 320 1 290 3 185 1 
223 1 75 1 359 1 326 2 290 1 2 1 166 2 254 2 55 1 
136 1 31 1 352 1 75 2 171 1 326 3 341 1 21 1 111 1 113 1 163 1 313 1 278 1 52 1 290 3 125 1 166 3 55 3 254 3 
75 1 294 1 326 2 290 2 21 1 111 1 166 2 254 2 55 2 109 1 
272 1 33 1 2 1 91 1 342 1 13 1 346 1 40 1 227 1 67 1 115 1 165 1 185 1 166 1 254 1 
272 1 33 1 219 1 2 1 91 1 13 1 346 1 40 1 227 1 67 1 115 1 185 1 166 1 98 1 254 1 
74 1 324 2 1 1 294 2 274 2 275 1 191 1 355 1 164 2 213 1 24 1 25 4 109 2 197 1 87 1 34 1 203 1 149 1 205 1 131 1 181 2 288 1 207 1 320 1 
31 1 278 1 326 1 290 1 166 1 254 1 55 1 291 1 
75 2 359 1 326 5 296 1 21 1 273 1 111 1 2 1 223 1 163 1 290 4 166 5 55 4 254 5 
31 1 19 1 326 2 290 2 166 2 254 2 55 2 291 1 
235 1 335 1 367 1 
177 1 235 2 229 1 144 1 335 2 104 1 
235 1 335 1 
235 1 335 1 
144 1 104 1 
144 1 104 1 
144 1 104 1 
235 1 335 1 12 1 
235 1 335 1 12 1 
235 1 335 1 12 1 
235 1 335 1 365 1 
235 1 335 1 365 1 
235 1 335 1 365 1 
235 2 229 1 306 2 352 2 170 3 202 1 148 2 341 2 220 1 221 1 329 1 113 1 151 1 248 2 287 1 335 2 105 2 107 1 302 2 
352 1 326 2 190 1 2 1 276 1 22 1 329 1 192 1 335 1 105 1 166 2 55 2 254 2 235 1 306 1 170 1 127 1 148 1 341 1 248 1 290 2 368 1 367 1 18 1 
199 1 237 1 354 2 150 1 255 2 
199 1 303 1 354 1 
303 1 354 1 150 1 
199 2 178 1 237 1 354 3 150 1 255 1 
199 1 282 1 237 1 354 2 150 1 255 1 
71 1 74 1 19 1 352 5 157 2 326 1 328 1 141 1 331 1 80 1 337 1 143 2 252 1 27 1 166 1 196 4 254 1 55 1 31 1 200 1 241 1 341 5 203 1 111 1 64 1 90 1 113 1 224 1 93 1 41 1 42 1 15 1 349 1 290 1 368 1 17 1 
71 1 74 1 19 1 352 5 326 1 328 3 141 1 331 1 214 1 337 1 143 2 252 1 27 1 196 4 166 1 254 1 55 1 31 1 200 1 261 2 241 1 341 5 203 1 111 1 64 1 152 1 113 1 224 1 93 1 41 1 42 1 15 1 349 1 290 1 368 1 154 2 17 1 
321 1 19 1 352 3 74 1 157 1 326 1 141 1 80 1 337 1 252 1 143 2 27 1 166 1 196 2 254 1 55 1 31 1 200 1 241 1 341 3 111 1 203 1 90 1 64 1 113 1 224 1 93 1 349 1 15 1 42 1 290 1 368 1 17 1 
321 1 352 2 74 1 157 1 141 1 80 1 252 1 143 2 27 1 196 1 200 1 236 1 241 1 341 2 203 1 90 1 64 1 224 1 15 1 42 1 368 1 
116 1 
346 1 16 1 212 1 
234 1 346 1 
346 1 40 1 
161 1 346 3 26 1 40 1 185 1 16 2 
346 1 40 1 185 1 
346 1 38 1 
85 1 230 1 110 1 121 1 74 1 324 3 245 1 361 1 343 1 355 2 48 1 205 1 193 1 314 1 181 4 66 2 25 7 207 3 
230 1 45 1 74 1 324 6 158 1 78 1 274 2 191 1 48 1 355 2 193 2 25 11 301 1 304 2 110 1 238 1 87 1 203 1 149 1 64 1 343 2 205 1 314 1 94 1 181 5 66 1 288 1 270 1 207 4 320 1 
209 1 230 1 74 1 324 4 274 4 355 3 193 1 25 9 301 1 85 1 110 1 87 2 245 1 149 2 246 1 361 1 343 1 205 1 314 1 181 5 66 2 288 2 207 4 320 2 
85 1 230 1 110 1 74 1 324 3 245 1 361 1 343 1 355 2 48 1 205 1 193 1 314 1 181 4 66 2 25 7 207 3 
85 1 230 1 110 1 74 1 324 3 245 1 361 1 343 1 355 2 48 1 205 1 193 1 314 1 181 4 66 2 25 7 207 3 
271 1 325 2 189 1 159 1 47 1 216 2 339 1 198 2 307 1 33 1 240 1 174 2 175 1 91 1 13 1 92 1 346 1 183 1 40 1 227 1 67 1 115 1 119 1 
187 1 325 1 354 2 233 1 81 1 216 1 356 1 339 1 303 1 199 1 198 1 172 1 174 1 175 1 150 1 36 1 91 1 92 1 13 1 178 1 362 1 316 1 183 1 227 1 67 1 115 1 
187 1 72 1 325 1 139 1 354 2 233 1 50 1 81 1 216 1 356 1 53 1 339 2 303 1 199 1 198 1 174 1 360 1 175 1 150 1 36 1 91 1 92 2 13 1 178 1 362 1 316 1 183 1 227 1 67 1 115 1 
72 1 325 1 189 1 139 1 354 2 233 1 50 1 81 1 216 1 53 2 339 3 303 1 199 1 198 1 59 1 172 1 174 1 175 1 150 1 36 1 91 1 92 3 13 1 178 1 362 1 316 1 183 1 227 1 67 1 115 1 
199 1 198 1 59 1 72 1 172 1 325 1 174 1 139 1 354 2 150 1 36 1 91 1 13 1 92 2 178 1 50 1 362 1 81 1 216 1 67 1 227 1 115 1 53 2 339 2 303 1 
124 1 
99 1 322 2 271 1 188 1 0 1 326 1 328 6 141 1 331 1 332 2 143 2 278 1 338 1 279 1 8 1 239 1 243 2 341 5 63 1 113 2 13 1 346 1 67 1 15 1 115 2 17 1 352 5 252 1 125 1 166 1 254 1 256 1 31 1 307 1 262 2 171 1 308 1 33 2 89 2 91 2 223 1 224 1 266 4 313 1 364 1 39 1 269 2 40 1 226 1 41 3 227 2 96 2 42 2 134 2 43 2 
31 1 70 1 352 3 188 1 171 1 326 1 341 3 328 2 223 1 266 2 313 1 364 1 39 1 278 1 338 1 41 1 125 1 166 1 43 1 279 1 8 1 254 1 
31 1 70 1 262 1 352 3 188 1 171 1 326 1 341 3 328 1 113 1 223 1 266 3 313 1 364 1 39 1 278 1 338 1 41 1 125 1 166 1 279 1 8 1 254 1 17 1 
31 1 70 1 262 1 352 3 188 1 171 1 326 1 341 3 328 2 113 1 223 1 266 3 332 1 313 1 364 1 39 1 278 1 338 1 41 1 125 1 166 1 43 1 279 1 8 1 254 1 17 1 
322 2 70 1 188 1 352 5 326 1 327 1 328 7 298 1 141 1 331 1 142 1 332 4 103 1 143 1 252 1 278 1 338 1 125 1 29 1 166 1 8 1 279 1 254 1 31 1 308 1 262 4 171 1 243 2 341 5 89 2 63 1 113 5 223 1 266 6 313 1 39 1 364 1 269 2 41 3 42 1 15 1 134 2 43 4 17 5 
99 1 322 2 188 1 352 4 326 1 328 4 141 1 331 1 332 2 143 1 252 1 278 1 338 1 125 1 166 1 8 1 279 1 254 1 31 1 262 2 171 1 308 1 243 2 341 4 89 2 63 1 113 2 223 1 266 4 313 1 39 1 364 1 269 2 41 2 96 2 42 1 15 1 134 2 43 2 17 1 
322 2 188 1 352 4 326 1 328 4 298 1 141 1 331 1 332 2 142 1 143 1 278 1 252 1 338 1 125 1 166 1 29 1 254 1 8 1 279 1 31 1 262 2 308 1 171 1 243 2 341 4 89 2 63 1 113 1 223 1 266 4 313 1 39 1 364 1 269 2 41 2 42 1 15 1 134 2 43 2 17 1 
322 2 188 1 352 4 326 1 328 4 298 1 141 1 331 1 332 2 142 1 143 1 278 1 252 1 338 1 125 1 166 1 29 1 254 1 8 1 279 1 31 1 262 2 308 1 171 1 243 2 341 4 89 2 63 1 113 1 223 1 266 4 313 1 39 1 364 1 269 2 41 2 42 1 15 1 134 2 43 2 17 1 
322 2 188 1 352 4 326 1 328 4 141 1 331 1 332 2 142 1 299 1 143 1 278 1 252 1 338 1 125 1 166 1 254 1 8 1 279 1 32 2 31 1 262 2 171 1 201 1 263 2 341 4 63 1 113 1 223 1 266 4 313 1 39 1 364 1 269 2 41 2 348 1 96 2 42 1 15 1 43 2 17 1 
322 2 188 1 352 4 326 1 328 5 298 1 141 1 331 1 142 1 332 3 103 1 143 1 252 1 278 1 338 1 125 1 29 1 166 1 254 1 8 1 279 1 31 1 308 1 171 1 262 3 243 2 341 4 89 2 63 1 113 1 223 1 266 5 313 1 39 1 364 1 269 2 41 2 42 1 15 1 134 2 43 3 17 1 
322 2 188 1 352 4 326 1 328 5 298 1 141 1 331 1 142 1 332 3 103 1 143 1 252 1 278 1 338 1 125 1 29 1 166 1 254 1 8 1 279 1 31 1 308 1 171 1 262 3 243 2 341 4 89 2 63 1 113 1 223 1 266 5 313 1 39 1 364 1 269 2 41 2 42 1 15 1 134 2 43 3 17 1 
99 1 322 2 188 1 352 4 326 1 328 4 141 1 331 1 332 2 299 1 143 1 252 1 278 1 338 1 125 1 166 1 8 1 279 1 254 1 32 2 31 1 262 2 171 1 263 2 341 4 63 1 113 1 223 1 266 4 313 1 39 1 364 1 269 2 41 2 96 2 42 1 15 1 43 2 17 1 
91 1 14 1 33 1 227 1 115 1 
74 1 324 2 294 1 1 1 326 1 21 1 274 2 160 1 191 1 355 1 164 1 82 1 25 3 166 1 55 1 254 1 109 1 87 1 111 1 203 1 149 1 64 1 205 1 131 1 181 1 288 1 207 1 290 1 320 1 
230 1 74 1 324 3 294 1 1 1 274 2 275 1 2 2 212 1 355 2 164 1 25 6 109 1 85 1 110 1 87 1 245 1 149 1 361 1 205 1 131 1 181 3 66 1 288 1 207 2 320 1 
44 1 45 1 74 2 324 6 20 1 1 2 294 11 78 3 274 4 2 1 191 1 49 1 355 1 164 11 82 1 25 14 109 4 304 3 87 2 88 1 242 1 203 2 149 2 64 2 247 1 343 1 205 1 131 1 181 8 288 2 270 1 207 2 320 2 
272 1 75 1 324 1 1 1 326 1 274 2 2 1 123 1 163 1 49 1 101 1 82 1 106 1 25 2 165 1 166 2 254 2 55 1 109 1 33 1 87 1 149 1 91 1 13 1 342 1 247 1 346 1 131 1 315 1 181 1 40 1 67 1 227 1 288 1 115 1 290 1 320 1 185 1 
230 1 272 2 231 1 324 10 1 3 326 1 274 6 2 2 191 2 49 1 6 2 55 1 109 7 110 1 203 2 245 1 204 2 149 3 64 2 247 1 342 2 13 2 343 4 205 3 346 2 66 1 288 3 67 2 115 3 207 8 290 1 75 1 74 3 294 7 355 4 163 1 164 7 82 1 25 20 165 2 357 2 166 3 30 1 254 3 85 1 33 1 128 2 172 1 87 3 311 2 361 1 91 3 267 1 131 3 181 10 40 2 227 3 320 3 185 2 
74 1 294 1 1 1 87 1 275 1 274 2 203 1 149 1 343 1 164 1 213 1 131 1 181 2 25 2 288 1 207 1 320 1 109 1 
197 1 324 2 294 1 1 1 87 1 275 1 274 2 191 1 149 1 355 1 164 1 205 1 131 1 25 2 288 1 207 1 320 1 109 1 
74 1 324 2 294 2 1 1 87 1 275 1 274 2 203 1 191 1 149 1 64 1 343 1 355 1 205 1 164 2 131 1 181 2 25 4 288 1 207 2 320 1 109 2 
14 1 
14 1 
14 1 
74 1 324 2 294 2 1 1 87 1 274 2 203 1 191 1 149 1 64 1 343 1 355 1 205 1 164 2 131 1 181 2 25 4 288 1 207 2 320 1 109 2 
272 1 324 1 1 1 274 2 2 1 49 1 25 2 165 1 166 1 254 1 33 1 311 1 87 1 149 1 91 1 247 1 13 1 342 1 346 1 131 1 181 1 40 1 67 1 227 1 288 1 115 1 320 1 185 1 
272 1 324 1 1 1 274 2 2 1 49 1 25 2 166 1 254 1 33 1 87 1 219 1 149 1 91 1 247 1 13 1 346 1 131 1 181 1 40 1 67 1 227 1 288 1 115 1 320 1 185 1 98 1 186 1 
74 1 324 2 294 2 1 1 87 1 274 2 203 1 191 1 149 1 64 1 343 1 355 1 205 1 164 2 131 1 82 1 181 2 25 4 288 1 207 2 320 1 109 2 
272 1 74 1 324 2 294 2 1 1 274 2 191 1 355 1 164 2 25 4 165 1 166 1 254 1 109 2 311 1 87 1 360 1 203 1 204 1 149 1 64 1 91 1 343 1 13 1 342 1 205 1 346 1 131 1 181 2 40 1 67 1 227 1 288 1 207 2 115 1 320 1 185 1 
74 1 324 1 1 1 294 1 326 1 21 1 274 2 191 1 164 1 82 1 25 3 166 1 55 1 254 1 109 1 87 1 111 1 203 1 149 1 64 1 343 1 205 1 131 1 181 2 288 1 184 1 207 1 290 1 320 1 
209 1 45 1 76 1 74 3 324 10 138 1 78 1 122 1 274 4 251 1 191 3 355 3 25 19 9 2 304 2 305 1 281 1 87 2 203 3 149 2 64 3 285 2 343 3 205 3 181 9 366 1 288 2 270 1 207 6 320 2 
209 1 74 3 324 12 353 1 78 2 122 2 274 6 251 1 191 2 3 1 355 2 301 2 25 26 7 1 9 4 304 2 305 2 281 1 146 1 87 3 203 3 149 3 64 3 285 1 343 2 65 1 153 1 205 2 181 14 366 1 288 3 207 4 270 2 320 3 
230 1 209 1 45 1 76 1 74 5 324 21 353 1 78 3 122 1 274 6 251 1 191 4 3 1 355 4 301 1 25 41 7 1 9 4 85 1 304 4 110 1 305 2 281 1 146 1 87 3 203 4 245 1 149 3 64 4 285 1 361 1 343 4 65 1 153 1 205 5 225 1 181 20 66 1 366 1 288 3 270 3 207 8 320 3 
230 1 209 1 45 1 76 1 74 5 324 18 353 1 78 3 122 1 274 8 251 1 191 3 3 1 355 4 301 2 25 38 7 1 9 4 85 1 304 4 110 1 305 2 281 1 146 1 87 4 203 4 245 1 149 4 64 4 285 1 361 1 343 3 65 1 153 1 205 4 225 1 181 20 66 1 366 1 288 4 270 3 207 7 320 4 
44 2 230 1 209 1 45 2 74 8 324 25 353 1 78 4 122 1 274 4 251 1 191 7 3 1 355 7 301 1 25 52 7 1 9 4 85 1 304 4 110 1 305 1 281 1 146 1 87 2 203 7 245 1 149 2 64 7 285 1 361 1 343 7 65 1 153 1 205 8 181 27 66 1 366 1 288 2 270 2 207 14 320 2 
235 1 229 1 248 1 335 1 306 1 86 1 105 1 148 1 220 1 221 1 
192 1 367 1 
235 1 340 1 248 1 335 1 306 1 268 1 105 1 148 1 117 1 
235 1 229 1 306 1 352 1 170 2 148 1 341 1 220 1 221 1 329 1 113 1 151 1 248 1 287 1 335 1 105 1 107 1 302 1 
235 1 229 1 306 1 352 1 170 2 148 1 341 1 220 1 221 1 329 1 113 1 151 1 248 1 287 1 335 1 105 1 107 1 302 1 
235 1 229 1 306 1 352 1 170 2 148 1 341 1 220 1 221 1 329 1 113 1 151 1 248 1 287 1 335 1 105 1 107 1 302 1 
177 1 12 1 195 1 
177 1 12 1 195 1 
365 1 54 1 
177 1 365 1 54 1 
127 1 22 1 
292 1 352 1 326 2 190 1 2 1 276 1 22 1 192 1 335 1 105 1 302 1 166 2 196 1 254 2 55 2 235 1 306 1 170 1 127 1 148 1 341 1 287 1 248 1 290 2 368 1 367 1 18 1 
12 1 195 1 
177 1 365 1 54 1 
324 1 1 1 326 2 274 2 162 1 49 1 82 1 25 2 51 1 166 2 280 1 254 2 57 1 87 1 149 1 112 1 91 2 13 1 247 1 346 1 131 1 181 1 40 1 206 1 67 1 227 2 288 1 249 1 115 2 320 1 135 2 
198 1 271 1 307 1 33 1 47 1 91 1 13 1 346 1 114 1 40 1 67 1 227 1 115 1 69 1 
199 1 198 1 73 1 172 1 232 1 354 2 150 1 91 1 13 1 233 1 178 1 81 1 362 1 227 1 67 1 115 1 69 1 303 1 
199 1 198 1 73 1 172 1 360 1 232 1 354 2 150 1 91 2 13 1 233 1 178 1 81 1 362 1 67 1 227 2 115 2 69 1 303 1 
199 1 198 1 73 1 172 1 354 2 150 1 91 1 233 1 13 1 178 1 300 1 81 1 362 1 227 1 67 1 115 1 303 1 
168 1 
113 1 141 1 331 1 252 1 143 1 84 1 4 1 15 1 42 1 17 1 
200 1 74 1 143 2 241 1 203 1 64 1 
113 1 352 1 41 1 341 1 328 1 17 1 
321 1 271 1 352 3 328 4 141 2 331 1 252 2 143 2 28 1 256 1 58 1 126 2 145 1 307 1 33 2 239 1 341 3 91 4 13 1 224 2 346 1 40 1 226 2 67 1 227 4 41 2 15 2 115 4 42 2 
113 1 143 1 4 1 84 1 42 1 212 1 17 1 
352 1 328 1 141 1 331 1 143 1 252 1 308 1 243 1 341 1 89 1 113 2 41 1 42 1 15 1 96 1 134 1 17 1 
33 1 60 1 91 1 13 1 141 1 331 1 252 1 227 1 67 1 15 1 115 1 133 1 
44 1 45 1 74 4 78 2 191 4 3 1 141 1 331 1 336 2 252 1 143 7 7 1 304 2 200 8 146 1 241 8 203 4 89 3 64 4 65 1 153 1 205 4 42 11 270 1 15 1 96 3 
230 1 19 1 352 1 74 2 326 1 141 1 331 1 333 1 336 2 337 1 252 1 143 2 166 1 29 1 254 1 55 1 85 1 31 1 110 1 341 1 111 1 205 1 93 1 15 1 42 2 349 1 290 1 97 1 
272 1 324 1 1 1 326 2 274 2 2 1 49 1 25 1 165 1 166 3 254 3 55 2 33 1 87 1 311 1 111 2 149 1 91 1 37 1 342 1 13 1 93 1 346 1 131 1 40 1 227 1 67 1 288 1 115 1 320 1 290 2 185 1 
200 1 113 1 141 1 331 1 224 1 143 1 252 1 226 1 15 1 42 1 17 1 
248 1 148 1 220 1 176 1 22 1 
258 1 248 1 148 1 
258 1 248 1 148 1 
258 1 248 1 148 1 
248 1 148 1 253 1 
248 1 148 1 253 1 
248 1 148 1 253 1 
248 1 148 1 
235 1 335 1 
85 1 209 1 230 2 110 2 74 2 324 5 87 1 274 2 149 1 343 2 355 3 333 1 205 2 181 5 25 10 288 1 207 5 320 1 
209 1 74 1 87 1 274 2 203 1 149 1 343 1 181 2 25 2 288 1 207 1 320 1 
209 1 74 1 324 2 87 1 274 2 203 1 191 1 149 1 64 1 343 1 355 1 205 1 181 2 25 4 288 1 207 2 320 1 
209 1 230 1 110 1 76 1 324 2 158 1 87 3 274 6 149 3 343 1 355 1 181 1 301 1 25 3 288 3 207 2 320 3 
209 1 230 2 74 2 76 1 324 8 158 1 78 1 274 8 355 3 333 1 25 15 301 1 85 1 304 1 110 2 238 1 173 1 87 4 245 1 149 4 361 1 343 3 205 2 181 7 288 4 207 6 270 1 320 4 
85 1 230 1 110 1 74 1 324 4 87 2 274 4 245 1 149 2 361 1 343 1 355 2 205 1 181 4 66 1 25 8 301 1 288 2 207 3 320 2 
85 1 230 1 110 1 74 1 324 3 245 1 212 1 361 1 355 2 205 1 181 3 66 1 25 6 207 2 
74 1 324 2 173 1 87 1 274 2 203 1 191 1 149 1 64 1 343 1 355 1 205 1 181 2 25 4 288 1 207 2 320 1 
304 2 45 1 74 1 324 4 78 1 203 1 191 1 64 1 343 1 355 1 205 1 181 3 25 7 270 1 207 2 
44 1 230 2 45 1 74 3 324 12 20 1 158 1 78 2 274 4 191 2 355 5 25 23 301 2 85 1 304 2 110 2 87 2 203 2 245 1 149 2 64 2 361 1 343 4 205 3 181 11 66 1 288 2 207 9 320 2 
304 1 25 1 324 1 
181 1 25 1 78 1 
74 1 324 3 87 1 173 1 274 2 203 1 191 1 149 1 64 1 343 1 355 2 205 1 181 3 25 6 288 1 207 3 320 1 357 1 
209 1 74 2 324 6 78 1 274 2 191 2 3 1 355 1 25 12 7 1 304 1 146 1 87 1 203 2 149 1 64 2 343 1 65 1 205 2 153 1 181 6 288 1 270 1 207 2 320 1 
85 1 230 1 110 1 74 1 324 3 343 1 355 1 205 1 181 3 25 6 207 2 
230 1 110 1 324 2 158 1 87 1 274 2 245 1 149 1 361 1 343 1 355 1 181 1 25 3 301 1 288 1 207 2 320 1 
209 1 230 1 74 1 324 4 78 1 274 2 355 2 25 8 85 1 304 1 110 1 146 1 87 1 245 1 149 1 361 1 205 1 181 4 66 1 288 1 270 1 207 2 320 1 
230 1 209 1 45 1 74 2 324 5 78 1 274 4 355 2 25 11 85 1 304 2 110 1 146 1 87 2 173 1 203 1 245 1 149 2 64 1 361 1 343 1 205 1 181 6 66 1 288 2 270 1 207 3 320 2 
230 1 209 1 74 3 324 10 78 1 274 6 191 2 3 1 355 3 25 19 301 1 7 1 85 1 304 1 110 1 146 1 173 1 87 3 203 2 245 1 149 3 64 2 361 1 343 1 65 1 205 3 153 1 181 9 66 1 288 3 270 1 207 4 320 3 
230 1 209 1 74 3 324 7 78 1 274 6 191 1 3 1 355 3 301 1 25 17 7 1 85 1 304 1 110 1 146 1 173 1 87 3 203 2 245 1 149 3 64 2 361 1 343 2 65 1 205 2 153 1 181 10 66 1 288 3 270 1 207 5 320 3 
209 1 230 1 74 1 324 4 78 1 274 2 355 2 25 8 85 1 304 1 110 1 146 1 87 1 245 1 149 1 361 1 205 1 181 4 66 1 288 1 270 1 207 2 320 1 
209 1 74 2 324 6 78 1 274 2 191 2 3 1 355 1 25 12 7 1 304 1 146 1 87 1 203 2 149 1 64 2 343 1 65 1 205 2 153 1 181 6 288 1 270 1 207 2 320 1 
230 1 209 1 74 3 324 8 78 1 274 8 191 1 3 1 355 3 25 18 301 2 7 1 85 1 304 1 110 1 146 1 173 1 87 4 203 2 245 1 149 4 64 2 361 1 343 2 65 1 153 1 205 2 181 10 66 1 288 4 270 1 207 5 320 4 
209 1 76 1 74 3 324 7 78 1 274 8 191 2 3 1 355 3 25 16 301 2 7 1 304 1 146 1 87 4 203 3 149 4 64 3 343 3 65 1 153 1 205 2 181 9 288 4 270 1 207 6 320 4 
85 1 230 3 110 3 74 1 324 4 245 1 361 2 343 3 355 3 205 1 181 3 25 7 207 6 
230 1 209 1 76 1 74 3 324 8 78 1 274 8 191 1 3 1 355 3 25 18 301 2 7 1 85 1 304 1 110 1 146 1 87 4 203 2 245 1 149 4 64 2 361 1 343 1 65 1 153 1 205 2 181 10 66 1 288 4 270 1 207 4 320 4 
223 1 359 1 194 1 326 1 2 1 166 1 254 1 
260 1 359 1 326 1 2 1 100 1 223 1 130 1 194 1 318 1 215 1 166 1 254 1 
91 4 13 1 271 1 307 1 346 1 33 1 40 1 67 1 227 4 115 4 360 1 118 1 140 1 
156 1 91 1 13 2 267 1 346 1 347 1 40 1 227 1 67 1 115 1 185 1 120 1 167 1 
91 1 13 1 362 1 33 1 67 1 227 1 115 1 303 1 354 1 150 1 
91 2 13 1 57 1 346 1 172 1 40 1 51 1 67 1 227 2 115 2 360 1 
271 1 126 1 307 1 33 1 310 1 360 1 140 1 91 4 13 2 23 1 346 3 51 1 40 2 227 5 67 2 115 5 
271 1 126 1 307 1 33 1 310 1 360 1 140 1 91 4 330 1 13 2 346 3 51 1 40 2 227 5 67 2 115 5 
91 1 13 1 271 1 307 1 346 1 33 1 40 1 67 1 227 1 115 1 212 1 
272 1 75 1 33 1 326 1 2 1 91 1 13 1 346 1 40 1 227 1 67 1 115 1 165 1 290 1 185 1 166 2 55 1 254 2 
272 1 75 1 326 2 2 1 278 1 165 1 125 1 166 2 254 2 55 2 31 1 126 1 62 1 91 1 13 1 346 3 38 1 40 2 67 1 227 1 115 1 290 1 185 2 
272 1 75 1 326 2 2 1 278 1 125 1 166 2 254 2 55 2 31 1 126 1 219 1 62 1 91 2 13 1 346 3 38 1 40 2 67 1 227 2 115 2 290 1 118 1 185 2 
211 1 19 1 352 1 326 1 234 1 337 1 166 1 55 1 254 1 31 1 126 1 341 1 111 1 91 1 113 1 93 1 346 1 227 1 115 1 349 1 290 1 17 1 
19 1 352 1 326 1 79 1 234 1 337 1 166 1 55 1 254 1 31 1 126 1 341 1 111 1 91 1 113 1 93 1 346 1 227 1 115 1 349 1 290 1 17 1 
91 1 13 1 67 1 227 1 115 1 35 1 
33 1 91 1 13 2 346 1 182 1 26 1 40 1 227 1 67 1 115 1 185 1 120 1 167 1 
230 1 272 1 74 1 75 1 324 3 294 1 1 2 326 1 274 4 2 2 355 2 164 1 82 1 25 6 6 1 165 1 166 2 280 1 254 2 55 1 109 1 85 1 110 1 87 2 311 1 360 1 245 1 204 1 149 2 361 1 91 1 13 1 342 1 205 1 346 1 131 2 181 3 66 1 40 1 67 1 288 2 227 1 207 2 115 1 290 1 320 2 185 1 
352 3 328 2 79 1 141 2 331 2 234 1 143 1 252 2 4 1 84 1 196 1 257 1 145 1 33 1 341 3 113 1 91 1 345 1 313 1 346 2 227 1 41 1 42 1 15 2 115 1 350 1 16 1 17 1 
91 1 13 1 60 1 67 1 227 1 115 1 35 1 
272 1 75 1 33 1 326 1 219 1 2 1 91 1 13 1 346 1 40 1 227 1 67 1 115 1 290 1 185 1 166 2 55 1 254 2 
126 1 91 1 13 2 346 1 182 1 26 1 40 1 227 1 67 1 115 1 185 1 120 1 167 1 
283 1 137 1 319 1 244 1 2 1 
31 1 210 1 352 2 283 2 171 1 137 2 341 2 244 1 2 1 113 1 344 1 313 1 278 1 83 1 52 1 319 2 125 1 196 1 17 1 
283 1 137 1 326 1 244 1 112 1 162 1 249 1 166 1 254 1 
344 1 83 1 244 1 
187 1 92 1 50 1 72 1 183 1 139 1 175 1 339 1 
358 1 72 2 147 1 139 2 175 1 264 1 92 4 50 3 95 1 183 1 217 1 53 2 339 4 208 1 
187 1 92 2 50 1 72 1 218 1 317 1 183 1 139 1 175 1 53 1 339 2 228 1 
187 1 72 1 175 1 139 1 92 3 50 1 102 1 95 2 183 1 217 1 339 3 208 2 
50 2 155 1 295 2 312 1 
187 1 92 1 183 1 175 1 339 1 108 1 
187 1 92 2 50 1 72 1 293 1 183 1 139 1 175 1 53 1 339 2 
334 1 
187 1 92 1 50 1 72 1 183 1 139 1 175 1 339 1 
50 1 72 1 139 1 212 1 
92 1 50 1 72 1 183 1 139 1 175 1 339 1 
92 1 325 1 216 1 
187 1 92 3 50 1 72 1 363 1 95 1 183 1 217 1 139 1 175 1 339 3 208 2 
92 2 50 1 72 1 259 1 183 1 139 1 175 1 53 1 339 2 
358 1 187 1 92 1 199 1 50 1 179 1 183 1 175 1 339 1 303 1 354 1 
187 1 92 1 50 1 72 1 183 1 175 1 339 1 
187 1 92 1 72 2 183 1 139 1 175 1 339 1 
187 1 72 1 46 1 175 2 129 1 92 2 50 1 183 2 250 1 339 2 
187 1 358 1 72 1 293 1 147 1 139 1 175 1 92 3 50 2 183 1 5 1 53 2 339 3 
187 1 199 1 72 1 139 1 175 1 150 1 354 2 286 1 92 2 178 1 50 1 183 1 53 1 339 2 303 1 
187 1 358 1 72 1 259 1 309 1 147 1 139 1 175 2 92 4 50 2 183 2 53 2 339 4 
187 1 92 3 50 1 72 1 293 1 183 1 139 1 175 1 53 1 339 3 208 1 
358 1 50 1 147 1 264 1 
50 1 72 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 56 339 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
279 1 242 1 89 9 119 2 170 2 146 1 94 4 326 5 249 1 267 2 153 1 3 1 29 1 6 2 252 2 290 1 225 9 270 1 226 1 230 1 315 6 210 1 67 1 36 2 238 2 68 1 259 1 12 3 
279 1 242 1 89 9 119 2 170 2 146 1 94 4 326 5 249 1 267 2 153 1 3 1 29 1 252 2 6 2 290 1 225 9 270 1 226 1 230 1 315 6 210 1 67 1 36 2 238 2 68 1 259 1 12 3 
279 1 242 1 89 10 119 2 170 2 146 1 94 5 326 6 249 1 267 2 153 1 3 1 29 1 252 2 6 2 290 1 225 10 270 1 226 1 230 1 315 7 210 1 67 1 36 2 238 2 68 1 259 1 12 4 
279 1 242 1 89 7 119 2 170 2 146 1 94 3 326 4 249 1 267 2 153 1 3 1 29 1 252 2 6 1 290 1 225 7 270 1 226 1 315 4 210 1 67 1 36 2 238 2 68 1 259 1 12 2 
279 1 242 1 225 4 89 4 226 1 119 1 170 1 230 1 94 2 326 3 249 1 267 1 315 3 238 1 68 1 12 1 252 1 6 2 
225 2 89 2 226 1 119 1 146 1 170 1 326 1 312 1 249 1 220 1 76 1 210 1 238 1 36 1 68 1 252 1 
270 1 89 3 225 3 226 1 249 1 170 2 315 1 326 2 94 1 36 1 68 1 12 1 252 2 
279 1 242 1 89 9 119 1 170 2 94 4 326 5 249 1 267 1 153 1 3 1 252 2 6 2 270 1 201 1 225 9 226 1 230 1 315 7 36 1 238 1 10 1 68 1 12 3 
279 1 242 1 89 9 119 1 170 2 94 4 326 5 249 1 267 1 153 1 3 1 252 2 6 2 270 1 201 1 225 9 226 1 230 1 315 7 36 1 238 1 10 1 68 1 12 3 
45 1 
90 1 66 1 162 2 
129 2 352 1 324 2 72 2 9 2 173 2 138 2 299 1 
321 1 169 1 324 3 72 2 19 1 92 2 342 1 173 2 300 1 299 1 0 1 149 1 264 1 301 1 129 2 98 1 48 2 347 1 156 1 199 2 54 1 349 2 352 1 58 1 59 1 138 2 81 1 102 1 271 1 311 1 84 1 357 1 143 1 9 3 166 2 360 1 168 1 
125 1 129 1 324 1 236 1 72 1 9 1 173 1 138 1 299 1 277 1 
39 1 243 1 324 1 137 1 163 1 173 1 125 1 66 1 26 1 288 1 194 1 9 1 134 1 289 1 
243 2 137 2 324 1 72 1 163 1 173 1 138 1 125 1 129 1 66 1 26 1 288 1 9 1 134 1 289 1 
269 1 53 1 243 1 137 1 222 1 
269 1 243 2 324 1 137 2 72 1 353 1 173 1 138 1 299 1 205 1 125 1 129 1 236 1 26 1 66 1 9 1 100 1 277 1 222 1 
269 1 243 1 137 1 
243 1 137 1 324 1 72 1 173 1 299 1 138 1 125 1 129 1 236 1 9 1 100 1 222 1 277 1 
66 1 
269 1 243 2 324 1 137 2 72 1 353 1 173 1 138 1 299 1 125 1 129 1 236 1 26 1 66 1 9 1 100 1 333 1 277 1 222 1 
260 1 283 5 120 2 243 5 324 1 72 1 215 2 297 2 173 1 299 1 125 1 95 1 129 1 287 1 26 2 306 1 100 1 197 4 222 2 269 2 157 1 224 1 351 1 137 5 353 1 138 1 80 1 355 1 257 1 186 2 165 1 65 2 236 1 66 2 9 1 359 1 37 2 277 1 
45 1 
282 1 324 2 352 2 72 1 173 2 138 1 246 1 129 1 9 2 
341 1 232 1 196 1 
349 1 352 1 324 1 58 1 19 1 300 1 41 1 0 1 264 1 84 1 98 1 357 1 9 1 143 1 166 1 199 1 
320 1 55 1 282 1 324 4 352 1 72 4 173 4 138 1 177 1 125 1 310 2 129 4 209 1 9 4 
125 1 129 2 324 2 236 1 72 2 9 2 173 2 49 1 
341 1 349 1 55 1 58 1 324 2 19 1 72 1 173 1 300 1 0 1 310 1 264 1 98 1 129 1 84 1 357 1 143 1 9 2 166 1 199 1 
310 1 129 3 352 1 324 3 72 3 9 3 173 3 138 1 
125 1 129 1 324 1 236 1 72 1 9 1 173 1 
125 1 246 1 282 1 129 1 324 1 72 1 9 1 173 1 138 1 
169 1 282 1 243 1 324 4 19 1 72 3 92 1 173 3 300 1 123 1 299 1 0 1 149 1 125 1 264 1 301 1 98 1 129 3 48 2 288 1 134 1 289 1 347 1 156 1 199 1 349 1 55 1 350 1 352 1 58 1 137 1 59 1 163 1 138 2 102 1 271 1 310 1 84 1 357 1 143 1 9 4 166 1 360 1 168 1 
309 1 310 1 129 1 352 1 324 2 72 1 194 1 9 2 173 2 
282 1 55 1 243 1 350 1 137 1 324 3 72 3 163 1 173 3 138 1 125 1 310 2 75 1 129 3 66 1 288 1 9 3 134 1 289 1 
341 1 282 1 324 2 72 2 173 2 138 1 232 1 310 1 129 2 9 2 
349 1 352 1 324 1 58 1 19 1 300 1 0 1 264 1 84 1 98 1 357 1 9 1 143 1 166 1 199 1 
349 1 352 1 324 1 58 1 19 1 300 1 0 1 84 1 357 1 9 1 86 1 143 1 166 1 198 1 199 1 
116 1 321 2 341 2 169 1 120 1 215 1 93 1 92 4 328 1 149 2 301 1 155 1 48 2 331 1 196 2 347 1 156 1 59 1 232 2 103 1 271 1 336 1 338 1 358 1 
125 1 129 1 324 1 72 1 289 1 9 1 173 1 49 1 
99 1 343 1 
99 1 343 1 
104 1 263 1 
104 1 263 1 
104 1 263 1 
99 1 291 1 343 1 
99 1 147 1 343 1 
104 1 23 1 263 1 99 2 343 2 42 1 
99 1 291 1 343 1 
99 1 291 1 343 1 
43 1 99 1 343 1 
43 1 99 1 343 1 
43 1 99 1 343 1 
294 1 243 1 324 2 72 2 173 2 147 1 343 1 327 1 262 1 97 1 129 2 250 1 329 1 99 1 219 1 305 1 50 1 348 1 200 1 352 1 137 1 204 1 105 1 9 2 
190 1 243 2 322 2 91 1 18 1 137 2 292 1 343 2 42 1 262 1 105 2 97 2 329 2 250 3 34 1 99 2 66 1 275 1 219 2 
267 1 119 1 238 1 
312 1 119 1 238 1 
106 1 312 1 267 2 185 1 273 1 238 3 
312 1 267 1 185 1 273 1 354 1 238 2 
312 1 267 1 185 2 273 1 238 2 
116 1 90 1 283 2 120 1 243 5 215 1 284 1 296 1 325 2 40 1 327 1 26 1 50 1 197 3 31 2 222 4 269 1 200 1 255 2 137 5 162 3 353 1 60 1 186 1 33 1 65 1 206 1 336 1 66 2 359 1 37 1 258 1 
243 2 324 1 72 1 173 1 299 1 125 1 129 1 26 1 100 1 222 2 269 1 53 1 78 1 101 1 137 2 138 1 236 1 66 1 9 1 38 1 277 1 
116 1 90 2 283 2 243 3 120 1 215 1 284 1 296 1 325 1 40 1 26 1 197 3 31 2 222 2 200 1 137 3 255 2 162 4 80 1 186 1 65 1 206 1 336 1 66 3 37 1 258 1 
116 2 90 3 283 4 243 4 120 2 215 2 284 1 296 1 325 2 40 2 302 1 26 1 197 5 31 4 222 3 200 2 203 1 255 4 137 4 162 7 80 1 186 1 65 1 272 1 206 1 336 2 66 4 37 1 258 1 
45 1 
253 1 300 1 
182 1 
58 1 143 1 300 1 
300 1 28 1 
58 1 300 1 
248 1 58 1 142 2 143 1 300 3 244 1 
157 1 321 4 202 1 120 1 323 1 215 1 92 7 122 1 328 2 355 1 149 3 175 1 165 1 126 1 96 2 35 1 358 3 
157 1 321 4 202 1 120 1 323 1 215 1 92 7 122 1 328 2 355 1 149 3 175 1 165 1 126 1 96 2 35 1 358 3 
157 1 321 4 202 1 120 1 323 1 215 1 92 7 122 1 328 2 355 1 149 3 175 1 165 1 126 1 96 2 25 1 35 1 358 3 
116 2 261 1 70 1 321 14 169 1 323 1 120 3 215 3 122 1 92 26 40 2 328 4 149 12 175 4 126 1 286 1 96 3 217 1 301 1 48 2 332 3 334 3 157 2 202 2 59 1 355 2 165 1 271 1 335 1 336 2 35 2 358 8 239 1 
321 5 169 2 120 1 323 1 215 1 92 9 328 3 149 4 175 1 126 1 96 2 301 2 48 4 157 1 202 1 59 2 63 1 355 1 271 2 165 1 64 1 35 1 358 4 239 1 
69 1 280 1 89 2 119 1 170 1 19 1 298 1 326 1 249 1 267 1 221 1 5 1 199 1 252 1 307 1 349 1 225 2 226 1 106 1 312 1 315 1 237 1 357 1 166 1 36 1 238 2 68 1 112 1 87 1 278 1 
69 1 280 1 89 3 119 1 170 1 19 1 298 1 326 1 249 1 267 1 304 1 221 1 199 1 252 1 307 1 349 1 225 3 226 1 231 1 106 1 312 1 315 2 237 1 357 1 166 1 36 1 238 2 112 1 87 1 241 1 
69 1 89 2 119 1 19 1 298 1 326 1 249 1 267 1 199 1 307 1 349 1 225 2 226 1 231 1 106 1 312 1 315 2 237 1 357 1 36 1 166 1 238 2 112 1 87 1 241 1 
89 1 170 1 213 1 19 1 298 2 300 1 191 1 265 1 304 1 199 1 252 1 307 2 349 1 225 1 58 1 82 1 164 1 84 1 357 1 166 1 36 2 112 2 113 1 
307 1 69 1 280 1 225 1 89 1 349 1 119 1 170 1 19 1 298 1 106 1 312 1 267 1 237 1 357 1 221 1 238 2 36 1 166 1 68 1 87 1 112 1 278 1 252 1 241 1 199 1 
7 1 
115 1 283 1 39 1 243 3 324 1 19 1 296 1 173 1 300 1 191 1 124 1 125 1 288 1 289 1 134 1 194 1 330 1 197 1 199 2 269 2 349 2 56 1 229 1 57 1 137 3 58 1 353 1 163 1 61 1 186 1 164 1 65 1 141 1 84 2 357 1 9 1 359 1 339 1 166 2 37 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
269 1 243 3 39 1 56 1 324 1 137 3 57 1 229 1 353 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 9 1 330 1 194 1 339 1 333 1 
243 2 39 1 56 1 324 1 137 2 57 1 229 1 163 1 173 1 124 1 186 1 125 1 65 1 288 1 289 1 134 1 9 1 194 1 359 1 330 1 339 1 37 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 137 2 57 1 229 1 324 1 163 1 173 1 124 1 125 1 288 1 289 1 134 1 330 1 194 1 9 1 339 1 
243 2 39 1 56 1 324 1 137 2 57 1 229 1 163 1 173 1 124 1 186 1 125 1 65 1 288 1 289 1 134 1 9 1 194 1 359 1 330 1 339 1 37 1 
271 1 45 1 169 1 301 1 48 2 59 1 338 1 347 1 156 1 
13 1 116 1 341 11 321 8 169 2 120 2 214 1 215 1 172 1 92 14 21 1 40 2 328 1 149 6 175 1 286 1 301 2 48 4 135 1 196 11 347 1 332 3 334 3 156 2 54 1 352 1 59 2 232 4 271 2 235 1 336 2 358 2 360 1 
13 1 321 1 169 1 324 2 19 1 72 1 92 2 173 1 300 1 41 1 0 1 149 1 151 1 264 1 301 1 98 1 129 1 48 2 347 1 156 1 199 1 349 1 54 1 159 1 55 1 352 1 58 1 59 1 232 1 271 1 310 1 84 1 357 1 143 1 9 2 166 1 167 1 360 1 
321 10 323 1 324 3 92 20 40 2 0 2 328 4 149 10 96 1 46 2 98 2 48 6 196 7 156 3 199 3 157 1 54 1 55 1 8 1 58 2 59 3 165 1 336 2 9 3 166 3 168 2 13 1 116 2 341 7 169 3 71 1 120 3 215 3 72 1 19 2 173 1 300 2 176 2 175 4 126 1 264 2 301 3 129 1 347 3 223 1 349 3 352 2 139 2 232 7 355 1 271 3 233 2 310 1 84 1 357 2 143 2 358 8 360 1 241 1 
321 1 169 2 324 1 72 1 19 2 92 2 173 1 300 3 191 1 149 1 1 1 301 2 129 1 2 1 48 4 183 1 347 2 5 1 156 2 199 8 254 1 349 8 54 1 58 2 59 2 81 2 164 1 271 2 310 1 208 1 84 2 274 1 357 2 338 1 9 1 166 7 317 1 360 1 241 1 
13 1 116 1 341 1 321 1 169 1 282 1 120 1 324 1 72 1 215 1 92 3 173 1 40 1 328 1 149 2 301 1 129 1 48 2 196 1 347 1 156 1 59 1 138 1 232 1 271 1 336 1 358 1 9 1 211 1 
341 1 321 2 169 1 120 1 92 2 59 1 232 1 175 1 103 1 271 1 301 1 336 1 48 2 358 1 338 1 196 1 347 1 156 1 
116 1 341 1 169 1 215 1 92 2 59 1 93 1 232 1 328 1 149 2 271 1 301 1 48 2 358 1 338 1 196 1 347 1 156 1 
116 1 321 2 341 2 169 1 120 1 215 1 92 4 40 1 328 1 149 2 175 1 301 1 48 2 196 2 347 1 156 1 59 1 232 2 271 1 336 1 338 1 358 2 
341 1 321 2 169 1 120 1 92 2 59 1 232 1 175 1 103 1 271 1 301 1 336 1 2 1 48 2 358 1 196 1 347 1 156 1 
116 1 341 1 169 1 215 1 92 2 59 1 93 1 232 1 328 1 149 2 271 1 301 1 2 1 48 2 358 1 196 1 347 1 156 1 
116 1 321 2 341 2 169 1 120 1 215 1 92 4 40 1 328 1 149 2 175 1 301 1 2 1 48 2 196 2 347 1 156 1 59 1 232 2 271 1 336 1 358 2 
116 1 341 2 321 2 169 1 120 1 215 1 59 1 92 4 40 1 232 2 328 1 149 2 175 1 271 1 301 1 336 1 48 2 358 2 196 2 347 1 156 1 
321 1 169 1 324 1 19 1 92 2 300 1 0 1 149 1 264 1 301 1 98 1 48 2 347 1 156 1 199 1 54 1 349 1 352 1 58 1 59 1 271 1 84 1 357 1 143 1 9 1 166 1 168 1 360 1 
321 1 169 1 324 1 19 1 92 2 300 1 0 1 149 1 301 1 131 1 48 2 198 1 347 1 156 1 199 1 54 1 349 1 352 1 58 1 59 1 271 1 84 1 357 1 143 1 86 1 9 1 166 1 360 1 
13 1 116 1 321 2 341 2 169 1 120 1 215 1 92 4 40 1 328 1 149 2 175 1 301 1 48 2 196 2 347 1 156 1 59 1 232 2 271 1 336 1 358 2 
116 1 341 2 321 2 169 1 120 1 324 1 215 1 19 1 92 4 300 1 40 1 0 1 328 1 149 2 175 1 264 1 301 1 98 1 48 2 196 2 347 1 5 1 156 1 199 1 349 1 58 1 59 1 232 2 233 1 271 1 336 1 357 1 358 2 143 1 9 1 166 1 168 1 
13 1 116 1 321 2 341 1 169 1 282 1 120 1 324 1 215 1 72 1 92 3 173 1 40 1 149 1 175 1 301 1 129 1 48 2 196 1 347 1 156 1 228 1 59 1 138 1 232 1 271 1 336 1 358 1 9 1 
116 3 118 1 321 18 169 3 323 1 120 4 215 4 20 1 92 36 40 3 328 3 149 18 175 3 344 1 150 1 126 1 286 3 216 2 96 1 247 1 301 3 24 4 48 6 132 1 181 1 4 1 332 3 334 3 157 1 136 1 160 1 59 3 355 1 165 1 271 3 64 1 108 1 83 1 336 3 358 6 239 1 276 1 
116 2 118 1 321 18 169 4 323 1 120 4 215 3 20 1 92 33 40 3 328 3 149 15 175 2 344 1 150 1 126 1 286 3 216 2 96 1 247 1 301 4 24 4 48 8 132 1 181 1 4 1 332 3 334 3 157 1 136 1 160 1 59 4 355 1 165 1 271 4 64 1 108 1 83 1 336 3 358 5 239 2 276 1 
116 3 118 1 321 15 169 1 323 1 120 4 215 4 20 1 92 29 40 3 328 3 149 14 175 2 344 1 126 1 286 2 216 1 96 1 247 1 301 1 24 3 48 2 132 1 181 1 4 1 332 2 334 2 157 1 136 1 59 1 355 1 165 1 271 1 64 1 108 1 83 1 336 3 358 5 276 1 
116 2 118 1 321 7 169 2 120 2 215 2 92 14 73 1 40 2 328 2 149 7 175 2 150 1 286 1 216 1 301 2 24 2 48 4 181 1 332 1 334 1 136 2 59 2 271 2 64 1 108 1 336 2 358 4 276 1 
116 2 118 1 321 14 169 3 120 3 215 2 20 1 92 26 40 3 328 2 149 12 175 2 344 1 286 2 216 2 247 1 24 4 301 3 48 6 132 1 181 1 4 1 332 2 334 2 136 1 59 3 271 3 64 1 108 1 83 1 336 3 358 4 239 2 276 2 
105 1 97 1 345 1 329 1 91 1 18 1 99 1 219 1 343 1 42 1 
147 1 204 1 
105 1 97 1 329 1 99 1 337 1 219 1 343 1 285 1 268 1 
212 1 291 1 
43 1 23 1 14 1 
190 1 243 1 322 1 91 1 18 1 137 1 343 1 42 1 262 1 105 1 97 1 329 1 250 2 34 1 99 1 66 1 275 1 219 1 
190 1 243 1 322 1 91 1 18 1 137 1 343 1 42 1 262 1 105 1 97 1 329 1 250 2 34 1 99 1 66 1 275 1 219 1 
190 1 243 1 322 1 91 1 18 1 137 1 343 1 42 1 262 1 105 1 97 1 329 1 250 2 34 1 99 1 66 1 275 1 219 1 
212 1 23 1 291 1 
212 1 23 1 291 1 
43 1 14 1 
43 1 23 1 14 1 
348 1 294 1 
294 1 322 1 243 1 324 2 72 2 147 1 173 2 343 1 327 1 97 1 329 1 250 1 129 2 99 1 219 1 305 1 50 1 222 1 348 1 200 1 352 1 137 1 204 1 105 1 34 1 9 2 114 1 
13 1 117 1 321 1 169 1 324 2 19 1 92 2 173 2 300 1 149 1 74 1 1 1 301 1 130 1 48 2 347 1 156 1 199 2 349 2 54 1 308 1 58 1 59 1 81 2 271 1 140 1 208 1 357 1 9 2 166 2 360 1 
77 1 69 1 15 1 349 2 17 1 119 1 19 1 298 1 106 1 312 1 267 1 237 1 357 1 221 1 238 2 166 2 5 1 241 1 199 2 
69 1 349 1 17 1 119 1 19 1 298 1 178 1 106 1 312 1 267 1 237 1 357 1 221 1 238 2 166 1 241 1 199 1 
15 1 349 1 58 1 213 1 19 1 298 1 300 1 191 1 164 1 84 1 357 1 166 1 340 1 199 1 
77 1 69 1 15 1 349 1 17 1 119 1 19 1 298 1 106 1 312 1 267 1 237 1 357 1 221 1 238 2 166 1 241 1 199 1 
88 1 
45 1 
90 1 283 1 145 1 243 1 127 1 152 1 26 1 197 1 269 1 137 1 162 1 353 1 186 1 65 1 66 2 359 1 37 1 
116 1 283 3 90 3 120 1 243 2 121 1 215 1 19 1 296 1 297 1 40 1 300 4 176 1 248 1 218 1 288 1 346 1 197 4 31 3 199 1 269 2 253 2 158 1 349 1 227 1 255 3 137 2 58 1 162 6 353 1 161 1 186 2 65 2 336 1 84 1 66 3 142 1 357 2 359 2 143 1 240 1 166 1 37 2 
116 2 90 3 283 4 243 1 120 2 215 2 20 1 297 1 40 2 344 1 286 1 247 1 26 1 132 1 4 1 197 7 332 1 31 5 334 1 269 1 52 1 137 1 255 5 353 1 162 6 186 1 65 1 336 2 66 4 359 1 37 1 
283 2 243 1 120 2 324 1 215 1 72 1 297 2 173 1 299 1 125 1 128 1 129 1 100 1 197 2 157 1 224 1 351 1 137 1 138 1 355 1 186 1 165 1 65 1 236 1 9 1 359 1 37 1 277 1 
283 1 186 1 95 1 65 1 26 1 66 1 359 1 306 1 37 1 197 1 
116 2 283 5 90 5 351 1 120 2 255 5 162 10 215 2 297 2 40 2 176 1 336 2 66 5 197 5 31 5 
269 1 243 1 324 1 137 1 72 1 353 1 173 1 138 1 299 1 125 1 129 1 236 1 26 1 66 1 9 1 100 1 277 1 
115 1 283 1 243 2 19 2 296 1 300 2 191 1 179 1 133 1 197 1 199 2 269 2 349 2 58 2 137 2 353 1 80 1 61 1 186 2 164 1 187 1 65 2 141 1 109 1 84 2 110 1 357 3 143 1 359 1 166 2 37 2 
169 1 324 3 72 2 19 1 92 1 173 2 299 1 300 1 0 1 149 1 264 1 301 1 129 2 98 1 48 2 347 1 156 1 199 1 349 1 352 1 58 1 59 1 138 2 102 1 271 1 84 1 357 1 9 3 143 1 166 1 360 1 168 1 
90 2 283 2 255 2 162 4 296 1 186 1 65 1 96 1 141 1 26 2 66 4 359 1 37 1 197 1 31 2 
97 1 219 1 51 1 
294 1 97 1 91 1 314 1 219 1 
97 1 219 1 51 1 
97 1 219 1 51 1 
97 1 219 1 180 1 
97 1 219 1 180 1 
97 1 219 1 180 1 
97 1 219 1 
99 1 343 1 
321 4 169 1 120 1 323 1 215 1 92 8 328 2 149 4 344 1 126 1 286 1 96 1 301 1 48 2 332 1 334 1 157 1 59 1 355 1 271 1 165 1 64 1 358 2 
321 4 169 2 120 1 323 1 215 1 92 8 328 2 149 4 344 1 126 1 286 1 96 1 301 2 193 1 48 4 332 1 334 1 157 1 59 2 355 1 165 1 271 2 64 1 358 2 
116 2 321 9 169 3 323 1 120 3 215 3 92 19 20 1 40 2 328 3 149 10 175 1 344 1 126 1 286 1 96 1 247 1 301 3 193 1 48 6 132 1 4 1 332 1 334 1 157 1 59 3 355 1 165 1 271 3 64 1 336 2 358 4 239 1 
116 1 321 10 169 3 323 1 120 3 215 2 92 17 20 1 40 2 328 3 149 7 175 2 344 1 126 1 286 1 96 1 247 1 301 3 193 1 48 6 132 1 332 1 4 1 334 1 157 1 59 3 355 1 165 1 271 3 64 1 336 2 358 5 239 1 
321 4 169 1 120 1 323 1 215 1 92 8 328 2 149 4 344 1 126 1 286 1 96 1 301 1 48 2 332 1 334 1 157 1 59 1 355 1 271 1 165 1 64 1 358 2 
116 2 321 6 169 1 120 2 215 2 92 12 20 1 40 2 328 1 149 6 175 1 344 1 286 1 247 1 301 1 48 2 132 1 332 1 4 1 334 1 59 1 271 1 64 1 336 2 358 2 
116 1 321 10 169 4 323 1 120 3 215 2 20 1 92 18 40 2 328 3 149 8 175 2 344 1 126 1 286 1 96 1 247 1 301 4 193 1 48 8 132 1 4 1 332 1 334 1 157 1 59 4 355 1 165 1 271 4 64 1 336 2 358 5 239 2 
116 2 321 9 169 4 120 3 215 2 20 1 92 16 40 3 328 3 149 7 175 3 344 1 150 1 286 1 247 1 301 4 48 8 132 1 4 1 332 1 334 1 59 4 271 4 64 1 336 3 358 6 239 2 
157 3 321 3 323 2 120 1 215 1 92 7 355 3 328 3 149 4 175 3 126 1 165 1 358 6 
116 1 321 10 169 4 323 1 120 3 215 2 20 1 92 18 40 2 328 3 149 8 175 1 344 1 126 1 150 1 286 1 96 1 247 1 301 4 48 8 132 1 4 1 332 1 334 1 157 1 59 4 355 1 165 1 271 4 64 1 336 2 358 4 239 2 
157 1 321 4 169 2 120 1 323 1 215 1 92 8 59 2 328 2 355 1 149 4 175 1 165 1 271 2 126 1 96 1 301 2 48 4 358 3 239 1 
45 1 
116 1 321 2 169 1 120 1 215 1 59 1 92 4 40 1 328 1 149 2 175 1 271 1 301 1 336 1 193 1 48 2 358 2 
286 1 321 1 92 2 332 1 149 1 334 1 
116 2 321 11 169 2 323 1 120 3 214 1 215 3 92 23 40 2 21 1 328 5 149 12 175 4 126 1 96 1 301 2 48 4 135 1 195 1 332 2 334 2 157 2 59 2 355 2 165 1 271 2 336 2 358 9 239 2 
92 1 149 1 334 1 
321 1 92 1 332 1 
116 1 321 3 169 1 120 1 215 1 59 1 92 6 40 1 328 2 149 3 176 1 175 1 271 1 301 1 336 1 193 1 48 2 358 3 
116 2 321 6 169 1 120 2 215 2 92 12 20 1 40 2 328 1 149 6 175 1 344 1 286 1 247 1 301 1 48 2 132 1 332 1 4 1 334 1 59 1 271 1 64 1 336 2 358 2 
157 1 321 3 120 1 215 1 92 6 355 1 328 1 149 3 175 1 165 1 358 2 
157 1 321 1 169 1 323 1 92 3 59 1 328 1 355 1 149 2 175 1 271 1 126 1 301 1 48 2 358 2 195 1 239 1 
224 1 157 2 321 5 169 1 120 2 215 2 59 1 92 10 355 2 328 3 149 5 175 2 271 1 165 1 64 1 301 1 48 2 358 5 
321 2 169 1 120 1 59 1 92 2 175 1 271 1 64 1 301 1 336 1 48 2 358 1 
116 1 321 2 169 1 120 1 215 1 59 1 92 4 40 1 328 1 149 2 175 1 271 1 64 1 301 1 336 1 48 2 358 2 
157 1 321 1 169 3 92 3 59 3 355 1 328 1 149 2 175 1 150 1 271 3 64 1 301 3 48 6 358 2 195 1 239 1 
116 2 321 14 261 1 169 5 323 1 120 4 215 4 92 29 40 2 328 6 149 15 175 4 126 1 150 1 286 1 96 1 217 1 301 5 193 1 48 10 195 1 332 3 334 3 157 3 59 5 355 3 165 2 271 5 335 1 64 1 336 2 358 10 239 2 
309 1 352 1 324 1 27 1 9 1 173 1 194 1 
352 1 324 1 173 1 256 1 309 1 207 1 303 1 27 1 194 1 9 1 316 1 30 1 
45 1 349 1 84 1 166 1 199 1 
349 1 352 1 58 1 324 2 72 1 19 1 173 1 300 1 0 1 310 1 129 1 84 1 98 1 357 1 143 1 9 2 166 1 199 1 
319 1 324 1 19 1 72 1 173 1 300 3 0 1 125 2 98 1 129 1 134 1 289 1 28 1 199 1 349 1 352 1 58 2 310 1 357 1 209 1 9 1 143 2 166 1 318 1 
319 1 324 1 19 1 72 1 173 1 300 3 0 1 125 2 129 1 134 1 289 1 28 1 198 1 199 1 349 1 352 1 58 2 310 1 357 1 209 1 9 1 143 2 166 1 318 1 
319 1 243 2 324 1 72 1 19 1 173 1 299 1 300 4 174 1 125 1 266 1 129 1 26 1 288 1 100 1 28 1 199 1 269 1 253 1 349 1 137 2 58 1 138 1 236 1 66 1 142 1 357 1 9 1 143 1 166 1 277 1 318 1 
319 1 243 2 324 1 72 1 19 1 173 1 299 1 300 4 125 1 129 1 26 1 288 1 100 1 28 1 199 1 269 1 253 1 349 1 137 2 58 1 138 1 236 1 66 1 142 1 357 1 9 1 143 1 240 1 166 1 277 1 318 1 
349 1 19 1 357 1 166 1 183 1 199 1 
254 1 349 7 58 2 19 2 300 3 81 1 44 1 248 1 208 1 84 2 274 1 110 1 357 3 133 1 143 1 166 6 183 1 317 1 5 1 241 1 199 7 
13 1 341 1 321 3 169 2 120 1 323 1 324 2 215 1 19 1 72 1 92 6 173 1 300 1 0 1 328 2 149 3 74 1 126 1 96 1 264 1 301 2 129 1 98 1 48 4 196 1 347 2 156 2 5 1 199 1 157 1 349 1 352 2 58 1 59 2 139 1 232 1 355 1 165 1 271 2 233 1 310 1 357 1 358 2 143 1 9 2 166 1 168 1 
283 5 243 3 324 1 95 1 288 1 100 1 197 4 199 1 253 1 157 1 161 1 165 1 65 2 109 1 66 2 9 1 166 1 120 2 215 2 72 1 297 2 173 1 300 2 299 1 125 1 129 1 218 1 26 2 306 1 222 1 269 2 224 1 349 1 227 1 351 1 137 3 353 1 138 1 355 1 186 2 84 1 236 1 142 1 359 2 240 1 37 2 277 1 
349 2 58 1 19 1 300 2 248 1 142 1 346 1 357 2 143 1 166 2 183 1 5 1 199 2 
144 1 349 4 58 1 19 1 300 1 191 1 164 1 84 1 357 1 189 1 166 4 5 1 199 4 
319 1 349 2 58 1 19 1 300 1 187 1 179 1 110 1 357 2 133 1 143 1 166 2 223 1 199 2 
69 1 349 1 312 1 119 1 84 1 19 1 357 1 238 1 166 1 199 1 
117 1 349 2 208 1 58 1 19 1 357 1 300 1 166 2 5 1 241 1 199 2 
144 1 319 1 254 1 349 5 58 2 19 2 300 3 191 1 164 1 84 1 208 1 274 1 357 2 166 4 5 1 199 5 
144 1 319 1 349 5 58 2 19 2 300 3 191 1 164 1 84 1 208 1 274 1 357 2 111 1 166 4 5 1 199 5 
349 1 352 1 58 1 324 2 72 1 19 1 173 1 300 1 0 1 310 1 129 1 84 1 357 1 143 1 9 2 166 1 198 1 199 1 
319 1 349 1 58 1 19 1 300 1 44 1 248 1 110 1 357 2 133 1 143 1 166 1 199 1 
184 1 107 1 352 1 356 1 251 1 
184 2 32 1 243 2 350 1 352 1 137 2 163 1 148 1 125 1 107 1 234 1 356 2 66 1 26 1 288 1 289 1 134 1 251 2 222 1 
140 1 184 1 107 1 308 1 130 1 324 1 356 1 9 1 173 1 
234 1 107 1 148 1 
45 1 
89 1 225 1 226 1 249 1 170 1 326 1 252 1 
89 1 36 1 112 1 
225 3 89 3 226 1 295 1 170 1 146 2 326 1 62 1 249 1 293 1 68 1 252 1 
89 2 225 2 226 1 249 1 170 1 315 1 326 1 6 1 252 1 
242 1 89 1 225 1 267 1 119 1 170 1 326 1 94 1 238 1 68 1 252 1 
89 1 225 1 249 1 170 1 326 1 68 1 252 1 
89 1 225 1 226 1 249 2 170 1 68 1 252 1 
89 2 225 2 47 1 249 1 170 2 171 1 326 1 192 1 68 1 252 2 
89 3 225 3 226 1 249 1 153 1 170 1 315 2 3 1 326 2 94 1 68 1 12 1 252 1 
225 2 89 2 226 1 119 1 170 1 326 1 106 1 312 1 249 1 267 1 315 1 85 1 238 2 68 1 252 1 
89 4 225 4 226 1 249 1 170 2 315 2 230 1 326 2 94 1 68 1 12 1 6 1 252 2 
89 1 225 1 226 1 249 1 170 1 326 1 68 1 252 1 
225 4 89 4 226 2 79 1 146 1 170 1 94 1 326 3 62 1 249 2 293 1 315 2 252 1 12 1 
225 2 89 2 201 1 226 1 170 1 326 1 188 1 249 1 313 1 315 1 68 1 252 1 
225 3 89 3 226 1 170 1 146 2 326 1 62 1 249 1 293 2 68 1 11 1 252 1 
22 1 281 2 154 1 326 2 
16 1 89 1 225 1 170 1 68 1 252 1 
89 2 225 2 226 1 249 1 170 1 315 1 3 1 326 1 68 1 252 1 
245 1 
89 1 225 1 226 1 249 1 170 1 326 1 68 1 252 1 
225 3 89 3 226 1 170 1 146 1 326 1 249 1 315 1 3 1 68 1 252 1 
79 1 326 1 94 1 12 1 
249 1 326 1 

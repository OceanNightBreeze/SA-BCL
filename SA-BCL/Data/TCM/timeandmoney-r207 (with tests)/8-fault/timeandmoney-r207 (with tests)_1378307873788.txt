#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (129,172) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 367 236 191 190 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 369 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 369 104 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
15 2 116 1 105 2 145 1 225 3 302 3 65 1 77 1 175 1 320 1 177 2 247 1 166 1 
15 5 105 2 188 1 304 1 302 9 27 2 136 1 65 1 247 1 268 2 166 4 337 1 202 1 116 2 145 1 225 9 88 2 344 1 38 1 171 1 77 1 175 3 320 6 177 2 156 1 377 1 279 1 299 2 
15 5 105 2 188 1 304 1 302 9 27 2 136 1 65 1 247 1 268 2 166 4 337 1 202 1 116 2 145 1 225 9 88 2 344 1 38 1 171 1 77 1 175 3 320 6 177 2 156 1 377 1 279 1 299 2 
15 6 105 2 188 1 304 1 302 10 27 2 136 1 65 1 247 1 268 2 166 5 337 1 202 1 116 2 145 1 225 10 88 2 344 1 38 1 171 1 77 1 175 4 320 7 177 2 156 1 377 1 279 1 299 2 
15 4 105 2 188 1 304 1 302 7 27 2 136 1 65 1 247 1 268 2 166 3 337 1 202 1 116 2 145 1 225 7 88 1 344 1 38 1 171 1 77 1 175 2 320 4 177 2 156 1 377 1 299 2 
337 1 15 3 105 1 145 1 225 4 188 1 302 4 88 2 27 1 175 1 77 1 320 3 177 1 247 1 268 1 166 2 279 1 299 1 
15 1 116 1 105 1 145 1 225 2 302 2 344 1 27 1 136 1 218 1 265 1 173 1 77 1 177 1 247 1 299 1 
15 5 105 2 188 1 302 9 27 1 65 1 31 1 247 1 268 1 166 4 337 1 116 1 145 1 225 9 88 2 150 1 175 3 320 7 77 1 177 2 156 1 377 1 299 1 279 1 
15 5 105 2 188 1 302 9 27 1 65 1 31 1 247 1 268 1 166 4 337 1 116 1 145 1 225 9 88 2 150 1 175 3 320 7 77 1 177 2 156 1 377 1 299 1 279 1 
300 1 33 1 63 1 329 1 330 1 281 1 355 1 370 1 343 1 75 1 287 1 208 1 267 1 222 1 
32 1 
300 1 63 1 329 2 330 1 281 1 355 1 25 1 287 2 267 1 32 1 222 1 33 1 370 1 343 1 75 1 376 1 208 1 209 1 298 1 
300 1 128 2 126 1 63 1 330 1 329 5 281 1 282 1 355 1 24 4 305 2 306 2 25 1 134 1 310 1 243 1 287 5 288 1 267 1 32 2 222 1 248 1 33 2 370 1 228 5 343 1 372 1 37 1 92 2 75 1 57 1 149 1 208 1 376 2 347 1 76 2 181 2 298 2 
376 1 121 1 32 1 
139 1 170 2 32 1 
63 2 208 2 281 2 370 2 267 2 343 1 75 2 224 1 
62 1 103 1 63 2 281 2 161 1 356 1 82 2 106 1 111 1 29 1 360 1 191 1 245 1 192 1 267 3 362 1 224 1 69 2 367 2 6 1 292 1 253 1 370 3 343 1 35 2 75 2 231 1 271 1 208 2 257 1 319 1 349 1 178 1 124 1 236 2 79 1 237 1 
300 1 63 1 208 1 281 1 355 1 370 1 267 1 343 1 222 1 75 1 
300 1 63 1 17 1 329 1 338 1 64 1 370 1 376 1 287 1 232 1 221 1 321 1 267 1 32 1 
300 1 63 1 17 1 329 2 281 1 64 1 370 1 75 1 376 1 208 1 287 2 232 1 221 1 267 1 32 1 
33 1 287 1 329 1 122 1 298 1 
300 1 63 1 329 2 330 1 281 1 355 1 25 1 287 2 267 1 32 1 222 1 33 1 370 1 343 1 75 1 55 1 376 1 208 1 298 1 
287 1 329 1 298 1 
16 1 63 2 281 1 370 2 75 1 208 1 267 2 277 1 224 2 
129 1 12 1 183 1 
159 1 367 1 103 1 370 1 35 1 257 1 191 1 245 1 319 1 192 1 267 1 178 1 236 1 79 1 224 1 237 1 
103 1 367 1 63 1 281 1 107 1 370 2 35 1 163 1 208 1 257 1 191 1 245 1 319 1 192 1 267 2 178 1 236 1 79 1 183 1 237 1 
121 1 224 1 
63 3 208 3 281 3 107 1 370 3 267 3 75 1 224 1 
300 1 63 1 208 1 281 1 370 1 267 1 222 1 
300 1 16 1 63 1 208 1 281 1 370 1 267 1 277 1 75 1 
62 1 300 1 103 1 16 1 63 3 17 1 329 1 21 1 281 3 161 1 64 1 356 1 82 1 107 1 163 1 111 1 287 1 360 1 245 1 191 1 192 1 112 1 221 1 267 4 362 1 224 1 69 2 367 1 6 1 253 1 370 4 343 1 35 1 75 2 271 1 208 3 257 1 232 1 319 1 178 1 124 1 236 1 79 1 237 1 
63 2 208 1 281 1 338 1 72 1 107 1 370 2 267 2 224 1 
300 1 16 1 17 1 63 3 329 1 281 3 21 1 64 1 107 2 370 3 163 1 162 1 75 1 287 1 208 3 232 1 221 1 267 3 32 1 
16 1 63 2 129 1 281 2 107 1 370 2 75 1 208 2 267 2 183 1 
367 1 103 1 370 1 35 1 257 1 191 1 245 1 192 1 319 1 267 1 178 1 236 1 79 1 224 1 237 1 
367 1 103 1 370 1 35 1 257 1 191 1 192 1 319 1 267 1 236 1 325 1 79 1 224 1 336 1 237 1 
128 1 62 1 0 1 129 2 161 1 305 1 356 1 215 1 82 4 109 1 111 1 263 1 360 1 362 1 69 2 253 2 293 1 375 1 151 1 12 2 172 1 349 2 80 1 183 2 
300 1 63 1 208 1 281 1 221 1 274 1 370 1 267 1 
16 1 63 5 281 4 338 1 72 1 73 1 107 2 370 5 163 1 75 1 208 4 267 5 194 1 224 1 
300 1 63 2 208 2 281 2 274 1 370 2 267 2 222 1 
83 1 187 1 315 1 
187 2 244 1 120 1 315 2 361 1 242 1 
187 1 315 1 
187 1 315 1 
361 1 242 1 
361 1 242 1 
361 1 242 1 
167 1 187 1 315 1 
167 1 187 1 315 1 
167 1 187 1 315 1 
201 1 187 1 315 1 
201 1 187 1 315 1 
201 1 187 1 315 1 
300 1 63 1 19 1 187 2 20 1 329 2 330 1 281 1 238 1 355 1 219 2 287 2 267 1 222 1 5 1 290 2 70 1 144 1 315 2 34 1 370 1 229 2 36 2 343 1 346 2 75 1 208 1 60 1 350 1 
301 1 187 1 63 2 329 1 281 2 332 1 219 1 138 1 287 1 83 1 267 2 335 1 224 1 290 1 142 1 315 1 229 1 370 2 36 1 346 1 208 2 296 1 350 1 81 1 
348 2 173 1 235 1 268 1 27 2 
268 1 27 1 299 1 
173 1 27 1 299 1 
348 1 303 1 173 1 235 1 268 2 27 3 
102 1 348 1 173 1 235 1 268 1 27 2 
128 1 0 1 353 1 329 5 130 1 305 1 24 3 189 2 306 1 25 1 332 1 357 2 287 5 139 1 32 2 33 4 170 3 339 2 227 1 228 2 92 1 151 1 376 1 347 1 152 1 318 1 76 1 296 1 322 1 297 1 298 1 81 1 
352 1 128 3 0 3 353 3 329 9 130 2 305 3 24 8 189 6 25 1 306 2 310 1 332 4 333 1 287 9 139 3 84 1 32 5 33 7 291 1 250 5 170 9 339 6 252 1 228 6 92 2 151 3 376 1 152 1 347 1 76 2 122 5 322 2 155 1 298 6 
300 1 128 1 0 1 353 1 63 1 330 1 329 3 281 1 355 1 130 1 305 1 24 3 306 1 189 2 310 1 332 1 357 1 287 3 139 2 267 1 32 3 222 1 33 2 339 2 170 4 227 1 370 1 228 2 343 1 92 1 75 1 208 1 376 1 151 1 318 1 76 1 322 1 
128 2 0 1 329 4 330 1 281 1 130 1 189 3 332 2 333 1 287 4 139 2 291 1 339 3 343 1 92 1 151 2 208 1 300 1 352 1 353 2 63 1 355 1 24 3 305 1 306 1 310 1 357 2 267 1 32 3 222 1 33 3 170 5 227 1 370 1 228 4 75 1 376 1 318 1 76 1 322 1 
285 1 
286 1 319 1 121 1 
280 1 319 1 
319 1 237 1 
286 2 319 3 317 1 79 1 309 1 237 1 
319 1 79 1 237 1 
319 1 68 1 
128 1 305 1 215 3 82 7 253 3 48 1 205 1 316 1 255 1 372 1 37 1 148 2 375 2 256 1 243 1 272 1 349 4 61 1 
62 1 128 4 353 3 0 3 356 1 215 10 305 4 82 31 48 5 241 1 243 2 360 1 246 1 362 1 289 1 365 1 69 2 205 1 253 15 52 4 371 1 316 2 255 1 372 1 37 2 148 3 375 5 151 3 272 2 233 3 42 1 349 16 180 1 61 1 
128 1 62 2 305 1 356 2 215 4 82 9 48 1 108 1 241 1 243 1 360 2 362 2 69 4 253 4 205 1 316 1 255 1 37 1 372 1 148 2 375 3 272 1 349 5 324 1 
128 1 305 1 215 3 82 7 253 3 48 1 205 1 316 1 255 1 372 1 37 1 148 2 375 2 243 1 272 1 349 4 61 1 
128 1 305 1 215 3 82 7 253 3 48 1 205 1 316 1 255 1 372 1 37 1 148 2 375 2 243 1 272 1 349 4 61 1 
103 1 18 1 105 1 46 1 302 1 262 1 2 1 191 1 192 1 3 2 312 1 165 2 196 1 367 1 116 2 225 1 35 1 119 1 319 1 177 1 236 1 125 2 237 1 
103 1 105 1 302 1 303 1 23 1 135 1 27 2 264 1 220 1 192 1 3 1 268 1 165 1 367 1 116 1 314 1 225 1 251 1 35 1 11 1 173 1 77 1 177 1 236 1 125 1 299 1 
15 1 103 1 105 1 302 2 303 1 23 1 240 1 27 2 264 1 220 1 192 1 3 1 247 1 268 1 165 1 367 1 116 1 314 1 145 1 225 2 251 1 35 1 11 1 173 1 320 1 77 1 177 1 236 1 125 1 299 1 
15 1 103 1 18 1 105 1 303 1 302 3 135 1 27 2 264 1 220 1 192 1 3 1 247 1 268 1 165 1 367 1 116 1 314 1 145 1 225 3 251 1 35 1 11 1 173 1 320 2 177 1 99 1 236 1 125 1 299 1 
15 1 103 1 302 2 303 1 135 1 27 2 264 1 220 1 192 1 3 1 247 1 165 1 268 1 116 1 367 1 145 1 225 2 251 1 35 1 173 1 320 2 99 1 236 1 125 1 299 1 
169 1 
103 3 329 2 130 1 24 1 306 1 25 1 190 1 287 2 191 2 192 2 66 1 67 1 196 1 364 1 269 1 367 2 228 1 35 2 92 1 54 1 119 1 347 1 319 2 76 1 236 2 79 1 298 2 378 1 237 2 
300 1 63 1 17 1 329 3 64 1 25 1 132 1 164 1 30 1 287 3 221 1 267 1 338 1 89 1 370 1 93 2 209 1 232 1 321 1 182 1 298 2 278 1 
300 1 63 1 17 1 329 3 64 1 132 1 25 1 164 1 30 1 287 3 221 1 267 1 32 1 313 1 338 1 89 1 370 1 93 3 376 1 209 1 232 1 321 1 298 1 182 1 
300 1 63 1 17 1 329 3 64 1 25 1 132 1 164 1 30 1 287 3 221 1 267 1 313 1 338 1 89 1 370 1 93 3 209 1 232 1 321 1 182 1 276 1 298 2 278 1 
185 1 184 2 330 1 329 5 281 1 132 1 287 5 139 2 193 1 203 1 89 1 338 1 343 1 345 1 92 1 93 4 208 1 209 1 347 1 98 2 298 7 300 2 17 1 63 2 214 1 355 1 64 1 24 1 25 3 306 1 216 1 164 1 30 1 221 1 267 2 32 1 222 1 313 2 168 2 370 2 228 1 75 1 376 1 232 1 76 1 321 1 276 4 182 1 278 4 326 1 44 2 
185 1 184 2 330 1 329 4 281 1 132 1 287 4 139 2 193 1 338 1 89 1 343 1 92 1 93 4 208 1 347 1 98 2 298 4 300 2 17 1 63 2 355 1 64 1 24 1 306 1 25 2 164 1 30 1 221 1 267 2 32 1 222 1 313 2 168 2 170 2 370 2 228 1 230 1 75 1 376 1 232 1 76 1 321 1 182 1 276 2 44 2 278 2 
184 2 185 1 300 1 63 1 17 1 329 4 214 1 64 1 24 1 25 2 306 1 132 1 164 1 30 1 287 4 139 2 193 1 221 1 267 1 32 1 313 2 168 2 203 1 338 1 89 1 228 1 370 1 345 1 92 1 93 4 376 1 347 1 98 2 232 1 76 1 321 1 276 2 298 4 182 1 278 2 44 2 
185 1 184 2 330 1 329 4 281 1 132 1 287 4 139 2 193 1 203 1 89 1 338 1 343 1 345 1 92 1 93 4 208 1 347 1 98 2 298 4 300 2 17 1 63 2 214 1 355 1 64 1 24 1 306 1 25 2 164 1 30 1 221 1 267 2 32 1 222 1 313 2 168 2 370 2 228 1 75 1 376 1 232 1 76 1 321 1 182 1 276 2 44 2 278 2 
185 1 184 2 329 4 330 1 281 1 132 1 287 4 89 1 338 1 254 2 343 1 345 1 92 1 93 2 208 1 347 1 212 1 298 2 300 2 17 1 63 2 64 1 355 1 24 1 306 1 25 2 164 1 30 1 221 1 267 2 32 1 222 1 115 1 71 2 170 2 370 2 228 1 75 1 376 1 232 1 76 1 321 1 123 1 182 1 44 2 
185 1 184 2 330 1 329 4 281 1 132 1 287 4 139 2 193 1 203 1 89 1 338 1 343 1 345 1 92 1 93 5 208 1 347 1 98 2 298 5 300 2 17 1 63 2 214 1 355 1 64 1 24 1 306 1 25 2 164 1 30 1 221 1 267 2 32 1 222 1 313 3 168 2 370 2 228 1 75 1 376 1 232 1 76 1 321 1 276 3 182 1 278 3 326 1 44 2 
185 1 184 2 330 1 329 4 281 1 132 1 287 4 139 2 193 1 203 1 89 1 338 1 343 1 345 1 92 1 93 5 208 1 347 1 98 2 298 5 300 2 17 1 63 2 214 1 355 1 64 1 24 1 306 1 25 2 164 1 30 1 221 1 267 2 32 1 222 1 313 3 168 2 370 2 228 1 75 1 376 1 232 1 76 1 321 1 276 3 182 1 278 3 326 1 44 2 
184 1 185 1 300 1 63 1 17 1 329 3 64 1 24 1 25 1 132 1 306 1 164 1 30 1 287 3 221 1 267 1 115 1 71 1 89 1 338 1 170 1 228 1 370 1 254 1 230 1 92 1 93 2 347 1 232 1 76 1 321 1 298 1 182 1 44 1 
62 2 103 2 63 1 281 1 161 2 356 2 240 1 107 1 82 2 133 1 135 1 111 2 263 1 29 2 191 2 360 2 192 2 267 1 362 2 196 1 4 1 69 4 367 8 292 1 370 1 90 1 253 1 74 1 35 8 374 1 119 1 208 1 271 1 97 1 319 3 349 1 275 1 236 7 237 2 
62 1 128 1 353 1 0 1 16 1 63 1 129 1 281 1 161 1 215 1 356 1 305 1 82 3 111 1 360 1 267 1 362 1 113 1 69 2 370 1 253 2 75 1 375 1 208 1 151 1 12 1 211 1 349 1 183 1 
128 1 62 1 69 2 129 1 161 1 305 1 215 2 356 1 82 6 253 3 205 1 255 1 372 1 111 1 37 1 148 1 375 2 263 1 243 1 360 1 12 1 121 1 349 3 362 1 183 1 224 2 
62 1 128 2 353 2 0 1 129 3 161 1 215 2 356 1 305 1 82 10 48 1 111 1 28 1 360 1 362 1 289 1 69 2 86 1 51 1 253 4 52 2 375 1 151 2 233 2 12 8 211 1 349 6 100 1 183 8 
62 1 69 2 63 1 129 1 281 1 161 1 292 1 356 1 82 1 107 1 370 1 163 1 111 1 39 1 208 1 360 1 211 1 349 1 267 1 362 1 198 1 
128 3 0 2 281 1 129 7 82 20 48 4 135 1 243 1 191 1 245 2 192 2 197 2 6 2 292 1 205 1 253 10 10 1 255 1 148 1 208 1 151 2 257 2 58 1 210 2 12 7 211 1 349 10 351 1 158 2 62 3 353 2 103 2 63 1 161 3 305 3 356 3 215 8 107 1 163 1 111 3 360 3 267 3 362 3 224 2 69 6 367 3 370 3 35 3 372 1 37 1 375 4 271 1 319 2 78 2 178 2 236 3 79 2 183 7 237 2 
62 1 128 1 69 2 129 1 161 1 215 1 356 1 82 2 48 1 293 1 111 1 263 1 151 1 360 1 12 1 349 2 362 1 183 1 
62 1 69 2 0 1 129 1 161 1 215 1 356 1 305 1 82 2 253 2 109 1 111 1 375 1 263 1 360 1 12 1 362 1 183 1 
128 1 62 1 353 1 0 1 129 2 161 1 356 1 215 2 305 1 82 4 48 1 111 1 263 1 360 1 362 1 69 2 253 2 375 1 151 1 12 2 349 2 183 2 
62 1 128 1 69 2 129 1 161 1 215 1 356 1 82 2 48 1 293 1 111 1 151 1 97 1 360 1 12 1 349 2 362 1 183 1 
62 1 69 2 0 1 129 1 161 1 215 1 356 1 305 1 82 2 253 2 109 1 111 1 375 1 97 1 360 1 12 1 362 1 183 1 
128 1 62 1 353 1 0 1 129 2 161 1 356 1 215 2 305 1 82 4 48 1 111 1 360 1 362 1 69 2 253 2 375 1 151 1 97 1 12 2 349 2 183 2 
62 1 128 1 0 1 69 2 353 1 129 2 161 1 305 1 215 2 356 1 82 4 253 2 48 1 111 1 375 1 151 1 360 1 12 2 349 2 362 1 183 2 
62 1 103 1 161 1 356 1 82 2 111 1 245 1 191 1 360 1 192 1 267 1 362 1 224 1 69 2 367 1 6 1 292 1 370 1 253 1 35 1 271 1 257 1 319 1 349 1 178 1 236 1 79 1 237 1 
62 1 103 1 161 1 356 1 82 2 111 1 191 1 360 1 192 1 267 1 362 1 224 1 336 1 69 2 367 1 292 1 370 1 253 1 35 1 271 1 257 1 294 1 319 1 349 1 236 1 79 1 325 1 237 1 
128 1 62 1 353 1 0 1 129 2 161 1 356 1 215 2 305 1 82 4 48 1 111 1 360 1 362 1 69 2 253 2 375 1 151 1 12 2 211 1 349 2 183 2 
128 1 62 1 0 1 353 1 103 1 129 2 161 1 305 1 215 2 356 1 82 4 240 1 48 1 111 1 245 1 360 1 192 1 267 1 362 1 69 2 367 1 6 1 253 2 370 1 35 1 375 1 151 1 257 1 319 1 12 2 210 1 349 2 178 1 236 1 79 1 183 2 237 1 
62 1 128 1 0 1 353 1 16 1 63 1 281 1 129 1 161 1 305 1 215 1 356 1 82 3 48 1 111 1 359 1 360 1 267 1 362 1 69 2 253 1 370 1 75 1 208 1 151 1 12 1 211 1 349 2 183 1 
127 1 62 2 128 3 353 3 0 3 1 1 356 2 215 6 305 3 82 19 48 3 360 2 246 1 362 2 289 1 249 1 69 4 52 2 253 10 53 2 375 3 40 2 151 3 41 1 233 1 258 1 349 9 324 1 101 1 260 1 
127 2 62 3 186 1 128 3 353 3 0 2 354 1 1 1 215 4 305 2 356 3 82 26 48 2 241 2 360 3 246 2 50 1 362 3 69 6 143 1 368 1 253 12 52 2 342 1 53 4 375 2 40 1 151 3 41 1 233 2 258 1 349 14 324 1 101 2 
186 1 127 1 62 3 128 5 353 4 0 4 354 1 1 1 356 3 215 8 305 5 82 41 48 4 241 1 243 1 360 3 246 3 50 1 266 1 362 3 289 1 143 1 69 6 368 1 205 1 52 4 253 21 342 1 255 1 372 1 37 1 53 4 148 1 375 4 40 1 151 4 41 1 233 3 258 1 349 20 324 1 101 2 260 1 
186 1 127 1 62 4 128 5 353 4 0 3 354 1 1 1 356 4 215 7 305 4 82 38 48 3 241 2 243 1 360 4 246 3 50 1 266 1 362 4 289 1 143 1 69 8 368 1 205 1 52 4 253 18 342 1 255 1 372 1 37 1 53 4 148 1 375 4 40 1 151 4 41 1 233 3 258 1 349 20 324 1 101 2 260 1 
186 1 127 1 62 2 128 8 353 7 0 7 354 1 1 1 356 2 215 14 305 8 82 52 48 7 241 1 243 1 360 2 246 2 50 1 362 2 289 2 143 1 69 4 368 1 205 1 52 4 253 25 342 1 255 1 372 1 37 1 53 4 148 1 375 7 40 1 151 7 41 1 233 4 258 1 349 27 100 2 324 1 101 1 
96 1 219 1 187 1 244 1 270 1 118 1 315 1 36 1 346 1 290 1 
138 1 83 1 
334 1 219 1 187 1 315 1 284 1 36 1 346 1 137 1 290 1 
300 1 63 1 19 1 187 1 20 1 329 1 330 1 281 1 238 1 355 1 219 1 287 1 267 1 222 1 5 1 290 1 70 1 144 1 315 1 34 1 370 1 229 2 36 1 343 1 346 1 75 1 208 1 60 1 350 1 
300 1 63 1 19 1 187 1 20 1 329 1 330 1 281 1 238 1 355 1 219 1 287 1 267 1 222 1 5 1 290 1 70 1 144 1 315 1 34 1 370 1 229 2 36 1 343 1 346 1 75 1 208 1 60 1 350 1 
300 1 63 1 19 1 187 1 20 1 329 1 330 1 281 1 238 1 355 1 219 1 287 1 267 1 222 1 5 1 290 1 70 1 144 1 315 1 34 1 370 1 229 2 36 1 343 1 346 1 75 1 208 1 60 1 350 1 
167 1 120 1 308 1 
167 1 120 1 308 1 
201 1 179 1 
201 1 120 1 179 1 
335 1 142 1 
301 1 19 1 187 1 63 2 329 1 281 2 332 1 219 1 138 1 287 1 83 1 267 2 335 1 224 1 290 1 142 1 33 1 315 1 370 2 229 1 147 1 36 1 346 1 208 2 296 1 60 1 81 1 
167 1 308 1 
201 1 120 1 179 1 
62 1 103 1 63 2 160 1 239 1 161 1 356 1 82 2 111 1 110 1 29 2 360 1 192 1 267 2 362 1 69 2 367 2 292 1 370 2 90 1 253 1 35 2 206 1 271 1 319 1 211 1 349 1 275 1 236 2 327 1 237 1 
103 1 367 1 35 1 2 1 119 1 191 1 192 1 319 1 236 1 196 1 141 1 125 1 237 1 223 1 
366 1 103 1 367 1 314 1 303 1 8 1 135 1 35 1 27 2 264 1 220 1 192 1 173 1 268 1 236 1 141 1 125 1 299 1 
366 1 103 1 367 2 314 1 303 1 240 1 8 1 135 1 35 2 27 2 264 1 220 1 192 1 173 1 268 1 236 2 141 1 125 1 299 1 
367 1 103 1 314 1 303 1 8 1 135 1 35 1 27 2 56 1 264 1 220 1 192 1 173 1 268 1 236 1 125 1 299 1 
217 1 
24 1 306 1 228 1 92 1 57 1 149 1 376 1 347 1 76 1 32 1 
128 2 353 2 0 2 339 5 170 10 305 2 24 5 189 5 228 5 134 1 151 2 139 5 78 1 32 5 181 2 
300 1 63 1 329 1 330 1 281 1 355 1 25 1 370 1 343 1 75 1 208 1 287 1 376 1 267 1 32 1 298 1 222 1 
367 2 329 1 130 1 24 1 25 1 306 1 228 1 35 2 92 1 190 1 287 1 347 1 191 2 76 1 67 1 236 2 298 2 85 1 364 1 
57 1 149 1 376 1 24 1 121 1 228 1 32 1 
300 1 63 1 330 1 329 1 281 1 355 1 24 1 306 1 25 1 287 1 139 1 193 1 267 1 32 1 222 1 168 1 170 1 370 1 228 1 343 1 92 1 75 1 208 1 376 1 347 1 98 1 76 1 298 1 
128 1 0 1 353 1 103 2 280 2 17 1 329 2 130 1 305 1 24 4 189 3 25 1 306 2 26 1 309 1 287 2 286 1 139 3 140 1 191 1 192 1 32 3 195 1 367 1 170 6 339 3 228 3 9 1 35 1 92 2 151 1 347 2 76 2 319 4 174 1 78 1 154 1 236 1 181 1 298 2 79 1 14 1 237 1 
128 2 186 1 0 2 329 1 330 1 281 1 130 1 283 1 189 5 134 1 287 1 139 3 246 1 50 1 143 1 339 5 341 1 52 1 343 1 92 2 151 2 208 1 347 2 298 1 300 1 353 2 354 1 63 1 355 1 305 2 24 8 306 2 25 1 267 1 67 1 32 5 222 1 368 1 170 6 370 1 228 5 75 1 376 2 233 1 76 2 181 2 
300 1 128 2 63 1 329 1 330 1 282 1 281 1 355 1 305 1 24 2 306 1 134 1 243 1 287 1 267 1 222 1 203 1 370 1 228 2 343 1 37 1 92 1 372 1 75 1 208 1 347 1 76 1 181 2 
62 1 103 1 63 2 281 2 161 1 356 1 82 1 111 1 191 1 245 1 360 1 192 1 267 3 362 1 224 1 69 2 367 1 6 1 253 1 370 3 35 1 343 1 75 2 271 1 208 2 257 1 319 1 178 1 236 1 124 1 79 1 237 1 
130 1 170 4 339 2 24 1 189 2 306 1 228 2 92 1 148 1 376 2 139 2 347 1 76 1 32 4 67 1 
96 1 204 1 36 1 142 1 290 1 
200 1 36 1 290 1 
200 1 36 1 290 1 
200 1 36 1 290 1 
234 1 36 1 290 1 
234 1 36 1 290 1 
234 1 36 1 290 1 
36 1 290 1 
187 1 315 1 
62 1 128 2 69 2 282 1 356 1 215 5 305 2 82 10 48 2 253 5 37 2 372 1 375 3 243 2 360 1 349 5 362 1 324 1 
62 1 128 1 69 2 356 1 215 1 82 2 48 1 151 1 360 1 349 2 324 1 362 1 
62 1 128 1 0 1 69 2 353 1 305 1 215 2 356 1 82 4 253 2 48 1 375 1 151 1 360 1 349 2 324 1 362 1 
62 3 69 6 45 1 356 3 215 2 82 3 253 2 48 1 241 1 37 1 375 1 243 1 360 3 349 1 324 1 362 3 260 1 
62 5 128 5 353 3 0 3 45 1 356 5 215 12 305 5 82 34 48 5 241 2 243 3 360 5 246 1 362 5 289 1 69 10 205 1 371 1 253 18 52 4 255 1 372 2 37 3 148 1 375 7 95 1 151 3 233 3 42 1 349 16 324 1 180 1 260 1 
128 1 186 1 62 1 305 1 356 1 215 2 82 8 243 1 360 1 246 1 362 1 69 2 253 4 52 1 205 1 255 1 37 1 372 1 148 1 375 2 233 1 349 4 324 1 
186 1 62 2 128 2 353 1 305 1 356 2 215 3 82 11 48 1 243 1 360 2 246 1 362 2 289 1 69 4 205 1 253 5 52 2 255 1 372 1 37 1 148 1 375 2 95 1 151 1 233 1 349 6 324 1 
186 1 62 3 128 3 353 2 0 2 354 1 356 3 305 3 215 4 82 19 48 1 241 1 243 1 360 3 246 1 50 1 362 3 69 6 143 1 368 1 205 1 253 10 52 1 255 1 372 1 37 1 148 1 375 3 95 1 151 2 233 1 349 9 324 1 
186 1 62 3 128 3 353 2 0 1 354 1 356 3 305 2 215 5 82 17 48 2 241 1 243 1 360 3 246 1 50 1 362 3 69 6 143 1 368 1 205 1 253 7 52 1 255 1 372 1 37 1 148 1 375 3 95 1 151 2 233 1 349 10 324 1 
128 1 186 1 62 1 305 1 356 1 215 2 82 8 243 1 360 1 246 1 362 1 69 2 253 4 52 1 205 1 255 1 37 1 372 1 148 1 375 2 233 1 349 4 324 1 
186 1 62 1 128 2 353 2 0 2 354 1 356 1 305 2 215 2 82 12 48 1 360 1 246 1 50 1 362 1 69 2 143 1 368 1 253 6 52 1 375 1 151 2 233 1 349 6 324 1 
186 1 62 4 128 3 353 2 0 1 354 1 356 4 305 2 215 5 82 18 48 2 241 2 243 1 360 4 246 1 50 1 362 4 69 8 143 1 368 1 205 1 253 8 52 1 255 1 372 1 37 1 148 1 375 3 95 1 151 2 233 1 349 10 324 1 
186 1 62 4 128 3 353 3 0 2 354 1 356 4 305 2 215 6 82 16 48 3 241 2 360 4 246 1 50 1 362 4 69 8 143 1 368 1 253 7 52 1 375 3 151 3 233 1 349 9 324 1 260 1 
128 1 305 1 215 6 82 7 253 4 205 1 48 3 255 2 37 3 372 1 375 3 243 3 349 3 
186 1 62 4 128 3 353 2 0 1 354 1 356 4 305 2 215 4 82 18 48 1 241 2 243 1 360 4 246 1 50 1 362 4 69 8 143 1 368 1 205 1 253 8 52 1 255 1 372 1 37 1 148 1 375 3 151 2 233 1 349 10 324 1 260 1 
128 1 62 2 69 4 305 1 215 3 356 2 82 8 253 4 48 1 205 1 255 1 372 1 241 1 37 1 148 1 375 2 243 1 360 2 349 4 362 2 
128 1 215 2 305 1 82 6 253 3 205 1 255 1 37 1 372 1 148 1 375 2 243 1 121 1 349 3 
62 1 128 1 0 1 69 2 353 1 305 1 215 2 356 1 82 4 253 2 48 1 375 1 95 1 151 1 360 1 349 2 362 1 
128 1 0 1 353 1 305 1 215 2 82 7 52 2 253 4 48 1 375 1 151 1 233 1 246 1 349 3 289 1 
128 3 62 2 353 2 0 2 45 1 215 9 305 3 356 2 82 23 48 4 241 2 243 2 360 2 362 2 289 1 69 4 86 1 205 1 253 12 52 2 255 1 372 1 37 2 148 1 375 5 151 2 233 2 349 11 100 1 
82 1 253 1 52 1 
233 1 82 1 349 1 
62 1 128 1 69 2 353 1 0 1 356 1 215 3 305 1 82 6 253 3 48 1 375 2 95 1 151 1 360 1 78 1 349 3 362 1 
186 1 62 1 128 2 353 2 0 2 354 1 356 1 305 2 215 2 82 12 48 1 360 1 246 1 50 1 362 1 69 2 143 1 368 1 253 6 52 1 375 1 151 2 233 1 349 6 324 1 
128 1 305 1 215 2 82 6 253 3 48 1 372 1 37 1 375 1 243 1 349 3 
62 1 69 2 45 1 215 2 356 1 82 3 48 1 253 2 205 1 255 1 37 1 241 1 375 1 243 1 360 1 349 1 362 1 
49 1 63 1 338 1 72 1 370 1 267 1 224 1 
63 1 22 1 72 1 338 1 131 1 370 1 373 1 49 1 358 1 176 1 267 1 224 1 
103 1 367 4 240 1 35 4 91 1 119 1 191 1 319 1 192 1 13 1 236 4 196 1 237 1 
367 2 269 1 103 2 47 1 35 2 54 1 58 1 319 1 192 1 66 1 236 2 79 1 378 1 237 1 
103 1 264 1 367 1 191 1 192 1 173 1 35 1 236 1 27 1 299 1 
103 1 367 2 160 1 192 1 319 1 240 1 275 1 135 1 35 2 236 2 237 1 
367 5 103 2 240 1 47 1 74 1 35 5 119 1 191 1 319 3 192 2 13 1 275 1 236 4 196 1 4 1 237 2 
367 5 103 2 240 1 47 1 74 1 35 5 119 1 191 1 319 3 192 2 13 1 275 1 236 4 363 1 196 1 237 2 
103 1 119 1 367 1 191 1 192 1 319 1 121 1 35 1 236 1 196 1 237 1 
103 1 367 1 63 1 281 1 107 1 370 2 35 1 208 1 257 1 191 1 319 1 192 1 267 2 178 1 236 1 79 1 224 1 237 1 
300 1 103 1 63 2 281 2 107 1 47 1 192 1 221 1 267 2 68 1 224 1 367 1 340 1 370 2 35 1 208 1 257 1 232 1 319 3 178 1 236 1 79 2 237 2 
300 1 103 1 63 2 281 2 107 1 47 1 192 1 221 1 267 2 68 1 224 1 367 2 340 1 370 2 35 2 91 1 208 1 257 1 232 1 319 3 236 2 325 1 79 2 237 2 
103 1 367 3 280 1 17 1 329 2 340 1 307 1 47 1 35 3 91 1 376 1 287 2 286 1 191 1 319 4 192 1 32 1 68 1 236 3 259 1 79 1 298 1 237 1 
103 1 367 3 280 1 17 1 329 2 340 1 47 1 35 3 91 1 26 1 376 1 287 2 286 1 191 1 319 4 192 1 32 1 68 1 236 3 79 1 298 1 237 1 
103 1 367 1 192 1 35 1 236 1 374 1 
367 7 269 1 103 3 87 1 240 1 133 1 74 1 135 1 35 7 309 1 54 1 374 1 29 1 191 2 319 3 192 2 275 1 236 6 79 1 4 1 237 2 
128 1 129 1 281 1 239 1 240 1 82 6 243 1 245 1 192 1 6 1 205 1 253 3 255 1 148 1 208 1 257 1 210 1 12 1 211 1 349 3 158 1 62 2 103 1 63 1 161 2 356 2 215 2 305 1 107 1 111 2 360 2 267 2 362 2 224 2 69 4 367 1 370 2 35 1 37 1 372 1 375 2 319 1 178 1 236 1 79 1 183 1 237 1 
128 2 280 1 329 3 330 1 282 1 281 1 134 1 243 1 286 1 287 3 191 1 195 1 85 1 9 1 343 1 92 2 57 1 149 1 208 1 347 2 298 2 300 1 17 1 63 1 355 1 305 2 24 4 25 1 306 2 26 1 267 1 32 2 222 1 33 1 367 1 370 1 228 5 35 1 37 1 372 1 75 1 376 2 319 2 76 2 174 1 236 1 181 2 
367 2 103 2 240 1 35 2 309 1 374 1 286 1 319 2 192 1 154 1 236 2 79 1 237 1 
103 1 367 1 63 1 281 1 107 1 370 2 35 1 208 1 257 1 191 1 319 1 192 1 267 2 236 1 79 1 325 1 224 1 237 1 
367 1 269 1 103 2 87 1 47 1 35 1 309 1 54 1 319 1 192 1 236 1 79 1 237 1 
207 2 7 1 369 1 327 1 
33 1 104 1 287 1 207 2 7 1 329 1 59 1 369 1 43 1 327 1 
207 1 7 1 369 1 327 1 
104 1 207 1 59 1 
15 1 105 1 145 1 225 1 302 1 77 1 177 1 247 1 
15 3 105 1 145 2 225 4 302 4 146 1 136 1 94 1 273 1 320 2 175 1 177 1 247 2 166 1 
15 1 105 1 225 2 145 1 302 2 331 1 150 1 77 1 320 1 177 1 323 1 247 1 
15 1 105 1 225 3 145 1 302 3 136 2 94 1 273 2 153 1 77 1 177 1 247 1 
15 2 261 2 328 1 157 1 
105 1 225 1 302 1 77 1 177 1 311 1 
15 1 105 1 145 1 225 2 302 2 320 1 77 1 177 1 247 1 377 1 
117 1 
15 1 105 1 145 1 225 1 302 1 77 1 177 1 247 1 
15 1 145 1 121 1 247 1 
15 1 105 1 145 1 225 1 302 1 177 1 247 1 
116 1 302 1 3 1 
15 1 105 1 225 3 145 1 302 3 136 2 94 1 273 1 295 1 77 1 177 1 247 1 
15 1 105 1 145 1 225 2 88 1 302 2 320 1 177 1 247 1 
15 1 337 1 105 1 225 1 302 1 77 1 177 1 268 1 27 1 166 1 299 1 
15 1 105 1 225 1 302 1 77 1 177 1 247 1 
105 1 145 1 225 1 302 1 77 1 177 1 247 2 
15 1 199 1 114 1 105 2 225 2 302 2 226 1 77 1 177 2 247 1 
15 2 105 1 145 1 225 3 302 3 77 1 320 2 175 1 177 1 156 1 247 1 377 1 166 1 
15 1 213 1 105 1 145 1 225 2 302 2 303 1 27 2 173 1 77 1 320 1 177 1 247 1 268 1 299 1 
15 2 105 2 145 1 225 4 302 4 88 1 77 1 320 2 175 1 177 2 247 1 166 1 279 1 
15 1 105 1 225 3 145 1 302 3 136 1 320 1 77 1 177 1 247 1 377 1 
15 1 175 1 146 1 166 1 
15 1 247 1 

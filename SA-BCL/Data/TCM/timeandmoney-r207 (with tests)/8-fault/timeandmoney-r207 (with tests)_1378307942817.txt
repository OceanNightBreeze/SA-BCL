#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (33,287) (33,287) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (33,287) (33,287) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (33,287) (33,287) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (33,287) (33,287) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 347 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 322 147 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 322 147 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 322 147 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 322 147 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 322 147 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 1 244 1 297 1 365 1 138 1 33 1 65 1 128 1 49 1 41 1 376 1 
287 1 244 1 297 1 365 1 138 1 33 1 65 1 128 1 49 1 41 1 376 1 
287 1 244 1 297 1 365 1 138 1 33 1 65 1 128 1 49 1 41 1 376 1 
287 1 244 1 297 1 365 1 138 1 33 1 65 1 128 1 49 1 41 1 376 1 
297 1 160 2 365 4 135 1 162 3 213 1 244 1 76 1 80 1 138 1 356 1 275 2 41 4 69 3 263 1 264 1 310 1 11 1 
297 1 218 1 365 2 135 1 240 1 223 1 244 1 80 1 138 1 356 1 128 1 69 1 41 2 49 1 375 1 310 1 
297 2 160 1 365 3 135 1 162 1 244 2 138 1 177 1 128 1 41 3 69 2 310 1 11 1 
297 2 160 4 135 1 162 7 213 1 259 1 76 1 80 1 138 1 356 1 41 9 263 1 24 1 264 1 310 1 11 3 365 9 237 1 244 2 272 1 128 1 177 1 275 2 69 5 
297 2 160 4 135 1 162 7 213 1 259 1 76 1 80 1 138 1 356 1 41 9 263 1 24 1 264 1 310 1 11 3 365 9 237 1 244 2 272 1 128 1 177 1 275 2 69 5 
73 1 210 1 226 1 
6 2 73 1 185 1 
125 2 254 2 139 1 84 2 178 1 151 2 15 2 113 2 
16 2 0 2 254 2 186 1 161 1 18 1 188 1 300 1 258 1 113 2 59 1 355 2 303 1 283 1 139 1 358 1 84 3 63 1 308 2 362 1 360 1 145 1 233 1 94 1 236 1 239 1 195 1 149 1 268 1 151 2 269 1 245 1 125 2 201 2 178 1 250 1 15 3 
125 1 254 1 137 1 28 1 67 1 84 1 178 1 151 1 15 1 113 1 
255 1 73 1 67 1 108 1 150 1 19 1 125 1 302 1 248 1 261 1 84 1 179 1 15 1 226 1 
254 1 255 1 73 1 108 2 67 1 151 1 19 1 113 1 125 1 248 1 261 1 84 1 179 2 15 1 226 1 
153 1 45 1 357 1 108 1 179 1 
153 1 45 1 90 1 73 1 108 2 249 1 179 2 226 1 
45 1 108 1 179 1 
169 1 254 1 67 1 108 1 151 1 113 1 153 1 125 1 137 1 28 1 178 1 84 1 179 1 15 1 
73 1 
75 1 153 1 45 1 90 1 73 1 108 2 179 2 226 1 
350 1 90 1 45 2 73 1 55 1 108 5 56 1 187 2 153 2 78 1 127 2 30 1 306 1 359 1 179 5 326 1 205 2 225 1 226 1 
139 1 210 1 
299 1 254 1 151 1 113 1 125 2 77 1 139 2 84 2 15 2 
140 1 42 1 363 1 
233 1 16 1 0 1 186 1 149 1 18 1 195 1 300 1 245 1 303 1 139 1 84 1 358 1 86 1 15 1 308 1 
125 3 254 3 139 1 84 3 166 1 151 3 15 3 113 1 
125 1 254 1 28 1 67 1 84 1 151 1 15 1 
125 1 77 1 299 1 254 1 67 1 84 1 151 1 15 1 113 1 
16 1 0 1 254 3 255 1 108 1 186 1 161 1 18 1 300 1 258 1 19 1 113 2 59 1 77 1 355 2 280 1 303 1 283 1 139 1 261 1 337 1 358 1 84 4 166 1 308 1 362 1 361 1 145 1 233 1 236 1 67 1 239 1 195 1 149 1 268 1 151 3 269 1 245 1 125 3 201 1 248 1 178 1 179 1 15 4 
125 2 302 1 254 1 139 1 84 2 166 1 151 1 15 2 116 1 
254 3 255 1 73 1 108 1 67 1 19 1 151 3 113 1 125 3 77 1 280 1 271 1 248 1 261 1 337 1 84 3 179 1 166 2 15 3 
254 2 151 2 113 1 125 2 77 1 140 1 84 2 166 1 42 1 15 2 
16 1 233 1 0 1 186 1 149 1 18 1 195 1 300 1 245 1 303 1 139 1 84 1 358 1 15 1 308 1 
16 1 233 1 0 1 134 1 186 1 18 1 195 1 245 1 303 1 372 1 139 1 84 1 358 1 15 1 308 1 
183 1 331 1 57 1 161 1 188 2 110 1 59 2 165 1 355 2 140 2 214 1 232 1 42 2 88 1 362 1 363 2 145 1 236 1 239 1 268 1 197 1 98 1 201 4 224 1 
125 1 254 1 261 1 290 1 67 1 84 1 151 1 15 1 
233 1 16 1 0 1 254 1 186 1 195 1 18 1 149 1 300 1 151 1 245 1 125 1 280 1 303 1 358 1 84 2 166 1 42 1 15 2 308 1 
254 4 196 1 151 4 113 1 125 5 77 1 280 1 302 1 139 1 31 1 84 5 166 2 15 5 116 1 
125 2 254 2 28 1 290 1 67 1 84 2 151 2 15 2 
17 1 38 1 
17 1 38 1 
66 1 316 1 
66 1 316 1 
66 1 316 1 
17 1 38 1 345 1 
17 1 38 1 345 1 
17 1 38 1 171 1 
17 2 168 1 38 2 374 1 66 1 316 1 
17 1 38 1 345 1 
368 1 17 1 38 1 
368 1 17 1 38 1 
368 1 17 1 38 1 
17 2 168 1 265 1 73 1 108 2 238 1 222 1 242 2 68 2 230 1 38 2 62 2 39 3 305 1 40 1 179 2 85 1 87 2 131 2 
117 1 17 1 254 2 171 1 315 1 108 1 151 2 278 1 242 1 68 1 125 2 370 1 38 1 62 1 39 1 139 1 129 1 84 2 179 1 85 1 43 1 348 1 15 2 131 1 
80 1 356 1 263 1 
80 1 356 1 223 1 
79 1 356 3 34 1 263 2 3 1 223 1 
158 1 79 1 356 2 34 1 263 1 223 1 
79 2 356 2 263 1 34 1 223 1 
157 1 256 2 73 2 228 1 185 1 108 5 56 1 187 1 278 1 352 1 165 1 6 3 306 2 232 1 88 1 117 1 45 1 90 1 170 1 98 1 200 1 153 4 370 1 99 1 203 2 29 2 127 1 179 5 205 1 276 1 226 1 225 3 
157 1 182 5 256 6 73 5 55 1 185 3 108 9 56 1 187 2 352 2 165 3 6 9 357 5 306 6 232 3 88 3 117 4 45 6 90 1 148 1 98 3 200 3 153 7 203 6 127 2 292 1 204 1 179 9 293 1 50 1 205 2 276 2 106 1 226 1 225 8 
73 3 256 2 228 1 55 1 185 2 108 3 187 1 352 1 165 1 6 4 306 2 232 1 88 1 117 1 170 1 98 1 200 1 153 2 29 1 203 2 127 1 179 3 205 1 276 1 226 1 225 3 
73 4 256 4 55 1 228 1 185 3 108 4 187 1 352 1 165 2 6 7 306 4 232 2 88 2 117 2 170 1 148 1 98 2 200 2 153 3 203 4 29 2 127 1 179 4 293 1 205 1 276 1 226 1 106 1 225 5 
233 1 371 1 210 1 
233 1 273 1 
298 1 
233 1 358 1 
347 1 
233 1 358 1 195 1 
233 1 142 1 
72 1 341 1 331 2 257 1 188 4 197 3 291 1 59 3 124 2 201 7 165 1 190 1 338 1 10 1 232 1 44 1 251 1 
72 1 341 1 331 2 257 1 188 4 197 3 291 1 59 3 124 2 201 7 165 1 190 1 338 1 10 1 232 1 44 1 251 1 
72 1 184 1 341 1 331 2 257 1 188 4 197 3 291 1 59 3 124 2 201 7 165 1 190 1 338 1 10 1 232 1 44 1 251 1 
72 2 208 1 331 5 257 1 188 16 59 15 231 3 5 1 355 2 165 4 281 1 190 2 338 5 10 2 232 4 44 1 88 3 145 1 341 2 236 1 239 1 291 1 268 1 98 3 197 10 367 4 124 3 200 3 201 31 126 1 102 1 32 1 105 1 251 1 
72 1 331 3 257 2 188 8 59 6 21 1 114 1 355 2 165 3 190 2 338 1 10 2 232 3 44 1 145 1 341 1 236 1 366 1 239 1 268 1 197 4 124 2 201 14 251 1 
16 1 297 1 0 1 1 1 186 1 3 1 135 1 162 1 333 1 80 1 282 1 138 1 356 2 304 1 263 1 41 2 308 1 310 1 365 2 146 1 223 1 244 1 245 1 274 1 128 1 176 1 69 1 70 1 71 1 349 1 
16 1 297 1 0 1 1 1 186 1 3 1 135 1 162 2 80 1 282 1 356 2 304 1 263 1 41 3 308 1 310 1 365 3 91 1 146 1 96 1 243 1 223 1 244 1 245 1 274 1 128 1 176 1 69 1 71 1 349 1 
16 1 0 1 1 1 186 1 3 1 135 1 162 2 80 1 282 1 356 2 304 1 41 2 263 1 308 1 310 1 365 2 91 1 96 1 223 1 245 1 274 1 128 1 176 1 69 1 349 1 
16 1 297 1 0 1 2 1 186 1 4 1 115 1 282 2 303 1 61 1 284 1 304 2 41 1 358 1 308 1 233 1 365 1 219 1 243 1 245 1 244 1 128 2 349 2 
16 1 297 1 0 1 1 1 186 1 3 1 333 1 80 1 282 1 138 1 356 2 304 1 263 1 41 1 308 1 365 1 146 1 96 1 223 1 244 1 245 1 274 1 128 1 176 1 71 1 349 1 
253 1 
0 2 227 1 328 2 73 2 185 2 186 1 187 1 6 2 284 1 84 1 191 2 9 1 233 1 90 3 45 6 97 2 150 1 342 2 245 1 101 1 248 1 294 2 205 1 15 1 206 4 16 2 255 1 108 5 56 1 19 1 20 1 301 2 303 2 302 1 261 1 306 2 358 1 215 1 308 2 309 2 217 1 118 1 120 1 219 1 67 1 220 1 125 1 373 1 174 1 127 1 179 5 324 1 276 1 226 1 225 2 
90 1 45 2 255 1 67 1 108 3 150 1 342 1 19 1 75 1 20 1 125 1 302 1 174 1 261 1 248 1 101 1 215 1 84 1 179 3 324 1 206 2 15 1 
255 1 73 1 108 3 19 1 20 1 75 1 302 1 261 1 84 1 215 1 191 1 45 1 90 1 67 1 150 1 125 1 174 1 101 1 248 1 324 1 179 3 15 1 206 3 226 1 
255 1 73 1 108 3 19 1 75 1 20 1 302 1 261 1 84 1 215 1 191 1 90 1 45 2 67 1 150 1 342 1 125 1 174 1 101 1 248 1 324 1 179 3 15 1 206 3 294 1 226 1 
328 2 330 1 255 1 73 5 107 1 185 2 108 5 56 1 187 1 19 1 58 1 20 1 75 1 301 2 302 1 261 1 306 1 215 1 84 1 191 4 9 1 309 2 120 1 45 7 90 3 67 1 97 2 150 1 342 4 198 1 125 1 320 1 174 1 127 1 101 1 248 1 324 1 179 5 205 1 15 1 206 6 294 4 225 1 226 5 
328 2 73 2 185 2 187 1 6 2 84 1 191 2 9 1 90 2 45 4 150 1 97 2 342 2 248 1 101 1 206 4 15 1 205 1 294 2 255 1 108 4 56 1 19 1 20 1 301 2 302 1 261 1 306 1 215 1 309 2 120 1 67 1 220 1 125 1 174 1 127 1 179 4 324 1 225 1 226 1 
328 2 255 1 330 1 73 1 107 1 185 2 108 4 56 1 187 1 19 1 20 1 301 2 302 1 261 1 306 1 84 1 215 1 191 2 9 1 309 2 45 4 90 2 120 1 67 1 97 2 150 1 342 2 198 1 125 1 174 1 101 1 248 1 127 1 324 1 179 4 294 2 205 1 15 1 206 4 226 1 225 1 
328 2 255 1 330 1 73 1 107 1 185 2 108 4 56 1 187 1 19 1 20 1 301 2 302 1 261 1 306 1 84 1 215 1 191 2 9 1 309 2 45 4 90 2 120 1 67 1 97 2 150 1 342 2 198 1 125 1 174 1 101 1 248 1 127 1 324 1 179 4 294 2 205 1 15 1 206 4 226 1 225 1 
296 2 328 2 255 1 73 1 108 4 56 1 187 1 19 1 20 1 302 1 6 2 7 1 261 1 306 1 84 1 215 1 191 2 9 1 309 2 45 4 90 2 314 1 67 1 150 1 342 2 198 1 125 1 174 1 101 1 248 1 127 1 155 1 324 1 179 4 294 2 205 1 15 1 206 4 207 2 226 1 225 1 
328 2 330 1 255 1 73 1 107 1 185 2 108 4 56 1 187 1 19 1 58 1 20 1 301 2 302 1 261 1 306 1 84 1 215 1 191 3 9 1 309 2 90 2 120 1 45 5 67 1 97 2 150 1 342 3 198 1 125 1 174 1 127 1 101 1 248 1 324 1 179 4 205 1 15 1 206 5 294 3 226 1 225 1 
328 2 330 1 255 1 73 1 107 1 185 2 108 4 56 1 187 1 19 1 58 1 20 1 301 2 302 1 261 1 306 1 84 1 215 1 191 3 9 1 309 2 90 2 120 1 45 5 67 1 97 2 150 1 342 3 198 1 125 1 174 1 127 1 101 1 248 1 324 1 179 4 205 1 15 1 206 5 294 3 226 1 225 1 
296 2 328 2 255 1 73 1 108 4 56 1 187 1 19 1 20 1 302 1 6 2 7 1 261 1 306 1 215 1 84 1 191 2 9 1 309 2 45 4 90 2 67 1 220 1 150 1 342 2 125 1 174 1 101 1 127 1 248 1 324 1 179 4 294 2 205 1 15 1 206 4 207 2 226 1 225 1 
331 2 210 1 257 1 161 1 188 3 59 3 355 2 165 1 140 1 190 1 139 2 214 1 10 1 42 1 232 1 44 1 362 1 363 1 145 1 236 1 239 1 268 1 197 2 124 1 201 6 251 1 
208 1 331 1 161 2 188 8 258 1 212 1 59 6 231 3 355 4 165 2 139 1 140 4 338 1 42 11 232 1 88 1 362 1 363 11 145 2 236 2 239 2 197 2 268 2 98 2 367 3 241 1 199 1 200 2 201 14 175 1 48 1 102 1 250 1 
16 1 0 1 327 1 254 1 186 1 18 1 161 1 300 1 188 1 258 1 189 1 59 1 280 1 355 2 303 1 139 1 140 1 358 1 84 2 166 1 86 1 308 1 362 1 145 1 233 1 236 1 195 1 149 1 239 1 151 1 268 1 241 1 245 1 319 1 125 1 201 2 15 2 250 1 
0 3 331 4 186 2 188 10 334 1 280 1 283 2 139 2 190 1 140 7 84 3 338 4 10 1 232 3 42 7 44 1 88 2 145 3 233 2 194 2 236 3 96 1 239 3 149 2 195 2 151 1 98 2 197 8 241 1 152 2 200 2 245 2 201 20 154 2 250 1 15 3 295 1 251 1 16 3 254 1 257 1 161 3 18 2 300 2 258 1 111 1 59 10 355 6 165 3 303 1 307 2 358 2 166 1 308 3 362 3 363 7 268 3 124 1 125 1 
16 8 0 8 254 1 209 1 186 2 161 2 188 1 258 1 112 1 59 1 355 4 303 2 284 1 336 1 214 1 84 1 358 2 166 1 308 7 362 2 360 2 286 1 311 1 145 2 233 3 219 1 46 1 236 2 96 1 239 2 151 1 268 2 245 2 125 1 201 2 247 1 70 1 15 1 250 1 
254 1 331 1 161 1 188 1 113 1 59 2 77 1 355 2 165 1 140 1 84 1 42 1 232 1 88 1 362 1 363 1 145 1 236 1 239 1 197 1 151 1 268 1 98 1 241 1 200 1 125 1 201 3 344 1 15 1 
145 1 183 1 236 1 161 1 239 1 188 2 197 1 268 1 98 1 201 2 355 2 165 1 140 1 214 1 338 1 42 1 362 1 363 1 
145 1 331 1 236 1 161 1 239 1 197 1 268 1 59 2 201 2 355 2 224 1 140 1 214 1 42 1 232 1 88 1 362 1 363 1 
145 1 331 1 236 1 161 1 239 1 188 2 197 2 268 1 98 1 59 2 200 1 201 4 355 2 165 1 140 2 214 1 338 1 232 1 42 2 88 1 362 1 363 2 
145 1 183 1 236 1 161 1 239 1 188 2 197 1 268 1 98 1 201 2 355 2 165 1 247 1 140 1 338 1 42 1 362 1 363 1 
145 1 331 1 236 1 161 1 239 1 197 1 268 1 59 2 201 2 355 2 224 1 247 1 140 1 42 1 232 1 88 1 362 1 363 1 
145 1 331 1 236 1 161 1 239 1 188 2 197 2 268 1 98 1 59 2 200 1 201 4 355 2 165 1 247 1 140 2 338 1 232 1 42 2 88 1 362 1 363 2 
145 1 331 1 236 1 161 1 239 1 188 2 197 2 268 1 98 1 59 2 200 1 201 4 355 2 165 1 140 2 338 1 232 1 42 2 88 1 362 1 363 2 
16 1 0 1 186 1 18 1 161 1 188 1 300 1 258 1 59 1 355 2 303 1 283 1 139 1 358 1 84 1 308 1 362 1 145 1 233 1 236 1 195 1 149 1 239 1 268 1 245 1 201 2 250 1 15 1 
16 1 0 1 186 1 134 1 18 1 161 1 188 1 351 1 258 1 59 1 355 2 303 1 139 1 358 1 84 1 308 1 362 1 145 1 233 1 236 1 195 1 239 1 268 1 245 1 201 2 372 1 250 1 15 1 
145 1 331 1 236 1 161 1 239 1 188 2 197 2 268 1 98 1 241 1 59 2 200 1 201 4 355 2 165 1 140 2 338 1 232 1 42 2 88 1 362 1 363 2 
16 1 0 1 331 1 186 1 18 1 161 1 188 2 300 1 59 2 165 1 355 2 283 1 140 2 307 1 338 1 358 1 84 1 232 1 42 2 88 1 308 1 362 1 363 2 145 1 233 1 236 1 195 1 149 1 239 1 197 2 98 1 268 1 200 1 245 1 201 4 70 1 15 1 
254 1 161 1 188 2 113 1 59 1 77 1 355 2 165 1 140 1 338 1 84 1 232 1 42 1 88 1 362 1 363 1 145 1 236 1 239 1 197 1 151 1 268 1 98 1 241 1 200 1 125 1 201 3 246 1 15 1 
145 1 21 1 354 1 355 2 322 1 147 1 236 1 239 1 268 1 229 1 
145 1 21 1 354 1 355 2 322 1 147 1 236 1 239 1 268 1 229 1 
145 1 21 1 354 1 355 2 322 1 147 1 236 1 239 1 268 1 229 1 
145 1 21 1 354 1 355 2 322 1 147 1 236 1 239 1 268 1 229 1 
145 1 21 1 354 1 355 2 322 1 147 1 236 1 239 1 268 1 229 1 
68 1 17 1 168 1 265 1 62 1 38 1 305 1 277 1 131 1 242 1 
171 1 315 1 
68 1 89 1 17 1 62 1 38 1 82 1 83 1 131 1 242 1 
17 1 168 1 265 1 73 1 108 1 238 1 242 1 68 1 230 1 38 1 62 1 39 2 305 1 40 1 179 1 85 1 87 1 131 1 
17 1 168 1 265 1 73 1 108 1 238 1 242 1 68 1 230 1 38 1 62 1 39 2 305 1 40 1 179 1 85 1 87 1 131 1 
17 1 168 1 265 1 73 1 108 1 238 1 242 1 68 1 230 1 38 1 62 1 39 2 305 1 40 1 179 1 85 1 87 1 131 1 
374 1 345 1 180 1 
374 1 345 1 180 1 
368 1 25 1 
368 1 25 1 374 1 
129 1 348 1 
17 1 254 2 329 1 108 1 278 1 230 1 62 1 38 1 39 1 139 1 84 2 87 1 43 1 117 1 171 1 315 1 151 2 242 1 68 1 153 1 125 2 370 1 129 1 179 1 15 2 348 1 131 1 
345 1 180 1 
368 1 25 1 374 1 
16 2 252 1 0 2 209 1 133 1 186 1 161 1 188 1 258 1 59 1 355 2 81 1 358 1 84 2 308 2 144 1 362 1 360 2 145 1 233 1 234 1 46 1 236 1 239 1 268 1 241 1 245 1 125 2 201 2 15 2 250 1 
16 2 119 1 0 2 364 1 146 1 1 1 186 1 96 1 3 1 223 1 245 1 80 1 37 1 356 2 274 1 304 1 263 1 70 1 308 2 
16 1 159 1 0 1 364 1 146 1 1 1 96 1 186 1 3 1 223 1 245 1 80 1 356 2 274 1 304 1 263 1 308 1 
233 1 16 1 0 1 219 1 186 1 245 1 37 1 303 1 61 1 284 1 304 1 358 1 285 1 308 1 
16 1 119 1 0 1 364 1 146 1 1 1 96 1 186 1 3 1 223 1 245 1 80 1 37 1 356 2 274 1 304 1 263 1 308 1 
130 1 
350 1 73 1 306 1 210 1 359 1 225 1 226 1 
73 2 185 1 108 1 56 1 187 1 301 1 6 1 306 1 120 1 90 1 45 1 97 1 127 1 179 1 205 1 225 1 226 1 
0 3 73 8 185 6 186 2 187 4 6 12 142 1 232 2 88 2 193 2 233 8 45 5 90 3 289 1 194 2 235 2 195 2 98 2 12 1 200 2 245 3 343 2 14 2 203 6 346 1 205 4 350 1 51 1 16 3 54 2 256 6 108 5 56 4 19 2 353 2 165 2 303 1 306 8 358 2 359 1 308 3 313 2 122 1 221 1 173 1 371 2 373 1 273 3 127 4 179 5 70 1 276 2 226 2 225 9 
53 1 256 5 73 5 208 1 108 1 185 3 56 2 187 2 231 1 165 2 6 6 306 5 339 1 232 2 192 1 88 2 167 1 193 1 45 1 90 1 313 2 92 1 267 1 123 1 98 2 367 1 200 2 373 1 203 5 127 2 179 1 276 1 205 2 225 8 226 2 
254 1 330 1 108 1 56 1 257 1 187 1 113 1 114 1 165 2 137 1 190 1 306 2 84 1 10 1 232 1 193 1 313 2 169 1 67 1 151 1 125 1 28 1 127 1 178 1 179 1 15 1 205 1 225 2 
350 1 73 1 56 1 187 1 127 1 306 1 359 1 205 1 226 1 225 1 
193 1 313 2 194 1 256 5 73 5 185 5 98 2 200 2 165 2 6 10 203 5 306 5 232 2 88 2 225 5 
45 1 90 1 73 1 108 1 179 1 226 1 
16 4 227 1 0 4 55 1 108 3 186 2 56 1 187 2 136 1 74 1 60 1 335 1 303 2 284 1 306 2 358 2 308 4 217 1 233 2 45 4 90 2 121 1 219 1 195 1 12 2 245 3 369 1 373 2 127 2 346 1 179 3 205 2 276 2 225 2 
16 1 0 1 254 2 186 1 18 1 161 1 300 1 258 1 113 2 59 1 355 2 303 1 283 1 139 1 84 3 358 1 308 1 362 1 145 1 233 1 236 1 239 1 149 1 195 1 268 1 151 2 269 1 245 1 125 2 201 1 178 1 15 3 
256 2 73 4 185 2 56 1 187 1 124 1 6 4 203 2 373 1 127 1 306 2 205 1 276 1 225 1 226 2 
93 1 62 1 131 1 
93 1 62 1 131 1 
62 1 266 1 305 1 348 1 131 1 
93 1 62 1 131 1 
62 1 172 1 131 1 
62 1 172 1 131 1 
62 1 172 1 131 1 
62 1 131 1 
17 1 38 1 
145 2 331 2 236 2 257 1 239 2 188 4 197 3 268 2 124 1 59 4 201 8 165 1 355 4 281 1 190 1 338 1 10 1 232 1 44 1 251 1 
331 2 210 1 257 1 188 3 197 2 124 1 59 3 201 6 165 1 190 1 10 1 232 1 44 1 251 1 
145 1 331 1 236 1 239 1 188 2 197 2 268 1 98 1 59 2 200 1 201 4 355 2 165 1 338 1 232 1 88 1 143 1 
208 1 331 1 188 3 98 1 197 2 367 2 59 4 200 1 231 1 201 7 165 1 102 1 338 1 232 1 88 1 
331 5 257 1 188 11 59 12 231 2 165 3 355 4 281 2 190 2 338 4 10 2 232 3 44 1 88 2 145 2 236 2 26 1 239 2 197 9 98 2 268 2 367 2 124 1 200 2 199 1 201 23 102 1 175 1 251 1 
201 1 367 1 59 1 
231 1 201 1 188 1 
145 1 194 1 236 1 331 2 239 1 188 3 268 1 98 1 197 3 59 3 200 1 201 6 355 2 165 1 338 1 232 1 143 1 88 1 
208 1 331 1 188 6 59 6 231 1 21 1 355 2 165 2 338 1 232 2 88 2 192 1 167 1 145 1 92 1 236 1 239 1 267 1 268 1 98 2 197 2 123 1 367 1 200 2 201 12 
331 1 257 1 188 3 197 2 59 3 201 6 165 1 190 1 338 1 10 1 232 1 
145 1 331 1 26 1 236 1 239 1 188 1 197 2 268 1 59 2 201 3 355 2 281 1 190 1 338 1 10 1 44 1 251 1 
145 1 236 1 331 3 257 1 239 1 188 5 268 1 197 5 59 5 21 1 114 1 201 10 355 2 165 2 190 2 338 2 10 2 232 2 
145 1 236 1 239 1 188 2 268 1 98 1 197 1 21 1 201 2 355 2 165 1 338 1 
145 1 331 1 236 1 239 1 188 2 197 2 268 1 98 1 59 2 200 1 21 1 201 4 355 2 165 1 338 1 232 1 88 1 
145 3 26 1 236 3 331 1 239 3 188 1 268 3 197 2 59 2 21 1 201 3 355 6 281 1 23 1 190 1 338 1 10 1 
208 1 331 7 257 2 188 16 59 18 21 1 231 3 5 1 355 10 165 5 281 2 190 3 23 1 338 5 10 3 232 5 44 1 143 1 88 3 145 5 26 1 236 5 239 5 268 5 98 3 197 12 367 4 124 1 200 3 201 34 126 1 102 1 32 1 251 1 
208 1 331 2 257 1 188 4 59 4 231 1 21 1 165 1 355 2 190 1 10 1 232 1 44 1 145 1 92 1 236 1 239 1 268 1 197 2 367 1 124 1 201 8 251 1 
208 1 331 2 257 1 188 6 59 5 21 1 231 1 355 4 165 2 190 1 338 1 10 1 232 1 44 1 143 1 145 2 92 1 236 2 239 2 268 2 98 1 197 3 367 2 124 1 200 1 201 11 102 1 251 1 
208 1 331 3 257 1 188 9 59 10 231 1 21 1 355 6 165 3 281 1 190 1 338 1 10 1 232 3 44 1 143 1 88 2 192 1 167 1 145 3 92 1 236 3 239 3 267 1 123 1 268 3 98 2 197 4 367 1 124 1 200 2 201 19 251 1 
208 1 331 3 257 1 188 10 59 7 231 1 21 1 355 6 165 3 281 1 190 1 338 2 10 1 232 2 44 1 143 1 88 1 192 1 167 1 145 3 92 1 236 3 239 3 267 1 268 3 98 2 197 5 123 1 367 1 124 1 200 2 201 17 251 1 
208 1 331 2 257 1 188 4 59 4 231 1 21 1 165 1 355 2 190 1 10 1 232 1 44 1 145 1 92 1 236 1 239 1 268 1 197 2 367 1 124 1 201 8 251 1 
208 1 331 1 188 6 59 6 231 1 21 1 355 2 165 2 338 1 232 2 88 2 192 1 167 1 145 1 92 1 236 1 239 1 267 1 268 1 98 2 197 2 123 1 367 1 200 2 201 12 
208 1 331 3 257 1 188 10 59 8 21 1 231 1 355 8 165 3 281 2 190 1 338 2 10 1 232 2 44 1 192 1 143 1 88 1 167 1 145 4 92 1 236 4 239 4 267 1 123 1 268 4 98 2 197 5 367 1 124 1 200 2 201 18 251 1 
208 1 331 3 188 9 59 7 21 1 231 1 355 8 165 3 281 2 23 1 338 3 232 2 192 1 88 2 167 1 145 4 92 1 236 4 239 4 267 1 123 1 268 4 98 3 197 6 367 1 200 3 201 16 
331 3 257 1 188 3 197 6 59 4 201 7 165 1 190 3 338 3 10 3 232 1 44 1 251 2 
208 1 331 3 257 1 188 10 59 8 21 1 231 1 355 8 165 3 281 2 190 1 23 1 338 1 10 1 232 2 44 1 192 1 88 1 167 1 145 4 92 1 236 4 239 4 267 1 123 1 268 4 98 2 197 4 367 1 124 1 200 2 201 18 251 1 
125 1 13 1 302 1 139 1 84 1 15 1 116 1 
312 1 288 1 52 1 317 1 13 1 125 1 270 1 302 1 139 1 84 1 15 1 116 1 
245 1 233 1 16 1 0 1 303 1 219 1 284 1 186 1 358 1 210 1 308 1 
233 1 16 1 0 1 254 1 186 1 195 1 18 1 300 1 151 1 245 1 125 1 303 1 139 1 358 1 84 2 166 1 15 2 308 1 
16 1 0 1 254 2 186 1 18 1 300 1 139 1 261 1 84 2 358 2 142 1 166 1 308 1 233 3 289 1 67 2 195 2 151 1 12 1 245 1 125 2 321 1 248 1 15 2 
16 1 0 1 254 2 186 1 134 1 18 1 139 1 261 1 84 2 358 2 142 1 166 1 308 1 233 3 289 1 67 2 195 2 151 1 12 1 245 1 125 2 321 1 248 1 15 2 
16 1 0 1 254 1 73 1 108 2 186 1 19 1 332 1 113 1 137 1 84 1 358 1 142 1 308 1 233 4 45 1 169 1 289 1 67 1 195 1 151 1 12 1 47 1 245 1 125 1 371 1 28 1 273 1 178 1 179 2 15 1 226 1 
16 1 0 1 254 1 73 1 108 2 186 1 19 1 113 1 137 1 84 1 358 1 142 1 308 1 233 4 45 1 169 1 289 1 67 1 195 1 151 1 12 1 245 1 125 1 343 1 371 1 28 1 273 1 178 1 179 2 15 1 226 1 
245 1 286 1 16 1 0 1 186 1 308 1 
286 1 311 1 16 7 233 3 0 7 122 1 209 1 96 1 186 2 195 1 112 1 74 1 245 3 60 1 303 2 336 1 358 2 70 1 104 1 308 6 360 1 
0 1 331 2 186 1 188 3 283 1 140 1 190 1 139 2 84 2 10 1 232 1 42 1 44 1 145 2 233 1 234 1 236 2 149 1 239 2 195 1 151 1 197 2 152 1 241 1 245 1 201 6 15 2 251 1 16 1 254 1 257 1 161 2 18 1 300 1 59 3 355 4 165 1 307 1 358 1 166 1 308 1 362 2 363 1 268 2 124 1 125 1 70 1 
350 1 16 1 0 1 54 1 73 1 108 3 56 2 187 2 19 1 353 1 303 1 306 1 359 1 308 1 233 2 45 2 90 1 235 1 153 1 343 1 371 1 273 1 127 2 346 1 179 3 205 2 225 1 226 1 
286 1 16 2 233 2 0 2 122 1 186 1 195 1 221 1 245 2 371 1 358 1 70 1 308 2 
16 4 233 1 0 4 219 1 186 1 245 1 303 1 260 1 284 1 141 1 358 1 70 1 308 4 
16 2 233 1 0 2 121 1 186 1 195 1 12 1 136 1 74 1 245 2 60 1 358 1 308 2 295 1 
245 1 16 1 80 1 0 1 303 1 356 1 274 1 186 1 308 1 223 1 
16 2 233 1 0 2 209 1 96 1 186 1 245 1 358 1 70 1 308 2 144 1 
311 1 16 5 233 3 0 5 219 1 209 1 186 2 12 1 245 2 303 1 260 1 284 1 336 1 358 2 70 1 308 4 
16 5 233 3 0 5 219 1 209 1 186 2 211 1 12 1 245 2 303 1 260 1 284 1 336 1 358 2 70 1 308 4 
233 1 16 1 0 1 254 1 134 1 186 1 195 1 18 1 151 1 245 1 125 1 303 1 139 1 358 1 84 2 166 1 15 2 308 1 
16 1 233 1 0 1 122 1 186 1 195 1 12 1 74 1 245 2 60 1 358 1 104 1 308 1 
340 1 100 1 64 1 139 1 216 1 
340 1 255 1 73 1 64 2 67 1 108 2 36 1 19 1 318 1 153 1 279 1 100 2 139 1 261 1 248 1 337 1 216 2 179 2 226 1 
340 1 125 1 252 1 81 1 64 1 133 1 84 1 216 1 15 1 
340 1 279 1 36 1 
69 1 210 1 135 1 310 1 
244 1 297 1 365 1 69 1 41 1 135 1 310 1 
282 1 128 1 41 1 
297 1 365 3 135 1 240 2 244 1 163 1 202 1 138 1 69 1 41 3 103 1 310 1 
244 1 297 1 365 2 275 1 69 1 41 2 135 1 162 1 310 1 
297 1 160 1 365 1 244 1 76 1 80 1 138 1 356 1 41 1 69 1 263 1 
244 1 297 1 365 1 138 1 69 1 41 1 310 1 
244 1 297 1 365 1 138 1 41 1 135 1 310 2 
181 1 297 2 132 1 365 2 109 1 244 2 138 1 69 1 41 2 310 1 
297 1 160 1 365 3 135 1 162 2 244 1 259 1 138 1 272 1 41 3 69 2 310 1 11 1 
297 1 365 2 3 1 135 1 162 1 223 1 244 1 80 1 138 1 356 2 69 1 41 2 263 1 310 1 156 1 
297 2 160 1 365 4 135 1 162 2 244 2 213 1 138 1 275 1 41 4 69 2 310 1 11 1 
244 1 297 1 365 1 138 1 69 1 41 1 135 1 310 1 
297 1 160 1 365 4 135 2 240 1 162 2 163 1 244 1 164 1 41 4 69 3 103 1 310 2 11 1 
297 1 365 2 237 1 135 1 162 1 244 1 22 1 138 1 69 1 41 2 8 1 310 1 
297 1 365 3 35 1 135 1 240 2 244 1 163 2 138 1 69 1 41 3 103 1 310 1 
27 1 323 2 69 2 325 1 
244 1 297 1 365 1 138 1 262 1 41 1 
244 1 259 1 297 1 365 2 138 1 69 1 41 2 135 1 162 1 310 1 
95 1 
244 1 297 1 365 1 138 1 69 1 41 1 135 1 310 1 
297 1 365 3 135 1 162 1 240 1 244 1 259 1 138 1 41 3 69 1 310 1 
160 1 164 1 69 1 11 1 
69 1 310 1 
